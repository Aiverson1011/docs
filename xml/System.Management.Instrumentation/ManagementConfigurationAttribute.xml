<Type Name="ManagementConfigurationAttribute" FullName="System.Management.Instrumentation.ManagementConfigurationAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementConfigurationAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementConfigurationAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ManagementConfiguration 属性は、プロパティまたはフィールドが読み取り\/書き込み WMI プロパティを表していることを示します。  
  
 注: WMI .NET ライブラリは最終的な状態と見なされます。これらのライブラリに影響を与えるセキュリティ以外に関連する問題については、さらなる開発、機能拡張、または更新は利用できません。[MI API](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) は新しい開発すべてに使用する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The property or field must be public. The class that contains the property must be marked with the <xref:System.Management.Instrumentation.ManagementEntityAttribute> attribute.  
  
 Any fields or properties in the class that are not marked with this or another WMI Provider Extensions attribute will not be instrumented.  
  
   
  
## 例  
 The following example shows how to use the ManagementConfiguration attribute to mark a property. This property is exposed to WMI.  
  
 \[C\#\]  
  
```  
// Use the ManagementConfiguration attribute to specify that a property  
// is a read/write property in the provider. Consumers will be  
// able to get and set this property value through WMI.  
[ManagementConfiguration]  
public double ReadableWritableProperty  
{  
    get { return this.propertyValue; }  
    set { this.propertyValue = value; }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementConfigurationAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Management.ManagementConfigurationAttribute" /> クラスの新しいインスタンスを初期化します。 これは、既定のコンス トラクターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementConfigurationType Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementConfigurationType Mode" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementConfigurationType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはへの変更が直ちに適用するか、commit メソッドが呼び出されたときに指定すると、プロパティのモードを設定します。</summary>
        <value>返します。、 <see cref="T:System.Management.Instrumentation.ManagementConfigurationType" /> WMI プロパティを使用しているかどうかを示す <see cref="F:System.Management.Instrumentation.ManagementConfigurationType.Apply" /> または <see cref="F:System.Management.Instrumentation.ManagementConfigurationType.OnCommit" /> モードです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用してすべての読み取り\/書き込み WMI プロパティを更新する責任は定義されているコミット メソッドがある場合、 <xref:System.Management.Instrumentation.ManagementConfigurationType.OnCommit> モードです。 によって識別される、 <xref:System.Management.Instrumentation.ManagementCommitAttribute>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public Type Schema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Schema" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または ManagementConfiguration 属性でマークされているプロパティから返される出力の種類を定義する値を設定します。</summary>
        <value>A <see cref="T:System.Type" /> ManagementConfiguration 属性でマークされた、プロパティの出力の種類を表す値が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の型の場合 <xref:System.Object?displayProperty=fullName>, 、出力は、型の値として処理する必要があります <xref:System.Object?displayProperty=fullName>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>