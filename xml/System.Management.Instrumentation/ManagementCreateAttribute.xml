<Type Name="ManagementCreateAttribute" FullName="System.Management.Instrumentation.ManagementCreateAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementCreateAttribute : System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementCreateAttribute extends System.Management.Instrumentation.ManagementNewInstanceAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementCreateAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementNewInstanceAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ManagementCreateAttribute は、メソッドがマネージ エンティティの新しいインスタンスを作成することを示すために使用されます。  
  
 注: WMI .NET ライブラリは最終的な状態と見なされます。これらのライブラリに影響を与えるセキュリティ以外に関連する問題については、さらなる開発、機能拡張、または更新は利用できません。[MI API](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) は新しい開発すべてに使用する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The lifetime of a managed entity is not bound to the lifetime of the .NET object representing it. The provider can use the method marked with this attribute to create a new instance of the corresponding managed entity.  
  
 The method parameters should have the same name and type as the parameters of the class binding constructor.  
  
 Use of this attribute does not have any affect on registration of the WMI class in the repository. It is only used at runtime.  
  
   
  
## 例  
 The following example demonstrates how to use the ManagementCreate attribute.  
  
```  
[ManagementEntity]  
public class ProcessInstance  
{  
     [ManagementKey]  
     public int Id;   
  
     [ManagementCreate]  
     public ProcessInstance StartProcess(string cmdLine)  
     {  
        ProcessInstance newProcess = new ProcessInstance(cmdLine);  
        newProcess.Start();  
        return newProcess;  
     }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementCreateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Management.ManagementCreateAttribute" /> クラスの新しいインスタンスを初期化します。 これは、既定のコンス トラクターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>