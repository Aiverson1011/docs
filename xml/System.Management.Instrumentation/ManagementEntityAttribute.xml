<Type Name="ManagementEntityAttribute" FullName="System.Management.Instrumentation.ManagementEntityAttribute">
  <TypeSignature Language="C#" Value="public sealed class ManagementEntityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEntityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEntityAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ManagementEntity 属性は、クラスが WMI プロバイダーを通じて公開される管理情報を提供することを示します。  
  
 注: WMI .NET ライブラリは最終的な状態と見なされます。これらのライブラリに影響を与えるセキュリティ以外に関連する問題については、さらなる開発、機能拡張、または更新は利用できません。[MI API](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) は新しい開発すべてに使用する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The class marked by this attribute must be public.  
  
   
  
## 例  
 The following example shows how to use the ManagementEntity attribute to mark a class.  
  
```  
// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  
// provider.  
  
    [ManagementEntity(Name = "MortgageCalc")]  
    public class MortgageCalcWMIProvider  
    {  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEntityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Management.ManagementEntityAttribute" /> クラスの新しいインスタンスを初期化します。 これは、既定のコンス トラクターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターでは、名前のパラメーターは考慮しません。 使用して名前を指定しない場合、 [ManagementEntityAttribute](<!-- TODO: review code entity reference <xref:assetId:///Name?qualifyHint=False&amp;autoUpgrade=True>  -->) パラメーター、関連付けられている WMI クラスの名前は既定で、属性クラスの名前。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="External">
      <MemberSignature Language="C#" Value="public bool External { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool External" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のアセンブリにクラスが実装されているプロバイダーの WMI クラスを表すかどうかを指定する値を外部に設定します。</summary>
        <value>クラスを表している場合、外部の WMI クラスと false それ以外の場合は true になるブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既存の抽象 WMI クラスを拡張するクラスを実装するプロバイダーを実装するときに使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または WMI クラスの名前を設定します。</summary>
        <value>WMI クラスの名前を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定して、WMI クラスの名前を指定しない場合、WMI クラスには、属性クラスの名前が既定されます。  
  
   
  
## 例  
 次の例では、Name パラメーターを使用してを MortgageCalcWMIProvider クラスによって表される WMI クラスの名前を設定します。 MortgageCalculator 名前に設定します。 パラメーターは名前が使用されて、対応する c\# クラス名場合、MortgageCalcWMIProvider ここでとして使用 WMI クラスの名前。  
  
```  
[ManagementEntity(Name = "MortgageCalculator")]  
public class MortgageCalcWMIProvider  
{  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public bool Singleton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Singleton" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられたクラスがシングルトン WMI クラスを表すかどうかを指定します。</summary>
        <value>クラスを表している場合、シングルトン WMI クラスと false それ以外の場合は true になるブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シングルトン WMI クラスでは、存在できるだけできるようにする 1 つのインスタンスです。 WMI クラスのインスタンスが 1 つだけが作成されることを確認するためのロジックをコーディングできますが、簡単かつ一貫性のあるタスクを作成このパラメーターの属性が提供されています。  
  
 シングルトン WMI クラスを使用する場合、クライアント アプリケーションは、特別な構文を使用する必要があります。 詳細については、記述するを参照してください。 MSDN オンライン ライブラリで、インスタンス オブジェクト パスにおける [http:\/\/www.msdn.com](http://www.msdn.com/)します。  
  
   
  
## 例  
 次のコード スニペットでは、c\# クラスがシングルトン WMI クラスに対応しているかを示す単一のパラメーターを使用する方法を示します。  
  
```  
[ManagementEntity(Singleton=true)]  
public class SingletonSample  
```  
  
 シングルトン クラスを実装するプロバイダーの作業例の場合、次を参照してください。 [How to: Create a Basic Decoupled Provider](http://msdn.microsoft.com/ja-jp/1dabd442-c1ff-40a1-bb0e-d7b3566c2300)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>