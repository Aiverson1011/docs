<Type Name="AssemblyInfo" FullName="Microsoft.VisualBasic.ApplicationServices.AssemblyInfo">
  <TypeSignature Language="C#" Value="public class AssemblyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi AssemblyInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>バージョン番号、説明、読み込まれたアセンブリなど、アプリケーションに関する情報を取得するためには、プロパティを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって公開されるプロパティの一部、`My.Application.Info`オブジェクトには、アプリケーションのアセンブリ情報が返されます。 アプリケーションのアセンブリ内の情報を設定するに使用する必要があります、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
 `My.Application.Info`オブジェクトと同様の機能を提供する、<xref:System.Diagnostics.FileVersionInfo>クラスが、最も一般的なプロパティにすばやくアクセスできるようにスコープが設定されます。  
  
 その他のプロパティなど`LoadedAssemblies`アプリケーションの現在の状態へのアクセスを提供します。  
  
   
  
## 例  
 この例では、`My.Application.Info.Version`プロパティをアプリケーションのバージョンを表示します。  
  
 [!code-vb[VbVbalrMyApplication\#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
    <altmember cref="T:System.Diagnostics.FileVersionInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyInfo (System.Reflection.Assembly currentAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.Reflection.Assembly currentAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="currentAssembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="currentAssembly">
          <see cref="T:System.Reflection.Assembly" />。 情報を取得する対象のアセンブリ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo" />指定したアセンブリの情報を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのアセンブリ ファイルの拡張子なしの名前を取得します。</summary>
        <value>A<see langword="String" />ファイル名を含むです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.AssemblyName`プロパティは、マニフェストを含むファイルの名前を取得します。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、`My.Application.Info.AssemblyName`プロパティをアプリケーションの名前を表示します。  
  
 [!code-vb[VbVbalrMyApplication\#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている会社名を取得します。</summary>
        <value>A<see langword="String" />アプリケーションに関連付けられている会社名を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.CompanyName`プロパティは、アプリケーションに関連付けられている会社名を取得します。  
  
 値を変更することで、会社名を変更する**会社**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、`My.Application.Info.CompanyName`プロパティをアプリケーションに関連付けられている会社名を表示します。  
  
 [!code-vb[VbVbalrMyApplication\#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリがない、<see cref="T:System.Reflection.AssemblyCompanyAttribute" />属性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Copyright">
      <MemberSignature Language="C#" Value="public string Copyright { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Copyright" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている著作権情報を取得します。</summary>
        <value>A<see langword="String" />アプリケーションに関連付けられている著作権情報を格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.Copyright`プロパティは、アプリケーションに関連付けられている著作権表示を取得します。  
  
 値を変更することによって、著作権の通知を変更することができます**著作権**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**ウィンドウの**プロジェクト デザイナー**です。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、`My.Application.Info.Copyright`プロパティをアプリケーションに関連付けられている会社名を表示します。  
  
 [!code-vb[VbVbalrMyApplication\#22](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリがない、<see cref="T:System.Reflection.AssemblyCopyrightAttribute" />属性。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられた説明を取得します。</summary>
        <value>A <see langword="String" /> 、アプリケーションに関連付けられた説明を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.Description` プロパティは、アプリケーションに関連付けられた説明を取得します。  
  
 値を変更することで、説明を変更する **説明** で、 **アセンブリ情報** \] ダイアログ ボックスからアクセスできる、 **アプリケーション** のウィンドウ、 **プロジェクト デザイナー**します。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.Description` プロパティをアプリケーションに関連付けられた説明を表示します。  
  
 [!code-vb[VbVbalrMyApplication\#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリがない、 <see cref="T:System.Reflection.AssemblyDescriptionAttribute" /> 属性です。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションが格納されているディレクトリを取得します。</summary>
        <value>A <see langword="String" /> アプリケーションが格納されているディレクトリを格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.DirectoryPath` プロパティは、アプリケーションが格納されているディレクトリを取得します。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.DirectoryPath` プロパティをアプリケーションを保存するディレクトリ パスを表示します。  
  
 [!code-vb[VbVbalrMyApplication\#24](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="LoadedAssemblies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt; LoadedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Reflection.Assembly&gt; LoadedAssemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Reflection.Assembly&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションによって読み込まれたすべてのアセンブリのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> の <see cref="T:System.Reflection.Assembly" /> すべてのアセンブリを含む、アプリケーションによって読み込まれます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.LoadedAssemblies` プロパティは、 <xref:System.AppDomain.GetAssemblies%2A> メソッドです。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.LoadedAssemblies` アセンブリを表示するプロパティが、アプリケーションによって読み込まれます。  
  
 [!code-vb[VbVbalrMyApplication\#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#25)]  
  
 この例では、Windows フォーム アプリケーションがある必要があります、 <xref:System.Windows.Forms.ListBox> という名前のコントロール `ListBox1`します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.AppDomainUnloadedException">アプリケーション ドメインは読み込まれません。</exception>
        <altCompliant cref="None." />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />
        <altmember cref="T:System.Reflection.Assembly" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている製品名を取得します。</summary>
        <value>A <see langword="String" /> アプリケーションに関連付けられている製品名を格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.ProductName` プロパティは、アプリケーションに関連付けられている製品名を取得します。  
  
 値を変更することで、製品名を変更する **製品** で、 **アセンブリ情報** \] ダイアログ ボックスからアクセスできる、 **アプリケーション** のウィンドウ、 **プロジェクト デザイナー**します。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.ProductName` プロパティをアプリケーションに関連付けられている製品名を表示します。  
  
 [!code-vb[VbVbalrMyApplication\#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリがない、 <see cref="T:System.Reflection.AssemblyProductAttribute" /> 属性です。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスタック トレース情報を取得します。</summary>
        <value>A <see langword="String" /> 現在のスタック トレース情報を格納します。 戻り値が <see cref="F:System.String.Empty" /> になる場合もあります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.StackTrace` プロパティは、逆時系列でメソッドの呼び出しリスト、つまり、最初に、最新のメソッド呼び出しについて説明し、行ごとにスタックの各メソッド呼び出しが一覧表示されます。 ただし、 `My.Application.Info.StackTrace` プロパティは多くのメソッド呼び出しの最適化時に実行されたコード変換が、期待どおり、報告可能性があります。  
  
 通常は、スタック トレース情報は、アプリケーションのデバッグに使用されます。  
  
 各メソッド呼び出しのスタック トレース情報の形式は次のとおりです。  
  
 "で *FullClassName*.*MethodName*\(*MethodParams*\) で *FileName*: 行 *LineNumber* "  
  
 次の 3 つのスペース、および"in"リテラルは後に「アット」リテラルと": 行"デバッグ シンボルを使用できない場合は省略します。 プレース ホルダー `FullClassName`, 、`MethodName`, 、`MethodParams`, 、`FileName`, 、および `LineNumber` が次のように定義されている実際の値で置き換えられます。  
  
|パーツ|説明|  
|---------|--------|  
|*FullClassName*|名前空間を含むクラスの完全名。|  
|*MethodName*|メソッドの名前。|  
|*MethodParams*|パラメーターの型と名前の組み合わせの一覧。 各ペアはコンマ \(,\) で区切られます。 場合にこの情報は省略 *MethodName* 0 パラメーターを受け取ります。|  
|*FileName*|ファイルの場所をソースの名前、 *MethodName* メソッドを宣言します。 デバッグ シンボルを使用できない場合、この情報は省略されます。|  
|*行番号*|内の行の数 *FileName* からソース コードを含む *MethodName* コール スタック上にある命令のです。 デバッグ シンボルを使用できない場合、この情報は省略されます。|  
  
 `My.Applicaiton.Info.StackTrace` プロパティと同様の機能を提供する、 <xref:System.Environment.StackTrace%2A> プロパティです。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.StackTrace` プロパティをアプリケーション コードが実行されるポイントからのスタック トレースを表示します。  
  
 [!code-vb[VbVbalrMyApplication\#27](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">要求されたスタック トレース情報は、範囲外です。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access information in the file paths. Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.StackTrace" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられているタイトルを取得します。</summary>
        <value>A <see langword="String" /> を含む、 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> アプリケーションに関連付けられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.Title` プロパティは、アプリケーションに関連付けられているタイトルを取得します。  
  
 値を変更することで、タイトルを変更する **タイトル** で、 **アセンブリ情報** \] ダイアログ ボックスからアクセスできる、 **アプリケーション** のウィンドウ、 **プロジェクト デザイナー**します。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.Title` プロパティをアプリケーションに関連付けられているタイトルを表示します。  
  
 [!code-vb[VbVbalrMyApplication\#28](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリがない、 <see cref="T:System.Reflection.AssemblyTitleAttribute" /> 属性です。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Trademark">
      <MemberSignature Language="C#" Value="public string Trademark { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Trademark" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションに関連付けられている商標表記を取得します。</summary>
        <value>A <see langword="String" /> 商標表記を含む、アプリケーションに関連付けられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.Trademark` プロパティは、アプリケーションに関連付けられている商標表記を取得します。  
  
 値を変更することで商標表記を変更する **商標** で、 **アセンブリ情報** \] ダイアログ ボックスからアクセスできる、 **アプリケーション** のウィンドウ、 **プロジェクト デザイナー**します。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.Trademark` プロパティをアプリケーションに関連付けられている商標情報を表示します。  
  
 [!code-vb[VbVbalrMyApplication\#29](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">アセンブリがない、 <see cref="T:System.Reflection.AssemblyTrademarkAttribute" /> 属性です。</exception>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのバージョン番号を取得します。</summary>
        <value>A <see cref="T:System.Version" /> 、アプリケーションのバージョン番号を格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.Version` プロパティを取得、 <xref:System.Version> 、アプリケーションのバージョン番号を格納するオブジェクト。 使用することができます、 <xref:System.Version.Major%2A>, 、<xref:System.Version.Minor%2A>, 、<xref:System.Version.Build%2A>, 、および <xref:System.Version.Revision%2A> のプロパティ、 <xref:System.Version> アプリケーションに関する特定のバージョン情報にアクセスするオブジェクト。  
  
 ClickOnce で展開されたアプリケーションを使用する必要があります、 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> のプロパティ、 <xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A> プロパティです。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.Version` プロパティをアプリケーションのバージョンを表示します。  
  
 [!code-vb[VbVbalrMyApplication\#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">アプリケーションには、アセンブリのバージョンにアクセスするための十分なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controls the ability to access files and folders. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment" />
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
        <altmember cref="T:System.Version" />
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセス コンテキストに割り当てられる物理メモリ量を取得します。</summary>
        <value>A <see langword="Long" /> プロセス コンテキストに割り当てられる物理メモリのバイト数を格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `My.Application.Info.WorkingSet` プロパティと同じ動作には、 <xref:System.Environment.WorkingSet%2A> プロパティです。  
  
> [!NOTE]
>  このプロパティは、常に Windows 98 および Windows Millennium Edition の場合は 0 を返します。  
  
## プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|---------------|----------|  
|Windows フォーム アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows フォーム コントロール ライブラリ|**はい**|  
|Web コントロール ライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## 例  
 この例では、 `My.Application.Info.WorkingSet` プロパティをアプリケーションに割り当てられる物理メモリのバイト数を表示します。  
  
 [!code-vb[VbVbalrMyApplication\#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">部分的に信頼が存在すると、ユーザーの状況では、必要なアクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controls the ability to access all environment variables. Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.ApplicationBase.Info" />
        <altmember cref="P:System.Environment.WorkingSet" />
      </Docs>
    </Member>
  </Members>
</Type>