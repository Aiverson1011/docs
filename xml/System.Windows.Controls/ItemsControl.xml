<Type Name="ItemsControl" FullName="System.Windows.Controls.ItemsControl">
  <TypeSignature Language="C#" Value="public class ItemsControl : System.Windows.Controls.Control, System.Windows.Controls.Primitives.IContainItemStorage, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ItemsControl extends System.Windows.Controls.Control implements class System.Windows.Controls.Primitives.IContainItemStorage, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ItemsControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IContainItemStorage</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("OnItemsChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Items")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>項目のコレクションを表示するために使用するコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ItemsControl> の種類は、 <xref:System.Windows.Controls.Control> 文字列、オブジェクト、またはその他の要素などの複数の項目を含むことができます。 次の図は、 <xref:System.Windows.Controls.ListBox> 次の種類の項目を格納しているコントロール。  
  
-   文字列。  
  
-   <xref:System.DateTime> オブジェクト。  
  
-   <xref:System.Windows.UIElement> オブジェクト。  
  
-   A <xref:System.Windows.Controls.Panel> コントロールが含まれていますが、 <xref:System.Windows.Shapes.Ellipse> と <xref:System.Windows.Controls.TextBlock>です。  
  
 6e1426fc-7718-471a-9a23-50414387e243  
複数の種類のオブジェクトを含む ListBox  
  
 いずれかの方法、 <xref:System.Windows.Controls.ItemsControl.Items%2A> または <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> のコンテンツの生成に使用するコレクションを指定するプロパティ、 <xref:System.Windows.Controls.ItemsControl>です。 設定することができます、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティを実装する任意の型を <xref:System.Collections.IEnumerable>します。<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 通常は、データ コレクションを表示するか、バインドを使用する <xref:System.Windows.Controls.ItemsControl> コレクション オブジェクトにします。  
  
 実装するオブジェクトを使用しないかどうかは <xref:System.Collections.IEnumerable> を設定する、 <xref:System.Windows.Controls.ItemsControl>, 、項目を追加するにを使用して、 <xref:System.Windows.Controls.ItemsControl.Items%2A> プロパティです。 内の項目、 <xref:System.Windows.Controls.ItemsControl> 異なる型であることができます。 たとえば、 <xref:System.Windows.Controls.ListBox> 文字列は、1 つの項目とは別のアイテムを含めることができます、 <xref:System.Windows.Controls.Image>です。  
  
 ときに、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティが設定されて、 <xref:System.Windows.Controls.ItemsControl.Items%2A> コレクションが読み取り専用との固定サイズに設定されています。 これは、追加できないことの項目をコレクションに直接ことを意味します。<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> を使用して、プロパティを設定するのには、 `null` コレクションを削除し、使用状況を復元 <xref:System.Windows.Controls.ItemsControl.Items%2A>, 、空になる予定 <xref:System.Windows.Controls.ItemCollection>します。  
  
 各 <xref:System.Windows.Controls.ItemsControl> 型に対応する項目コンテナーの型。 それぞれの対応する項目コンテナー <xref:System.Windows.Controls.ItemsControl> 追加 `Item` の名前にします。 たとえば、 <xref:System.Windows.Controls.ListBox>, 、項目コンテナーは <xref:System.Windows.Controls.ListBoxItem> が制御を <xref:System.Windows.Controls.ComboBox>, は <xref:System.Windows.Controls.ComboBoxItem> コントロールです。 内の各アイテムのコンテナーの種類を明示的に作成することができます、 <xref:System.Windows.Controls.ItemsControl>, 、必要はありません。 コンテナーの種類を明示的に作成しないと、アイテム コレクション内のデータ項目を含むが 1 つ生成されます。 文字列オブジェクトのコレクションをバインドする場合など、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> のプロパティ、 <xref:System.Windows.Controls.ListBox>, 、明示的に作成しない <xref:System.Windows.Controls.ListBoxItem> 、オブジェクトが、 <xref:System.Windows.Controls.ListBox> 文字列ごとに 1 つが生成されます。 使用して生成された項目のコンテナーにアクセスすることができます、 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> プロパティです。  
  
> [!NOTE]
>  UI オートメーションの特定の機能が正常に動作しないときに、 <xref:System.Windows.Controls.ItemsControl> 重複するオブジェクトが含まれています。   オブジェクトでは、何度も表示されている場合は、オートメーション ツリーに最初のインスタンスのみが表示されます。   \(2 つのオブジェクト **x** と **y** は重複と見なさ場合 `Object.Equals(x, y)` 返します `true`.\)  
>   
>  オブジェクトを while **x** によって使用されて、 <xref:System.Windows.Controls.ItemsControl> によって返される値 **x.**`GetHashCode()` は変更しないでください。  この値を変更は、予期しない動作がサポートされていない場合、原因となるです。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。 プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。 詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
   
  
## 例  
 次の例では、データをバインドする、 <xref:System.Windows.Controls.ItemsControl>です。 最初の例と呼ばれるクラスを作成する `MyData` は単純な文字列のコレクション。  
  
 [!code-csharp[ControlContentOverviewSnippets\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#8)]
 [!code-vb[ControlContentOverviewSnippets\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#8)]  
  
 次の例ではバインド、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> のオブジェクト、 <xref:System.Windows.Controls.ItemsControl> に `MyData`します。  
  
 [!code-xml[ControlContentOverviewSnippets#7](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#7)]  
[!code-xml[ControlContentOverviewSnippets#6](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#6)]  
  
 [!code-csharp[ControlContentOverviewSnippets\#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#9)]
 [!code-vb[ControlContentOverviewSnippets\#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#9)]  
  
 次の図は、 <xref:System.Windows.Controls.ListBox> 前の例で作成されたコントロール。  
  
 e970ca3d-db86-4702-afb9-80392c01def5  
  
 次の例では、設定する方法について、 <xref:System.Windows.Controls.ItemsControl> を使用して、 <xref:System.Windows.Controls.ItemsControl.Items%2A> プロパティです。 例では、追加する項目の次のさまざまな種類、 <xref:System.Windows.Controls.ListBox>:  
  
-   文字列。  
  
-   <xref:System.DateTime> オブジェクト。  
  
-   <xref:System.Windows.UIElement> オブジェクト。  
  
-   A <xref:System.Windows.Controls.Panel> を含むその他のコントロール <xref:System.Windows.UIElement> オブジェクトです。  
  
 [!code-xml[ControlContentOverviewSnippets\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[ControlContentOverviewSnippets\#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#4)]
 [!code-vb[ControlContentOverviewSnippets\#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#4)]  
  
 次の図は、 <xref:System.Windows.Controls.ListBox> 前の例で作成します。  
  
 6e1426fc-7718-471a-9a23-50414387e243  
  
 次の例では、さまざまなスタイルとによって提供されるテンプレートに関連するプロパティを使用する方法、 <xref:System.Windows.Controls.ItemsControl>です。<xref:System.Windows.Controls.ItemsControl> この例では、コレクションにバインドされている `Task` オブジェクトです。 デモの目的で、スタイルおよびテンプレートをこの例では、すべてインラインで宣言されてです。  
  
 [!code-xml[DataTemplatingIntro\_snip\#ItemsControlProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemscontrolproperties)]  
  
 次の図は、レポートが表示される例のスクリーン ショットを示します。  
  
 1baf09b4-29b6-412c-8f8a-fc633e702a84  
  
 2 つの他のスタイル関連プロパティ、 <xref:System.Windows.Controls.ItemsControl> ここでは表示されていない <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> と <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ItemCollection" />
    <altmember cref="T:System.Windows.Controls.ItemContainerGenerator" />
    <altmember cref="T:System.Windows.Controls.ItemsPresenter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemsControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">子として追加するオブジェクト。</param>
        <summary>指定したオブジェクトを <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの子として追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">追加する文字列。</param>
        <summary>指定したテキスト文字列を <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>代替コンテナーに独自の外観を与える <see cref="T:System.Windows.Controls.ItemsControl" /> 内にある、代替項目コンテナーの数を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ItemsControl" /> 内の代替項目コンテナーの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> and <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> properties enable you to specify the appearance for two or more alternating item containers. For example, you can specify alternating background colors for every third item in an <xref:System.Windows.Controls.ItemsControl>.  The <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> is assigned to each item container in the <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> begins at 0, increments until it is <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> minus 1, and then restarts at 0. For example, if <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> is 3 and there are seven items in the <xref:System.Windows.Controls.ItemsControl>, the following table lists the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> for each item.  
  
|Position of Item in the <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 There are several methods you can use to specify different appearances for the alternating item containers. One method is to bind properties of the items container to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>. You can then use an <xref:System.Windows.Controls.AlternationConverter> to specify which value should be applied to the item container that has a certain <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> value. You can also use triggers to change the value of an item container's property depending on the value of its <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>.  
  
   
  
## 例  
 The following example specifies that the <xref:System.Windows.Controls.ListBox> \(which inherits from <xref:System.Windows.Controls.ItemsControl>\) has alternating item containers \(which are of type <xref:System.Windows.Controls.ListBoxItem>\) and specifies a different background and foreground for each one.  The example binds the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties to the <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and provides an <xref:System.Windows.Controls.AlternationConverter> for each property.  
  
 [!code-xml[AlternationIndexSnippets\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#2)]  
  
 The following example does the same as the previous example by using <xref:System.Windows.Trigger> objects.  
  
 [!code-xml[AlternationIndexSnippets\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCountProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AlternationCountProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AlternationCountProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.AlternationCountProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AlternationIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AlternationIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.AlternationIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public override void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの初期化が間もなく開始することを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">コンテナー要素。</param>
        <param name="item">項目。</param>
        <summary>派生クラスの中でオーバーライドした場合、<see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" /> メソッドの効果を元に戻します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The base implementation does nothing.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="ContainerFromElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject ContainerFromElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject ContainerFromElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">コンテナーを返す要素。</param>
        <summary>特定のコンテナー要素を所有している現在の <see cref="T:System.Windows.Controls.ItemsControl" /> に属しているコンテナーを返します。</summary>
        <returns>特定のコンテナー要素を所有している現在の <see cref="T:System.Windows.Controls.ItemsControl" /> に属しているコンテナー。そのようなコンテナーが存在しない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="ContainerFromElement">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject ContainerFromElement (System.Windows.Controls.ItemsControl itemsControl, System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject ContainerFromElement(class System.Windows.Controls.ItemsControl itemsControl, class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsControl" Type="System.Windows.Controls.ItemsControl" />
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="itemsControl">コンテナーを返す対象の <see cref="T:System.Windows.Controls.ItemsControl" />。</param>
        <param name="element">コンテナーを返す要素。</param>
        <summary>特定のコンテナー要素を所有する、指定された <see cref="T:System.Windows.Controls.ItemsControl" /> に属しているコンテナーを返します。</summary>
        <returns>
          <paramref name="itemsControl" /> が <see langword="null" /> でない場合、指定された要素を所有する、指定された <see cref="T:System.Windows.Controls.ItemsControl" /> に属するコンテナー。<paramref name="itemsControl" /> が <see langword="null" /> の場合、いずれかの <see cref="T:System.Windows.Controls.ItemsControl" /> に属するコンテナーのうち最も近いものを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPath">
      <MemberSignature Language="C#" Value="public string DisplayMemberPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMemberPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトを視覚的に表現するために使用される、ソース オブジェクト上の値へのパスを取得または設定します。</summary>
        <value>ソース オブジェクトでの値へのパス。 これには任意のパスか、または "@Name" などの XPath を指定できます。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property is a simple way to define a default template that describes how to display the data objects.  
  
<a name="dependencyPropertyInfo_DisplayMemberPath"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
   
  
## 例  
 In the following example, the static resource named `places` is defined as a collection of `Place` objects, in which each `Place` object has a `CityName` property and a `State` property. The prefix `src` is mapped to the namespace where the data source `Places` is defined. The prefixes `scm` and `dat` are mapped to the <xref:System.ComponentModel> and <xref:System.Windows.Data> namespaces, respectively.  
  
 The following example creates a view of the data collection that is sorted by the city name and grouped by the state.  
  
 [!code-xml[CollectionViewSource\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionViewSource/CS/window1.xaml#1)]  
  
 The view can be a binding source, as in the following example. Because of the specified <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A>, each**newTerm tag is not supported!!!!**  
`Place` object is shown with its `CityName` value. If <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> is not specified and there is no <xref:System.Windows.DataTemplate>, then the <xref:System.Windows.Controls.ListBox> displays a string representation of each object in the underlying collection \(in this case, "SDKSample.Place"\).  
  
 [!code-xml[CollectionViewSource\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CollectionViewSource/CS/window1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberPathProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayMemberPathProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayMemberPathProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public override void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの初期化が完了したことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlternationIndex">
      <MemberSignature Language="C#" Value="public static int GetAlternationIndex (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetAlternationIndex(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.GetAlternationIndex(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> の取得元のオブジェクト。</param>
        <summary>指定したオブジェクトの <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> を取得します。</summary>
        <returns>
          <see cref="P:System.Windows.Controls.ItemsControl.AlternationIndex" /> の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定した項目の表示に使用される要素を作成または識別します。</summary>
        <returns>指定した項目の表示に使用される要素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="GetItemsOwner">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ItemsControl GetItemsOwner (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ItemsControl GetItemsOwner(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">ホストの要素。</param>
        <summary>指定した要素が項目をホストする <see cref="T:System.Windows.Controls.ItemsControl" /> を返します。</summary>
        <returns>指定した要素が項目をホストする <see cref="T:System.Windows.Controls.ItemsControl" />、または <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 <xref:System.Windows.Controls.Panel.IsItemsHost%2A> に設定されている `true` に `element` スタイルの場合、または `element` によって作成されたパネル、 <xref:System.Windows.Controls.ItemsPresenter> の <xref:System.Windows.Controls.ItemsControl>, 、 <xref:System.Windows.Controls.ItemsControl> を返します。 それ以外の場合、 `null`です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupStyle">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.GroupStyle&gt; GroupStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ObservableCollection`1&lt;class System.Windows.Controls.GroupStyle&gt; GroupStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.GroupStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ObservableCollection&lt;System.Windows.Controls.GroupStyle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループの各レベルの外観を定義する <see cref="T:System.Windows.Controls.GroupStyle" /> オブジェクトのコレクションを取得します。</summary>
        <value>グループの各レベルの外観を定義する <see cref="T:System.Windows.Controls.GroupStyle" /> オブジェクトのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インデックス 1 のエントリについて説明します。 次のレベルをインデックス 0 にあるエントリは、最上位レベルのグループを説明します。 コレクション内のエントリよりもグループ化のレベルがある場合は、余分なレベルの最後の入力を使用します。  
  
<a name="xamlPropertyElementUsage_GroupStyle"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.GroupStyle>  
    OneOrMoreGroupStyleObjects  
  </object.GroupStyle>  
</object>  
  
```  
  
<a name="xamlValues_GroupStyle"></a>   
## XAML 値  
 *OneOrMoreGroupStyleObjects*  
 1 つまたは複数 <xref:System.Windows.Controls.GroupStyle> オブジェクトです。  
  
   
  
## 例  
 次の例、 <xref:System.Windows.Controls.ItemsControl> にバインドされた、 <xref:System.Windows.Data.XmlDataProvider> とを追加し、グループ化を解除するためのロジックを含むコードの内容。 チェック ボックスをチェックするときのコンテンツ、 <xref:System.Windows.Controls.ItemsControl> によってグループ化、 `Type` 属性です。  
  
 各グループのタイプは <xref:System.Windows.Data.CollectionViewGroup>です。<xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> として表示されるように指定された、 <xref:System.Windows.Controls.TextBlock> を表示する、 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> それぞれのグループです。  ここで、 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> か `Work` または `Home`です。  
  
 [!code-xml[GroupingSample\#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample\#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample\#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" />
      </Docs>
    </Member>
    <Member MemberName="GroupStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.GroupStyleSelector GroupStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.GroupStyleSelector GroupStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.GroupStyle" /> をコレクション内の各グループに適用するカスタム選択ロジックを用意するためのメソッドを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.GroupStyle" /> をコレクション内の各グループに適用するカスタム選択ロジックを用意するためのメソッド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_GroupStyleSelector"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.PropertyGroupDescription" />
      </Docs>
    </Member>
    <Member MemberName="GroupStyleSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GroupStyleSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GroupStyleSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasItems">
      <MemberSignature Language="C#" Value="public bool HasItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.HasItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> に項目が含まれているかどうかを示す値を取得します。</summary>
        <value>項目数が 0 より大きい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_HasItems"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.ItemsControl.HasItemsProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasItemsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.HasItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.HasItems" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGrouping">
      <MemberSignature Language="C#" Value="public bool IsGrouping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGrouping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.IsGrouping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがグループ化を使用しているかどうかを示す値を取得します。</summary>
        <value>コントロールがグループ化を使用している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_IsGrouping"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.IsGroupingProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGroupingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsGroupingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsGroupingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.IsGroupingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainer">
      <MemberSignature Language="C#" Value="public bool IsItemItsOwnContainer (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsItemItsOwnContainer(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainer(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">確認する項目。</param>
        <summary>指定された項目が独自のコンテナーであるか \(または独自のコンテナーとすることが可能か\) どうかを判断します。</summary>
        <returns>項目が独自のコンテナーである \(または独自のコンテナーの対象である\) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、<xref:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride%2A> メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected virtual bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">確認する項目。</param>
        <summary>指定された項目が独自のコンテナーであるか \(または独自のコンテナーとすることが可能か\) どうかを判断します。</summary>
        <returns>項目が独自のコンテナーである \(または独自のコンテナーの対象である\) 場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchCaseSensitive">
      <MemberSignature Language="C#" Value="public bool IsTextSearchCaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearchCaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目を検索するときに、大文字\/小文字の区別が条件かどうかを示す値を取得または設定します。</summary>
        <value>テキスト検索で大文字小文字が区別される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabled%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive%2A> プロパティは、大文字と小文字がの項目を選択するかどうかを決定するかどうかを指定、 <xref:System.Windows.Controls.ItemsControl>です。 たとえば場合、 <xref:System.Windows.Controls.ItemsControl> 大文字と小文字だけ、"ITEM"、"item"など、最初の文字列が常に選択、入力の大文字と小文字に関係なくが異なる 2 つの文字列が含まれます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.ComboBox> 、文字列、"および DOG"、"CAT"、"dog"および"cat"が含まれています。 この例で、 <xref:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive%2A> プロパティを <xref:System.Windows.Controls.Primitives.ToggleButton.IsChecked%2A> のプロパティ、 <xref:System.Windows.Controls.CheckBox>です。 チェック ボックスが選択した場合、ユーザー入力の 3 番目の項目では"dog"、 <xref:System.Windows.Controls.ItemsControl> が選択されています。 チェック ボックスをオンおよび"dog"の種類の選択を解除するユーザーの場合は、検索の条件ではないために、最初の項目が選択されます。  
  
 [!code-xml[ComboBoxProps\_snip\#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchCaseSensitiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTextSearchCaseSensitiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTextSearchCaseSensitiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchCaseSensitive" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchEnabled">
      <MemberSignature Language="C#" Value="public bool IsTextSearchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextSearchEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> インスタンスで <see cref="T:System.Windows.Controls.TextSearch" /> が有効かどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> が有効な場合は <see cref="T:System.Windows.Controls.TextSearch" />、それ以外の場合は <see langword="false" /> を指定します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_IsTextSearchEnabled"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextSearchEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTextSearchEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTextSearchEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> の各項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ItemsControl" /> の各項目にコピーされる <see cref="T:System.Windows.Data.BindingGroup" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定すると、 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> プロパティには、各項目のコンテナーを取得、 <xref:System.Windows.Data.BindingGroup> を持つ同じ <xref:System.Windows.Controls.ValidationRule> としてオブジェクトの <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, など、バインド内のデータを記述するプロパティが、 <xref:System.Windows.Data.BindingGroup.Items%2A> と <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, 、内の各項目のデータに固有の <xref:System.Windows.Controls.ItemsControl>です。  アイテムのコンテナーにアクセスする必要があります <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> を実行する操作などの検証データと項目のエラーを確認します。  
  
   
  
## 例  
 次の例を複数の顧客を入力し、各顧客に販売担当者を割り当てるユーザーの入力を要求するアプリケーションの一部であり営業担当者と顧客が同じリージョンに属していることを確認します。 設定すると、例を <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> の <xref:System.Windows.Controls.ItemsControl> ため、 <xref:System.Windows.Controls.ValidationRule>, 、`AreasMatch`, 、各項目を検証します。 この例でも作成、 <xref:System.Windows.Controls.Label> 妥当性確認エラーを表示します。 注意して、 <xref:System.Windows.Controls.ContentControl.Content%2A> の <xref:System.Windows.Controls.Label> にバインドされて、 <xref:System.Windows.Controls.ValidationError> から取得した、 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=fullName> プロパティです。 値 <xref:System.Windows.Controls.Validation.ValidationAdornerSiteFor%2A?displayProperty=fullName> は、エラーが存在するアイテムのコンテナーです。  
  
 [!code-xml[BindingGroupSnippets#ItemBindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#itembindinggroup)]  
[!code-xml[BindingGroupSnippets#ValidationAdornerSiteFor](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml#validationadornersitefor)]  
  
 次の例は、項目コンテナーと呼び出しを取得 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> コンテナーの \[ <xref:System.Windows.Data.BindingGroup> 、データを検証します。 項目コンテナーのメソッドを呼び出すことにより、データを検証する必要があります <xref:System.Windows.FrameworkContentElement.BindingGroup%2A>, ではありません、 <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> の <xref:System.Windows.Controls.ItemsControl>です。  
  
 [!code-csharp[BindingGroupSnippets\#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets\#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemBindingGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemBindingGroupProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemBindingGroupProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerGenerator">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemContainerGenerator ItemContainerGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemContainerGenerator ItemContainerGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemContainerGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに関連付けられている <see cref="T:System.Windows.Controls.ItemContainerGenerator" /> を取得します。</summary>
        <value>コントロールに関連付けられている <see cref="T:System.Windows.Controls.ItemContainerGenerator" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> を生成、 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] そのホストの場合など、 <xref:System.Windows.Controls.ItemsControl>です。 コントロールのデータ ビュー内の項目と、対応する間の関連付けを維持 <xref:System.Windows.UIElement> オブジェクトです。 すべて <xref:System.Windows.Controls.ItemsControl> が関連付けられている項目コンテナー アイテム コレクション内のデータ項目が含まれています。 使用することができます、 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> プロパティに関連付けられているアイテムのコンテナーへのアクセスを <xref:System.Windows.Controls.ItemsControl>です。 たとえば、データ バインドがある場合 <xref:System.Windows.Controls.TreeView> 取得に制御したい、 <xref:System.Windows.Controls.TreeViewItem> インデックスまたはその関連するデータ項目に基づくことができますを使用する、 <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex%2A?displayProperty=fullName> または <xref:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem%2A?displayProperty=fullName> メソッドです。 また、使用することができます、 <xref:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer%2A?displayProperty=fullName> または <xref:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer%2A?displayProperty=fullName> 生成された特定のコンテナー要素に関連付けられているインデックスまたはデータ項目を取得します。  
  
 <xref:System.Windows.Controls.Primitives.IItemContainerGenerator> インターフェイスは、高度なシナリオにも使用します。 通常、仮想化のパネルの独自の実装を持つ高度なアプリケーションは、インターフェイスのメンバーを呼び出します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Content")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目ごとに生成されるコンテナー要素に適用される <see cref="T:System.Windows.Style" /> を取得または設定します。</summary>
        <value>項目ごとに生成されるコンテナー要素に適用される <see cref="T:System.Windows.Style" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、または <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> データ項目を格納する要素の外観に影響するスタイルを設定するプロパティです。 たとえば、 <xref:System.Windows.Controls.ListBox>, 、生成されたコンテナーは <xref:System.Windows.Controls.ListBoxItem> が制御の <xref:System.Windows.Controls.ComboBox>, は <xref:System.Windows.Controls.ComboBoxItem> コントロールです。  
  
 <xref:System.Windows.Controls.ItemsControl> 視覚的なカスタマイズの柔軟性を提供し、多くのスタイルとテンプレートのプロパティを提供します。 アイテムのレイアウトに影響を与えるを使用して、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> プロパティです。 使用することができます、コントロールをグループ化を使用している場合、 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> または <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> プロパティです。 データ オブジェクトの視覚エフェクトを指定するには、使用、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> または <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> プロパティです。 指定するタイミングの詳細については、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, を参照してください [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
<a name="xamlAttributeUsage_ItemContainerStyle"></a>   
## XAML 属性の使用方法  
  
```  
<object ItemContainerStyle="ResourceExtension StyleResourceKey"/>  
```  
  
<a name="xamlValues_ItemContainerStyle"></a>   
## XAML 値  
 *ResourceExtension*  
 次のいずれか: `StaticResource`, 、または `DynamicResource`です。 スタイル自体がシステム リソースやユーザー設定などの潜在的なランタイム参照への参照が含まれていなければ `StaticResource` スタイルへの参照は通常、パフォーマンスを推奨します。  
  
 *StyleResourceKey*  
 `x:Key` リソースとして要求されているスタイルを参照する文字列値です。  
  
<a name="dependencyPropertyInfo_ItemContainerStyle"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、このプロパティを使用する方法を示します。 以下のデータ バインドを検討して <xref:System.Windows.Controls.ListBox>:  
  
 [!code-xml[StylingIntroSample\#UIListBox](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample/CS/window1.xaml#uilistbox)]
 [!code-xml[StylingIntroSample\#UIListBox](~/samples/snippets/xaml/VS_Snippets_Wpf/StylingIntroSample/xaml/window1.xaml#uilistbox)]  
  
 データ項目が含まれる要素のスタイルを作成するには、作成、 <xref:System.Windows.Controls.ListBoxItem> スタイルを次の例で示すようにします。 スタイルはすべてに適用 <xref:System.Windows.Controls.ListBoxItem> でスタイルが定義されたスコープ内の要素。  
  
 [!code-xml[StylingIntroSample\#ListBoxItemStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample/CS/window1.xaml#listboxitemstyle)]
 [!code-xml[StylingIntroSample\#ListBoxItemStyle](~/samples/snippets/xaml/VS_Snippets_Wpf/StylingIntroSample/xaml/window1.xaml#listboxitemstyle)]  
  
 <xref:System.Windows.Controls.ListBoxItem> のコンテナー要素には、 <xref:System.Windows.Controls.ListBox> コントロールです。 そのため、代わりに、前は、設定するのには、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> のプロパティ、 <xref:System.Windows.Controls.ListBox> 定義済みのスタイル。 実行するには、提供、 <xref:System.Windows.Controls.ListBoxItem> スタイル、 `x:Key` してリソースとして使用できるようにします。  
  
 [!code-xml[StylingIntroSample_snip#ContainerStyle1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snip/CSharp/Window1.xaml#containerstyle1)]  
[!code-xml[StylingIntroSample_snip#ContainerStyle2](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snip/CSharp/Window1.xaml#containerstyle2)]  
  
 次に、設定、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> に次の例のように、リソースのプロパティ。  
  
 [!code-xml[StylingIntroSample\_snip\#ListBox](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snip/CSharp/Window1.xaml#listbox)]  
  
 前述のシナリオの両方の結果は同じです。 ただし、スタイルをリソースとして使用できるようにする利点の 1 つは、スタイルを再利用することができます。 設定、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> プロパティに明示的にもできる読みやすくします。  
  
 完全な例を参照してください。 [Introduction to Styling and Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160010)します。  
  
 次の例は、別の関数を示すために設計されています。 スタイルとテンプレートに関連するプロパティによって提供される、 <xref:System.Windows.Controls.ItemsControl>です。<xref:System.Windows.Controls.ItemsControl> この例では、コレクションにバインドされている `Task` オブジェクトです。 デモの目的で、スタイルおよびテンプレートをこの例では、すべてインラインで宣言されてです。  
  
 [!code-xml[DataTemplatingIntro\_snip\#ItemsControlProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemscontrolproperties)]  
  
 以下は、例のスクリーン ショットが表示される場合です。  
  
 1baf09b4-29b6-412c-8f8a-fc633e702a84  
  
 2 つの他のスタイル関連プロパティ、 <xref:System.Windows.Controls.ItemsControl> ここでは表示されていない <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> と <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Content")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>生成された各コンテナー要素に適用可能なスタイルのカスタム スタイル選択ロジックを取得または設定します。</summary>
        <value>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> として使用するスタイルを選択するロジックを含む <see cref="T:System.Windows.Controls.StyleSelector" /> オブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> データ項目を格納する要素の外観に影響するスタイルを設定するプロパティです。 たとえば、 <xref:System.Windows.Controls.ListBox>, 、生成されたコンテナーは <xref:System.Windows.Controls.ListBoxItem> が制御の <xref:System.Windows.Controls.ComboBox>, は <xref:System.Windows.Controls.ComboBoxItem> コントロールです。 使用するかどうかは、複数のスタイルを定義して適用するには、どのいずれかを選択するためのロジックを指定する必要がある、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> プロパティの代わりに、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> プロパティです。 場合にこのプロパティは無視されることに注意してください、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> プロパティを設定します。  
  
 <xref:System.Windows.Controls.ItemsControl> 視覚的なカスタマイズの柔軟性を提供し、多くのスタイルとテンプレートのプロパティを提供します。 アイテムのレイアウトに影響を与えるを使用して、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> プロパティです。 使用することができます、コントロールをグループ化を使用している場合、 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> または <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> プロパティです。 データ オブジェクトの視覚エフェクトを指定するには、使用、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> または <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> プロパティです。 指定するタイミングの詳細については、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, を参照してください [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
<a name="dependencyPropertyInfo_ItemContainerStyleSelector"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemContainerStyleSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemContainerStyleSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツの生成に使用するコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツ生成に使用されるコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが項目を追加するため、 <xref:System.Windows.Controls.ItemsControl>です。 子要素の追加、 <xref:System.Windows.Controls.ItemsControl> オブジェクトが暗黙的に追加して、 <xref:System.Windows.Controls.ItemCollection> の <xref:System.Windows.Controls.ItemsControl> オブジェクトです。  
  
> [!NOTE]
>  このプロパティでのみ設定できる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] に示すコレクション構文を使用して、またはコレクション オブジェクトへのアクセスなど、さまざまなメソッドを使用して `Add`します。 コレクション オブジェクト自体にアクセスするプロパティが読み取り専用、およびコレクション自体は読み取り\/書き込みです。  
  
 いずれかを使用することに注意してください、 <xref:System.Windows.Controls.ItemsControl.Items%2A> または <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> のコンテンツの生成に使用するコレクションを指定するプロパティ、 <xref:System.Windows.Controls.ItemsControl>です。 ときに、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティが設定されて、 <xref:System.Windows.Controls.ItemsControl.Items%2A> コレクションは読み取り専用と固定サイズで作成します。  
  
 ときに <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> 設定を使用している、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティを `null` コレクションを削除し、使用率が復元 <xref:System.Windows.Controls.ItemsControl.Items%2A>, 、空になる予定 <xref:System.Windows.Controls.ItemCollection>します。  
  
<a name="xamlPropertyElementUsage_Items"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  OneOrMoreElements  
</object>  
```  
  
<a name="xamlValues_Items"></a>   
## XAML 値  
 *OneOrMoreElements*  
 1 つまたは複数 <xref:System.Windows.UIElement> オブジェクトです。  
  
   
  
## 例  
 次の例では、データをバインドする、 <xref:System.Windows.Controls.ItemsControl>です。 最初の例と呼ばれるクラスを作成する `MyData` は単純な文字列のコレクション。  
  
 [!code-csharp[ControlContentOverviewSnippets\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#8)]
 [!code-vb[ControlContentOverviewSnippets\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#8)]  
  
 次の例ではバインド、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> のオブジェクト、 <xref:System.Windows.Controls.ItemsControl> に `MyData`します。  
  
 [!code-xml[ControlContentOverviewSnippets#7](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#7)]  
[!code-xml[ControlContentOverviewSnippets#6](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#6)]  
  
 [!code-csharp[ControlContentOverviewSnippets\#9](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#9)]
 [!code-vb[ControlContentOverviewSnippets\#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#9)]  
  
 次の図は、 <xref:System.Windows.Controls.ListBox> 前の例で作成されたコントロール。  
  
 e970ca3d-db86-4702-afb9-80392c01def5  
  
 次の例では、設定する方法について、 <xref:System.Windows.Controls.ItemsControl> を使用して、 <xref:System.Windows.Controls.ItemsControl.Items%2A> プロパティです。 例では、追加する項目の次のさまざまな種類、 <xref:System.Windows.Controls.ListBox>:  
  
-   文字列。  
  
-   <xref:System.DateTime> オブジェクト。  
  
-   <xref:System.Windows.UIElement> オブジェクト。  
  
-   A <xref:System.Windows.Controls.Panel> を含むその他のコントロール <xref:System.Windows.UIElement> オブジェクトです。  
  
 [!code-xml[ControlContentOverviewSnippets\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#3)]  
  
 [!code-csharp[ControlContentOverviewSnippets\#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml.cs#4)]
 [!code-vb[ControlContentOverviewSnippets\#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ControlContentOverviewSnippets/VisualBasic/Window1.xaml.vb#4)]  
  
 次の図は、 <xref:System.Windows.Controls.ListBox> 前の例で作成します。  
  
 6e1426fc-7718-471a-9a23-50414387e243  
  
 <xref:System.Windows.Controls.ItemCollection> ビューは、並べ替え、フィルター処理、グループ化などのビューに関連する機能を使用できるようにします。  
  
 インスタンスがある場合など、 <xref:System.Windows.Controls.ListBox>, 、`myListBox`, の内容を並べ替えるには、次を行うことができます、 <xref:System.Windows.Controls.ListBox>です。 この例では `Content` によって並べ替えするプロパティの名前を指定します。  
  
 [!code-csharp[ListBoxSort\_snip\#Sort](~/samples/snippets/csharp/VS_Snippets_Wpf/ListBoxSort_snip/CSharp/Window1.xaml.cs#sort)]
 [!code-vb[ListBoxSort\_snip\#Sort](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListBoxSort_snip/visualbasic/window1.xaml.vb#sort)]  
  
 行うと、このコントロールがコレクションに直接バインドされている場合、既定のコレクション ビューは、使用し、並べ替えの条件が、同じコレクションに直接バインドされている他のすべてのコントロールに適用されます。 場合、ビューは、既定のビューをされません、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティにバインドする、 <xref:System.Windows.Data.CollectionViewSource>です。  
  
 場合、 <xref:System.Windows.Controls.ItemsControl> は、コレクションに直接バインドされている既定のビューを取得するには、次を行うことができます。  
  
 [!code-csharp[GroupingSample#MyView](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#myview)]
 [!code-vb[GroupingSample#MyView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#myview)]  
[!code-csharp[GroupingSample#GetView](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#getview)]
[!code-vb[GroupingSample#GetView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#getview)]  
  
 フィルター処理、並べ替え、および条件をグループ化を指定する代わりに、 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] またはコードを使用して、 <xref:System.Windows.Data.CollectionViewSource>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsControlFromItemContainer">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ItemsControl ItemsControlFromItemContainer (System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Controls.ItemsControl ItemsControlFromItemContainer(class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsControl</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Windows.Controls.ItemsControl" /> を返す対象となるコンテナー要素。</param>
        <summary>指定されたコンテナー要素を所有する <see cref="T:System.Windows.Controls.ItemsControl" /> を返します。</summary>
        <returns>指定されたコンテナー要素を所有する <see cref="T:System.Windows.Controls.ItemsControl" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator" />
      </Docs>
    </Member>
    <Member MemberName="ItemsPanel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate ItemsPanel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate ItemsPanel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemsPanel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目のレイアウトを制御するパネルを定義するテンプレートを取得または設定します。</summary>
        <value>項目のレイアウトに使用するパネルを定義する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" />。<see cref="T:System.Windows.Controls.ItemsControl" /> の既定値は、<see cref="T:System.Windows.Controls.StackPanel" /> を指定する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ListBox>, 、既定値 <xref:System.Windows.Controls.ItemsPanelTemplate> 指定、 <xref:System.Windows.Controls.VirtualizingStackPanel>です。<xref:System.Windows.Controls.MenuItem>, 、既定値を使用して <xref:System.Windows.Controls.WrapPanel>します。<xref:System.Windows.Controls.Primitives.StatusBar>, 、既定値を使用して <xref:System.Windows.Controls.DockPanel>します。  
  
 内の項目のレイアウトに影響を与える、 <xref:System.Windows.Controls.ItemsControl>, 、このプロパティを使用して、 <xref:System.Windows.Controls.ItemsPanelTemplate>です。  
  
 <xref:System.Windows.Controls.ItemsControl> 視覚的なカスタマイズの柔軟性を提供し、多くのスタイルとテンプレートのプロパティを提供します。 使用する、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> プロパティまたは <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> データ項目を格納する要素の外観に影響するスタイルを設定するプロパティです。 たとえば、 <xref:System.Windows.Controls.ListBox>, 、生成されたコンテナーは <xref:System.Windows.Controls.ListBoxItem> が制御の <xref:System.Windows.Controls.ComboBox>, は <xref:System.Windows.Controls.ComboBoxItem> コントロールです。 使用することができます、コントロールをグループ化を使用している場合、 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> または <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> プロパティです。 データ オブジェクトの視覚エフェクトを指定するには、使用、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> または <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> プロパティです。 詳細については、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
<a name="dependencyPropertyInfo_ItemsPanel"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.ItemsPanelProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 水平方向を作成する <xref:System.Windows.Controls.ListBox>, 、水平方向を指定するテンプレートを作成する <xref:System.Windows.Controls.StackPanel> として設定し、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> プロパティです。 例を次に、 <xref:System.Windows.Controls.ListBox> <xref:System.Windows.Style> 水平を作成する <xref:System.Windows.Controls.ListBox>です。  
  
 [!code-xml[StylingIntroSample\_snip\#ItemsPanel](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample_snip/CSharp/Window1.xaml#itemspanel)]  
  
 次の例では、 <xref:System.Windows.Controls.ControlTemplate> を水平方向を作成する <xref:System.Windows.Controls.ListBox> が丸きます。 設定ではなく、この例では、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> プロパティ前の例に示すように、水平 <xref:System.Windows.Controls.StackPanel> 内に指定されて、 <xref:System.Windows.Controls.ControlTemplate>です。<xref:System.Windows.Controls.Panel.IsItemsHost%2A> にプロパティが設定されている `true` 上、 <xref:System.Windows.Controls.StackPanel>, 、パネルで、生成された項目を置くべきことを示します。 この方法を指定すると、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> を使用せず、コントロールのユーザーによって置き換えることはできません、 <xref:System.Windows.Controls.ControlTemplate>です。 このため、だけ行ってこのテンプレートを使用せずに置き換えられるパネルしたくないとわかっている場合。  
  
 [!code-xml[StylingIntroSample\#ListBoxCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSample/CS/window1.xaml#listboxct)]
 [!code-xml[StylingIntroSample\#ListBoxCT](~/samples/snippets/xaml/VS_Snippets_Wpf/StylingIntroSample/xaml/window1.xaml#listboxct)]  
  
 また、同じ結果を得るには、次を行うことができます。 ここで、 <xref:System.Windows.Controls.ItemsPresenter> 内容に基づく項目のレイアウトを指定のパネルを作成、 <xref:System.Windows.Controls.ItemsPanelTemplate>です。  
  
 [!code-xml[StyleOvw01\#ItemsPanelTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleOvw01/CS/Page1.xaml#itemspaneltemplate)]
 [!code-xml[StyleOvw01\#ItemsPanelTemplate](~/samples/snippets/xaml/VS_Snippets_Wpf/StyleOvw01/XAML/Page1.xaml#itemspaneltemplate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsPanelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemsPanelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemsPanelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツの生成に使用するコレクションを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ItemsControl" /> のコンテンツ生成に使用されるコレクション。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 **コンテンツ モデル:** このプロパティが項目を追加するため、 <xref:System.Windows.Controls.ItemsControl>です。  
  
 一般的なシナリオは、 <xref:System.Windows.Controls.ItemsControl> など、 <xref:System.Windows.Controls.ListBox>, 、<xref:System.Windows.Controls.ListView>, 、または <xref:System.Windows.Controls.TreeView> データ コレクションを表示するか、バインド、 <xref:System.Windows.Controls.ItemsControl> コレクション オブジェクトにします。 バインドする、 <xref:System.Windows.Controls.ItemsControl> コレクション オブジェクトを使用して、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティです。 なお、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティを使用する <xref:System.Windows.Data.BindingMode.OneWay> デフォルトをバインドします。  
  
 ときに、 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> プロパティが設定されて、 <xref:System.Windows.Controls.ItemsControl.Items%2A> コレクションは読み取り専用と固定サイズで作成します。  
  
 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> を使用して、プロパティを設定するのには、 `null` コレクションを削除し、使用状況を復元 <xref:System.Windows.Controls.ItemsControl.Items%2A>, 、空になる予定 <xref:System.Windows.Controls.ItemCollection>します。<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> は、このプロパティの値は、使用しないは `null`, に設定して `null` も何も起こりません。  
  
> [!NOTE]
>  ほとんどの場合は、独自のコレクションを実装する必要はありません。 代わりに、 <xref:System.Collections.ObjectModel.ObservableCollection%601> またはその他の既存のコレクション。 詳細については、「コレクション オブジェクト使用としてバインド ソース」を参照してください [バインド ソースの概要](http://msdn.microsoft.com/ja-jp/2df2cd11-6aac-4bdf-ab7b-ea5f464cd5ca)します。  
  
<a name="xamlAttributeUsage_ItemsSource"></a>   
## XAML 属性の使用方法  
  
```  
<object ItemsSource="bindingDeclaration"/>  
```  
  
<a name="xamlValues_ItemsSource"></a>   
## XAML 値  
 *bindingDeclaration*  
 A <xref:System.Windows.Data.Binding> 宣言します。 参照してください [バインド マークアップ拡張機能の選択](http://msdn.microsoft.com/ja-jp/83d6e2a4-1b0c-4fc8-bd96-b5e98800ab63) の詳細。  
  
<a name="dependencyPropertyInfo_ItemsSource"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.ItemsSourceProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemsSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemsSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列として表示される場合、<see cref="T:System.Windows.Controls.ItemsControl" /> の項目の書式設定方法を指定する複合文字列を取得または設定します。</summary>
        <value>文字列として表示される場合、<see cref="T:System.Windows.Controls.ItemsControl" /> の項目の書式設定方法を指定する複合文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> 定義済み、複合、またはカスタムの文字列形式にすることができます。 文字列形式の詳細については、次を参照してください。 [Formatting Types](http://msdn.microsoft.com/ja-jp/0d1364da-5b30-4d42-8e6b-03378343343f)します。 設定した場合、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> または <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> の <xref:System.Windows.Controls.ItemsControl>, 、 <xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> プロパティは無視されます。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Controls.ItemsControl.ItemStringFormat%2A> の一覧の形式を指定する <xref:System.DateTime> オブジェクトです。  
  
 [!code-xml[ContentStringSnippets\#ItemsControl](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#itemscontrol)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各項目を表示するために使用される <see cref="T:System.Windows.DataTemplate" /> を取得または設定します。</summary>
        <value>データ オブジェクトの視覚化を指定する <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> データ オブジェクトの視覚エフェクトを指定します。 場合、 <xref:System.Windows.Controls.ItemsControl> がバインドされてコレクションにオブジェクトとする指示は示されません特定のディスプレイを使用して、 <xref:System.Windows.DataTemplate>, 、結果の [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 各項目の基になるコレクション内の各オブジェクトの文字列表現であります。  
  
 設定すると、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> 上、 <xref:System.Windows.Controls.ItemsControl>, 、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 次のように生成される \(を使用して、 <xref:System.Windows.Controls.ListBox> 例として\)。  
  
1.  コンテンツの生成中に、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> に対する要求を開始、 <xref:System.Windows.Controls.ItemsControl.ItemContainerGenerator%2A> に各データ項目のコンテナーを作成します。<xref:System.Windows.Controls.ListBox>, 、コンテナーでは、 <xref:System.Windows.Controls.ListBoxItem>です。 呼び出し、ジェネレーター、 <xref:System.Windows.Controls.ItemsControl> コンテナーを準備します。  
  
2.  準備のコピーするために、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> の <xref:System.Windows.Controls.ListBox> である、 <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> の <xref:System.Windows.Controls.ListBoxItem>です。  
  
3.  すべてのような <xref:System.Windows.Controls.ContentControl> の種類、 <xref:System.Windows.Controls.ControlTemplate> の <xref:System.Windows.Controls.ListBoxItem> が含まれています、 <xref:System.Windows.Controls.ContentPresenter>です。 作成、テンプレートを適用すると、 <xref:System.Windows.Controls.ContentPresenter> が <xref:System.Windows.Controls.ContentPresenter.ContentTemplate%2A> にバインドされて、 <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> の <xref:System.Windows.Controls.ListBoxItem>です。  
  
4.  最後に、 <xref:System.Windows.Controls.ContentPresenter> 適用される <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> 、それ自体を作成して、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。  
  
 1 つ以上にしていれば <xref:System.Windows.DataTemplate> 定義され、プログラムを使用して選択し、適用するためのロジックを提供するために、 <xref:System.Windows.DataTemplate>, を使用して、 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> プロパティです。  
  
 <xref:System.Windows.Controls.ItemsControl> 視覚的なカスタマイズの柔軟性を提供し、多くのスタイルとテンプレートのプロパティを提供します。 使用して、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> プロパティまたは <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> データ項目を格納する要素の外観に影響するスタイルを設定するプロパティです。 たとえば、 <xref:System.Windows.Controls.ListBox>, 、生成されたコンテナーは <xref:System.Windows.Controls.ListBoxItem> が制御の <xref:System.Windows.Controls.ComboBox>, は <xref:System.Windows.Controls.ComboBoxItem> コントロールです。 アイテムのレイアウトに影響を与えるを使用して、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> プロパティです。 使用することができます、コントロールをグループ化を使用している場合、 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> または <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> プロパティです。  
  
 詳細については、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
<a name="xamlAttributeUsage_ItemTemplate"></a>   
## XAML 属性の使用方法  
  
```  
<object ItemTemplate=" ResourceExtension TemplateResourceKey"/>  
```  
  
<a name="xamlValues_ItemTemplate"></a>   
## XAML 値  
 *ResourceExtension*  
 次のいずれか: [StaticResource マークアップ拡張機能](http://msdn.microsoft.com/ja-jp/97af044c-71f1-4617-9a94-9064b68185d2), 、または [DynamicResource マークアップ拡張機能](http://msdn.microsoft.com/ja-jp/7324f243-03af-4c2b-b0db-26ac6cdfcbe4)します。 スタイル自体がシステム リソースやユーザー設定などの潜在的なランタイム参照への参照が含まれていなければ [StaticResource マークアップ拡張機能](http://msdn.microsoft.com/ja-jp/97af044c-71f1-4617-9a94-9064b68185d2) スタイルへの参照は通常、パフォーマンスを推奨します。  
  
 *TemplateResourceKey*  
 [x:Key Attribute](http://msdn.microsoft.com/ja-jp/1985cd45-f197-42d5-b75e-886add64b248) リソースとして要求されているテンプレートを参照する文字列値です。  
  
<a name="dependencyPropertyInfo_ItemTemplate"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.ItemTemplateProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.DataTemplate> インラインです。<xref:System.Windows.DataTemplate> 3 つの各データ項目が表示されることを示す <xref:System.Windows.Controls.TextBlock> 内の要素、 <xref:System.Windows.Controls.StackPanel>です。 この例では、データ オブジェクトと呼ばれるクラスを `Task`です。<xref:System.Windows.Controls.TextBlock> のプロパティにこのテンプレート内の要素がバインドされている、 `Task` クラスです。  
  
 [!code-xml[DataTemplatingIntro\_snip\#Inline](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#inline)]  
  
 定義する方が一般的である、 <xref:System.Windows.DataTemplate> ため、次の例に示すように、再利用可能なオブジェクトの resources セクションにします。  
  
 [!code-xml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xml[DataTemplatingIntro_snip#AsResource](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#asresource)]  
[!code-xml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 使用できるようになりました `myTaskTemplate` 次の例のように、リソースとして。  
  
 [!code-xml[DataTemplatingIntro\_snip\#MyTaskTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#mytasktemplate)]  
  
 完全なサンプルを参照してください。 [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" />
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各項目を表示するために使用されるテンプレートを選択するためのカスタム ロジックを取得または設定します。</summary>
        <value>ロジックを提供し、<see cref="T:System.Windows.DataTemplate" /> を返すカスタム <see cref="T:System.Windows.Controls.DataTemplateSelector" /> オブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する、 <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> データ オブジェクトの視覚エフェクトを指定します。 複数のテンプレートを定義するとを使用するテンプレートを返すロジックを提供するために場合、このプロパティを使用します。 場合にこのプロパティは無視されることに注意してください <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> が設定されます。  
  
 <xref:System.Windows.Controls.ItemsControl> 視覚的なカスタマイズの柔軟性を提供し、多くのスタイルとテンプレートのプロパティを提供します。 使用して、 <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> プロパティまたは <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A> データ項目を格納する要素の外観に影響するスタイルを設定するプロパティです。 たとえば、 <xref:System.Windows.Controls.ListBox>, 、生成されたコンテナーは <xref:System.Windows.Controls.ListBoxItem> が制御の <xref:System.Windows.Controls.ComboBox>, は <xref:System.Windows.Controls.ComboBoxItem> コントロールです。 アイテムのレイアウトに影響を与えるを使用して、 <xref:System.Windows.Controls.ItemsControl.ItemsPanel%2A> プロパティです。 使用することができます、コントロールをグループ化を使用している場合、 <xref:System.Windows.Controls.ItemsControl.GroupStyle%2A> または <xref:System.Windows.Controls.ItemsControl.GroupStyleSelector%2A> プロパティです。  
  
 詳細については、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
<a name="xamlAttributeUsage_ItemTemplateSelector"></a>   
## XAML 属性の使用方法  
  
```  
<object ItemTemplateSelector="ResourceExtension SelectorResourceKey"/>  
```  
  
<a name="xamlValues_ItemTemplateSelector"></a>   
## XAML 値  
 *ResourceExtension*  
 次のいずれか: `StaticResource`, 、または `DynamicResource`です。 スタイル自体がシステム リソースやユーザー設定などの潜在的なランタイム参照への参照が含まれていなければ `StaticResource` スタイルへの参照は通常、パフォーマンスを推奨します。  
  
 *SelectorResourceKey*  
 `x:Key` リソースとして要求されているセレクターを参照する文字列値です。  
  
<a name="dependencyPropertyInfo_ItemTemplateSelector"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、 `auctionItemDataTemplateSelector` リソース名 \(に対応する、 `AuctionItemDataTemplateSelector` クラス\) に割り当てられている、 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> のプロパティ、 <xref:System.Windows.Controls.ItemsControl>です。  
  
 [!code-xml[DataTemplateSelector\#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplateSelector/CSharp/Window1.xaml#itemtemplateselector)]  
  
 実装の次の例を `AuctionItemDataTemplateSelector` クラスのオーバーライドを含む、 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>メソッド。  
  
 [!code-csharp[DataTemplateSelector\#DataTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplateSelector/CSharp/AuctionItemDataTemplateSelector.cs#datatemplateselector)]
 [!code-vb[DataTemplateSelector\#DataTemplateSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplateSelector/visualbasic/auctionitemdatatemplateselector.vb#datatemplateselector)]  
  
 ここでは、内で、 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> メソッドの値に基づいて、適切なテンプレートを返すロジックがある、クラスの `SpecialFeatures` のプロパティ、 `item` 渡されるオブジェクト。 返されるテンプレートは、エンベロープの資料を参照 <xref:System.Windows.Window> 要素。  
  
 設定すると、 <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> プロパティには、 <xref:System.Windows.Controls.ItemsControl> は自動的に呼び出されますに送られます、 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> のメソッド `AuctionItemDataTemplateSelector` 先コレクション内の項目ごと、 <xref:System.Windows.Controls.ItemsControl> がバインドされています。 この呼び出しは、オブジェクトとしてデータ項目を渡します。<xref:System.Windows.DataTemplate> によって返されるデータ項目を表示するメソッドを使用しています。  
  
 別の例では、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ItemsControl.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの論理子オブジェクトの列挙子を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの論理子オブジェクトの列挙子。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAlternationCountChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAlternationCountChanged (int oldAlternationCount, int newAlternationCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAlternationCountChanged(int32 oldAlternationCount, int32 newAlternationCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnAlternationCountChanged(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldAlternationCount" Type="System.Int32" />
        <Parameter Name="newAlternationCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldAlternationCount">
          <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> の元の値。</param>
        <param name="newAlternationCount">
          <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> の新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.AlternationCount" /> プロパティが変更されたときに呼び出されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisplayMemberPathChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayMemberPathChanged (string oldDisplayMemberPath, string newDisplayMemberPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayMemberPathChanged(string oldDisplayMemberPath, string newDisplayMemberPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDisplayMemberPath" Type="System.String" />
        <Parameter Name="newDisplayMemberPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldDisplayMemberPath">
          <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> プロパティの古い値。</param>
        <param name="newDisplayMemberPath">
          <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGroupStyleSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnGroupStyleSelectorChanged (System.Windows.Controls.GroupStyleSelector oldGroupStyleSelector, System.Windows.Controls.GroupStyleSelector newGroupStyleSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGroupStyleSelectorChanged(class System.Windows.Controls.GroupStyleSelector oldGroupStyleSelector, class System.Windows.Controls.GroupStyleSelector newGroupStyleSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldGroupStyleSelector" Type="System.Windows.Controls.GroupStyleSelector" />
        <Parameter Name="newGroupStyleSelector" Type="System.Windows.Controls.GroupStyleSelector" />
      </Parameters>
      <Docs>
        <param name="oldGroupStyleSelector">
          <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> プロパティの前の値。</param>
        <param name="newGroupStyleSelector">
          <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemBindingGroupChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemBindingGroupChanged (System.Windows.Data.BindingGroup oldItemBindingGroup, System.Windows.Data.BindingGroup newItemBindingGroup);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemBindingGroupChanged(class System.Windows.Data.BindingGroup oldItemBindingGroup, class System.Windows.Data.BindingGroup newItemBindingGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemBindingGroupChanged(System.Windows.Data.BindingGroup,System.Windows.Data.BindingGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemBindingGroup" Type="System.Windows.Data.BindingGroup" />
        <Parameter Name="newItemBindingGroup" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="oldItemBindingGroup">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> の元の値。</param>
        <param name="newItemBindingGroup">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> の新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemBindingGroup" /> プロパティが変更されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemContainerStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemContainerStyleChanged (System.Windows.Style oldItemContainerStyle, System.Windows.Style newItemContainerStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemContainerStyleChanged(class System.Windows.Style oldItemContainerStyle, class System.Windows.Style newItemContainerStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemContainerStyle" Type="System.Windows.Style" />
        <Parameter Name="newItemContainerStyle" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="oldItemContainerStyle">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> プロパティの前の値。</param>
        <param name="newItemContainerStyle">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> プロパティが変更されたときに呼び出されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemContainerStyleSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemContainerStyleSelectorChanged (System.Windows.Controls.StyleSelector oldItemContainerStyleSelector, System.Windows.Controls.StyleSelector newItemContainerStyleSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemContainerStyleSelectorChanged(class System.Windows.Controls.StyleSelector oldItemContainerStyleSelector, class System.Windows.Controls.StyleSelector newItemContainerStyleSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemContainerStyleSelector" Type="System.Windows.Controls.StyleSelector" />
        <Parameter Name="newItemContainerStyleSelector" Type="System.Windows.Controls.StyleSelector" />
      </Parameters>
      <Docs>
        <param name="oldItemContainerStyleSelector">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティの前の値。</param>
        <param name="newItemContainerStyleSelector">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">変更に関する情報。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティが変更された時点で呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsPanelChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsPanelChanged (System.Windows.Controls.ItemsPanelTemplate oldItemsPanel, System.Windows.Controls.ItemsPanelTemplate newItemsPanel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsPanelChanged(class System.Windows.Controls.ItemsPanelTemplate oldItemsPanel, class System.Windows.Controls.ItemsPanelTemplate newItemsPanel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemsPanel" Type="System.Windows.Controls.ItemsPanelTemplate" />
        <Parameter Name="newItemsPanel" Type="System.Windows.Controls.ItemsPanelTemplate" />
      </Parameters>
      <Docs>
        <param name="oldItemsPanel">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> プロパティの前の値。</param>
        <param name="newItemsPanel">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel" /> プロパティが変更されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsSourceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemsSourceChanged (System.Collections.IEnumerable oldValue, System.Collections.IEnumerable newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemsSourceChanged(class System.Collections.IEnumerable oldValue, class System.Collections.IEnumerable newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Collections.IEnumerable" />
        <Parameter Name="newValue" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティの古い値。</param>
        <param name="newValue">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource" /> プロパティが変更されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemStringFormatChanged (string oldItemStringFormat, string newItemStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemStringFormatChanged(string oldItemStringFormat, string newItemStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemStringFormatChanged(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemStringFormat" Type="System.String" />
        <Parameter Name="newItemStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldItemStringFormat">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> プロパティの変更前の値。</param>
        <param name="newItemStringFormat">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemStringFormat" /> プロパティが変更された時点で呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemTemplateChanged (System.Windows.DataTemplate oldItemTemplate, System.Windows.DataTemplate newItemTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemTemplateChanged(class System.Windows.DataTemplate oldItemTemplate, class System.Windows.DataTemplate newItemTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newItemTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldItemTemplate">変更前の <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> プロパティ値。</param>
        <param name="newItemTemplate">新しい <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> プロパティ値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> プロパティが変更された時点で呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnItemTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldItemTemplateSelector, System.Windows.Controls.DataTemplateSelector newItemTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldItemTemplateSelector, class System.Windows.Controls.DataTemplateSelector newItemTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldItemTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newItemTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldItemTemplateSelector">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> プロパティの古い値。</param>
        <param name="newItemTemplateSelector">
          <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントに関する情報。</param>
        <summary>
          <see cref="E:System.Windows.UIElement.KeyDown" /> イベントを受信すると、呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントに関する情報。</param>
        <summary>
          <see cref="E:System.Windows.UIElement.TextInput" /> イベントを受信すると、呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected virtual void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">指定した項目を表示するために使用する要素。</param>
        <param name="item">指定した項目。</param>
        <summary>指定した要素に指定した項目が表示されるように準備します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素の準備は、バインドの設定、スタイルの適用を伴うしたりできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected virtual bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">コンテナー要素。</param>
        <param name="item">目的の項目。</param>
        <summary>スタイルを適用するかどうかを示す値を返す、 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> または <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> プロパティを指定した項目のコンテナー要素。</summary>
        <returns>基本実装する場合は、常に <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeGroupStyle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeGroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeGroupStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シリアル化プロセスによって <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" /> プロパティの有効な値をシリアル化する必要があるかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeItems">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ShouldSerializeItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シリアル化プロセスによって <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティの有効な値をシリアル化する必要があるかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> プロパティ値をシリアル化する必要がある場合は <see cref="P:System.Windows.Controls.ItemsControl.Items" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.Clear">
      <MemberSignature Language="C#" Value="void IContainItemStorage.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プロパティの関連付けをすべてクリアします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.ClearItemValue (object item, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.ClearItemValue(object item, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearItemValue(System.Object,System.Windows.DependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="item">関連付けられている項目。</param>
        <param name="dp">関連付けられているプロパティ。</param>
        <summary>指定したアイテムとプロパティ間の関連付けを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ClearValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.ClearValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.ClearValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ClearValue(System.Windows.DependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">削除するプロパティ。</param>
        <summary>指定したプロパティをすべてのプロパティ一覧から削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue">
      <MemberSignature Language="C#" Value="object IContainItemStorage.ReadItemValue (object item, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Controls.Primitives.IContainItemStorage.ReadItemValue(object item, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#ReadItemValue(System.Object,System.Windows.DependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="item">関連付けられている指定したプロパティを持つ項目。</param>
        <param name="dp">値を返すプロパティ。</param>
        <summary>指定した項目に関連付けられている指定したプロパティの値を返します。</summary>
        <returns>指定した項目に関連付けられている指定したプロパティの値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue">
      <MemberSignature Language="C#" Value="void IContainItemStorage.StoreItemValue (object item, System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Controls.Primitives.IContainItemStorage.StoreItemValue(object item, class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Controls#Primitives#IContainItemStorage#StoreItemValue(System.Object,System.Windows.DependencyProperty,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">値とプロパティを関連付ける対象となる項目。</param>
        <param name="dp">指定した項目に関連付けられるプロパティ。</param>
        <param name="value">関連付けられたプロパティの値。</param>
        <summary>指定されたプロパティと値を格納して、指定した項目に関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">子として追加するオブジェクト。</param>
        <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">追加するテキスト。</param>
        <summary>このメンバーは、Windows Presentation Foundation (WPF) インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ItemsControl.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ItemsControl" /> オブジェクトの文字列表現を提供します。</summary>
        <returns>オブジェクトの文字列表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainerFromElement">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>特定のコンテナー要素を所有している現在の <see cref="T:System.Windows.Controls.ItemsControl" /> に属しているコンテナーを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>