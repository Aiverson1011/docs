<Type Name="ComboBox" FullName="System.Windows.Controls.ComboBox">
  <TypeSignature Language="C#" Value="public class ComboBox : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBox extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBox" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ComboBoxItem))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_EditableTextBox", Type=typeof(System.Windows.Controls.TextBox))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コントロールの矢印をクリックして表示または非表示にすることができるドロップダウン リストが付いた選択コントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Controls.ComboBox> allows the user to select an item from a drop\-down list or optionally to enter new text in the text box of the control. <xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type \(such as string, image, or panel\). For more information, see the <xref:System.Windows.Controls.ItemsControl> class.  
  
 The <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> properties specify how the <xref:System.Windows.Controls.ComboBox> behaves when the user does one of the following:  
  
-   Enters a string to select an item in the <xref:System.Windows.Controls.ComboBox>.  
  
-   Enters a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.  
  
-   Selects part of the string that is in the text box.  
  
-   Copies or pastes a value into the text box.  
  
 The following table describes the actions the user can and cannot take, depending on the values of <xref:System.Windows.Controls.ComboBox.IsEditable%2A> and <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>.  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `true`|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> is `false`|  
|-|--------------------------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `true`|-   Cannot select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.<br />-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.<br />-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.<br />-   Can copy the string in the <xref:System.Windows.Controls.ComboBox> text box, but cannot paste a string into the <xref:System.Windows.Controls.ComboBox> text box.|-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.<br />-   Can enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.<br />-   Can select part of the string in the <xref:System.Windows.Controls.ComboBox> text box.<br />-   Can copy or paste the string in the <xref:System.Windows.Controls.ComboBox> text box.|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> is `false`|-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.<br />-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.<br />-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.<br />-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.|-   Can select an item in the <xref:System.Windows.Controls.ComboBox> by entering a string.<br />-   Cannot enter a string that does not correspond to an item in the <xref:System.Windows.Controls.ComboBox>.<br />-   Cannot select part of the string in the <xref:System.Windows.Controls.ComboBox>.<br />-   Cannot copy or paste the string in the <xref:System.Windows.Controls.ComboBox>.|  
  
 The <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> property has an effect only if <xref:System.Windows.Controls.ComboBox.IsEditable%2A> is **languageKeyword tag is not supported!!!!**  
.  
  
 The <xref:System.Windows.Controls.ComboBox> is an <xref:System.Windows.Controls.ItemsControl>, so it can display content other than simple strings.  For example, you can create a <xref:System.Windows.Controls.ComboBox> that contains a list of images. When you have content other than strings in the <xref:System.Windows.Controls.ComboBox>, a nonsensical string might appear in the <xref:System.Windows.Controls.ComboBox> when the drop\-down list is hidden. To display a string in the <xref:System.Windows.Controls.ComboBox> when it contains non\-string items, use the <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=fullName> or <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=fullName>attached property.  
  
## Customizing the ComboBox Control  
 To apply the same property settings to multiple <xref:System.Windows.Controls.ComboBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property. You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance. For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31).  To see the parts and states that are specific to the <xref:System.Windows.Controls.ComboBox>, see [ComboBox Styles and Templates](http://msdn.microsoft.com/ja-jp/b0662fa1-16d7-4320-b26b-c1804e565a44).  
  
 Dependency properties for this control might be set by the control’s default style.  If a property is set by a default style, the property might change from its default value when the control appears in the application. The default style is determined by which desktop theme is used when the application is running.  For more information, see [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ComboBox> control's default template and is set by using a . You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31).  
  
   
  
## 例  
 The following example creates a <xref:System.Windows.Controls.ComboBox>. The example populates the <xref:System.Windows.Controls.ComboBox> by binding the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> property to a collection object of type `VacationSpots`. The example also creates a <xref:System.Windows.Controls.TextBlock> that displays the selected item of the <xref:System.Windows.Controls.ComboBox>.  
  
 [!code-xml[ComboBoxItems\#ComboBoxClass](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#comboboxclass)]  
  
 The following example defines the collection object that the <xref:System.Windows.Controls.ComboBox> in the preceding example binds to.  
  
 [!code-csharp[ComboBoxItems\#Data](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml.cs#data)]
 [!code-vb[ComboBoxItems\#Data](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxItems/VIsualBasic/Window1.xaml.vb#data)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBoxItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ComboBox" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownClosed">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownClosed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンボ ボックスのドロップダウン リストを閉じたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例は、イベント ハンドラーを割り当てる方法と、処理する方法、 <xref:System.Windows.Controls.ComboBox.DropDownOpened> と <xref:System.Windows.Controls.ComboBox.DropDownClosed> イベントです。  
  
 [!code-xml[ComboBoxSimple\#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple\#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple\#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DropDownOpened">
      <MemberSignature Language="C#" Value="public event EventHandler DropDownOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DropDownOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ComboBox.DropDownOpened" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンボ ボックスのドロップダウン リストが開いたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、イベント ハンドラーを割り当てるして処理する方法、 <xref:System.Windows.Controls.ComboBox.DropDownOpened> と <xref:System.Windows.Controls.ComboBox.DropDownClosed> イベントです。  
  
 [!code-xml[ComboBoxSimple\#ComboBoxEvents1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#comboboxevents1)]  
  
 [!code-csharp[ComboBoxSimple\#ComboBoxEvents2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml.cs#comboboxevents2)]
 [!code-vb[ComboBoxSimple\#ComboBoxEvents2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ComboBoxSimple/VisualBasic/Pane1.xaml.vb#comboboxevents2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成または指定した項目の表示に使用される要素を識別します。</summary>
        <returns>指定した項目を表示するために使用する要素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンボ ボックスがスクロールをサポートするかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.ComboBox" /> スクロールをサポートしています。 それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールがある場合、 <xref:System.Windows.Controls.ScrollViewer> スタイルにあり、スクロール動作、カスタムのキーボード <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> 返す必要があります `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Windows.Controls.ComboBox" /> にフォーカスがあります。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.ComboBox" /> にフォーカスがある。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンボ ボックスのドロップダウン リストが現在開いているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ドロップダウン部分が開いている場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.IsDropDownOpenProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> コンボ ボックスの開始時に、ドロップダウン コントロールとコンボ ボックスを作成するプロパティが開かれました。  
  
 [!code-xml[ComboBoxStyles\#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を有効またはのテキスト ボックスでテキストの編集を無効にする値、 <see cref="T:System.Windows.Controls.ComboBox" />です。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.ComboBox" /> 編集した以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> と <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> プロパティを指定する方法、 <xref:System.Windows.Controls.ComboBox> 、次のいずれかの操作を実行するときの動作します。  
  
-   入力した文字列内の項目を選択する、 <xref:System.Windows.Controls.ComboBox>です。  
  
-   内の項目に対応していない文字列を入力した、 <xref:System.Windows.Controls.ComboBox>です。  
  
-   テキスト ボックスには、文字列の一部を選択します。  
  
-   コピーするか、またはテキスト ボックスに値を貼り付けます。  
  
 次の表は、ユーザーの値に応じて、実行できないアクション <xref:System.Windows.Controls.ComboBox.IsEditable%2A> と <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>です。  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> します。 `true`|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> します。 `false`|  
|-|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> します。 `true`|-   内の項目を選択することはできません、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択できます、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。<br />-   文字列をコピー、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスします、に文字列を貼り付けることはできません、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。|-   内の項目を選択できます、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択できます、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。<br />-   コピーしたり、内の文字列を貼り付け、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> します。 `false`|-   内の項目を選択できます、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   コピーまたはで文字列を貼り付けることはできません、 <xref:System.Windows.Controls.ComboBox>です。|-   内の項目を選択できます、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   コピーまたはで文字列を貼り付けることはできません、 <xref:System.Windows.Controls.ComboBox>です。|  
  
 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> に等しい `false`, 、 <xref:System.Windows.Controls.ComboBox> を使用して、 <xref:System.Windows.Controls.ContentPresenter> 要素の場合、現在選択されている表示 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> に等しい `true`, 、 <xref:System.Windows.Controls.TextBox> は、この目的の代わりに使用します。 注意してください、 <xref:System.Windows.Controls.TextBox> のみ表示するプレーン テキストと、 <xref:System.Windows.Controls.ComboBoxItem> イメージなどのプレーン テキスト コンテンツを含めることがあります。  
  
<a name="dependencyPropertyInfo_IsEditable"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.IsEditableProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では作成 <xref:System.Windows.Controls.ComboBox> テキストではなく項目としてイメージを格納しているコントロール。 場合、 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Controls.TextBox> イメージのによって返される値を表示する <xref:System.Object.ToString%2A> メソッドです。 避けるために、 <xref:System.Windows.Controls.TextBox> 予期しないテキストを使用して、 <xref:System.Windows.Controls.TextSearch.Text%2A?displayProperty=fullName> と <xref:System.Windows.Controls.TextSearch.TextPath%2A?displayProperty=fullName> プロパティを表示するテキストを割り当てます。  
  
 [!code-xml[ComboBoxProps\_snip\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#1)]  
  
 [!code-xml[ComboBoxProps\_snip\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#2)]  
  
 別のソリューションは、使用する、 <xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> プロパティです。 ドロップダウン リスト コントロール、 <xref:System.Windows.Controls.ComboBox> イメージは表示されませんが、割り当てられたテキストが表示されます。  
  
 次の例は、<xref:System.Windows.Controls.ItemsControl.DisplayMemberPath%2A> を使用する方法を示しています。  
  
 [!code-xml[ComboBoxProps\_snip\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxProps_snip/CS/pane1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEditableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEditableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsEditableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.IsEditable" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">指定した項目。</param>
        <summary>指定した項目が \(またはが対象になります\) を決定独自 <c>ItemContainer</c>します。</summary>
        <returns>
          <see langword="true" /> アイテムには独自場合 <c>ItemContainer</c>。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはをコンボ ボックスの内容は選択可能な編集できない、選択範囲のみのモードを有効にする値を設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ComboBox" /> が読み取り専用である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> と <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> プロパティを指定する方法、 <xref:System.Windows.Controls.ComboBox> 、次のいずれかの操作を実行するときの動作します。  
  
-   入力した文字列内の項目を選択する、 <xref:System.Windows.Controls.ComboBox>です。  
  
-   内の項目に対応していない文字列を入力した、 <xref:System.Windows.Controls.ComboBox>です。  
  
-   テキスト ボックスには、文字列の一部を選択します。  
  
-   コピーするか、またはテキスト ボックスに値を貼り付けます。  
  
 次の表は、ユーザーの値に応じて、実行できないアクション <xref:System.Windows.Controls.ComboBox.IsEditable%2A> と <xref:System.Windows.Controls.ComboBox.IsReadOnly%2A>です。  
  
||<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> します。 `true`|<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> します。 `false`|  
|-|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> します。 `true`|-   内の項目を選択することはできません、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択できます、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。<br />-   文字列をコピー、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスします、に文字列を貼り付けることはできません、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。|-   内の項目を選択できます、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択できます、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。<br />-   コピーしたり、内の文字列を貼り付け、 <xref:System.Windows.Controls.ComboBox> テキスト ボックスです。|  
|<xref:System.Windows.Controls.ComboBox.IsEditable%2A> します。 `false`|-   内の項目を選択できます、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   コピーまたはで文字列を貼り付けることはできません、 <xref:System.Windows.Controls.ComboBox>です。|-   内の項目を選択できます、 <xref:System.Windows.Controls.ComboBox> 文字列を入力します。<br />-   内の項目に対応していない文字列を入力することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   内の文字列の一部を選択することはできません、 <xref:System.Windows.Controls.ComboBox>です。<br />-   コピーまたはで文字列を貼り付けることはできません、 <xref:System.Windows.Controls.ComboBox>です。|  
  
 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> に等しい `false`, 、 <xref:System.Windows.Controls.ComboBox> を使用して、 <xref:System.Windows.Controls.ContentPresenter> 要素の場合、現在選択されている表示 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> に等しい `true`, 、 <xref:System.Windows.Controls.TextBox> は、この目的の代わりに使用します。 注意してください、 <xref:System.Windows.Controls.TextBox> のみ表示するプレーン テキストと、 <xref:System.Windows.Controls.ComboBoxItem> イメージなどのプレーン テキスト コンテンツを含めることがあります。  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.IsReadOnlyProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 例を次に、 <xref:System.Windows.Controls.ComboBox> で編集可能な <xref:System.Windows.Controls.TextBox>です。<xref:System.Windows.Controls.ComboBox.IsReadOnly%2A> にプロパティが設定されている `true`, にテキストを入力することはできませんので、 <xref:System.Windows.Controls.TextBox>です。  
  
 [!code-xml[ComboBoxItems\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionBoxHighlighted">
      <MemberSignature Language="C#" Value="public bool IsSelectionBoxHighlighted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionBoxHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得するかどうか、 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示されます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> が強調表示されているそれ以外の場合場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、依存関係プロパティです。 ただし、依存関係プロパティの識別子のフィールドを <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> パブリックではありません。 そのためへの呼び出しなどの依存関係プロパティの識別子を必要とするプロパティのシステム操作用のバックアップの依存関係プロパティを使用することはできません <xref:System.Windows.DependencyObject.GetValue%2A>します。 ただし、引き続き使用できます <xref:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted%2A> 、プロパティ トリガーとします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeight">
      <MemberSignature Language="C#" Value="public double MaxDropDownHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxDropDownHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンボ ボックス ドロップダウン リストの最大の高さを設定します。</summary>
        <value>取得される高さを表す double 型の値または設定する高さ。 プロパティ システムに定義されている既定値は計算された値、画面の最大の高さのパラメーターのシステムの 3 分の 1 の割合に基づきますが、この既定の設定がさまざまなコントロール テンプレートでオーバーライドされる可能性があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 自動サイズは、既定ではないと、可能性のある親要素で使用可能なサイズを超えるサイズ ドロップダウンになります。 これは、通常必要はありません。  
  
<a name="dependencyPropertyInfo_MaxDropDownHeight"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_MaxDropDownHeight"></a>   
## XAML 属性の使用方法  
  
```  
<object MaxDropDownHeight="double"/>  
- or –  
<object MaxDropDownHeight ="qualifiedDouble"/>  
- or -  
<object MaxDropDownHeight ="Auto"/>  
```  
  
<a name="xamlValues_MaxDropDownHeight"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値。 これは、 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 測定します。 文字列が必要な小数点を明示的に含まれません。 値のインスタンス `1` は許容されます。  
  
 同じ <xref:System.Double> プロパティの値セクションで説明したように範囲の制限が適用されます。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に 1 つの単位の次の宣言文字列: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 `Auto`  
 自動サイズ変更を有効にします。 「解説」を参照してください。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Windows.Controls.ComboBox.MaxDropDownHeight%2A> の高さを指定するプロパティ、 <xref:System.Windows.Controls.ComboBox> コントロールのドロップ ダウンします。  
  
 [!code-xml[ComboBoxStyles\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxStyles/CS/app.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDropDownHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxDropDownHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxDropDownHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ときに呼び出されます <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> が呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>適切な提供 <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer" /> の一部としてこのコントロールの実装、 WPF インフラストラクチャです。</summary>
        <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed" /> イベントです。</param>
        <summary>コンボ ボックスのポップアップを閉じることを報告します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDropDownOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnDropDownOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDropDownOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened" /> イベントです。</param>
        <summary>コンボ ボックスのポップアップを開いたときにレポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> イベントです。</param>
        <summary>提供されるレポート、 <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> プロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> イベントです。</param>
        <summary>ときに呼び出されます、 <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> プロパティが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データ。</param>
        <summary>
          <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付ルーティング イベントが発生すると呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> イベントです。</param>
        <summary>マウスの左ボタンが離されたことを報告するには、呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データ。</param>
        <summary>
          <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 添付ルーティング イベントが発生すると呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">データを提供 <see cref="T:System.Windows.Controls.SelectionChangedEventArgs" />します。</param>
        <summary>応答する、 <see cref="T:System.Windows.Controls.ComboBox" /> 選択の変更を発生させることによって、 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">指定した項目を表示するために使用する要素。</param>
        <param name="item">指定した項目。</param>
        <summary>指定した要素に指定した項目が表示されるように準備します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素の準備は、バインドの設定、スタイルの適用を伴うしたりできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItem">
      <MemberSignature Language="C#" Value="public object SelectionBoxItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectionBoxItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択ボックスに表示される項目を取得します。</summary>
        <value>選択された項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ControlTemplate> の <xref:System.Windows.Controls.ComboBox> で選択したアイテムを表示するこのプロパティを使用して、 <xref:System.Windows.Controls.ComboBox>です。  選択項目を取得する、 <xref:System.Windows.Controls.ComboBox> の外部、 <xref:System.Windows.Controls.ControlTemplate>, を使用して、 <xref:System.Windows.Controls.Primitives.Selector.SelectedItem%2A?displayProperty=fullName> このプロパティではなくプロパティです。  
  
<a name="xamlAttributeUsage_SelectionBoxItem"></a>   
## XAML 属性の使用方法  
  
```  
<object property="{TemplateBinding SelectionBoxItem}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItem"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例ではバインド、 <xref:System.Windows.Controls.ContentPresenter.Content%2A> のプロパティ、 <xref:System.Windows.Controls.ContentPresenter> に、 <xref:System.Windows.Controls.ComboBox.SelectionBoxItem%2A> プロパティです。<xref:System.Windows.Controls.ContentPresenter> の一部である、 <xref:System.Windows.Controls.ControlTemplate> の <xref:System.Windows.Controls.ComboBox>です。 完全なサンプルを参照してください。 [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)します。  
  
 [!code-xml[ControlTemplateExamples\#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormat">
      <MemberSignature Language="C#" Value="public string SelectionBoxItemStringFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectionBoxItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列として表示されている場合、選択ボックスで選択したアイテムの書式を設定する方法を指定する複合文字列を取得します。</summary>
        <value>文字列として表示されている場合、選択ボックスで選択したアイテムの書式を設定する方法を指定する複合文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemStringFormat" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate SelectionBoxItemTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate SelectionBoxItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択ボックスのコンテンツの項目テンプレートを取得します。</summary>
        <value>項目テンプレートです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_SelectionBoxItemTemplate"></a>   
## XAML 属性の使用方法  
  
```  
<object property="{TemplateBinding SelectionBoxItemTemplate}"/>  
```  
  
<a name="dependencyPropertyInfo_SelectionBoxItemTemplate"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例ではバインド、 <xref:System.Windows.Controls.ContentPresenter.Content%2A> のプロパティ、 <xref:System.Windows.Controls.ContentPresenter> に、 <xref:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate%2A> プロパティです。<xref:System.Windows.Controls.ContentPresenter> の一部である、 <xref:System.Windows.Controls.ControlTemplate> の <xref:System.Windows.Controls.ComboBox>です。 完全なサンプルを参照してください。 [Styling with ControlTemplates Sample](http://go.microsoft.com/fwlink/?LinkID=160041)します。  
  
 [!code-xml[ControlTemplateExamples\#ComboBoxSelectionBox](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/combobox.xaml#comboboxselectionbox)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBoxItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBoxItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBoxItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefix">
      <MemberSignature Language="C#" Value="public bool ShouldPreserveUserEnteredPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPreserveUserEnteredPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Windows.Controls.ComboBox" /> により、ユーザーの入力または入力に一致する項目を置き換えます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.ComboBox" /> ユーザーの入力; 保持 <see langword="false" /> 場合、 <see cref="T:System.Windows.Controls.ComboBox" /> 入力を登録済みの既定値は一致する項目に置き換えます <see langword="false" />します。 この値に影響する可能性があるものの詳細については、「[依存関係プロパティ値の優先順位](http://msdn.microsoft.com/ja-jp/1fbada8e-4867-4ed1-8d97-62c07dad7ebc)」を参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、ユーザーに文字列を入力すると、 <xref:System.Windows.Controls.ComboBox> その項目のいずれかに一致する、項目が選択されている、およびユーザーが入力したテキストが置き換えられます。  大文字小文字を変更するユーザーが入力したテキストがある可能性があります。 場合、 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Controls.ComboBox> 一致する項目を選択しますが、ユーザーが入力したテキストを保持します。   たとえば、たとえば次に示す、 <xref:System.Windows.Controls.ComboBox> を持つ、文字列「こんにちは」\(大文字の H\) ユーザーが入力した「こんにちは」\(小文字 h\) でします。  場合 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> は `false`, 、 <xref:System.Windows.Controls.ComboBox> コレクションに一致する項目の「こんにちは,」を選択し、その文字列では、そのテキスト ボックスに設定します。    場合 <xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix%2A> は `true`, 、「こんにちは」が、コレクションから選択されていますが、テキスト ボックスには「こんにちは」  
  
<a name="dependencyPropertyInfo_ShouldPreserveUserEnteredPrefix"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPreserveUserEnteredPrefixProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShouldPreserveUserEnteredPrefixProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefixProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.ShouldPreserveUserEnteredPrefix" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEdit">
      <MemberSignature Language="C#" Value="public bool StaysOpenOnEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpenOnEdit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、 <see cref="T:System.Windows.Controls.ComboBox" /> 開くとドロップダウン コントロールに残りますが表示されますが、ユーザーがクリックすると、それを開きますが、 <see cref="T:System.Windows.Controls.TextBox" />です。</summary>
        <value>
          <see langword="true" /> 編集; を開始するテキスト領域で、ユーザーがクリックしたときに保持するドロップダウン コントロールを開くそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_StaysOpenOnEdit"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Windows.Controls.ComboBox.StaysOpenOnEdit%2A> コンボ ボックスのドロップダウン リスト コントロールを作成するプロパティが、ユーザーがテキスト ボックスに情報を入力します。  
  
 [!code-xml[ComboBoxItems\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpenOnEditProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenOnEditProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenOnEditProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在選択されている項目のテキストを設定します。</summary>
        <value>現在選択されている項目の文字列です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Controls.ComboBox.IsEditable%2A> プロパティは、 `true`, 、テキスト ボックスに入力された最初のテキストを配置するこのプロパティを設定します。<xref:System.Windows.Controls.ComboBox.IsEditable%2A> は `false`, 、この値を設定しても効果がありません。  
  
<a name="dependencyPropertyInfo_Text"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ComboBox.TextProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## 例  
 この例では、どのように <xref:System.Windows.Controls.ComboBox.Text%2A> にテキストを設定するプロパティを使用することができます、 <xref:System.Windows.Controls.TextBox> 、ユーザーは、選択する前にします。  
  
 [!code-xml[ComboBoxItems\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxItems/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ComboBox.Text" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>