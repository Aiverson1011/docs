<Type Name="TreeView" FullName="System.Windows.Controls.TreeView">
  <TypeSignature Language="C#" Value="public class TreeView : System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TreeView extends System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TreeView" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.TreeViewItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>展開したり折りたたんだりできるアイテムを保有するツリー構造の階層型データを表示するコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.TreeView> <xref:System.Windows.Controls.ItemsControl>, 、つまり、任意の型 \(文字列、画像、パネルなど\) のオブジェクトのコレクションを含めることができます。 詳細については、<xref:System.Windows.Controls.ItemsControl> クラスを参照してください。  
  
 次の図は、単純な <xref:System.Windows.Controls.TreeView>です。  
  
 c921a62b-ec75-4751-9535-204643a4965c  
  
 内容、 <xref:System.Windows.Controls.TreeView> は <xref:System.Windows.Controls.TreeViewItem> など豊富なコンテンツを含めることができるコントロール <xref:System.Windows.Controls.Button> と <xref:System.Windows.Controls.Image> コントロールです。 A <xref:System.Windows.Controls.TreeViewItem> 1 つまたは複数を含めることができます <xref:System.Windows.Controls.TreeViewItem> とその子孫のオブジェクト。 A <xref:System.Windows.Controls.TreeView> の階層として定義された <xref:System.Windows.Controls.TreeViewItem> オブジェクトです。  
  
 A <xref:System.Windows.Controls.TreeView> をデータ ソースへのバインドを使用して、ツリーを設定できる <xref:System.Windows.HierarchicalDataTemplate> オブジェクトです。 データ ソースの例として、 <xref:System.Windows.Data.XmlDataProvider> と <xref:System.Collections.ObjectModel.ObservableCollection%601> オブジェクトです。  
  
 多くのアイテムを表示すると、パフォーマンスの問題が発生する可能性があります。  参照してください [のパフォーマンスの最適化: コントロール](http://msdn.microsoft.com/ja-jp/45a31c43-ea8a-4546-96c8-0631b9934179) の詳細。 パフォーマンスを向上させるために、 <xref:System.Windows.Controls.TreeView>, を参照してください [方法: TreeView のパフォーマンスを向上させる](http://msdn.microsoft.com/ja-jp/b792c740-cf2b-4da8-8ba8-3d2e5a821874)します。  
  
 詳細については、 <xref:System.Windows.Controls.TreeView> 制御を参照してください、 [TreeView の概要](http://msdn.microsoft.com/ja-jp/62212512-5a5c-4864-949e-b6a6a3a52c02)します。  
  
 A <xref:System.Windows.Controls.TreeView> したレベル数を制限します。 詳細については、「<xref:System.Windows.Media.Visual>」を参照してください。  
  
## TreeView コントロールをカスタマイズします。  
 複数に同じプロパティ設定を適用する <xref:System.Windows.Controls.TreeView> コントロールを使用して、 <xref:System.Windows.FrameworkElement.Style%2A> プロパティです。 既定値を変更する <xref:System.Windows.Controls.ControlTemplate> コントロール固有の外観を与えるためです。 作成の詳細については、 <xref:System.Windows.Controls.ControlTemplate>, を参照してください [ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  パーツおよびに固有の状態を確認する、 <xref:System.Windows.Controls.TreeView>, を参照してください [TreeView のスタイルとテンプレート](http://msdn.microsoft.com/ja-jp/a49adb77-0202-4caa-b94a-8bb110d7fa9a)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  Visual プロパティの設定は効果プロパティは、両方に存在する場合 <xref:System.Windows.Controls.TreeView> コントロールの既定のテンプレートとを使用して設定します。 「を変更する視覚的構造の、」の「コントロール」セクションで visual プロパティの一覧が見つかります [ControlTemplate 作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  
  
   
  
## 例  
 <xref:System.Windows.Controls.TreeView> を作成する方法を次のコード サンプルに示します。  
  
 [!code-xml[TreeViewSimple\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSimple/CS/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TreeViewItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.TreeView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandSubtree">
      <MemberSignature Language="C#" Value="protected virtual bool ExpandSubtree (System.Windows.Controls.TreeViewItem container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ExpandSubtree(class System.Windows.Controls.TreeViewItem container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.ExpandSubtree(System.Windows.Controls.TreeViewItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.Controls.TreeViewItem" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Windows.Controls.TreeViewItem" /> を展開します。</param>
        <summary>指定した展開 <see cref="T:System.Windows.Controls.TreeViewItem" /> コントロールとそのすべての子 <see cref="T:System.Windows.Controls.TreeViewItem" /> 要素。</summary>
        <returns>
          <see langword="true" /> 場合は、指定した <see cref="T:System.Windows.Controls.TreeViewItem" /> すべての子要素が展開された場合、それ以外の場合と <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.GetContainerForItemOverride" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Windows.Controls.TreeViewItem" /> を使用してコンテンツを表示します。</summary>
        <returns>新しい <see cref="T:System.Windows.Controls.TreeViewItem" /> コンテンツのコンテナーとして使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得するかどうか、 <see cref="T:System.Windows.Controls.TreeView" /> スクロールできます。</summary>
        <value>常に返します <see langword="true" /> コントロールがあるため、 <see cref="T:System.Windows.Controls.ScrollViewer" /> スタイルにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">評価するオブジェクト。</param>
        <summary>指定した項目が自身のコンテナーは、または、独自のコンテナーとなっていることができるかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="item" /> は、 <see cref="T:System.Windows.Controls.TreeViewItem" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>定義、 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> の <see cref="T:System.Windows.Controls.TreeView" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer" /> の <see cref="T:System.Windows.Controls.TreeView" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>発生させる、 <see cref="E:System.Windows.UIElement.GotFocus" /> ルーティングされたイベント。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.TreeView.OnGotFocus(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> イベントのキーボード フォーカスが変更された場合、 <see cref="T:System.Windows.Controls.TreeView" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供する <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged" /> で変更があるときに発生するイベント、 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.KeyDown" /> イベントを <see cref="T:System.Windows.Controls.TreeView" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装では設定 <xref:System.Windows.RoutedEventArgs.Handled%2A> に `true` 、CTRL キーと 1 つの次のキーが押された場合。  
  
-   <xref:System.Windows.Input.Key.End>  
  
-   <xref:System.Windows.Input.Key.Home>  
  
-   <xref:System.Windows.Input.Key.Left>  
  
-   <xref:System.Windows.Input.Key.Right>  
  
-   <xref:System.Windows.Input.Key.Down>  
  
-   <xref:System.Windows.Input.Key.Up>  
  
-   <xref:System.Windows.Input.Key.PageDown>  
  
-   <xref:System.Windows.Input.Key.PageUp>  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedItemChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedItemChanged (System.Windows.RoutedPropertyChangedEventArgs&lt;object&gt; e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedItemChanged(class System.Windows.RoutedPropertyChangedEventArgs`1&lt;object&gt; e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedPropertyChangedEventArgs&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="e">以前に選択したアイテムとアイテムの現在選択されている提供、 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> イベントです。</param>
        <summary>発生させる、 <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> イベント時に、 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> プロパティ値が変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント データをパラメーター `e` 提供が含まれています、 <xref:System.Windows.DependencyPropertyChangedEventArgs.OldValue%2A?displayProperty=fullName> と <xref:System.Windows.Ink.PropertyDataChangedEventArgs.NewValue%2A?displayProperty=fullName>です。<xref:System.Windows.DependencyPropertyChangedEventArgs.OldValue%2A?displayProperty=fullName> 選択されていたかに設定されている項目に設定されている `null` 以前に選択した項目がない場合。 同様に、 <xref:System.Windows.Ink.PropertyDataChangedEventArgs.NewValue%2A?displayProperty=fullName> 新しく選択された項目に設定されているかに設定されている `null` 新しい項目が選択されていない場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public object SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.TreeView" /> 内の選択された項目を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.TreeView" /> 内の選択されたオブジェクト。項目が選択されていない場合は <see langword="null" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.TreeView.SelectedItem%2A> プロパティを <xref:System.Windows.Controls.TreeView> コントロールは読み取り専用プロパティであり、項目に設定されているときに、 <xref:System.Windows.Controls.TreeViewItem.IsSelected%2A> 、アイテムのプロパティ値 <xref:System.Windows.Controls.TreeView> に設定されている `true`します。  
  
<a name="dependencyPropertyInfo_SelectedItem"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.TreeView.SelectedItemProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例の値を取得する方法を示しています、 <xref:System.Windows.Controls.TreeView.SelectedItem%2A> プロパティです。  
  
 [!code-csharp[TreeViewSnips\#SelectedItem](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSnips/CSharp/Window1.xaml.cs#selecteditem)]
 [!code-vb[TreeViewSnips\#SelectedItem](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TreeViewSnips/visualbasic/window1.xaml.vb#selecteditem)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValue" />
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedPropertyChangedEventHandler&lt;object&gt; SelectedItemChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedPropertyChangedEventHandler`1&lt;object&gt; SelectedItemChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.TreeView.SelectedItemChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedPropertyChangedEventHandler&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="routedEventInfo_SelectedItemChangedEvent"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.TreeView.SelectedItemChangedEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.RoutedPropertyChangedEventHandler%601>|  
  
<a name="xamlAttributeUsage_SelectedItemChanged"></a>   
## XAML 属性の使用方法  
  
```  
<object SelectedItemChanged="RoutedPropertyChangedEventHandler"/>  
```  
  
   
  
## 例  
 次の例では、イベント ハンドラーを指定する方法、 <xref:System.Windows.Controls.TreeView.SelectedItemChanged> イベントです。  
  
 [!code-xml[TreeViewSnips\#SelectedItemChanged](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSnips/CSharp/Window1.xaml#selecteditemchanged)]  
  
 次の例では、イベント ハンドラーを定義する方法を示します。  
  
 [!code-csharp[TreeViewSnips\#SelectedValueChangedMethod](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSnips/CSharp/Window1.xaml.cs#selectedvaluechangedmethod)]
 [!code-vb[TreeViewSnips\#SelectedValueChangedMethod](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TreeViewSnips/visualbasic/window1.xaml.vb#selectedvaluechangedmethod)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedItemChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedItemChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>は、指定されたプロパティの値を取得 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> の <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />です。</summary>
        <value>指定されたプロパティの値、 <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> の <see cref="P:System.Windows.Controls.TreeView.SelectedItem" />, 、または <see langword="null" /> 項目が選択されていない場合。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> プロパティの値を確認するために使用されるプロパティへのパスを指定する、 <xref:System.Windows.Controls.TreeView.SelectedValue%2A> プロパティです。  たとえば、あると想定して、 <xref:System.Windows.Controls.TreeView> 型のオブジェクトのコレクションにバインドされます `Employee`, と呼ばれる 2 つのプロパティを持つ `EmployeeName` と `EnployeeNumber`です。  使用することができます、 <xref:System.Windows.HierarchicalDataTemplate> の値を表示する `EmployeeName` で、 <xref:System.Windows.Controls.TreeView> 設定と <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> に `"EmployeeNumber"` して <xref:System.Windows.Controls.TreeView.SelectedValue%2A> の値を返します `EmployeeNumber`します。  
  
 <xref:System.Windows.Controls.TreeView.SelectedValue%2A> プロパティは読み取り専用プロパティです。 選択された項目の値を変更する、 <xref:System.Windows.Controls.TreeView>, を使用して、 <xref:System.Windows.Controls.TreeView.SelectedItem%2A> にアクセスするプロパティ、 <xref:System.Windows.Controls.TreeViewItem>です。  
  
<a name="dependencyPropertyInfo_SelectedValue"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.TreeView.SelectedValueProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 例を次に、 <xref:System.Windows.Controls.TreeView> を使用して、 <xref:System.Windows.HierarchicalDataTemplate> を表示する、 `EmployeeName` と `EmployeeWorkDay` のプロパティ、 `Employee` し、設定、 <xref:System.Windows.Controls.TreeView.SelectedValue%2A> プロパティを `EmployeeNumber`です。 選択した場合、 `EmployeeName` で、 <xref:System.Windows.Controls.TreeView>, 、 <xref:System.Windows.Controls.TreeView.SelectedValue%2A> に設定されている、 `EmployeeNumber`です。  
  
 [!code-xml[TreeViewSelectedValue\#SelectedValuePath](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSelectedValue/CS/Window1.xaml#selectedvaluepath)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValuePath" />
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValuePath">
      <MemberSignature Language="C#" Value="public string SelectedValuePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TreeView.SelectedValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するために使用するパス、 <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> の <see cref="P:System.Windows.Controls.TreeView.SelectedItem" /> で、 <see cref="T:System.Windows.Controls.TreeView" />です。</summary>
        <value>取得に使用するパスを含む文字列、 <see cref="P:System.Windows.Controls.TreeView.SelectedValue" />です。 既定値は <see langword="String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> プロパティの値を確認するために使用されるプロパティへのパスを指定する、 <xref:System.Windows.Controls.TreeView.SelectedValue%2A> プロパティです。 たとえば、あると想定して、 <xref:System.Windows.Controls.TreeView> 型のオブジェクトのコレクションにバインドされます `Employee`, と呼ばれる 2 つのプロパティを持つ `EmployeeName` と `EnployeeNumber`です。  使用することができます、 <xref:System.Windows.HierarchicalDataTemplate> の値を表示する `EmployeeName` で、 <xref:System.Windows.Controls.TreeView> 設定と <xref:System.Windows.Controls.TreeView.SelectedValuePath%2A> に `"EmployeeNumber"` して <xref:System.Windows.Controls.TreeView.SelectedValue%2A> の値を返します `EmployeeNumber`します。  
  
<a name="dependencyPropertyInfo_SelectedValuePath"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.TreeView.SelectedValuePathProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 例を次に、 <xref:System.Windows.Controls.TreeView> を使用して、 <xref:System.Windows.HierarchicalDataTemplate> を表示する、 `EmployeeName` と `EmployeeWorkDay` のプロパティ、 `Employee` し、設定、 <xref:System.Windows.Controls.TreeView.SelectedValue%2A> プロパティを `EmployeeNumber`です。 選択した場合、 `EmployeeName` で、 <xref:System.Windows.Controls.TreeView>, 、 <xref:System.Windows.Controls.TreeView.SelectedValue%2A> に設定されている、 `EmployeeNumber`です。  
  
 [!code-xml[TreeViewSelectedValue\#SelectedValuePath](~/samples/snippets/csharp/VS_Snippets_Wpf/TreeViewSelectedValue/CS/Window1.xaml#selectedvaluepath)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedValue" />
        <altmember cref="P:System.Windows.Controls.TreeView.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValuePathProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedValuePathProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedValuePathProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedValuePathProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValueProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedValueProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedValueProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TreeView.SelectedValueProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.TreeView.SelectedValue" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>