<Type Name="ToolBar" FullName="System.Windows.Controls.ToolBar">
  <TypeSignature Language="C#" Value="public class ToolBar : System.Windows.Controls.HeaderedItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToolBar extends System.Windows.Controls.HeaderedItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ToolBar" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.HeaderedItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ToolBarPanel", Type=typeof(System.Windows.Controls.Primitives.ToolBarPanel))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ToolBarOverflowPanel", Type=typeof(System.Windows.Controls.Primitives.ToolBarOverflowPanel))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コマンドまたはコントロールのグループのコンテナーを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.ToolBar> コントロールに表示されない項目を配置するオーバーフロー メカニズムを提供する、 <xref:System.Windows.Controls.ToolBar> オーバーフロー領域にします。 親ツールバー要素のみ <xref:System.Windows.Controls.ToolBarTray> 移動またはユーザーがサイズ変更できます。  
  
 <xref:System.Windows.Controls.ToolBar> <xref:System.Windows.Controls.HeaderedItemsControl>, 、任意の型 \(文字列、画像、パネルなど\) できる、ヘッダーとオブジェクトのコレクションを意味します。 詳細については、<xref:System.Windows.Controls.HeaderedItemsControl> クラスを参照してください。  
  
## ツール バー コントロールのカスタマイズ  
 複数に同じプロパティ設定を適用する <xref:System.Windows.Controls.ToolBar> コントロールを使用して、 <xref:System.Windows.FrameworkElement.Style%2A> プロパティです。 既定値を変更する <xref:System.Windows.Controls.ControlTemplate> コントロール固有の外観を与えるためです。 作成の詳細については、 <xref:System.Windows.Controls.ControlTemplate>, を参照してください [ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  パーツおよびに固有の状態を確認する、 <xref:System.Windows.Controls.ToolBar>, を参照してください [ToolBar のスタイルとテンプレート](http://msdn.microsoft.com/ja-jp/bd875f46-4690-46f5-81e0-f11a9822484f)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  Visual プロパティの設定は効果プロパティは、両方に存在する場合 <xref:System.Windows.Controls.ToolBar> コントロールの既定のテンプレートとを使用して設定します。 「を変更する視覚的構造の、」の「コントロール」セクションで visual プロパティの一覧が見つかります [ControlTemplate 作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Controls.ToolBar> 内、 <xref:System.Windows.Controls.ToolBarTray>です。  
  
 [!code-xml[ToolBarExample\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBarExample/CS/Pane1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />
    <altmember cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />
    <altmember cref="T:System.Windows.Controls.ToolBarTray" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolBar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ToolBar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Band">
      <MemberSignature Language="C#" Value="public int Band { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Band" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.Band" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>、ツールバーの位置を示す値を取得または、 <see cref="T:System.Windows.Controls.ToolBarTray" />です。</summary>
        <value>帯域外、 <see cref="T:System.Windows.Controls.ToolBarTray" /> ツールバーが配置されているのです。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 位置、 <xref:System.Windows.Controls.ToolBar> で、 <xref:System.Windows.Controls.ToolBarTray> の値に依存します、 <xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.ToolBar.Band%2A>, 、および <xref:System.Windows.Controls.ToolBar.BandIndex%2A> プロパティです。<xref:System.Windows.Controls.ToolBarTray.Orientation%2A> に設定されている <xref:System.Windows.Controls.Orientation.Horizontal>, 、バンド内の行を表す、 <xref:System.Windows.Controls.ToolBarTray>です。<xref:System.Windows.Controls.ToolBarTray.Orientation%2A> は <xref:System.Windows.Controls.Orientation.Vertical>, 、バンドの列を表す、 <xref:System.Windows.Controls.ToolBarTray>です。 次の表に、関係 <xref:System.Windows.Controls.ToolBarTray.Orientation%2A>, 、<xref:System.Windows.Controls.ToolBar.Band%2A>, 、および <xref:System.Windows.Controls.ToolBar.BandIndex%2A>です。  
  
|\[方向\]|帯域外|BandIndex|  
|------------|---------|---------------|  
|\[水平方向\]|行を示す、 <xref:System.Windows.Controls.ToolBar> が配置されています。 ツールバー <xref:System.Windows.Controls.ToolBar.Band%2A> より小さい値に設定するがより大きい値を持つを超えています。|位置を示す、 <xref:System.Windows.Controls.ToolBar> 上、 <xref:System.Windows.Controls.ToolBar.Band%2A>です。 ツールバー <xref:System.Windows.Controls.ToolBar.BandIndex%2A> より大きい値を持つユーザーの左側に配置されてより小さい値に設定します。|  
|Vertical|列を示す、 <xref:System.Windows.Controls.ToolBar> が配置されています。 ツールバー <xref:System.Windows.Controls.ToolBar.Band%2A> より大きい値を持つユーザーの左側に配置されてより小さい値に設定します。|位置を示す、 <xref:System.Windows.Controls.ToolBar> 上、 <xref:System.Windows.Controls.ToolBar.Band%2A>です。 ツールバー <xref:System.Windows.Controls.ToolBar.BandIndex%2A> より小さい値に設定するがより大きい値を持つを超えています。|  
  
<a name="dependencyPropertyInfo_Band"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ToolBar.BandProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
   
  
## 例  
 次の例は、配置するこのプロパティを使用する方法 <xref:System.Windows.Controls.ToolBar> 内の制御、 <xref:System.Windows.Controls.ToolBarTray>です。  
  
 [!code-xml[ToolBarExample\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBarExample/CS/Pane1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />
        <altmember cref="T:System.Windows.Controls.ToolBarTray" />
      </Docs>
    </Member>
    <Member MemberName="BandIndex">
      <MemberSignature Language="C#" Value="public int BandIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BandIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.BandIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはツールバーのバンドの位置を示すバンド インデックス番号を設定します。</summary>
        <value>帯域外上のツールバーの位置、 <see cref="T:System.Windows.Controls.ToolBarTray" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを明示的に設定しないと場合、その値は、順序によって決まりますが、 <xref:System.Windows.Controls.ToolBar> 設定されている、 <xref:System.Windows.Controls.ToolBarTray>です。 2 つのツールバーに配置する場合など、 <xref:System.Windows.Controls.ToolBarTray> が設定されていない、 <xref:System.Windows.Controls.ToolBar.Band%2A> と <xref:System.Windows.Controls.ToolBar.BandIndex%2A> プロパティ、値の <xref:System.Windows.Controls.ToolBar.Band%2A> は両方のツールバーを 0 になります。 値 <xref:System.Windows.Controls.ToolBar.BandIndex%2A> 最初のツールバーの場合は 0 と 2 番目のツールバーの 1 になります。  
  
 位置、 <xref:System.Windows.Controls.ToolBar> で、 <xref:System.Windows.Controls.ToolBarTray> の値に依存します、 <xref:System.Windows.Controls.ToolBarTray.Orientation%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.ToolBar.Band%2A>, 、および <xref:System.Windows.Controls.ToolBar.BandIndex%2A> プロパティです。<xref:System.Windows.Controls.ToolBarTray.Orientation%2A> に設定されている <xref:System.Windows.Controls.Orientation.Horizontal>, 、バンド内の行を表す、 <xref:System.Windows.Controls.ToolBarTray>です。<xref:System.Windows.Controls.ToolBarTray.Orientation%2A> は <xref:System.Windows.Controls.Orientation.Vertical>, 、バンドの列を表す、 <xref:System.Windows.Controls.ToolBarTray>です。 次の表に、関係 <xref:System.Windows.Controls.ToolBarTray.Orientation%2A>, 、<xref:System.Windows.Controls.ToolBar.Band%2A>, 、および <xref:System.Windows.Controls.ToolBar.BandIndex%2A>です。  
  
|\[方向\]|帯域外|BandIndex|  
|------------|---------|---------------|  
|\[水平方向\]|行を示す、 <xref:System.Windows.Controls.ToolBar> が配置されています。 ツールバー <xref:System.Windows.Controls.ToolBar.Band%2A> より小さい値に設定するがより大きい値を持つを超えています。|位置を示す、 <xref:System.Windows.Controls.ToolBar> 上、 <xref:System.Windows.Controls.ToolBar.Band%2A>です。 ツールバー <xref:System.Windows.Controls.ToolBar.BandIndex%2A> より大きい値を持つユーザーの左側に配置されてより小さい値に設定します。|  
|Vertical|列を示す、 <xref:System.Windows.Controls.ToolBar> が配置されています。 ツールバー <xref:System.Windows.Controls.ToolBar.Band%2A> より大きい値を持つユーザーの左側に配置されてより小さい値に設定します。|位置を示す、 <xref:System.Windows.Controls.ToolBar> 上、 <xref:System.Windows.Controls.ToolBar.Band%2A>です。 ツールバー <xref:System.Windows.Controls.ToolBar.BandIndex%2A> より小さい値に設定するがより大きい値を持つを超えています。|  
  
<a name="dependencyPropertyInfo_BandIndex"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ToolBar.BandIndexProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
   
  
## 例  
 次の例は、配置するこのプロパティを使用する方法 <xref:System.Windows.Controls.ToolBar> 内の制御、 <xref:System.Windows.Controls.ToolBarTray>です。  
  
 [!code-xml[ToolBarExample\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBarExample/CS/Pane1.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />
        <altmember cref="T:System.Windows.Controls.ToolBarTray" />
      </Docs>
    </Member>
    <Member MemberName="BandIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BandIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BandIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ToolBar.BandIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ToolBar.BandIndex" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ToolBar.BandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ToolBar.Band" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ButtonStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ButtonStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.ButtonStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Style" /> ツールバーのボタンに適用します。</summary>
        <value>ツールバーのボタンの既定のスタイルを表すリソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定のスタイルを使用する <xref:System.Windows.Controls.Button> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
<a name="xamlAttributeUsage_ButtonStyleKey"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ*\="`{` **ToolBar.ButtonStyleKey**`}"/>`  
  
   
  
## 例  
 次の例では、このプロパティを使用して適用する方法、 <xref:System.Windows.Style> に <xref:System.Windows.Controls.Button> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
 [!code-xml[ToolBar\_snip\#ToolBarButtonStyleKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBar_snip/CS/pane1.xaml#toolbarbuttonstylekey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBoxStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey CheckBoxStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey CheckBoxStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.CheckBoxStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Style" /> のチェック ボックスをオンに適用される、 <see cref="T:System.Windows.Controls.ToolBar" />です。</summary>
        <value>リソース キーのチェック ボックスの既定のスタイルを表す、 <see cref="T:System.Windows.Controls.ToolBar" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定のスタイルを使用する <xref:System.Windows.Controls.CheckBox> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
<a name="xamlAttributeUsage_CheckBoxStyleKey"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ*\="`{` **ToolBar.CheckBoxStyleKey**`}"/>`  
  
   
  
## 例  
 次の例では、このプロパティを使用して、 <xref:System.Windows.Style> に <xref:System.Windows.Controls.CheckBox> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
 [!code-xml[ToolBar\_snip\#ToolBarCheckBoxStyleKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBar_snip/CS/pane1.xaml#toolbarcheckboxstylekey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComboBoxStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ComboBoxStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ComboBoxStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.ComboBoxStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Style" /> 上コンボ ボックスに適用する、 <see cref="T:System.Windows.Controls.ToolBar" />です。</summary>
        <value>ツールバーのコンボ ボックスの既定のスタイルを表すリソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定のスタイルを使用する <xref:System.Windows.Controls.ComboBox> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
<a name="xamlAttributeUsage_ComboBoxStyleKey"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ*\="`{` **ToolBar.ComboBoxStyleKey**`}"/>`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsOverflowItem">
      <MemberSignature Language="C#" Value="public static bool GetIsOverflowItem (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsOverflowItem(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.GetIsOverflowItem(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">プロパティの読み取り元要素。</param>
        <summary>値を読み取り、 <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> プロパティを指定した要素からです。</summary>
        <returns>プロパティの値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOverflowMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.OverflowMode GetOverflowMode (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Controls.OverflowMode GetOverflowMode(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.GetOverflowMode(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren(IncludeDescendants=true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.OverflowMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">プロパティの読み取り元要素。</param>
        <summary>値を読み取り、 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> プロパティを指定した要素からです。</summary>
        <returns>プロパティの値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 可能なモード値を参照してください。 <xref:System.Windows.Controls.OverflowMode>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOverflowItems">
      <MemberSignature Language="C#" Value="public bool HasOverflowItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOverflowItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.HasOverflowItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールバーに表示されていない項目があるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 表示されない場合は、ツールバーの項目がある場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Controls.ToolBar> 他のアイテムを表示する領域の数よりも、オーバーフローにあるその他のアイテムを配置します。 ユーザーは、矢印をクリックして、 <xref:System.Windows.Controls.ToolBar> オーバーフロー項目にアクセスします。  
  
<a name="dependencyPropertyInfo_HasOverflowItems"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ToolBar.HasOverflowItemsProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />
        <altmember cref="T:System.Windows.Controls.ToolBarTray" />
      </Docs>
    </Member>
    <Member MemberName="HasOverflowItemsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasOverflowItemsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasOverflowItemsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ToolBar.HasOverflowItemsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverflowItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOverflowItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOverflowItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ToolBar.IsOverflowItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem" /> 添付プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverflowOpen">
      <MemberSignature Language="C#" Value="public bool IsOverflowOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOverflowOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.IsOverflowOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Windows.Controls.ToolBar" /> オーバーフロー領域が現在表示されています。</summary>
        <value>
          <see langword="true" /> オーバーフロー領域を表示する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_IsOverflowOpen"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ToolBar.IsOverflowOpenProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />
        <altmember cref="T:System.Windows.Controls.ToolBarTray" />
      </Docs>
    </Member>
    <Member MemberName="IsOverflowOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOverflowOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOverflowOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ToolBar.IsOverflowOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">測定値の制約。 A <see cref="T:System.Windows.Controls.ToolBar" /> 制約よりも大きいサイズを返すことはできません。</param>
        <summary>Remeasures、 <see cref="T:System.Windows.Controls.ToolBar" />です。</summary>
        <returns>
          <see cref="T:System.Windows.Controls.ToolBar" /> のサイズ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey MenuStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey MenuStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.MenuStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Style" /> 上のメニューに適用する、 <see cref="T:System.Windows.Controls.ToolBar" />です。</summary>
        <value>ツールバーのメニューの既定のスタイルを表すリソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定のスタイルを使用する <xref:System.Windows.Controls.Menu> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
<a name="xamlAttributeUsage_MenuStyleKey"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ*\="`{` **ToolBar.MenuStyleKey**`}"/>`  
  
   
  
## 例  
 次の例では、このプロパティを使用して、 <xref:System.Windows.Style> に <xref:System.Windows.Controls.Menu> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
 [!code-xml[ToolBar\_snip\#ToolBarMenuStyleKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBar_snip/CS/pane1.xaml#toolbarmenustylekey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>適切な提供 <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer" /> の一部としてこのコントロールの実装、 WPF インフラストラクチャです。</summary>
        <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">引数、 <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> イベントです。</param>
        <summary>ときに呼び出されます、 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> プロパティが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">引数、 <see cref="E:System.Windows.UIElement.KeyDown" /> イベントです。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.KeyDown" /> ルーティングされたイベント内のアイテムのキーが押されたときに発生する、 <see cref="T:System.Windows.Controls.ToolBar" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 押されたとき、最初の項目、 <xref:System.Windows.Controls.ToolBar> がキーボード フォーカスを取得します。 ユーザーが終了すると、最後の項目を押したとき、 <xref:System.Windows.Controls.ToolBar> がキーボード フォーカスを取得します。 この場合、この実装ではマーク、 <xref:System.Windows.UIElement.KeyDown> イベントを処理するには、 <xref:System.Windows.RoutedEventArgs.Handled%2A> するイベント データのプロパティ `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If you override <see cref="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">引数、 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> イベントです。</param>
        <summary>クラスの処理を提供、 <see cref="E:System.Windows.UIElement.LostMouseCapture" /> ルーティングされたイベントが発生するときに、 <see cref="T:System.Windows.Controls.ToolBar" /> マウス キャプチャを失った。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装では、処理済みの状態は変更されません \(、 <xref:System.Windows.RoutedEventArgs.Handled%2A> プロパティ\) の <xref:System.Windows.UIElement.LostMouseCapture> イベント データ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If you override <see cref="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ToolBar" /> の向きを取得します。</summary>
        <value>ツールバーの向き。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、親からその値を取得 <xref:System.Windows.Controls.ToolBarTray>します。  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.ToolBar.OrientationProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例を確認する方法を示して かどうか、 <xref:System.Windows.Controls.ToolBar> は垂直に表示します。  
  
 [!code-csharp[ToolBarOrient\_snip\#ToolBarOrientation](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBarOrient_snip/CSharp/Pane1.xaml.cs#toolbarorientation)]
 [!code-vb[ToolBarOrient\_snip\#ToolBarOrientation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ToolBarOrient_snip/visualbasic/pane1.xaml.vb#toolbarorientation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel" />
        <altmember cref="T:System.Windows.Controls.Primitives.ToolBarPanel" />
        <altmember cref="T:System.Windows.Controls.ToolBarTray" />
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ToolBar.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Orientation" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverflowModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverflowModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverflowModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ToolBar.OverflowModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> 添付プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">この要素は、アイテムが表示されます。</param>
        <param name="item">表示する項目。</param>
        <summary>指定した要素に指定した項目が表示されるように準備します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioButtonStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey RadioButtonStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey RadioButtonStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.RadioButtonStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Style" /> ツールバーにあるオプション ボタンに適用します。</summary>
        <value>ツールバーのオプション ボタンの既定のスタイルを表すリソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定のスタイルを使用する <xref:System.Windows.Controls.RadioButton> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
<a name="xamlAttributeUsage_RadioButtonStyleKey"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ*\="`{` **ToolBar.RadioButtonStyleKey**`}"/>`  
  
   
  
## 例  
 次の例では、このプロパティを使用して、 <xref:System.Windows.Style> に <xref:System.Windows.Controls.RadioButton> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
 [!code-xml[ToolBar\_snip\#ToolBarRadioButtonStyleKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBar_snip/CS/pane1.xaml#toolbarradiobuttonstylekey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey SeparatorStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey SeparatorStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.SeparatorStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Style" /> 上の区切り記号に適用する、 <see cref="T:System.Windows.Controls.ToolBar" />です。</summary>
        <value>ツールバーの区分線の既定のスタイルを表すリソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定のスタイルを使用する <xref:System.Windows.Controls.Separator> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
<a name="xamlAttributeUsage_SeparatorStyleKey"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ*\="`{` **ToolBar.SeparatorStyleKey**`}"/>`  
  
   
  
## 例  
 次の例では、このプロパティを使用して、 <xref:System.Windows.Style> に <xref:System.Windows.Controls.Separator> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
 [!code-xml[ToolBar\_snip\#ToolBarSeparatorStyleKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBar_snip/CS/pane1.xaml#toolbarseparatorstylekey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOverflowMode">
      <MemberSignature Language="C#" Value="public static void SetOverflowMode (System.Windows.DependencyObject element, System.Windows.Controls.OverflowMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOverflowMode(class System.Windows.DependencyObject element, valuetype System.Windows.Controls.OverflowMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ToolBar.SetOverflowMode(System.Windows.DependencyObject,System.Windows.Controls.OverflowMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="mode" Type="System.Windows.Controls.OverflowMode" />
      </Parameters>
      <Docs>
        <param name="element">プロパティの書き込み先の要素。</param>
        <param name="mode">設定するプロパティ値。</param>
        <summary>値を書き込み、 <see cref="P:System.Windows.Controls.ToolBar.OverflowMode" /> プロパティに指定された要素をします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 可能なモード値を参照してください。 <xref:System.Windows.Controls.OverflowMode>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey TextBoxStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey TextBoxStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.TextBoxStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Style" /> 上のテキスト ボックスに適用する、 <see cref="T:System.Windows.Controls.ToolBar" />です。</summary>
        <value>ツールバーのテキスト ボックスの既定のスタイルを表すリソース キー</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの既定のスタイルを使用する <xref:System.Windows.Controls.TextBox> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
<a name="xamlAttributeUsage_TextBoxStyleKey"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ*\="`{` **ToolBar.TextBoxStyleKey**`}"/>`  
  
   
  
## 例  
 次の例では、このプロパティを使用すると、 <xref:System.Windows.Style> の <xref:System.Windows.Controls.TextBox> のコントロールに対して、 <xref:System.Windows.Controls.ToolBar>です。  
  
 [!code-xml[ToolBar\_snip\#ToolBarTextBoxStyleKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ToolBar_snip/CS/pane1.xaml#toolbartextboxstylekey)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleButtonStyleKey">
      <MemberSignature Language="C#" Value="public static System.Windows.ResourceKey ToggleButtonStyleKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.ResourceKey ToggleButtonStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ToolBar.ToggleButtonStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ToolBar" /> 上の <see cref="T:System.Windows.Controls.Primitives.ToggleButton" /> コントロールに適用される <see cref="T:System.Windows.Style" /> を取得します。</summary>
        <value>ツールバーのトグル ボタンの既定のスタイルを表すリソース キー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this property to change the default style of <xref:System.Windows.Controls.Primitives.ToggleButton> controls on the <xref:System.Windows.Controls.ToolBar>.  
  
<a name="xamlAttributeUsage_ToggleButtonStyleKey"></a>   
## XAML Attribute Usage  
 \<**legacyItalic tag is not supported!!!!**  
 **legacyItalic tag is not supported!!!!**  
\="`{` **legacyBold tag is not supported!!!!**  
`}"/>`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>