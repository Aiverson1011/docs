<Type Name="HeaderedItemsControl" FullName="System.Windows.Controls.HeaderedItemsControl">
  <TypeSignature Language="C#" Value="public class HeaderedItemsControl : System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HeaderedItemsControl extends System.Windows.Controls.ItemsControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.HeaderedItemsControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ItemsControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Header")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Menu)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>複数の項目を含み、ヘッダーを持つコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスを使用して、見出し \(またはタイトル\) を格納しているコントロールを作成して複数の項目。<xref:System.Windows.Controls.HeaderedItemsControl.Header%2A?displayProperty=fullName> プロパティは、任意の型を指定できます。[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 継承する 3 つのコントロールを出荷 <xref:System.Windows.Controls.HeaderedItemsControl>:  
  
-   <xref:System.Windows.Controls.MenuItem>  
  
-   <xref:System.Windows.Controls.ToolBar>  
  
-   <xref:System.Windows.Controls.TreeViewItem>  
  
 A <xref:System.Windows.Controls.HeaderedItemsControl> 制限の既定のスタイルが適用されています。 作成する、 <xref:System.Windows.Controls.HeaderedItemsControl> 独自の外観を新規作成 <xref:System.Windows.Controls.ControlTemplate>します。  
  
 設定、 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> のラベルを指定するプロパティ、 <xref:System.Windows.Controls.HeaderedItemsControl>です。<xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> オブジェクトの型に指定できます。  設定、 <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> プロパティを <xref:System.Windows.DataTemplate> ヘッダーをカスタマイズします。  データ テンプレートの詳細については、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.TreeViewItem>です。<xref:System.Windows.Controls.TreeView> コントロールには、1 つが含まれている <xref:System.Windows.Controls.TreeViewItem>, 、ラベルが付いている `TreeViewItem 1`, に次の項目があるとします。  
  
-   文字列。  
  
-   <xref:System.DateTime> オブジェクト。  
  
-   A <xref:System.Windows.Controls.TreeViewItem> オブジェクトを含む、 <xref:System.Windows.Shapes.Rectangle> でその <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>します。  
  
-   A <xref:System.Windows.Controls.TreeViewItem> オブジェクト <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> にプロパティが設定されている、 <xref:System.Windows.Controls.StackPanel> 2 つのオブジェクトを格納しています。  
  
> [!NOTE]
>  明示的に作成する例では、 <xref:System.Windows.Controls.TreeViewItem> ため 2 つの項目を最後のオブジェクトを <xref:System.Windows.Shapes.Rectangle> と <xref:System.Windows.Controls.StackPanel> から継承、 <xref:System.Windows.Media.Visual> クラスです。 既定のスタイル、 <xref:System.Windows.Controls.TreeViewItem> 設定、 <xref:System.Windows.Controls.Control.Foreground%2A> プロパティです。 子オブジェクトが明示的に作成されたからプロパティ値を継承 <xref:System.Windows.Controls.TreeViewItem>, 、つまり一般的に、目的の動作です。  
  
 [!code-xml[ControlContentOverviewSnippets\#17](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlContentOverviewSnippets/CSharp/Window1.xaml#17)]  
  
 次の例を作成し、 <xref:System.Windows.Controls.ControlTemplate> の <xref:System.Windows.Controls.HeaderedItemsControl>です。  
  
 [!code-xml[HeaderedItemsControl#HeaderedItemsControl_Style](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_style)]  
[!code-xml[HeaderedItemsControl#HeaderedItemsControl](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HeaderedItemsControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHeader">
      <MemberSignature Language="C#" Value="public bool HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうかこの <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> ヘッダーがあります。</summary>
        <value>
          <see langword="true" /> コントロールに、ヘッダーがある場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> プロパティは、 `null`, 、このプロパティを返します `false`します。  
  
<a name="dependencyPropertyInfo_HasHeader"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、このプロパティを使用して、コントロールにヘッダーがあるかどうかを判断する方法を示します。  
  
 [!code-csharp[HeaderedItemsControl\#HeaderedItemsControl\_HasHeader](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml.cs#headereditemscontrol_hasheader)]
 [!code-vb[HeaderedItemsControl\#HeaderedItemsControl\_HasHeader](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HeaderedItemsControl/visualbasic/page1.xaml.vb#headereditemscontrol_hasheader)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasHeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasHeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasHeaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public object Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Header" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアイテム コントロールにラベルを設定します。</summary>
        <value>ラベルを付けるオブジェクト、 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />です。 既定値は、<see langword="null" /> です。 ヘッダーが指定できるは、文字列、または <see cref="T:System.Windows.UIElement" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> プロパティの型は <xref:System.Object>, に配置できるに制限はありません、 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>です。<xref:System.Windows.Controls.HeaderedItemsControl.Header%2A> によって表示される、 <xref:System.Windows.Controls.ContentPresenter>, 、これは、 <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> の <xref:System.Windows.Controls.HeaderedItemsControl>です。 方法の詳細については <xref:System.Windows.Controls.ContentPresenter> を表示、 <xref:System.Windows.Controls.HeaderedItemsControl.Header%2A>, を参照してください <xref:System.Windows.Controls.ContentPresenter>します。  
  
<a name="xamlAttributeUsage_Header"></a>   
## XAML 属性の使用方法  
  
```  
<object Header="headerString"/>  
```  
  
<a name="xamlPropertyElementUsage_Header"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.Header>  
    <UIElement />  
  </object.Header>  
</object>  
  
```  
  
<a name="xamlValues_Header"></a>   
## XAML 値  
 *headerString*  
 見出しとして使用する文字列。  
  
<a name="dependencyPropertyInfo_Header"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.HeaderedItemsControl.HeaderProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、作成し、ヘッダー テンプレートを使用して、ヘッダーの外観を指定する方法を示します。  
  
 [!code-xml[HeaderedItemsControl#HeaderedItemsControl_Style](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_style)]  
[!code-xml[HeaderedItemsControl#HeaderedItemsControl_Template1](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template1)]  
[!code-xml[HeaderedItemsControl#HeaderedItemsControl_Template2](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の書式を設定する方法を指定する複合文字列、 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティを文字列として表示されている場合。</summary>
        <value>書式を設定する方法を指定する複合文字列、 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティを文字列として表示されている場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのヘッダーの内容を表示するために使用するテンプレートを設定します。</summary>
        <value>コントロールのヘッダーの表示に使用されるデータ テンプレートです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 見出しをカスタマイズする、 <xref:System.Windows.Controls.HeaderedItemsControl>, 、このプロパティを設定、 <xref:System.Windows.DataTemplate>です。 データ テンプレートの詳細については、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
<a name="xamlAttributeUsage_HeaderTemplate"></a>   
## XAML 属性の使用方法  
  
```  
<object HeaderTemplate="{ResourceExtension TemplateResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplate"></a>   
## XAML プロパティ要素の使用  
  
<a name="xamlValues_HeaderTemplate"></a>   
## XAML 値  
 *ResourceExtension*  
 次のいずれか: `StaticResource`, 、または `DynamicResource`です。 参照してください [XAML リソース](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f)します。  
  
 *TemplateResourceKey*  
 要求されているテンプレートを識別するキー。 このキーは既存のリソースを <xref:System.Windows.ResourceDictionary>です。  
  
> [!NOTE]
>  プロパティ要素構文は、技術的に可能ですが、推奨されません。 参照してください [インライン スタイルおよびテンプレート](http://msdn.microsoft.com/ja-jp/69a1a3f9-acb5-4e2c-9c43-2e376c055ac4)します。 バインディングを使用して参照またはも可能であればが一般的ではありません。  
  
<a name="dependencyPropertyInfo_HeaderTemplate"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、作成し、ヘッダー テンプレートを使用して、ヘッダーの外観を指定する方法を示します。  
  
 [!code-xml[HeaderedItemsControl#HeaderedItemsControl_Style](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_style)]  
[!code-xml[HeaderedItemsControl#HeaderedItemsControl_Template1](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template1)]  
[!code-xml[HeaderedItemsControl#HeaderedItemsControl_Template2](~/samples/snippets/csharp/VS_Snippets_Wpf/HeaderedItemsControl/CSharp/Page1.xaml#headereditemscontrol_template2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.HierarchicalDataTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の各アイテムのヘッダーの表示に使用されるテンプレートの選択のカスタム ロジックを提供するオブジェクト。</summary>
        <value>データのテンプレート セレクター。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、作成、 <xref:System.Windows.Controls.DataTemplateSelector> 1 つ以上ある場合 <xref:System.Windows.DataTemplate> オブジェクトの同じ型を選択する、独自のロジックを指定する、 <xref:System.Windows.DataTemplate> 各データ オブジェクトのプロパティに基づいて適用します。 別のオブジェクトがある場合は、データ型を設定、 <xref:System.Windows.DataTemplate.DataType%2A> プロパティを <xref:System.Windows.DataTemplate>です。 操作を行うかどうかは、作成する必要はありません、 <xref:System.Windows.Controls.DataTemplateSelector>です。 さらに、同じタイプの異なるプロパティを持つオブジェクトがあれば、することも検討を使用して、 <xref:System.Windows.DataTrigger> またはデータ コンバーターです。 詳細については、次を参照してください。 [データ テンプレートの概要](http://msdn.microsoft.com/ja-jp/0f4d9f8c-0230-4013-bd7b-e8e7fed01b4a)します。  
  
 テンプレート セレクターを作成するから継承するクラスを作成 <xref:System.Windows.Controls.DataTemplateSelector> させ、 <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> メソッドです。 クラスを定義した後は、要素のテンプレート セレクター プロパティに、クラスのインスタンスを割り当てることができます。  
  
 どちらの場合、 <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector%2A> と <xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate%2A> プロパティが設定されて、テンプレート セレクター プロパティは無視されます。  
  
<a name="xamlAttributeUsage_HeaderTemplateSelector"></a>   
## XAML 属性の使用方法  
  
```  
<object HeaderTemplateSelector="{ResourceExtension DataTemplateSelectorClassKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplateSelector"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.HeaderTemplateSelector>  
    <MyDataTemplateSelectorImplementation .../>  
  </object.HeaderTemplateSelector>  
</object>  
```  
  
<a name="xamlValues_HeaderTemplateSelector"></a>   
## XAML 値  
 *MyDataTemplateSelectorImplementation*  
 派生したクラス <xref:System.Windows.Controls.DataTemplateSelector> 実用的を実装する <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> をオーバーライドします。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間および WPF XAML の名前空間のマッピング](http://msdn.microsoft.com/ja-jp/5c0854e3-7470-435d-9fe2-93eec9d3634e)します。  
  
 *ResourceExtension*  
 次のいずれか: `StaticResource`, 、または `DynamicResource`です。 参照してください [XAML リソース](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f)します。  
  
 *DataTemplateSelectorClassKey*  
 要求されたセレクターの実装を識別するキー。 このキーは、実用的なを実装する派生クラス <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> をオーバーライドします。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間および WPF XAML の名前空間のマッピング](http://msdn.microsoft.com/ja-jp/5c0854e3-7470-435d-9fe2-93eec9d3634e)します。 インスタンスを追加することもプログラムを使用して、 <xref:System.Windows.Controls.DataTemplateSelector> クラスをリソースとして、リソース ディクショナリにします。  
  
<a name="dependencyPropertyInfo_HeaderTemplateSelector"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.HeaderedItemsControl.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>論理上の子要素に列挙子を取得、 <see cref="T:System.Windows.Controls.HeaderedItemsControl" />です。</summary>
        <value>列挙子。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderChanged (object oldHeader, object newHeader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderChanged(object oldHeader, object newHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeader" Type="System.Object" />
        <Parameter Name="newHeader" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldHeader">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティの変更前の値。</param>
        <param name="newHeader">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> プロパティの新しい値。</param>
        <summary>ときに呼び出されます、 <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header" /> のプロパティ、 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> 変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderStringFormatChanged (string oldHeaderStringFormat, string newHeaderStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderStringFormatChanged(string oldHeaderStringFormat, string newHeaderStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderStringFormatChanged(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderStringFormat" Type="System.String" />
        <Parameter Name="newHeaderStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldHeaderStringFormat">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> プロパティの変更前の値。</param>
        <param name="newHeaderStringFormat">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderStringFormat" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderTemplateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderTemplateChanged (System.Windows.DataTemplate oldHeaderTemplate, System.Windows.DataTemplate newHeaderTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderTemplateChanged(class System.Windows.DataTemplate oldHeaderTemplate, class System.Windows.DataTemplate newHeaderTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="newHeaderTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="oldHeaderTemplate">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> プロパティの変更前の値。</param>
        <param name="newHeaderTemplate">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> プロパティの新しい値。</param>
        <summary>ときに呼び出されます、 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate" /> プロパティが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderTemplateSelectorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderTemplateSelectorChanged (System.Windows.Controls.DataTemplateSelector oldHeaderTemplateSelector, System.Windows.Controls.DataTemplateSelector newHeaderTemplateSelector);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderTemplateSelectorChanged(class System.Windows.Controls.DataTemplateSelector oldHeaderTemplateSelector, class System.Windows.Controls.DataTemplateSelector newHeaderTemplateSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
        <Parameter Name="newHeaderTemplateSelector" Type="System.Windows.Controls.DataTemplateSelector" />
      </Parameters>
      <Docs>
        <param name="oldHeaderTemplateSelector">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> プロパティの変更前の値。</param>
        <param name="newHeaderTemplateSelector">
          <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> プロパティの新しい値。</param>
        <summary>ときに呼び出されます、 <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector" /> プロパティが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.HeaderedItemsControl.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>文字列表現を返します、 <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> オブジェクトです。</summary>
        <returns>このオブジェクトを表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻るヘッダー プロパティと内の項目の数に関する情報を表す文字列、 <xref:System.Windows.Controls.ItemsControl.Items%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>