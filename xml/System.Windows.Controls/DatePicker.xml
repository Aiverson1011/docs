<Type Name="DatePicker" FullName="System.Windows.Controls.DatePicker">
  <TypeSignature Language="C#" Value="public class DatePicker : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi DatePicker extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DatePicker" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Root", Type=typeof(System.Windows.Controls.Grid))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_TextBox", Type=typeof(System.Windows.Controls.Primitives.DatePickerTextBox))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Button", Type=typeof(System.Windows.Controls.Button))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Popup", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーが日付を選択できるコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.DatePicker> コントロールによりユーザーは入力テキスト フィールドにするか、またはドロップダウン リストを使用して日付を選択する <xref:System.Windows.Controls.Calendar> コントロールです。  
  
 多くは、 <xref:System.Windows.Controls.DatePicker> コントロールのプロパティは、その組み込みを管理するため、 <xref:System.Windows.Controls.Calendar>, と同等のプロパティと同様に関数 <xref:System.Windows.Controls.Calendar>します。 具体的には、 <xref:System.Windows.Controls.DatePicker.IsTodayHighlighted%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.DatePicker.FirstDayOfWeek%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.DatePicker.BlackoutDates%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.DatePicker.DisplayDateStart%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.DatePicker.DisplayDateEnd%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.DatePicker.DisplayDate%2A?displayProperty=fullName>, 、および <xref:System.Windows.Controls.DatePicker.SelectedDate%2A?displayProperty=fullName> プロパティ関数と同じように、 <xref:System.Windows.Controls.Calendar> の対応します。  詳細については、「<xref:System.Windows.Controls.Calendar>」を参照してください。  
  
 ユーザーが直接設定するテキスト フィールドに日付を入力、 <xref:System.Windows.Controls.DatePicker.Text%2A> プロパティです。 場合、 <xref:System.Windows.Controls.DatePicker> 有効な日付を入力した文字列を変換できません、 <xref:System.Windows.Controls.DatePicker.DateValidationError> イベントが発生します。 イベント ハンドラーが、例外が発生したこの既定では、 <xref:System.Windows.Controls.DatePicker.DateValidationError> を設定できます、 <xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A> プロパティを `false` し、例外が発生しないようにします。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.DatePicker> はグレゴリオ暦だけをサポートしています。  
  
## DatePicker コントロールをカスタマイズします。  
 複数に同じプロパティ設定を適用する <xref:System.Windows.Controls.DatePicker> コントロールを使用して、 <xref:System.Windows.FrameworkElement.Style%2A> プロパティです。 既定値を変更する <xref:System.Windows.Controls.ControlTemplate> コントロール固有の外観を与えるためです。 作成の詳細については、 <xref:System.Windows.Controls.ControlTemplate>, を参照してください [ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。 パーツおよびに固有の状態を確認する、 <xref:System.Windows.Controls.DatePicker>, を参照してください [DatePicker のスタイルとテンプレート](http://msdn.microsoft.com/ja-jp/c430a657-692f-44bd-a549-2341f92d6115)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。 プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  視覚プロパティの設定は影響をそのプロパティは、両方のボタン コントロールの既定のテンプレート内に存在しを使用して設定されている場合、します。 「を変更する視覚的構造の、」の「コントロール」セクションで visual プロパティの一覧が見つかります [ControlTemplate 作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  
  
<a name="xamlObjectElementUsage_DatePicker"></a>   
## XAML オブジェクト要素の使用方法  
  
```  
<DatePicker .../>  
```  
  
   
  
## 例  
 次の図は、 <xref:System.Windows.Controls.DatePicker>です。  
  
 3868faea-a370-4d20-a91b-b58154c0a279  
DatePicker コントロール  
  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> 前の図に示すようにします。<xref:System.Windows.Controls.DatePicker> は、次の処理します。  
  
-   曜日と月の名前を省略しない形式の日付を表示します。  
  
-   2009 年の日付のみを表示するドロップダウン カレンダーを制限します。  
  
-   月曜が週の最初の日を表示します。  
  
 [!code-csharp[DatePickerSnippets\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xml[DatePickerSnippets\#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DatePicker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.DatePicker" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlackoutDates">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.CalendarBlackoutDatesCollection BlackoutDates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.BlackoutDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CalendarBlackoutDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択不可としてマークされている日付のコレクションを設定します。</summary>
        <value>選択できない日付のコレクション。 既定値は空のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコレクション内の日付は、ドロップ ダウン カレンダーで無効として表示されます。  ユーザーが選択可能でない日付を入力した場合、 <xref:System.Windows.Controls.DatePicker.DateValidationError> イベントが発生します。  
  
 すべて期限が切れていない選択できるようにを使用することができます、 <xref:System.Windows.Controls.CalendarBlackoutDatesCollection.AddDatesInPast%2A> このプロパティによって返されるコレクションによって提供されるメソッドです。  
  
 既に選択されているときに、このコレクションに日付を追加または指定した範囲外の日付を追加する <xref:System.Windows.Controls.Calendar.DisplayDateStart%2A> と  <xref:System.Windows.Controls.DatePicker.DisplayDateEnd%2A> により、 <xref:System.ArgumentOutOfRangeException>です。  
  
<a name="xamlPropertyElementUsage_BlackoutDates"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.BlackoutDates>  
    oneOrMoreCalendarDateRanges  
  </object.BlackoutDates>  
</object>  
```  
  
<a name="xamlValues_BlackoutDates"></a>   
## XAML 値  
 *oneOrMoreCalendarDateRanges*  
 型の 1 つまたは複数のオブジェクト要素 <xref:System.Windows.Controls.CalendarDateRange>します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> を 2009 年 8 月に日付を表示し、各土曜日と日曜日が選択可能ではないことを指定します。  
  
 [!code-csharp[DatePickerSnippets\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xml[DatePickerSnippets\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 <xref:System.Windows.Controls.DatePicker> ハンドル、 <xref:System.Windows.Controls.DatePicker.DateValidationError> 次のコードに示すように、そのイベントを発生します。 選択可能でない日付を入力すると場合、は、メッセージを表示します。 有効な日付ではないテキストを入力すると、例外がスローされます。  
  
 [!code-csharp[DatePickerSnippets\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets\#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 前の例では、次の図は、次のような出力を生成します。  
  
 b165b4fe-c7a3-407e-a0c5-74d55bdfbb43  
選択できない日付を含む DatePicker  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarClosed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler CalendarClosed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler CalendarClosed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.CalendarClosed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、ドロップダウン リスト <see cref="T:System.Windows.Controls.Calendar" /> が閉じられます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_CalendarClosed"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker CalendarClosed="eventhandler"/>  
```  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> をユーザーに詳細な手順を説明します。  ユーザーが開くか閉じる、 <xref:System.Windows.Controls.Calendar>, 、指示を更新します。  
  
 [!code-xml[DatePickerSnippets\#7](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#7)]  
  
 [!code-csharp[DatePickerSnippets\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#8)]
 [!code-vb[DatePickerSnippets\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarOpened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler CalendarOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler CalendarOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.CalendarOpened" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、ドロップダウン リスト <see cref="T:System.Windows.Controls.Calendar" /> が開かれています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_CalendarOpened"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker CalendarOpened="eventhandler"/>  
```  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> をユーザーに詳細な手順を説明します。  ユーザーが開くか閉じる、 <xref:System.Windows.Controls.Calendar>, 、指示を更新します。  
  
 [!code-xml[DatePickerSnippets\#7](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#7)]  
  
 [!code-csharp[DatePickerSnippets\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#8)]
 [!code-vb[DatePickerSnippets\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style CalendarStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style CalendarStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.CalendarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカレンダーを表示するときに使用されるスタイルを設定します。</summary>
        <value>予定表を表示するときに使用されるスタイルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Controls.DatePicker.CalendarStyle%2A> プロパティをドロップダウン カレンダーの外観を指定します。  
  
<a name="dependencyPropertyInfo_CalendarStyle"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.CalendarStyleProperty>|  
|メタデータのプロパティを設定 **true**|なし|  
  
<a name="xamlAttributeUsage_CalendarStyle"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker CalendarStyle="{resourceExtensionstyleResourceKey}"/>  
```  
  
<a name="xamlValues_CalendarStyle"></a>   
## XAML 値  
 *resourceExtension*  
 次のいずれか: `StaticResource` または `DynamicResource`です。 詳細については、次を参照してください。 [XAML リソース](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f)します。  
  
 *styleResourceKey*  
 要求されているテンプレートを識別するキー。 このキーは既存のリソースを <xref:System.Windows.ResourceDictionary>です。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Style> の <xref:System.Windows.Controls.Calendar> にスタイルを割り当てると、 <xref:System.Windows.Controls.DatePicker.CalendarStyle%2A> プロパティです。  
  
 [!code-xml[DatePickerSnippets\#6](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CalendarStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CalendarStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CalendarStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.CalendarStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.CalendarStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DateValidationError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; DateValidationError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt; DateValidationError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.DateValidationError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.DatePickerDateValidationErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに <see cref="P:System.Windows.Controls.DatePicker.Text" /> を日付として解釈できない、または日付を選択できませんの値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 後に、 <xref:System.Windows.Controls.DatePicker.DateValidationError> 設定すると、イベントを発生、 <xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A?displayProperty=fullName> プロパティを `true`, 、次の例外のいずれかが発生します。  
  
|例外の種類|条件|  
|-----------|--------|  
|<xref:System.FormatException>|有効な日付を入力したテキストを解析できないし、例外が抑制されません。|  
|<xref:System.ArgumentOutOfRangeException>|入力したテキストを選択できない日付を解析します。|  
  
<a name="xamlAttributeUsage_DateValidationError"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker DateValidationError="eventhandler"/>  
```  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> を 2009 年 8 月に日付を表示し、各土曜日と日曜日が選択可能ではないことを指定します。  
  
 [!code-csharp[DatePickerSnippets\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#2)]
 [!code-vb[DatePickerSnippets\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#2)]
 [!code-xml[DatePickerSnippets\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#2)]  
  
 <xref:System.Windows.Controls.DatePicker> ハンドル、 <xref:System.Windows.Controls.DatePicker.DateValidationError> 次のコードに示すように、そのイベントを発生します。 選択可能でない日付を入力すると場合、は、メッセージを表示します。 有効な日付ではないテキストを入力すると、例外がスローされます。  
  
 [!code-csharp[DatePickerSnippets\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#3)]
 [!code-vb[DatePickerSnippets\#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDate">
      <MemberSignature Language="C#" Value="public DateTime DisplayDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DisplayDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示する日付を設定します。</summary>
        <value>日付を表示します。 既定値は、<see cref="P:System.DateTime.Today" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、影響、 <xref:System.Windows.Controls.Calendar> の <xref:System.Windows.Controls.DatePicker>です。  詳細については、<xref:System.Windows.Controls.Calendar.DisplayDate%2A?displayProperty=fullName> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_DisplayDate"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.DisplayDateProperty>|  
|メタデータのプロパティを設定 **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 このプロパティにより、開発者は場合に表示する日付を指定する <xref:System.Windows.Controls.DatePicker.SelectedDate%2A> は `null`です。  
  
<a name="xamlAttributeUsage_DisplayDate"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker DisplayDate="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDate"></a>   
## XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](http://msdn.microsoft.com/ja-jp/5901710a-609b-40c8-9d65-f0016cd9090b) トピックです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> は初期化のカレンダーを開くと、2009 年 7 月 7 日を表示します。  
  
 [!code-xml[DatePickerSnippets\#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">定義される範囲で指定した日付が <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" />です。  および <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> を参照してください。</exception>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDate" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEnd">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示する最後の日を設定します。</summary>
        <value>表示する最後の日付。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、影響、 <xref:System.Windows.Controls.Calendar> の <xref:System.Windows.Controls.DatePicker>です。  詳細については、<xref:System.Windows.Controls.Calendar.DisplayDateEnd%2A?displayProperty=fullName> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_DisplayDateEnd"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.DisplayDateEndProperty>|  
|メタデータのプロパティを設定 **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateEnd"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker DisplayDateEnd="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateEnd"></a>   
## XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](http://msdn.microsoft.com/ja-jp/5901710a-609b-40c8-9d65-f0016cd9090b) トピックです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> 2009 年の日付のみを表示するドロップダウン カレンダーを制限します。  
  
 [!code-csharp[DatePickerSnippets\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xml[DatePickerSnippets\#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDateEnd" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.DisplayDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStart">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; DisplayDateStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DisplayDateStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.DisplayDateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示される最初の日付を設定します。</summary>
        <value>表示する最初の日付。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、影響、 <xref:System.Windows.Controls.Calendar> の <xref:System.Windows.Controls.DatePicker>です。  詳細については、<xref:System.Windows.Controls.Calendar.DisplayDateStart%2A?displayProperty=fullName> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_DisplayDateStart"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.DisplayDateStartProperty>|  
|メタデータのプロパティを設定 **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_DisplayDateStart"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker DisplayDateStart="dateTimeString"/>  
```  
  
<a name="xamlValues_DisplayDateStart"></a>   
## XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](http://msdn.microsoft.com/ja-jp/5901710a-609b-40c8-9d65-f0016cd9090b) トピックです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> 2009 年の日付のみを表示するドロップダウン カレンダーを制限します。  
  
 [!code-csharp[DatePickerSnippets\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xml[DatePickerSnippets\#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.DisplayDateStart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayDateStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DisplayDateStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DisplayDateStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.DisplayDateStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または週の始めと見なされる日を設定します。</summary>
        <value>A <see cref="T:System.DayOfWeek" /> 週の始めを表します。 既定値は、 <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek" /> は、現在のカルチャによって決まります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、影響、 <xref:System.Windows.Controls.Calendar> の <xref:System.Windows.Controls.DatePicker>です。  詳細については、<xref:System.Windows.Controls.Calendar.FirstDayOfWeek%2A?displayProperty=fullName> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_FirstDayOfWeek"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty>|  
|メタデータのプロパティを設定 **true**|なし|  
  
<a name="xamlAttributeUsage_FirstDayOfWeek"></a>   
## XAML 属性の使用方法  
 \< DatePicker **FirstDayOfWeek**\="<xref:System.DayOfWeek>"\/\>  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> 月曜が週の最初の日を表示します。  
  
 [!code-csharp[DatePickerSnippets\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xml[DatePickerSnippets\#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeekProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FirstDayOfWeekProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FirstDayOfWeekProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.FirstDayOfWeekProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.FirstDayOfWeek" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Windows.Controls.DatePicker" /> にフォーカスがあります。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.DatePicker" /> にフォーカスがある。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、ドロップダウン リスト <see cref="T:System.Windows.Controls.Calendar" /> がオープンかクローズします。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.Calendar" /> が開いているそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.IsDropDownOpenProperty>|  
|メタデータのプロパティを設定 **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 このプロパティの設定、 <xref:System.Windows.Controls.Calendar> ボックスを開くまたは閉じる。  
  
<a name="xamlAttributeUsage_IsDropDownOpen"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker IsDropDownOpen="bool"/>  
```  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> のカレンダーを開いているが初期化されると、2009 年 7 月 7 日が表示されます。  
  
 [!code-xml[DatePickerSnippets\#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.IsDropDownOpen" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlighted">
      <MemberSignature Language="C#" Value="public bool IsTodayHighlighted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTodayHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在の日付が強調表示されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合は、現在の日付を強調表示されます。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、影響、 <xref:System.Windows.Controls.Calendar> の <xref:System.Windows.Controls.DatePicker>です。  詳細については、<xref:System.Windows.Controls.Calendar.IsTodayHighlighted%2A?displayProperty=fullName> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_IsTodayHighlighted"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty>|  
|メタデータのプロパティを設定 **true**|なし|  
  
<a name="xamlAttributeUsage_IsTodayHighlighted"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker IsTodayHighlighted="bool"/>  
```  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> 、現在の日付を強調表示しません。  
  
 [!code-xml[DatePickerSnippets\#4](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Calendar.IsTodayHighlighted" />
      </Docs>
    </Member>
    <Member MemberName="IsTodayHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTodayHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTodayHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.IsTodayHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.IsTodayHighlighted" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビジュアル ツリーを構築、 <see cref="T:System.Windows.Controls.DatePicker" /> 新しいテンプレートが適用されたときを制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーション コードまたはレイアウト パスの再構築などの内部プロセスが呼び出すたびに、このメソッドが呼び出され、 <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCalendarClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnCalendarClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCalendarClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>発生させる、 <see cref="E:System.Windows.Controls.DatePicker.CalendarClosed" /> ルーティングされたイベント。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.DatePicker.OnCalendarClosed(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCalendarOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnCalendarOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCalendarOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>発生させる、 <see cref="E:System.Windows.Controls.DatePicker.CalendarOpened" /> ルーティングされたイベント。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.DatePicker.OnCalendarOpened(System.Windows.RoutedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> オートメーション インフラストラクチャで使用するためです。</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.DatePickerAutomationPeer" /> の <see cref="T:System.Windows.Controls.DatePicker" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが、新たに作成 <xref:System.Windows.Automation.Peers.DatePickerAutomationPeer> コントロール インスタンスの場合は、1 つのインスタンスが作成されていません。 それ以外を返します、 <xref:System.Windows.Automation.Peers.DatePickerAutomationPeer> 以前に作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDateValidationError">
      <MemberSignature Language="C#" Value="protected virtual void OnDateValidationError (System.Windows.Controls.DatePickerDateValidationErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDateValidationError(class System.Windows.Controls.DatePickerDateValidationErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Controls.DatePicker.DateValidationError" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.DatePicker.OnDateValidationError(System.Windows.Controls.DatePickerDateValidationErrorEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedDateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedDateChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedDateChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>発生させる、 <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> ルーティングされたイベント。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールで発生し、 <xref:System.Windows.Controls.DatePicker.SelectedDateChanged> を呼び出してイベント <xref:System.Windows.UIElement.RaiseEvent%2A>です。 詳細については、次を参照してください。 [ルーティング イベントの概要](http://msdn.microsoft.com/ja-jp/1a2189ae-13b4-45b0-b12c-8de2e49c29d2)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.DatePicker.OnSelectedDateChanged(System.Windows.Controls.SelectionChangedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public Nullable&lt;DateTime&gt; SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在選択されている日付を設定します。</summary>
        <value>現在選択されている日付。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、影響、 <xref:System.Windows.Controls.Calendar> の <xref:System.Windows.Controls.DatePicker>です。  詳細については、<xref:System.Windows.Controls.Calendar.SelectedDate%2A?displayProperty=fullName> プロパティを参照してください。  
  
<a name="dependencyPropertyInfo_SelectedDate"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.SelectedDateProperty>|  
|メタデータのプロパティを設定 **true**|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
<a name="xamlAttributeUsage_SelectedDate"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker SelectedDate="dateTimeString"/>  
```  
  
<a name="xamlValues_SelectedDate"></a>   
## XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](http://msdn.microsoft.com/ja-jp/5901710a-609b-40c8-9d65-f0016cd9090b) トピックです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> 日が 2009 年 8 月 10日を選択します。  例では、さらにバインドします、 <xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=fullName> プロパティを <xref:System.Windows.Controls.TextBlock>です。  
  
 [!code-xml[DatePickerSnippets\#5](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">定義される範囲で指定した日付が <see cref="P:System.Windows.Controls.DatePicker.DisplayDateStart" /> と <see cref="P:System.Windows.Controls.DatePicker.DisplayDateEnd" />, 、または指定した日付が、 <see cref="P:System.Windows.Controls.DatePicker.BlackoutDates" /> コレクションです。</exception>
        <altmember cref="P:System.Windows.Controls.Calendar.SelectedDate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedDateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Controls.SelectionChangedEventArgs&gt; SelectedDateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.DatePicker.SelectedDateChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Controls.SelectionChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> プロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_SelectedDatesChanged"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker SelectedDateChanged="eventhandler"/>  
```  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectedDateChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectedDateChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.DatePicker.SelectedDateChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateFormat">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DatePickerFormat SelectedDateFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.DatePickerFormat SelectedDateFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.SelectedDateFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DatePickerFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択した日付を表示するために使用される形式を設定します。</summary>
        <value>選択した日付の表示に使用される形式です。 既定値は、<see cref="F:System.Windows.Controls.DatePickerFormat.Long" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_SelectedDateFormat"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.SelectedDateFormatProperty>|  
|メタデータのプロパティを設定 **true**|なし|  
  
<a name="xamlAttributeUsage_SelectedDateFormat"></a>   
## XAML 属性の使用方法  
 \< DatePicker **SelectedDateFormat**\="<xref:System.Windows.Controls.DatePickerFormat>"\/\>  
  
   
  
## 例  
 次の例を作成する <xref:System.Windows.Controls.DatePicker> 曜日と月の名前を省略しない形式の日付を表示します。  
  
 [!code-csharp[DatePickerSnippets\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/datepickersnippets/csharp/window1.xaml.cs#1)]
 [!code-vb[DatePickerSnippets\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/datepickersnippets/visualbasic/window1.xaml.vb#1)]
 [!code-xml[DatePickerSnippets\#1](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.SelectedDateFormat" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectedDateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectedDateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.SelectedDateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.DatePicker.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>によって表示されるテキストを取得、 <see cref="T:System.Windows.Controls.DatePicker" />, 、または、選択した日付を設定します。</summary>
        <value>によって表示されるテキスト、 <see cref="T:System.Windows.Controls.DatePicker" />です。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーが設定できる、 <xref:System.Windows.Controls.DatePicker.SelectedDate%2A> の <xref:System.Windows.Controls.DatePicker> 日付をテキスト ボックスに入力します。<xref:System.Windows.Controls.DatePicker> 日付としてこのプロパティに入力した任意の文字列の解析を試みます。 中に、 <xref:System.Windows.Controls.DatePicker.Text%2A> によって解析可能な任意の文字列にプロパティを設定することができます、 <xref:System.DateTime.Parse%2A> メソッドの日付、返される文字列の形式の値に依存する場合、 <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName> プロパティです。 つまり、 <xref:System.Windows.Controls.DatePicker> とは異なるユーザーが入力した文字列を表示することがあります。  
  
 場合 <xref:System.Windows.Controls.DatePicker.Text%2A> が選択可能で、有効日に設定されている、 <xref:System.Windows.Controls.DatePicker.DateValidationError> イベントが発生します。 処理する場合、 <xref:System.Windows.Controls.DatePicker.DateValidationError> イベントと、 <xref:System.Windows.Controls.DatePickerDateValidationErrorEventArgs.ThrowException%2A> プロパティを `true`, 、 <xref:System.FormatException> または <xref:System.ArgumentOutOfRangeException> が発生します。  
  
<a name="dependencyPropertyInfo_Text"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.DatePicker.TextProperty>|  
|メタデータのプロパティを設定 **true**|なし|  
  
<a name="xamlAttributeUsage_Text"></a>   
## XAML 属性の使用方法  
  
```  
<DatePicker Text="dateTimeString"/>  
```  
  
<a name="xamlValues_Text"></a>   
## XAML 値  
 *dateTimeString*  
 記載されているいずれかの形式では、日付、 [DateTime XAML 構文](http://msdn.microsoft.com/ja-jp/5901710a-609b-40c8-9d65-f0016cd9090b) トピックです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.DatePicker> 日が 2009 年 8 月 10日を選択します。  例では、さらにバインドします、 <xref:System.Windows.Controls.DatePicker.Text%2A?displayProperty=fullName> プロパティを <xref:System.Windows.Controls.TextBlock>です。<xref:System.Windows.Controls.DatePicker.SelectedDateFormat%2A> にプロパティが設定されている <xref:System.Windows.Controls.DatePickerFormat.Long>, 、 <xref:System.Windows.Controls.DatePicker> と <xref:System.Windows.Controls.TextBlock> 曜日の日付を使用して、表示の表記を使用し、月名の場合でも、ユーザーが日付の省略形を入力します。  
  
 [!code-xml[DatePickerSnippets\#5](~/samples/snippets/xaml/VS_Snippets_Wpf/datepickersnippets/xaml/window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.DatePicker.DateValidationError" />
        <altmember cref="T:System.Windows.Controls.DatePickerDateValidationErrorEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.DatePicker.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.DatePicker.Text" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DatePicker.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択した日付のテキスト表現を提供します。</summary>
        <returns>選択した日付または空の文字列のテキスト表現場合 <see cref="P:System.Windows.Controls.DatePicker.SelectedDate" /> は <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>