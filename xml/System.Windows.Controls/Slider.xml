<Type Name="Slider" FullName="System.Windows.Controls.Slider">
  <TypeSignature Language="C#" Value="public class Slider : System.Windows.Controls.Primitives.RangeBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Slider extends System.Windows.Controls.Primitives.RangeBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Slider" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.RangeBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ValueChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Value")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_Track", Type=typeof(System.Windows.Controls.Primitives.Track))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_SelectionRange", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーが <see cref="T:System.Windows.Controls.Primitives.Track" /> に沿って <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> コントロールを移動することにより一定範囲から値を選択できるコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Controls.Slider> コントロールにより、ユーザーが値の範囲から値を選択します。 次の図の例、 <xref:System.Windows.Controls.Slider> コントロールです。  
  
 **スライダー コントロールの例**  
  
 5ee2913c-e45a-4688-8b7c-773ea2813950  
  
 カスタマイズすることができます、 <xref:System.Windows.Controls.Slider> コントロールのプロパティを設定します。 属性の一部を次に示します、 <xref:System.Windows.Controls.Slider> をカスタマイズします。  
  
-   向き、 <xref:System.Windows.Controls.Slider>, 、水平または垂直のどちらかです。  
  
-   に沿って tick mark 場所、 <xref:System.Windows.Controls.Slider> を追跡します。  
  
-   現在の値を表示するツールヒントの表示、 <xref:System.Windows.Controls.Slider>です。  
  
-   機能、 <xref:System.Windows.Controls.Primitives.Thumb> 目盛りまたは上の任意の場所に配置されているいずれかのスナップインに、 <xref:System.Windows.Controls.Slider>です。  
  
-   値を増加させる方向、 <xref:System.Windows.Controls.Slider>です。  
  
 カスタマイズする方法について、 <xref:System.Windows.Controls.Slider> を制御したり、個々 のメンバーを参照してください。  
  
 <xref:System.Windows.Controls.Slider> メタデータをオーバーライド、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> プロパティとその既定値を 10 に設定します。 詳細については、次を参照してください。 [依存関係プロパティの概要](http://msdn.microsoft.com/ja-jp/d119d00c-3afb-48d6-87a0-c4da4f83dee5)します。  
  
> [!NOTE]
>  場合の値、 <xref:System.Windows.Controls.Slider> はアニメーション化すると、ユーザーができなくなりますと対話する、 <xref:System.Windows.Controls.Slider> アニメーションが終了後に制御します。 参照してください [方法: 設定、プロパティ後アニメーション ストーリー ボードを](http://msdn.microsoft.com/ja-jp/79466556-4dbf-40bd-9c1e-a77613b07077) のユーザー コントロールを復元する方法のオプションについては、 <xref:System.Windows.Controls.Slider> がアニメーション化した後です。  
  
## スライダー コントロールのカスタマイズ  
 複数に同じプロパティ設定を適用する <xref:System.Windows.Controls.Slider> コントロールを使用して、 <xref:System.Windows.FrameworkElement.Style%2A> プロパティです。 既定値を変更する <xref:System.Windows.Controls.ControlTemplate> コントロール固有の外観を与えるためです。 作成の詳細については、 <xref:System.Windows.Controls.ControlTemplate>, を参照してください [ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  パーツおよびに固有の状態を確認する、 <xref:System.Windows.Controls.Slider>, を参照してください [スライダーのスタイルとテンプレート](http://msdn.microsoft.com/ja-jp/d89aa97b-075a-4752-9c41-9679df65c491)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  Visual プロパティの設定は効果プロパティは、両方に存在する場合 <xref:System.Windows.Controls.Slider> コントロールの既定のテンプレートとを使用して設定します。 「を変更する視覚的構造の、」の「コントロール」セクションで visual プロパティの一覧が見つかります [ControlTemplate 作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  
  
   
  
## 例  
 次の例では、バインドする方法を示しています、 <xref:System.Windows.FrameworkElement.Height%2A> のプロパティ、 <xref:System.Windows.Shapes.Rectangle> に、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> コントロールです。  
  
 次の例、 <xref:System.Windows.Controls.Slider> という名前は、コントロールを `RectangeHeight` することがあります、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> 0 ~ 200 の範囲。  
  
 [!code-xml[SliderwithDataBinding\#Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/SliderwithDataBinding/CS/Pane1.xaml#minimum)]
 [!code-xml[SliderwithDataBinding\#Minimum](~/samples/snippets/xaml/VS_Snippets_Wpf/SliderwithDataBinding/XAML/Pane1.xaml#minimum)]  
  
 次の例では、定義する方法、 <xref:System.Windows.Shapes.Rectangle> バインドする、 <xref:System.Windows.FrameworkElement.Height%2A> プロパティを <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> コントロールです。 \(完全なサンプルとして、同様のバインディングを作成、 <xref:System.Windows.FrameworkElement.Width%2A> プロパティです\)。  
  
 [!code-xml[SliderwithDataBinding\#BindingRectangle](~/samples/snippets/csharp/VS_Snippets_Wpf/SliderwithDataBinding/CS/Pane1.xaml#bindingrectangle)]
 [!code-xml[SliderwithDataBinding\#BindingRectangle](~/samples/snippets/xaml/VS_Snippets_Wpf/SliderwithDataBinding/XAML/Pane1.xaml#bindingrectangle)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Primitives.Track" />
    <altmember cref="T:System.Windows.Controls.Primitives.Thumb" />
    <altmember cref="T:System.Windows.Controls.Primitives.TickBar" />
    <altmember cref="T:System.Windows.Controls.Primitives.TickPlacement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Slider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.ArrangeOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize">コントロールの配置に使用される、計算された <see cref="T:System.Windows.Size" />。</param>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> のコンテンツを配置し、その <see cref="T:System.Windows.Size" /> を決定します。</summary>
        <returns>
          <see cref="T:System.Windows.Controls.Slider" /> の計算された <see cref="T:System.Windows.Size" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.AutoToolTipPlacement AutoToolTipPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.AutoToolTipPlacement AutoToolTipPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.AutoToolTipPlacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.AutoToolTipPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> が押されたときに、<see cref="T:System.Windows.Controls.Slider" /> の現在の値を示すツールヒントが表示されるかどうかを取得または設定します。 ツールヒントが表示される場合、このプロパティによってツールヒントの配置も指定されます。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> 上で、<see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> に対してどこにツールヒントを表示するかを決定する、またはツールヒントを表示しないことを指定する <see cref="T:System.Windows.Controls.Primitives.AutoToolTipPlacement" /> 値の 1 つ。 既定値は <see cref="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None" /> です。これは、ツールヒントが表示されないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_AutoToolTipPlacement"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.AutoToolTipPlacementProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、設定、 <xref:System.Windows.Controls.Slider.AutoToolTipPlacement%2A> プロパティです。  
  
 [!code-csharp[Slider\#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider\#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xml[Slider\#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoToolTipPlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoToolTipPlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.AutoToolTipPlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別、 <see cref="P:System.Windows.Controls.Slider.AutoToolTipPlacement" /> 依存関係プロパティ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子、 <xref:System.Windows.Controls.Slider.AutoToolTipPlacement%2A> 依存関係プロパティ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPrecision">
      <MemberSignature Language="C#" Value="public int AutoToolTipPrecision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoToolTipPrecision" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.AutoToolTipPrecision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の<see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> について、ツールヒント内で小数点の右側に表示される桁数を取得または設定します。</summary>
        <value>ツールヒント内に表示される <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> の精度。小数点の右側に表示される桁数を指定します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値は正の整数である必要があります。 このプロパティが正の整数以外の値に設定されている場合、例外が発生します。  
  
<a name="dependencyPropertyInfo_AutoToolTipPrecision"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.AutoToolTipPrecision%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider\#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xml[Slider\#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 正の整数以外の値に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoToolTipPrecisionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoToolTipPrecisionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoToolTipPrecisionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子、 <xref:System.Windows.Controls.Slider.AutoToolTipPrecision%2A> 依存関係プロパティ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseLarge">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand DecreaseLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand DecreaseLarge" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.DecreaseLarge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> プロパティで示される値の分だけ <see cref="T:System.Windows.Controls.Slider" /> の値を減少させるコマンドを取得します。</summary>
        <value>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> プロパティで示される値の分だけ <see cref="T:System.Windows.Controls.Slider" /> の値を減少させる <see cref="T:System.Windows.Input.RoutedCommand" />。 既定値 <see cref="T:System.Windows.Input.InputGesture" /> は <see cref="F:System.Windows.Input.Key.PageDown" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If the <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> property is set to **languageKeyword tag is not supported!!!!**  
, the <xref:System.Windows.Input.InputGesture> for this command is <xref:System.Windows.Input.Key.PageUp>.  
  
 The default value of the <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> property is \(0.1\).  
  
<a name="xamlAttributeUsage_DecreaseLarge"></a>   
## XAML Attribute Usage  
 `<` *object* *property*`="` `Slider.DecreaseLarge``"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecreaseSmall">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand DecreaseSmall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand DecreaseSmall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.DecreaseSmall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> プロパティで示される値の分だけ <see cref="T:System.Windows.Controls.Slider" /> の値を減少させるコマンドを取得します。</summary>
        <value>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> プロパティで示される値の分だけ <see cref="T:System.Windows.Controls.Slider" /> の値を減少させる<see cref="T:System.Windows.Input.RoutedCommand" />。 既定の <see cref="T:System.Windows.Input.InputGesture" /> オブジェクトは <see cref="F:System.Windows.Input.Key.Down" /> と <see cref="F:System.Windows.Input.Key.Left" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If the <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> property is set to **languageKeyword tag is not supported!!!!**  
, the <xref:System.Windows.Input.InputGesture> objects are <xref:System.Windows.Input.Key.Up> and <xref:System.Windows.Input.Key.Right>.  
  
 The default value of the <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> property is \(0.1\).  
  
<a name="xamlAttributeUsage_DecreaseSmall"></a>   
## XAML Attribute Usage  
 `<` *object* *property*`="`  `Slider.DecreaseSmall``"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> が押されている間に、<see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> コマンドなど、<see cref="T:System.Windows.Controls.Primitives.Thumb" /> を移動するコマンドが実行されるまで待機する時間 \(ミリ秒単位\) を取得または設定します。</summary>
        <value>ミリ秒単位の遅延時間。 既定値は、システムのキーを押すときの遅延です。 詳細については、「<see cref="P:System.Windows.SystemParameters.KeyboardDelay" />」を参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property is used when a <xref:System.Windows.Controls.Primitives.RepeatButton> is included in the style for a <xref:System.Windows.Controls.Slider>.The default style for the <xref:System.Windows.Controls.Slider> includes two invisible <xref:System.Windows.Controls.Primitives.RepeatButton> controls that use the space between the <xref:System.Windows.Controls.Primitives.Thumb> and each end of the <xref:System.Windows.Controls.Primitives.Track>. When you press one of the invisible buttons, the <xref:System.Windows.Controls.Slider> responds by moving the <xref:System.Windows.Controls.Primitives.Thumb> in that direction after the <xref:System.Windows.Controls.Slider.Delay%2A> property is applied.  
  
<a name="dependencyPropertyInfo_Delay"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.Slider.DelayProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DelayProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DelayProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.DelayProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.Delay" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The identifier for the <xref:System.Windows.Controls.Slider.Delay%2A> dependency property.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseLarge">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand IncreaseLarge { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand IncreaseLarge" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IncreaseLarge" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> プロパティで示される値の分だけスライダーの値を増加させるコマンドを取得します。</summary>
        <value>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange" /> プロパティで示される値の分だけ <see cref="F:System.Windows.Controls.Slider.SelectionStartProperty" /> の値を増加させる <see cref="T:System.Windows.Input.RoutedCommand" />。 このコマンドの既定の <see cref="T:System.Windows.Input.InputGesture" /> は <see cref="F:System.Windows.Input.Key.PageUp" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Input.InputGesture> このコマンドは <xref:System.Windows.Input.Key.PageDown>です。  
  
 既定値、 <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> プロパティは、\(1\)。  
  
<a name="xamlAttributeUsage_IncreaseLarge"></a>   
## XAML 属性の使用方法  
 `<` *オブジェクト* *プロパティ*`="````Slider.IncreaseLarge``"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseSmall">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand IncreaseSmall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand IncreaseSmall" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IncreaseSmall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> プロパティで示される値の分だけスライダーの値を増加させるコマンドを取得します。</summary>
        <value>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange" /> プロパティで示される値の分だけスライダーの値を増加させる <see cref="T:System.Windows.Input.RoutedCommand" /> を返します。 このコマンドの既定の <see cref="T:System.Windows.Input.InputGesture" /> オブジェクトは <see cref="F:System.Windows.Input.Key.Up" /> と <see cref="F:System.Windows.Input.Key.Right" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Input.InputGesture> このコマンドのオブジェクトは、 <xref:System.Windows.Input.Key.Down> と <xref:System.Windows.Input.Key.Left> と <xref:System.Windows.Controls.Slider>です。  
  
 既定値、 <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> プロパティは、\(0.1\)。  
  
<a name="xamlAttributeUsage_IncreaseSmall"></a>   
## XAML 属性の使用方法  
 `<` *オブジェクト* *プロパティ*`="````Slider.IncreaseSmall``"/>`  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが <see cref="T:System.Windows.Controls.Slider" /> の <see cref="T:System.Windows.Controls.Primitives.RepeatButton" /> をクリックしたときの、増加コマンドまたは減少コマンドの間隔 \(ミリ秒単位\) を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を変更するコマンドの間隔 \(ミリ秒単位\)。 既定値は、システムのキー リピート間隔です。 詳細については、次を参照してください。 [SystemParametersInfo](http://msdn.microsoft.com/library/default.asp?url=/library/sysinfo/base/systemparametersinfo.asp) \(SPI\_GETKEYBOARDSPEED\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが使用されるときに、 <xref:System.Windows.Controls.Primitives.RepeatButton> に含まれる、 <xref:System.Windows.Style> の <xref:System.Windows.Controls.Slider>です。  
  
<a name="dependencyPropertyInfo_Interval"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.IntervalProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IntervalProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IntervalProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IntervalProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.Interval" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.Interval%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectionReversed">
      <MemberSignature Language="C#" Value="public bool IsDirectionReversed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirectionReversed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsDirectionReversed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>値を増加させる方向を取得または設定します。</summary>
        <value>値を増加させる方向が、水平スライダーで左方向の場合、または垂直スライダーで下方向の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値の値を増加させる方向を決定する、 <xref:System.Windows.Controls.Slider>です。 たとえば、移動、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> 垂直方向の control 権限を <xref:System.Windows.Controls.Slider> ときに、 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> にプロパティが設定されている `false`, 、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> が増加します。 場合の値、 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> プロパティに変わった `true`, 、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> なるにつれて、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> を上へ移動します。  
  
 このプロパティにバインドされて、 <xref:System.Windows.Controls.Primitives.Track.IsDirectionReversed%2A> プロパティを <xref:System.Windows.Controls.Primitives.Track> を実装するコントロール。  
  
<a name="dependencyPropertyInfo_IsDirectionReversed"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.IsDirectionReversedProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider\#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xml[Slider\#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectionReversedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDirectionReversedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDirectionReversedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsDirectionReversedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.IsDirectionReversed%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMoveToPointEnabled">
      <MemberSignature Language="C#" Value="public bool IsMoveToPointEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMoveToPointEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが <see cref="T:System.Windows.Controls.Slider" /> トラック上にある間にマウス クリックが生じた場合、その位置に <see cref="T:System.Windows.Controls.Slider" /> の <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> を直ちに移動させるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> をマウス クリックの位置に直ちに移動させる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると `false` に沿ってマウスのクリックが発生して、 <xref:System.Windows.Controls.Slider> から離れる、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A>, 、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> 方向で、マウスの移動\] をクリックします。 マウス クリックの場所をへ直ちに移動させる代わりに、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> によって定義される距離を移動、 <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> 各マウスのプロパティ\] をクリックします。  
  
 までマウスの左ボタンを押したまま複数のマウス クリックの効果をエミュレートすること、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> 任意の場所に移動します。  
  
<a name="dependencyPropertyInfo_IsMoveToPointEnabled"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.IsMoveToPointEnabled%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider\#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xml[Slider\#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMoveToPointEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMoveToPointEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMoveToPointEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.IsMoveToPointEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.IsMoveToPointEnabled%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRangeEnabled">
      <MemberSignature Language="C#" Value="public bool IsSelectionRangeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionRangeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> で、<see cref="T:System.Windows.Controls.Slider" /> に沿って選択範囲を表示するかどうかを示す値を取得または設定します。</summary>
        <value>選択範囲を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.SelectionStart%2A> と <xref:System.Windows.Controls.Slider.SelectionEnd%2A> プロパティが選択範囲を定義し、表示される選択範囲を設定する必要があります <xref:System.Windows.Controls.Slider.IsSelectionRangeEnabled%2A> に設定されている `true`します。  
  
 次の図は、 <xref:System.Windows.Controls.Slider> 選択範囲が定義されているとします。  
  
 **スライダー コントロールの定義された選択範囲**  
  
 0fc0b72d-b7d5-457f-bc82-ee0117a8d2a9  
  
 このプロパティにバインドする、 <xref:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled%2A> のプロパティ、 <xref:System.Windows.Controls.Primitives.TickBar> を実装するコントロール。  
  
<a name="dependencyPropertyInfo_IsSelectionRangeEnabled"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.IsSelectionRangeEnabled%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider\#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xml[Slider\#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.SelectionStart" />
        <altmember cref="P:System.Windows.Controls.Slider.SelectionEnd" />
      </Docs>
    </Member>
    <Member MemberName="IsSelectionRangeEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionRangeEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionRangeEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.IsSelectionRangeEnabled%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSnapToTickEnabled">
      <MemberSignature Language="C#" Value="public bool IsSnapToTickEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSnapToTickEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> で、最も近い目盛りに <see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> を自動的に移動するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> で、<see cref="P:System.Windows.Controls.Primitives.Track.Thumb" /> の位置を目盛りに合わせる必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときの位置、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> が変更されたと <xref:System.Windows.Controls.Slider.IsSnapToTickEnabled%2A> にプロパティが設定されている `true`, 、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> は、最も近い目盛りに自動的に移動します。  
  
<a name="dependencyPropertyInfo_IsSnapToTickEnabled"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.IsSnapToTickEnabled%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider\#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xml[Slider\#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSnapToTickEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSnapToTickEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSnapToTickEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.IsSnapToTickEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.IsSnapToTickEnabled%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximizeValue">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand MaximizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand MaximizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.MaximizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> 値に設定するコマンドを取得します。</summary>
        <value>使用する <see cref="T:System.Windows.Input.RoutedCommand" />。 既定値は、<see cref="F:System.Windows.Input.Key.End" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_MaximizeValue"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ \=*`"`{ `Slider.MaximizeValue``"`\/\>  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimizeValue">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedCommand MinimizeValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedCommand MinimizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.MinimizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> を <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> 値に設定するコマンドを取得します。</summary>
        <value>使用する <see cref="T:System.Windows.Input.RoutedCommand" />。 既定値は、<see cref="F:System.Windows.Input.Key.Home" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_MinimizeValue"></a>   
## XAML 属性の使用方法  
 \<*オブジェクト* *プロパティ \=*`"`{ `Slider.MinimizeValue``"`\/\>  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> コントロールのビジュアル ツリーを構築します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を作成します。</summary>
        <returns>
          <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer" /> の <see cref="T:System.Windows.Controls.Slider" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDecreaseLarge">
      <MemberSignature Language="C#" Value="protected virtual void OnDecreaseLarge ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDecreaseLarge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnDecreaseLarge" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.DecreaseLarge" /> コマンドに応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッド、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> によって <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> に移動し、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> の変更が反映されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDecreaseSmall">
      <MemberSignature Language="C#" Value="protected virtual void OnDecreaseSmall ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDecreaseSmall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnDecreaseSmall" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.DecreaseSmall" /> コマンドに応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッド、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> によって <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> に移動し、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> の変更が反映されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIncreaseLarge">
      <MemberSignature Language="C#" Value="protected virtual void OnIncreaseLarge ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIncreaseLarge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnIncreaseLarge" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.IncreaseLarge" /> コマンドに応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが増加、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> によって <xref:System.Windows.Controls.Primitives.RangeBase.LargeChange%2A> に移動し、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> の変更が反映されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIncreaseSmall">
      <MemberSignature Language="C#" Value="protected virtual void OnIncreaseSmall ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIncreaseSmall() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnIncreaseSmall" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.IncreaseSmall" /> コマンドに応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが増加、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> によって <xref:System.Windows.Controls.Primitives.RangeBase.SmallChange%2A> に移動し、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> の変更が反映されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMaximizeValue">
      <MemberSignature Language="C#" Value="protected virtual void OnMaximizeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMaximizeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMaximizeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.MaximizeValue" /> コマンドに応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、変更、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> に <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> に移動し、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> 変更を反映します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMaximumChanged">
      <MemberSignature Language="C#" Value="protected override void OnMaximumChanged (double oldMaximum, double newMaximum);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMaximumChanged(float64 oldMaximum, float64 newMaximum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldMaximum" Type="System.Double" />
        <Parameter Name="newMaximum" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="oldMaximum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの変更前の値。</param>
        <param name="newMaximum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum" /> プロパティの値の変更に応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、新しい <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> 値より小さい <xref:System.Windows.Controls.Slider.SelectionStart%2A> 値、実装ではこの設定、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> 値を <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> 値。 場合、新しい <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> 値より小さい <xref:System.Windows.Controls.Slider.SelectionEnd%2A> 値、 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> に値が設定されている、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> 値。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMinimizeValue">
      <MemberSignature Language="C#" Value="protected virtual void OnMinimizeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMinimizeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMinimizeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.MinimizeValue" /> コマンドに応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、変更、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> に <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> に移動し、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> 変更を反映します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMinimumChanged">
      <MemberSignature Language="C#" Value="protected override void OnMinimumChanged (double oldMinimum, double newMinimum);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMinimumChanged(float64 oldMinimum, float64 newMinimum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldMinimum" Type="System.Double" />
        <Parameter Name="newMinimum" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="oldMinimum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの変更前の値。</param>
        <param name="newMinimum">
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum" /> プロパティの値の変更に応答します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装によって、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> 値は、新しい以上 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> 値。 場合、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> 値より小さい <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> 値、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> 値に設定されて、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> 値。<xref:System.Windows.Controls.Slider.SelectionEnd%2A> に以上であるかどうかを確認する値をチェックしても、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> 値。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> ルーティング イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Controls.Slider.IsMoveToPointEnabled%2A> プロパティは、 `true`, 、この実装の移動、 <xref:System.Windows.Controls.Primitives.Track.Thumb%2A> マウスの位置をクリックします。  
  
 この実装ではマーク、 <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> イベントを処理するには、 <xref:System.Windows.RoutedEventArgs.Handled%2A> するイベント データのプロパティ `true`します。 イベントはこのメソッドでこれを <xref:System.Windows.Controls.Primitives.RepeatButton> の制御、 <xref:System.Windows.Controls.Slider> イベントを処理しないでください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If you override <see cref="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnThumbDragCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnThumbDragCompleted (System.Windows.Controls.Primitives.DragCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThumbDragCompleted(class System.Windows.Controls.Primitives.DragCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> で <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のドラッグをユーザーが停止したときに発生する <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted" /> イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装では、処理済みの状態は変更されません \(、 <xref:System.Windows.RoutedEventArgs.Handled%2A> プロパティ\) の <xref:System.Windows.Controls.Primitives.Thumb.DragCompleted> イベント データ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method can be overridden to customize the way a <see cref="T:System.Windows.Controls.Slider" /> processes <see cref="T:System.Windows.Controls.Primitives.Thumb" /> movements. If you override <see cref="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnThumbDragDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnThumbDragDelta (System.Windows.Controls.Primitives.DragDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThumbDragDelta(class System.Windows.Controls.Primitives.DragDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> をユーザーがドラッグしたときに発生する <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta" /> イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装では、処理済みの状態は変更されません \(、 <xref:System.Windows.RoutedEventArgs.Handled%2A> プロパティ\) の <xref:System.Windows.Controls.Primitives.Thumb.DragDelta> イベント データ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method can be overridden to customize the way a <see cref="T:System.Windows.Controls.Slider" /> processes <see cref="T:System.Windows.Controls.Primitives.Thumb" /> movements. If you override <see cref="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)" /> implementation. Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class. You can call the base implementation either before or after your special handling, depending on your requirements.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnThumbDragStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnThumbDragStarted (System.Windows.Controls.Primitives.DragStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThumbDragStarted(class System.Windows.Controls.Primitives.DragStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.Primitives.DragStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の <see cref="T:System.Windows.Controls.Primitives.Thumb" /> のドラッグをユーザーが開始したときに発生する <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted" /> イベントのクラス処理を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の処理だけでなく、 <xref:System.Windows.Controls.Primitives.Thumb.DragStarted> イベントでは、この実装を表示するツールヒントが表示されます、 <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> の <xref:System.Windows.Controls.Slider> ときに、 <xref:System.Windows.Controls.Slider.AutoToolTipPlacement%2A> にプロパティが設定されていない <xref:System.Windows.Controls.Primitives.AutoToolTipPlacement.None>します。  
  
 この実装を処理しません、 <xref:System.Windows.Controls.Primitives.Thumb.DragStarted> イベントです。 値、 <xref:System.Windows.RoutedEventArgs.Handled%2A> のプロパティ、 <xref:System.Windows.Controls.Primitives.DragCompletedEventArgs> は変更されません。  
  
 このメソッドをオーバーライドして、方法をカスタマイズ、 <xref:System.Windows.Controls.Slider> プロセス <xref:System.Windows.Controls.Primitives.Thumb> 移動します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected override void OnValueChanged (double oldValue, double newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValueChanged(float64 oldValue, float64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Double" />
        <Parameter Name="newValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <see cref="T:System.Windows.Controls.Slider" /> の以前の <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
        <param name="newValue">
          <see cref="T:System.Windows.Controls.Slider" /> の新しい <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" />。</param>
        <summary>
          <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value" /> プロパティが変化した場合に、<see cref="T:System.Windows.Controls.Slider" /> の現在の位置を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の向きを取得または設定します。</summary>
        <value>
          <see cref="P:System.Windows.Controls.Slider.Orientation" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Windows.Controls.Orientation.Horizontal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティにバインドされて、 <xref:System.Windows.Controls.Primitives.Track.Orientation%2A> プロパティを <xref:System.Windows.Controls.Primitives.Track> コントロールによって、 <xref:System.Windows.Controls.Slider> を実装します。  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.OrientationProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.Orientation%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider\#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xml[Slider\#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.OrientationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.Orientation" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.Orientation%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.SelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> で指定された選択範囲の最大値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> の値の選択範囲の最大値。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> プロパティは、の値を超えることはできません、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> プロパティの値より小さくすることはできません、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> プロパティです。 値、 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> プロパティもありますの値以上、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> プロパティです。 場合の値、 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> の値より大きい、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> プロパティの値よりも小さいか、または、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> プロパティには、値は、の値に設定されて、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> または <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> プロパティそれぞれします。  
  
<a name="dependencyPropertyInfo_SelectionEnd"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.SelectionEndProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider\#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xml[Slider\#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.SelectionStart" />
        <altmember cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="SelectionEndProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionEndProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionEndProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.SelectionEndProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.SelectionEnd" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> で指定された選択範囲の最小値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> の値の選択範囲の最大値。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> プロパティには、値より小さくすることはできません、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> プロパティの値を超えることはできませんし、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> プロパティです。 値、 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> プロパティもありますの値以上、 <xref:System.Windows.Controls.Slider.SelectionStart%2A> プロパティです。 場合 <xref:System.Windows.Controls.Slider.SelectionStart%2A> がより小さい <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> 以上 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A>, 、<xref:System.Windows.Controls.Slider.SelectionStart%2A> の値に設定されている <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> または <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> それぞれします。  
  
<a name="dependencyPropertyInfo_SelectionStart"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.SelectionStartProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.SelectionEnd%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider\#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xml[Slider\#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.SelectionEnd" />
        <altmember cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStartProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionStartProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionStartProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.SelectionStartProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.SelectionStart" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.SelectionStart%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickFrequency">
      <MemberSignature Language="C#" Value="public double TickFrequency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 TickFrequency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.TickFrequency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>目盛りの間隔を取得または設定します。</summary>
        <value>目盛り間の距離。 既定値は \(1.0\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Controls.Slider.Ticks%2A> プロパティはない値に設定されている `null`, 、 <xref:System.Windows.Controls.Slider.TickFrequency%2A> プロパティは使用されません。  
  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A> プロパティを以外の値に設定する必要があります <xref:System.Windows.Controls.Primitives.TickPlacement.None> に沿って表示するの目盛り、 <xref:System.Windows.Controls.Slider>です。  
  
 指定された間隔で目盛りが描画される、 <xref:System.Windows.Controls.Slider.TickFrequency%2A> プロパティです。 ティック マークの開始時刻\] の値、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> プロパティの値になるまで続行し、 <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> プロパティに達しています。  
  
<a name="dependencyPropertyInfo_TickFrequency"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.TickFrequencyProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.TickFrequency%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider\#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xml[Slider\#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.TickPlacement" />
      </Docs>
    </Member>
    <Member MemberName="TickFrequencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TickFrequencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TickFrequencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.TickFrequencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Slider.TickFrequency" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子、 <xref:System.Windows.Controls.Slider.TickFrequency%2A> 依存関係プロパティ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TickPlacement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.TickPlacement TickPlacement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.TickPlacement TickPlacement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.TickPlacement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.TickPlacement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> の目盛りを配置する場合の <see cref="T:System.Windows.Controls.Primitives.Track" /> に対する位置を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> の目盛りをスライダー バーに対してどこに配置するかを定義する <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 値。 既定値は、<see cref="F:System.Windows.Controls.Primitives.TickPlacement.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A> プロパティを以外の値に設定する必要があります <xref:System.Windows.Controls.Primitives.TickPlacement.None> の目盛りを表示する表示します。  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#Basic](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#basic)]
 [!code-vb[Slider\#Basic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#basic)]
 [!code-xml[Slider\#Basic](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#basic)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Slider.TickFrequency" />
      </Docs>
    </Member>
    <Member MemberName="TickPlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TickPlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TickPlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.TickPlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別、 <see cref="P:System.Windows.Controls.Slider.TickPlacement" /> 依存関係プロパティ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子、 <xref:System.Windows.Controls.Slider.TickPlacement%2A> 依存関係プロパティ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection Ticks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection Ticks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Slider.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Slider" /> で表示する目盛りの位置を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.Slider" /> で表示する目盛りのセット。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 目盛りで定義されている範囲外にある、 <xref:System.Windows.Controls.Primitives.RangeBase.Minimum%2A> と <xref:System.Windows.Controls.Primitives.RangeBase.Maximum%2A> プロパティの値は無視されます。  
  
 <xref:System.Windows.Controls.Slider.TickPlacement%2A> プロパティを以外の値に設定する必要があります <xref:System.Windows.Controls.Primitives.TickPlacement.None> の目盛りを表示する表示します。  
  
<a name="dependencyPropertyInfo_Ticks"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Slider.TicksProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.Slider.Ticks%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[Slider\#SelectionRange](~/samples/snippets/csharp/VS_Snippets_Wpf/Slider/CSharp/Pane1.xaml.cs#selectionrange)]
 [!code-vb[Slider\#SelectionRange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Slider/VisualBasic/Pane1.xaml.vb#selectionrange)]
 [!code-xml[Slider\#SelectionRange](~/samples/snippets/xaml/VS_Snippets_Wpf/Slider/xaml/window1.xaml#selectionrange)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TicksProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TicksProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TicksProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Slider.TicksProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別、 <see cref="P:System.Windows.Controls.Slider.Ticks" /> 依存関係プロパティ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子、 <xref:System.Windows.Controls.Slider.Ticks%2A> 依存関係プロパティ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>