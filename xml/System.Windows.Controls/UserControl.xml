<Type Name="UserControl" FullName="System.Windows.Controls.UserControl">
  <TypeSignature Language="C#" Value="public class UserControl : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UserControl extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.UserControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>コントロールを作成する簡単な方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールで [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] リッチ コンテンツ、スタイル、トリガー、およびテンプレートをサポートします。 これらの機能では、多くの場合、新しいコントロールを作成することがなくカスタム一貫性のあるエクスペリエンスを作成できます。 詳細については、「[スタイルとテンプレート](http://msdn.microsoft.com/ja-jp/481765e5-5467-4a75-9f7b-e10e2ac410d9)」を参照してください。  
  
 派生したクラスを作成する最も簡単な方法は、新しいコントロールを作成する必要がある場合 <xref:System.Windows.Controls.UserControl>します。 これを行う前に、コントロールがテンプレートをサポートしないと、そのため、複雑なカスタマイズはサポートされていませんを検討してください。 ただしから派生する <xref:System.Windows.Controls.UserControl> ようにアプリケーションを構築する方法を既存の要素を追加することで、コントロールをビルドし、複雑なカスタマイズをサポートする必要がない場合は、適切なモデルです。 \(コントロールにテンプレートを使用する場合から派生 <xref:System.Windows.Controls.Control> 代わりにします\)。 コントロールの作成のさまざまなモデルの詳細については、次を参照してください。 [コントロールの作成の概要](http://msdn.microsoft.com/ja-jp/3d864748-cff0-4e63-9b23-d8e5a635b28f)します。  
  
 A <xref:System.Windows.Controls.UserControl> は、 <xref:System.Windows.Controls.ContentControl>, 、つまり、任意の型 \(文字列、イメージ、パネルなど\) の 1 つのオブジェクトを含めることができます。 詳細については、<xref:System.Windows.Controls.ContentControl> クラスを参照してください。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
   
  
## 例  
 次の例は、単純なを作成する方法を示しています。 `NumericUpDown`<xref:System.Windows.Controls.UserControl>します。  
  
 [!code-xml[UserControlNumericUpDown\#Markup](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml#markup)]  
  
 このロジックを次に示します <xref:System.Windows.Controls.UserControl>:  
  
 [!code-csharp[UserControlNumericUpDown\#CodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/UserControlNumericUpDown/CSharp/NumericUpDown.xaml.cs#codebehind)]
 [!code-vb[UserControlNumericUpDown\#CodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UserControlNumericUpDown/visualbasic/numericupdown.xaml.vb#codebehind)]  
  
 詳細については、「[コントロールの作成の概要](http://msdn.microsoft.com/ja-jp/3d864748-cff0-4e63-9b23-d8e5a635b28f)」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UserControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.UserControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成して返します、 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> この <see cref="T:System.Windows.Controls.UserControl" />します。</summary>
        <returns>新しい <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer" /> この <see cref="T:System.Windows.Controls.UserControl" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>