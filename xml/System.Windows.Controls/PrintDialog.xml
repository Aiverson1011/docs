<Type Name="PrintDialog" FullName="System.Windows.Controls.PrintDialog">
  <TypeSignature Language="C#" Value="public class PrintDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDialog extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.PrintDialog" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>標準の起動 Microsoft Windows 印刷\] ダイアログ ボックスを構成する、 <see cref="T:System.Printing.PrintTicket" /> と <see cref="T:System.Printing.PrintQueue" /> および、ユーザー入力に基づいてドキュメントを印刷します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーを使用できる、 **印刷** \] ダイアログ ボックスでプリンターを選択して、構成、および印刷ジョブを実行します。  
  
 使用する厳密に言えば、 <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A> ダイアログ ボックスを開くことがなくメソッドです。 その意味で、コントロールは見えない印刷コンポーネントとして使用できます。 パフォーマンス上の理由から、いずれかを使用する方がよいでしょうが、 <xref:System.Printing.PrintQueue.AddJob%2A> メソッドまたは多くのいずれか <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> と <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> のメソッド、 <xref:System.Windows.Xps.XpsDocumentWriter>です。 詳細については、次を参照してください。 [方法: XPS ファイルをプログラムによって印刷](http://msdn.microsoft.com/ja-jp/0b1c0a3f-b19e-43d6-bcc9-eb3ec4e555ad)します。  
  
 このクラスを混同しないでください <xref:System.Windows.Controls.PrintDialog?displayProperty=fullName>, と <xref:System.Windows.Forms.PrintDialog?displayProperty=fullName>です。 後者は Windows フォーム アプリケーションで使用されます。<xref:System.Windows.Controls.PrintDialog?displayProperty=fullName> 使用される [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] アプリケーションです。  
  
   
  
## 例  
 次の例は、のインスタンスを作成して、単純なを表示する方法を示しています。 <xref:System.Windows.Controls.PrintDialog> を使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] マークアップおよびコード。  
  
 [!code-xml[PrintDialog\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.PrintDialog" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentPageEnabled">
      <MemberSignature Language="C#" Value="public bool CurrentPageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CurrentPageEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.CurrentPageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のページを印刷するオプションが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 現在のページを印刷するオプションが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPage">
      <MemberSignature Language="C#" Value="public uint MaxPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MaxPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページ範囲内で許可されている最大ページ数を設定します。</summary>
        <value>A <see cref="T:System.UInt32" /> ページ範囲で使用できる最大ページ数を表す、 **印刷** \] ダイアログ ボックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クリックしたユーザー **印刷** ときに、 **印刷** \] ダイアログ ボックスで設定されている範囲外のページを印刷に設定されて、 <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> と <xref:System.Windows.Controls.PrintDialog.MinPage%2A> 値に忠告して、最大および最小のページ番号のエラー メッセージが表示されます。 何も出力されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">1 より小さい値に設定されますされています。</exception>
      </Docs>
    </Member>
    <Member MemberName="MinPage">
      <MemberSignature Language="C#" Value="public uint MinPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MinPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.MinPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページ範囲内で許可されている最下位のページ数を設定します。</summary>
        <value>A <see cref="T:System.UInt32" /> ページ範囲で使用できる最下位のページ番号を表す、 **印刷** \] ダイアログ ボックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クリックしたユーザー **印刷** ときに、 **印刷** \] ダイアログ ボックスで設定されている範囲外のページを印刷に設定されて、 <xref:System.Windows.Controls.PrintDialog.MaxPage%2A> と <xref:System.Windows.Controls.PrintDialog.MinPage%2A> 値に忠告して、最大および最小のページ番号のエラー メッセージが表示されます。 何も出力されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">1 より小さい値に設定されますされています。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRange">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRange PageRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRange PageRange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のタイミングを印刷するページ範囲 <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection" /> に設定されている <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages" />します。</summary>
        <value>A <see cref="T:System.Windows.Controls.PageRange" /> 印刷されるページの範囲を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Windows.Controls.PageRange" /> オブジェクトのいずれかの範囲の先頭または 1 より小さい値に設定する範囲の末尾には、プロパティを設定するために使用されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="PageRangeSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.PageRangeSelection PageRangeSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.PageRangeSelection PageRangeSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PageRangeSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.PageRangeSelection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Controls.PageRangeSelection" /> のこのインスタンスの <see cref="T:System.Windows.Controls.PrintDialog" />です。</summary>
        <value>
          <see cref="T:System.Windows.Controls.PageRangeSelection" /> を印刷するページ範囲の種類を表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Controls.PrintDialog.PageRangeSelection%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] マークアップおよびコード。  
  
 [!code-xml[PrintDialog\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaHeight">
      <MemberSignature Language="C#" Value="public double PrintableAreaHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの印刷可能領域の高さを取得します。</summary>
        <value>A <see cref="T:System.Double" /> 印刷可能なページ領域の高さを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の値を取得する方法を示しています、 <xref:System.Windows.Controls.PrintDialog.PrintableAreaHeight%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] マークアップおよびコード。  
  
 [!code-xml[PrintDialog\#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#4)]  
  
 ...  
  
 [!code-csharp[PrintDialog\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PrintDialog\#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintableAreaWidth">
      <MemberSignature Language="C#" Value="public double PrintableAreaWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PrintableAreaWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの印刷可能領域の幅を取得します。</summary>
        <value>A <see cref="T:System.Double" /> 印刷可能なページ領域の幅を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の値を取得する方法を示しています、 <xref:System.Windows.Controls.PrintDialog.PrintableAreaWidth%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] マークアップおよびコード。  
  
 [!code-xml[PrintDialog\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#3)]  
  
 ...  
  
 [!code-csharp[PrintDialog\#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PrintDialog\#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public void PrintDocument (System.Windows.Documents.DocumentPaginator documentPaginator, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintDocument(class System.Windows.Documents.DocumentPaginator documentPaginator, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <see cref="T:System.Windows.Documents.DocumentPaginator" /> オブジェクトを印刷します。</param>
        <param name="description">印刷するジョブの説明です。 このテキストは、 ユーザー インターフェイス (UI) プリンターのです。</param>
        <summary>プリント、 <see cref="T:System.Windows.Documents.DocumentPaginator" /> オブジェクトを <see cref="T:System.Printing.PrintQueue" /> 現在選択されています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="documentPaginator" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="PrintQueue">
      <MemberSignature Language="C#" Value="public System.Printing.PrintQueue PrintQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintQueue PrintQueue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Printing.PrintQueue" /> が選択されているプリンターを表します。</summary>
        <value>
          <see cref="T:System.Printing.PrintQueue" /> ユーザーが選択しました。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for permission to print. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.DefaultPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public System.Printing.PrintTicket PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Printing.PrintTicket PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.PrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Printing.PrintTicket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Printing.PrintTicket" /> で使用されている、 <see cref="T:System.Windows.Controls.PrintDialog" /> 、ユーザーがクリックしたとき **印刷** は現在の印刷ジョブです。</summary>
        <value>A <see cref="T:System.Printing.PrintTicket" /> 、次回使用される、 **印刷** \] ダイアログ ボックスにボタンをクリックします。  
  
 この設定 <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket" /> プロパティは検証したり変更したりしない、指定した <see cref="T:System.Printing.PrintTicket" /> 、特定の <see cref="T:System.Printing.PrintQueue" />です。  必要に応じて、使用、 <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> を作成する方法、 <see cref="T:System.Printing.PrintQueue" />\-特定 <see cref="T:System.Printing.PrintTicket" /> 特定のプリンターに対して有効です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証の設定も、このプロパティの取得、 <xref:System.Printing.PrintTicket>です。 使用を有効にする <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintVisual">
      <MemberSignature Language="C#" Value="public void PrintVisual (System.Windows.Media.Visual visual, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrintVisual(class System.Windows.Media.Visual visual, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="visual">
          <see cref="T:System.Windows.Media.Visual" /> を印刷します。</param>
        <param name="description">印刷するジョブの説明です。 このテキストは、 ユーザー インターフェイス (UI) プリンターのです。</param>
        <summary>派生したビジュアル \(テキスト以外の\) オブジェクトを出力、 <see cref="T:System.Windows.Media.Visual" /> クラスに、 <see cref="T:System.Printing.PrintQueue" /> 現在選択されています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visual" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedPagesEnabled">
      <MemberSignature Language="C#" Value="public bool SelectedPagesEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SelectedPagesEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.SelectedPagesEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択したページを印刷するオプションが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 選択したページを印刷するオプションが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.PrintDialog.ShowDialog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.PrintDialog" /> を、モーダル ダイアログ ボックスとして呼び出します。</summary>
        <returns>ユーザーが **\[印刷\]** をクリックした場合は <see langword="true" />。ユーザーが **\[キャンセル\]** をクリックした場合は <see langword="false" />。ユーザーが **\[印刷\]** も **\[キャンセル\]** もクリックせずにダイアログ ボックスを閉じた場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Windows.Controls.PrintDialog.ShowDialog%2A> コード内のメソッドです。  
  
 [!code-csharp[PrintDialog\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserPageRangeEnabled">
      <MemberSignature Language="C#" Value="public bool UserPageRangeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UserPageRangeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかのユーザー、 **印刷** \] ダイアログ ボックスで印刷するページの範囲を指定するオプションがあります。</summary>
        <value>
          <see langword="true" /> オプションがある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Controls.PrintDialog.UserPageRangeEnabled%2A> プロパティを使用して [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] マークアップおよびコード。  
  
 [!code-xml[PrintDialog\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml#2)]  
  
 ...  
  
 [!code-csharp[PrintDialog\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/PrintDialog/CSharp/Window1.xaml.cs#1)]
 [!code-vb[PrintDialog\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PrintDialog/visualbasic/window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>