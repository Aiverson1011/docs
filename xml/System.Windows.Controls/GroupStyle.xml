<Type Name="GroupStyle" FullName="System.Windows.Controls.GroupStyle">
  <TypeSignature Language="C#" Value="public class GroupStyle : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi GroupStyle extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.GroupStyle" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>レベルごとにグループの外観を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例、 <xref:System.Windows.Controls.ItemsControl> にバインドされた、 <xref:System.Windows.Data.XmlDataProvider> とを追加し、グループ化を解除するためのロジックを含むコードの内容。 チェック ボックスをチェックするときのコンテンツ、 <xref:System.Windows.Controls.ItemsControl> によってグループ化、 `Type` 属性です。  
  
 各グループのタイプは <xref:System.Windows.Data.CollectionViewGroup>です。<xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> として表示されるように指定された、 <xref:System.Windows.Controls.TextBlock> を表示する、 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> それぞれのグループです。  ここで、 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> か `Work` または `Home`です。  
  
 [!code-xml[GroupingSample\#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample\#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample\#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.GroupStyle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.GroupStyle" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>代替の数を取得または <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクトです。</summary>
        <value>代替の数 <see cref="T:System.Windows.Controls.GroupItem" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> プロパティおよび <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 添付プロパティでは、2 つ以上の代替の外観を指定できます。 <xref:System.Windows.Controls.GroupItem> オブジェクトです。 すべてのサードパーティの代替の背景色を指定するなどの <xref:System.Windows.Controls.GroupItem> で、 <xref:System.Windows.Controls.ItemsControl>です。<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> それぞれに割り当てられている <xref:System.Windows.Controls.GroupItem> で、 <xref:System.Windows.Controls.ItemsControl>です。<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 0 から始まる、インクリメントになるまで <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> マイナス 1 と 0 で、再開します。 たとえば場合、 <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 3、7 を使用する必要がある <xref:System.Windows.Controls.GroupItem> 内のオブジェクト、 <xref:System.Windows.Controls.ItemsControl>, 、次の表に、 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 項目ごとにします。  
  
|位置 <xref:System.Windows.Controls.GroupItem> で、 <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 交互に異なる外観を指定するいくつかの方法がある <xref:System.Windows.Controls.GroupItem> オブジェクトです。 1 つのメソッドは、プロパティをバインドする、 <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> または <xref:System.Windows.Controls.GroupStyle.ContainerStyle%2A> の <xref:System.Windows.Controls.GroupStyle> に、 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>です。 使用して、 <xref:System.Windows.Controls.AlternationConverter> にどの値を適用するかを指定する、 <xref:System.Windows.Controls.GroupItem> を持つ特定の <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> 値。 値に応じてプロパティの値を変更するトリガーを使用することもできます。 その <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.Controls.ListBox> にバインドされた、 <xref:System.Windows.Data.CollectionViewSource> コレクション内の項目をグループ化します。 その他の各ヘッダーの背景の例では、 <xref:System.Windows.Controls.GroupItem> 、次の手順に従って 2 つの色を変化します。  
  
-   セット <xref:System.Windows.Controls.GroupStyle.AlternationCount%2A> 2 にします。  
  
-   作成、 <xref:System.Windows.Controls.AlternationConverter> を返す、 <xref:System.Windows.Media.SolidColorBrush>, の値に応じて、 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>です。  
  
-   バインド、 <xref:System.Windows.Controls.TextBlock.Background%2A> の <xref:System.Windows.Controls.TextBlock> で、 <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> に、 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> プロパティを提供し、 <xref:System.Windows.Controls.AlternationConverter>です。 注意してください、 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A> 添付プロパティが設定されて、 <xref:System.Windows.Controls.GroupItem>, 、およびバインドを使用して <xref:System.Windows.Data.RelativeSourceMode.FindAncestor> 値を取得します。  
  
 例では、内の項目の背景を代替も、 <xref:System.Windows.Controls.ListBox> を設定して 3 つの色の間で、 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 上、 <xref:System.Windows.Controls.ListBox> とバインディング、 <xref:System.Windows.Controls.Control.Background%2A> それぞれの <xref:System.Windows.Controls.ListBox> に、 <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName>です。 この場合、バック グラウンド交互に 3 つの色。  
  
 <xref:System.Windows.Data.CollectionViewSource> 、グループ、アイテムは表示されません。  詳細グループ項目をする方法については、次を参照してください。 [方法: 並べ替えとグループを使用して XAML でビュー データ](http://msdn.microsoft.com/ja-jp/145c8c3f-dbdd-4d0d-816f-90b35eba7eda)します。  
  
 [!code-xml[AlternationIndexSnippets\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目ごとに生成される <see cref="T:System.Windows.Controls.GroupItem" /> に適用されるスタイルを取得または設定します。</summary>
        <value>項目ごとに生成される <see cref="T:System.Windows.Controls.GroupItem" /> に適用されるスタイル。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property is a rare case where creating a <xref:System.Windows.Style> inline in property element syntax, rather than creating the style as a resource, is a reasonable alternative methodology.  
  
<a name="xamlAttributeUsage_ContainerStyle"></a>   
## XAML Attribute Usage  
  
```  
<object ContainerStyle="{ResourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlValues_ColumnHeaderContainerStyle"></a>   
## XAML Values  
 *ResourceExtension*  
 One of the following: `StaticResource`, or `DynamicResource`. See [XAML Resources](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f).  
  
 *StyleResourceKey*  
 The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      </Docs>
    </Member>
    <Member MemberName="ContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>生成された各に適用するスタイルの選択のカスタム ロジックを提供するアプリケーションのライターを有効に <see cref="T:System.Windows.Controls.GroupItem" />します。</summary>
        <value>派生したオブジェクト <see cref="T:System.Windows.Controls.StyleSelector" />します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.GroupStyle Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.GroupStyle Default" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.GroupStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループの既定のスタイルを取得します。</summary>
        <value>グループの既定のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlPropertyElementUsage_Default"></a>   
## XAML Property Element Usage  
  
```  
<object>  
  <object.property>  
    <x:Static Member="GroupStyle.Default" …/>  
  </object.property>  
</object>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultGroupPanel">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Controls.ItemsPanelTemplate DefaultGroupPanel" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定値を識別する <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> パネルを作成するアイテムをレイアウトするために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のパネルが必要な場合これは、パネルが提供されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または文字列として表示されている場合、ヘッダーを書式設定する方法を指定する複合文字列を設定します。</summary>
        <value>文字列として表示されている場合、ヘッダーを書式設定する方法を指定する複合文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A>定義済み、複合、またはカスタムの文字列形式にすることができます。 文字列形式の詳細については、次を参照してください。[Formatting Types](http://msdn.microsoft.com/ja-jp/0d1364da-5b30-4d42-8e6b-03378343343f)です。 設定した場合、<xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A>または<xref:System.Windows.Controls.GroupStyle.HeaderTemplateSelector%2A>のプロパティ、 <xref:System.Windows.Controls.GroupStyle>、<xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A>プロパティは無視されます。  
  
   
  
## 例  
 次の例を作成、<xref:System.Windows.Controls.ListBox>価格帯で項目のコレクションをグループ化します。  コンバーター `GroupByPrice`、各項目の価格上にある整数値を返します。 たとえば、品目の価格が 0 ~ 100 の間にある場合は、コンバーターは、100 を返します。 この例では、<xref:System.Windows.Controls.GroupStyle.HeaderStringFormat%2A>各価格範囲の上限値を含む文字列を作成します。 たとえば、米国では 100 ドルの下の「項目」という見出しの下 100 ドル下にあるアイテムがグループ化されます。  
  
 [!code-xml[ContentStringSnippets\#GroupStyleHeaderStringFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#groupstyleheaderstringformat)]  
  
 例を次に、`GroupByPrice`クラス、`PurchaseItem`クラス、およびコレクションを<xref:System.Windows.Controls.ListBox>にバインドします。  
  
 [!code-csharp[ContentStringSnippets\#GroupStyleData](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml.cs#groupstyledata)]
 [!code-vb[ContentStringSnippets\#GroupStyleData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentStringSnippets/visualbasic/window1.xaml.vb#groupstyledata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグループ ヘッダーの表示に使用されるテンプレートを設定します。</summary>
        <value>A <see cref="T:System.Windows.DataTemplate" /> グループ ヘッダーの表示に使用されるオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例、 <xref:System.Windows.Controls.ItemsControl> にバインドされた、 <xref:System.Windows.Data.XmlDataProvider> とを追加し、グループ化を解除するためのロジックを含むコードの内容。 チェック ボックスをチェックするときのコンテンツ、 <xref:System.Windows.Controls.ItemsControl> によってグループ化、 `Type` 属性です。  
  
 各グループのタイプは <xref:System.Windows.Data.CollectionViewGroup>です。<xref:System.Windows.Controls.GroupStyle> <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> として表示されるように指定された、 <xref:System.Windows.Controls.TextBlock> を表示する、 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> それぞれのグループです。  ここで、 <xref:System.Windows.Data.CollectionViewGroup.Name%2A> か `Work` または `Home`です。  
  
 [!code-xml[GroupingSample\#XAML](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml#xaml)]  
  
 [!code-csharp[GroupingSample\#Code](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupingSample/CSharp/Window1.xaml.cs#code)]
 [!code-vb[GroupingSample\#Code](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GroupingSample/visualbasic/window1.xaml.vb#code)]  
  
 次の例では、使用する方法、 <xref:System.Windows.Controls.GroupStyle.HeaderTemplate%2A> プロパティ。  
  
 [!code-xml[DataBindingLab\#GroupStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#groupstyle)]  
  
 定義を次に示します、 `groupingHeaderTemplate`<xref:System.Windows.DataTemplate>:  
  
 [!code-xml[DataBindingLab\#HeaderTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/MainWindow.xaml#headertemplate)]  
  
 完全なサンプルを参照してください。 [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループ ヘッダーの表示に使用されるテンプレートの選択のカスタム ロジックを提供する、アプリケーションの作成者を有効にします。</summary>
        <value>派生したオブジェクト <see cref="T:System.Windows.Controls.DataTemplateSelector" />します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GroupStyle.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HidesIfEmpty">
      <MemberSignature Language="C#" Value="public bool HidesIfEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesIfEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.HidesIfEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または空のグループに対応する項目を表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 空のグループを表示しません。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">発生するイベントの引数。</param>
        <summary>発生させる、 <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged" /> 指定された引数を使用して、イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Panel">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ItemsPanelTemplate Panel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ItemsPanelTemplate Panel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GroupStyle.Panel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ItemsPanelTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定パネルを作成するテンプレート、項目をレイアウトするために使用します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ItemsPanelTemplate" /> 、項目のレイアウトに使用するパネルを作成するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.GroupStyle.PropertyChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ値が変更するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
  </Members>
</Type>