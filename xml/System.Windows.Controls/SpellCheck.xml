<Type Name="SpellCheck" FullName="System.Windows.Controls.SpellCheck">
  <TypeSignature Language="C#" Value="public sealed class SpellCheck" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SpellCheck extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.SpellCheck" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などのテキスト編集コントロールに、リアルタイムのスペル チェック機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 スペル チェックを有効にするには設定、 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName> プロパティを `true` テキスト編集コントロールにします。 このスペル チェックを有効にすると、スペル ミスの語句に下線を付ける赤い波線を使用して、次の図に示すようにします。 スペル チェックは、WPF には、既定のディクショナリが用意されて 場合にのみでサポートされます。[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], 、WPF では、英語、フランス語、ドイツ語、およびスペイン語の辞書が用意されています。  
  
 308b0199-3d18-44d6-a679-166105c7a21d  
  
 ユーザー辞書を追加するには、辞書ファイルの場所を追加、 <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A> コレクションです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomDictionaries">
      <MemberSignature Language="C#" Value="public System.Collections.IList CustomDictionaries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList CustomDictionaries" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>辞書のコレクションにカスタムのスペルをチェックするために使用されるファイルの場所を取得します。</summary>
        <value>辞書ファイルの場所のコレクションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー辞書は、.lex 拡張子を持つテキスト ファイルの辞書ファイルを使用します。 辞書ファイルの各行には、正当なスペルとして受け入れられる 1 つの単語が含まれています。 ファイルの最初の行には、辞書に適用されるロケール識別子 \(LCID\) を指定できます。 ロケールが指定されていない場合は、すべての言語にディクショナリが適用されます。 詳細については、次を参照してください。 [Locale IDs](http://go.microsoft.com/fwlink/?LinkId=165561)します。 次の例では、英語の辞書ファイルの最初の数行を示します。  
  
```  
#LID 1033  
TextBlock  
TextBox  
ListBox  
```  
  
 1 つまたは複数のユーザー辞書を指定する、 <xref:System.Windows.Controls.TextBox> または任意のクラスから派生した <xref:System.Windows.Controls.Primitives.TextBoxBase>, にファイルの URI を追加することで、辞書ファイルの場所の指定、 <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A> コレクションです。  
  
> [!NOTE]
>  使用して <xref:System.Collections.IList.Insert%2A> にファイルを追加する、 <xref:System.Windows.Controls.SpellCheck.CustomDictionaries%2A> コレクション、例外が発生します。 代わりに、 <xref:System.Collections.IList.Add%2A> と <xref:System.Collections.IList.Remove%2A> コレクションを更新します。  
  
 辞書ファイルを添付できる、ローカル コンピューターにインストールされているコンテンツのファイルまたはローカルにコンパイルされたリソース ファイルとしてアプリケーションでアセンブリを参照します。 ファイルを参照するには、パック Uri を使用します。 詳細については、次を参照してください。 [WPF での Pack Uri](http://msdn.microsoft.com/ja-jp/43adb517-21a7-4df3-98e8-09e9cdf764c4)します。  
  
 スペル チェックを有効にするには設定、 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName> プロパティを `true` 上、 <xref:System.Windows.Controls.TextBox> または任意のクラスから派生した <xref:System.Windows.Controls.Primitives.TextBoxBase>します。 そのため、すべてのユーザー辞書 <xref:System.Windows.Controls.TextBox> だけでなく、既定のスペル チェックに使用します。 スペル チェックの詳細については、次を参照してください。 <xref:System.Windows.Controls.SpellCheck>します。  
  
   
  
## 例  
 次の例を次の 2 つのユーザー辞書を追加する方法を示しています、 <xref:System.Windows.Controls.RichTextBox>です。 XAML では、最初のユーザー辞書 \(customwords.lex\) が追加されます。 ファイルは、コンテンツ ファイルとしてアプリケーションに含まれ、出力ディレクトリにコピーします。 使用する、 <xref:System.Uri> System 名前空間を指定する必要の要素。  
  
 `xmlns:sys="clr-namespace:System;assembly=System"`  
  
 2 つ目のユーザー辞書 \(customwords2.lex\) を追加、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> イベント ハンドラーです。 ファイルが、リソース ファイルとして含まれているし、WPFCustomDictionary の名前は、アプリケーション アセンブリにコンパイルします。  
  
 [!code-xml[WpfCustomDictionary\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/wpfcustomdictionary/cs/window1.xaml#1)]  
  
 [!code-csharp[WpfCustomDictionary\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/wpfcustomdictionary/cs/window1.xaml.cs#2)]
 [!code-vb[WpfCustomDictionary\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/wpfcustomdictionary/vb/mainwindow.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
        <altmember cref="T:System.Windows.Controls.TextBox" />
        <altmember cref="T:System.Windows.Controls.RichTextBox" />
        <altmember cref="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)" />
      </Docs>
    </Member>
    <Member MemberName="CustomDictionariesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomDictionariesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomDictionariesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.CustomDictionariesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomDictionaries">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetCustomDictionaries (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetCustomDictionaries(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.GetCustomDictionaries(System.Windows.Controls.Primitives.TextBoxBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">用語集ファイルのコレクションを取得するテキスト編集コントロール。</param>
        <summary>指定したテキスト編集コントロールのカスタムのスペル チェックに使用される用語集ファイルの場所のコレクションを取得します。</summary>
        <returns>辞書ファイルの場所のコレクションです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー辞書は、.lex 拡張子を持つ単純なテキスト ファイルの辞書ファイルを使用します。 辞書ファイルの各行には、正当なスペルとして受け入れられる 1 つの単語が含まれています。 ファイルの最初の行には、辞書に適用されるロケール識別子 \(LCID\) を指定できます。 ロケールが指定されていない場合は、すべての言語にディクショナリが適用されます。 詳細については、次を参照してください。 [Locale IDs](http://go.microsoft.com/fwlink/?LinkId=165561)します。 次の例では、英語の辞書ファイルの最初の数行を示します。  
  
```  
#LID 1033  
TextBlock  
TextBox  
ListBox  
```  
  
 1 つまたは複数のユーザー辞書を指定する、 <xref:System.Windows.Controls.TextBox> または任意のクラスから派生した <xref:System.Windows.Controls.Primitives.TextBoxBase>, にファイルの URI を追加することで、辞書ファイルの場所の指定、 <xref:System.Collections.IList> によって返される、 <xref:System.Windows.Controls.SpellCheck.GetCustomDictionaries%2A> メソッドです。  
  
 スペル チェックを有効にするには設定、 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A?displayProperty=fullName> プロパティを `true` 上、 <xref:System.Windows.Controls.TextBox> または任意のクラスから派生した <xref:System.Windows.Controls.Primitives.TextBoxBase>します。 そのため、すべてのユーザー辞書 <xref:System.Windows.Controls.TextBox> だけでなく、既定のスペル チェックに使用します。 スペル チェックの詳細については、次を参照してください。 <xref:System.Windows.Controls.SpellCheck>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textBoxBase " />は <see langword="null" />です。</exception>
        <altmember cref="P:System.Windows.Controls.SpellCheck.CustomDictionaries" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
        <altmember cref="T:System.Windows.Controls.TextBox" />
        <altmember cref="T:System.Windows.Controls.RichTextBox" />
      </Docs>
    </Member>
    <Member MemberName="GetIsEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsEnabled(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.GetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">チェックするテキスト編集コントロール。 このコントロールの例として、<see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などが挙げられます。</param>
        <summary>指定したテキスト編集コントロールでスペル チェックが有効になっているかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> テキスト編集コントロールでスペル チェックが有効になっている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textBoxBase " />は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> など、このテキスト編集コントロールでスペル チェッカーが有効かどうかを決定する値を取得または設定します。</summary>
        <value>コントロールでスペル チェッカーが有効な場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この依存関係プロパティでは、特殊な書き込み専用で接続されているプロパティの使用方法もあります。[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] プロパティを設定するための構文は `<`*textBoxBaseClass* **SpellCheck.IsEnabled**`="`*boolValue*`" .../>`, ここで、 *textBoxBaseClass* から派生したクラスのオブジェクトの要素は、 <xref:System.Windows.Controls.Primitives.TextBoxBase>, 、および *boolValue* か `true` または `false` \(大文字と小文字\)。  プロパティを設定すると、コード内の添付プロパティとしてを参照してください、 <xref:System.Windows.Controls.SpellCheck.SetIsEnabled%2A> メソッドです。 一致がない `GetIsEnabled` アクセサー。 値を取得するには、現在を取得 <xref:System.Windows.Controls.SpellCheck> オブジェクトから、 <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=fullName> プロパティの値を取得し、 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A> からプロパティ <xref:System.Windows.Controls.SpellCheck>します。  
  
<a name="xamlTextUsage_IsEnabled"></a>   
## XAML テキストの使用方法  
 「解説」を参照してください。  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.SpellCheck.IsEnabledProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsEnabled (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsEnabled(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">スペル チェックを有効または無効にするテキスト編集コントロール。 このコントロールの例として、<see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などが挙げられます。</param>
        <param name="value">テキスト編集コントロールでスペル チェックを有効にするかどうかを指定するブール値。</param>
        <summary>
          <see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などの指定されたテキスト編集コントロールで、スペル チェックを有効または無効にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドによりの添付プロパティの使用、 <xref:System.Windows.Controls.SpellCheck.IsEnabled%2A> プロパティ [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。 例を次に、 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpellingReform">
      <MemberSignature Language="C#" Value="public static void SetSpellingReform (System.Windows.Controls.Primitives.TextBoxBase textBoxBase, System.Windows.Controls.SpellingReform value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSpellingReform(class System.Windows.Controls.Primitives.TextBoxBase textBoxBase, valuetype System.Windows.Controls.SpellingReform value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textBoxBase" Type="System.Windows.Controls.Primitives.TextBoxBase" />
        <Parameter Name="value" Type="System.Windows.Controls.SpellingReform" />
      </Parameters>
      <Docs>
        <param name="textBoxBase">テキスト編集コントロール、スペル チェックを適用します。 このコントロールの例として、<see cref="T:System.Windows.Controls.TextBox" /> や <see cref="T:System.Windows.Controls.RichTextBox" /> などが挙げられます。</param>
        <param name="value">
          <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> スペリング改善ルールを決定する値。</param>
        <summary>スペル チェックで使用されるスペリング改善ルールを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この方法でアクセスするスペリング改善ルールは、1990 年代のフランス語とドイツ語のスペル チェックの改善を参照してください。 他の言語で使用している場合は、このメソッドを指定しても効果がありません。  
  
 このメソッドによりの添付プロパティの使用、 <xref:System.Windows.Controls.SpellCheck.SpellingReform%2A> プロパティ [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingReform">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingReform SpellingReform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.SpellingReform SpellingReform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.SpellCheck.SpellingReform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingReform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スペル チェックが使用するスペリング改善ルールを取得または設定します。</summary>
        <value>スペル チェックが使用するスペリング改善ルール。 既定値は、フランス語の場合は <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform" />、ドイツ語の場合は <see cref="F:System.Windows.Controls.SpellingReform.Postreform" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティによって決定されるスペリング改善ルールは、フランス語とドイツ語のスペル チェックの改善を参照してください。 このプロパティは、他の言語を使用している場合。  
  
 この依存関係プロパティでは、特殊な書き込み専用で接続されているプロパティの使用方法もあります。[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] プロパティを設定するための構文は `<`*textBoxBaseClass* **SpellCheck.SpellingReform**`="`*enumValue*`" .../>`, ここで、 *textBoxBaseClass* から派生したクラスのオブジェクトの要素は、 <xref:System.Windows.Controls.Primitives.TextBoxBase>, 、および *enumValue* の値の名前を文字列には、 <xref:System.Windows.Controls.SpellingReform> 列挙します。  プロパティを設定すると、コード内の添付プロパティとしてを参照してください、 <xref:System.Windows.Controls.SpellCheck.SetSpellingReform%2A> メソッドです。 一致がない `GetSpellingReform` アクセサー。 値を取得するには、現在を取得 <xref:System.Windows.Controls.SpellCheck> オブジェクトから、 <xref:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck%2A?displayProperty=fullName> プロパティの値を取得し、 <xref:System.Windows.Controls.SpellCheck.SpellingReform%2A> からプロパティ <xref:System.Windows.Controls.SpellCheck>します。  
  
<a name="xamlTextUsage_SpellingReform"></a>   
## XAML テキストの使用方法  
 「解説」を参照してください。  
  
<a name="dependencyPropertyInfo_SpellingReform"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.SpellCheck.SpellingReformProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellingReformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpellingReformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpellingReformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.SpellCheck.SpellingReformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>