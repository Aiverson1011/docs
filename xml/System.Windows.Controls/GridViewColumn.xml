<Type Name="GridViewColumn" FullName="System.Windows.Controls.GridViewColumn">
  <TypeSignature Language="C#" Value="public class GridViewColumn : System.Windows.DependencyObject, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridViewColumn extends System.Windows.DependencyObject implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.GridViewColumn" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Header")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="HeaderContainerStyle", StyleTargetType=typeof(System.Windows.Controls.GridViewColumnHeader))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データを表示する列を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Controls.GridViewColumn> によって使用される、 <xref:System.Windows.Controls.GridView> データの列を表示する表示モード。<xref:System.Windows.Controls.ListView> を実装する、 <xref:System.Windows.Controls.GridView> 表示モードでは、列のデータを提供します。 データを指定するデータ バインディングを使用する、 <xref:System.Windows.Controls.GridViewColumn>です。  
  
 使用することができます、 <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A> 列に表示するデータを定義するプロパティです。 一部としてデータを定義することもできる、 <xref:System.Windows.DataTemplate> によって指定された、 <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A> プロパティです。 別のセルがある異なる場合 <xref:System.Windows.DataTemplate> オブジェクト、 <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> プロパティを指定できます、 <xref:System.Windows.Controls.DataTemplateSelector>です。 次に、優先順位の高いものから最も低い順にここでは、前述のプロパティを示します。  
  
-   <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
 <xref:System.Windows.Controls.GridViewColumn> クラスには、定義し、列の列ヘッダーをカスタマイズに使用できるプロパティも含まれています。<xref:System.Windows.Controls.GridViewColumn.Header%2A> プロパティは、列ヘッダーの内容を定義できます。 などのプロパティ <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> と <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> コンテンツとの列ヘッダーのスタイルを指定することもできます。 これらのプロパティの一部も上で検出されたその他のクラスなど、 <xref:System.Windows.Controls.GridViewColumnHeader> クラスです。 スタイルおよび列ヘッダーについては、これらのプロパティの優先順位の順序については、テンプレート定義に使用されるプロパティの詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](http://msdn.microsoft.com/ja-jp/74835674-a39e-4ab5-9418-ad7f6ab7b956)します。  
  
 <xref:System.Windows.Controls.GridViewColumn> クラスは、<xref:System.ComponentModel.INotifyPropertyChanged> インターフェイスを実装します。 このインターフェイスには、プロパティの値に変更がなどが発生したときに発生するイベントを定期受信する機能が用意されています、 <xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A> プロパティの値。  
  
   
  
## 例  
 次の例は、定義する方法を示しています。 <xref:System.Windows.Controls.GridViewColumn> するオブジェクトを、 <xref:System.Windows.Controls.GridView>です。  
  
 [!code-xml[ListViewSnips\#GridViewColumnContent](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#gridviewcolumncontent)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.GridView" />
    <altmember cref="T:System.Windows.Controls.GridViewColumnHeader" />
    <altmember cref="T:System.Windows.Controls.GridViewColumnCollection" />
    <altmember cref="T:System.Windows.Controls.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridViewColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.GridViewColumn" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualWidth">
      <MemberSignature Language="C#" Value="public double ActualWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ActualWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.ActualWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.GridViewColumn" /> の実際の幅を取得します。</summary>
        <value>列の現在の幅です。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 You can use this property to get the current width of the <xref:System.Windows.Controls.GridViewColumn> when the <xref:System.Windows.Controls.GridViewColumn.Width%2A> property is set to <xref:System.Double.NaN?displayProperty=fullName>. A value of <xref:System.Double.NaN?displayProperty=fullName> for the <xref:System.Windows.Controls.GridViewColumn.Width%2A> property specifies that the column size accommodate the largest visible item that is not the column header.  
  
 Unlike <xref:System.Windows.FrameworkElement.ActualWidth%2A?displayProperty=fullName>, <xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A?displayProperty=fullName> is not a dependency property.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate CellTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate CellTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.CellTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または使用して列のセルの内容を表示するテンプレートを設定します。</summary>
        <value>A <see cref="T:System.Windows.DataTemplate" /> 列のセルの書式を設定するために使用されます。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次のプロパティでは、すべてにバインドしとの優先順位の高いものから順に並んでいる列のセルの内容を表示します。  
  
-   <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
<a name="xamlAttributeUsage_CellTemplate"></a>   
## XAML 属性の使用方法  
  
```  
<object CellTemplate="{ResourceExtension TemplateResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_CellTemplate"></a>   
## XAML プロパティ要素の使用  
  
<a name="xamlValues_CellTemplate"></a>   
## XAML 値  
 *ResourceExtension*  
 次のいずれか: `StaticResource`, 、または `DynamicResource`です。 参照してください [XAML リソース](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f)します。  
  
 *TemplateResourceKey*  
 要求されているテンプレートを識別するキー。 このキーは既存のリソースを <xref:System.Windows.ResourceDictionary>です。  
  
> [!NOTE]
>  プロパティ要素構文は、技術的に可能ですが、推奨されません。 参照してください [インライン スタイルおよびテンプレート](http://msdn.microsoft.com/ja-jp/69a1a3f9-acb5-4e2c-9c43-2e376c055ac4)します。 バインディングを使用して参照またはも可能であればが一般的ではありません。  
  
<a name="dependencyPropertyInfo_CellTemplate"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.GridViewColumn.CellTemplateProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Windows.DataTemplate> 表示に使用する、 <xref:System.Windows.Controls.GridViewColumn>です。  
  
 [!code-xml[ListViewTemplate\#GridViewCellTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcelltemplate)]  
  
 [!code-xml[ListViewTemplate\#CellTemplateProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#celltemplateproperty)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding" />
      </Docs>
    </Member>
    <Member MemberName="CellTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.CellTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplate" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The identifier for the <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A> dependency property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector CellTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector CellTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> セル、列の表示に使用するテンプレートを指定します。</summary>
        <value>A <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を提供する <see cref="T:System.Windows.DataTemplate" /> 列のセルを選択します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次のプロパティでは、すべてにバインドしとの優先順位の高いものから順に並んでいる列のセルの内容を表示します。  
  
-   <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
<a name="xamlAttributeUsage_CellTemplateSelector"></a>   
## XAML 属性の使用方法  
  
```  
<object CellTemplateSelector="{ResourceExtension DataTemplateSelectorClassKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_CellTemplateSelector"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.CellTemplateSelector>  
    <MyDataTemplateSelectorImplementation .../>  
  </object.CellTemplateSelector>  
</object>  
```  
  
<a name="xamlValues_CellTemplateSelector"></a>   
## XAML 値  
 *MyDataTemplateSelectorImplementation*  
 派生したクラス <xref:System.Windows.Controls.DataTemplateSelector> 実用的を実装する <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> をオーバーライドします。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間および WPF XAML の名前空間のマッピング](http://msdn.microsoft.com/ja-jp/5c0854e3-7470-435d-9fe2-93eec9d3634e)します。  
  
 *ResourceExtension*  
 次のいずれか: `StaticResource`, 、または `DynamicResource`です。 参照してください [XAML リソース](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f)します。  
  
 *DataTemplateSelectorClassKey*  
 要求されたセレクターの実装を識別するキー。 このキーは、実用的なを実装する派生クラス <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> をオーバーライドします。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間および WPF XAML の名前空間のマッピング](http://msdn.microsoft.com/ja-jp/5c0854e3-7470-435d-9fe2-93eec9d3634e)します。 インスタンスを追加することもプログラムを使用して、 <xref:System.Windows.Controls.DataTemplateSelector> クラスをリソースとして、リソース ディクショナリにします。  
  
<a name="dependencyPropertyInfo_CellTemplateSelector"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-xml[ListViewSnips\#GridViewColumnContent](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#gridviewcolumncontent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CellTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CellTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The identifier for the <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A> dependency property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase DisplayMemberBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase DisplayMemberBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこの列のバインド先のデータ項目を設定します。</summary>
        <value>列に表示される指定されたデータ項目の種類。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A> プロパティは、列が、その型の値のセットを表示できるように、データ ソースからデータを列の型に関連付けます。 データ ソース オブジェクトの例として、 <xref:System.Windows.Data.XmlDataProvider> オブジェクトおよび <xref:System.Windows.Data.ObjectDataProvider> オブジェクトです。  
  
 次のプロパティは、コンテンツと列のセルのスタイル定義に使用されるすべてと、優先順位の高いものの順に並んでいます。  
  
-   <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>  
  
-   <xref:System.Windows.Controls.GridViewColumn.CellTemplateSelector%2A>  
  
   
  
## 例  
 <xref:System.Windows.Controls.GridViewColumn.DisplayMemberBinding%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[ListViewCode\#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#gridviewcolumnproperties)]
 [!code-vb[ListViewCode\#GridViewColumnProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#gridviewcolumnproperties)]
 [!code-xml[ListViewCode\#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#gridviewcolumnproperties)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public object Header { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Header" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のヘッダーの内容、 <see cref="T:System.Windows.Controls.GridViewColumn" />です。</summary>
        <value>列ヘッダーに使用するオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GridViewColumn.Header%2A> だけであるオブジェクトにプロパティを設定することができます、 `string`, 、やのように複雑であるオブジェクトを <xref:System.Windows.Controls.StackPanel> コンテンツが埋め込まれています。 既定の列ヘッダー、 <xref:System.Windows.Controls.GridView> 表示モードから派生したボタンのスタイルが <xref:System.Windows.Controls.Primitives.ButtonBase> の内容を持つ、 <xref:System.Windows.Controls.GridViewColumn.Header%2A> プロパティを子として。 列ヘッダーのテンプレートを指定するには、参照してください、 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> または <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> プロパティの説明。  
  
 多くの関連クラス上で検出されたコンテンツ、レイアウト、および列ヘッダーのスタイルを定義するプロパティ、または同一の次のような機能があるこれらのプロパティの一部です。 詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](http://msdn.microsoft.com/ja-jp/74835674-a39e-4ab5-9418-ad7f6ab7b956)します。  
  
<a name="dependencyPropertyInfo_Header"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.GridViewColumn.HeaderProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
<a name="xamlAttributeUsage_Header"></a>   
## XAML 属性の使用方法  
  
```  
<object Header="string"/>  
```  
  
<a name="xamlPropertyElementUsage_Header"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <HeaderContentObject.../>  
</object>  
```  
  
<a name="xamlValues_Header"></a>   
## XAML 値  
 \<*HeaderContentObject*…\/\>  
 単一の要素。 場合、この要素は子要素を持つことができます、 *HeaderContentObject* 含めないことで、コンテンツ モデル。  
  
## 例  
 <xref:System.Windows.Controls.GridViewColumn.Header%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[ListViewCode\#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#gridviewcolumnproperties)]
 [!code-vb[ListViewCode\#GridViewColumnProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#gridviewcolumnproperties)]
 [!code-xml[ListViewCode\#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#gridviewcolumnproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.GridViewColumnHeader" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" />
      </Docs>
    </Member>
    <Member MemberName="HeaderContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style HeaderContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style HeaderContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.GridViewColumn" /> のヘッダーに使用するスタイルを取得または設定します。</summary>
        <value>列ヘッダーの表示プロパティを定義する <see cref="T:System.Windows.Style" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> property and the <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> property can together define property values and the visual tree for column header content. The <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> property can also specify the visual tree by defining a <xref:System.Windows.Controls.ControlTemplate>.  
  
 Properties that define the content, layout, and style of a column header are found in many related classes, and some of these properties have functionality that is similar or the same. For more information, see [GridView Column Header Styles and Templates Overview](http://msdn.microsoft.com/ja-jp/74835674-a39e-4ab5-9418-ad7f6ab7b956).  
  
 When you set a style, some restrictions apply. For more information, see the [Styling and Templating](http://msdn.microsoft.com/ja-jp/481765e5-5467-4a75-9f7b-e10e2ac410d9).  
  
<a name="xamlAttributeUsage_HeaderContainerStyle"></a>   
## XAML Attribute Usage  
  
```  
<object HeaderContainerStyle="{ResourceExtension StyleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderContainerStyle"></a>   
## XAML Property Element Usage  
  
<a name="xamlValues_HeaderContainerStyle"></a>   
## XAML Values  
 *ResourceExtension*  
 One of the following: `StaticResource`, or `DynamicResource`. See [XAML Resources](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f).  
  
 *StyleResourceKey*  
 The key that identifies the style being requested. The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.  
  
> [!NOTE]
>  Property element syntax is technically possible, but not recommended. See [Inline Styles and Templates](http://msdn.microsoft.com/ja-jp/69a1a3f9-acb5-4e2c-9c43-2e376c055ac4). A binding reference using  or  is also possible, but uncommon.  
  
<a name="dependencyPropertyInfo_HeaderContainerStyle"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|None|  
  
   
  
## 例  
 The following example shows how to define a <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> that specifies display properties for a column header.  
  
 [!code-xml[ListViewTemplate\#GridViewHeaderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewheaderstyle)]  
  
 [!code-xml[ListViewTemplate\#GridViewColumnTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumntemplate)]  
  
 The following example shows how to define a <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> that defines display properties by using a <xref:System.Windows.Controls.ControlTemplate>.  
  
 [!code-xml[ListViewTemplate\#GridViewColumnHCTwithControlTemplatePart1](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumnhctwithcontroltemplatepart1)]  
  
 [!code-xml[ListViewTemplate\#GridViewColumnHCTwithControlTemplatePart2](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumnhctwithcontroltemplatepart2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" />
        <altmember cref="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderContainerStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderContainerStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderContainerStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The identifier for the <xref:System.Windows.Controls.GridViewColumn.Header%2A> dependency property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormat">
      <MemberSignature Language="C#" Value="public string HeaderStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の書式を設定する方法を指定する複合文字列、 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> プロパティを文字列として表示されている場合。</summary>
        <value>書式を設定する方法を指定する複合文字列、 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> プロパティを文字列として表示されている場合。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A?displayProperty=fullName>, 、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A?displayProperty=fullName>, 、または <xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate%2A?displayProperty=fullName> プロパティが設定されて、このプロパティは無視されます。  
  
 いくつかのプロパティを使用すると、列ヘッダーの形式を指定します。  1 つ以上のプロパティが設定されている場合、列ヘッダーには最高の優先順位を持つプロパティの値が設定されます。 列の形式は、いくつかの種類を設定できます。 次に、低いものから最も高い優先度順に整列されて、列ヘッダーを書式設定に使用できるプロパティを示します。  
  
-   <xref:System.Windows.Controls.GridView.ColumnHeaderStringFormat%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderStringFormat%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Controls.GridViewColumn.HeaderStringFormat%2A?displayProperty=fullName>  
  
<a name="dependencyPropertyInfo_HeaderStringFormat"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty>|  
|メタデータのプロパティを設定 **true**|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStringFormatProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderStringFormatProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderStringFormatProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderStringFormatProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列ヘッダーの内容の表示に使用するテンプレートを取得または設定します。</summary>
        <value>列ヘッダーの表示に使用する <see cref="T:System.Windows.DataTemplate" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 両方の<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A>プロパティおよび<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>プロパティが設定されている、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>プロパティが優先されます。  
  
 後に、<xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A>または<xref:System.Windows.Controls.GridView.ColumnHeaderTemplate%2A>が指定されて、 <xref:System.Windows.Controls.GridViewColumn>、変更することはできません。  
  
 指定して、列ヘッダーの表示を定義することも、<xref:System.Windows.Controls.ControlTemplate>の一部として、<xref:System.Windows.Controls.GridViewColumn.HeaderContainerStyle%2A?displayProperty=fullName>です。  
  
 多くの関連クラスの内容、レイアウト、および列ヘッダーのスタイルを定義するプロパティが検出され、または同一の次のような機能があるこれらのプロパティの一部です。 詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](http://msdn.microsoft.com/ja-jp/74835674-a39e-4ab5-9418-ad7f6ab7b956)です。  
  
<a name="xamlAttributeUsage_HeaderTemplate"></a>   
## XAML 属性の使用方法  
  
```  
<object HeaderTemplate="{ResourceExtension TemplateResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplate"></a>   
## XAML プロパティ要素の使用  
  
<a name="xamlValues_HeaderTemplate"></a>   
## XAML 値  
 *ResourceExtension*  
 次のいずれかの: `StaticResource`、または`DynamicResource`です。 参照してください[XAML リソース](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f)です。  
  
 *TemplateResourceKey*  
 要求されているテンプレートを識別するキー。 このキーは既存のリソースを<xref:System.Windows.ResourceDictionary>です。  
  
> [!NOTE]
>  プロパティ要素構文は、技術的に可能ですが、推奨されません。 参照してください[インライン スタイルとテンプレート](http://msdn.microsoft.com/ja-jp/69a1a3f9-acb5-4e2c-9c43-2e376c055ac4)です。 バインディングを使用して参照かも可能ですが、一般的でないです。  
  
<a name="dependencyPropertyInfo_HeaderTemplate"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty>|  
|メタデータ プロパティに設定します。`true`|なし|  
  
   
  
## 例  
 次の例のヘッダーの表示に使用するテンプレートを指定する方法を示しています、<xref:System.Windows.Controls.GridViewColumn>です。  
  
 [!code-xml[ListViewTemplate\#GridViewHeaderTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewheadertemplate)]  
  
 [!code-xml[ListViewTemplate\#GridViewColumnTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewTemplate/CS/window1.xaml#gridviewcolumntemplate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" />
        <altmember cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplate" />
        <altmember cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector HeaderTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Controls.DataTemplateSelector" /> を使用して、列ヘッダーを表示するテンプレートを選択するためのロジックを提供します。</summary>
        <value>
          <see cref="T:System.Windows.Controls.DataTemplateSelector" /> をそれぞれのデータ テンプレートの選択を提供するオブジェクト <see cref="T:System.Windows.Controls.GridViewColumn" />します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どちらの場合、 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> プロパティおよび <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> プロパティを設定すると、 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplate%2A> プロパティが優先されます。  
  
 多くの関連クラス上で検出されたコンテンツ、レイアウト、および列ヘッダーのスタイルを定義するプロパティ、または同一の次のような機能があるこれらのプロパティの一部です。 詳細については、次を参照してください。 [GridView 列ヘッダーのスタイルとテンプレートの概要](http://msdn.microsoft.com/ja-jp/74835674-a39e-4ab5-9418-ad7f6ab7b956)します。  
  
<a name="xamlAttributeUsage_HeaderTemplateSelector"></a>   
## XAML 属性の使用方法  
  
```  
<object HeaderTemplateSelector="{ResourceExtension DataTemplateSelectorClassKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_HeaderTemplateSelector"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.HeaderTemplateSelector>  
    <MyDataTemplateSelectorImplementation .../>  
  </object.HeaderTemplateSelector>  
</object>  
```  
  
<a name="xamlValues_HeaderTemplateSelector"></a>   
## XAML 値  
 *ResourceExtension*  
 次のいずれか: `StaticResource`, 、または `DynamicResource`です。 参照してください [XAML リソース](http://msdn.microsoft.com/ja-jp/91580b89-a0a8-4889-aecb-fddf8e63175f)します。  
  
 *DataTemplateSelectorClassKey*  
 要求されたセレクターの実装を識別するキー。 このキーは、実用的なを実装する派生クラス <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> をオーバーライドします。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間および WPF XAML の名前空間のマッピング](http://msdn.microsoft.com/ja-jp/5c0854e3-7470-435d-9fe2-93eec9d3634e)します。 インスタンスを追加することもプログラムを使用して、 <xref:System.Windows.Controls.DataTemplateSelector> クラスをリソースとして、リソース ディクショナリにします。  
  
 *MyDataTemplateSelectorImplementation*  
 派生したクラス <xref:System.Windows.Controls.DataTemplateSelector> 実用的を実装する <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> をオーバーライドします。 カスタム クラスをマップする方法については、次を参照してください。 [XAML 名前空間および WPF XAML の名前空間のマッピング](http://msdn.microsoft.com/ja-jp/5c0854e3-7470-435d-9fe2-93eec9d3634e)します。  
  
<a name="dependencyPropertyInfo_HeaderTemplateSelector"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplateSelectorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeaderTemplateSelectorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeaderTemplateSelectorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHeaderStringFormatChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnHeaderStringFormatChanged (string oldHeaderStringFormat, string newHeaderStringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHeaderStringFormatChanged(string oldHeaderStringFormat, string newHeaderStringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.OnHeaderStringFormatChanged(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldHeaderStringFormat" Type="System.String" />
        <Parameter Name="newHeaderStringFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldHeaderStringFormat">
          <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> プロパティの変更前の値。</param>
        <param name="newHeaderStringFormat">
          <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> プロパティの新しい値。</param>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.HeaderStringFormat" /> プロパティが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.GridViewColumn.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.GridViewColumn.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>文字列表現を作成、 <see cref="T:System.Windows.Controls.GridViewColumn" />です。</summary>
        <returns>としてオブジェクトを識別する文字列、 <see cref="T:System.Windows.Controls.GridViewColumn" /> オブジェクトし、の値を表示、 <see cref="P:System.Windows.Controls.GridViewColumn.Header" /> プロパティです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.GridViewColumn.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列の幅を取得または設定します。</summary>
        <value>列の幅。 既定値は <see cref="F:System.Double.NaN" />, 、自動的に列の最大サイズ項目は、列ヘッダーではありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが設定されている場合は、実際の幅を取得する <xref:System.Double.NaN?displayProperty=fullName>, を使用して、 <xref:System.Windows.Controls.GridViewColumn.ActualWidth%2A> プロパティです。  
  
<a name="xamlAttributeUsage_Width"></a>   
## XAML 属性の使用方法  
  
```  
<object Width="double"/>  
- or –  
<object Width="qualifiedDouble"/>  
- or -  
<object Width="Auto"/>  
```  
  
<a name="xamlValues_Width"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値。 これは、 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 測定します。 文字列が必要な小数点を明示的に含まれません。 値のインスタンス `1` は許容されます。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に 1 つの単位の次の宣言文字列: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 `Auto`  
 自動サイズ変更を有効にします。 「解説」を参照してください。  
  
<a name="dependencyPropertyInfo_Width"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.GridViewColumn.WidthProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 <xref:System.Windows.Controls.GridViewColumn.Width%2A> プロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[ListViewCode\#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#gridviewcolumnproperties)]
 [!code-vb[ListViewCode\#GridViewColumnProperties](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#gridviewcolumnproperties)]
 [!code-xml[ListViewCode\#GridViewColumnProperties](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#gridviewcolumnproperties)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.GridViewColumn.ActualWidth" />
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.GridViewColumn.WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.GridViewColumn.Width" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.GridViewColumn.Width%2A> 依存関係プロパティの識別子。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>