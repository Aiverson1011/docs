<Type Name="InkCanvas" FullName="System.Windows.Controls.InkCanvas">
  <TypeSignature Language="C#" Value="public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi InkCanvas extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkCanvas" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>受信して、インク ストロークを表示する領域を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> 受信してインク入力を表示するために使用する要素です。 スタイラスまたはマウスを使用してインク ストロークを作成するデジタイザーと通信するスタイラスを使用してこれが一般的です。 生成されたストロークとして表される <xref:System.Windows.Ink.Stroke> オブジェクトの場合、可能でありプログラムでいずれかの操作や、ユーザー入力に基づいています。<xref:System.Windows.Controls.InkCanvas> により、ユーザーを変更または削除、既存 <xref:System.Windows.Ink.Stroke>します。  
  
 <xref:System.Windows.Controls.InkCanvas> データ ソースにバインドすることができます。 たとえば、バインド、 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> プロパティを: インクをインクがシリアル化データ \(ISF\) の書式を設定します。 または、もを表す base 64 でエンコードされた文字列、 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 他人の財産 <xref:System.Windows.Controls.InkCanvas>します。 などのプロパティをバインドすることもできます。 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> と <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, 、他のデータ ソースにします。  
  
   
  
## 例  
 次の例では、ペンと蛍光ペン、同一の両方の使用をシミュレート <xref:System.Windows.Controls.InkCanvas>します。 例では、マークアップ言語 \(XAML\) ファイルのルート要素は、 <xref:System.Windows.Controls.DockPanel> と呼ばれる `root`です。 前提としていますが、 <xref:System.Windows.Controls.Button> と呼ばれる `switchHighlighter` を両方、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> と <xref:System.Windows.FrameworkElement.Loaded> イベントは、例のイベント ハンドラーに接続しています。  
  
 [!code-csharp[DrawingAttributes\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes\#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 次の例で 2 つ <xref:System.Windows.Controls.InkCanvas> XAML 内のオブジェクトし、他のデータ ソース間のデータ バインドを確立します。 最初の <xref:System.Windows.Controls.InkCanvas>, という `ic`, 、2 つのデータ ソースにバインドします。<xref:System.Windows.Controls.InkCanvas.EditingMode%2A> と <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> プロパティを `ic` にバインドされた <xref:System.Windows.Controls.ListBox> 、さらに、XAML で定義されている配列にバインドするオブジェクト。<xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, 、<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, と <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 、2 番目のプロパティ <xref:System.Windows.Controls.InkCanvas> バインドは、最初に <xref:System.Windows.Controls.InkCanvas> 次のコードにします。  
  
 [!code-xml[InkCanvasBinding\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBinding/CS/Window1.xaml#1)]
 [!code-xml[InkCanvasBinding\#1](~/samples/snippets/xaml/VS_Snippets_Wpf/InkCanvasBinding/XAML/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>InkCanvas クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の編集モードを取得、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>現在の編集モード、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> プロパティは現在、示します <xref:System.Windows.Controls.InkCanvasEditingMode> の <xref:System.Windows.Controls.InkCanvas>です。  たとえば次に示す、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> に設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> と <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> に設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>します。  反転されたコピーの位置にタブレット ペンを使用すると <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> の値を持つ <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>です。 それ以外の場合、その値は <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>です。  
  
<a name="dependencyPropertyInfo_ActiveEditingMode"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、レポートの値 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> するたびに変更します。  
  
 [!code-csharp[InkCanvasSamples\#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples\#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler ActiveEditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の編集モードが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> プロパティが変更されるたびに、 <xref:System.Windows.Controls.InkCanvas> 新しい編集モードに入ります。 たとえば、たとえば次に示す、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> に設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> と <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> に設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>します。 タブレット ペンの先端が変更されると、 <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> イベントが発生します。  
  
<a name="routedEventInfo_ActiveEditingModeChanged"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## 例  
 次の例では、レポートの値 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> するたびに変更します。  
  
 [!code-csharp[InkCanvasSamples\#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples\#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ActiveEditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActiveEditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">この要素が要素自体と子を配置するために使用する親の末尾の領域。</param>
        <summary>子要素を配置し、<see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトのサイズを決定します。</summary>
        <returns>使用する実際のサイズ。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Media.Brush" />です。 周囲の境界線領域の塗りつぶしにブラシを使用する <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>A <see cref="T:System.Windows.Media.Brush" /> 周囲の境界線領域の塗りつぶしに使用する <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_Background"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A>|  
  
   
  
## 例  
 次の例では、設定、 <xref:System.Windows.Controls.InkCanvas.Background%2A> プロパティを <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#37](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#37)]
 [!code-vb[InkCanvasSamples\#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BottomProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BottomProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 添付プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CanPaste" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クリップボードの内容を貼り付けることがあるかどうかを示す、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <returns>
          <see langword="true" /> でクリップボードの内容を貼り付けることができる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> でクリップボードのデータをサポートできる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], 、およびテキスト形式です。  
  
   
  
## 例  
 次の例は、要素をクリップボードにコピーし、それに貼り付けます、 <xref:System.Windows.Controls.InkCanvas>です。 この例では、という名前の要素が `rect1`, 、および、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> の例では、イベント ハンドラーにイベントが接続されました。  
  
 [!code-csharp[InkCanvasSamples\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子要素を取得、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>上にある子要素のコレクション、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlPropertyElementUsage_Children"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  OneOrMoreUIElements  
</object>  
```  
  
<a name="xamlValues_Children"></a>   
## XAML 値  
 *OneOrMoreUIElements*  
 1 つまたは複数 <xref:System.Windows.UIElement> オブジェクトです。  
  
   
  
## 例  
 次の例では追加、 <xref:System.Windows.Controls.TextBlock> に、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#8](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[InkCanvasSamples\#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySelection">
      <MemberSignature Language="C#" Value="public void CopySelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CopySelection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択されたストロークや要素をクリップボードにコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> でクリップボードのデータをサポートできる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], 、およびテキスト形式です。 ストロークをクリップボードには、どちらも [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]です。  
  
   
  
## 例  
 次の例では、2 つの要素を選択で、 <xref:System.Windows.Controls.InkCanvas> し、それらをクリップボードにコピーします。 この例では、 <xref:System.Windows.Controls.TextBox> と呼ばれる `textbox1` と <xref:System.Windows.Controls.Button> と呼ばれる `button1 -` およびの子要素は、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkCanvasSamples\#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="CutSelection">
      <MemberSignature Language="C#" Value="public void CutSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CutSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CutSelection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択されたストロークと要素を削除し、それらをクリップボードにコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> でクリップボードのデータをサポートできる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], 、およびテキスト形式です。 ストロークをクリップボードには、どちらも [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]です。  
  
   
  
## 例  
 次の例を選択し、上の 2 つの要素を切り取り、 <xref:System.Windows.Controls.InkCanvas>です。 この例では、 <xref:System.Windows.Controls.TextBox> と呼ばれる `textbox1` と <xref:System.Windows.Controls.Button> と呼ばれる `button1` \-、および両方のコントロールの子要素、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[InkCanvasSamples\#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に加えられた新しいインク ストロークに適用される描画属性、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>既定値の描画属性、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、このプロパティを設定した後に作成された新しいストロークのみが影響されます。 既に作成した新しい描画属性を適用する <xref:System.Windows.Ink.Stroke> オブジェクトにアクセスして個別を使用して、 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> プロパティです。  
  
<a name="dependencyPropertyInfo_DefaultDrawingAttributes"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、2 つ使用 <xref:System.Windows.Ink.DrawingAttributes> オブジェクト、ペンと蛍光ペンを使用して、同一の操作をシミュレートする <xref:System.Windows.Controls.InkCanvas>です。 例では、マークアップ言語 \(XAML\) ファイルのルート要素は、 <xref:System.Windows.Controls.DockPanel> と呼ばれる `root`です。 前提としていますが、 <xref:System.Windows.Controls.Button> と呼ばれる `switchHilighter` ことと、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> イベントがイベント ハンドラーに関連付けられています。  
  
 [!code-csharp[DrawingAttributes\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes\#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 次の例では、バインド、 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> プロパティをデータ ソース。  
  
 [!code-xml[InkCanvasBinding#3](~/samples/snippets/xaml/VS_Snippets_Wpf/InkCanvasBinding/XAML/Window2.xaml#3)]
 [!code-xml[InkCanvasBinding#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBinding/CS/Window2.xaml#3)]  
[!code-xml[InkCanvasBinding#4](~/samples/snippets/xaml/VS_Snippets_Wpf/InkCanvasBinding/XAML/Window2.xaml#4)]
[!code-xml[InkCanvasBinding#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBinding/CS/Window2.xaml#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.Strokes" />
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultDrawingAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> プロパティが置き換えられます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の値の確認、 <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> プロパティの新しい <xref:System.Windows.Ink.DrawingAttributes> オブジェクトです。  
  
 [!code-csharp[DrawingAttributes\#17](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#17)]
 [!code-vb[DrawingAttributes\#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStylusPointDescription">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription DefaultStylusPointDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のスタイラス ポイントの説明、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>スタイラス ポイントの説明、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Windows.Controls.InkCanvas> のみを格納、 <xref:System.Windows.Input.StylusPointProperties.X>, 、<xref:System.Windows.Input.StylusPointProperties.Y>, 、および <xref:System.Windows.Input.StylusPointProperties.NormalPressure> プロパティ <xref:System.Windows.Input.StylusPoint> ストロークに属しています。 DefaultStylusPointDescription プロパティを使用するには、ストロークを構成するポイントに関する追加情報を格納する、 <xref:System.Windows.Controls.InkCanvas>です。 このプロパティを設定すると、プロパティを設定した後に作成された新しいストロークのみが影響されます。  
  
<a name="xamlTextUsage_DefaultStylusPointDescription"></a>   
## XAML テキストの使用方法  
 このプロパティを使用することはできません [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。  
  
   
  
## 例  
 設定を次に例を <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> ように上のストロークのスタイラス ポイント、 <xref:System.Windows.Controls.InkCanvas> を含む、 <xref:System.Windows.Input.StylusPointProperties.X>, 、<xref:System.Windows.Input.StylusPointProperties.Y>, 、<xref:System.Windows.Input.StylusPointProperties.NormalPressure>, と <xref:System.Windows.Input.StylusPointProperties.TipButton> プロパティです。  
  
> [!NOTE]
>  追加される線のみ、 <xref:System.Windows.Controls.InkCanvas> 後、 <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> は追加のプロパティに設定します。  
  
 [!code-csharp[InkCanvasSamples\#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[InkCanvasSamples\#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPointProperties" />
        <altmember cref="T:System.Windows.Input.StylusPointProperty" />
        <altmember cref="T:System.Windows.Input.StylusPointPropertyInfo" />
      </Docs>
    </Member>
    <Member MemberName="DynamicRenderer">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.DynamicRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定レンダラーを動的にインクを描画、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>レンダラーを動的に描画上のインク、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定することができます、 <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> プロパティをカスタム <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> インクをカスタマイズする場合。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> のメンバーである、 <xref:System.Windows.UIElement.StylusPlugIns%2A> コレクションです。 設定すると、 <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, 、 <xref:System.Windows.Controls.InkCanvas> 古いを削除 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> から、 <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> し、新しい追加 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> コレクションの末尾にします。 これの動作を変更することがあります、 <xref:System.Windows.Controls.InkCanvas>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアクティブなポインティング デバイスで使用されるモードを編集しているユーザーを設定します。</summary>
        <value>編集モード \(マウスやタブレット ペン\) などのポインティング デバイスがアクティブな場合に使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> は <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> です。 変更する、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 既存の選択を解除します。  
  
 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> とやり取りするように、ポインティング デバイスのモードを指定、 <xref:System.Windows.Controls.InkCanvas>です。<xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> スタイラスの"消しゴム end"がデジタイザーを接続すると、いくつかのデジタイザーによって使用されます。  
  
<a name="dependencyPropertyInfo_EditingMode"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例は、さまざまな種類の上の編集モードを使用するアプリケーションを作成、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[ICEditingModeSample\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ICEditingModeSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[ICEditingModeSample\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ICEditingModeSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      </Docs>
    </Member>
    <Member MemberName="EditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> のプロパティ、 <see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 編集モードが変更されると、このイベントが発生します。変更が反映されます、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> のプロパティ、 <xref:System.Windows.Controls.InkCanvas>です。  
  
<a name="routedEventInfo_EditingModeChanged"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## 例  
 次の例を確認するかどうか、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> プロパティに設定されて <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> または <xref:System.Windows.Controls.InkCanvasEditingMode.Select>。  
  
 [!code-csharp[InkCanvasSamples\#21](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[InkCanvasSamples\#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInverted">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingModeInverted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の編集モードの場合、スタイラスを反転して対話するユーザー、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>反転の編集モード、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、スタイラスが反転するときに実行されるアクションを制御します。  
  
 同様に、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> プロパティは、スタイラスが、デジタイザーに対して、標準的なヒントの位置にあるときに実行されるアクションを制御します。  
  
<a name="dependencyPropertyInfo_EditingModeInverted"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、ユーザーがスタイラスの反対側の先端のストロークを部分的に消去できるようにする方法を示します。 楕円形のカーソルが表示されます、 <xref:System.Windows.Controls.InkCanvas> 、ユーザーがインクを消去します。  
  
 [!code-csharp[InkCanvasSamples\#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples\#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeInvertedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> のプロパティ、 <see cref="T:System.Windows.Controls.InkCanvas" /> オブジェクトが変更されました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、反転されたコピーの編集モードを変更した後に発生します。 これらの変更が反映されて、 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> のプロパティ、 <xref:System.Windows.Controls.InkCanvas>です。  
  
<a name="routedEventInfo_EditingModeInvertedChanged"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## 例  
 次の例を確認するかどうか、 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> にプロパティが設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> または <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>です。  
  
 [!code-csharp[InkCanvasSamples\#20](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[InkCanvasSamples\#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeInvertedChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeInvertedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EraserShape">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusShape EraserShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StylusShape EraserShape" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Ink.StylusShape" /> ポイントからのインクを消去するために使用する <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>消しゴムの形に関連付けられている、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この図形からインクを消去に使用される、 <xref:System.Windows.Controls.InkCanvas> ときに、現在 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> に設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>します。  
  
 個々 のプロパティ、 <xref:System.Windows.Ink.StylusShape> 図形が作成された後は変更できません。  
  
 変更する場合、 <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, に表示されるカーソル、 <xref:System.Windows.Controls.InkCanvas> までは更新されません <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> を変更します。  
  
<a name="xamlTextUsage_EraserShape"></a>   
## XAML テキストの使用方法  
 このプロパティは、通常では使用されない [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]します。  
  
   
  
## 例  
 次の例では、ユーザーがスタイラスの反対側の先端のストロークを部分的に消去できるようにする方法を示します。 楕円形のカーソルが表示されます、 <xref:System.Windows.Controls.InkCanvas> 、ユーザーがインクを消去します。  
  
 [!code-csharp[InkCanvasSamples\#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples\#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StylusShape" />
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasGestureEventHandler Gesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.Gesture" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Windows.Controls.InkCanvas" /> ジェスチャを検出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="routedEventInfo_Gesture"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|  
  
   
  
## 例  
 次の例を設定する方法、 <xref:System.Windows.Controls.InkCanvas> アプリケーション ジェスチャを認識します。  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBottom">
      <MemberSignature Language="C#" Value="public static double GetBottom (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetBottom(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">下部にあるプロパティを取得する対象の要素です。</param>
        <summary>値を取得、 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <returns>依存関係オブジェクトの下端の座標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を取得する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#34](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#34)]
 [!code-vb[InkCanvasSamples\#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetEnabledGestures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>によって認識されているアプリケーション ジェスチャのコレクションを返す <see cref="T:System.Windows.Controls.InkCanvas" />します。</summary>
        <returns>一連のジェスチャを <see cref="T:System.Windows.Controls.InkCanvas" /> を認識します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例から有効になっているアプリケーション ジェスチャを取得する方法、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#24](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#24)]
 [!code-vb[InkCanvasSamples\#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> プロパティが <see langword="false" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeft">
      <MemberSignature Language="C#" Value="public static double GetLeft (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLeft(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">左のプロパティを取得する対象の要素です。</param>
        <summary>値を取得、 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <returns>依存関係オブジェクトの左端の座標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を取得する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#31](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#31)]
 [!code-vb[InkCanvasSamples\#31](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRight">
      <MemberSignature Language="C#" Value="public static double GetRight (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetRight(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">右側のプロパティを取得する対象の要素です。</param>
        <summary>値を取得、 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <returns>依存関係オブジェクトの右の座標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を取得する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#32](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#32)]
 [!code-vb[InkCanvasSamples\#32](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedElements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt; GetSelectedElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.UIElement&gt; GetSelectedElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.FrameworkElement" /> で選択されているオブジェクト、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <returns>配列 <see cref="T:System.Windows.FrameworkElement" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻るだけ <xref:System.Windows.FrameworkElement> オブジェクトいない <xref:System.Windows.Ink.Stroke> オブジェクトです。  
  
 取得するには、選択 <xref:System.Windows.Ink.Stroke> オブジェクトを呼び出す、 <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> メソッドです。  
  
 場合、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> の <xref:System.Windows.Controls.InkCanvas> に設定されている <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, 、ユーザーが選択できる <xref:System.Windows.Ink.Stroke> オブジェクトおよび <xref:System.Windows.FrameworkElement> オブジェクトです。 コードを使用してオブジェクトの両方の種類を選択できる別の方法として、: だけを呼び出す、 <xref:System.Windows.Controls.InkCanvas.Select%2A> メソッドです。  
  
   
  
## 例  
 次の例の高さと選択した各要素の幅を倍に、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#12](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[InkCanvasSamples\#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedStrokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetSelectedStrokes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Ink.StrokeCollection" /> 選択を表す <see cref="T:System.Windows.Ink.Stroke" /> でオブジェクトを <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <returns>選択したストロークのコレクションです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る <xref:System.Windows.Ink.Stroke> オブジェクトのみです。 取得するには、選択 <xref:System.Windows.FrameworkElement> オブジェクトを呼び出す、 <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> メソッドです。  
  
 場合、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> の <xref:System.Windows.Controls.InkCanvas> に設定されている <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, 、ユーザーが選択できる <xref:System.Windows.Ink.Stroke> オブジェクトおよび <xref:System.Windows.FrameworkElement> オブジェクトです。 コードを使用してオブジェクトの両方の種類を選択できる別の方法として、: だけを呼び出す、 <xref:System.Windows.Controls.InkCanvas.Select%2A> メソッドです。  
  
   
  
## 例  
 次の例では、選択した線の色を変更で、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[InkCanvasSamples\#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetSelectionBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetSelectionBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectionBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>選択されたストロークと要素の境界を取得、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <returns>選択したすべてのストロークと要素を含む最小の四角形。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、ユーザーが選択範囲を元のサイズよりも小さいなことを防止できます。  
  
 [!code-csharp[InkCanvasSamples\#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples\#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTop">
      <MemberSignature Language="C#" Value="public static double GetTop (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetTop(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element">Top のプロパティを取得する対象の要素です。</param>
        <summary>値を取得、 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <returns>依存関係オブジェクトの上端の座標。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を取得する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#33](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#33)]
 [!code-vb[InkCanvasSamples\#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">コレクション内の要求された子要素の 0 から始まるインデックス。</param>
        <summary>
          <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> をオーバーライドし、子要素のコレクションから指定したインデックス位置の子を返します。</summary>
        <returns>要求された子要素。 これは <see langword="null" /> を返しません。指定されたインデックスが範囲外の場合、例外がスローされます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParams" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParams">指定するオブジェクト、 <see cref="T:System.Windows.Point" /> ヒット テストの対象にします。</param>
        <summary>レンダリングの境界内で、指定された点があるかどうかを決定する <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <returns>表すオブジェクト、 <see cref="T:System.Windows.Media.Visual" /> 、ヒット テストから返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionHitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">ヒット テストをポイントします。</param>
        <summary>選択範囲の装飾のどの部分と交差するか、指定したポイントを囲むを示す値を返します。</summary>
        <returns>選択装飾のどの部分と交差するか、指定したポイントを囲むを示す値です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> 、ポイントが選択されたストロークの境界内、または 8 つのハンドルのいずれかにするかどうかを調べます。  これは、機能は、ドラッグ アンド ドロップ操作を実行するときに便利です。  
  
   
  
## 例  
 次の例で使用方法 <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> を作成するかどうかを判断する、 <xref:System.Windows.DataObject> 開始ドラッグ アンド ドロップします。  ドラッグを実装して、2 つの間にドロップする <xref:System.Windows.Controls.InkCanvas> オブジェクトを参照してください [方法: ドラッグ アンド ドロップのインク](http://msdn.microsoft.com/ja-jp/932dc410-2bf3-4486-ab31-13487ba59f60)します。  
  
 [!code-csharp[InkDragDrop\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkDragDrop/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkDragDrop\#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkDragDrop/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkPresenter">
      <MemberSignature Language="C#" Value="protected System.Windows.Controls.InkPresenter InkPresenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.InkPresenter InkPresenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkPresenter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インクを表示するインク発表者の取得、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>インクを表示するインク プレゼンター、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGestureRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsGestureRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGestureRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 \(決定\) ジェスチャ認識コンポーネントが、ユーザーのシステムで使用できるかどうか。</summary>
        <value>
          <see langword="true" /> 認識コンポーネントがある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、構成、 <xref:System.Windows.Controls.InkCanvas> アプリケーション ジェスチャを認識します。  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 添付プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>論理上の子を列挙子を返します。</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">この要素が子要素に提供できる使用可能なサイズ。 あらゆるコンテンツに要素がサイズを合わせることを示す値として、無限大を指定できます。</param>
        <summary>子要素に必要なレイアウトのサイズを測定し、<see cref="System.Windows.Controls.InkCanvas" /> オブジェクトのサイズを決定します。</summary>
        <returns>子要素のサイズの計算に基づいて、この要素が判断したレイアウト時に必要なサイズ。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MoveEnabled">
      <MemberSignature Language="C#" Value="public bool MoveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の選択したインク ストロークや要素を移動する、ユーザーが有効になっているかどうかを示すブール値、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>
          <see langword="true" /> ユーザー ストロークや要素に移動できる場合、 <see cref="T:System.Windows.Controls.InkCanvas" />。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティ設定されている場合 `true`, 、選択時に、インク ストロークや要素の周囲に装飾境界線を描画します。 この枠線を使用して、選択したオブジェクトを移動できます。 場合 <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> は `true`, 、装飾には、ストロークや同様の要素のサイズを変更するユーザーができるようにします。  
  
 このプロパティ設定されている場合 `false` 選択したオブジェクトから装飾境界線を自動的に削除するインク ストロークや要素の 1 つまたは複数を選択すると、中にします。  
  
   
  
## 例  
 次の例は、ユーザーが移動して、要素のサイズを変更できなくなり、上線、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples\#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>適切な提供 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> の一部としてこのコントロールの実装、 WPF インフラストラクチャです。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 編集モードが変更されると、このイベントが発生します。変更が反映されます、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> のプロパティ、 <xref:System.Windows.Controls.InkCanvas>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeInvertedChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 反転編集モードが変更されると、このイベントが発生します。変更に反映された、 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> のプロパティ、 <xref:System.Windows.Controls.InkCanvas>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGesture(class System.Windows.Controls.InkCanvasGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">変更されたプロパティと、新旧の値を記述するイベント データ。</param>
        <summary>この <see cref="T:System.Windows.FrameworkElement" /> に指定されたいずれかの依存関係プロパティの有効な値が更新されるたびに呼び出されます。 変更が発生した特定の依存関係プロパティが引数パラメーターで報告されます。<see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> をオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、インク ストロークや要素のセットがユーザーによって選択された、選択の変更が適用された後に呼び出されます。 変更が適用される前に、 <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> メソッドが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanging(class System.Windows.Controls.InkCanvasSelectionChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーが、変更が適用される前に、新しいストロークや要素の選択が行われたときに、このメソッドが呼び出されます。 変更が適用された後、 <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> メソッドが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoved (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoved(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">使用しません。</param>
        <summary>ユーザーが選択され、ストロークや要素の移動されたことを通知するイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、ユーザーがストロークや要素の選択が移動されて、変更が適用された後に呼び出されます。 変更が適用される前に、 <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> メソッドが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoving(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、変更が適用される前に、ユーザーがストロークや要素の選択が移動することを要求した後に呼び出されます。 変更を適用した後、 <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> メソッドが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResized">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、ユーザーがサイズを変更したストロークや要素の選択、変更が適用された後に呼び出されます。 変更が適用される前に、 <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> メソッドが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResizing(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーがストロークや要素の選択範囲のサイズ変更を要求したら、変更が適用される前に、このメソッドが呼び出されます。 変更を適用した後、 <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> メソッドが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStrokeCollected">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeCollected(class System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> ユーザーに物理的が完了すると、ストロークなど動かした後タブレットからスタイラスを発生させてと呼びます。  
  
 ストロークのプログラムによる追加、 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> コレクションは呼び出しません、 <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErased">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErased(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErasing">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErasing(class System.Windows.Controls.InkCanvasStrokeErasingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeErasingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesReplaced(class System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Paste">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>クリップボードの内容を貼り付けます、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> でクリップボードのデータをサポートできる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], 、およびテキスト形式です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>左上隅にクリップボードの内容を貼り付けます、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> でクリップボードのデータをサポートできる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], 、およびテキスト形式です。  
  
   
  
## 例  
 次の例は、要素をクリップボードにコピーし、それに貼り付けます、 <xref:System.Windows.Controls.InkCanvas>です。 この例では、という名前の要素が `rect1`, 、および、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> の例では、イベント ハンドラーにイベントが接続されました。  
  
 [!code-csharp[InkCanvasSamples\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">for pasting content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">ストロークを貼り付ける位置。</param>
        <summary>クリップボードの内容を貼り付けます、 <see cref="T:System.Windows.Controls.InkCanvas" /> 特定の時点です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> でクリップボードのデータをサポートできる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], 、およびテキスト形式です。  
  
   
  
## 例  
 次の例は、要素をクリップボードにコピーし、それに貼り付けます、 <xref:System.Windows.Controls.InkCanvas>です。 この例では、という名前の要素が `rect1`, 、および、 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> の例では、イベント ハンドラーにイベントが接続されています。  
  
 [!code-csharp[InkCanvasSamples\#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples\#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />. Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="PreferredPasteFormats">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に貼り付けることができる形式、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>列挙値のコレクション。 既定値は、<see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlPropertyElementUsage_PreferredPasteFormats"></a>   
## XAML プロパティ要素の使用  
  
```  
<object>  
  <object.PreferredPasteFormats>  
    InkCanvasClipboardFormats  
  </object.PreferredPasteFormats>  
</object>  
```  
  
<a name="xamlValues_PreferredPasteFormats"></a>   
## XAML 値  
 *InkCanvasClipboardFormats*  
 配列 <xref:System.Windows.Controls.InkCanvasClipboardFormat> 列挙値。 XAML で配列を指定する必要があります `x:Array` 使用します。 配列メンバーを宣言する要素として列挙値を指定する必要があります `x:Static` 使用します。 詳細については、[x:Array Markup Extension](http://msdn.microsoft.com/ja-jp/c5358e14-d24c-44c7-b5eb-6062a4fd981c) および [x:Static Markup Extension](http://msdn.microsoft.com/ja-jp/056aee79-7cdd-434f-8174-dfc856cad343) を参照してください。  
  
   
  
## 例  
 次の例のセット、 <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> させる、 <xref:System.Windows.Controls.InkCanvas> を受け入れる [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 形式、 [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]です。  
  
 [!code-csharp[InkCanvasSamples\#26](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#26)]
 [!code-vb[InkCanvasSamples\#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#26)]  
  
 次の例では、同じことを [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]します。  
  
 [!code-xml[InkCanvasSamples\#38](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window2.xaml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeEnabled">
      <MemberSignature Language="C#" Value="public bool ResizeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示すかどうか、ユーザーが選択したインク ストロークや要素にブール値、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>
          <see langword="true" /> ユーザーがストロークや要素の場合、 <see cref="T:System.Windows.Controls.InkCanvas" />。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティ設定されている場合 `true`, 、選択時に、インク ストロークや要素の周囲に装飾境界線を描画します。 この枠線を使用して、選択したオブジェクトのサイズを変更できます。 場合 <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> は `true`, 、装飾には、ユーザーがストロークや要素も移動ができるようにします。  
  
 このプロパティ設定されている場合 `false` インク ストロークや要素の 1 つまたは複数を選択すると、中に装飾境界線が選択したオブジェクトから自動的に削除します。  
  
   
  
## 例  
 次の例は、ユーザーが移動して、要素のサイズを変更できなくなり、上線、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples\#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 添付プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>インクのセットを選択 <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトや <see cref="T:System.Windows.FrameworkElement" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> 含めることができます <xref:System.Windows.Ink.Stroke> スタイラス入力をユーザーに作成されるオブジェクトと <xref:System.Windows.FrameworkElement> などのオブジェクト <xref:System.Windows.Controls.Image> と <xref:System.Windows.Controls.Button> オブジェクトです。  
  
 選択されたストロークが認識および操作しやすくするためには、周囲に装飾に表示されます。<xref:System.Windows.FrameworkElement> オンにすると、オブジェクトは異なる方法で表示されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedElements">コレクション <see cref="T:System.Windows.UIElement" /> オブジェクトを選択します。</param>
        <summary>一連の <see cref="T:System.Windows.UIElement" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> 含めることができます <xref:System.Windows.Ink.Stroke> スタイラスからのユーザー入力への応答で作成されるオブジェクトと <xref:System.Windows.UIElement> などのオブジェクト <xref:System.Windows.Controls.Image> と <xref:System.Windows.Controls.Button> オブジェクトです。  
  
 認識および操作しやすくするためには、周囲に装飾には、選択されたストロークが表示されます。<xref:System.Windows.UIElement> オンにすると、オブジェクトは異なる方法で表示されません。 場合、 <xref:System.Windows.UIElement> で `selectedElements` Children コレクションに含まれない <xref:System.Windows.Controls.InkCanvas.Select%2A> 無視、 <xref:System.Windows.UIElement>です。  
  
   
  
## 例  
 次の例が選択するすべてのストロークと 2 つの要素で、 <xref:System.Windows.Controls.InkCanvas>です。 この例では、 <xref:System.Windows.Controls.TextBox> と呼ばれる `textbox1` と <xref:System.Windows.Controls.Button> と呼ばれる `button1` \-、および両方のコントロールの子要素、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">コレクション <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトを選択します。</param>
        <summary>インクのセットを選択 <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> 含めることができます <xref:System.Windows.Ink.Stroke> スタイラス入力をユーザーに作成されるオブジェクトと <xref:System.Windows.FrameworkElement> などのオブジェクト <xref:System.Windows.Controls.Image> と <xref:System.Windows.Controls.Button> オブジェクトです。  
  
 認識および操作しやすくするためには、周囲に装飾には、選択されたストロークが表示されます。<xref:System.Windows.FrameworkElement> オンにすると、オブジェクトは異なる方法で表示されません。  
  
   
  
## 例  
 次の例が選択するすべてのストロークと 2 つの要素で、 <xref:System.Windows.Controls.InkCanvas>です。  この例では、 <xref:System.Windows.Controls.TextBox> と呼ばれる `textbox1` と <xref:System.Windows.Controls.Button> と呼ばれる `button1` \-、および両方のコントロールの子要素、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内の 1 つまたは複数のストローク <paramref name="selectedStrokes" /> に含まれていない、 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes">コレクション <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトを選択します。</param>
        <param name="selectedElements">コレクション <see cref="T:System.Windows.UIElement" /> オブジェクトを選択します。</param>
        <summary>組み合わせを選択 <see cref="T:System.Windows.Ink.Stroke" /> と <see cref="T:System.Windows.UIElement" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> 含めることができます <xref:System.Windows.Ink.Stroke> スタイラスからのユーザー入力への応答で作成されるオブジェクトと <xref:System.Windows.UIElement> などのオブジェクト <xref:System.Windows.Controls.Image> と <xref:System.Windows.Controls.Button> オブジェクトです。  
  
 選択されたストロークが認識および操作しやすくするためには、周囲に装飾に表示されます。<xref:System.Windows.UIElement> オンにすると、オブジェクトは異なる方法で表示されません。 場合、 <xref:System.Windows.UIElement> で `selectedElements` Children コレクションに含まれない <xref:System.Windows.Controls.InkCanvas.Select%2A> 無視、 <xref:System.Windows.UIElement>です。  
  
   
  
## 例  
 次の例を選択、すべてのストロークと 2 つの要素で、 <xref:System.Windows.Controls.InkCanvas>です。  この例では、 <xref:System.Windows.Controls.TextBox> と呼ばれる `textbox1` と <xref:System.Windows.Controls.Button> と呼ばれる `button1` \-、および両方のコントロールの子要素、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples\#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内の 1 つまたは複数のストローク <paramref name="selectedStrokes" /> に含まれていない、 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときの選択、 <see cref="T:System.Windows.Controls.InkCanvas" /> 変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インク ストロークや要素のセットを選択して、ユーザーが適用した後、このイベントが発生します。  
  
 代わりに、選択範囲が適用される前に、インク ストロークや要素のセットを選択する要求を処理する必要がある場合は、イベント ハンドラーを追加、 <xref:System.Windows.Controls.InkCanvas.SelectionChanging> イベントです。  
  
   
  
## 例  
 次の例では、ユーザーが選択範囲を元のサイズよりも小さいなことを防止できます。  
  
 [!code-csharp[InkCanvasSamples\#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples\#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいインク ストロークや要素のセットが選択されているときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas.SelectionChanging> ストロークや要素が選択されている \- ユーザーが、変更が適用される前にイベントが発生します。  
  
 <xref:System.Windows.Controls.InkCanvas.SelectionChanging> イベントが処理されるときに、 <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> を受け取る、 <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> オブジェクトです。<xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> アクセスするためのメソッドを提供 <xref:System.Windows.FrameworkElement> と <xref:System.Windows.Ink.StrokeCollection> オブジェクトをユーザーが選択された後です。  
  
 変更を適用した後、 <xref:System.Windows.Controls.InkCanvas.SelectionChanged> イベントが発生します。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.InkCanvas.SelectionChanging> 選択されたストロークが削除されたとき、またはイベントが発生しない、 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> プロパティが変更されました。  
  
   
  
## 例  
 次の例では、選択されたストロークを royal 青にします。  
  
 [!code-csharp[InkCanvasSamples\#14](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[InkCanvasSamples\#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoved">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionMoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択されているストロークや要素を移動した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、ストロークや要素の選択範囲を移動すると、新しい位置を記録するストロークまたは要素の前にデータを更新した後に発生します。 イベント ハンドラーを追加、 <xref:System.Windows.Controls.InkCanvas.SelectionMoving> イベントです。  
  
   
  
## 例  
 次の例の項目の選択を解除、 <xref:System.Windows.Controls.InkCanvas> 後、ユーザーが移動します。  
  
 [!code-csharp[InkCanvasSamples\#19](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#19)]
 [!code-vb[InkCanvasSamples\#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoving">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生する前に、選択されたストロークと要素を移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、ユーザーが選択されているストロークや要素を移動することを要求した後、変更が適用される前に発生します。  
  
 イベント ハンドラーは、型の引数を受け取る <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> 2 つのプロパティを持つ: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> と <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>です。<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 移動前に選択範囲の境界を定義し、 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> 、移動後の選択範囲の境界を定義します。  
  
 変更を適用した後、 <xref:System.Windows.Controls.InkCanvas.SelectionMoved> イベントが発生します。  
  
   
  
## 例  
 次の例は、選択した項目を垂直方向に移動するをユーザーをできないように、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#13](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[InkCanvasSamples\#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResized">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResized" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ストロークや要素の選択範囲のサイズが、ユーザーが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ストロークや要素の選択範囲のサイズを変更した後、このイベントが発生します。  
  
 代わりに、ストロークや要素のサイズが変更される前に、選択範囲のサイズを変更する要求を処理する必要がある場合は、イベント ハンドラーを追加、 <xref:System.Windows.Controls.InkCanvas.SelectionResizing> イベントです。  
  
   
  
## 例  
 次の例のすべての項目の選択を解除、 <xref:System.Windows.Controls.InkCanvas> 後、ユーザー選択範囲のサイズを再設定します。  
  
 [!code-csharp[InkCanvasSamples\#23](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#23)]
 [!code-vb[InkCanvasSamples\#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResizing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生する前に、選択したストロークと要素のサイズが変更されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、ストロークや要素の選択を変更できるように、ユーザーが要求した後、変更が適用される前に発生します。  
  
 イベント ハンドラーは、型の引数を受け取る <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> を含む 2 つのプロパティ: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> と <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>です。<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> サイズ変更操作の前に選択範囲の境界を定義し、 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> 、サイズ変更操作後に選択範囲の境界を定義します。  
  
 ストロークや要素を新しいサイズで更新した後、 <xref:System.Windows.Controls.InkCanvas.SelectionResized> イベントが発生します。  
  
   
  
## 例  
 次の例では、ユーザーが選択範囲を元のサイズよりも小さいなことを防止できます。  
  
 [!code-csharp[InkCanvasSamples\#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples\#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResized" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SetBottom">
      <MemberSignature Language="C#" Value="public static void SetBottom (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBottom(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">下部にあるプロパティを設定する対象の要素。</param>
        <param name="length">下部にある座標 <c>element</c>します。</param>
        <summary>値を設定、 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を設定する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#28](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#28)]
 [!code-vb[InkCanvasSamples\#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures">アプリケーションのコレクションをジェスチャを <see cref="T:System.Windows.Controls.InkCanvas" /> が認識されます。</param>
        <summary>アプリケーション ジェスチャを設定、 <see cref="T:System.Windows.Controls.InkCanvas" /> が認識されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の例を設定する方法、 <xref:System.Windows.Controls.InkCanvas> アプリケーション ジェスチャを認識します。  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> プロパティが <see langword="false" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetLeft">
      <MemberSignature Language="C#" Value="public static void SetLeft (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLeft(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">左のプロパティを設定する対象の要素。</param>
        <param name="length">左座標 <c>element</c>します。</param>
        <summary>値を設定、 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を設定する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#29](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#29)]
 [!code-vb[InkCanvasSamples\#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRight">
      <MemberSignature Language="C#" Value="public static void SetRight (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRight(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">右側のプロパティを設定する対象の要素。</param>
        <param name="length">右座標 <c>element</c>します。</param>
        <summary>値を設定、 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を設定する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#30](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#30)]
 [!code-vb[InkCanvasSamples\#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTop">
      <MemberSignature Language="C#" Value="public static void SetTop (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTop(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">Top のプロパティを設定する対象の要素。</param>
        <param name="length">上座標 <c>element</c>します。</param>
        <summary>値を設定、 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 依存関係オブジェクトのプロパティをアタッチします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、位置を設定する方法、 <xref:System.Windows.Controls.Button>です。  
  
 [!code-csharp[InkCanvasSamples\#27](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#27)]
 [!code-vb[InkCanvasSamples\#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCollected">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeCollected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeCollectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>追加されると、ユーザーによって描画されるストロークが発生した、 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーがポインティング デバイスを使用してストロークを完了すると、このイベントが発生します。 たとえば、ユーザー発生させることがスタイラスをデジタイザーから、動かした後ストロークを完了するためです。  
  
 イベント ハンドラーは、型の引数を受け取る <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, 、完成したストロークを参照しています。 ストロークも追加されて、 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> のプロパティ、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 プログラムによる追加、 <xref:System.Windows.Ink.Stroke> オブジェクトを <xref:System.Windows.Controls.InkCanvas.Strokes%2A> コレクションでは、このイベントは発生しません。  
  
<a name="routedEventInfo_StrokeCollected"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|  
  
   
  
## 例  
 次の例は、ユーザーがストロークに追加をカスタム プロパティとして、時間を節約、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#22](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[InkCanvasSamples\#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StrokeCollectedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeCollectedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErased">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler StrokeErased;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler StrokeErased" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErased" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがストロークを消去すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは、ユーザーがいるかどうかインクを消去すると、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> にプロパティが設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> または <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>です。  
  
<a name="routedEventInfo_StrokeErasing"></a>   
## ルーティングされたイベント情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|  
|ルーティング方法|バブル|  
|Delegate|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## 例  
 次の例では、レポート上のストロークの数、 <xref:System.Windows.Controls.InkCanvas> ときに、 <xref:System.Windows.Controls.InkCanvas.StrokeErased> イベントが発生します。 場合 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> に設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> ユーザーに、ストローク、ストロークの数の中央を消去して、 <xref:System.Windows.Controls.InkCanvas> が増加します。 これは、古い線は 2 つの新しいストロークで置き換えられているためです。  
  
 [!code-csharp[InkCanvasSamples\#18](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#18)]
 [!code-vb[InkCanvasSamples\#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeErasedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeErasedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> ルーティング イベントを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErasing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeErasingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがストロークを消去する直前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ストロークを消去するかどうかを確認する場合、このイベントを処理します。 設定、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true` ストロークが消去されていることを防止する場合。 この手法を使用するときに、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> または <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> にプロパティが設定されている <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> または <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>です。  
  
   
  
## 例  
 次の例では、ストローク消去蛍光ペンとして描画できないようにします。 例では、 <xref:System.Windows.Controls.InkCanvas> イベント ハンドラーに接続されています。  
  
 [!code-csharp[DrawingAttributes\#16](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#16)]
 [!code-vb[DrawingAttributes\#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Strokes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インクのコレクションを取得または <see cref="T:System.Windows.Ink.Stroke" /> オブジェクトによって収集された、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</summary>
        <value>コレクション <see cref="T:System.Windows.Ink.Stroke" /> に含まれるオブジェクト、 <see cref="T:System.Windows.Controls.InkCanvas" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、2 つ使用 <xref:System.Windows.Ink.StrokeCollection> 同じオブジェクト <xref:System.Windows.Controls.InkCanvas>します。 この例ではプレーヤー 1 と 2 のプレーヤーを使用して各「インク サーフェイス」同じを共有している場合でも <xref:System.Windows.Controls.InkCanvas>します。 この例では、click イベントがイベント ハンドラーに接続されている `switchPlayersButton_Click`します。  
  
 [!code-csharp[InkCanvasSamples\#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples\#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 次の例では、バインド、 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> のプロパティ、 <xref:System.Windows.Controls.InkCanvas> 間 <xref:System.Windows.Controls.InkCanvas>します。  
  
 [!code-xml[InkCanvasBinding\#2](~/samples/snippets/xaml/VS_Snippets_Wpf/InkCanvasBinding/XAML/Window2.xaml#2)]
 [!code-xml[InkCanvasBinding\#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBinding/CS/Window2.xaml#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StrokeCollection" />
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokesReplaced" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> プロパティが置き換えられます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、2 つ使用 <xref:System.Windows.Ink.StrokeCollection> オブジェクトと同じに併置されている <xref:System.Windows.Controls.InkCanvas>します。 この例ではプレーヤー 1 と 2 のプレーヤーを使用して各「インク サーフェイス」同じを共有している場合でも <xref:System.Windows.Controls.InkCanvas>します。 この例では、 `switchPlayersButton_Click` イベントがイベント ハンドラーに関連付けられています。  
  
 [!code-csharp[InkCanvasSamples\#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples\#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>指定されたオブジェクトを <see cref="T:System.Windows.Controls.InkCanvas" /> に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">使用しません。</param>
        <summary>テキストを追加するマークアップ タグ内です。 常にスロー、 <see cref="T:System.ArgumentException" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 添付プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomCursor">
      <MemberSignature Language="C#" Value="public bool UseCustomCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>標準を上書きするかどうかを示すブール値を取得または <see cref="T:System.Windows.Controls.InkCanvas" /> カーソル機能は、カスタムのカーソルをサポートします。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Controls.InkCanvas" /> カスタム カーソルを使用して、それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.InkCanvas> 現在を反映するカーソル スタイルの変更は <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> カーソルがの境界内にある、 <xref:System.Windows.Controls.InkCanvas>です。 この動作はいない必要がある場合、たとえば、ときに、 <xref:System.Windows.Controls.InkCanvas> カスタムを使用して、カーソルでは、このプロパティを設定 `true`, で、カーソルは変更されません、 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>です。  
  
   
  
## 例  
 次の例では、によって提供されるものと異なるカーソルを使用して、 <xref:System.Windows.Controls.InkCanvas>です。  
  
 [!code-csharp[InkCanvasSamples\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[InkCanvasSamples\#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この要素内でビジュアル子要素の数を取得します。</summary>
        <value>この要素のビジュアル子要素の数。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      </Docs>
    </Member>
  </Members>
</Type>