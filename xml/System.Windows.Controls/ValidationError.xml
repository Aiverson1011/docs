<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Controls.ValidationRule" /> が検証エラーを報告したときにバインディング エンジンによって作成されるか、<see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" /> メソッドで明示的に作成される検証エラーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データ バインディング モデルで検証規則を関連付けることができます、 <xref:System.Windows.Data.Binding> オブジェクトです。 コンバーターが呼び出される前に、ターゲットからソース値の転送中に検証が行われます。 次に、検証プロセスについて説明します。  
  
1.  値は、転送中、ターゲット プロパティからプロパティのソースとデータ バインディング エンジンまず削除 <xref:System.Windows.Controls.ValidationError> に追加されている可能性があります、 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> バインド要素のプロパティをアタッチします。 そのため、カスタム検証ルールを定義するかどうかがチェックされます <xref:System.Windows.Data.Binding>, 、呼び出している場合、 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドをそれぞれ <xref:System.Windows.Controls.ValidationRule> 1 つに障害が発生するまで、またはそれらのすべてが、パスします。  
  
2.  合格しないカスタム ルールがある場合、バインド エンジンによって作成、 <xref:System.Windows.Controls.ValidationError> オブジェクトし、それを追加、 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> バインドされている要素のコレクション。<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 空ではない、 <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> 接続されている要素のプロパティが `true`です。 また場合、 <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> のプロパティ、 <xref:System.Windows.Data.Binding> に設定されている `true`, 、バインディング エンジンを生成し、 <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> 要素のイベントをアタッチします。  
  
3.  すべての規則が合格した場合、バインド エンジンを呼び出します、コンバーターを 1 つが存在する場合。  
  
4.  コンバーターが成功した場合、バインディング エンジンは、source プロパティの set アクセス操作子を呼び出します。  
  
5.  バインディングの場合、 <xref:System.Windows.Controls.ExceptionValidationRule> 関連付けられているバインディング エンジンがあるかどうかをチェック手順 3 または 4 の間に、例外をスローし、 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>です。 使用することができます、 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> コールバックの例外を処理するため、カスタム ハンドラーを提供します。 場合、 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> が指定されていない、 <xref:System.Windows.Data.Binding>, 、バインド エンジンを作成、 <xref:System.Windows.Controls.ValidationError> 例外を使用し、それを追加、 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> バインドされている要素のコレクション。  
  
 どちらの方向 \(ソースまたはソースをターゲットにターゲット\) に有効な値の転送がオフ、 <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 添付プロパティです。  
  
   
  
## 例  
 次の例では、スタイル トリガーを作成する、 <xref:System.Windows.Controls.ToolTip> 検証エラー メッセージを報告します。<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> 添付プロパティのコレクションを返す <xref:System.Windows.Controls.ValidationError> バインドされている要素のオブジェクト。  
  
 [!code-xml[DataBindingLab\#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">検証エラーを検出するルール。</param>
        <param name="bindingInError">
          <see cref="T:System.Windows.Data.BindingExpression" /> または <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト検証エラーを使用します。</param>
        <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">検証エラーを検出するルール。</param>
        <param name="bindingInError">
          <see cref="T:System.Windows.Data.BindingExpression" /> または <see cref="T:System.Windows.Data.MultiBindingExpression" /> オブジェクト検証エラーを使用します。</param>
        <param name="errorContent">エラーに関する情報です。</param>
        <param name="exception">検証の失敗の原因となった例外。 このパラメーターは省略可能でありに設定することができます <see langword="null" />します。</param>
        <summary>指定したパラメーターを使用して、<see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Data.BindingExpression" /> または <see cref="T:System.Windows.Data.MultiBindingExpression" /> このオブジェクト <see cref="T:System.Windows.Controls.ValidationError" />します。 オブジェクトがマークされている無効を明示的にまたは失敗した検証規則を持ちます。</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingExpression" /> または <see cref="T:System.Windows.Data.MultiBindingExpression" /> このオブジェクト <see cref="T:System.Windows.Controls.ValidationError" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラーを説明する文字列など、この <see cref="T:System.Windows.Controls.ValidationError" /> に追加のコンテキストを提供するオブジェクトを取得または設定します。</summary>
        <value>この <see cref="T:System.Windows.Controls.ValidationError" /> に追加のコンテキストを提供するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## XAML Text Usage  
 See the Example section for an example.  
  
   
  
## 例  
 The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  
  
 [!code-xml[DataBindingLab\#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Exception" /> オブジェクトがこの問題の原因を <see cref="T:System.Windows.Controls.ValidationError" />, 、エラーが例外の結果である場合。</summary>
        <value>
          <see cref="T:System.Exception" /> オブジェクト、エラーが例外の結果である場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクトがこの問題の原因を <see cref="T:System.Windows.Controls.ValidationError" />, 、エラーが、検証規則の結果である場合。</summary>
        <value>
          <see cref="T:System.Windows.Controls.ValidationRule" /> オブジェクト、エラーが、検証規則の結果である場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ValidationError" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>