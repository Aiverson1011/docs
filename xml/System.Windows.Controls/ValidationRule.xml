<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザー入力の有効性を検査するためのカスタム ルールを作成する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用すると、 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] データ モデルのバインディングに関連付けることができます <xref:System.Windows.Data.Binding.ValidationRules%2A> オブジェクトを使用してバインドします。 カスタム ルールを作成するには、このサブクラス クラスおよび実装を確認、 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドです。 組み込みを使用して、必要に応じて、 <xref:System.Windows.Controls.ExceptionValidationRule>, 、ソースの更新中にスローされる例外をキャッチするか、 <xref:System.Windows.Controls.DataErrorValidationRule>, 、によって発生したエラーのチェック、 <xref:System.ComponentModel.IDataErrorInfo> ソース オブジェクトの実装です。  
  
 バインディング エンジンは、それぞれチェック <xref:System.Windows.Controls.ValidationRule> は、バインド対象のプロパティ値、バインディング ソースのプロパティには、入力の値を転送するたびに、バインドに関連付けられています。  
  
 データの検証の詳細については、次を参照してください。 [データ バインドの概要](http://msdn.microsoft.com/ja-jp/c707c95f-7811-401d-956e-2fffd019a211)します。  
  
 ダイアログ ボックスで、ユーザー指定のデータを検証する方法については、次を参照してください。 [ダイアログ ボックスの概要](http://msdn.microsoft.com/ja-jp/0d23d544-a393-4a02-a3aa-d8cd5d3d6511)します。  
  
   
  
## 例  
 次の例では、検証規則を実装する方法を示します。 数字以外の文字が含まれている場合、または下限と上限の外側では、入力値は有効ではありません。 場合、返された値 <xref:System.Windows.Controls.ValidationResult> が有効でない、 <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> 適切なエラー メッセージにプロパティが設定されていると、 <xref:System.Windows.Controls.ValidationResult.IsValid%2A> にプロパティが設定されている `false`します。  
  
 完全な例を参照してください。 [方法: バインディング検証を実装する](http://msdn.microsoft.com/ja-jp/eb98b33d-9866-49ae-b981-bc5ff20d607a)します。  
  
 [!code-csharp[BindValidation\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep">検証規則を実行する場合を指定する列挙値の 1 つ。</param>
        <param name="validatesOnTargetUpdated">
          <see langword="true" /> 時に実行する検証ルールの対象となる、 <see cref="T:System.Windows.Data.Binding" /> が更新された以外の場合、 <see langword="false" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Controls.ValidationRule" /> クラスの指定した検証手順と、ターゲットが更新されたときに検証規則を実行するかどうかを示す値を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">チェックするバインド ターゲットからの値。</param>
        <param name="cultureInfo">このルールで使用するカルチャ。</param>
        <summary>派生クラスによってオーバーライドされた場合、値に対して検証チェックを実行します。</summary>
        <returns>
          <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サブクラスを作成するときに、このメソッドを実装する必要があります、 <xref:System.Windows.Controls.ValidationRule> カスタム検証規則を作成するためにクラスです。  
  
 たびに、データ バインディング エンジンは、バインディング ソースのプロパティ \(基になるデータ\) を \(ユーザー入力\) からバインディング ターゲット プロパティから値を転送、確認かどうか、 <xref:System.Windows.Data.Binding.ValidationRules%2A> のバインディングを定義します。 場合 <xref:System.Windows.Data.Binding.ValidationRules%2A> バインド エンジンの呼び出しの定義、 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドをそれぞれ <xref:System.Windows.Controls.ValidationRule> いずれかのエラーが見つかるまで、またはそれらすべてに合格するまでです。  
  
 データの検証の詳細については、次を参照してください。 [データ バインドの概要](http://msdn.microsoft.com/ja-jp/c707c95f-7811-401d-956e-2fffd019a211)します。  
  
   
  
## 例  
 次の例では、検証規則を実装する方法を示します。 次の例では、数字以外の文字が含まれている場合、または下限と上限の外側では入力値は有効なありません。 入力値が有効でない場合、 <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> 適切なエラー メッセージにプロパティが設定されていると、 <xref:System.Windows.Controls.ValidationResult.IsValid%2A> にプロパティが設定されている `false`します。  
  
 完全な例を参照してください。 [方法: バインディング検証を実装する](http://msdn.microsoft.com/ja-jp/eb98b33d-9866-49ae-b981-bc5ff20d607a)します。  
  
 [!code-csharp[BindValidation\#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
        <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="value">チェックするバインド ターゲットからの値。</param>
        <param name="cultureInfo">このルールで使用するカルチャ。</param>
        <param name="owner">検証規則を使用するバインディング式。</param>
        <summary>値の検証チェックを実行します。</summary>
        <returns>
          <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="value">チェックするバインド ターゲットからの値。</param>
        <param name="cultureInfo">このルールで使用するカルチャ。</param>
        <param name="owner">検証規則を使用するバインディングのグループです。</param>
        <summary>値の検証チェックを実行します。</summary>
        <returns>
          <see cref="T:System.Windows.Controls.ValidationResult" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するときに検証規則が実行するかどうかを示す値の対象となる、 <see cref="T:System.Windows.Data.Binding" /> が更新されます。</summary>
        <value>
          <see langword="true" /> ときに検証規則が実行されている場合の対象となる、 <see cref="T:System.Windows.Data.Binding" /> が更新された以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例を確認するかどうか、 <xref:System.Windows.Controls.TextBox> が空です。<xref:System.Windows.Controls.ValidationRule>, 、`ValueIsNotNull`, が <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> に設定 `true`, 、アプリケーションを起動するため、 <xref:System.Windows.Controls.ValidationRule> 実行され、メッセージを表示、 <xref:System.Windows.Controls.TextBox> が空です。  
  
 [!code-xml[BindingGroupSnippets\#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 例を次に、 <xref:System.Windows.Controls.ValidationRule> 前例とこのイベント ハンドラーで使用されている、 <xref:System.Windows.Controls.Validation.Error> イベントです。  
  
 [!code-csharp[BindingGroupSnippets\#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets\#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証規則を実行するときに設定します。</summary>
        <value>列挙値の 1 つ。  既定値は、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 設定を次に例を <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> に <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> 上、 <xref:System.Windows.Controls.ValidationRule> と呼ばれる `ValidateDateAndPrice` を実行すると、 <xref:System.Windows.Controls.ValidationRule.Validate%2A> メソッドには、ソース プロパティの型の値へのアクセス。 ときに、ルール `PriceIsAPositiveNumber` と `FutureDateRule` それぞれに値を実行します。 <xref:System.Windows.Controls.ValidationRule.Validate%2A> 値がそれぞれの型に変換される前に、ルールが実行されるため、メソッドは文字列です。  
  
 [!code-xml[BindingGroupSnippets\#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 例を次に、 <xref:System.Windows.Controls.ValidationRule>`ValidateDateAndPrice`します。`Validate` メソッドのオーバーライド、 `Price` プロパティの型は <xref:System.Double> と `OfferExpires` プロパティの型は <xref:System.DateTime> 時点でそれらの種類に変換した文字列であるため、 <xref:System.Windows.Controls.ValidationRule> を実行します。  
  
 [!code-csharp[BindingGroupSnippets\#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets\#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>値の検証チェックを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.ValidationRule" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>