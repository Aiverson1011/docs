<Type Name="Frame" FullName="System.Windows.Controls.Frame">
  <TypeSignature Language="C#" Value="public class Frame : System.Windows.Controls.ContentControl, System.Windows.Markup.IAddChild, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Frame extends System.Windows.Controls.ContentControl implements class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Frame" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Navigated")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Source")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_FrameCP", Type=typeof(System.Windows.Controls.ContentPresenter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>フレームは、ナビゲーションをサポートするコンテンツ コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame> 移動し、内容を表示する機能を提供するコンテンツ コントロールです。<xref:System.Windows.Controls.Frame> 他のコントロールや要素とその他のコンテンツ内でホストできます。  
  
> [!CAUTION]
>  ときに、 <xref:System.Windows.Controls.Frame> コントロールが HTML コンテンツに移動、 <xref:System.Windows.Controls.Frame> コントロールが内部でネイティブの WebBrowser ActiveX コントロールをインスタンス化します。 WPF では、WebBrowser ActiveX コントロールにコントロールの機能を適用することでセキュリティ機能を使用します。 インストールされている機能コントロール Xbap とスタンドアロン アプリケーションによって異なります。 一部のアプリケーションは、悪意のあるコンテンツが実行されないようにする追加の機能コントロールに適用する必要があります。 詳細については、「WebBrowser コントロールおよび機能コントロール」」セクションを参照してください。 [セキュリティ \(WPF\)](http://msdn.microsoft.com/ja-jp/ee1baea0-3611-4e36-9ad6-fcd5205376fb) と [WebBrowser Control Overviews and Tutorials](http://go.microsoft.com/fwlink/?LinkId=179388)します。  
  
 コンテンツはの任意の型を指定できる [!INCLUDE[TLA2#tla_winfx](~/includes/tla2sharptla-winfx-md.md)] オブジェクトおよび [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)] ファイルです。 一般に、ただし、ページが、推奨されるナビゲーション用のパッケージ コンテンツにする方法 \(を参照してください <xref:System.Windows.Controls.Page>\)。  
  
 設定するコンテンツを移動する、 <xref:System.Windows.Controls.Frame.Source%2A> プロパティを [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 目的のコンテンツ。 さらに、コンテンツを参照できますの次のオーバー ロードのいずれかを使用して、 <xref:System.Windows.Controls.Frame.Navigate%2A> メソッド。  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Uri%29>  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Uri%2CSystem.Object%29>  
  
 ときのコンテンツに移動して [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], 、<xref:System.Windows.Controls.Frame> コンテンツを含むオブジェクトを返します。 いずれかを使用してコンテンツに移動する代わりに、 <xref:System.Windows.Controls.Frame.Navigate%2A> 、オブジェクトを受け取るメソッド オーバー ロードします。  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Object%29>  
  
-   <xref:System.Windows.Controls.Frame.Navigate%28System.Object%2CSystem.Object%29>  
  
 ナビゲーションの有効期間は、次のイベントを追跡できます。  
  
-   <xref:System.Windows.Controls.Frame.Navigating>  
  
-   <xref:System.Windows.Controls.Frame.Navigated>  
  
-   <xref:System.Windows.Controls.Frame.NavigationProgress>  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed>  
  
-   <xref:System.Windows.Controls.Frame.NavigationStopped>  
  
-   <xref:System.Windows.Controls.Frame.LoadCompleted>  
  
-   <xref:System.Windows.Controls.Frame.FragmentNavigation>  
  
 ナビゲーションが行われるたびにすべてのイベントが発生します。\(キャンセル、停止、または失敗\) は、発生するイベントのセットをナビゲーション \(コンテンツまたはコンテンツ フラグメント\) に発生して、ナビゲーションの完了方法の種類によって決まります。  
  
 次の図は、これらのイベントを発生させる順序を示しています。  
  
 529b7e47-de7a-43a8-a4a8-3adfa6cafbca  
  
 中または、ナビゲーション後 <xref:System.Windows.Controls.Frame> は、移動先を含むコンテンツに関する情報を提供、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 移動先のコンテンツの \(<xref:System.Windows.Controls.Frame.Source%2A>\)、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] の現在のコンテンツ \(<xref:System.Windows.Controls.Frame.CurrentSource%2A>\)、およびオブジェクトに移動したコンテンツが含まれていますが \(<xref:System.Windows.Controls.ContentControl.Content%2A>\)。  
  
 コンテンツの移動、 <xref:System.Windows.Controls.Frame> ナビゲーション履歴にエントリとしてナビゲーションを記録します。 呼び出して、いずれか、新しいナビゲーションが発生したときに、ナビゲーション履歴をバックアップするエントリが追加、 <xref:System.Windows.Controls.Frame.Navigate%2A> メソッドを呼び出すことによって、ナビゲーション履歴内のエントリに移動して、または <xref:System.Windows.Controls.Frame.GoForward%2A>です。 呼び出してナビゲーション履歴にエントリに移動して、ナビゲーション履歴にエントリが追加 <xref:System.Windows.Controls.Frame.GoBack%2A>します。<xref:System.Windows.Controls.Frame.CanGoBack%2A><xref:System.Windows.Controls.Frame.CanGoForward%2A> あるかどうか前に、ナビゲーション履歴では、それぞれを報告します。  
  
 最初にその 1 つのコンテンツへの移動が、コンテンツの別の部分から <xref:System.Windows.Controls.Frame> ナビゲーションが自動的に表示されます [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] ことにより、ユーザーがナビゲーション履歴を前後に移動します。 タイミングを構成することができます、ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] を設定して表示される、 <xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A> プロパティです。  
  
 既定では、 <xref:System.Windows.Controls.Frame> 親ナビゲーター場合にのみ、独自のナビゲーション履歴を使用 \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\) で、独自のナビゲーション履歴が見つかりません。 これは、親ナビゲーターのナビゲーション履歴エントリと、フレームのナビゲーション履歴エントリを混じり合うことを意味します。 指定する、 <xref:System.Windows.Controls.Frame> そのナビゲーション履歴を管理する設定、 <xref:System.Windows.Controls.Frame.JournalOwnership%2A> プロパティを <xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>します。  
  
 最新のエントリに呼び出してナビゲーション履歴を削除できます <xref:System.Windows.Controls.Frame.RemoveBackEntry%2A>します。  
  
 <xref:System.Windows.Controls.Frame> ナビゲーション履歴には、コンテンツ オブジェクトのインスタンスは保存されません。 代わりに、 <xref:System.Windows.Controls.Frame> ナビゲーション履歴を使用してナビゲーションが毎回、コンテンツ オブジェクトの新しいインスタンスを作成します。 この動作は、数値が大きいとコンテンツの大部分は、移動先ときに過剰なメモリの消費量を回避する設計されています。 その結果、次に、コンテンツの状態は 1 つのナビゲーションからに記憶されません。 ただし、 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] ナビゲーション履歴に特定のコンテンツの状態を格納する、いくつかの手法について説明します。  
  
 使用して <xref:System.Windows.Controls.Frame.AddBackEntry%2A>, 、単一のページ インスタンスの状態の複数のセットも覚えておくことができます。  
  
## フレーム コントロールをカスタマイズします。  
 複数に同じプロパティ設定を適用する <xref:System.Windows.Controls.Frame> コントロールを使用して、 <xref:System.Windows.FrameworkElement.Style%2A> プロパティです。 既定値を変更する <xref:System.Windows.Controls.ControlTemplate> コントロール固有の外観を与えるためです。 作成の詳細については、 <xref:System.Windows.Controls.ControlTemplate>, を参照してください [ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  パーツおよびに固有の状態を確認する、 <xref:System.Windows.Controls.Frame>, を参照してください [フレームのスタイルとテンプレート](http://msdn.microsoft.com/ja-jp/a01c32e2-c951-46a0-a82f-2614ca241f0b)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  Visual プロパティの設定は効果プロパティは、両方に存在する場合 <xref:System.Windows.Controls.Frame> コントロールの既定のテンプレートとを使用して設定します。 「を変更する視覚的構造の、」の「コントロール」セクションで visual プロパティの一覧が見つかります [ControlTemplate 作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  
  
   
  
## 例  
 次の例は、単純なを作成する方法を示しています。 <xref:System.Windows.Controls.Frame> を制御し、からロードする最初のソース コンテンツの指定、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] を使用して、 <xref:System.Windows.Controls.Frame.Source%2A> プロパティです。  
  
 [!code-xml[FrameSnippets#SetFrameSourceXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml1)]  
[!code-xml[FrameSnippets#SetFrameSourceXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml2)]  
[!code-xml[FrameSnippets#SetFrameSourceXAML3](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameSnippets/CS/MainWindow.xaml#setframesourcexaml3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Frame ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Controls.Frame" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> を特定のコンテンツに関連付けられているアプリケーション定義の状態を表すオブジェクト。</param>
        <summary>バックアップが含まれるナビゲーション履歴にエントリを追加、 <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> <see langword="null" />, 、および <see cref="T:System.Windows.Navigation.CustomContentState" /> からオブジェクトが返されない <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />します。</exception>
        <altmember cref="M:System.Windows.Controls.Frame.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected override void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはオーバーライド <xref:System.Windows.Controls.Frame> 子が許可されません。 代わりに、使用、 <xref:System.Windows.Controls.ContentControl.Content%2A> コンテンツを設定するプロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected override void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドをオーバーライドしないようにする <xref:System.Windows.Controls.Frame> からテキストを追加します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable BackStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable BackStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.BackStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>返します。、 <see cref="T:System.Collections.IEnumerable" /> のナビゲーション履歴にエントリを列挙するために使用して、 <see cref="T:System.Windows.Controls.Frame" />です。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" /> 少なくとも 1 つのエントリがある場合は、戻るナビゲーション履歴に追加されました。 エントリが存在しない場合、または <see cref="T:System.Windows.Controls.Frame" /> そのナビゲーション履歴を所有していない <see cref="P:System.Windows.Controls.Frame.BackStack" /> は <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返されるエントリ <xref:System.Windows.Controls.Frame.BackStack%2A> コンテンツ全体、フラグメント ナビゲーション カスタム状態などです。  
  
<a name="dependencyPropertyInfo_FrameBackStack"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.BackStackProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
        <altmember cref="T:System.Windows.Navigation.CustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="BackStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.BackStackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別、 <see cref="P:System.Windows.Controls.Frame.BackStack" /> 依存関係プロパティ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 識別子、 <xref:System.Windows.Controls.Frame.BackStack%2A> 依存関係プロパティ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="protected virtual Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定基本 Uniform Resource Identifier (URI) の <see cref="T:System.Windows.Controls.Frame" />です。</summary>
        <value>基本 Uniform Resource Identifier (URI) の <see cref="T:System.Windows.Controls.Frame" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.BaseUri%2A> 相対パスの解決を支援するために設定することができます [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] さらに移動します。  
  
 取得または設定する、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] の <xref:System.Windows.Controls.Frame> コントロールを使用して、 <xref:System.Windows.Controls.Frame.Source%2A> プロパティです。  
  
 これはプロテクト仮想プロパティでありを直接使用できません派生クラスで使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Markup.IUriContext.BaseUri" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション履歴には、少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ナビゲーション履歴に少なくとも 1 つのエントリがある場合 <see langword="false" /> ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Controls.Frame" /> そのナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A?displayProperty=fullName>」を参照してください。  
  
<a name="dependencyPropertyInfo_FrameCanGoBack"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.CanGoBackProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Frame.GoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
        <altmember cref="M:System.Windows.Controls.Frame.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoBackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoBackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.CanGoBackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Frame.CanGoBack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.CanGoBack%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション履歴に少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ナビゲーション履歴に少なくとも 1 つのエントリがある場合 <see langword="false" /> ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Controls.Frame" /> そのナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Controls.Frame.CanGoForward%2A>」を参照してください。  
  
<a name="dependencyPropertyInfo_FrameCanGoForward"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.CanGoForwardProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Frame.GoForward" />
        <altmember cref="M:System.Windows.Controls.Frame.GoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoForwardProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoForwardProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.CanGoForwardProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Frame.CanGoForward" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.CanGoForward%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.ContentRendered" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後に発生 <see cref="T:System.Windows.Controls.Frame" /> コンテンツがレンダリングされています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Windows.Controls.Frame> 、コンテンツを持たないこのイベントは発生しません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 Uniform Resource Identifier (URI) の最後に移動したコンテンツです。</summary>
        <value>A <see cref="T:System.Uri" /> 最後に移動したを使用してに移動する場合の URI。 そうしないと、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ForwardStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ForwardStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.ForwardStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Collections.IEnumerable" /> のナビゲーション履歴にエントリを列挙するために使用して、 <see cref="T:System.Windows.Controls.Frame" />です。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" /> オブジェクトには、少なくとも 1 つのエントリがナビゲーション履歴に追加された場合または <see langword="null" /> エントリがない場合、または <see cref="T:System.Windows.Controls.Frame" /> そのナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返されるエントリ <xref:System.Windows.Controls.Frame.ForwardStack%2A> コンテンツ全体、フラグメント ナビゲーション カスタム状態などです。  
  
<a name="dependencyPropertyInfo_FrameForwardStack"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.ForwardStackProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForwardStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForwardStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.ForwardStackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Frame.ForwardStack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.ForwardStack%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.FragmentNavigation" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ フラグメントへのナビゲーションが始まると、すぐに発生する場合、目的のフラグメントは現在のコンテンツまたはソースの後に発生する XAML コンテンツが読み込まれた目的のフラグメントが別のコンテンツがある場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.GoBack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>場合、ナビゲーション履歴を背面に最新の項目に移動、 <see cref="T:System.Windows.Controls.Frame" /> 、独自のナビゲーション履歴を管理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 フレームのナビゲーション履歴は親ナビゲーターによって管理されているかどうか \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)、 `GoBack` そのナビゲーターのメソッドまたは関連付けられている <xref:System.Windows.Navigation.NavigationService> オブジェクトを呼び出す必要があります。  
  
-   <xref:System.Windows.Controls.Frame.GoBack%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.GoBack%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Controls.Frame.GoBack" /> ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
        <altmember cref="P:System.Windows.Controls.Frame.CanGoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
        <altmember cref="M:System.Windows.Controls.Frame.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.GoForward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ナビゲーション履歴に最新の項目に移動する場合、 <see cref="T:System.Windows.Controls.Frame" /> 、独自のナビゲーション履歴を管理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 フレームのナビゲーション履歴は親ナビゲーターによって管理されているかどうか \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)、 `GoForward` そのナビゲーターのメソッドまたは関連付けられている <xref:System.Windows.Navigation.NavigationService> オブジェクトを呼び出す必要があります。  
  
-   <xref:System.Windows.Controls.Frame.GoForward%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.GoForward%2A?displayProperty=fullName>  
  
-   <xref:System.Windows.Navigation.NavigationService.GoForward%2A?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Controls.Frame.GoForward" /> ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
        <altmember cref="P:System.Windows.Controls.Frame.CanGoBack" />
        <altmember cref="M:System.Windows.Controls.Frame.GoBack" />
        <altmember cref="P:System.Windows.Controls.Frame.CanGoForward" />
      </Docs>
    </Member>
    <Member MemberName="JournalOwnership">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalOwnership JournalOwnership { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Navigation.JournalOwnership JournalOwnership" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.JournalOwnership" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalOwnership</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、 <see cref="T:System.Windows.Controls.Frame" /> を独自のナビゲーション履歴を管理または親ナビゲーターのナビゲーション履歴の管理制御を渡し \(<see cref="T:System.Windows.Navigation.NavigationWindow" />, 、<see cref="T:System.Windows.Controls.Frame" />\)。</summary>
        <value>A <see cref="T:System.Windows.Navigation.JournalOwnership" /> 値を指定するかどうか <see cref="T:System.Windows.Controls.Frame" /> 独自の履歴を管理します。 既定値は <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Windows.Controls.Frame> 親ナビゲーション ホスト場合にのみ、独自のナビゲーション履歴を使用 \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\) で独自の履歴が見つかりません \(場合など、 <xref:System.Windows.Controls.Frame> によってホストされているコンテンツでホストされている、 <xref:System.Windows.Window>\)。 強制的に <xref:System.Windows.Controls.Frame> 、独自のナビゲーション履歴を管理するには、次のように設定します。 <xref:System.Windows.Controls.Frame.JournalOwnership%2A> に <xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>します。  
  
<a name="dependencyPropertyInfo_FrameJournalOwnership"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.JournalOwnershipProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例を示しています、 <xref:System.Windows.Controls.Frame> 、独自のナビゲーション履歴を使用することを構成します。  
  
 [!code-xml[FrameJournalOwnershipSnippetSample\#SetJournalOwnershipProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameJournalOwnershipSnippetSample/CS/HomePage.xaml#setjournalownershipproperty)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JournalOwnershipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty JournalOwnershipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty JournalOwnershipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.JournalOwnershipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Frame.JournalOwnership" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.JournalOwnership%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.LoadCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動したコンテンツが読み込まれ、解析されて、レンダリングが開始されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">
          <see cref="T:System.Object" /> 移動先のコンテンツを格納しています。</param>
        <summary>オブジェクトが含まれるコンテンツを非同期的に移動します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 次の例では、オブジェクトが含まれるコンテンツに移動する方法を示します。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateToPageObjCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopageobjcode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateToPageObjCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopageobjcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> オブジェクトを初期化して、 URI 目的のコンテンツ。</param>
        <summary>指定されているコンテンツに非同期に移動、 Uniform Resource Identifier (URI)です。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName>」を参照してください。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)] 相対または絶対指定できます。 詳細については、次を参照してください。 [WPF での Pack Uri](http://msdn.microsoft.com/ja-jp/43adb517-21a7-4df3-98e8-09e9cdf764c4)します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Windows.Controls.Frame.Navigate%2A> に移動する方法、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]です。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateToPageNavCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagenavcode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateToPageNavCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagenavcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">
          <see cref="T:System.Object" /> 移動先のコンテンツを格納しています。</param>
        <param name="extraData">A <see cref="T:System.Object" /> の移動中に処理するために使用されるデータを格納しています。</param>
        <summary>コンテンツは、オブジェクトが含まれ、ナビゲーション中の処理に使用するデータを含むオブジェクトを渡しますへ非同期的に移動します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> オブジェクトを初期化して、 URI 目的のコンテンツ。</param>
        <param name="extraData">A <see cref="T:System.Object" /> の移動中に処理するために使用されるデータを格納しています。</param>
        <summary>あるソース コンテンツに非同期に移動、 Uniform Resource Identifier (URI), 、移動中に処理するために使用するデータを格納しているオブジェクトを渡します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.Navigated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが見つかると、しから利用可能なときに発生、 <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティには、その完了していない、読み込みがします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigated?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.Navigating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationFailed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求されたコンテンツへの移動中にエラーが発生したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationProgress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーションの進行状況の情報を提供するダウンロード中に定期的に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationStopped" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationService">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationService NavigationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.NavigationService NavigationService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.NavigationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Navigation.NavigationService" /> これで使用されている <see cref="T:System.Windows.Controls.Frame" /> ナビゲーション サービスを提供します。</summary>
        <value>A <see cref="T:System.Windows.Controls.Frame" /> を表すオブジェクト、 <see cref="T:System.Windows.Navigation.NavigationService" /> で使用される <see cref="T:System.Windows.Controls.Frame" />, が利用可能な場合です。 それ以外の場合、 <see langword="null" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame> 使用して <xref:System.Windows.Navigation.NavigationService> ホストされているコンテンツのナビゲーションをサポートします。<xref:System.Windows.Controls.Frame.NavigationService%2A> コードをホストするのに便利ですが、 <xref:System.Windows.Controls.Frame> への参照を取得する、 <xref:System.Windows.Navigation.NavigationService>です。 ホストされているコンテンツ、 <xref:System.Windows.Controls.Frame>, など <xref:System.Windows.Controls.Page>, 、使用する必要があります <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> または <xref:System.Windows.Controls.Page.NavigationService%2A> への参照を取得する、 <xref:System.Windows.Navigation.NavigationService>です。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame.NavigationService%2A> 参照を返さない <xref:System.Windows.Controls.Frame.NavigationService%2A> の呼び出しと <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> を渡すと <xref:System.Windows.Controls.Frame> です。 前者の戻り値を <xref:System.Windows.Controls.Frame.NavigationService%2A> が所有する、 <xref:System.Windows.Controls.Frame> 、後者の制御を返すときに、 <xref:System.Windows.Controls.Frame.NavigationService%2A> をコンテンツに移動するナビゲーション ホストに、 <xref:System.Windows.Controls.Frame> がホストされています。 次のコードでは、相違点を示します。  
  
 [!code-csharp[NSGNSvsFNSSnippets#NSFrameDiffCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGNSvsFNSSnippets/CSharp/Window1.xaml.cs#nsframediffcode1)]
 [!code-vb[NSGNSvsFNSSnippets#NSFrameDiffCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGNSvsFNSSnippets/visualbasic/window1.xaml.vb#nsframediffcode1)]  
[!code-csharp[NSGNSvsFNSSnippets#NSFrameDiffCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGNSvsFNSSnippets/CSharp/Window1.xaml.cs#nsframediffcode2)]
[!code-vb[NSGNSvsFNSSnippets#NSFrameDiffCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGNSvsFNSSnippets/visualbasic/window1.xaml.vb#nsframediffcode2)]  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Frame.NavigationStopped" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="M:System.Windows.Controls.Frame.StopLoading" /> メソッドが呼び出されるか、新しいナビゲーションが要求されると、現在のナビゲーションが進行中です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Frame.Navigating" />
        <altmember cref="E:System.Windows.Controls.Frame.Navigated" />
        <altmember cref="E:System.Windows.Controls.Frame.LoadCompleted" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationProgress" />
        <altmember cref="E:System.Windows.Controls.Frame.NavigationFailed" />
        <altmember cref="E:System.Windows.Controls.Frame.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationUIVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationUIVisibility NavigationUIVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Navigation.NavigationUIVisibility NavigationUIVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.NavigationUIVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationUIVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するときに、 <see cref="T:System.Windows.Controls.Frame" /> のナビゲーションを表示できる UIです。</summary>
        <value>A <see cref="T:System.Windows.Navigation.NavigationUIVisibility" /> タイミングを指定する値、 <see cref="T:System.Windows.Controls.Frame" /> のナビゲーションを表示できる UIです。 既定値は <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Windows.Controls.Frame> 、ナビゲーションを示しています。 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] ナビゲーション履歴に最初のエントリが追加されたときに自動的にします。 ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 、後で表示されたまま、バックアップ、または移動ボタンが適切に有効になるやナビゲーション履歴にエントリの数を反映するには、無効になっています。  
  
 そのナビゲーションことを確認できる [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] は常に表示するには。  
  
1.  <xref:System.Windows.Navigation.NavigationUIVisibility> ～ <xref:System.Windows.Navigation.NavigationUIVisibility.Visible>  
  
2.  <xref:System.Windows.Controls.Frame.JournalOwnership%2A> ～ <xref:System.Windows.Navigation.JournalOwnership.OwnsJournal>  
  
 設定する <xref:System.Windows.Navigation.NavigationUIVisibility> に <xref:System.Windows.Navigation.NavigationUIVisibility.Hidden> ナビゲーションを非表示にする場合は、 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。 これがある場合、ときにナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] から表示する内容と意味がないため、 <xref:System.Windows.Controls.Frame>, 、独自のナビゲーションを提供するため、または [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]です。  
  
<a name="dependencyPropertyInfo_FrameJournalNavigationUIVisibility"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.NavigationUIVisibilityProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 次の例では、ナビゲーション クロムを確認する方法、 <xref:System.Windows.Controls.Frame> は常に表示するには <xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A> に <xref:System.Windows.Navigation.NavigationUIVisibility.Visible>します。  
  
 [!code-csharp[FrameNavigationUIVisibilitySnippets\#SetNavigationUIVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/CSharp/Window1.xaml.cs#setnavigationuivisibility)]
 [!code-vb[FrameNavigationUIVisibilitySnippets\#SetNavigationUIVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/visualbasic/window1.xaml.vb#setnavigationuivisibility)]
 [!code-xml[FrameNavigationUIVisibilitySnippets\#SetNavigationUIVisibility](~/samples/snippets/xaml/VS_Snippets_Wpf/FrameNavigationUIVisibilitySnippets/XAML/Window1.xaml#setnavigationuivisibility)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationUIVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NavigationUIVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NavigationUIVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.NavigationUIVisibility%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビジュアル ツリーのテンプレートの世代が作成されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Controls.Frame.ContentRendered" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.OnContentRendered%2A> は、<xref:System.Windows.Controls.Frame.ContentRendered> イベントを発生させます。  
  
 派生した型 <xref:System.Windows.Controls.Frame> よりも優先 <xref:System.Windows.Controls.Frame.OnContentRendered%2A>します。 オーバーライドされたメソッドを呼び出す必要があります <xref:System.Windows.Controls.Frame.OnContentRendered%2A> 基本クラスの場合は <xref:System.Windows.Controls.Frame.ContentRendered> を発生させる必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成して返します、 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Controls.Frame" />です。</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Controls.Frame" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=fullName>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンテンツを再読み込みします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Refresh%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.RemoveBackEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>背面の履歴から、最新の履歴項目を削除します。</summary>
        <returns>最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> ナビゲーション履歴、1 つを使用する必要がある場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContent">
      <MemberSignature Language="C#" Value="public bool SandboxExternalContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxExternalContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.SandboxExternalContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか、 <see cref="T:System.Windows.Controls.Frame" /> 分離外部 Extensible Application Markup Language (XAML) 部分信頼セキュリティ サンド ボックス内でコンテンツ \(既定の <see langword="Internet " />アクセス許可セット\)。</summary>
        <value>
          <see langword="true" /> コンテンツが、部分信頼セキュリティ サンド ボックス内に分離される場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 外部コンテンツが [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] リソース ファイルまたはコンテンツ ファイルのいずれかとしてアプリケーションに含まれていないコンテンツ \(を参照してください [WPF アプリケーションのリソース、コンテンツ、およびデータ ファイル](http://msdn.microsoft.com/ja-jp/7ad2943b-3961-41d3-8fc6-1582d43f5d99)\)。  
  
 <xref:System.Windows.Controls.Frame.SandboxExternalContent%2A> は `true`, とのコンテンツのソース、 <xref:System.Windows.Controls.Frame> 外部 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイル、コンテンツが既定値に限定されている部分信頼セキュリティ サンド ボックスに読み込まれる `Internet` アクセス許可セットです。 外部のコンテンツは、後で別のプロセスに読み込まれます。 その結果、外部コンテンツは孤立し、リソース ディクショナリなどのアプリケーション スコープのリソースへのアクセス権はありません \(を参照してください <xref:System.Windows.ResourceDictionary>\)。  
  
> [!NOTE]
>  <xref:System.Windows.Controls.Frame> 外部コンテンツのみが含まれる場合、 <xref:System.Windows.Controls.Frame.Source%2A> プロパティに設定されて、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 外部の [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイルです。<xref:System.Windows.Controls.Frame> 使用して提供されるコンテンツ、 <xref:System.Windows.Controls.ContentControl.Content%2A> プロパティは、内部コンテンツと見なされ、その後、分離ではありません。  
  
<a name="dependencyPropertyInfo_FrameSandboxExternalContent"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.SandboxExternalContent%2A>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> アプリケーションが部分信頼で実行するときに設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SandboxExternalContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SandboxExternalContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.SandboxExternalContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Controls.Frame.SandboxExternalContent%2A> 依存関係プロパティの識別子。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContent">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.ShouldSerializeContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスのシリアル化動作を決定する、 <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティです。</summary>
        <returns>
          <see langword="true" /> 場合は、コンテンツがシリアル化する必要があります。それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 Uniform Resource Identifier (URI) の現在のコンテンツまたは URI 現在移動先の新しいコンテンツのです。</summary>
        <value>A <see cref="T:System.Uri" /> を含む、 URI の現在の内容またはコンテンツを移動先します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Source%2A?displayProperty=fullName>」を参照してください。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)] 相対または絶対指定できます。 詳細については、次を参照してください。 [WPF での Pack Uri](http://msdn.microsoft.com/ja-jp/43adb517-21a7-4df3-98e8-09e9cdf764c4)します。  
  
<a name="dependencyPropertyInfo_FrameSource"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Controls.Frame.SourceProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## 例  
 次の例に移動する方法、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] を設定して、 <xref:System.Windows.Controls.Frame.Source%2A> プロパティです。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateToPageSrcCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagesrccode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateToPageSrcCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagesrccode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Frame.SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.Frame.Source" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Frame.StopLoading" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在、ナビゲーション要求のコンテンツのダウンロードを中止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.StopLoading%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.Frame.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Frame.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Windows.Markup.IUriContext.BaseUri" />」を参照してください。</summary>
        <value>基本 URI 現在のコンテキスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Controls.Frame> のインスタンスが <xref:System.Windows.Markup.IUriContext> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Frame.BaseUri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたソースのコンテンツを非同期的に移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>