<Type Name="IDataServiceConfiguration" FullName="System.Data.Services.IDataServiceConfiguration">
  <TypeSignature Language="C#" Value="public interface IDataServiceConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataServiceConfiguration" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.IDataServiceConfiguration" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Data.Services.IDataServiceConfiguration" /> は、エンティティ セットやサービス操作に対する権限、許可された要求に対する制限、既定では探索されない型の登録、エラー処理に対する既定の詳細度など、サービスの動作を設定する目的で WCF Data Services によって使用されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Services.DataService%601> クラスで InitializeService という名前の静的メソッド \(<xref:System.Data.Services.IDataServiceConfiguration> 型の引数を 1 つ受け取り、void を返す\) を実装することによってサービスを構成するときに、この型を使用します。 この構成オブジェクトは、サービスの初期化処理の呼び出しでのみ使用できます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="MaxBatchCount">
      <MemberSignature Language="C#" Value="public int MaxBatchCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBatchCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一括で処理できる要求の最大数を取得します。</summary>
        <value>一括で処理できる要求の最大数を示す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxChangesetCount">
      <MemberSignature Language="C#" Value="public int MaxChangesetCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxChangesetCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一括で処理できる変更セットの最大数を取得します。</summary>
        <value>一括で処理できる変更セットの最大数を示す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxExpandCount">
      <MemberSignature Language="C#" Value="public int MaxExpandCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxExpandCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ サービスに対するすべての要求について、$expand クエリ オプションによって展開できるセグメントの最大数を取得または設定します。</summary>
        <value>展開するセグメントの最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 上限を超えた場合、ステータス コード "400 正しくない要求" が返されます 指定された値が 0 にする必要があり、 `int.MaxValue`。 そうしないと、、 `ArgumentOutOfRangeException` がスローされます。  
  
 次の例のクエリ文字列には 2 つのセグメントがあります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxExpandDepth">
      <MemberSignature Language="C#" Value="public int MaxExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ サービスに対するすべての要求について、単一の <c>$expand</c> パスでサポートされるセグメントの最大数を取得または設定します。</summary>
        <value>
          <c>$expand</c> パスでサポートされるセグメントの最大数を表す整数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 上限を超えた場合、ステータス コード "400 正しくない要求" が返されます 指定された値が 0 にする必要があり、 `int.MaxValue`。 そうしないと、、 `ArgumentOutOfRangeException` がスローされます。  
  
 次のクエリ文字列サンプルには、1 つ目の `$expand` パスに 2 つのセグメントが、2 つ目の `$expand` パスに 1 つのセグメントが存在します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxObjectCountOnInsert">
      <MemberSignature Language="C#" Value="public int MaxObjectCountOnInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxObjectCountOnInsert" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>単一の要求に挿入できるオブジェクトの最大数を取得または設定します。</summary>
        <value>単一の要求に挿入できるオブジェクトの最大数を表す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResultsPerCollection">
      <MemberSignature Language="C#" Value="public int MaxResultsPerCollection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResultsPerCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションあたりの結果の最大数を取得します。</summary>
        <value>コレクションあたりの結果の最大数を示す整数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterKnownType">
      <MemberSignature Language="C#" Value="public void RegisterKnownType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterKnownType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">登録するリソース型。</param>
        <summary>データ サービスで使用されるリソース型を登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEntitySetAccessRule">
      <MemberSignature Language="C#" Value="public void SetEntitySetAccessRule (string name, System.Data.Services.EntitySetRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEntitySetAccessRule(string name, valuetype System.Data.Services.EntitySetRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Data.Services.EntitySetRights" />
      </Parameters>
      <Docs>
        <param name="name">構成したアクセスの対象となるエンティティ セットの名前。</param>
        <param name="rights">エンティティ セットに対して許可される権限。</param>
        <summary>指定されたエンティティ セットのアクセス規則を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の構成では、リソースへのアクセスが拒否されます。 サービスの初期化時にアクセス権を有効にする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetServiceOperationAccessRule">
      <MemberSignature Language="C#" Value="public void SetServiceOperationAccessRule (string name, System.Data.Services.ServiceOperationRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetServiceOperationAccessRule(string name, valuetype System.Data.Services.ServiceOperationRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="rights" Type="System.Data.Services.ServiceOperationRights" />
      </Parameters>
      <Docs>
        <param name="name">アクセス権の設定対象となるサービス操作の名前。</param>
        <param name="rights">許可される権限 \(<see cref="T:System.Data.Services.ServiceOperationRights" /> 列挙体に基づく\)。</param>
        <summary>指定されたサービス操作のアクセス規則を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の構成では、リソースへのアクセスが拒否されます。 サービスの初期化時にアクセス権を有効にする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseVerboseErrors">
      <MemberSignature Language="C#" Value="public bool UseVerboseErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseVerboseErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ サービスからのすべての応答に詳細なエラーを既定で使用するかどうかを取得または設定します。</summary>
        <value>詳細なエラーが返されるかどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバーライドしてデータ サービスの開発者によって指定された要求からの応答をオーバーライドできます、 `HandleException` メソッドです。 セキュリティ上の理由から、詳細なエラーは開発時のみ使用するものとし、運用環境では有効にしないでください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>