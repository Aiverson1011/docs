<Type Name="DataServiceHost" FullName="System.Data.Services.DataServiceHost">
  <TypeSignature Language="C#" Value="public class DataServiceHost : System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceHost extends System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.DataServiceHost" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Web.WebServiceHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>WCF Data Services から派生した <see cref="T:System.ServiceModel.Web.WebServiceHost" /> クラスです。データ サービスをインスタンス化する際に使用されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] are not autonomous server entities. Instead, the service is a component hosted in an environment such as the Windows Communication Foundation \(WCF\) that provides core server networking facilities. Specifically, a service does not bind to and listen on a network socket for incoming requests to its Representational State Transfer \(REST\) entry points. The host handles direct interactions with the network and support caching, scalability, and authentication modules.  
  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. For more information, see [Hosting the Data Service \(WCF Data Services\)](http://msdn.microsoft.com/ja-jp/b48f42ce-22ce-4f8d-8f0d-f7ddac9125ee).  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altCompliant cref="None ." />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">ホストに対して WCF Data Services を関連付けます。</param>
        <param name="baseAddresses">ホストの URI。</param>
        <summary>
          <see cref="T:System.Data.Services.DataServiceHost" /> の WCF Data Services をインスタンス化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] defines a generic hosting interface <xref:System.Data.Services.IDataServiceHost> that abstracts its implementation from a specific host. This allows [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] to run in a range of hosting environments. This interface should not be confused with <xref:System.Data.Services.DataServiceHost>, which instead handles registration and activation for the service. A default <xref:System.Data.Services.IDataServiceHost> is used in this case.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>