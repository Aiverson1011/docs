<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>パック URI オブジェクトを作成および解析するユーティリティ メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" />
        <Parameter Name="secondPackUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">最初のパック URI。</param>
        <param name="secondPackUri">2 番目のパック URI。</param>
        <summary>2 つのパック URI が同等であるかどうかを示す値を返します。</summary>
        <returns>
          <paramref name="firstPackUri" /> と <paramref name="secondPackUri" /> との間のリレーションシップを示す符号付き整数。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> 0 より小さい  
  
 </term>  
<description> <paramref name="firstPackUri" /> は <paramref name="secondPackUri" /> より小さい値です。  
  
 </description>  
</item>  
<item>  
<term> 0  
  
 </term>  
<description> <paramref name="firstPackUri" /> は <paramref name="secondPackUri" /> と同じです。  
  
 </description>  
</item>  
<item>  
<term> 0 より大きい  
  
 </term>  
<description> <paramref name="firstPackUri" /> が <paramref name="secondPackUri" /> より大きくなっています。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 両方 `firstPackUri` と `secondPackUri` は `null`, 、<xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> 0 を返します。 パック Uri を比較するときに null URI は、常に null 以外の URI よりも小さいか。    場合、 `firstPackUri` と `secondPackUri` は両方の絶対パック Uri、 <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> 比較を実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が絶対 URI ではありません。  
  
 または  
  
 <paramref name="firstPackUri" /> または <paramref name="secondPackUri" /> が "pack:\/\/" スキームで始まっていません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">URI 最初の <see cref="T:System.IO.Packaging.PackagePart" />です。</param>
        <param name="secondPartUri">URI 、2 つ目の <see cref="T:System.IO.Packaging.PackagePart" />です。</param>
        <summary>一部 2 つのパッケージかどうかを示す値を返す URI は同等です。</summary>
        <returns>間の関係を示す値 <paramref name="firstPartUri" /> と <paramref name="secondPartUri" />です。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> 0 より小さい  
  
 </term>  
<description> <paramref name="firstPartUri" /> は <paramref name="secondPartUri" /> より小さい値です。  
  
 </description>  
</item>  
<item>  
<term> 0  
  
 </term>  
<description> <paramref name="firstPartUri" /> は <paramref name="secondPartUri" /> と同じです。  
  
 </description>  
</item>  
<item>  
<term> 0 より大きい  
  
 </term>  
<description> <paramref name="firstPartUri" /> が <paramref name="secondPartUri" /> より大きくなっています。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 両方 `firstPartUri` と `secondPartUri` は `null`, 、<xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> 0 を返します。 比較するときに <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri#plural](~/includes/tla2sharptla-urisharpplural-md.md)], 、null [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] は常に null 以外のよりも小さい [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]します。  場合、 `firstPartUri` と `secondPartUri` はどちらも相対 <xref:System.IO.Packaging.PackagePart> Uri、 <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> 比較を実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="firstPartUri" /> または <paramref name="secondPartUri" /> 有効な部分ではない URI 構文です。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいパック URI を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表のサンプル ケースを示しています、 <xref:System.IO.Packaging.PackUriHelper.Create%2A> メソッドです。  
  
|`packageUri`|`partUri`|`fragment`|返されたパック URI|  
|------------------|---------------|----------------|-----------------|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/page1.xaml|\#intro|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/page1.xaml\#intro|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/page2.xaml|**null**|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/page2.xaml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/a\/page4.xaml|**null**|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/a\/page4.xaml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/%41\/%61.xml|**null**|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/A\/a.xml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/%25XY.xml|**null**|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/%25XY.xml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/a\/page5.xaml|\#summary|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/a\/page5.xaml\#summary|  
|http:\/\/www.proseware.com\/packages.aspx?pkg04|\/page1.xaml|\#intro|pack:\/\/http:、および www.proseware.com、packages.aspx%3fpkg04\/page1.xaml\#intro|  
|http:\/\/www.proseware.com\/mypackage.pkg|**null**|**null**|pack:\/\/http:、および www.proseware.com、mypackage.pkg|  
|ftp:\/\/ftp.proseware.com\/packages\/mypackage1.abc|\/a\/mydoc.xaml|**null**|pack:\/\/ftp:、および ftp.proseware.com,packages,mypackage1.abc\/a\/mydoc.xaml|  
|file:\/\/\/d:\/packages\/mypackage2.pkg|\/a\/bar.xaml|\#xref|pack:\/\/file:、、、d:,packages,mypackage2.pkg\/a\/bar.xaml\#xref|  
  
 複数手順のプロセスは、パック URI を作成します。  たとえば、パック URI の構成で 1 つの手順は、のスラッシュ \(\/\) 文字を置き換えるには、 `packageUri` コンマ \(,\) で区切ります。  
  
 文字列変換とは、パック Uri の構成方法の詳細についてを参照してください付録 A.4「文字列の変換例」と「付録 B.3"Pack URI 作成する」でダウンロードできる、Open Packaging Conventions 仕様 [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">参照先の <see cref="T:System.IO.Packaging.Package" /> の URI。</param>
        <summary>パッケージを指す新しいパック URI を作成します。</summary>
        <returns>指定された <paramref name="packageUri" /> によって参照されている <see cref="T:System.IO.Packaging.Package" /> のパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `packageUri` may not be specified as `null` or empty.  
  
 The following table illustrates sample cases for <xref:System.IO.Packaging.PackUriHelper.Create%2A>.  
  
|**parameterReference tag is not supported!!!!**|Returned pack URI|  
|-----------------------------------------------------|-----------------------|  
|http:\/\/www.proseware.com\/mypackage.pkg|pack:\/\/http:,,www.proseware.com,mypackage.pkg|  
|ftp:\/\/ftp.proseware.com\/packages\/mypackage1.abc|pack:\/\/ftp:,,ftp.proseware.com,packages,mypackage1.abc|  
|file:\/\/\/d:\/packages\/mypackage2.pkg|pack:\/\/file:,,,d:,packages,mypackage2.pkg|  
  
 Composing a pack URI is a multi\-step process.  For example, one step in forming a pack URI is to replace the forward slash \(\/\) characters of the **parameterReference tag is not supported!!!!**  
 with commas \(,\).  
  
 For more information on string conversion and how pack URIs are formed, see Appendix A.4 "String Conversion Examples" and Appendix B.3 "Composing a Pack URI" in the Open Packaging Conventions specification available for download at [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## 例  
 The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%2A> method to define a pack URI that references a package.  
  
 [!code-csharp[RightsManagedPackagePublish\#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish\#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> は絶対 URI ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packageUri">
          <see cref="T:System.IO.Packaging.Package" /> の URI。</param>
        <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
        <summary>
          <see cref="T:System.IO.Packaging.Package" />、URI およびパッケージ内にあるパーツの URI が指定されている場合に、パック URI を作成します。</summary>
        <returns>指定された <see cref="T:System.IO.Packaging.PackagePart" /> のパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `packageUri` null または空として指定しない場合があります。  
  
 場合 `partUri` は `null`, 、返されたパッケージの URI は、パッケージをポイントします。  
  
 次の表のサンプル ケースを示しています、 <xref:System.IO.Packaging.PackUriHelper.Create%2A> メソッドです。  
  
|`packageUri`|`partUri`|返されたパック URI|  
|------------------|---------------|-----------------|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/page2.xaml|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/page2.xaml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/a\/page4.xaml|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/a\/page4.xaml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/%41\/%61.xml|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/A\/a.xml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/%25XY.xml|pack:\/\/http:、および www.proseware.com、mypackage.pkg\/%25XY.xml|  
|http:\/\/www.proseware.com\/mypackage.pkg|**null**|pack:\/\/http:、および www.proseware.com、mypackage.pkg|  
|ftp:\/\/ftp.proseware.com\/packages\/mypackage1.abc|\/a\/mydoc.xaml|pack:\/\/ftp:、および ftp.proseware.com,packages,mypackage1.abc\/a\/mydoc.xaml|  
|file:\/\/\/d:\/packages\/mypackage2.pkg|\/a\/bar.xaml|pack:\/\/file:、、、d:,packages,mypackage2.pkg\/a\/bar.xaml|  
  
 複数手順のプロセスは、パック URI を作成します。  たとえば、パック URI の構成で 1 つの手順は、のスラッシュ \(\/\) 文字を置き換えるには、 `packageUri` コンマ \(,\) で区切ります。  
  
 文字列変換とは、パック Uri の構成方法の詳細についてを参照してください付録 A.4「文字列の変換例」と「付録 B.3"Pack URI 作成する」でダウンロードできる、Open Packaging Conventions 仕様 [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> をパッケージのパッケージを参照する URI を定義するためです。  
  
 [!code-csharp[RightsManagedPackagePublish\#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish\#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> 絶対 URI ではありません。  
  
 または  
  
 <paramref name="partUri" /> は有効なパーツ URI 構文ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="fragment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageUri">
          <see cref="T:System.IO.Packaging.Package" /> の URI。</param>
        <param name="partUri">パッケージ内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI。</param>
        <param name="fragment">パッケージ パーツ内の要素を識別する「\#」参照。</param>
        <summary>
          <see cref="T:System.IO.Packaging.Package" /> URI、パッケージ内にあるパーツの URI、および追加する「\#」フラグメントが指定されている場合に、パック URI を作成します。</summary>
        <returns>指定したパッケージ、パッケージ パーツ、およびフラグメントを識別するパック URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `packageUri` may not be specified as `null` or empty.  
  
 If **parameterReference tag is not supported!!!!**  
 is **languageKeyword tag is not supported!!!!**  
, the returned pack URI points to the package.  
  
 `fragment` cannot be an empty string but can be specified as `null`.  When not specified as `null`, the `fragment` string must begin with a '\#' character.  For more information of the syntax of `fragment` references, see Section 3.5 "Fragment" of [RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).  
  
 The following table illustrates sample cases for the <xref:System.IO.Packaging.PackUriHelper.Create%2A> method.  
  
|**parameterReference tag is not supported!!!!**|**parameterReference tag is not supported!!!!**|**parameterReference tag is not supported!!!!**|Returned pack URI|  
|-----------------------------------------------------|-----------------------------------------------------|-----------------------------------------------------|-----------------------|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/page1.xaml|\#intro|pack:\/\/http:,,www.proseware.com,mypackage.pkg\/page1.xaml\#intro|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/page2.xaml|**legacyBold tag is not supported!!!!**|pack:\/\/http:,,www.proseware.com,mypackage.pkg\/page2.xaml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/a\/page4.xaml|**legacyBold tag is not supported!!!!**|pack:\/\/http:,,www.proseware.com,mypackage.pkg\/a\/page4.xaml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/%41\/%61.xml|**legacyBold tag is not supported!!!!**|pack:\/\/http:,,www.proseware.com,mypackage.pkg\/A\/a.xml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/%25XY.xml|**legacyBold tag is not supported!!!!**|pack:\/\/http:,,www.proseware.com,mypackage.pkg\/%25XY.xml|  
|http:\/\/www.proseware.com\/mypackage.pkg|\/a\/page5.xaml|\#summary|pack:\/\/http:,,www.proseware.com,mypackage.pkg\/a\/page5.xaml\#summary|  
|http:\/\/www.proseware.com\/packages.aspx?pkg04|\/page1.xaml|\#intro|pack:\/\/http:,,www.proseware.com,packages.aspx%3fpkg04\/page1.xaml\#intro|  
|http:\/\/www.proseware.com\/mypackage.pkg|**legacyBold tag is not supported!!!!**|**legacyBold tag is not supported!!!!**|pack:\/\/http:,,www.proseware.com,mypackage.pkg|  
|ftp:\/\/ftp.proseware.com\/packages\/mypackage1.abc|\/a\/mydoc.xaml|**legacyBold tag is not supported!!!!**|pack:\/\/ftp:,,ftp.proseware.com,packages,mypackage1.abc\/a\/mydoc.xaml|  
|file:\/\/\/d:\/packages\/mypackage2.pkg|\/a\/bar.xaml|\#xref|pack:\/\/file:,,,d:,packages,mypackage2.pkg\/a\/bar.xaml\#xref|  
  
 Composing a pack URI is a multi\-step process.  For example, one step in forming a pack URI is to replace the forward slash \(\/\) characters of the **parameterReference tag is not supported!!!!**  
 with commas \(,\).  
  
 For more information on string conversion and how pack URIs are formed, see Appendix A.4 "String Conversion Examples" and Appendix B.3 "Composing a Pack URI" in the Open Packaging Conventions specification available for download at [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
   
  
## 例  
 The following example shows how to use the <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29> method to define a pack URI that references a package.  
  
 [!code-csharp[RightsManagedPackagePublish\#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish\#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="packageUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="packageUri" /> は絶対 URI ではありません。  
  
 または  
  
 <paramref name="partUri" /> は有効なパーツ URI 構文ではありません。  
  
 または  
  
 <paramref name="fragment" /> は空であるか、または「\#」で始まっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI、 <see cref="T:System.IO.Packaging.PackagePart" /> 、パッケージ内で。</param>
        <summary>作成、書式設定された <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
        <returns>書式設定された <see cref="T:System.IO.Packaging.PackagePart" /> URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] の <xref:System.IO.Packaging.PackagePart> から参照は常に、 <xref:System.IO.Packaging.Package> ルートです。  
  
 返された <xref:System.IO.Packaging.PackagePart> URI は絶対パスで始まる常にスラッシュ \(\/\) で定義される構文に準拠していると、 [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
 次の表は、のサンプル ケースを示しています。 <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>します。  
  
|`partUri`|返される一部の URI|  
|---------------|-----------------|  
|図 1.jpg|\/picture1.jpg|  
|\/picture2.jpg|\/picture2.jpg|  
|a\/mydoc.xaml|\/a\/mydoc.xaml|  
|\/b\/bar.xaml|\/b\/bar.xaml|  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A> の相対 Uri を定義するため <xref:System.IO.Packaging.PackagePart> 要素。  
  
 [!code-csharp[PackageWrite\#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite\#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <see cref="T:System.IO.Packaging.PackagePart" /> を正規化する URI。</param>
        <summary>指定した正規化形式を返します <see cref="T:System.IO.Packaging.PackagePart" /> URI。</summary>
        <returns>標準化された形式の指定された <paramref name="partUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> 正規化 `partUri` を大文字に大文字変換によって \(<xref:System.String.ToUpperInvariant%2A?displayProperty=fullName>\)、結果を返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">
          <see cref="T:System.IO.Packaging.Package" /> のURI を返すパック URI。</param>
        <summary>指定したパッケージの URI のパッケージ全体を指す内部 URI を返します。</summary>
        <returns>指定した <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.Package" /> の URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表は、のサンプル ケースを示しています。 <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>します。  
  
|`packUri`|返されたパッケージ URI|  
|---------------|-------------------|  
|pack:\/\/http:、および www.proseware.com、mypackage.xyz\/a\/mydoc.xaml|http:\/\/www.proseware.com\/mypackage.xyz|  
|pack:\/\/http:、および www.proseware.com、packages.aspx%3fmypackage\/a\/bar.xaml|http:\/\/www.proseware.com\/packages.aspx?mypackage|  
|pack:\/\/http:、および www.proseware.com、mypackage.pkg|http:\/\/www.proseware.com\/mypackage.pkg|  
|pack:\/\/ftp:、および ftp.proseware.com,packages,mypackage1.abc\/a\/picture.jpg|ftp:\/\/ftp.proseware.com\/packages\/mypackage1.abc|  
|pack:\/\/file:、、、d:,packages,mypackage2.pkg\/a\/bar.xaml|file:\/\/\/d:\/packages\/mypackage2.pkg|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="packUri">
          <see cref="T:System.IO.Packaging.PackagePart" /> URI を返す元のパック URI。</param>
        <summary>指定されたパック URI 内の <see cref="T:System.IO.Packaging.PackagePart" /> の URI を返します。</summary>
        <returns>指定された <paramref name="packUri" /> の <see cref="T:System.IO.Packaging.PackagePart" /> の URI、または <paramref name="packUri" /> が <see cref="T:System.IO.Packaging.PackagePart" /> の代わりのパッケージをポイントする場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返された <xref:System.IO.Packaging.PackagePart> URI は、パッケージのルートに対する相対があり、常に語句で始まる絶対パスは、スラッシュ \(\/\) で定義される構文に準拠していると、 [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
 次の表は、のサンプル ケースを示しています。 <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>します。  
  
|`packUri`|返される一部の URI|  
|---------------|-----------------|  
|pack:\/\/http:、および www.proseware.com、mypackage.xyz\/a\/mydoc.xaml|\/a\/mydoc.xaml|  
|pack:\/\/http:、および www.proseware.com、packages.aspx%3fmypackage\/a\/bar.xaml|\/a\/bar.xaml|  
|pack:\/\/http:、および www.proseware.com、mypackage.pkg|null|  
|pack:\/\/ftp:、および ftp.proseware.com,packages,mypackage1.abc\/a\/picture.jpg|\/a\/picture.jpg|  
|pack:\/\/file:、、、d:,packages,mypackage2.pkg\/a\/bar.xaml|\/a\/bar.xaml|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">
          <see cref="P:System.IO.Packaging.PackagePart.Uri" /> の <see cref="T:System.IO.Packaging.PackagePart" /> を関連付けられた URI を返す <see cref="T:System.IO.Packaging.PackageRelationship" />します。</param>
        <summary>返します。、 URI と指定した関連付けられているリレーションシップ パーツの <see cref="T:System.IO.Packaging.PackagePart" />です。</summary>
        <returns>URI、 <see cref="T:System.IO.Packaging.PackageRelationship" /> パーツに関連付けられている、 <see cref="T:System.IO.Packaging.PackagePart" /> で識別される <paramref name="partUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `partUri` いずれかを識別する必要があります、 <xref:System.IO.Packaging.Package> \(「\/」\) または <xref:System.IO.Packaging.PackagePart> 外にある、 <xref:System.IO.Packaging.PackageRelationship> 部分です。  
  
 詳細については <xref:System.IO.Packaging.PackageRelationship> パーツは、ダウンロード開いてパッケージ規則仕様のセクション 9.3「リレーションシップ」を参照してください [Specifications and License Downloads](http://go.microsoft.com/fwlink/?LinkID=71255)します。  
  
   
  
## 例  
 [WPF におけるパッケージの Uri](http://msdn.microsoft.com/ja-jp/43adb517-21a7-4df3-98e8-09e9cdf764c4)  
  
 [Open Packaging Conventions Specification](http://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> パッケージ パーツの URI の構文が正しくありません。  
  
 または  
  
 <paramref name="partUri" /> 絶対 URI です。  
  
 または  
  
 <paramref name="partUri" /> リレーションシップの一部を参照します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">URI のソースの一部です。</param>
        <param name="targetPartUri">URI ターゲット パーツのです。</param>
        <summary>相対を返す URI 指定した 2 つの間で <see cref="T:System.IO.Packaging.PackagePart" /> URIします。</summary>
        <returns>相対 URI から <paramref name="sourcePartUri" /> に <paramref name="targetPartUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表は、のサンプル ケースを示しています。 <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>します。  
  
|`sourcePartUri`|`targetPartUri`|相対 URI が返されます|  
|---------------------|---------------------|-------------------|  
|\/mydoc\/markup\/page.xml|\/mydoc\/markup\/picture.jpg|picture.jpg|  
|\/mydoc\/markup\/page.xml|\/mydoc\/picture.jpg|..\/picture.jpg|  
|\/mydoc\/markup\/page.xml|\/mydoc\/images\/picture.jpg|..\/images\/picture.jpg|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourcePartUri" /> または <paramref name="targetPartUri" /> が <see langword="null" /> です。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">URI を返すリレーションシップ パーツの <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> からです。</param>
        <summary>返します。、 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> から、 <see cref="T:System.IO.Packaging.PackageRelationship" /> と指定した URIします。</summary>
        <returns>
          <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> の <see cref="T:System.IO.Packaging.PackagePart" /> 、指定されたリレーションシップから <paramref name="relationshipPartUri" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> リレーションシップ パーツのプロパティは、いずれかを識別する必要があります、 <xref:System.IO.Packaging.PackagePart.Package%2A> \(「\/」\) または <xref:System.IO.Packaging.PackagePart> 外にある、 <xref:System.IO.Packaging.PackageRelationship>です。  
  
 たとえば場合、パッケージ パーツ"\/files\/document.xaml"リレーションシップ パーツのソースの所有者は、"\/files\/\_rels\/document.xaml.rels"を呼び出す <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> で、 `relationshipPartUri` のパラメーター"\/files\/\_rels\/document.xaml.rels"を返します、 <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> の"\/files\/document.xaml"です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipPartUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipPartUri" /> 絶対 URIします。  
  
 または  
  
 <paramref name="relationshipPartUri" /> 構文は無効、 <see cref="T:System.IO.Packaging.PackagePart" />です。  
  
 または  
  
 <paramref name="relationshipPartUri" /> リレーションシップの一部を参照していません。  
  
 または  
  
 <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> リレーションシップの一部が参照リレーションシップのもう 1 つの部分 \(無効の解説を参照してください\)。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">URI をチェックする、 <see cref="T:System.IO.Packaging.PackageRelationship" /> 部分です。</param>
        <summary>示す値を返す、指定したかどうか URI は、 URI の <see cref="T:System.IO.Packaging.PackageRelationship" /> 部分です。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="partUri" /> を識別、 <see cref="T:System.IO.Packaging.PackageRelationship" /> 一部。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="partUri" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> 絶対 URIします。  
  
 または  
  
 <paramref name="partUri" /> 無効なは <see cref="T:System.IO.Packaging.PackagePart" /> 構文です。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">ソース パーツの URI またはスラッシュ \(\/\) を指定する、 <see cref="T:System.IO.Packaging.Package" /> ルートです。</param>
        <param name="targetUri">ターゲット パーツへの相対 URI。</param>
        <summary>ソース パーツ URI を指定した URI の一部と URI と相対パスに戻りますターゲット パーツ。</summary>
        <returns>指定した期間、ターゲット パーツの URI が解決した <paramref name="SourcePartUri" /> と <paramref name="targetUri" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表は、のサンプル ケースを示しています。 <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>します。  
  
|`sourcePartUri`|`targetUri`|返された URI|  
|---------------------|-----------------|--------------|  
|\/mydoc\/markup\/page.xml|picture.jpg|\/mydoc\/markup\/picture.jpg|  
|\/mydoc\/markup\/page.xml|images\/picture.jpg|\/mydoc\/markup\/images\/picture.jpg|  
|\/mydoc\/markup\/page.xml|.\/picture.jpg|\/mydoc\/markup\/picture.jpg|  
|\/mydoc\/markup\/page.xml|..\/picture.jpg|\/mydoc\/picture.jpg|  
|\/mydoc\/markup\/page.xml|..\/images\/picture.jpg|\/mydoc\/images\/picture.jpg|  
|\/|images\/picture.jpg|\/images\/picture.jpg|  
  
   
  
## 例  
 <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A> メソッドを使用する方法の例を次に示します。  完全なサンプルを参照してください。 [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034)します。  
  
 [!code-csharp[PackageRead\#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead\#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourcePartUri" /> または <paramref name="targetUri" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourcePartUri" /> 有効な部分では、URI ではありません。  
  
 または  
  
 <paramref name="targetUri" /> 有効な相対 URI ではありません。</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パック URI スキーム名 "pack" を定義します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>