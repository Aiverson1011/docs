<Type Name="PackageDigitalSignatureManager" FullName="System.IO.Packaging.PackageDigitalSignatureManager">
  <TypeSignature Language="C#" Value="public sealed class PackageDigitalSignatureManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PackageDigitalSignatureManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageDigitalSignatureManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーティリティ クラスを作成およびのデジタル署名の検証の提供、 <see cref="T:System.IO.Packaging.Package" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager> アーキテクチャに基づき [!INCLUDE[TLA#tla_netframewk](~/includes/tlasharptla-netframewk-md.md)] デジタル署名は、クラスおよびと共にデジタル署名を使用して一般的なタスクを実行するためのユーティリティ クラスを提供 <xref:System.IO.Packaging.Package> 要素。  
  
 パッケージのデジタル署名の詳細についてで使用可能な Open Packaging Conventions のデジタル署名フレームワーク MSDN の記事を参照してください。 [http:\/\/go.microsoft.com\/fwlink\/?LinkId\=74494](http://go.microsoft.com/fwlink/?LinkId=74494)します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.IO.Packaging.PackageDigitalSignatureManager>です。  完全なサンプルを参照してください。 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.Package" />
    <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
    <altmember cref="T:System.Windows.Xps.Packaging.XpsDigitalSignature" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PackageDigitalSignatureManager (System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="package">この署名マネージャーに関連付けられているパッケージ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.IO.Packaging.PackageDigitalSignatureManager" /> と指定した使用クラスを <see cref="T:System.IO.Packaging.Package" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 署名マネージャーに関連付けられているターゲットのパッケージは、初期化中に設定されます。 設定すると、署名マネージャーに関連付けられているパッケージを変更できません。 必要に応じて各パッケージのマネージャーに新しい署名を作成します。  
  
   
  
## 例  
 次の例は、このコンストラクターを使用する方法を示しています。  完全なサンプルを参照してください。 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="CertificateOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CertificateEmbeddingOption CertificateOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CertificateEmbeddingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パッケージの各パートにデジタル署名するために <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" /> メソッドで使われる X.509 証明書の埋め込みオプションを取得または設定します。</summary>
        <value>
          <see cref="T:System.IO.Packaging.CertificateEmbeddingOption" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property specifies where the signer's X.509 certificate will be stored when digitally signing a part.  
  
   
  
## 例  
 The following example shows how to set this property in preparation to digitally sign the parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザーが選択した X.509 証明書を使用して、パッケージのすべての署名に副署名します。</summary>
        <returns>副署名として追加された署名。証明書が見つからない場合またはユーザーが証明書選択ダイアログをキャンセルした場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If no X.509 certificate is specified in the call, this method opens a certificate selection dialog box that prompts the user to choose a certificate to use for signing.  
  
 Set the window handle in the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> to make the Certificate Selection Dialog modal to the given window.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">副署名として追加する X.509 証明書。</param>
        <summary>パッケージ内のすべての署名に、指定した X.509 証明書で副署名します。</summary>
        <returns>副署名として追加された署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> は <see langword="null" /> です</exception>
      </Docs>
    </Member>
    <Member MemberName="Countersign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;Uri&gt; signatures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Countersign(class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; signatures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="signatures" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="certificate">指定した各 <c>signatures</c> に副署名するための X.509 証明書。</param>
        <param name="signatures">副署名の対象となる署名の一覧。</param>
        <summary>指定した X.509 証明書を使用して、署名の一覧に副署名します。</summary>
        <returns>各 <paramref name="signatures" /> に副署名するために使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="certificate" /> パラメーターまたは <paramref name="signatures" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">パッケージに署名された <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトが含まれていません。</exception>
        <exception cref="T:System.ArgumentException">パッケージに <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> パーツが含まれていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultHashAlgorithm">
      <MemberSignature Language="C#" Value="public static string DefaultHashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultHashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 URI を作成して署名を検証するために使用する既定のハッシュ アルゴリズムを識別する文字列。</summary>
        <value>A URI を作成して署名を検証するために使用する既定のハッシュ アルゴリズムを識別する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 標準の既定のハッシュ アルゴリズム <xref:System.IO.Packaging.PackageDigitalSignatureManager> クラスは <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> \([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]\)。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> プロパティを取得またはこれは作成し、署名の検証に使用する実際のハッシュ アルゴリズムを設定します。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> プロパティは、通常、リセットに使用、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> プロパティは、一時的な変更後の既定の状態にします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature GetSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">URI のデジタル署名を返します。</param>
        <summary>特定の署名のデジタル署名を返します Uniform Resource Identifier (URI)します。</summary>
        <returns>指定されたデジタル署名 <paramref name="signatureUri" />, 、または <see langword="null" /> 場合の署名を指定された <paramref name="signatureUri" /> が見つかりません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 URI の識別子、 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> インスタンスを作成して署名を検証するために使用します。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.Xml.SignedXml" /> URI の識別子、 <see cref="T:System.Security.Cryptography.HashAlgorithm" /> インスタンスを作成して署名を検証するために使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 標準のデジタル署名マネージャーの既定のハッシュ アルゴリズム識別子が <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> \(<xref:System.Security.Cryptography.SHA1>— セキュア ハッシュ アルゴリズム バージョン 1.0\) です。  
  
 セットがそれ以外の場合、このプロパティが明示的と同じ値を取得しない限り、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>です。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> プロパティが既定値から変更通常されません。 異なる正常を使用する署名の場合にのみでアクセス可能なこのプロパティを変更する必要があります <xref:System.Security.Cryptography.HashAlgorithm> が発生しました。  異なるハッシュ アルゴリズムを使用して署名が完了したらを呼び出す <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> をリセットする、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> プロパティを default に戻します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">文字列、 URI 設定するのには <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">文字列、 URI 設定するのには空です。</exception>
        <altmember cref="T:System.Security.Cryptography.Xml.SignedXml" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm" />
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SignatureValue" />
      </Docs>
    </Member>
    <Member MemberName="InvalidSignatureEvent">
      <MemberSignature Language="C#" Value="public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent" />
      <MemberSignature Language="DocId" Value="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.InvalidSignatureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに <see cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" /> に無効な署名が発生しました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パッケージに署名が含まれているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> パッケージに署名が含まれている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> プロパティには、署名の検証は行いません。 署名が存在する場合と <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> は `true`, 、1 つ以上の署名が無効になります。  呼び出す <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> 署名が有効では変更されていないことを確認します。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> プロパティ デジタル署名がパッケージに含まれるかどうかを判断します。  完全なサンプルを参照してください。 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature\#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature\#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、証明書の選択\] ダイアログ ボックスを表示するための親ウィンドウへのハンドルを設定します。</summary>
        <value>使用して証明書の選択\] ダイアログ ボックスを表示する親ウィンドウのハンドル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 証明書の選択\] ダイアログ ボックスが表示されるは、場合にのみ、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> 呼び出しには、証明書がありません。 証明書が指定されていない場合 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> の署名に使用する証明書を選択できるようにする証明書の選択\] ダイアログ ボックスが表示されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllSignatures">
      <MemberSignature Language="C#" Value="public void RemoveAllSignatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllSignatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パッケージからすべてのデジタル署名を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、パッケージからもすべての X.509 証明書を削除します。  すべての署名と証明書を削除した後 <xref:System.IO.Packaging.Package.Flush%2A> ストアへのすべての変更を確定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackageDigitalSignatureManager.Sign" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
        <altmember cref="T:System.IO.Packaging.PackageDigitalSignature" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (Uri signatureUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Uri signatureUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signatureUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signatureUri">削除する URI の <see cref="T:System.IO.Packaging.PackageDigitalSignature" />。</param>
        <summary>指定した署名の Uniform Resource Identifier (URI) と共にデジタル署名を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、その他のデジタル署名で参照されていない場合にも関連付けられた X.509 証明書を削除します。  
  
 署名を削除した後 <xref:System.IO.Packaging.Package.Flush%2A> ストアに変更を保持します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した X.509 証明書を使用して、パッケージ パーツの一覧に署名します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、内のパーツの一覧にデジタル署名する手順、 <xref:System.IO.Packaging.Package>です。  完全なサンプルを参照してください。 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> 要素のUniform Resource Identifier (URI) の一覧。</param>
        <summary>X.509 証明書をユーザーに要求するプロンプトを表示します。この証明書を使用して、指定されたパッケージ パーツの一覧にデジタル署名します。</summary>
        <returns>
          <paramref name="parts" /> の一覧の署名に使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 証明書の選択\] ダイアログを特定のウィンドウをモーダルにするために、設定、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> プロパティを呼び出す前に <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>します。  
  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> 既定の証明書ストアで \[なし\] を使用する必要がある場合、証明書を求めるいないされます。  
  
   
  
## 例  
 次の例では、パッケージの一部の一覧をデジタル署名する方法を示します。  完全なサンプルを参照してください、 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> 要素のUniform Resource Identifier (URI) の一覧。</param>
        <param name="certificate">指定された <c>parts</c> のそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <summary>指定された X.509 証明書を使用してパッケージ パーツの一覧を署名します。</summary>
        <returns>
          <paramref name="parts" /> の指定された一覧に署名するために使用されるデジタル署名、または、証明書が見つからなかった場合や証明書の選択ダイアログ ボックスでユーザーが \[キャンセル\] をクリックした場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例の部分の一覧にデジタル署名では、 <xref:System.IO.Packaging.Package>です。  完全な例については、 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトの Uniform Resource Identifier (URI) の一覧。</param>
        <param name="certificate">指定したパーツおよびリレーションシップのそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <param name="relationshipSelectors">署名する <see cref="T:System.IO.Packaging.PackageRelationship" /> オブジェクトの一覧。</param>
        <summary>指定した X.509 証明書を使用して、パッケージ パーツとパッケージ リレーションシップの一覧に署名します。</summary>
        <returns>
          <paramref name="parts" /> および <paramref name="relationshipSelectors" /> の一覧で指定されている要素への署名に使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 間 `parts` と `relationshipSelectors` に署名するには、少なくとも 1 つの要素が存在する必要があります。  
  
   
  
## 例  
 次の例では、パッケージの一部の一覧をデジタル署名する方法を示します。  完全なサンプルを参照してください、 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parts" /> と <paramref name="relationshipSelectors" /> のいずれによっても、署名するオブジェクトは指定されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトのUniform Resource Identifier (URI) の一覧。</param>
        <param name="certificate">指定したパーツおよびリレーションシップのそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <param name="relationshipSelectors">署名する <see cref="T:System.IO.Packaging.PackageRelationship" /> オブジェクトの一覧。</param>
        <param name="signatureId">署名に関連付ける識別文字列。</param>
        <summary>指定した X.509 証明書と 識別子 \(ID\) を使用して、パッケージ パーツとパッケージ リレーションシップの一覧に署名します。</summary>
        <returns>
          <paramref name="parts" /> および <paramref name="relationshipSelectors" /> の一覧で指定されている要素の署名に使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `parts` \] ボックスの一覧を空にすること、または `null` 場合 `relationshipSelectors` には、少なくとも 1 つのエントリが含まれています。  
  
 `relationshipSelectors` \] ボックスの一覧を空にすること、または `null` 場合 `parts` には、少なくとも 1 つのエントリが含まれています。  
  
 間、 `parts` \] ボックスの一覧と `relationshipSelectors` に署名するには、少なくとも 1 つの要素が存在する必要があります。  
  
   
  
## 例  
 次の例では、パッケージの一部の一覧をデジタル署名する方法を示します。  完全なサンプルを参照してください、 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]
 [!code-vb[PackageDigitalSignature\#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parts" /> と <paramref name="relationshipSelectors" /> のいずれによっても、署名する要素は指定されません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable&lt;Uri&gt; parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt; objectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageDigitalSignature Sign(class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; parts, class System.Security.Cryptography.X509Certificates.X509Certificate certificate, class System.Collections.Generic.IEnumerable`1&lt;class System.IO.Packaging.PackageRelationshipSelector&gt; relationshipSelectors, string signatureId, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.DataObject&gt; signatureObjects, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Cryptography.Xml.Reference&gt; objectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageDigitalSignature</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parts" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        <Parameter Name="relationshipSelectors" Type="System.Collections.Generic.IEnumerable&lt;System.IO.Packaging.PackageRelationshipSelector&gt;" />
        <Parameter Name="signatureId" Type="System.String" />
        <Parameter Name="signatureObjects" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.DataObject&gt;" />
        <Parameter Name="objectReferences" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Cryptography.Xml.Reference&gt;" />
      </Parameters>
      <Docs>
        <param name="parts">署名する <see cref="T:System.IO.Packaging.PackagePart" /> オブジェクトの Uniform Resource Identifier (URI) の一覧。</param>
        <param name="certificate">指定したパーツおよびリレーションシップのそれぞれにデジタル署名するために使用する X.509 証明書。</param>
        <param name="relationshipSelectors">署名する <see cref="T:System.IO.Packaging.PackageRelationship" /> オブジェクトの一覧。</param>
        <param name="signatureId">署名に関連付ける識別文字列。</param>
        <param name="signatureObjects">署名するカスタム データ オブジェクトの一覧。</param>
        <param name="objectReferences">署名するカスタム オブジェクトへの参照の一覧。</param>
        <summary>指定した X.509 証明書および署名の 識別子 \(ID\) を使用して、パッケージ パーツ、パッケージ リレーションシップ、またはカスタム オブジェクトの一覧に署名します。</summary>
        <returns>
          <paramref name="parts" /> および <paramref name="relationshipSelectors" /> の一覧で指定されている要素への署名に使用するデジタル署名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サインインするには、少なくとも 1 つの要素が必要 `parts`, 、`relationshipSelectors`, 、`signatureObjects`, 、または `objectReferences`です。  
  
> [!NOTE]
>  条件 `Object`, 、`Manifest`, 、`Reference`, 、`SignatureProperties`, 、および `Transform` 要素の型と W3C XML 署名の構文および処理の仕様で定義されているタグを参照して 2 つのコメントを次には、「 [http:\/\/www.w3.org\/TR\/xmldsig\-core\/](http://www.w3.org/TR/xmldsig-core/)します。  
  
 このおよびその他の <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> メソッドのオーバー ロードが現在使用して <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> を定義するディクショナリ、 `Transform` パッケージ パーツに基づいて適用 <xref:System.IO.Packaging.PackagePart.ContentType%2A>します。  Microsoft Open Packaging Conventions \(OPC\) 仕様現在では、2 つだけ有効な `Transform` アルゴリズム: C14 と C14N します。  W3c 勧告 『 XML 署名の構文および処理の標準を空にすることはできない `Manifest` タグ。  Open Packaging Conventions 仕様では、また、 <xref:System.IO.Packaging.Package>\-特定 `Object` 両方を含むタグ `Manifest` と `SignatureProperties` タグ。  各 `Manifest` さらにタグを付けるには、少なくとも 1 つ含めることも `Reference` タグ。  これらのタグは、各シグネチャが、少なくとも 1 つで署名を必要と <xref:System.IO.Packaging.PackagePart> \(空でない部分タグ\) または <xref:System.IO.Packaging.PackageRelationship> \(空でない `relationshipSelectors`\) の署名にのみ、署名が必要な場合でも `signatureObjects` または `objectReferences`です。  
  
 これは、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> メソッドは、無視、 <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> プロパティにそれぞれ関連付けられている <xref:System.Security.Cryptography.Xml.Reference> で定義されている `objectReferences`します。  
  
 これは、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> オーバー ロードの生成のためのサポートを提供する [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] ユーザー設定を必要とする署名 `Object` タグ。  提供されたいずれかの `Object` タグ、デジタル署名を対応する `Reference` でタグを指定する必要があります、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] を指定する、 `Object` ローカル フラグメント構文内のタグ。  たとえば場合、 `Object` タグに ID の URI である"myObject"が、 `Reference` タグ"\#myObject"になります。  符号なしオブジェクト、いいえ `Reference` が必要です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="parts" />、<paramref name="relationshipSelectors" />、<paramref name="signatureObjects" />、および <paramref name="objectReferences" /> のいずれによっても、署名する要素は指定されません。</exception>
        <exception cref="T:System.InvalidOperationException">署名されているパーツの <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> が空、<see langword="null" />、または定義されていない <see cref="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" /> を参照しています。</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="signatureId" /> は <see langword="null" /> ではありません。また、有効な XML スキーマ ID \(先頭が数値で始まるなど\) でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureOrigin">
      <MemberSignature Language="C#" Value="public Uri SignatureOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SignatureOrigin" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 Uniform Resource Identifier (URI) 署名元パーツです。</summary>
        <value>URI 署名元パーツです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 名前が正式に定義されていないために、パッケージによって異なることができます。  この実装では、同じ既定値を使用して、一般に、このプロパティによって返される値にどのような基準が既に現在の存在反映されます <xref:System.IO.Packaging.Package>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureOriginRelationshipType">
      <MemberSignature Language="C#" Value="public static string SignatureOriginRelationshipType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string SignatureOriginRelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定の署名元のリレーションシップの種類を取得します。</summary>
        <value>既定の署名元のリレーションシップの種類。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Signatures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt; Signatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Packaging.PackageDigitalSignature&gt; Signatures" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Packaging.PackageDigitalSignature&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パッケージに含まれているすべての署名のコレクションを取得します。</summary>
        <value>すべてのコレクション、 <see cref="T:System.IO.Packaging.PackageDigitalSignature" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeFormat">
      <MemberSignature Language="C#" Value="public string TimeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TimeFormat" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>署名の作成に使用される日付\/時刻形式を取得または <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />です。</summary>
        <value>署名の作成に使用される日付\/時刻形式 <see cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値 <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> は"YYYY MM DDThh:mm:ss.sTZD"です。  
  
 日付\/時刻形式で「W3C の日付\/時刻形式」仕様構文に準拠 [http:\/\/www.w3.org\/TR\/Note\-datetime.html](http://www.w3.org/TR/Note-datetime.html)します。 次に示すコンポーネントが、構文と定義されている区切り記号を使用して、存在する必要があります。  
  
|TimeFormat|説明|例|  
|----------------|--------|-------|  
|YYYY|Year|2005|  
|YYYY\-MM|年と月|2005\-07|  
|YYYY\-MM\-DD|完全な日付|2005\-07\-28|  
|YYYY、MM\-DDThh:mmTZD|完全な日付と時間および分|2005\-07\-28T19:20\-1時 00分|  
|YYYY、MM\-DDThh:mm:ssTZD|完全な日付と時間、分、および秒|2005\-07\-28T19:20:45\-1時 00分|  
|YYYY MM\-DDThh:mm:ss.sTZD|完全な日付と時間、分、および小数を含む \(秒\)|2005\-07\-28T19:20:45.75\-1時 00分|  
  
 それぞれの文字について以下に説明します。  
  
|||  
|-|-|  
|YYYY|4 桁の年 \(たとえば、2005 年\)|  
|MM|2 桁の月 \(01 年 1 月 \=\)|  
|DD|2 桁の日にち \(01 ~ 31\)|  
|Thh|2 桁の時 \(00 ~ 23、24 時間\)|  
|mm|2 桁の分 \(00 ~ 59\)|  
|ss|2 桁の秒 \(00 ~ 59\)|  
|秒|1 秒の小数を表す 1 つ以上の数字|  
|TZD|タイム ゾーン指定子 \(Z または \+ hh:mm または\-hh:mm: mm\)|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Packaging.PackageDigitalSignature.SigningTime" />
      </Docs>
    </Member>
    <Member MemberName="TransformMapping">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,string&gt; TransformMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, string&gt; TransformMapping" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>定義されている各ディクショナリを取得 <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> とそれに関連する XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> 識別子。</summary>
        <value>定義されている各ディクショナリ <see cref="P:System.IO.Packaging.PackagePart.ContentType" /> とそれに関連する XML <see cref="T:System.Security.Cryptography.Xml.Transform" />.<see cref="P:System.Security.Cryptography.Xml.Transform.Algorithm" /> 識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サインイン操作中に各コンテンツ タイプに関連付けられた変換アルゴリズムは、前に適用されます、 <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> を実行します。  
  
 既定のコンテンツと変換のマッピングは次のとおりです。  
  
|Content|ContentType|変換アルゴリズム識別子|  
|-------------|-----------------|-----------------|  
|リレーションシップ|"application\/vnd.openxmlformats\-package.relationships\+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
|デジタル署名|"application\/vnd.openxmlformats\-package.digital\-signature\-xmlsignature\+xml"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyCertificate">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate(class System.Security.Cryptography.X509Certificates.X509Certificate certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509ChainStatusFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
      </Parameters>
      <Docs>
        <param name="certificate">検証する X.509 証明書。</param>
        <summary>指定された X.509 証明書を検証します。</summary>
        <returns>証明書が正しく検証された場合は <see cref="F:System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError" /> \(値 0\)。それ以外の場合は、エラー フラグのビットごとの列挙体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="VerifySignatures">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.Packaging.VerifyResult VerifySignatures(bool exitOnFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.VerifyResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exitOnFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exitOnFailure">最初の失敗で終了する場合は <see langword="true" />。続行してすべての署名をチェックする場合は <see langword="false" />。</param>
        <summary>パッケージ内にあるすべての署名済みパーツの署名を検証します。</summary>
        <returns>すべての署名が正しく検証された場合は <see cref="F:System.IO.Packaging.VerifyResult.Success" /> \(値 0\)。それ以外の場合は、エラーを識別する列挙体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、デジタル署名のみを検証します。関連する X.509 証明書は検証されません。<xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> メソッドは、X.509 証明書を検証するために使用できます。  
  
   
  
## 例  
 次の例では、このメソッドを使用して、パッケージ内のすべての署名部分を検証する方法を示します。  完全なサンプルを参照してください。 [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966)します。  
  
 [!code-csharp[PackageDigitalSignature\#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]
 [!code-vb[PackageDigitalSignature\#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent" />
        <altmember cref="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)" />
        <altmember cref="T:System.IO.Packaging.InvalidSignatureEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Countersign">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>パッケージ内の署名に、指定した X.509 証明書で副署します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>