<Type Name="IParameterInspector" FullName="System.ServiceModel.Dispatcher.IParameterInspector">
  <TypeSignature Language="C#" Value="public interface IParameterInspector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IParameterInspector" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IParameterInspector" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>クライアントまたはサービスでの呼び出しの前および後に情報を検査または変更できるようにする、カスタム パラメーター インスペクターによって実装されるコントラクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアントまたはサービス アプリケーションにおいて、呼び出しの前と後の両方で、呼び出しの内容を表示および変更できるカスタム パラメーター インスペクターを作成するには、<xref:System.ServiceModel.Dispatcher.IParameterInspector> インターフェイスを実装します。  
  
 クライアントからの送信呼び出しの際には、要求コンテンツがシリアル化されてサービスに送信される前に、インスペクターが呼び出されます。 応答が逆シリアル化された後、かつ戻り値がプロキシ メソッドにディスパッチされる前にも、インスペクターが呼び出されます。  
  
 サービスへの受信呼び出しの際には、パラメーターが逆シリアル化された後、かつサービスにディスパッチされる前に、インスペクターが呼び出されます。  
  
 特定の操作のインスペクター コレクションに <xref:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors%2A?displayProperty=fullName> の実装を追加するには、<xref:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors%2A?displayProperty=fullName> プロパティまたは <xref:System.ServiceModel.Dispatcher.IParameterInspector> プロパティを使用します。  
  
 **メモ :** 開発者と管理者は、他の <xref:System.ServiceModel.Dispatcher.IParameterInspector> 実装との対話が認識されることを確実にする必要があります。  
  
   
  
## 例  
 以下の操作を行う <xref:System.ServiceModel.Dispatcher.IParameterInspector> の実装例を、次のコード例に示します。  
  
-   応答がサービスによって逆シリアル化されるか、または要求がクライアントによってシリアル化されたら、操作名と戻り値をコンソールに出力します。  
  
-   クライアント側で応答が逆シリアル化されるか、またはサービス側で応答がシリアル化されたら、操作名をコンソールに出力します。  
  
 [!code-csharp[Interceptors\#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 次のコード例では、<xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName>、<xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName>、または <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName> を使用して、<xref:System.ServiceModel.Dispatcher.IParameterInspector> オブジェクトを挿入する方法を示します。  
  
 [!code-csharp[Interceptors\#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AfterCall">
      <MemberSignature Language="C#" Value="public void AfterCall (string operationName, object[] outputs, object returnValue, object correlationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterCall(string operationName, object[] outputs, object returnValue, object correlationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="outputs" Type="System.Object[]" />
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="correlationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="operationName">呼び出された操作の名前。</param>
        <param name="outputs">出力オブジェクト。</param>
        <param name="returnValue">操作の戻り値。</param>
        <param name="correlationState">
          <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" /> から返された相関状態または <see langword="null" />。</param>
        <summary>クライアントの呼び出しが返された後、サービス応答が送信される前に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアントからの送信呼び出しの際には、要求コンテンツがシリアル化されてサービスに送信される前に、インスペクターが呼び出されます。 応答が逆シリアル化された後、かつ戻り値がプロキシ メソッドにディスパッチされる前にも、インスペクターが呼び出されます。  
  
 サービスへの受信呼び出しの際には、パラメーターが逆シリアル化された後、かつサービスにディスパッチされる前に、インスペクターが呼び出されます。  
  
   
  
## 例  
 以下の操作を行う [AfterCall メソッド \(String, Object\<xref:System.ServiceModel.Dispatcher.IParameterInspector> の実装例を、次のコード例に示します。  
  
-   応答がサービスによって逆シリアル化されるか、または要求がクライアントによってシリアル化されたら、操作名と戻り値をコンソールに出力します。  
  
-   クライアント側で応答が逆シリアル化されるか、またはサービス側で応答がシリアル化されたら、操作名をコンソールに出力します。  
  
 [!code-csharp[Interceptors\#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 次のコード例では、[AfterCall メソッド \(String, Object\<xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName>、[AfterCall メソッド \(String, Object\<xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName>、または [AfterCall メソッド \(String, Object\<xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName> を使用して、[AfterCall メソッド \(String, Object\<xref:System.ServiceModel.Dispatcher.IParameterInspector> オブジェクトを挿入する方法を示します。  
  
 [!code-csharp[Interceptors\#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeCall">
      <MemberSignature Language="C#" Value="public object BeforeCall (string operationName, object[] inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BeforeCall(string operationName, object[] inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationName" Type="System.String" />
        <Parameter Name="inputs" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="operationName">操作の名前。</param>
        <param name="inputs">クライアントからメソッドに渡されたオブジェクト。</param>
        <summary>クライアントの呼び出しが送信される前、かつサービス応答が返された後に呼び出されます。</summary>
        <returns>
          <paramref name="correlationState" /> 内で <see cref="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" /> パラメーターとして返される相関状態。 相関状態を使用しない場合は、<see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアントからの送信呼び出しの際には、要求コンテンツがシリアル化されてサービスに送信される前に、インスペクターが呼び出されます。 応答が逆シリアル化された後、かつ戻り値がプロキシ メソッドにディスパッチされる前にも、インスペクターが呼び出されます。  
  
 サービスへの受信呼び出しでは、要求コンテンツが逆シリアル化されてサービス操作にディスパッチされた後、および応答コンテンツがシリアル化されてクライアントに送信される前に、インスペクターが呼び出されます。  
  
   
  
## 例  
 以下の操作を行う <xref:System.ServiceModel.Dispatcher.IParameterInspector> の実装例を、次のコード例に示します。  
  
-   応答がサービスによって逆シリアル化されるか、または要求がクライアントによってシリアル化されたら、操作名と戻り値をコンソールに出力します。  
  
-   クライアント側で応答が逆シリアル化されるか、またはサービス側で応答がシリアル化されたら、操作名をコンソールに出力します。  
  
 [!code-csharp[Interceptors\#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 次のコード例では、<xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName>、<xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName>、または <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName> を使用して、<xref:System.ServiceModel.Dispatcher.IParameterInspector> オブジェクトを挿入する方法を示します。  
  
 [!code-csharp[Interceptors\#5](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#5)]
 [!code-vb[Interceptors\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>