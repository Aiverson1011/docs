<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>クライアント アプリケーションがチャネルを作成する前に ID 情報を収集するためのユーザー インターフェイスを表示できるようにするメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> インターフェイスを実装し、チャネルを開く前にアプリケーションのユーザーが資格情報を作成または選択できるユーザー インターフェイスを、クライアント アプリケーションが表示できるようにします。  
  
 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を実装するには、<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName> 内で次の手順を実行します。  
  
1.  ユーザーに入力を求めて、適切な <xref:System.Net.NetworkCredential?displayProperty=fullName> を取得します。  
  
2.  <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> オブジェクトに対して、<xref:System.ServiceModel.IClientChannel> 型のパラメーターを引数として <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> メソッドを呼び出したときに返されるコレクションに、カスタムのチャネル パラメーター オブジェクトを追加します。 このチャネル パラメーター オブジェクトをカスタムの <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> で使用して、チャネル用のセキュリティ トークンを確立します。  
  
3.  返します。  
  
 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を挿入するには :  
  
1.  <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=fullName> クラスの <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=fullName> メソッドをオーバーライドします。  
  
2.  そのメソッドで、エンドポイントに <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> が必要かどうかを判定し、必要な場合は、<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=fullName> コレクションに追加します。  
  
 アプリケーション開発者は、挿入された <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を 2 つの方法で利用できます。 クライアント アプリケーションは、いずれかを呼び出すことができます <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> または <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> \(または非同期バージョン\)、チャネルを開く前 \(、 *明示的な* アプローチ\) か、最初の操作を呼び出すだけ \(、 *暗黙的な* アプローチ\) です。  
  
 暗黙的方法を使用する場合、アプリケーションは最初の操作を <xref:System.ServiceModel.ClientBase%601> または <xref:System.ServiceModel.IClientChannel> 拡張に対して呼び出す必要があります。 アプリケーションが最初の操作以外の何かを呼び出した場合、例外がスローされます。  
  
 明示的方法を使用する場合、アプリケーションで次の手順を順番に実行する必要があります。  
  
1.  <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=fullName> または <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=fullName> \(または非同期バージョン\) を呼び出します。  
  
2.  初期化子が返された場合は、<xref:System.ServiceModel.ICommunicationObject.Open%2A> オブジェクトまたは <xref:System.ServiceModel.IClientChannel> プロパティで返された <xref:System.ServiceModel.IClientChannel> オブジェクトの <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=fullName> メソッドを呼び出します。  
  
3.  操作を呼び出します。  
  
 製品品質のアプリケーションで、明示的方法を採用し、ユーザー インターフェイス処理を制御することをお勧めします。  
  
 暗黙的な方法を使用するアプリケーションでは、ユーザー インターフェイス初期化子が呼び出されますが、このアプリケーションのユーザーがバインディングの送信タイムアウト期間内に応答できない場合、ユーザー インターフェイスが復帰すると例外がスローされます。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel">クライアント チャネル。</param>
        <param name="callback">コールバック オブジェクト。</param>
        <param name="state">任意の状態データ。</param>
        <summary>資格情報を取得するユーザー インターフェイスの使用を開始するための非同期呼び出しです。</summary>
        <returns>処理が完了したときにコールバックするために使用される <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を実装するには、<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=fullName> 内で次の手順を実行します。  
  
1.  適当な方法でユーザーに入力を求め、適切な <xref:System.Net.NetworkCredential?displayProperty=fullName> を取得します。  
  
2.  <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=fullName> オブジェクトに対して、<xref:System.ServiceModel.IClientChannel> 型のパラメーターを引数として <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=fullName> メソッドを呼び出したときに返されるコレクションに、カスタムのチャネル パラメーター オブジェクトを追加します。 このチャネル パラメーター オブジェクトをカスタムの <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=fullName> で使用して、チャネル用のセキュリティ トークンを確立します。  
  
3.  返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" />。</param>
        <summary>
          <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> が終了すると、呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>