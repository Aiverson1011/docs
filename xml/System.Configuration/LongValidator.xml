<Type Name="LongValidator" FullName="System.Configuration.LongValidator">
  <TypeSignature Language="C#" Value="public class LongValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LongValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LongValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>検証を提供する <see cref="T:System.Int64" /> 値。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LongValidator> を使用して、 `long` \(64 ビット符号付き整数\) は、特定の条件を満たしています。 インスタンスの検証の基準が確立される、 <xref:System.Configuration.LongValidator> クラスを作成します。<xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%29> コンス トラクターにより、 `long` 検証されている値が最小値、最大長の両方に準拠しています。<xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%29> コンス トラクターは、最小値と最大値の両方をチェック <xref:System.Int64> 検証範囲が排他的かどうかだけでなく、値します。<xref:System.Configuration.LongValidator.%23ctor%28System.Int64%2CSystem.Int64%2CSystem.Boolean%2CSystem.Int64%29> コンス トラクター チェック前の 3 つのパラメーターともチェックするかどうか、 <xref:System.Int64> 値は特定の解像度の値と同じにします。  
  
 <xref:System.Configuration.LongValidator.CanValidate%2A> メソッドでは、予期される型が検証されるオブジェクトの種類に一致するかどうかを判断します。 検証するオブジェクトがのパラメーターとして渡される、 <xref:System.Configuration.LongValidator.Validate%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.LongValidator> 型です。  
  
 [!code-csharp[System.Configuration.LongValidator\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#1)]
 [!code-vb[System.Configuration.LongValidator\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <see cref="T:System.Int64" /> の最小の長さを指定する値、 <see langword="long" /> 値。</param>
        <param name="maxValue">
          <see cref="T:System.Int64" /> の最大長を指定する値、 <see langword="long" /> 値。</param>
        <summary>
          <see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LongValidator.%23ctor%2A> コンス トラクターにより、検証する long 型の値が最小値、最大長の両方に準拠しています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <see cref="T:System.Int64" /> の最小の長さを指定する値、 <see langword="long" /> 値。</param>
        <param name="maxValue">
          <see cref="T:System.Int64" /> の最大長を指定する値、 <see langword="long" /> 値。</param>
        <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> 検証範囲が排他的かどうかを指定する値。</param>
        <summary>
          <see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Configuration.LongValidator.%23ctor%2A> コンス トラクターを使用すると、最小値と最大値の両方をチェック <xref:System.Int64> 検証範囲が排他的かどうかだけでなく、値します。 ときに、 `rangeIsExclusive` にパラメーターが設定されている `true`, 、 <xref:System.Int64> 値がでなければなりません `minValue` と `maxValue`です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.LongValidator.%23ctor%2A> コンス トラクターです。 このコード例が示されている例の一部は、 <xref:System.Configuration.LongValidator> クラスです。  
  
 [!code-csharp[System.Configuration.LongValidator\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#2)]
 [!code-vb[System.Configuration.LongValidator\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LongValidator (long minValue, long maxValue, bool rangeIsExclusive, long resolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 minValue, int64 maxValue, bool rangeIsExclusive, int64 resolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="minValue" Type="System.Int64" />
        <Parameter Name="maxValue" Type="System.Int64" />
        <Parameter Name="rangeIsExclusive" Type="System.Boolean" />
        <Parameter Name="resolution" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="minValue">
          <see cref="T:System.Int64" /> の最小の長さを指定する値、 <see langword="long" /> 値。</param>
        <param name="maxValue">
          <see cref="T:System.Int64" /> の最大長を指定する値、 <see langword="long" /> 値。</param>
        <param name="rangeIsExclusive">A <see cref="T:System.Boolean" /> 検証範囲が排他的かどうかを指定する値。</param>
        <param name="resolution">
          <see cref="T:System.Int64" /> 従う必要がある特定の値を指定する値。</param>
        <summary>
          <see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定した場合、 `resolution`, 、 <xref:System.Int64> 検証に合格するために検証する値がその値と同じにする必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="resolution" /> 以下より <see langword="0" />します。  
  
 または  
  
 <paramref name="maxValue" /> は <paramref name="minValue" /> より小さい値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.CanValidate(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">オブジェクトの型。</param>
        <summary>オブジェクトの型を検証できるかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> 場合、 <paramref name="type" /> パラメーターと一致する、 <see cref="T:System.Int64" /> 値。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例は、<xref:System.Configuration.LongValidator.CanValidate%2A> メソッドの使用方法を示します。 このコード例が示されている例の一部は、 <xref:System.Configuration.LongValidator> クラスです。  
  
 [!code-csharp[System.Configuration.LongValidator\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#3)]
 [!code-vb[System.Configuration.LongValidator\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LongValidator.Validate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">オブジェクトの値。</param>
        <summary>オブジェクトの値が有効かどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LongValidator> クラスを検証するためのルールに含まれる、 <xref:System.Int64> オブジェクトです。 インスタンスには、規則が確立、 <xref:System.Configuration.LongValidator> クラスを作成します。 検証対象のオブジェクトがのパラメーターとして渡される、 <xref:System.Configuration.LongValidator.Validate%2A> メソッドです。  
  
   
  
## 例  
 次のコード例は、<xref:System.Configuration.LongValidator.Validate%2A> メソッドの使用方法を示します。 このコード例が示されている例の一部は、 <xref:System.Configuration.LongValidator> クラスです。  
  
 [!code-csharp[System.Configuration.LongValidator\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.LongValidator/CS/LongValidator.cs#4)]
 [!code-vb[System.Configuration.LongValidator\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.LongValidator/VB/LongValidator.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ConfigurationValidatorBase" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Configuration.LongValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>