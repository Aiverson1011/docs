<Type Name="IdnElement" FullName="System.Configuration.IdnElement">
  <TypeSignature Language="C#" Value="public sealed class IdnElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IdnElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IdnElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>構成設定の国際ドメイン名 \(IDN\) の処理を提供、 <see cref="T:System.Uri" /> クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 既存の <xref:System.Uri?displayProperty=fullName> RFC 3987 に基づいて国際リソース識別子 \(IRI\) のサポートを提供するクラスが拡張されています。 IRI を有効にしない限り、.NET Framework 2.0 の動作から変化は現在のユーザーに表示されません。 これにより、アプリケーション、.NET Framework の以前のバージョンとの互換性。  
  
 構成の設定、 <xref:System.Configuration.IdnElement> によって直接制御される、 <xref:System.Configuration.IriParsingElement> IRI で処理を制御する構成設定、 <xref:System.Uri?displayProperty=fullName> クラスです。 IDN を可能にする処理に IRI 処理を有効にする必要があります。 IRI 処理が無効になっている場合、IDN 処理は既定の設定が .NET Framework 2.0 の動作は、互換性のために使用されており、IDN 名を使用しないに設定されます。  
  
 国際化ドメイン名 \(IDN\) 属性は、IDN 処理だけを制御します。 その他のすべての IRI 処理 \(文字の正規化の例\) は、既定で実行されます。  
  
 構成の設定、 <xref:System.Configuration.IdnElement> 読み込むことが 1 回と最初の <xref:System.Uri?displayProperty=fullName> クラスを構築します。 その後の構成設定の変更は無視されます。  
  
 IRI サポートの詳細については、の「解説」セクションを参照してください、 <xref:System.Uri?displayProperty=fullName> クラスです。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.IriParsingElement" />
    <altmember cref="T:System.Configuration.UriSection" />
    <altmember cref="T:System.Uri" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IdnElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Configuration.IdnElement" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成、 <xref:System.Configuration.IdnElement> インスタンス  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public UriIdnScope Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.UriIdnScope Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IdnElement.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("enabled", DefaultValue=Mono.Cecil.CustomAttributeArgument, Options=System.Configuration.ConfigurationPropertyOptions.IsRequired | System.Configuration.ConfigurationPropertyOptions.IsKey)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UriIdnScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、 <see cref="T:System.Configuration.IdnElement" /> 構成設定。</summary>
        <value>A <see cref="T:System.UriIdnScope" /> IDN 処理の現在の構成設定を含みます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 国際ドメイン名 \(IDN\) 属性は、IDN 処理だけを制御します。 他のすべての国際リソース識別子 \(IRI\) の処理 \(文字の正規化の例\) は、既定で実行されます。  
  
 構成の設定、 <xref:System.Configuration.IdnElement> によって直接制御される、 <xref:System.Configuration.IriParsingElement?displayProperty=fullName> IRI で処理を制御する構成設定、 <xref:System.Uri?displayProperty=fullName> クラスです。 IDN を可能にする処理に IRI 処理を有効にする必要があります。 IRI 処理が無効になっている場合、IDN 処理は既定の設定が .NET Framework 2.0 の動作は、互換性のために使用されており、IDN 名を使用しないに設定されます。  
  
 構成の設定、 <xref:System.Configuration.IdnElement> 読み込むことが 1 回と最初の <xref:System.Uri?displayProperty=fullName> クラスを構築します。 その後の構成設定の変更は無視されます。  
  
 IRI サポートの詳細については、の「解説」セクションを参照してください、 <xref:System.Uri?displayProperty=fullName> クラスです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.IriParsingElement" />
        <altmember cref="T:System.Configuration.UriSection" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IdnElement.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IdnElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>