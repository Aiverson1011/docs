<Type Name="IPersistComponentSettings" FullName="System.Configuration.IPersistComponentSettings">
  <TypeSignature Language="C#" Value="public interface IPersistComponentSettings" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersistComponentSettings" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IPersistComponentSettings" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コントロールまたは格納およびアプリケーションの設定を取得するライブラリの標準的な機能を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生した設定のラッパー クラスを作成することで、アプリケーションにアプリケーション設定のサポートを追加する通常、 <xref:System.Configuration.ApplicationSettingsBase>, 、し、このクラスに特殊なプロパティを追加します。 ただし、このアプローチ十分にカプセル化しないコントロールのアプリケーション設定コンテナーの詳細が隠蔽できるようにします。<xref:System.Configuration.IPersistComponentSettings> インターフェイスには、標準のインターフェイス コントロール、コンポーネント、またはライブラリ モジュールをアプリケーション設定の状態変更要求の通信に使用したアプリケーションが用意されています。 デザイン時ツールは、コントロールおよびコンポーネントを適切に管理するには、このインターフェイスによっても異なります。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="LoadComponentSettings">
      <MemberSignature Language="C#" Value="public void LoadComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定は、対応するプロパティを読み込んで、コントロールの状態を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一般に、 <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> メソッドは 2 つの重要な操作を実行します。  
  
-   呼び出すと、通常のアプリケーション設定のプロパティの値を更新するコントロールに含まれる各アプリケーション設定のインスタンスにより、 <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> メソッドです。  
  
-   必要に応じて、プロパティを再読み込みされたこれらの設定に依存する全般プロパティを更新します。 設定クラスが含まれている場合など、 `location` 設定プロパティ <xref:System.Configuration.IPersistComponentSettings.LoadComponentSettings%2A> ように、コントロールの <xref:System.Windows.Forms.Control.Location%2A> プロパティが更新され、この再読み込みされた設定を反映します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reload" />
      </Docs>
    </Member>
    <Member MemberName="ResetComponentSettings">
      <MemberSignature Language="C#" Value="public void ResetComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定のプロパティを既定値にリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装、 <xref:System.Configuration.IPersistComponentSettings.ResetComponentSettings%2A> メソッドを呼び出す通常、 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> が含まれているアプリケーション設定クラスの各インスタンスのメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="SaveComponentSettings">
      <MemberSignature Language="C#" Value="public void SaveComponentSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveComponentSettings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのアプリケーション設定のプロパティを永続化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> メソッドは、関連するデータ ストアに、コントロールのアプリケーション設定のプロパティの値を書き込みます。 メソッドを使用してデータ ストアとシリアル化技法が各設定クラスに関連付けられている設定プロバイダーによって決定された、 <xref:System.Configuration.SettingsProviderAttribute>です。 使用して設定プロバイダーの選択を変更できる、 <xref:System.Configuration.ISettingsProviderService> インターフェイスです。  
  
> [!NOTE]
>  場合、 <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティは、 `true`, 、コントロールを呼び出す必要があります <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> それ自体の <xref:System.Windows.Forms.Control.Dispose%2A> メソッド コントロールの構成データは、アプリケーションが終了する前に自動的に保存できるようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <altmember cref="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <altmember cref="T:System.Configuration.SettingsProvider" />
        <altmember cref="T:System.Configuration.LocalFileSettingsProvider" />
        <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
        <altmember cref="T:System.Configuration.ISettingsProviderService" />
      </Docs>
    </Member>
    <Member MemberName="SaveSettings">
      <MemberSignature Language="C#" Value="public bool SaveSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールがそのアプリケーションの設定のプロパティに自動的に保持するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> コントロールがその状態が保持される自動的に場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 明示的に呼び出すへの応答でこのデータが保持されます通常コントロールに構成データが含まれている場合、 <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> メソッドまたは暗黙的にも時にコントロールの <xref:System.Windows.Forms.Control.Dispose%2A> メソッドが呼び出されます。<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティが破棄されると、コントロールがその構成データを自動的に保持かどうかを決定します。  
  
 既定値の <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> コントロールの実装に依存します。 コントロールのドキュメントは、アプリケーションの設定を使用しているかどうか、どのようなデータが永続化およびの既定値を示す必要があります、 <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティは使用します。  
  
   
  
## 例  
 次のコード例の値を確認するためのコントロールの適切な方法を示しています、 <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A> プロパティに自動的に構成データを保持しようとします。  
  
 `protected override void Dispose( bool disposing ) {`  
  
 `if(disposing) {`  
  
 `try {`  
  
 `if (SaveSettings) {`  
  
 `SaveComponentSettings();`  
  
 `}`  
  
 `}`  
  
 `finally {`  
  
 `//...`  
  
 `}`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="M:System.Configuration.SettingsBase.Save" />
      </Docs>
    </Member>
    <Member MemberName="SettingsKey">
      <MemberSignature Language="C#" Value="public string SettingsKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingsKey" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールの現在のインスタンスのアプリケーション設定のキーの値を設定します。</summary>
        <value>A <see cref="T:System.String" /> コントロールの現在のインスタンスの設定キーを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> に同一のラッパー クラスの複数のインスタンスがある場合に、アプリケーション設定のプロパティのグループを区別するためのプロパティです。 たとえば、通常は、同じアプリケーションで同じコントロールの複数のインスタンスを配置し、コントロールに関連付けられているラッパー クラスでは、含まれている場合は、ラッパー クラスの複数のインスタンスで発生します。 インスタンスごとの単位で構成データが異なる場合にのみ、設定キーが必要たとえば、動的に配置されているコントロールの位置です。  
  
 次の一般的な規則の使用に適用 <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A>:  
  
-   0 個以上のアプリケーション設定クラスを含めることが、クラスと同様に、コントロールから派生した <xref:System.Configuration.ApplicationSettingsBase>します。 各設定クラスを含む独自 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> プロパティには、そのクラスの複数のインスタンスあいまいさを解決するのに役立ちます。  
  
-   コントロールでは、ごとに異なる設定クラスに、インスタンスごとのデータおよび共有データを区切る必要があります。  
  
-   すべてのインスタンスごとの構成データをコントロールの `get` のアクセサー、 <xref:System.Configuration.IPersistComponentSettings.SettingsKey%2A> プロパティが既定に、 <xref:System.Windows.Forms.Control.Name%2A> コントロールのです。 ほとんどの場合、コントロールの名前は、アプリケーション内で一意になります。 コントロールには、構成データを共有のみが含まれている場合 `get` が既定に `null`します。  
  
-   `set` 設定クラスのインスタンスと共有の構成データを含む識別するためにこのプロパティのアクセサーを実装する必要があります。 インスタンスごとのデータを含む設定クラスごとに `set` に単にパススルーする必要があります、 <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> 設定クラスのプロパティです。 共有データを含む設定クラスの `set` なしの動作を実行設定クラスに対してです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <altmember cref="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
      </Docs>
    </Member>
  </Members>
</Type>