<Type Name="LocalFileSettingsProvider" FullName="System.Configuration.LocalFileSettingsProvider">
  <TypeSignature Language="C#" Value="public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LocalFileSettingsProvider extends System.Configuration.SettingsProvider implements class System.Configuration.IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.LocalFileSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Configuration.IApplicationSettingsProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>アプリケーション設定クラスの持続性を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定プロバイダーは、アプリケーション設定アーキテクチャで使用される構成データを格納するためのメカニズムを定義します。[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 、1 つの既定の設定プロバイダーを含む <xref:System.Configuration.LocalFileSettingsProvider>, 、ローカル ファイル システムに構成データを格納します。 アプリケーション設定のプロパティまたはプロパティのグループを使用すると、特定の設定プロバイダーに関連付けられている、 <xref:System.Configuration.SettingsProviderAttribute>です。  
  
 通常、クライアント プログラムに明示的にアクセスしません。 このクラス代わりに、アプリケーション設定アーキテクチャでは自動的に適切な設定プロバイダーを起動して、そのサービスが必要な場合です。 たとえば、多くのメンバーの <xref:System.Configuration.ApplicationSettingsBase> メソッドに関連する設定プロバイダーへの作業を委任します。  
  
 <xref:System.Configuration.LocalFileSettingsProvider> 拡張子を持つ構成ファイルの設定が引き続き発生する `.config`です。 構成ファイルの内容は、XML ドキュメントとして構成されています。 内の要素として、構成データを格納するかどうか、設定は、アプリケーション レベルまたはユーザー レベルでスコープ、によって、 `<applicationSettings>` または `<userSettings>` グループをそれぞれセクションです。 これらの各セクション グループが、対応するによって表される <xref:System.Configuration.AppSettingsSection> または <xref:System.Configuration.ClientSettingsSection>, 、それぞれします。 セクションの各オブジェクトが所有しており、型のオブジェクトでは、構成セクション ハンドラーによって管理されて <xref:System.Configuration.IConfigurationSectionHandler>します。  
  
 アプリケーション スコープ設定と既定のユーザー スコープ設定はという名前のファイルに格納 `application.exe.config`, 、実行可能ファイルと同じディレクトリに作成されます。 アプリケーションの構成設定とは、読み取り専用です。 特定のユーザー データはという名前のファイルに格納 `user.config`, ユーザーのホーム ディレクトリの下に格納します。 移動プロファイルが有効になっている場合、ユーザー構成ファイルの 2 つのバージョンが存在する場合。 このような場合は、移動のバージョンのエントリは、ローカルのユーザー構成ファイルに重複するエントリに優先します。  
  
 アプリケーション設定の詳細については、次を参照してください。 [Application Settings for Windows Forms](http://msdn.microsoft.com/ja-jp/64090a34-8556-4904-8ea0-20efe9f8c886)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProviderAttribute" />
    <altmember cref="T:System.Configuration.ApplicationScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.UserScopedSettingAttribute" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
    <altmember cref="T:System.Configuration.ClientSettingsSection" />
    <altmember cref="T:System.Configuration.IConfigurationSectionHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalFileSettingsProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Configuration.LocalFileSettingsProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンス トラクターは、設定、 <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> プロパティを <xref:System.String.Empty>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在実行中のアプリケーションの名前を設定します。</summary>
        <value>アプリケーションの表示名を含む文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A> と <xref:System.Configuration.Provider.ProviderBase.Name%2A> プロパティは、同様にさまざまなアプリケーションのプロパティの名前付きの設定を区別するために役立ちます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Provider.ProviderBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> アプリケーション設定のプロパティが使用されていることについて説明します。</param>
        <param name="property">
          <see cref="T:System.Configuration.SettingsProperty" /> 値が返されます。</param>
        <summary>同じアプリケーションの以前のバージョンの名前付きの設定のプロパティの値を返します。</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValue" /> が見つからない場合は、それ以外の場合は、アプリケーションの設定を表す <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion%2A> と共にメソッドが使用される多くの場合、 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> メソッドは、アプリケーションの新しいバージョンのインストール中にアプリケーションの設定を移行するとします。 詳細については、<xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> メソッドを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> 現在のアプリケーションの使用状況を説明します。</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> を取得するのには、値が設定のプロパティ グループを格納しています。</param>
        <summary>指定したアプリケーション インスタンスと設定のプロパティ グループのプロパティの値の設定のコレクションを返します。</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> 指定した設定のプロパティ グループの値を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LocalFileSettingsProvider.GetPropertyValues%2A> メソッドは、特別なアプリケーションの設定の種類も管理 <xref:System.Configuration.SpecialSetting.ConnectionString>します。 接続文字列が要素で区切られた構成ファイルの特別なセクションに格納されている `<connectionstrings>`します。  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> すべての設定を保存するのに暗号化を使用しません。 したがって、プレーン テキストのパスワードや、構成ファイル内の情報を個別に暗号化などの他の対策を講じることがなくこのプロバイダーを使用して他の機密情報を格納しないでいます。 詳細については、「[Encrypting Configuration Information using Protected Configuration](http://msdn.microsoft.com/ja-jp/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープ設定が発生しましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <altmember cref="T:System.Configuration.SpecialSettingAttribute" />
        <altmember cref="P:System.Configuration.SettingsPropertyValue.IsDirty" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">プロバイダーのフレンドリ名。</param>
        <param name="values">このプロバイダーの構成で指定された、プロバイダー固有の属性を表す名前と値のペアのコレクション。</param>
        <summary>プロバイダーを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> 現在のアプリケーションの使用状況を説明します。</param>
        <summary>既定値に指定されたアプリケーションに関連付けられているすべてのアプリケーション設定のプロパティをリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> メソッドが格納される値の指定したアプリケーション設定\] グループを復元します。 アクション <xref:System.Configuration.LocalFileSettingsProvider.Reset%2A> アプリケーション設定のプロパティのスコープによって異なります。  
  
-   アプリケーション スコープ設定は影響しません。  
  
-   ユーザー スコープ設定は、アプリケーション構成ファイルの読み取り専用のエントリとして格納されている既定値にリセットされます `application.exe.config`します。 移動プロファイルを使用している場合は、移動プロファイル内の任意のアプリケーションの設定値が、ローカルのプロファイルで検出された重複部分よりも優先されます。  
  
 移動プロファイルを使用している場合がある 2 つに注目してください。 `user.config` ファイルのローカル設定のいずれか、および移動プロファイルのいずれかです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープ設定が発生しましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。</exception>
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="T:System.Configuration.SettingsManageability" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyValueCollection values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="values" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> 現在のアプリケーションの使用状況を説明します。</param>
        <param name="values">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> を設定するプロパティの設定のグループを表します。</param>
        <summary>指定したプロパティの設定のグループの値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定のラッパー クラスから派生した <xref:System.Configuration.ApplicationSettingsBase>, を含む、 <xref:System.Configuration.ApplicationSettingsBase.Save%2A> すべてその設定のプロパティの値を保持するために呼び出されるメソッド。 このメソッドは、すべての設定を列挙、設定のプロパティの呼び出しと関連付けられているプロバイダー、 <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> メソッドごとに <xref:System.Configuration.SettingsProvider> 、実際のシリアル化操作を実行します。  
  
 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> 適切な設定の対応するアプリケーションに各アプリケーションのユーザー スコープ設定のプロパティを個別にシリアル化 `user.config` 構成ファイル。  
  
 既定では、 <xref:System.Configuration.LocalFileSettingsProvider.SetPropertyValues%2A> メソッドは、次の論理シーケンスを使用して設定プロパティの種類によっては、シリアル化方式を決定します。  
  
1.  型が関連付けられている <xref:System.ComponentModel.TypeConverter> で、 <xref:System.ComponentModel.TypeConverter.ConvertToString%2A> メソッドの実装、この変換を使用します。  
  
2.  XML シリアル化が使用されます。  
  
 ただし、推奨されるシリアル化メカニズムを指定を使用して、 <xref:System.Configuration.SettingsSerializeAsAttribute>です。<xref:System.Configuration.LocalFileSettingsProvider> バイナリ シリアル化をサポートしていません [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]します。  
  
 ユーザー スコープ設定のプロパティは、バックアップを既定値に明示的に設定する場合、ローカル ファイルの設定プロバイダーはユーザー構成ファイルから関連付けられている設定のエントリが削除されます。 このプロパティの次の読み取りアクセス権は、既定値を使用して単純にします。  
  
> [!CAUTION]
>  <xref:System.Configuration.LocalFileSettingsProvider> すべての設定を保存するのに暗号化を使用しません。 したがって、プレーン テキストのパスワードや、構成ファイル内の情報を個別に暗号化などの他の対策を講じることがなくこのプロバイダーを使用して他の機密情報を格納しないでいます。 詳細については、「[Encrypting Configuration Information using Protected Configuration](http://msdn.microsoft.com/ja-jp/51cdfe5b-9d82-458c-94ff-c551c4f38ed1)」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープ設定が発生しましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。  
  
 または  
  
 設定を構成ファイルに保存する一般的なエラーが発生しました。</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Save" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Configuration.SettingsSerializeAsAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> 現在のアプリケーションの使用状況を説明します。</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> を取得するのには、値が設定のプロパティ グループを格納しています。</param>
        <summary>同じアプリケーションの以前のバージョンから以前のユーザー スコープ設定を移行しようとします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.LocalFileSettingsProvider> 別の操作でローカルおよびローミングの設定を移行します。  
  
 <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> に設定するすべてのアプリケーションがあるメソッドを非表示に、 <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> 、またはから派生した、全体の設定ラッパー クラスに適用 <xref:System.Configuration.ApplicationSettingsBase>します。  
  
 このメソッドはこの方法は、アップグレードされるアプリケーションの種類によって異なります。  
  
-   各バージョン、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを自分の別のインストール ディレクトリに保存します。 新しいバージョンの後に、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションがインストールされているし、新しいバージョンが最初に実行時に内部ロジックが自動的に呼び出さ <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> 新しいバージョンに共通のすべてのアプリケーション設定を移行します。 詳細については、「[ClickOnce and Application Settings](http://msdn.microsoft.com/ja-jp/891caba6-faef-4a3c-8f71-60e6fadb60eb)」を参照してください。  
  
-   標準の Windows フォームおよびコンソール アプリケーションを呼び出す必要があります手動で <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>, であるため、このようなアプリケーションを初めて実行場合を判断する、自動の一般的な方法はありません。 2 つの一般的な方法は、インストール プログラムまたは永続化されたプロパティを使用して、アプリケーション自体を使用してから多くの場合のような名前 `IsFirstRun`します。  
  
 いるバージョンについては、新しいアプリケーション設定を移行する、する必要があります可能になって、アプリケーション設定の古いバージョンの読み込みと読み取りに注意してください。 そのため、アプリケーションの新しいおよび以前のバージョンと互換性のあるラッパー クラスを含んでいます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">ユーザー スコープ設定が発生しましたが、現在の構成では、アプリケーション スコープの設定のみがサポートされます。  
  
 または  
  
 構成ファイルの以前のバージョンにアクセスできませんでした。</exception>
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <altmember cref="T:System.Configuration.IApplicationSettingsProvider" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>