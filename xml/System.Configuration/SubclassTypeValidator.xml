<Type Name="SubclassTypeValidator" FullName="System.Configuration.SubclassTypeValidator">
  <TypeSignature Language="C#" Value="public sealed class SubclassTypeValidator : System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SubclassTypeValidator extends System.Configuration.ConfigurationValidatorBase" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.SubclassTypeValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationValidatorBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>オブジェクトが、指定した型の派生クラスであることを検証します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.SubclassTypeValidator> クラスを使用して、オブジェクトが特定の条件を満たしていることを確認します。 インスタンスの検証の基準が確立される、 <xref:System.Configuration.SubclassTypeValidator> クラスを作成します。  
  
 <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> メソッドでは、検証するオブジェクトの型が実際にはかどうかを判断する <xref:System.Type>です。 検証するオブジェクトがのパラメーターとして渡される、 <xref:System.Configuration.SubclassTypeValidator.Validate%2A> メソッドです。 このメソッドを検証するオブジェクトがないことを最初に検証 `null`, 、し、オブジェクトが必要な型の派生クラスであることを確認します。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SubclassTypeValidator (Type baseClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type baseClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseClass" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="baseClass">検証に使用する基本クラスです。</param>
        <summary>
          <see cref="T:System.Configuration.SubclassTypeValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証の基準がに基づいて、 `baseClass` パラメーター。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="baseClass" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanValidate">
      <MemberSignature Language="C#" Value="public override bool CanValidate (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanValidate(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">オブジェクトの型。</param>
        <summary>型に基づいてオブジェクトを検証できるかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> 場合、 <paramref name="type" /> パラメーターが検証済み以外の場合、可能な型と一致する <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.SubclassTypeValidator.CanValidate%2A> メソッドでは、検証するオブジェクトの型が実際にはかどうかを判断する <xref:System.Type>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public override void Validate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Validate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">オブジェクトの値。</param>
        <summary>オブジェクトの値が有効かどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス、 <xref:System.Configuration.SubclassTypeValidator> クラスが作成されると、基本クラスが提供され、評価条件として使用します。 検証対象のオブジェクトがのパラメーターとして渡される、 <xref:System.Configuration.SubclassTypeValidator.Validate%2A> メソッドです。 このメソッドは、基本クラスと、パラメーター オブジェクトの検証チェックを実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> ではありません、 <see cref="T:System.Type" /> から派生できるを <paramref name="baseClass" /> コンス トラクターで定義されています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>