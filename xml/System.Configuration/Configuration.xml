<Type Name="Configuration" FullName="System.Configuration.Configuration">
  <TypeSignature Language="C#" Value="public sealed class Configuration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Configuration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Configuration" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>特定のコンピューター、アプリケーション、またはリソースに適用される構成ファイルを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 構成設定は、構成ファイルの階層に格納されます。<xref:System.Configuration.Configuration> クラスのインスタンスがすべてのコンピューターなどの特定の物理エンティティまたは、アプリケーションまたは Web サイトなどの論理エンティティに適用される構成ファイルから構成設定のマージされたビューを表します。 論理エンティティは、ローカル コンピューターまたはリモート サーバー上に存在します。 構成ファイルについては、次を参照してください。 [Configuration Files](http://msdn.microsoft.com/ja-jp/86bd26d3-737e-4484-9782-19b17f34cd1f) と [ASP.NET Configuration Files](http://msdn.microsoft.com/ja-jp/01505090-9114-41a7-93ca-068e2283ed3d)です。  
  
 特定のエンティティに対する構成ファイルが存在しない場合、 <xref:System.Configuration.Configuration> オブジェクトは、Machine.config ファイルで定義されている既定の構成設定を表します。  
  
 取得できます、 <xref:System.Configuration.Configuration> 次のクラスを使用してオブジェクト。  
  
-   <xref:System.Configuration.ConfigurationManager> クラス、エンティティがクライアント アプリケーションである場合。  
  
-   <xref:System.Web.Configuration.WebConfigurationManager> クラス、エンティティが Web アプリケーションの場合。  
  
 返すメソッドの名前、 <xref:System.Configuration.Configuration> オブジェクトの \[開く\] を開始します。  
  
 構成設定を表す構成ファイルを生成することも、 <xref:System.Configuration.Configuration> オブジェクトです。 そのためには、次のいずれかのメソッドを使用します。  
  
-   呼び出す、 <xref:System.Configuration.Configuration.Save%2A> 、新しい構成ファイルを作成します。  
  
-   呼び出す、 <xref:System.Configuration.Configuration.SaveAs%2A> 別の場所で新しい構成ファイルを生成します。  
  
 構成ファイルを作成するメソッドの名前は、"Save"で始まります。  
  
> [!NOTE]
>  リモート コンピューター上の構成設定へのアクセスを有効にするには、Aspnet\_regiis コマンド ライン ツールを使用します。 このツールの詳細については、「[ASP.NET IIS Registration Tool \(Aspnet\_regiis.exe\)](http://msdn.microsoft.com/ja-jp/6491c41e-e2b0-481f-9863-db3614d5f96b)」を参照してください。 作成して、組み込みのセクションでは、.NET Framework に含まれる以外のカスタム構成設定へのアクセスについてを参照してください <xref:System.Configuration.ConfigurationSection>します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration> 構成ファイル要素にアクセスするクラス。  
  
 [!code-csharp[System.Configuration.Configuration\#31](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#31)]
 [!code-vb[System.Configuration.Configuration\#31](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#31)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>The <see cref="T:System.Configuration.Configuration" /> class provides programmatic access for editing configuration files. You use one of the "Open" methods provided by the <see cref="T:System.Web.Configuration.WebConfigurationManager" /> class for Web applications or by the <see cref="T:System.Configuration.ConfigurationManager" /> class for client applications. These methods return a <see cref="T:System.Configuration.Configuration" /> object, which in turn provides the methods and properties that handle the underlying configuration files. You can access these files for reading or writing configuration information.  
  
 You use the <see cref="M:System.Configuration.Configuration.GetSection(System.String)" /> method or the <see cref="M:System.Configuration.Configuration.GetSectionGroup(System.String)" /> method to read configuration information. Note that the user or process that reads must have the following permissions:  
  
-   Read permission on the configuration file at the current configuration hierarchy level.  
  
-   Read permissions on all the parent configuration files.  
  
 If your application needs read-only access to its own configuration, it is recommended that you use the <see cref="Overload:System.Web.Configuration.WebConfigurationManager.GetSection" /> method overloads for Web applications. For client application, use the <see cref="M:System.Configuration.ConfigurationManager.GetSection(System.String)" /> method.  
  
 These methods provide access to the cached configuration values for the current application, which has better performance than the <see cref="T:System.Configuration.Configuration" /> class.  
  
 <block subset="none" type="note"><para>  
 If you use a static <see langword="GetSection" /> method that takes a path parameter, the path parameter must refer to the application in which the code is running, otherwise the parameter is ignored and configuration information for the currently running application is returned.  
  
</para></block>  
  
 You use one of the <see cref="Overload:System.Configuration.Configuration.Save" /> methods to write configuration information. Note that the user or process that writes must have the following permissions:  
  
-   Write permission on the configuration file and directory at the current configuration hierarchy level.  
  
-   Read permissions on all the configuration files.</para>
    </block>
    <altmember cref="T:System.Configuration.ConfigurationSection" />
    <altmember cref="T:System.Configuration.ConfigurationManager" />
    <altmember cref="T:System.Web.Configuration.WebConfigurationManager" />
  </Docs>
  <Members>
    <Member MemberName="AppSettings">
      <MemberSignature Language="C#" Value="public System.Configuration.AppSettingsSection AppSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.AppSettingsSection AppSettings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.AppSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.AppSettingsSection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Configuration.AppSettingsSection" /> オブジェクトの構成\] セクションに適用される <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Configuration.AppSettingsSection" /> を表すオブジェクト、 <see langword="appSettings" /> これに適用される構成セクション <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Configuration.Configuration.AppSettings%2A> プロパティにアクセスして変更、 `appSettings` 既定では、開いている構成ファイルで定義された構成セクション。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration.AppSettings%2A> プロパティです。  
  
 [!code-csharp[System.Configuration.Configuration\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#5)]
 [!code-vb[System.Configuration.Configuration\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyStringTransformer">
      <MemberSignature Language="C#" Value="public Func&lt;string,string&gt; AssemblyStringTransformer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, string&gt; AssemblyStringTransformer" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.AssemblyStringTransformer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>構成ファイル内のアセンブリの文字列に変換するために使用する関数デリゲートを指定します。</summary>
        <value>変換が文字列を入力するデリゲート。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、構成ファイルで見つかったアセンブリ文字列の変換に使用する関数デリゲートを設定するには、.NET Framework 構成システムのコンシューマーを使用します。[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] .NET Framework の以前のバージョンについて、プロジェクトが対象となる場合は、このプロパティを使用します。 関数は、構成ファイルが更新されるときに、アセンブリの文字列が対象とする .NET Framework のバージョンに正しく書式設定されていることを確認します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionStrings">
      <MemberSignature Language="C#" Value="public System.Configuration.ConnectionStringsSection ConnectionStrings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConnectionStringsSection ConnectionStrings" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.ConnectionStrings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConnectionStringsSection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Configuration.ConnectionStringsSection" /> これに適用する構成セクション オブジェクト <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Configuration.ConnectionStringsSection" /> 構成セクションを表すオブジェクト、 <see langword="connectionStrings" /> これに適用される構成セクション <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Configuration.Configuration.ConnectionStrings%2A> プロパティにアクセスして変更、 `connectionStrings` 、開いている構成ファイルで定義された構成セクション。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration.ConnectionStrings%2A> プロパティです。  
  
 [!code-csharp[System.Configuration.Configuration\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#6)]
 [!code-vb[System.Configuration.Configuration\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationContext">
      <MemberSignature Language="C#" Value="public System.Configuration.ContextInformation EvaluationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ContextInformation EvaluationContext" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.EvaluationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ContextInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Configuration.ContextInformation" /> オブジェクトの <see cref="T:System.Configuration.Configuration" /> オブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Configuration.ContextInformation" /> のオブジェクト、 <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Configuration.ContextInformation> オブジェクトに必要なコンテキストを提供する、 <xref:System.Configuration.Configuration> が評価されるに応答するオブジェクトが基づくです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration.EvaluationContext%2A> プロパティです。  
  
 [!code-csharp[System.Configuration.Configuration\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#7)]
 [!code-vb[System.Configuration.Configuration\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Configuration.ContextInformation" />
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これによって表される、構成ファイルの物理パスを取得 <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <value>これによって表される、構成ファイルへの物理パス <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合はこの値 <xref:System.Configuration.Configuration.FilePath%2A> プロパティがマージされたビューを表すし、アプリケーションの実際のファイルが存在しない、親構成ファイルへのパスが返されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration.FilePath%2A> プロパティです。  
  
 [!code-csharp[System.Configuration.Configuration\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#8)]
 [!code-vb[System.Configuration.Configuration\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSection GetSection (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Configuration.ConfigurationSection GetSection(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.GetSection(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトを返します。</summary>
        <returns>指定した <see cref="T:System.Configuration.ConfigurationSection" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 構成設定は、便宜上のような設定をグループ化したセクション内に格納されます。<xref:System.Configuration.Configuration.GetSection%2A> メソッドは、その名前で構成セクションを取得します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Configuration.Configuration.GetSection%2A> カスタム セクションにアクセスするメソッドです。 完全なサンプル コードの情報を格納するクラスを定義するため、 `CustomSection` セクションを参照してください、 <xref:System.Configuration.Configuration> クラスの概要です。  
  
 [!code-csharp[System.Configuration.Configuration\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#3)]
 [!code-vb[System.Configuration.Configuration\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSectionGroup">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSectionGroup GetSectionGroup (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Configuration.ConfigurationSectionGroup GetSectionGroup(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.GetSectionGroup(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSectionGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionGroupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>指定された取得 <see cref="T:System.Configuration.ConfigurationSectionGroup" /> オブジェクトです。</summary>
        <returns>
          <see cref="T:System.Configuration.ConfigurationSectionGroup" /> 指定します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Configuration.Configuration.GetSectionGroup%2A> メソッドは、固有の仕様を取得する <xref:System.Configuration.ConfigurationSectionGroup> から、 <xref:System.Configuration.Configuration> オブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これによって表されるリソースのファイルが存在するかどうかを示す値を取得 <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <value>
          <see langword="true" /> 構成ファイルがある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.HasFile%2A> プロパティも返します `true` リソースがこのによって表される <xref:System.Configuration.Configuration> オブジェクトは、Web.config ファイルから設定を継承します。  
  
 <xref:System.Configuration.Configuration.HasFile%2A> プロパティを返します。 `false` ときにこの <xref:System.Configuration.Configuration> オブジェクトは場所固有の構成を表します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration.HasFile%2A> プロパティです。  
  
 [!code-csharp[System.Configuration.Configuration\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#9)]
 [!code-vb[System.Configuration.Configuration\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locations">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationLocationCollection Locations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationLocationCollection Locations" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.Locations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationLocationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これで定義されている場所を取得 <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Configuration.ConfigurationLocationCollection" /> この内で定義されている場所を含む <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.Locations%2A> プロパティは適用される場合にのみ、 <xref:System.Configuration.Configuration.HasFile%2A> プロパティを返します。 `true`します。 この構成では、すべての設定を継承するか、場所が定義されていない、空のコレクションが返されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceDeclared">
      <MemberSignature Language="C#" Value="public bool NamespaceDeclared { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NamespaceDeclared" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.NamespaceDeclared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定ファイルに XML 名前空間があるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 構成ファイルに XML 名前空間がある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 構成ファイルが XML ファイルとして書式設定が、XML 名前空間は必要ありません。 この値が場合 `true` 後、 <xref:System.Configuration.Configuration> オブジェクトをオープンし、ファイルには、名前空間の参照が含まれています。 設定されている場合は、 `true` する前に、 <xref:System.Configuration.Configuration> オブジェクトを保存し、名前空間の参照をファイルに追加されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootSectionGroup">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSectionGroup RootSectionGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationSectionGroup RootSectionGroup" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.RootSectionGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSectionGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ルートを取得します <see cref="T:System.Configuration.ConfigurationSectionGroup" /> この <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <value>このルート セクション グループ <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.Save" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが現在の XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.Save%2A> メソッドには、これ以降に変更されている構成の設定が引き続き発生する <xref:System.Configuration.Configuration> オブジェクトが作成されました。 によって表される物理的な場所で、構成ファイルが存在しないかどうか、 <xref:System.Configuration.Configuration.FilePath%2A> プロパティ、新しい構成ファイルが作成されます、継承された構成とは異なる設定が含まれています。  
  
 この構成ファイルが変更された場合 <xref:System.Configuration.Configuration> オブジェクトが作成された、実行時エラーが発生します。  
  
> [!NOTE]
>  構成ファイルの現在のユーザーを含むディレクトリの ACL \(アクセス制御リスト\) で ' Creator Owner' が表示されたときに <xref:System.Configuration.Configuration.Save%2A> ファイルの新しい所有者になり、' Creator Owner' に与えられた権限を継承します。 これにより、現在のユーザーの特権の昇格との以前の所有者の特権が削除されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。  
  
 または  
  
 構成ファイルが変更されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Configuration.ConfigurationSaveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(valuetype System.Configuration.ConfigurationSaveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが現在の XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.Save%2A> メソッドで構成設定が引き続き発生する、 <xref:System.Configuration.Configuration> オブジェクトに基づいて、 `saveMode` パラメーター。  
  
 によって表される物理的な場所で、構成ファイルが存在しないかどうか、 <xref:System.Configuration.Configuration.FilePath%2A> プロパティ、新しい構成ファイルが作成されます、継承された構成とは異なる設定が含まれています。  
  
 この構成ファイルが変更された場合 <xref:System.Configuration.Configuration> オブジェクトが作成された、実行時エラーが発生します。  
  
> [!NOTE]
>  構成ファイルの現在のユーザーを含むディレクトリの ACL \(アクセス制御リスト\) で ' Creator Owner' が表示されたときに <xref:System.Configuration.Configuration.Save%2A> ファイルの新しい所有者になり、' Creator Owner' に与えられた権限を継承します。 これにより、現在のユーザーの特権の昇格との以前の所有者の特権が削除されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration.Save%2A> メソッドをカスタム セクションを保存します。  
  
 [!code-csharp[System.Configuration.Configuration\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#2)]
 [!code-vb[System.Configuration.Configuration\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。  
  
 または  
  
 構成ファイルが変更されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Configuration.ConfigurationSaveMode mode, bool forceUpdateAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(valuetype System.Configuration.ConfigurationSaveMode mode, bool forceUpdateAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
        <Parameter Name="forceSaveAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <param name="forceUpdateAll">To be added.</param>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが現在の XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.Save%2A> メソッドで構成設定が引き続き発生する、 <xref:System.Configuration.Configuration> オブジェクトに基づいて、 `saveMode` と `forceSaveAll` パラメーター。  
  
 によって表される物理的な場所で、構成ファイルが存在しないかどうか、 <xref:System.Configuration.Configuration.FilePath%2A> 、新しい構成ファイルが作成、継承された構成とは異なる設定を格納するプロパティには、.  
  
 この構成ファイルが変更された場合 <xref:System.Configuration.Configuration> オブジェクトが作成された、実行時エラーが発生します。  
  
> [!NOTE]
>  構成ファイルの現在のユーザーを含むディレクトリの ACL \(アクセス制御リスト\) で ' Creator Owner' が表示されたときに <xref:System.Configuration.Configuration.Save%2A> ファイルの新しい所有者になり、' Creator Owner' に与えられた権限を継承します。 これにより、現在のユーザーの特権の昇格との以前の所有者の特権が削除されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。  
  
 または  
  
 構成ファイルが変更されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.SaveAs(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">構成ファイルの保存先のパスとファイル名。</param>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが指定された XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.SaveAs%2A> メソッドには、これ以降に変更されている構成の設定が引き続き発生する <xref:System.Configuration.Configuration> オブジェクトが新しいファイルに作成されました。  
  
 によって表される物理的な場所で、構成ファイルが存在しないかどうかは、  
  
 <xref:System.Configuration.Configuration.FilePath%2A> プロパティには、継承された構成とは異なる設定を格納する新しい構成ファイルは作成する.  
  
 この構成ファイルが変更された場合 <xref:System.Configuration.Configuration> オブジェクトが作成された、実行時エラーが発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。  
  
 または  
  
 構成ファイルが変更されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, valuetype System.Configuration.ConfigurationSaveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
      </Parameters>
      <Docs>
        <param name="filename">構成ファイルの保存先のパスとファイル名。</param>
        <param name="mode">To be added.</param>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが指定された XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.SaveAs%2A> メソッドで構成設定が引き続き発生する、 <xref:System.Configuration.Configuration> を新しいファイルにオブジェクトに基づいて、 `saveMode` パラメーター。  
  
 によって表される物理的な場所で、構成ファイルが存在しないかどうか、 <xref:System.Configuration.Configuration.FilePath%2A> 、新しい構成ファイルが作成、継承された構成とは異なる設定を格納するプロパティには、.  
  
 この構成ファイルが変更された場合 <xref:System.Configuration.Configuration> オブジェクトが作成された、実行時エラーが発生します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">構成ファイルに書き込めませんでした。  
  
 または  
  
 構成ファイルが変更されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, System.Configuration.ConfigurationSaveMode mode, bool forceUpdateAll);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, valuetype System.Configuration.ConfigurationSaveMode mode, bool forceUpdateAll) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="saveMode" Type="System.Configuration.ConfigurationSaveMode" />
        <Parameter Name="forceSaveAll" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">構成ファイルの保存先のパスとファイル名。</param>
        <param name="mode">To be added.</param>
        <param name="forceUpdateAll">To be added.</param>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが指定された XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.Configuration.SaveAs%2A> メソッドで構成設定が引き続き発生する、 <xref:System.Configuration.Configuration> を新しいファイルにオブジェクトに基づいて、 `saveMode` と `forceSaveAll` パラメーター。  
  
 によって表される物理的な場所で、構成ファイルが存在しないかどうか、 <xref:System.Configuration.Configuration.FilePath%2A> プロパティ、新しい構成ファイルが作成されます、継承された構成とは異なる設定が含まれています。  
  
 この構成ファイルが変更された場合 <xref:System.Configuration.Configuration> オブジェクトが作成された、実行時エラーが発生します。  
  
   
  
## 例  
 次のコード例は、<xref:System.Configuration.Configuration.SaveAs%2A> メソッドの使用方法を示します。  
  
 [!code-csharp[System.Configuration.Configuration\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#4)]
 [!code-vb[System.Configuration.Configuration\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="filename" /> null または空の文字列 \(""\) です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SectionGroups">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSectionGroupCollection SectionGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationSectionGroupCollection SectionGroups" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.SectionGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSectionGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この構成によって定義されるセクション グループのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Configuration.ConfigurationSectionGroupCollection" /> コレクションのセクション グループのコレクションを表す <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 構成セクションでは、利便性のためのグループに結合でき、機能を追加します。 アクセス、 <xref:System.Configuration.Configuration.SectionGroups%2A> 取得するプロパティを <xref:System.Configuration.ConfigurationSectionGroupCollection> このセクション グループのコレクションを表すオブジェクト <xref:System.Configuration.Configuration> オブジェクトです。 この場合 <xref:System.Configuration.Configuration> オブジェクトは、継承されたビューを表しているセクション グループのマージされた一覧が返されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Configuration.Configuration.SectionGroups%2A> プロパティです。  
  
 [!code-csharp[System.Configuration.Configuration\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#10)]
 [!code-vb[System.Configuration.Configuration\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sections">
      <MemberSignature Language="C#" Value="public System.Configuration.ConfigurationSectionCollection Sections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationSectionCollection Sections" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.Sections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationSectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これで定義されたセクションのコレクションを取得 <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</summary>
        <value>これで定義されたセクションのコレクション <see cref="T:System.Configuration.Configuration" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセス、 <xref:System.Configuration.Configuration.Sections%2A> 取得するプロパティを <xref:System.Configuration.ConfigurationSectionCollection> このセクションのコレクションを表すオブジェクトを <xref:System.Configuration.Configuration> オブジェクトです。 この場合 <xref:System.Configuration.Configuration> オブジェクトは、マージされた構成を表しているセクションの結合されたリストが返されます。  
  
   
  
## 例  
 次の例は、取得する方法を示します、 <xref:System.Configuration.Configuration.Sections%2A> プロパティの値をコレクション内のセクションでは、数を表示します。  
  
 [!code-csharp[System.Configuration.Configuration\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Configuration.Configuration/CS/Configuration.cs#11)]
 [!code-vb[System.Configuration.Configuration\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Configuration.Configuration/VB/Configuration.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetFramework">
      <MemberSignature Language="C#" Value="public System.Runtime.Versioning.FrameworkName TargetFramework { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Versioning.FrameworkName TargetFramework" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.TargetFramework" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Versioning.FrameworkName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バージョン以前現在のものが対象となる場合は、.NET Framework の対象となるバージョンを指定します。</summary>
        <value>.NET Framework の対象バージョンの名前。 既定値は <see langword="null" />, 、現在のバージョンが対象になっていることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 構成システムには、xml 構成オブジェクトの階層がシリアル化、このプロパティの値がチェックされます。 プロパティがない場合 `null`, 、構成システムは、各構成セクション グループおよび構成セクションのバージョン チェックを実行します。 構成システムでは、バージョン間で変更とマークされている個々 の構成プロパティのバージョンのチェックも実行します。 \(詳細については、「<xref:System.Configuration.ConfigurationPropertyOptions>」を参照してください\)。 構成システムでは、構成要素の構成セクションのバージョンのチェックも実行します。  
  
 このプロパティの値が場合 `null`, 、構成システムでは、シリアル化中には、バージョン チェックは行いません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeStringTransformer">
      <MemberSignature Language="C#" Value="public Func&lt;string,string&gt; TypeStringTransformer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`2&lt;string, string&gt; TypeStringTransformer" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Configuration.TypeStringTransformer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>構成ファイル内の型の文字列に変換するために使用する関数デリゲートを指定します。</summary>
        <value>変換が文字列を入力するデリゲート。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、構成ファイルで見つかった型文字列の変換に使用する関数デリゲートを設定するには、.NET Framework 構成システムのコンシューマーを使用します。[!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] .NET Framework の以前のバージョンについて、プロジェクトが対象となる場合は、このプロパティを使用します。 関数は、構成ファイルが更新されるときに、型の文字列が対象とする .NET Framework のバージョンに正しく書式設定されていることを確認します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveAs">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが指定された XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>これに含まれる構成設定を書き込みます <see cref="T:System.Configuration.Configuration" /> オブジェクトが現在の XML 構成ファイルにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>