<Type Name="IApplicationSettingsProvider" FullName="System.Configuration.IApplicationSettingsProvider">
  <TypeSignature Language="C#" Value="public interface IApplicationSettingsProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IApplicationSettingsProvider" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.IApplicationSettingsProvider" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>クライアント ベースのアプリケーション設定プロバイダーの拡張機能を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーション設定アーキテクチャから派生したクラスであるカスタム設定プロバイダーを作成することでアプリケーションの設定のカスタム ストレージ機構を提供することができます <xref:System.Configuration.SettingsProvider>します。 このようなクラスには、格納、およびプロパティを取得するための基本的な機能が含まれています。 ただし、実装することによって追加の標準的な機能を追加することができます、 <xref:System.Configuration.IApplicationSettingsProvider> カスタム設定プロバイダーのインターフェイスです。 このインターフェイスには、主に設定プロバイダーをよりインテリジェントなアプリケーションのバージョン変更処理が有効にする 3 つのメソッドが含まれています。 通常、設定プロバイダーでは、次の状況を予測するとは別に、アプリケーションの異なるバージョンのアプリケーション設定を保存します。  
  
-   アプリケーションの異なるバージョンのサイド バイ サイド実行します。  
  
-   アプリケーションをアップグレードする場合は、アプリケーションの設定を保持します。  
  
-   アプリケーションの設定を現在使用されているバージョンの既定値にリセットしています。  
  
 <xref:System.Configuration.LocalFileSettingsProvider> クラスは、<xref:System.Configuration.IApplicationSettingsProvider> インターフェイスを実装します。 同じ一連のメソッドに含まれる <xref:System.Configuration.IApplicationSettingsProvider> にも存在、 <xref:System.Configuration.ApplicationSettingsBase> にアプリケーション設定のラッパーと設定プロバイダーとの間での定義済みの通信チャネルを確立するクラス。  
  
> [!NOTE]
>  このインターフェイスはオプションです。 プロバイダーがこのインターフェイスを実装していない場合のこのインターフェイスで定義されているメソッドにアクセスしようとすると通知されることがなく設定インフラストラクチャは失敗します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Configuration.SettingsProvider" />
    <altmember cref="T:System.Configuration.ApplicationSettingsBase" />
  </Docs>
  <Members>
    <Member MemberName="GetPreviousVersion">
      <MemberSignature Language="C#" Value="public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Configuration.SettingsPropertyValue GetPreviousVersion(class System.Configuration.SettingsContext context, class System.Configuration.SettingsProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="property" Type="System.Configuration.SettingsProperty" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> 現在のアプリケーションの使用状況を説明します。</param>
        <param name="property">
          <see cref="T:System.Configuration.SettingsProperty" /> 値が返されます。</param>
        <summary>同じアプリケーションの以前のバージョンの指定した設定のプロパティの値を返します。</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValue" /> 最後に、アプリケーションの以前のバージョンで設定された、指定したプロパティの設定の値を含むまたは <see langword="null" /> 設定が見つからない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> メソッドと組み合わせて、 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> 中またはアプリケーションの新しいバージョンのインストール後に、アプリケーションの設定を移行する方法です。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Configuration.SettingsContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class System.Configuration.SettingsContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> 現在のアプリケーションの使用状況を説明します。</param>
        <summary>既定値に指定されたアプリケーションに関連付けられているアプリケーションの設定をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A> メソッドが格納される値の指定したアプリケーション設定\] グループを再初期化します。 これに対し、 <xref:System.Configuration.DefaultSettingValueAttribute> 格納されている値が存在しない場合、プロパティの初期化中に 1 つの設定のプロパティの既定値を提供します。  
  
 設定プロバイダーでは、適切な既定値が、アプリケーション設定の指定したグループを決定します。 実装など <xref:System.Configuration.LocalFileSettingsProvider> で共有値にユーザー スコープ設定をリセット、 `application.exe.config` ; これに対し、アプリケーション スコープ設定を変更せずになります。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</permission>
        <altmember cref="T:System.Configuration.DefaultSettingValueAttribute" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Upgrade">
      <MemberSignature Language="C#" Value="public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Upgrade(class System.Configuration.SettingsContext context, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> 現在のアプリケーションの使用状況を説明します。</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> を取得するのには、値が設定のプロパティ グループを格納しています。</param>
        <summary>プロバイダーにアプリケーションをアップグレードすることを示します。 これは、プロバイダーに、必要に応じて、保存されている設定をアップグレードする機会を提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework には、同じアプリケーションの異なるバージョンのサイド バイ サイド インストールと実行ができます。 アプリケーションの設定プロバイダーでは、分離するとは別に、アプリケーションの各バージョンのアプリケーション設定を格納します。 ただし、現在の 1 つに、アプリケーションの以前のバージョンからの設定を移行する場合があります。 この移行機能を提供するには、 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> から派生したクラスで実装されたメソッド <xref:System.Configuration.SettingsProvider>します。  
  
 使用することができます、 <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A> メソッドと組み合わせて、 <xref:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion%2A> 中またはアプリケーションの新しいバージョンのインストール後に、アプリケーションの設定を移行する方法です。  
  
 すべてのアプリケーションを設定するには、このメソッドを抑制するか、 <xref:System.Configuration.NoSettingsVersionUpgradeAttribute> 、またはから派生した、全体の設定ラッパー クラスに適用 <xref:System.Configuration.ApplicationSettingsBase>します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityException">For <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /> permission.</permission>
        <altmember cref="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <altmember cref="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <altmember cref="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>