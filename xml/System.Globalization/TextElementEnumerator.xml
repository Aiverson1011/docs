<Type Name="TextElementEnumerator" FullName="System.Globalization.TextElementEnumerator">
  <TypeSignature Language="C#" Value="public class TextElementEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TextElementEnumerator extends System.Object implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.TextElementEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>文字列のテキスト要素を列挙します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 .NET Framework では、単一の文字、つまり、書記素として表示されるテキストの単位としてテキスト要素を定義します。 テキスト要素には、次のいずれかを指定できます。  
  
-   1 つとして表される基本文字 <xref:System.Char> 値。 LATIN CAPITAL などの文字 \(u\+0041\) および LATIN SMALL 文字 AE \(U \+ 00E6\) は基本文字です。  
  
-   組み合わせ文字のシーケンスで、基本文字と 1 つまたは複数の組み合わせの文字で構成されます。 たとえば、例では、\(u\+0041\) が続く結合抑 LATIN CAPITAL LETTER \(U \+ 0304\) 組み合わせは、文字のシーケンス。  
  
-   サロゲート ペアをする、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) 、一連の 2 つのコード単位で構成される単一の抽象文字のコード化文字表現として定義: 上位サロゲートと下位サロゲート。 サロゲート ペアが使用され、utf\-8 でエンコードされた文字として Unicode 基本多言語面以外の文字を表します。 たとえば、ゴシック文字 SAUIL \(U \+ 10343\) は utf\-8 エンコーディングの値が 0xD800 高代理キーと値が 0xDF43 下位サロゲートとして表されます。 サロゲート ペアは、基本文字または組み合わせの文字を表すことができます。  
  
 <xref:System.Globalization.TextElementEnumerator> クラスでは、1 つではなく、文字列内のテキスト要素で作業できます。 <xref:System.Char> オブジェクトです。  
  
 インスタンス化する、 <xref:System.Globalization.TextElementEnumerator> に文字列を渡すことによって、特定の文字列を表すオブジェクト、 <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=fullName> メソッドです。 これは、文字列内の最初のテキスト要素の前に位置している列挙子を返します。 呼び出す、 <xref:System.Globalization.TextElementEnumerator.Reset%2A> メソッドがこの位置に戻さも、列挙子を表示します。 これを表すため、無効な状態を呼び出す必要があります <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> の値を読み取る前に、文字列の最初のテキスト要素を列挙子を進める、 <xref:System.Globalization.TextElementEnumerator.Current%2A> を現在のテキスト要素を返すプロパティ。  
  
 使用する場合、 <xref:System.Globalization.TextElementEnumerator> オブジェクトの列挙子の位置を担当します。<xref:System.Globalization.TextElementEnumerator.Current%2A> プロパティは、いずれかが呼び出されるまでに、同じテキスト要素を返します <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> または <xref:System.Globalization.TextElementEnumerator.Reset%2A>です。 文字列の最後のテキスト要素の前後のテキストの最初の要素に配置されている場合、列挙子は無効な状態です。 列挙子が無効な状態のときは、値を取得しようとすると、 <xref:System.Globalization.TextElementEnumerator.Current%2A> プロパティは例外をスローします。 テストして、列挙子は、無効な状態かどうかを判断できるかどうかの戻り値、 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> プロパティは `false`です。  
  
 <xref:System.Globalization.TextElementEnumerator> オブジェクトが文字列変数または現時点でリテラル文字列の現在の状態のスナップショットを表しますが、 <xref:System.Globalization.TextElementEnumerator> オブジェクトをインスタンス化します。 次の点に注意してください。  
  
-   テキスト要素の列挙子は、文字列内のデータの読み取りのみ使用できます。 基になる文字列を変更することはできません。  
  
-   列挙子には、それが表す文字列への排他アクセスがありません。 列挙子を作成した後、文字列変数を変更できます。  
  
-   A <xref:System.Globalization.TextElementEnumerator> オブジェクト、テキスト要素を列挙時に、文字列内に存在する、 <xref:System.Globalization.TextElementEnumerator> オブジェクトをインスタンス化します。 その変数が終わった後で変更された場合、その後の文字列変数の変更は反映されません。  
  
-   <xref:System.Globalization.TextElementEnumerator> クラスでオーバーライドしない <xref:System.Object.Equals%2A?displayProperty=fullName>, 、2 つ <xref:System.Globalization.TextElementEnumerator> 同じ文字列を表すオブジェクトと等しくない見なされます。  
  
   
  
## 例  
 次の例では、 <xref:System.Globalization.TextElementEnumerator> 文字列のテキスト要素を列挙するクラス。  
  
 [!code-cpp[System.Globalization.TextElementEnumerator.Summary\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CPP/tee_summary.cpp#1)]
 [!code-csharp[System.Globalization.TextElementEnumerator.Summary\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/CS/tee_summary.cs#1)]
 [!code-vb[System.Globalization.TextElementEnumerator.Summary\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.TextElementEnumerator.Summary/VB/tee_summary.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.StringInfo" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列内の現在のテキスト要素を取得します。</summary>
        <value>文字列内の現在のテキスト要素を格納しているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子を作成した後、または後に、 <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されると、 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> の値を読み取る前に、文字列の最初のテキスト要素を列挙子を進めるに呼び出す必要があります <xref:System.Globalization.TextElementEnumerator.Current%2A>します。 それ以外の場合、 <xref:System.Globalization.TextElementEnumerator.Current%2A> は定義されていません。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> 最後の呼び出しの場合も、例外をスロー <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 返される `false`, 、文字列の末尾を示します。  
  
 <xref:System.Globalization.TextElementEnumerator.Current%2A> 連続して呼び出すと、列挙子の位置を移動しません <xref:System.Globalization.TextElementEnumerator.Current%2A> まで同じオブジェクトが返されます <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> または <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、テキストの最後の要素の前後に、文字列の最初のテキスト要素の前に位置付けられます。</exception>
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="ElementIndex">
      <MemberSignature Language="C#" Value="public int ElementIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementIndex" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列挙子が現在位置しているテキスト要素のインデックスを取得します。</summary>
        <value>列挙子が現在位置しているテキスト要素のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、テキストの最後の要素の前後に、文字列の最初のテキスト要素の前に位置付けられます。</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      </Docs>
    </Member>
    <Member MemberName="GetTextElement">
      <MemberSignature Language="C#" Value="public string GetTextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.GetTextElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>文字列内の現在のテキスト要素を取得します。</summary>
        <returns>読み取る文字列の現在のテキスト要素を格納している新しい文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻ると同じテキスト要素、 <xref:System.Globalization.TextElementEnumerator.Current%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">列挙子は、テキストの最後の要素の前後に、文字列の最初のテキスト要素の前に位置付けられます。</exception>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.ElementIndex" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.MoveNext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を文字列の次のテキスト要素に進めます。</summary>
        <returns>
          <see langword="true" /> 列挙子は、次のテキスト要素に正常に進んだ場合 <see langword="false" /> 、列挙子が文字列の末尾を越えた場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列挙子を作成した後、または後に、 <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されると、列挙子が、文字列、および最初の呼び出しの最初のテキスト要素の前に位置 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 、列挙子を文字列の最初のテキスト要素の上に移動します。  
  
 この列挙子が作成された後に、文字列が変更された場合 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 例外をスローします。  
  
 文字列の末尾が渡されると、以降の呼び出しの後 <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 返す `false` まで <xref:System.Globalization.TextElementEnumerator.Reset%2A> が呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
        <altmember cref="M:System.Globalization.TextElementEnumerator.Reset" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.TextElementEnumerator.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>列挙子を初期位置、つまり文字列の最初のテキスト要素の前に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.TextElementEnumerator.Reset%2A> メソッドは、最初のテキスト要素の前に、文字列の先頭に、列挙子を移動します。 呼び出した後 <xref:System.Globalization.TextElementEnumerator.Reset%2A>, 、呼び出す必要があります <xref:System.Globalization.TextElementEnumerator.MoveNext%2A> 列挙子を呼び出す前に文字列の最初のテキスト要素に進める <xref:System.Globalization.TextElementEnumerator.Current%2A> テキストの最初の要素の値を読み取ることです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.TextElementEnumerator.MoveNext" />
        <altmember cref="P:System.Globalization.TextElementEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>