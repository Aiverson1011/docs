<Type Name="HebrewCalendar" FullName="System.Globalization.HebrewCalendar">
  <TypeSignature Language="C#" Value="public class HebrewCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HebrewCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.HebrewCalendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ヘブライ暦を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ヘブライ暦は、2 つの時代 \(年号\) を認識しますほか、。 \(一般的な時代 \(年号\)\) の前に、a. m.\(ラテン"Anno Mundi"、「世界の年」を意味する\)。 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、現在の時代 \(午前\) およびヘブライ語年 5999 に 5343 \(1583年に 2239 グレゴリオ暦\) を認識します。  
  
> [!NOTE]
>  使用方法について、 <xref:System.Globalization.HebrewCalendar> クラスと、その他の .NET Framework のクラスを予定表を参照してください [Working with Calendars](http://msdn.microsoft.com/ja-jp/0c1534e5-979b-4c8a-a588-1c24301aefb3)します。  
  
 19、第 3、6、8 日、11、14 で割り切れる年で終わるすべての 19 年間サイクルでは、17 ~ 19 年がうるう年でした。 一般的な年は、休日の配置に応じて 355 の日に 353 からができます。 日数 383 閏年ことができます。  
  
 ヘブライ暦では、平年と閏年 13 か月間の 12 か月があります。  
  
|GetMonth 値 \(一般的な年\)|GetMonth 値 \(うるう年\)|月|平年の日数|閏年の日数|  
|--------------------------|-------------------------|-------|-----------|-----------|  
|1|1|תשרי \(Tishrei\)|30|30|  
|2|2|חשון \(Cheshvan\)|29\/30|29\/30|  
|3|3|כסלו \(Kislev\)|29\/30|29\/30|  
|4|4|טבת \(Tevet\)|29|29|  
|5|5|שבט \(Shevat\)|30|30|  
|6|\-|אדר \(たとえば\)|29|\-|  
|\-|6|אדר א \(たとえば Alef\)|\-|30|  
|\-|7|אדר ב \(では\)|\-|29|  
|7|9|ניסן \(同社\)|30|30|  
|9|9|אייר \(Iyar\)|29|29|  
|9|10|סיון \(Sivan\)|30|30|  
|10|11|תמוז \(Tamuz\)|29|29|  
|11|12|אב \(Av\)|30|30|  
|12|13|אלול \(Elul\)|29|29|  
  
 Cheshvan と Kislev の日付は、休日の配置によって異なります。 閏年では、たとえばに置き換えられますで Alef によって 30 日間とでは 29 日。 たとえば Alef は閏月と見なされます。 たとえば Alef とで日と見なされるすべての最終日 leap 日です。つまり、 <xref:System.Globalization.HebrewCalendar.IsLeapDay%2A> メソッドを返します。 `true` 曜日です。  
  
 グレゴリオ暦での紀元後 2001 年 1 月 1 日は 5761 ヘブライ語のカレンダーにおける年の Tevet の 6 番目の日付に相当します。  
  
 各 <xref:System.Globalization.CultureInfo> 予定表のセットをサポートします。<xref:System.Globalization.CultureInfo.Calendar%2A> プロパティは、カルチャの既定のカレンダーを返しますと <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> プロパティは、カルチャでサポートされるすべてのカレンダーの配列を返します。 使用する暦を変更する、 <xref:System.Globalization.CultureInfo>, 、アプリケーションを設定する必要があります、 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> の <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> を新しい <xref:System.Globalization.Calendar>します。  
  
   
  
## 例  
 次の例でサポートされている日付の範囲を含むファイルを作成、 <xref:System.Globalization.HebrewCalendar> クラス、および 5772 の年の毎月の日の数を表示します。  
  
 [!code-csharp[System.Globalization.HebrewCalendar.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.hebrewcalendar.class/cs/example1.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.hebrewcalendar.class/vb/example1.vb#1)]  
  
 The example instantiates a <xref:System.Globalization.HebrewCalendar> object and makes it the current calendar of a Hebrew \(Israel\) <xref:System.Globalization.CultureInfo> object. It then makes Hebrew \(Israel\) the current thread culture. This causes the common language runtime to interpret all dates and times in relation to the Hebrew calendar.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HebrewCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Globalization.HebrewCalendar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> を追加する <c>months</c>です。</param>
        <param name="months">追加するには、数か月の数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> 指定から、指定された月数だけは <see cref="T:System.DateTime" />です。</summary>
        <returns>
          <see cref="T:System.DateTime" /> を指定された、指定した月数を加算した結果を <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
 結果の日の部分 <xref:System.DateTime> 結果として得られる日が結果の年の月の有効な日ではない場合に影響します。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果の年の部分 <xref:System.DateTime> 結果の月が指定された年の範囲外の場合は、影響を受ける <xref:System.DateTime>します。 この実装では、現在の時代をサポートします。 したがって、 <xref:System.ArgumentException> 結果の年が指定した時代 \(年号\) を超えた場合にスローされる <xref:System.DateTime>します。 結果の時刻の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。  
  
 たとえば、指定した月が 30 日間ある Av 場合の指定された日付、その月の 30 日値の `months` パラメーターが 5 の場合、結果として得られる年は指定した年、月の 1 つ以上が Tevet、日、29 日、最後の日 Tevet であります。  
  
 場合の値、 `months` パラメーターが負の場合、その結果 <xref:System.DateTime> 、指定よりも前か <xref:System.DateTime>します。  
  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ <xref:System.DateTime> 値が常に等号 <xref:System.DateTimeKind.Unspecified?displayProperty=fullName>します。 保持する、 <xref:System.DateTime.Kind%2A> のプロパティ、 `time` パラメーターを呼び出して、 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> メソッドを次の例のようにです。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> ヘブライ暦の観点からです。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">その結果、 <see cref="T:System.DateTime" /> がサポートされている範囲外です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" /> が \-120,000 未満であるか、120,000 を超えています。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> を追加する <c>years</c>です。</param>
        <param name="years">追加する年数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> から、指定した年の指定した数は <see cref="T:System.DateTime" />です。</summary>
        <returns>
          <see cref="T:System.DateTime" /> を指定された、指定した年数を加算した結果を <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
 結果の日の部分 <xref:System.DateTime> 結果として得られる日が結果の年の月の有効な日ではない場合に影響します。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 たとえば、Cheshvan 休日の配置に応じて 29 日または 30 日間、ことができます。 現在の年に 30 日間および次の年の 29 Cheshvan であることをとします。 指定した日付が現在の年の 30 日の値の場合 `years` 1 では、結果として得られる日付は次の年の Cheshvan の 29 日になります。  
  
 結果の月の部分 <xref:System.DateTime> 結果の月がその年の月が有効でない場合に影響します。 結果の年の最後の有効な月に変更されます。 たとえば場合の月を `time` はうるう年の 13 番目の月の値 `years` は 1 ですが、結果として得られた月 <xref:System.DateTime> leap 年は、次の年の 12 か月目は、です。 月の部分は変更されない場合でも、可能性がありますも参照している別の月に注意してください。 などではうるう年の 7 番目の月は同社 7 月に共通数年かかります。  
  
 この実装では、現在の時代をサポートします。 したがって、 <xref:System.ArgumentException> 結果の年が指定した時代 \(年号\) を超えた場合にスローされる <xref:System.DateTime>します。  
  
 結果の時刻の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。  
  
 場合 `years` が負の場合、その結果 <xref:System.DateTime> 、指定よりも前か <xref:System.DateTime>します。  
  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ <xref:System.DateTime> 値が常に等号 <xref:System.DateTimeKind.Unspecified?displayProperty=fullName>します。 保持する、 <xref:System.DateTime.Kind%2A> のプロパティ、 `time` パラメーターを呼び出して、 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> メソッドを次の例のようにです。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> ヘブライ暦の観点からです。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">その結果、 <see cref="T:System.DateTime" /> がサポートされている範囲外です。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のカレンダーの太陽暦、太陰暦、または両方の組み合わせを示す値を取得します。</summary>
        <value>常に <see cref="F:System.Globalization.CalendarAlgorithmType.LunisolarCalendar" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、リフレクションを使用して、それぞれのインスタンスを作成 <xref:System.Globalization.Calendar> 型については、.NET Framework との値を表示、 <xref:System.Globalization.Calendar.AlgorithmType%2A> プロパティです。  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>時代 \(年号\) の一覧を取得、 <see cref="T:System.Globalization.HebrewCalendar" />です。</summary>
        <value>時代 \(年号\) を表す整数の配列、 <see cref="T:System.Globalization.HebrewCalendar" /> 型です。 戻り値が 1 つの要素と等しいを格納する配列では常に <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ヘブライ暦は、2 つの時代 \(年号\) を認識しますほか、。 \(一般的な時代 \(年号\)\) の前に、a. m.\(ラテン"Anno Mundi"、「世界の年」を意味する\)。 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、現在の時代 \(a. m.\) のみを認識します。 このプロパティは、常に 1 つだけの要素を含む配列を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した月の日を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した月の日を表す 30 に 1 から整数 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> ヘブライ暦の観点からです。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した週の曜日を返します <see cref="T:System.DateTime" />します。</summary>
        <returns>A <see cref="T:System.DayOfWeek" /> を指定した週の曜日を表す値 <see cref="T:System.DateTime" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.DayOfWeek> 値は、次のようにします。  
  
|DayOfWeek 値|曜日|  
|-----------------|--------|  
|日曜日|יום ראשון \(贖罪 Rishon\)|  
|月曜日|יום שני \(贖罪 Sheni\)|  
|火曜日|יום שלישי \(贖罪 Shlishi\)|  
|水曜日|יום רביעי \(贖罪 Reviee\)|  
|木曜日|יום חמישי \(贖罪 Chamishi\)|  
|金曜日|יום שישי \(贖罪 Shishi\)|  
|土曜日|שבת \(Shabat\)|  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> ヘブライ暦の観点からです。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した <see cref="T:System.DateTime" /> の年間積算日を返します。</summary>
        <returns>指定した <see cref="T:System.DateTime" /> の年間積算日を表す 1 ～ 385 の整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The day of the year is defined as the number of days from the first day of the year. For example, <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.HebrewCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>.  
  
 This implementation of the <xref:System.Globalization.HebrewCalendar> class recognizes only the Hebrew years 5343 to 5999 \(1583 to 2239 in the Gregorian calendar\).  
  
   
  
## 例  
 The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> は、グレゴリオ暦の 1583 年 9 月 17日よりも前か、または <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" /> より大きいです。</exception>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 13 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="Calendar.Eras[Calendar.CurrentEra]" />です。</param>
        <summary>指定した時代 \(年号\) の指定された年の指定した月の日数を返します。</summary>
        <returns>指定した時代 \(年号\) の指定された年の指定した月の日数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、このメソッドは、休日の配置に応じてに、29 または 30 を返します。  
  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
   
  
## 例  
 次のコード例では `GetDaysInMonth` 各時代 \(年号\) の 5 年間のそれぞれに 2 番目の月です。  
  
 [!code-cpp[System.Globalization.HebrewCalendar.GetDaysInMonth\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/CPP/hebrewcalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.GetDaysInMonth\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/CS/hebrewcalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.GetDaysInMonth\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetDaysInMonth/VB/hebrewcalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, 、<paramref name="month" />, 、または <paramref name="era" /> が現在のサポート範囲から外れて <see cref="T:System.Globalization.HebrewCalendar" /> オブジェクトです。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />です。</param>
        <summary>指定した時代 \(年号\) の指定された年の日数を返します。</summary>
        <returns>指定した時代 \(年号\) の指定された年の日数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、この整数を返します 353 ~ 355 または 383 ~ 385、休日の配置とかどうかによって `year` うるう年です。  
  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
   
  
## 例  
 次のコード例では `GetDaysInYear` 各時代 \(年号\) の 5 年間です。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_GetDaysInYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/CPP/hebrewcalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_GetDaysInYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/CS/hebrewcalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_GetDaysInYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_GetDaysInYear/VB/hebrewcalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> が現在のサポート範囲から外れて <see cref="T:System.Globalization.HebrewCalendar" /> オブジェクトです。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した、時代 \(年号\) を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した時代 \(年号\) を表す整数 <see cref="T:System.DateTime" />します。 戻り値は常に <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ヘブライ暦は、2 つの時代 \(年号\) を認識しますほか、。 \(一般的な時代 \(年号\)\) の前に、a. m.\(ラテン"Anno Mundi"、「世界の年」を意味する\)。 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、現在の時代 \(午前\) およびヘブライ語年 5999 に 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> ヘブライ暦の観点からです。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">1 年です。</param>
        <param name="era">時代 \(年号\)。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />です。</param>
        <summary>指定した年と時代 \(年号\) の閏月を計算します。</summary>
        <returns>指定した年と時代 \(年号\) の閏月を示す正の整数。 戻り値は、 <paramref name="year" /> と <paramref name="era" /> 年が閏年でない場合、閏年または 0 をパラメーターが指定されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 閏月の概念をサポートする予定表、閏月は特定の月の後、または 1 年間の任意の月の後にことができます。 たとえば、 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> メソッドが 1 ~ 13 を示す、指定された日付に関連付けられている月の間に番号を返します。 年の第 8 と 9 番目の月の間、閏月がある場合、 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> メソッド leap 8 番目の月の 9 と 10 の 9 番目の月、8 番目の月の 8 が返されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> が、<see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> でも <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" /> でもありません。  
  
 または  
  
 <paramref name="year" /> ヘブライ暦の年 5999 以上 5343 がヘブライ暦の年未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した月を返します <see cref="T:System.DateTime" />します。</summary>
        <returns>1 ~ 13 の整数を指定した月を表す <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> ヘブライ暦の観点からです。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> より小さい <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> 以上 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />します。</exception>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />です。</param>
        <summary>指定した時代 \(年号\) の指定された年の月の数を返します。</summary>
        <returns>指定した時代 \(年号\) の指定された年の月数。 戻り値には、共通の年度またはうるう年に 13 の 12 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
   
  
## 例  
 次のコード例では `GetMonthsInYear` 各時代 \(年号\) の 5 年間です。  
  
 [!code-cpp[System.Globalization.HebrewCalendar.GetMonthsInYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/CPP/hebrewcalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.GetMonthsInYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/CS/hebrewcalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.GetMonthsInYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.GetMonthsInYear/VB/hebrewcalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> が現在のサポート範囲から外れて <see cref="T:System.Globalization.HebrewCalendar" /> オブジェクトです。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.GetYear(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した年が返されます <see cref="T:System.DateTime" /> 値。</summary>
        <returns>指定した年を表す整数 <see cref="T:System.DateTime" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> ヘブライ暦の観点からです。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CPP/hebrewcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/CS/hebrewcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_AddGet/VB/hebrewcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> 現在のサポートされる範囲外 <see cref="T:System.Globalization.HebrewCalendar" /> オブジェクトです。</exception>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="HebrewEra">
      <MemberSignature Language="C#" Value="public static readonly int HebrewEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HebrewEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.HebrewCalendar.HebrewEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の時代 \(年号\) を表します。 このフィールドは定数です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このフィールドの値は 1 です。  
  
 ヘブライ暦は、2 つの時代 \(年号\) を認識しますほか、。 \(一般的な時代 \(年号\)\) の前に、a. m.\(ラテン"Anno Mundi"、「世界の年」を意味する\)。 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、現在の時代 \(a. m.\) のみを認識します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 13 の整数。</param>
        <param name="day">日を表す 1 ~ 30 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />.</param>
        <summary>指定した時代 \(年号\) の指定した日付が閏日であるかどうかを判断します。</summary>
        <returns>指定した日が閏日である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
 19、第 3、6、8 日、11、14 で割り切れる年で終わるすべての 19 年間サイクルでは、17 ~ 19 年がうるう年でした。 一般的な年は、休日の配置に応じて 355 の日に 353 からができます。 日数 383 閏年ことができます。  
  
 閏日は、閏年内のみで発生した日です。 ヘブライ暦で Alef とで日と見なされるすべての最終日は数日 leap します。  
  
   
  
## 例  
 次のコード例では `IsLeapDay` 、時代 \(年号\) のそれぞれに 5 年間の 2 番目の月 \(2 月\) の最後の日にします。  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapDay\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/CPP/hebrewcalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapDay\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/CS/hebrewcalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapDay\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapDay/VB/hebrewcalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, 、<paramref name="month" />, 、<paramref name="day" />, 、または <paramref name="era" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 13 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />です。</param>
        <summary>指定した時代 \(年号\) の指定した年の指定した月が閏月かどうかを判断します。</summary>
        <returns>
          <see langword="true" /> 指定した月が閏月; である場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
 19、第 3、6、8 日、11、14 で割り切れる年で終わるすべての 19 年間サイクルでは、17 ~ 19 年がうるう年でした。 一般的な年は、休日の配置に応じて 355 の日に 353 からができます。 日数 383 閏年ことができます。  
  
 閏月は、閏年でのみ発生する月全体です。 ヘブライ暦では、暦です。  
  
   
  
## 例  
 次のコード例では `IsLeapMonth` の現在の時代 \(年号\) の 5 年間のすべての月です。  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapMonth\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/CPP/hebrewcalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapMonth\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/CS/hebrewcalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapMonth\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapMonth/VB/hebrewcalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, 、<paramref name="month" />, 、または <paramref name="era" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />です。</param>
        <summary>指定した時代 \(年号\) の指定した年が閏年かどうかを確認します。</summary>
        <returns>指定した年が閏年である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
 19、第 3、6、8 日、11、14 で割り切れる年で終わるすべての 19 年間サイクルでは、17 ~ 19 年がうるう年でした。 一般的な年は、休日の配置に応じて 355 の日に 353 からができます。 日数 383 閏年ことができます。  
  
   
  
## 例  
 次のコード例では `IsLeapYear` 、時代 \(年号\) のそれぞれに 5 年間です。  
  
 [!code-cpp[System.Globalization.HebrewCalendar.IsLeapYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/CPP/hebrewcalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar.IsLeapYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/CS/hebrewcalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar.IsLeapYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar.IsLeapYear/VB/hebrewcalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最新の日付と時刻でサポートされている取得、 <see cref="T:System.Globalization.HebrewCalendar" /> 型です。</summary>
        <value>最新の日付と時刻でサポートされている、 <see cref="T:System.Globalization.HebrewCalendar" /> 入力すると、これは、グレゴリオ暦の年 9 月、29、2239 西暦の最後の時点に相当します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、最小値と予定表の最大値を取得します。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_MinMax\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CPP/hebrewcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_MinMax\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CS/hebrewcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_MinMax\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/VB/hebrewcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最初の日付と時刻でサポートされている取得、 <see cref="T:System.Globalization.HebrewCalendar" /> 型です。</summary>
        <value>最初の日付と時刻でサポートされている、 <see cref="T:System.Globalization.HebrewCalendar" /> 年 1 月、1、1583 西暦グレゴリオ暦での最初の時点に相当する型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Microsoft Visual Basic でサポートされている日付の最小値で指定された時間として時刻を表す、 <xref:System.DateTime> は西暦 0001 年 1 月 1 日の種類ただし、 <xref:System.Globalization.HebrewCalendar> 種類では、その日付の最小値をサポートしていません。 その結果、現在の暦を使用して時刻の書式を設定するメソッドを呼び出す場合、書式指定子を指定しない場合は、ISO 8601 並べ替え可能な \("s"\) の書式設定は日付\/時刻既定の一般 \("G"\) の日付\/時刻パターン書式指定子ではなくパターンの書式指定子。 詳細については、「[Standard DateTime Format Strings](http://msdn.microsoft.com/ja-jp/bb79761a-ca08-44ee-b142-b06b3e2fc22b)」を参照してください。  
  
   
  
## 例  
 次のコード例では、最小値と予定表の最大値を取得します。  
  
 [!code-cpp[System.Globalization.HebrewCalendar\_MinMax\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CPP/hebrewcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HebrewCalendar\_MinMax\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/CS/hebrewcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HebrewCalendar\_MinMax\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HebrewCalendar_MinMax/VB/hebrewcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 13 の整数。</param>
        <param name="day">日を表す 1 ~ 30 の整数。</param>
        <param name="hour">時間を表す 0 ~ 23 の整数。</param>
        <param name="minute">分を表す 0 ~ 59 の整数。</param>
        <param name="second">秒を表す 0 ~ 59 の整数。</param>
        <param name="millisecond">ミリ秒を表す 0 ~ 999 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。 いずれかを指定 <see cref="F:System.Globalization.HebrewCalendar.HebrewEra" /> または <see langword="HebrewCalendar.Eras[Calendar.CurrentEra]" />です。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> 指定した時代 \(年号\) で指定した日時に設定されています。</summary>
        <returns>
          <see cref="T:System.DateTime" /> 現在の時代 \(年号\) で指定した日時に設定されています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.HebrewCalendar.ToDateTime%2A> 方法はグレゴリオ暦の日付を現在の暦で日付を変換できるので便利です。 グレゴリオ暦の日付は、後する使用などのさまざまなカレンダーで日付を比較または特定の暦で同等の日時を作成します。  
  
 この実装の <xref:System.Globalization.HebrewCalendar> クラスは、ヘブライ語の年に 5999 5343 \(1583年に 2239 グレゴリオ暦\) のみを認識します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" />, 、<paramref name="month" />, 、<paramref name="day" /> または <paramref name="era" /> が現在のサポート範囲から外れて <see cref="T:System.Globalization.HebrewCalendar" /> オブジェクトです。  
  
 または  
  
 <paramref name="hour" /> が 0 未満であるか、または 23 を超えています。  
  
 または  
  
 <paramref name="minute" /> が 0 未満であるか、または 59 を超えています。  
  
 または  
  
 <paramref name="second" /> が 0 未満であるか、または 59 を超えています。  
  
 または  
  
 <paramref name="millisecond" /> が 0 未満であるか、または 999 を超えています。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HebrewCalendar.HebrewEra" />
        <altmember cref="P:System.Globalization.HebrewCalendar.Eras" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">0 ~ 99 の場合、または 5343 ~ 5999 ヘブライ暦の 4 桁年の場合は、2 桁の年</param>
        <summary>使用して、指定された年を 4 桁の年に変換、 <see cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" /> プロパティを適切な世紀を決定します。</summary>
        <returns>場合、 <paramref name="year" /> パラメーターが 2 桁の年、戻り値は、対応する 4 桁の年。 場合、 <paramref name="year" /> パラメーターは、4 桁の年、戻り値は、変更されていない <paramref name="year" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> メソッドの使用方法、 `year` 、パラメーター、 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> プロパティ、および年を 4 桁の年を計算します。 4 桁の年が唯一の検索によって、 `year` その 100 年の範囲内のパラメーターです。 たとえば場合、 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 設定されているが、100 年の範囲は 5630 から解釈します。 そのため、30 の値は、値は 29 が 5729 として解釈されます、5630 として解釈されます。  
  
 場合、 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> プロパティには特殊な値 99、 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> メソッドは、地域の設定を無視し、言語を選択し、コントロール パネルの \[オプションの値を返します、 `year` パラメーター。  
  
 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> 2 桁または 4 桁の年のいずれかをサポートしています。 2 桁の年の値 \(100 未満\) を渡すと、値によると 4 桁の値に変換するメソッド、 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> 適切な 4 桁の年を表す値。 場合は、アプリケーションがサポートされているカレンダーの範囲内にある 4 桁の年の値を提供 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>, 、実際の入力値を返します。 アプリケーションがサポートされているカレンダー範囲から外れて 4 桁の値が指定した場合、または負の値が渡された場合、メソッドは例外をスローします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> が 0 未満です。  
  
 または  
  
 <paramref name="year" /> より小さい <see cref="P:System.Globalization.HebrewCalendar.MinSupportedDateTime" /> 以上 <see cref="P:System.Globalization.HebrewCalendar.MaxSupportedDateTime" />します。</exception>
        <altmember cref="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HebrewCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年を取得または設定します。</summary>
        <value>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> プロパティでは 2 桁の年を 4 桁の年に適切に変換します。 たとえば、このプロパティが設定されている場合、100 年範囲は 5630 です。 そのため、30 の 2 桁の値は、2 桁の値は 29 が 5729 として解釈されます、5630 として解釈されます。  
  
 このプロパティの初期値は、コントロール パネルの地域と言語のオプション部分の設定から取得されます。 アプリケーションの有効期間中にシステムの初期設定が変更、 <xref:System.Globalization.HebrewCalendar> クラスが、変更を自動的に検出されません。  
  
 特殊値 99 原因、 <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A> をシステムの設定を無視し、指定した年を返すメソッドが変更されません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在 <see cref="T:System.Globalization.HebrewCalendar" /> オブジェクトは読み取り専用です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">設定操作では、ヘブライ暦の年の値は 99 が 5343 より小さいや年の値が 5999 より大きい。</exception>
        <altmember cref="M:System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>