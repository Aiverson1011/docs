<Type Name="RegionInfo" FullName="System.Globalization.RegionInfo">
  <TypeSignature Language="C#" Value="public class RegionInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable beforefieldinit RegionInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.RegionInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>国\/地域についての情報を格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 異なり、 <xref:System.Globalization.CultureInfo> 、クラス、 <xref:System.Globalization.RegionInfo> クラスは、ユーザー設定を表さないし、ユーザーの言語またはカルチャに依存しません。  
  
## 「に関連付けられた名前  
 名前、 <xref:System.Globalization.RegionInfo> オブジェクトは、国\/地域の ISO 3166 で定義された 2 文字のコードの 1 つです。 場合は、わずかです。<xref:System.Globalization.RegionInfo.Name%2A>, 、<xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>, 、および <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> プロパティは、大文字で適切なコードを返します。 現在の一覧について <xref:System.Globalization.RegionInfo> 名を参照してください [English country names and code elements](http://go.microsoft.com/fwlink/?LinkId=190591) ISO の web サイトにします。  
  
## 「をインスタンス化する  
 インスタンスを作成、 <xref:System.Globalization.RegionInfo> オブジェクトを渡す、 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> コンス トラクターの 2 文字の地域名か、英語 \(米国\)"EN\-US"などの米国、または特定のカルチャの名前を"US"などです。 ただし、ことをお勧め 2 文字の地域名の代わりに、特定のカルチャ名を使用しているため、 <xref:System.Globalization.RegionInfo> オブジェクトは完全に言語に依存しないではありません。 いくつか <xref:System.Globalization.RegionInfo> を含むプロパティ <xref:System.Globalization.RegionInfo.DisplayName%2A>, 、<xref:System.Globalization.RegionInfo.NativeName%2A>, 、および <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>, 、カルチャ名に依存します。  
  
 次の例は、の違いを示しています。 <xref:System.Globalization.RegionInfo> ベルギーを表す 3 つのオブジェクトのプロパティの値。 2 番目と 3 つ目がカルチャ名からインスタンス化された領域名から \(BE\) のみ、最初がインスタンス化される \(フランス語 \(ベルギー\) の fr BE とし、オランダ語 \(ベルギー\) nl BE それぞれ\)。 この例では、リフレクションを使用して、それぞれのプロパティの値を取得 <xref:System.Globalization.RegionInfo> オブジェクトです。  
  
 [!code-csharp[System.Globalization.RegionInfo\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/propertyvalues1.cs#2)]
 [!code-vb[System.Globalization.RegionInfo\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/propertyvalues1.vb#2)]  
  
 次のようを使用してカルチャ名国\/地域名の代わりにインスタンス化するとき、 <xref:System.Globalization.RegionInfo> オブジェクト。  
  
-   言語の名前はプライマリ重要です。 たとえば、es 英語 \(米国\) カルチャ名を"United States"ではなく"Estados Unidos"を表示するアプリケーション通常します。 \(米国\) 言語にかかわらず生成"United States"だけで、国\/地域名を使用して、そのため協力が必要、カルチャ名代わりにします。  
  
-   ときにスクリプトの違いが考慮する必要があります。 たとえば、アゼルバイジャンのカルチャ名 az\-Latn\-AZ および az という\-AZ ラテン文字を扱う、国\/地域 AZ し、キリル文字をこの国\/地域の大きく異なることができます。  
  
-   ときに詳細情報のメンテナンスが重要です。 によって返される値 <xref:System.Globalization.RegionInfo> メンバーかどうかに応じて異なる場合、 <xref:System.Globalization.RegionInfo> のカルチャまたは地域名を使用して、オブジェクトがインスタンス化します。 たとえば、次の表の相違点に値を <xref:System.Globalization.RegionInfo> "US"リージョン、"EN\-US"カルチャと、「es\-米国」カルチャを使用してオブジェクトをインスタンス化します。  
  
    |メンバー|「私たち」|"EN\-US"|「es 英語 \(米国\)」|  
    |----------|-----------|--------------|--------------------|  
    |<xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>|U. s. ドル|U. s. ドル|Dólar de EE します。UU します。|  
    |<xref:System.Globalization.RegionInfo.Name%2A>|US|en\-US|es 英語 \(米国\)|  
    |<xref:System.Globalization.RegionInfo.NativeName%2A>|米国|米国|Estados Unidos|  
    |<xref:System.Globalization.RegionInfo.ToString%2A>|US|en\-US|es 英語 \(米国\)|  
  
   
  
## 例  
 次の例では、数人のメンバー、 <xref:System.Globalization.RegionInfo> クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CPP/regioninfo.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo/CS/regioninfo.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo/VB/regioninfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (int culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">カルチャ識別子です。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Globalization.RegionInfo" />クラスが指定されたカルチャ識別子に関連付けられている国\/地域に基づいています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29>インスタンス化するための推奨されるコンス トラクター、<xref:System.Globalization.RegionInfo>オブジェクト。 異なり、<xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29>をパラメーターでは、そのパラメーターとして数値のカルチャ識別子を必要とするコンス トラクターより読みやすい名前または国コードをカルチャします。  
  
 カルチャ識別子は、対応するサポート NLS \(National Language\) ロケール識別子にマップされます。 詳細なカルチャ情報に表示されます、 [National Language Support \(NLS\) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) Go Global Developer Center にします。  
  
 値、<xref:System.Globalization.RegionInfo.Name%2A>新しいプロパティ<xref:System.Globalization.RegionInfo>このコンス トラクターを呼び出すことによってインスタンス化されるオブジェクトは、結合された言語と国\/地域コードではない、国\/地域の ISO 3166 の 2 桁文字コード。 たとえば場合、<xref:System.Globalization.RegionInfo>英語 \(米国\) カルチャの値のカルチャ識別子 0x0409 を持つオブジェクトがインスタンス化される、<xref:System.Globalization.RegionInfo.Name%2A>プロパティが"US"です。 これに対し場合、 <xref:System.Globalization.RegionInfo> 、結合された言語でオブジェクトがインスタンス化され、国\/地域コード、英語 \(米国\) カルチャの値のための EN\-US、<xref:System.Globalization.RegionInfo.Name%2A>プロパティは"EN\-US"です。  
  
   
  
## 例  
 次のコード例は、2 つのインスタンスを比較<xref:System.Globalization.RegionInfo>異なる方法で作成されました。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="culture" />いずれか、ロケールに依存しない、カスタム、またはニュートラル カルチャを指定します。</exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegionInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">ISO 3166 で定義された、国\/地域の 2 文字のコードを含む文字列。  
  
 または  
  
 特定のカルチャ、カスタム カルチャ、または Windows 専用カルチャのカルチャ名を含む文字列。 カルチャ名が RFC 4646 形式でない場合、アプリケーションでは国\/地域名だけでなく完全なカルチャ名を指定する必要があります。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Globalization.RegionInfo" /> クラス名で指定された特定のカルチャ、国\/地域に基づいています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `name` パラメーターは、国\/地域、または固有、カスタム、または Windows 専用カルチャ名で定義されたコードのいずれかです。 場合は、わずかです。 ただし、 <xref:System.Globalization.RegionInfo.Name%2A>, 、 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>, 、および <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> プロパティは、大文字で指定したコードまたはカルチャ名を返します。  
  
 定義済み <xref:System.Globalization.RegionInfo> 名前にある [Country names and code elements](http://go.microsoft.com/fwlink/?LinkId=190591) ISO の web サイトにします。  
  
 \[国\/地域名だけではなく、特定のカルチャの名前を入力してください、 `name` パラメーター。 たとえば、英語 \(米国\) en\-us \(英語\)、またはスペイン語 \(米国\) 用 es 米国をお勧め米国のためなどのプロパティ <xref:System.Globalization.RegionInfo.NativeName%2A> と <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> 特定の言語を反映します。 az Latn\-AZ または az という\-AZ をお勧め AZ のためなどのプロパティ <xref:System.Globalization.RegionInfo.NativeName%2A>, 、<xref:System.Globalization.RegionInfo.CurrencyNativeName%2A>, 、および <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> 特定のスクリプトを反映します。  定義済みカルチャ名が記載されて、 [National Language Support \(NLS\) API Reference](http://go.microsoft.com/fwlink/?LinkId=200048) Go Global Developer Center にします。 このコンス トラクターの呼び出しをスローするメモ、 <xref:System.ArgumentException> 場合 `name` ニュートラル カルチャ \(英語を表す en\) などです。  
  
   
  
## 例  
 次のコード例は、2 つのインスタンスを比較 <xref:System.Globalization.RegionInfo> 異なる方法で作成されました。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 次のコード例のインスタンスを作成する <xref:System.Globalization.RegionInfo> カルチャ名を使用します。  
  
 [!code-cpp[System.Globalization.RegionInfo.ctorCultureName\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CPP/regioninfo_ctorculturename.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo.ctorCultureName\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/CS/regioninfo_ctorculturename.cs#1)]
 [!code-vb[System.Globalization.RegionInfo.ctorCultureName\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo.ctorCultureName/VB/regioninfo_ctorculturename.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> 有効な国\/地域名または特定のカルチャ名ではありません。</exception>
        <block subset="none" type="usage">
          <para>This constructor accepts only specific cultures or country/region codes. However, some neutral culture names are the same as country/region codes. In this case, <paramref name="name" /> is interpreted as a country/region code rather than a neutral culture name, and this constructor does not throw an <see cref="T:System.ArgumentException" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CurrencyEnglishName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyEnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyEnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyEnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>国\/地域で使用される通貨を英語で表した名前を取得します。</summary>
        <value>国\/地域で使用される通貨を英語で表した名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を示しています、 <xref:System.Globalization.RegionInfo.CurrencyEnglishName%2A> プロパティです。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyNativeName">
      <MemberSignature Language="C#" Value="public virtual string CurrencyNativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyNativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencyNativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>国\/地域のネイティブ言語で書式設定された国\/地域で使用される通貨の名前を取得します。</summary>
        <value>ISO 3166 の国\/地域コードに関連付けられた言語で書式指定された、国\/地域で使用される通貨のネイティブな名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は、現在 <xref:System.Globalization.RegionInfo> オブジェクトを作成すると、特定のカルチャと、複数の言語は、対応する国\/地域で使用、 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> プロパティは、特定のカルチャに関連付けられている通貨名を取得します。  
  
 このプロパティの値は、特定の国\/地域に関連付けられている言語に依存します。 そのため、使用する場合、 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> プロパティには、インスタンスを作成、 <xref:System.Globalization.RegionInfo> オブジェクトを渡すことによって、 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29> 組み合わされた言語および国\/地域コードをコンス トラクターです。 たとえば場合、 <xref:System.Globalization.RegionInfo> "EN\-CA"英語 \(カナダ\) の場合、値用の組み合わされた言語および国\/地域コードにオブジェクトをインスタンス化、 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> プロパティは、「カナダ ドル」です。 フランス語 \(カナダ\) の値の場合、結合された言語と国\/地域コード"FR\-CA"のインスタンス化した場合、 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> プロパティは、"ドル canadien"です。 そのため、作成、 `RegionInfo` 国\/地域名 \(この場合は"CA"\) のみを持つオブジェクトが適切なネイティブ通貨名とを区別するために固有ではありません。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Globalization.RegionInfo.CurrencyNativeName%2A> プロパティです。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string CurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>国\/地域に関連付けられた通貨記号を取得します。</summary>
        <value>国\/地域に関連付けられた通貨記号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For example, the currency symbol for the United States is "$".  
  
 If the current <xref:System.Globalization.RegionInfo> object is created with a specific culture and more than one language is used in the corresponding country\/region, the <xref:System.Globalization.RegionInfo.CurrencySymbol%2A> property returns the currency symbol associated with the specific culture.  
  
   
  
## 例  
 The following code example displays the properties of the <xref:System.Globalization.RegionInfo> class.  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="CurrentRegion">
      <MemberSignature Language="C#" Value="public static System.Globalization.RegionInfo CurrentRegion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Globalization.RegionInfo CurrentRegion" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.CurrentRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.RegionInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Globalization.RegionInfo" /> 、現在のスレッドで使用する国\/地域を表します。</summary>
        <value>
          <see cref="T:System.Globalization.RegionInfo" /> 、現在のスレッドで使用する国\/地域を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値は、コントロール パネルの地域と言語のオプション部分で選択されているカルチャに基づきます。 ただし、その情報がの有効期間中に変更できる、 <xref:System.AppDomain>です。<xref:System.Globalization.RegionInfo> 、システムの設定で変更がクラスに自動的に検出されることはありませんが、 <xref:System.Globalization.RegionInfo.CurrentRegion%2A> を呼び出すときにプロパティが更新される、 <xref:System.Globalization.CultureInfo.ClearCachedData%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローカライズされたバージョンの .NET Framework の言語で表した国\/地域の完全名を取得します。</summary>
        <value>ローカライズされたバージョンの .NET Framework の言語で表した国\/地域の完全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Globalization.RegionInfo.DisplayName%2A> property displays the country\/region name in the language of the localized version of .NET Framework. For example, the <xref:System.Globalization.RegionInfo.DisplayName%2A> property displays the country\/region in English on the English version of the .NET Framework, and in Spanish on the Spanish version of the .NET Framework.  
  
 The value of the <xref:System.Globalization.RegionInfo.DisplayName%2A> property is taken from the resource files in the language of the current user interface culture, represented by <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>. Custom regions or those synthesized from the operating system might not have resource information, in which case the value for <xref:System.Globalization.RegionInfo.DisplayName%2A> is the same as the value of the <xref:System.Globalization.RegionInfo.NativeName%2A> property.  
  
   
  
## 例  
 The following code example displays the properties of the <xref:System.Globalization.RegionInfo> class.  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="EnglishName">
      <MemberSignature Language="C#" Value="public virtual string EnglishName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnglishName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.EnglishName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>英語で表した国\/地域の完全名を取得します。</summary>
        <value>英語で表した国\/地域の完全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、 <xref:System.Globalization.RegionInfo> 英語 \(米国\) カルチャの表示"United States"用に作成されたオブジェクト。  
  
   
  
## 例  
 次のコード例のプロパティを表示する、 <xref:System.Globalization.RegionInfo> クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">現在の <see cref="T:System.Globalization.RegionInfo" /> と比較するオブジェクト。</param>
        <summary>指定したオブジェクトが現在と同じインスタンスであるかどうかを判断 <see cref="T:System.Globalization.RegionInfo" />します。</summary>
        <returns>
          <see langword="true" /> 場合、 <paramref name="value" /> パラメーターは、 <see cref="T:System.Globalization.RegionInfo" /> オブジェクトとその <see cref="P:System.Globalization.RegionInfo.Name" /> プロパティと同じ、 <see cref="P:System.Globalization.RegionInfo.Name" /> 、現在のプロパティ <see cref="T:System.Globalization.RegionInfo" /> オブジェクト。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Object.Equals%2A?displayProperty=fullName>です。  
  
   
  
## 例  
 次のコード例は、2 つのインスタンスを比較 <xref:System.Globalization.RegionInfo> 異なる方法で作成されました。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CPP/regioninfo_equals.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/CS/regioninfo_equals.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Equals\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Equals/VB/regioninfo_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GeoId">
      <MemberSignature Language="C#" Value="public virtual int GeoId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GeoId" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.GeoId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>地理的な領域、国、都市、または場所の一意の識別番号を取得します。</summary>
        <value>地理的な場所を一意に識別する 32 ビットの符号付き数値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションを使用する必要があります、 <xref:System.Globalization.RegionInfo.GeoId%2A> プロパティをユーザーのカルチャに固有のサービスを提供します。 たとえば、 <xref:System.Globalization.RegionInfo.GeoId%2A> プロパティは、国\/地域についての特定の情報を格納するデータベース レコードへのアクセス キーとして使用できます。  
  
 このプロパティの値は、Windows に対応して `GetUserGeoID` 関数です。 地理的な識別子の一覧は、次を参照してください。 [Table of Geographical Locations](http://go.microsoft.com/fwlink/?LinkId=191287) 、MSDN ライブラリです。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Globalization.RegionInfo.GeoId%2A> プロパティです。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Globalization.RegionInfo" /> のハッシュ関数として機能します。ハッシュ アルゴリズムや、ハッシュ テーブルのようなデータ構造での使用に適しています。</summary>
        <returns>現在の <see cref="T:System.Globalization.RegionInfo" /> のハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Object.GetHashCode%2A?displayProperty=fullName>です。  
  
 このメソッドは、<xref:System.Globalization.RegionInfo.Equals%2A> メソッドによって等しいと評価された 2 つのオブジェクトに対して同じハッシュ コードを生成します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.Globalization.RegionInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsMetric">
      <MemberSignature Language="C#" Value="public virtual bool IsMetric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetric" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.IsMetric" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>国\/地域で、計測のためにメートル法を使用するかどうかを示す値を取得します。</summary>
        <value>国\/地域で、計測のためにメートル法を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例のプロパティを表示する、 <xref:System.Globalization.RegionInfo> クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ISOCurrencySymbol">
      <MemberSignature Language="C#" Value="public virtual string ISOCurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ISOCurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ISOCurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>国\/地域に関連付けられた 3 文字の ISO 4217 通貨記号を取得します。</summary>
        <value>国\/地域に関連付けられた 3 文字の ISO 4217 通貨記号。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の例では、によって返される ISO 4217 通貨記号の一部を示します、<xref:System.Globalization.RegionInfo.ISOCurrencySymbol%2A>プロパティです。  
  
|国\/地域|通貨名|ISO 4217 通貨記号|  
|-----------|---------|-------------------|  
|アルバニア|Albanian Lek|ALL|  
|アルジェリア|アルジェリア ディナール|DZD|  
|アルゼンチン|アルゼンチン ペソ|ARS|  
|アルメニア|アルメニア|AMD|  
|オーストラリア|オーストラリア ドル|AUD|  
|オーストリア|ユーロの通貨|EUR|  
|アゼルバイジャン|アゼルバイジャン マナト|AZN|  
|バーレーン|バーレーン ディナール|BHD|  
|ベラルーシ|ベラルーシ|BYR|  
|ベルギー|ユーロの通貨|EUR|  
|ベリーズ|ベリーズ ドル|BZD|  
|ベネズエラ ボリバル共和国|ベネズエラ ボリバル|VEF|  
|ボリビア|Boliviano|BOB|  
|ブラジル|Real|BRL|  
|ブルネイ|ブルネイ|BND|  
|ブルガリア|ブルガリア語レフ|BGN|  
|カナダ|カナダ|CAD|  
|カリブ|米国ドル|米国ドル|  
|チリ|チリ ペソ|CLP|  
|コロンビア|コロンビア ペソ|コピー|  
|コスタリカ|コスタリカ|CRC|  
|クロアチア|クロアチア語クーナ|HRK|  
|チェコ|チェコ コルナ|CZK|  
|デンマーク|デンマーク クローネ|DKK|  
|ドミニカ共和国|ドミニカ ペソ|DOP|  
|エクアドル|米国ドル|米国ドル|  
|エジプト|エジプト ポンド|EGP|  
|エルサルバドル|米国ドル|米国ドル|  
|エストニア|エストニア語 Kroon|EEK|  
|エチオピア|エチオピア|ETB|  
|フェロー諸島|デンマーク クローネ|DKK|  
|フィンランド|ユーロの通貨|EUR|  
|フランス|ユーロの通貨|EUR|  
|グルジア|ラリ|GEL|  
|ドイツ|ユーロの通貨|EUR|  
|ギリシャ|ユーロの通貨|EUR|  
|グアテマラ|グアテマラ ケツァル|GTQ|  
|ホンジュラス|ホンジュラス レンピラ|HNL|  
|香港特別行政区|香港 ドル|HKD|  
|ハンガリー|ハンガリー フォリント|HUF|  
|アイスランド|アイスランド語クローネ|ISK|  
|インド|インド ルピー|使う|  
|インドネシア|インドネシア語 Rupiah|IDR|  
|イラン|イラン|IRR|  
|イラク|イラク ディナール|IQD|  
|アイルランド|ユーロの通貨|EUR|  
|パキスタン・イスラム共和国|パキスタン|PKR|  
|イスラエル|新しいシュケル|ILS|  
|イタリア|ユーロの通貨|EUR|  
|ジャマイカ|ジャマイカ|してください。|  
|日本|日本 円|JPY|  
|ヨルダン|ヨルダン ディナール|JOD|  
|カザフスタン|テンゲ|KZT|  
|ケニア|ケニア|KES|  
|韓国|韓国 ウォン|KRW|  
|クウェート|クウェート ディナール|KWD|  
|キルギスタン|som|KG|  
|ラトビア|ラトビア語ラッツ|LVL|  
|レバノン|レバノン ポンド|LBP|  
|リビア|リビア ディナール|LYD|  
|リヒテンシュタイン|スイス フラン|「CHF|  
|リトアニア|リトアニア語 Litas|LTL|  
|ルクセンブルグ|ユーロの通貨|EUR|  
|マカオ特別行政区|マカオ パタカ|モップ, します。|  
|マケドニア \(FYROM\)|マケドニア Denar|MKD|  
|マレーシア|マレーシア Ringgit|MYR|  
|モルディヴ|ルフィア|MVR|  
|メキシコ|メキシコ ペソ|MXN|  
|モンゴル|トゥグリク|やり|  
|モロッコ|モロッコ ディルハム|MAD|  
|オランダ|ユーロの通貨|EUR|  
|ニュージーランド|ニュージーランド ドル|NZD|  
|ニカラグア|\(ニカラグア\) Cordoba Oro|NIO|  
|ノルウェー|ノルウェー クローネ|NOK です。|  
|オマーン|オマーン リアル|OMR|  
|パナマ|パナマ バルボア|個人用アドレス帳|  
|パラグアイ|パラグアイ グアラニー|PYG|  
|中華人民共和国|中華人民共和国 Renminbi|CNY|  
|ペルー|ペルー ヌエボ・ソル|ペン|  
|フィリピン|フィリピン|PHP|  
|ポーランド|ポーランド ズローティー|PLN|  
|ポルトガル|ユーロの通貨|EUR|  
|モナコ公国|ユーロの通貨|EUR|  
|プエルトリコ|米国ドル|米国ドル|  
|カタール|カタール|QAR|  
|ルーマニア|ルーマニア語レイ|RON|  
|タタルスタン|ロシア|問題点|  
|サウジアラビア|サウジイ リアル|行政区|  
|セルビア|セルビア語ディナール|RSD|  
|シンガポール|シンガポール ドル|SGD|  
|スロバキア|ユーロの通貨|EUR|  
|スロベニア|ユーロの通貨|EUR|  
|南アフリカ|南アフリカ ランド|ZAR|  
|スペイン|ユーロの通貨|EUR|  
|スウェーデン|スウェーデン クローナ|SEK|  
|スイス|スイス フラン|「CHF|  
|シリア|シリア ポンド|SYP|  
|台湾|台湾ドル|TWD|  
|タイ|タイ バーツ|THB|  
|トリニダード・トバゴ|トリニダード ドル|TTD|  
|チュニジア|チュニジア ディナール|TND|  
|トルコ|トルコ リラ|TRY|  
|ウクライナ|ウクライナ語グリブナ|UAH|  
|アラブ首長国連邦|アラブ首長国連邦ディルハム|AED|  
|英国|英国ポンド|GBP|  
|米国|米国ドル|米国ドル|  
|ウルグアイ|ペソ Uruguayo|UYU|  
|ウズベキスタン|ウズベキスタン Som|UZS|  
|ベトナム|ベトナム ドン|VND|  
|イエメン|イエメン|決して|  
|ジンバブエ|ジンバブエ|ZWL|  
  
   
  
## 例  
 次のコード例のプロパティを表示する、<xref:System.Globalization.RegionInfo>クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.CurrencySymbol" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の名前または ISO 3166 の 2 文字の国\/地域コードを取得 <see cref="T:System.Globalization.RegionInfo" /> オブジェクトです。</summary>
        <value>指定された値、 <paramref name="name" /> のパラメーター、 <see cref="M:System.Globalization.RegionInfo.#ctor(System.String)" /> コンス トラクターです。 戻り値は大文字です。  
  
 または  
  
 指定された国\/地域の ISO 3166 で定義された 2 文字コード、 <paramref name="culture" /> のパラメーター、 <see cref="M:System.Globalization.RegionInfo.#ctor(System.Int32)" /> コンス トラクターです。 戻り値は大文字です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は、現在 <xref:System.Globalization.RegionInfo> オブジェクトを作成すると、 <xref:System.Globalization.RegionInfo.%23ctor%28System.Int32%29?displayProperty=fullName> 、カルチャ識別子パラメーターを受け取るコンス トラクター、 <xref:System.Globalization.RegionInfo.Name%2A> プロパティの値は国\/地域の ISO 3166 で定義された 2 文字のコードの 1 つと、大文字で書式設定します。 たとえば、米国の 2 文字のコードでは、「私たち」です。  
  
 場合は、現在 <xref:System.Globalization.RegionInfo> オブジェクトを作成すると、 <xref:System.Globalization.RegionInfo.%23ctor%28System.String%29?displayProperty=fullName> コンス トラクター"EN\-US"などの完全なカルチャ名を渡されると、 <xref:System.Globalization.RegionInfo.Name%2A> プロパティの値は完全なカルチャ名と地域名だけでなく。  
  
   
  
## 例  
 次のコード例のプロパティを表示する、 <xref:System.Globalization.RegionInfo> クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="NativeName">
      <MemberSignature Language="C#" Value="public virtual string NativeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NativeName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.NativeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>国\/地域の名前を、その国\/地域のネイティブな言語の書式で取得します。</summary>
        <value>ISO 3166 国\/地域コードに関連付けられた言語で書式指定された、国\/地域のネイティブな名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  <xref:System.Globalization.RegionInfo.NativeName%2A> 場合、プロパティは完全なカルチャ名を取得、 `RegionInfo` 完全なカルチャ名を使用してオブジェクトを構築します。  
  
 カルチャ名を使用することをお勧め — たとえば、"EN\-US"英語 \(米国\) などにアクセスする、 <xref:System.Globalization.RegionInfo.NativeName%2A> プロパティです。 このプロパティに使用される文字列は、国\/地域に関連付けられた言語によって異なります。 たとえば、カルチャ名 EN\-US 英語 \(米国\) とスペイン語 \(米国\) 用 es 米国では、Windows Vista で異なる値を取得できます。 そのため、作成、 `RegionInfo` 米国の国\/地域名だけを持つオブジェクトが適切な文字列を区別するために十分な固有ではありません。  
  
   
  
## 例  
 次のコード例を示しています、 <xref:System.Globalization.RegionInfo.NativeName%2A> プロパティです。  
  
 [!code-cpp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/cpp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/cpp/rgn5props.cpp#1)]
 [!code-csharp[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/CS/rgn5props.cs#1)]
 [!code-vb[sys.glob.regioninfo.rgn5props\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.glob.regioninfo.rgn5props/VB/rgn5props.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ISO 3166 で定義された国\/地域の 3 文字コードを取得します。</summary>
        <value>ISO 3166 で定義された国\/地域の 3 文字コード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A>プロパティには、この国\/地域の ISO 3166 で定義されている 3 文字コードが含まれています。 たとえば、米国の 3 文字コードは、"USA"です。  
  
 場合は、意味はありません。 ただし、 <xref:System.Globalization.RegionInfo.Name%2A>、 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>、および<xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A>プロパティは、大文字で、適切なコードを返します。  
  
   
  
## 例  
 次のコード例のプロパティを表示する、<xref:System.Globalization.RegionInfo>クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <Member MemberName="ThreeLetterWindowsRegionName">
      <MemberSignature Language="C#" Value="public virtual string ThreeLetterWindowsRegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreeLetterWindowsRegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これによって表される国\/地域に対して Windows が割り当てる 3 文字コードを取得 <see cref="T:System.Globalization.RegionInfo" />します。</summary>
        <value>これによって表される国\/地域に対して Windows が割り当てる 3 文字コード <see cref="T:System.Globalization.RegionInfo" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、米国の 3 文字コードは、"USA"です。  
  
   
  
## 例  
 次のコード例のプロパティを表示する、 <xref:System.Globalization.RegionInfo> クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.RegionInfo.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カルチャ名、または現在の指定された ISO 3166 の 2 文字の国\/地域コードを含む文字列を返します <see cref="T:System.Globalization.RegionInfo" />します。</summary>
        <returns>現在のカルチャ名、または ISO 3166 の 2 文字の国\/地域コードを含む文字列が定義されている <see cref="T:System.Globalization.RegionInfo" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Object.ToString%2A?displayProperty=fullName>です。  
  
 このメソッドは、の値を返す、 <xref:System.Globalization.RegionInfo.Name%2A> プロパティです。  
  
 場合は、わずかです。 ただし、 <xref:System.Globalization.RegionInfo.Name%2A>, 、 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>, 、および <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> プロパティは、大文字で適切なコードを返します。  
  
 定義済み <xref:System.Globalization.RegionInfo> 名前にある、 <xref:System.Globalization.RegionInfo> クラスに関するトピック。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="TwoLetterISORegionName">
      <MemberSignature Language="C#" Value="public virtual string TwoLetterISORegionName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TwoLetterISORegionName" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.RegionInfo.TwoLetterISORegionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ISO 3166 で定義された国\/地域の 2 文字コードを取得します。</summary>
        <value>ISO 3166 で定義された国\/地域の 2 文字コード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.RegionInfo> 名、国\/地域の ISO 3166 で定義された 2 文字のコードの 1 つです。 たとえば、米国の 2 文字コードは、「私たち」です。  
  
> [!IMPORTANT]
>  場合によって、 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> プロパティが 3 つ以上の文字を持つことがあります。 たとえばの値、 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A> カリブ地域のプロパティが「029」です。  
  
 場合は、わずかです。 ただし、 <xref:System.Globalization.RegionInfo.Name%2A>, 、 <xref:System.Globalization.RegionInfo.TwoLetterISORegionName%2A>, 、および <xref:System.Globalization.RegionInfo.ThreeLetterISORegionName%2A> プロパティは、大文字で適切なコードを返します。  
  
> [!WARNING]
>  永続化する場合、 <xref:System.Globalization.RegionInfo> オブジェクトまたはプロセス間通信、2 文字の ISO 地域コードではなく、完全なカルチャ名を使用してインスタンス化する必要があります。<xref:System.Globalization.RegionInfo> プロパティはスクリプトと言語に依存をインスタンス化する、 <xref:System.Globalization.RegionInfo> 地域コードのみを使用して、オブジェクトは、コンテキストとデータが失われます。  
  
 定義済み <xref:System.Globalization.RegionInfo> 名前にある [English country names and code elements](http://go.microsoft.com/fwlink/?LinkId=190591) ISO の web サイトにします。  
  
   
  
## 例  
 次のコード例のプロパティを表示する、 <xref:System.Globalization.RegionInfo> クラスです。  
  
 [!code-cpp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CPP/regioninfo_properties.cpp#1)]
 [!code-csharp[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/CS/regioninfo_properties.cs#1)]
 [!code-vb[System.Globalization.RegionInfo\_Properties\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.RegionInfo_Properties/VB/regioninfo_properties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Globalization.RegionInfo.Name" />
        <altmember cref="P:System.Globalization.RegionInfo.EnglishName" />
        <altmember cref="P:System.Globalization.RegionInfo.DisplayName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterISORegionName" />
        <altmember cref="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.RegionInfo" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>