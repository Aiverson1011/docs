<Type Name="ThaiBuddhistCalendar" FullName="System.Globalization.ThaiBuddhistCalendar">
  <TypeSignature Language="C#" Value="public class ThaiBuddhistCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ThaiBuddhistCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.ThaiBuddhistCalendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>タイ仏暦を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイ仏暦については、年と時代 \(年号\) が異なる場合を除いて、グレゴリオ暦のカレンダーとまったく同じ動作です。  
  
> [!NOTE]
>  使用方法について、 <xref:System.Globalization.ThaiBuddhistCalendar> クラスと、その他の .NET Framework のクラスを予定表を参照してください [Working with Calendars](http://msdn.microsoft.com/ja-jp/0c1534e5-979b-4c8a-a588-1c24301aefb3)します。  
  
 <xref:System.Globalization.ThaiBuddhistCalendar> クラスは、現在の時代を認識します。  
  
 うるう年タイ仏暦では、グレゴリオ暦の同じ閏年に対応します。 うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。 ただしは、400 で割り切れるグレゴリオ暦の年がうるう年でした。 一般的な年は 365 日を持ち、うるう年が 366 日あります。  
  
 タイ仏暦については、28 ~ 31 日に 12 か月間があります。  
  
|GetMonth 値|月|平年の日数|閏年の日数|  
|----------------|-------|-----------|-----------|  
|1|มกราคม \(1 月\)|31|31|  
|2|กุมภาพันธ์ \(2 月\)|28|29|  
|3|มีนาคม \(年 3 月\)|31|31|  
|4|เมษายน \(年 4 月\)|30|30|  
|5|พฤษภาคม \(月\)|31|31|  
|6|มิถุนายน \(6 月\)|30|30|  
|7|กรกฎาคม \(7 月\)|31|31|  
|9|สิงหาคม \(8 月\)|31|31|  
|9|กันยายน \(年 9 月\)|30|30|  
|10|ตุลาคม \(年 10 月\)|31|31|  
|11|พฤศจิกายน \(11 月版\)|30|30|  
|12|ธันวาคม \(12 月\)|31|31|  
  
 2 月には、閏年の 29 日までと平年 28 があります。  
  
 グレゴリオ暦での紀元後 2001 年 1 月 1 日では、タイ仏暦では現在の時代 \(年号\) の 2544 年 1 月の最初の日に相当します。  
  
 各 <xref:System.Globalization.CultureInfo> 予定表のセットをサポートします。<xref:System.Globalization.CultureInfo.Calendar%2A> プロパティは、カルチャの既定のカレンダーを返しますと <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> プロパティは、カルチャでサポートされるすべてのカレンダーの配列を返します。 使用する暦を変更する、 <xref:System.Globalization.CultureInfo>, 、アプリケーションを設定する必要があります、 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> の <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> を新しい <xref:System.Globalization.Calendar>します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="T:System.Globalization.GregorianCalendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThaiBuddhistCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">月数を加算する対象の <see cref="T:System.DateTime" />。</param>
        <param name="months">追加するには、数か月の数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> 指定から、指定された月数だけは <see cref="T:System.DateTime" />です。</summary>
        <returns>
          <see cref="T:System.DateTime" /> を指定された、指定した月数を加算した結果を <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 結果の日の部分 <xref:System.DateTime> 結果として得られる日が結果の年の月の有効な日ではない場合に影響します。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果の年の部分 <xref:System.DateTime> 結果の月が指定された年の範囲外の場合は、影響を受ける <xref:System.DateTime>します。 この実装では、現在の時代をサポートします。 したがって、 <xref:System.ArgumentException> 結果の年が指定した時代 \(年号\) を超えた場合にスローされる <xref:System.DateTime>します。 結果の時刻の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。  
  
 たとえば、指定した月、年 10 月 31 日間を持つ場合の指定された日付のその月 31 日値の `months` パラメーターは、6、結果として得られる年は 1 つ以上指定した年、月、年 4 月、日は 4 月の末日である 30 日です。  
  
 場合の値、 `months` パラメーターが負の場合、その結果 <xref:System.DateTime> 、指定よりも前か <xref:System.DateTime>します。  
  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ <xref:System.DateTime> 値が常に等号 <xref:System.DateTimeKind.Unspecified?displayProperty=fullName>します。 保持する、 <xref:System.DateTime.Kind%2A> のプロパティ、 `time` パラメーターを呼び出して、 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> メソッドを次の例のようにです。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## 例  
 <xref:System.Globalization.ThaiBuddhistCalendar.AddMonths%2A> メソッドの使用例を次に示します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">その結果、 <see cref="T:System.DateTime" /> がサポートされている範囲外です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" /> 小さい\-120000 です。  
  
 または  
  
 <paramref name="months" /> 120000 よりも大きくなっています。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">年数を加算する対象の <see cref="T:System.DateTime" />。</param>
        <param name="years">追加する年数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> から、指定した年の指定した数は <see cref="T:System.DateTime" />です。</summary>
        <returns>
          <see cref="T:System.DateTime" /> を指定された、指定した年数を加算した結果を <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 結果の日の部分 <xref:System.DateTime> 結果として得られる日が結果の年の月の有効な日ではない場合に影響します。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果の月の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。 この実装では、現在の時代をサポートします。 したがって、 <xref:System.ArgumentException> 結果の年が指定した時代 \(年号\) を超えた場合にスローされる <xref:System.DateTime>します。 結果の時刻の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。  
  
 たとえば、年 2 月には、閏年、29 日がある場合を除く 28 の日があります。 指定した日付がうるう年の 2 月 29 日の値の場合 `years` 1 に設定されて返される日付は、次の年 2 月 28 日です。  
  
 場合 `years` が負の場合、その結果 <xref:System.DateTime> 、指定よりも前か <xref:System.DateTime>します。  
  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ <xref:System.DateTime> 値が常に等号 <xref:System.DateTimeKind.Unspecified?displayProperty=fullName>します。 保持する、 <xref:System.DateTime.Kind%2A> のプロパティ、 `time` パラメーターを呼び出して、 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> メソッドを次の例のようにです。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## 例  
 <xref:System.Globalization.ThaiBuddhistCalendar.AddYears%2A> メソッドの使用例を次に示します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">その結果、 <see cref="T:System.DateTime" /> がサポートされている範囲外です。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.AddMonths(System.DateTime,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.ThaiBuddhistCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のカレンダーの太陽暦、太陰暦、または両方の組み合わせを示す値を取得します。</summary>
        <value>常に <see cref="F:System.Globalization.CalendarAlgorithmType.SolarCalendar" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、リフレクションを使用して、それぞれのインスタンスを作成 <xref:System.Globalization.Calendar> 型については、.NET Framework との値を表示、 <xref:System.Globalization.Calendar.AlgorithmType%2A> プロパティです。  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>時代 \(年号\) の一覧を取得、 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> クラスです。</summary>
        <value>現在の時代 \(年号\) は、常に値を含んでいる 1 つの要素で構成される配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティによって返される配列の値は、時代 \(年号\) の最大値の範囲は 1 から番号です。 配列の最初の要素で最大の時代 \(年号\) の値が返され、最後の要素の時代 \(年号\) の数の最小値が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した月の日を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>1 から 31 までを表す整数が指定された月の日にち <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 <xref:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth%2A> メソッドの使用例を次に示します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した週の曜日を返します <see cref="T:System.DateTime" />します。</summary>
        <returns>A <see cref="T:System.DayOfWeek" /> を指定した週の曜日を表す値 <see cref="T:System.DateTime" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.DayOfWeek> 値は、次のようにします。  
  
|DayOfWeek 値|これを示します|  
|-----------------|-------------|  
|日曜日|อาทิตย์|  
|月曜日|จันทร์|  
|火曜日|อังคาร|  
|水曜日|พุธ|  
|木曜日|พฤหัสบดี|  
|金曜日|ศุกร์|  
|土曜日|เสาร์|  
  
   
  
## 例  
 <xref:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek%2A> メソッドの使用例を次に示します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した年の日を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>1 から 366 を表す整数が指定された年の日付 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 その年の日付は、その年の最初の日付から日数として定義されます。 たとえば、 <xref:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear%2A> 最初の月の最初の日に 1 が返されたのと <xref:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear%2A> 直前の過去 1 か月の日がその年の日数の合計数を返します。 によって返される値としてこの合計は <xref:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear%2A>です。  
  
   
  
## 例  
 <xref:System.Globalization.ThaiBuddhistCalendar.GetDayOfYear%2A> メソッドの使用例を次に示します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfWeek(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した時代 \(年号\) の指定された年の指定した月の日数を返します。</summary>
        <returns>指定した時代 \(年号\) の指定された年の指定した月の日数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、このメソッドを返します 28 または 29 年 2 月の \(`month` \= 2\) かどうかに応じて、 `year` うるう年です。  
  
   
  
## 例  
 次の例では <xref:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth%2A> 各時代 \(年号\) の 5 年間のそれぞれに 2 番目の月です。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetDaysInMonth/CPP/thaibuddhistcalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetDaysInMonth/CS/thaibuddhistcalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetDaysInMonth/VB/thaibuddhistcalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="era" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した時代 \(年号\) の指定された年の日数を返します。</summary>
        <returns>指定した時代 \(年号\) の指定された年の日数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る 365 または 366 のかどうかによって、たとえば、 `year` うるう年です。  
  
   
  
## 例  
 次の例では <xref:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear%2A> 各時代 \(年号\) の 5 年間です。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar.GetDaysInYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetDaysInYear/CPP/thaibuddhistcalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar.GetDaysInYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetDaysInYear/CS/thaibuddhistcalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar.GetDaysInYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetDaysInYear/VB/thaibuddhistcalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="era" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した、時代 \(年号\) を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した時代 \(年号\) を表す整数 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.ThaiBuddhistCalendar> クラスは、現在の時代を認識します。  
  
   
  
## 例  
 <xref:System.Globalization.ThaiBuddhistCalendar.GetEra%2A> メソッドの使用例を次に示します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">1 年です。</param>
        <param name="era">時代 \(年号\)。</param>
        <summary>指定した年と時代 \(年号\) の閏月を計算します。</summary>
        <returns>戻り値は常に 0 ため、 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> クラスは閏月の概念をサポートしていません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 閏月の概念をサポートする予定表、閏月は特定の月の後、または 1 年間の任意の月の後にことができます。 たとえば、 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> メソッドが 1 ~ 13 を示す、指定された日付に関連付けられている月の間に番号を返します。 年の第 8 と 9 番目の月の間、閏月がある場合、 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> メソッド leap 8 番目の月の 9 と 10 の 9 番目の月、8 番目の月の 8 が返されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した月を返します <see cref="T:System.DateTime" />します。</summary>
        <returns>1 ~ 12 の整数を指定した月を表す <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 <xref:System.Globalization.ThaiBuddhistCalendar.GetMonth%2A> メソッドの使用例を次に示します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDayOfMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した時代 \(年号\) の指定された年の月の数を返します。</summary>
        <returns>指定した時代 \(年号\) の指定された年の月数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では <xref:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear%2A> 各時代 \(年号\) の 5 年間です。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetMonthsInYear/CPP/thaibuddhistcalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetMonthsInYear/CS/thaibuddhistcalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.GetMonthsInYear/VB/thaibuddhistcalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="era" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetWeekOfYear">
      <MemberSignature Language="C#" Value="public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetWeekOfYear(valuetype System.DateTime time, valuetype System.Globalization.CalendarWeekRule rule, valuetype System.DayOfWeek firstDayOfWeek) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
        <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <param name="rule">いずれか、 <see cref="T:System.Globalization.CalendarWeekRule" /> の週を定義する値。</param>
        <param name="firstDayOfWeek">いずれか、 <see cref="T:System.DayOfWeek" /> を週の最初の日を表す値。</param>
        <summary>指定した日付を含む年の通算週を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>1 から始まる正の整数で日付を含む年の通算週を表す、 <paramref name="time" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定して、その年の週の数を決定するこのメソッドを使用できる、 `time` 、今年の最終日のパラメーターです。  
  
 <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> ために使用するカルチャに固有の値を含む、 `rule` と `firstDayOfWeek` パラメーター。  
  
 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> の <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> 既定値が含まれています <xref:System.DayOfWeek> で指定されたカレンダーを使用して、特定のカルチャの週の最初の日を表す値、 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> の <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>です。  
  
 <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> プロパティの <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> 既定値が含まれています <xref:System.Globalization.CalendarWeekRule> で指定されたカレンダーを使用して、特定のカルチャのカレンダーの週を定義する値、 <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> の <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>です。  
  
 たとえば、 <xref:System.Globalization.GregorianCalendar>, 、<xref:System.Globalization.Calendar.GetWeekOfYear%2A> 1 月 1 日 1 が返されます。  
  
   
  
## 例  
 例を次にどのようにの結果、 <xref:System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear%2A> メソッドによって異なります、 <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> と <xref:System.Globalization.CalendarWeekRule> 使用される値。 指定した日付の年の最終日場合 <xref:System.Globalization.ThaiBuddhistCalendar.GetWeekOfYear%2A> その年の週の合計数を返します。  
  
 [!code-cpp[System.Globalization.Calendar.GetWeekOfYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]
 [!code-csharp[System.Globalization.Calendar.GetWeekOfYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]
 [!code-vb[System.Globalization.Calendar.GetWeekOfYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="time" /> または <paramref name="firstDayOfWeek" /> 暦でサポートされる範囲外です。  
  
 または  
  
 <paramref name="rule" /> は有効な <see cref="T:System.Globalization.CalendarWeekRule" /> 値ではありません。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.GetYear(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した年が返されます <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した年を表す整数 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、使用、 <xref:System.Globalization.ThaiBuddhistCalendar.GetYear%2A> メソッドです。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CPP/thaibuddhistcalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/CS/thaibuddhistcalendar_addget.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_AddGet/VB/thaibuddhistcalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonth(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="day">日を表す 1 ~ 31 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した時代 \(年号\) の指定した日付が閏日であるかどうかを判断します。</summary>
        <returns>指定した日が閏日である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 うるう年タイ仏暦では、グレゴリオ暦の同じ閏年に対応します。 うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。 ただしは、400 で割り切れるグレゴリオ暦の年がうるう年でした。 一般的な年は 365 日を持ち、うるう年が 366 日あります。  
  
 閏日は、閏年内のみで発生した日です。 たとえば、2 月 29 日は暦です。  
  
   
  
## 例  
 次の例では <xref:System.Globalization.ThaiBuddhistCalendar.IsLeapDay%2A> 、時代 \(年号\) のそれぞれに 5 年間の 2 番目の月 \(2 月\) の最後の日にします。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar.IsLeapDay\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapDay/CPP/thaibuddhistcalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar.IsLeapDay\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapDay/CS/thaibuddhistcalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar.IsLeapDay\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapDay/VB/thaibuddhistcalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="day" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="era" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した時代 \(年号\) の指定した年の指定した月が閏月かどうかを判断します。</summary>
        <returns>このメソッドは常に返します <see langword="false" />, 派生クラスでオーバーライドされない限り、します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 うるう年タイ仏暦では、グレゴリオ暦の同じ閏年に対応します。 うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。 ただしは、400 で割り切れるグレゴリオ暦の年がうるう年でした。 一般的な年は 365 日を持ち、うるう年が 366 日あります。  
  
 閏月は、閏年でのみ発生する月全体です。 タイ仏暦には、閏月はありません。  
  
   
  
## 例  
 次の例では <xref:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth%2A> の現在の時代 \(年号\) の 5 年間のすべての月です。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar.IsLeapMonth\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapMonth/CPP/thaibuddhistcalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar.IsLeapMonth\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapMonth/CS/thaibuddhistcalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar.IsLeapMonth\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapMonth/VB/thaibuddhistcalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="era" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した時代 \(年号\) の指定した年が閏年かどうかを確認します。</summary>
        <returns>指定した年が閏年である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 うるう年タイ仏暦では、グレゴリオ暦の同じ閏年に対応します。 うるう年グレゴリオ暦では、100 で割り切れるを除く、4 で割り切れるグレゴリオ暦の年として定義されます。 ただしは、400 で割り切れるグレゴリオ暦の年がうるう年でした。 一般的な年は 365 日を持ち、うるう年が 366 日あります。  
  
   
  
## 例  
 次の例では <xref:System.Globalization.ThaiBuddhistCalendar.IsLeapYear%2A> 、時代 \(年号\) のそれぞれに 5 年間です。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar.IsLeapYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapYear/CPP/thaibuddhistcalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar.IsLeapYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapYear/CS/thaibuddhistcalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar.IsLeapYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar.IsLeapYear/VB/thaibuddhistcalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="era" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.ThaiBuddhistCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> クラスでサポートされている最も新しい日付と時刻を取得します。</summary>
        <value>最新の日付と時刻でサポートされている、 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> クラスは、グレゴリオ暦の紀元 9999 年 12 月 31 日の最後時点と同じです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、最小値と予定表の最大値を取得します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_MinMax\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_MinMax/CPP/thaibuddhistcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_MinMax\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_MinMax/CS/thaibuddhistcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_MinMax\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_MinMax/VB/thaibuddhistcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.ThaiBuddhistCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> クラスでサポートされている最も古い日付と時刻を取得します。</summary>
        <value>最初の日付と時刻でサポートされている、 <see cref="T:System.Globalization.ThaiBuddhistCalendar" /> クラスは、グレゴリオ暦の 0001 西暦、1 月 1 日の最初の時点に相当します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、最小値と予定表の最大値を取得します。  
  
 [!code-cpp[System.Globalization.ThaiBuddhistCalendar\_MinMax\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_MinMax/CPP/thaibuddhistcalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.ThaiBuddhistCalendar\_MinMax\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_MinMax/CS/thaibuddhistcalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.ThaiBuddhistCalendar\_MinMax\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.ThaiBuddhistCalendar_MinMax/VB/thaibuddhistcalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThaiBuddhistEra">
      <MemberSignature Language="C#" Value="public const int ThaiBuddhistEra = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ThaiBuddhistEra = (1)" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>現在の時代 \(年号\) を表します。 このフィールドは定数です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.ThaiBuddhistCalendar> クラスは、現在の時代を認識します。 このフィールドは、常に 1 を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="day">日を表す 1 ~ 31 の整数。</param>
        <param name="hour">時間を表す 0 ~ 23 の整数。</param>
        <param name="minute">分を表す 0 ~ 59 の整数。</param>
        <param name="second">秒を表す 0 ~ 59 の整数。</param>
        <param name="millisecond">ミリ秒を表す 0 ~ 999 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> 指定した時代 \(年号\) で指定した日時に設定されています。</summary>
        <returns>
          <see cref="T:System.DateTime" /> 現在の時代 \(年号\) で指定した日時に設定されています。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="day" /> カレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="hour" /> が 0 未満であるか、23 を超えています。  
  
 または  
  
 <paramref name="minute" /> 59 より大きいか、0 より小さい。  
  
 または  
  
 <paramref name="second" /> 59 より大きいか、0 より小さい。  
  
 または  
  
 <paramref name="millisecond" /> 0 よりもか 999 を超えるです。  
  
 または  
  
 <paramref name="era" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.ThaiBuddhistCalendar.ThaiBuddhistEra" />
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.Eras" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">変換する年を表す 2 桁または 4 桁の整数。</param>
        <summary>使用して、指定された年を 4 桁の年に変換、 <see cref="P:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax" /> プロパティを適切な世紀を決定します。</summary>
        <returns>
          <paramref name="year" /> の 4 桁表記を保持する整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A> 2 桁の年を表すことができる 100 年の範囲の最後の年です。 4 桁の年が 2 桁の数字の唯一の検索基準 `year` その 100 年の範囲内です。 たとえば場合、 <xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A> 設定されている 2029年に 100 年の範囲は 1930年から 2029年にします。 そのため、30 の 2 桁の値は、2 桁の値は 29 は 2029年として解釈されます、1930、として解釈されます。  
  
 <xref:System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear%2A> 2 桁または 4 桁の年のいずれかをサポートしています。 2 桁の年の値 \(100 未満\) を渡すと、値によると 4 桁の値に変換するメソッド、 <xref:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax%2A> 適切な 4 桁の年を表す値。 場合は、アプリケーションがサポートされているカレンダーの範囲内にある 4 桁の年の値を提供 <xref:System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear%2A>, 、実際の入力値を返します。 アプリケーションがサポートされているカレンダー範囲から外れて 4 桁の値が指定した場合、または負の値が渡された場合、メソッドは例外をスローします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> カレンダーでサポートされる範囲外です。</exception>
        <altmember cref="P:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.ThaiBuddhistCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年を取得または設定します。</summary>
        <value>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、2 桁の年を 4 桁の年に適切に変換を使用します。 たとえば、グレゴリオ暦のカレンダーで 2029年にこのプロパティが設定されている場合、100 年間範囲は 1930年から 2029 です。 そのため、30 の 2 桁の値は、2 桁の値は 29 は 2029年として解釈されます、1930、として解釈されます。  
  
 このプロパティの初期値は、コントロール パネルの地域と言語のオプション部分の設定から取得されます。 ただし、その情報がの有効期間中に変更できる、 <xref:System.AppDomain>です。<xref:System.Globalization.ThaiBuddhistCalendar> クラスは、システムの設定の変更を検出しません自動的にします。  
  
 アプリケーションでは、この値を 2 桁の年をそのまま使用することを示す 99 に設定する必要があります。 たとえば、このプロパティが 99 に設定されている場合 100 年の範囲は 0 \(ほとんどのカレンダーの有効な値されません\) 99 です。 そのため、30 の 2 桁の値は、30 として解釈されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">設定操作で指定された値は、99% 未満です。  
  
 または  
  
 セット操作で指定された値が超える <see langword="MaxSupportedDateTime.Year" />します。</exception>
        <exception cref="T:System.InvalidOperationException">設定操作の現在のインスタンスは読み取り専用です。</exception>
        <altmember cref="M:System.Globalization.ThaiBuddhistCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>