<Type Name="CharUnicodeInfo" FullName="System.Globalization.CharUnicodeInfo">
  <TypeSignature Language="C#" Value="public static class CharUnicodeInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CharUnicodeInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.CharUnicodeInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Unicode 文字に関する情報を取得します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123) Unicode 文字のカテゴリの数を定義します。 たとえば、文字は、大文字、小文字、10 進数、文字、数字、段落区切り記号、数学記号、または通貨記号として分類可能性があります。 アプリケーションは、解析や正規表現のサブスト リングの抽出など、文字列ベースの処理を制御するために文字カテゴリを使用することができます。<xref:System.Globalization.UnicodeCategory>列挙可能な文字のカテゴリを定義します。  
  
 使用する、<xref:System.Globalization.CharUnicodeInfo>を取得するクラス、<xref:System.Globalization.UnicodeCategory>特定の文字の値。<xref:System.Globalization.CharUnicodeInfo>クラスを次の Unicode 文字の値を返すメソッドを定義します。  
  
-   文字またはサロゲート ペアが所属する特定のカテゴリ。 返される値のメンバーである、<xref:System.Globalization.UnicodeCategory>列挙します。  
  
-   数値。 数値文字、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプト固有の数字を含むにのみ適用されます。  
  
-   桁の値。 他の番号付けシステムの数を示す整数を表す数字を組み合わせた数字に適用されます。  
  
-   10 進値。 10 進数 \(基数 10\) システムでの小数点以下桁数を表す文字にのみ適用されます。 10 進数字には、0 から 9 までの 10 桁の数字のいずれかを指定できます。 これらの文字のメンバーである、<xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=fullName>カテゴリ。  
  
 さらに、<xref:System.Globalization.CharUnicodeInfo>クラスは、多数の他の .NET Framework の型および文字分類に依存するメソッドによって内部的に使用します。 次の設定があります。  
  
-   <xref:System.Globalization.StringInfo>クラスは、文字列内の 1 つの文字ではなくテキストの要素と連携します。  
  
-   オーバー ロード、<xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName>メソッドで、文字またはサロゲート ペアが所属するカテゴリを確認します。  
  
-   [文字クラス](http://msdn.microsoft.com/ja-jp/0f8bffab-ee0d-4e0e-9a96-2b4a252bb7e4)によって認識される<xref:System.Text.RegularExpressions.Regex>、.NET Framework の正規表現エンジンです。  
  
 アプリケーションでこのクラスを使用するときに保持ことに注意次プログラミングの考慮事項を使用するため、<xref:System.Char>型です。 型を使用するには困難になり、文字列は言語的内容を表すことをお勧めします。  
  
-   A<xref:System.Char>オブジェクトは常に 1 つの文字に対応していません。 ただし、<xref:System.Char>を表す 1 つの 16 ビット値の型、2 つ以上の utf\-16 コード単位 \(書記素クラスターとサロゲート ペア\) などの一部の文字で構成されます。 詳細については、「Char オブジェクトと Unicode の文字」を参照してください、<xref:System.String>クラスです。  
  
-   "Character"の概念は、柔軟性もあります。 文字は、多くの場合と考える、グリフが、多くのグリフには、複数のコード ポイントが必要があります。 たとえば、ä を指定できますか 2 つのによって表されるコード ポイント \("a"および u\+0308 を組み合わせて diaeresis である\)、または a の 1 つのコード ポイント \(「ä」または U \+0 00A4\) によってです。 一部の言語は、多くの文字、文字、および言語のコンテンツの表示では混乱を招き複数のコード ポイントを必要とするグリフがあります。 たとえば、ΰ メ \(U \+0 03B0、ギリシャ文字の小文字ウプシロン ディアリティカとトノスと\) はありません大文字のと同じです。 このような値を大文字では、元の値だけを取得します。  
  
   
  
## 例  
 次のコード例では、異なる種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="usage">
      <para>Recognized characters and the specific categories to which they belong are defined by the Unicode standard and can change from one version of the Unicode Standard to another. Categorization of characters in a particular version of the  .NET Framework  is based on a single version of the Unicode Standard regardless of the underlying operating system on which the .NET Framework is running. The following table lists versions of the .NET Framework since the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] and the versions of the Unicode Standard  used to classify characters.  
  
 <list type="table"><listheader><term> .NET Framework version  
  
 </term><description> Version of the Unicode Standard  
  
 </description></listheader><item><term> [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]  
  
 </term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v45](~/includes/net-v45-md.md)]  
  
 </term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v451](~/includes/net-v451-md.md)]  
  
 </term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v452](~/includes/net-v452-md.md)]  
  
 </term><description> [The Unicode Standard, Version 5.0.0](http://www.unicode.org/versions/Unicode5.0.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v46](~/includes/net-v46-md.md)]  
  
 </term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v461](~/includes/net-v461-md.md)]  
  
 </term><description> [The Unicode Standard, Version 6.3.0](http://www.unicode.org/versions/Unicode6.3.0/)  
  
 </description></item><item><term> [!INCLUDE[net_v462](~/includes/net-v462-md.md)]  
  
 </term><description> [The Unicode Standard, Version 8.0.0](http://www.unicode.org/versions/Unicode8.0.0/)  
  
 </description></item></list>  
  
 Each version of the Unicode standard includes information on changes to the Unicode character database since the previous version. The Unicode character database is used by the <see cref="T:System.Globalization.CharUnicodeInfo" /> class for categorizing characters.</para>
    </block>
    <altmember cref="T:System.Globalization.UnicodeCategory" />
    <altmember cref="N:System.Text" />
  </Docs>
  <Members>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">10 進値を取得する対象の Unicode 文字。</param>
        <summary>指定した数字の 10 進値を取得します。</summary>
        <returns>指定した数字の 10 進値。  
  
 または  
  
 指定した文字が 10 進数字ではない場合は\-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、同等の整数値に小数点以下桁数を表す文字に変換します。 小数点以下桁数は文字、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> カテゴリを 10 桁の 10 進数 \(基数 10\) 番号 0 から 9 までのシステムのいずれかを表すことができます。 U\+0030 \(数字のゼロ\) ~ u\+0039 \(数字 9\)、U \+ 0660 \(にアラビア インド数字のゼロ\) と 0669 \(にアラビア インド数字 9\)、U \+ 07c \(NKO 数字 0\) から U \+ 07C 9 \(NKO 数字 9\)、U \+ 1040 \(ミャンマー桁のゼロ\) と 1049 \(ミャンマー数字 9\) を通じてを通じてなどの文字が含まれています。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDecimalDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDecimalDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDecimalDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.String" /> 10 進値を取得する対象の Unicode 文字を含んでいます。</param>
        <param name="index">10 進値を取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置にある数字の 10 進値を取得します。</summary>
        <returns>指定した文字列の指定したインデックスにある数字の 10 進値。  
  
 または  
  
 指定した文字列の指定したインデックス位置にある文字が 10 進数字でない場合は\-1 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、同等の整数値に小数点以下桁数を表す文字に変換します。 小数点以下桁数は文字、 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber> カテゴリを 10 桁の 10 進数 \(基数 10\) 番号 0 から 9 までのシステムのいずれかを表すことができます。 U\+0030 \(数字のゼロ\) ~ u\+0039 \(数字 9\)、U \+ 0660 \(にアラビア インド数字のゼロ\) と 0669 \(にアラビア インド数字 9\)、U \+ 07c \(NKO 数字 0\) から U \+ 07C 9 \(NKO 数字 9\)、U \+ 1040 \(ミャンマー桁のゼロ\) と 1049 \(ミャンマー数字 9\) を通じてを通じてなどの文字が含まれています。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 有効なインデックスの範囲外 <paramref name="s" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">桁の値を取得する対象の Unicode 文字。</param>
        <summary>指定した数字の桁の値を取得します。</summary>
        <returns>指定した数字の桁の値。  
  
 または  
  
 指定した文字ではない数字の場合は\-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 桁の値は、数字として使用できる文字の数値にのみ適用されるプロパティです。 1 桁の数字は、その他の桁の番号付けシステムの数を示す整数を表す部品として使用できる数値文字です。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDigitValue">
      <MemberSignature Language="C#" Value="public static int GetDigitValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDigitValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.String" /> 桁の値を取得する対象の Unicode 文字を含んでいます。</param>
        <param name="index">桁の値を取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置にある数字の桁の値を取得します。</summary>
        <returns>指定した文字列の指定したインデックスにある数字の桁の値。  
  
 または  
  
 指定した文字列の指定したインデックス位置にある文字ではない数字の場合は\-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 桁の値は、数字として使用できる文字の数値にのみ適用されるプロパティです。 1 桁の数字は、その他の桁の番号付けシステムの数を示す整数を表す部品として使用できる数値文字です。  
  
 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 有効なインデックスの範囲外 <paramref name="s" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">数値の値を取得する対象の Unicode 文字。</param>
        <summary>指定した文字に関連付けられている数値を取得します。</summary>
        <returns>指定した文字に関連付けられている数値。  
  
 または  
  
 指定した文字が数字ではない場合は\-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプト固有の数字を含める数字にのみ適用される Unicode 文字プロパティです。 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> メソッドがあると見なさ `ch` 単一言語の文字に対応し、その文字が 10 進数字に変換できるかどうかを確認します。 Unicode 規格の一部の数値が 2 で表されるただし、 <xref:System.Char> サロゲート ペアを形成するオブジェクト。 たとえば、番号付けシステム エーゲは U \+ U \+ 10133 を通じて 10107 のコード ポイントで構成されます。 次の例では、 <xref:System.Char.ConvertFromUtf32%2A> AEGEAN 番号 1 を表す文字列をインスタンス化するメソッドです。 例に示す、出力として、 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.Char%29> メソッドは、上位サロゲートまたは下位サロゲートのこの文字のいずれかが渡された場合に\-1 を返します。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#2)]  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.String" /> 数値の値を取得する対象の Unicode 文字を含んでいます。</param>
        <param name="index">数値の値を取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置にある文字に関連付けられている数値を取得します。</summary>
        <returns>指定した文字列の指定したインデックス位置にある文字に関連付けられている数値。  
  
 または  
  
 指定した文字列の指定したインデックス位置にある文字が数字でない場合は\-1 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 数値は、分数、添字、上付き文字、ローマ数字、通貨分子、丸付き数字、およびスクリプト固有の数字を含める数字にのみ適用される Unicode 文字プロパティです。 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
 場合、 <xref:System.Char> オブジェクト位置にある `index` 、有効なサロゲート ペアの最初の文字である、 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> メソッドかを決定するかどうか、サロゲート ペア フォームの数字の場合は、その数値を返します。 たとえば、番号付けシステム エーゲは U \+ U \+ 10133 を通じて 10107 のコード ポイントで構成されます。 次の例では、 <xref:System.Char.ConvertFromUtf32%2A> Aegean の個々 の数を表す文字列をインスタンス化するメソッドです。 例に示す、出力として、 <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%28System.String%2CSystem.Int32%29> Aegean 数の上位サロゲートを渡された場合、メソッドが適切な数値を返します。 ただし、下位のサロゲートを渡す場合メソッド分離の下位サロゲートのみを考慮し、\-1 を返します。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetNumericValue\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/cs/getnumericvalue1.cs#3)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetNumericValue\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getnumericvalue/vb/getnumericvalue1.vb#3)]  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 有効なインデックスの範囲外 <paramref name="s" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">Unicode カテゴリを取得する対象の Unicode 文字。</param>
        <summary>指定した文字の Unicode カテゴリを取得します。</summary>
        <returns>A <see cref="T:System.Globalization.UnicodeCategory" /> 指定した文字のカテゴリを示す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Unicode 文字は、カテゴリに分類されます。 文字のカテゴリでは、そのプロパティの 1 つです。 たとえば、文字には、大文字、小文字、10 進数、文字、数字、コネクタの区切り記号、数学記号または通貨記号があります。<xref:System.Globalization.UnicodeCategory> クラスは、Unicode 文字のカテゴリを返します。 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A> メソッドがあると見なさ `ch` 単一言語の文字に対応し、そのカテゴリが返されます。 つまり、サロゲート ペアをそれを返します <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=fullName> サロゲートが属しているカテゴリではなく。 たとえば、Ugaritic アルファベットでは、コード ポイント 10380 U \+ U \+ 1039F を占有します。 次の例では、 <xref:System.Char.ConvertFromUtf32%2A> メソッドを表す Ugaritic のアルファベット順の最初の文字である UGARITIC 文字 ALPA \(U \+ 10380\)、文字列のインスタンスを作成します。 例に示す、出力として、 <xref:System.Char.IsNumber%28System.Char%29> メソッドを返します。 `false` 場合は、上位サロゲートまたは下位サロゲートのこの文字のいずれかを渡すことができます。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#1)]  
  
 注意してください <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=fullName> は常に返しません同じ <xref:System.Globalization.UnicodeCategory> 値として、 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> メソッド パラメーターとして渡されると特定の文字。<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=fullName> メソッドが Unicode 規格の現在のバージョンを反映するように設計されています。 これに対し、ですが、 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> メソッドは通常、Unicode 規格の現在のバージョンを反映して、以前のバージョンの標準に基づく文字のカテゴリを返す場合がありますまたは旧バージョンとの互換性を保つため、現在の標準からと異なっているカテゴリを返す場合があります。  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CPP/charunicodeinfo_char.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/CS/charunicodeinfo_char.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_Char\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_Char/VB/charunicodeinfo_char.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">
          <see cref="T:System.String" /> Unicode カテゴリを取得する対象の Unicode 文字を含んでいます。</param>
        <param name="index">Unicode カテゴリを取得する対象の Unicode 文字のインデックス。</param>
        <summary>指定した文字列の指定したインデックス位置の文字の Unicode カテゴリを取得します。</summary>
        <returns>A <see cref="T:System.Globalization.UnicodeCategory" /> 、指定した文字列の指定したインデックス位置にある文字のカテゴリを示す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Unicode 文字は、カテゴリに分類されます。 文字のカテゴリでは、そのプロパティの 1 つです。 たとえば、文字には、大文字、小文字、10 進数、文字、数字、コネクタの区切り記号、数学記号または通貨記号があります。<xref:System.Globalization.UnicodeCategory> クラスは、Unicode 文字のカテゴリを返します。 Unicode 文字の詳細については、次を参照してください。、 [Unicode Standard](http://go.microsoft.com/fwlink/?linkid=37123)します。  
  
 場合、 <xref:System.Char> オブジェクト位置にある `index` 、有効なサロゲート ペアの最初の文字である、 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> メソッドが返す代わりに、サロゲート ペアの Unicode カテゴリを返します <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=fullName>します。 たとえば、Ugaritic アルファベットでは、コード ポイント 10380 U \+ U \+ 1039F を占有します。 次の例では、 <xref:System.Char.ConvertFromUtf32%2A> メソッドを表す Ugaritic のアルファベット順の最初の文字である UGARITIC 文字 ALPA \(U \+ 10380\)、文字列のインスタンスを作成します。 例に示す、出力として、 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29> メソッドが返す <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=fullName> かどうかは、サロゲート ペアとして認識していることを示すこの文字の上位サロゲートが渡されます。 ただし、下位のサロゲートを渡す場合の分離の下位サロゲートのみを考慮しを返します <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=fullName>します。  
  
 [!code-csharp[System.Globalization.CharUnicodeInfo.GetUnicodeCategory\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/cs/getunicodecategory1.cs#2)]
 [!code-vb[System.Globalization.CharUnicodeInfo.GetUnicodeCategory\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.charunicodeinfo.getunicodecategory/vb/getunicodecategory1.vb#2)]  
  
 注意 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=fullName> メソッドは常に返しません同じ <xref:System.Globalization.UnicodeCategory> 値として、 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> メソッド パラメーターとして渡されると特定の文字。<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=fullName> メソッドが Unicode 規格の現在のバージョンを反映するように設計されています。 これに対し、ですが、 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=fullName> メソッドは通常、Unicode 規格の現在のバージョンを反映して、以前のバージョンの標準に基づく文字のカテゴリを返す場合がありますまたは旧バージョンとの互換性を保つため、現在の標準からと異なっているカテゴリを返す場合があります。  
  
   
  
## 例  
 次のコード例では、さまざまな種類の文字の各メソッドによって返される値を示します。  
  
 [!code-cpp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CPP/charunicodeinfo_string.cpp#1)]
 [!code-csharp[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/CS/charunicodeinfo_string.cs#1)]
 [!code-vb[System.Globalization.CharUnicodeInfo\_String\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CharUnicodeInfo_String/VB/charunicodeinfo_string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="s" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> 有効なインデックスの範囲外 <paramref name="s" />します。</exception>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unicode 文字に関連付けられている数値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetDecimalDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unicode 文字の数字の 10 進値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetDigitValue">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unicode 文字の数字の桁の値を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>System.Globalization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Unicode 文字の Unicode カテゴリを取得します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>