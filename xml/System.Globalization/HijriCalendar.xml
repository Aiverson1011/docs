<Type Name="HijriCalendar" FullName="System.Globalization.HijriCalendar">
  <TypeSignature Language="C#" Value="public class HijriCalendar : System.Globalization.Calendar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HijriCalendar extends System.Globalization.Calendar" />
  <TypeSignature Language="DocId" Value="T:System.Globalization.HijriCalendar" />
  <AssemblyInfo>
    <AssemblyName>System.Globalization.Calendars</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Globalization.Calendar</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>イスラム暦を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 イスラム暦の日付が 1 つの時代 \(年号\) を認識します a. h.。\(ラテン"Anno Hegirae"、「年の移行には、」移行のムハマッド \(PBUH\) ふもとからつまり\)。  
  
> [!NOTE]
>  使用方法について、<xref:System.Globalization.HijriCalendar>クラスと、その他の .NET Framework のクラスを予定表を参照してください[Working with Calendars](http://msdn.microsoft.com/ja-jp/0c1534e5-979b-4c8a-a588-1c24301aefb3)です。  
  
 30 年周期 30、第 2、5、7、10、13、16、18th、21、24th で割り切れるを年で終わる、26 日、29 の年がうるう年でした。 共通の年度平年の日数があり、閏年 355 日。  
  
 イスラム暦の日付には、それぞれ 29 ~ 30 日に 12 か月間があります。  
  
|GetMonth 値|月|平年の日数|閏年の日数|  
|----------------|-------|-----------|-----------|  
|1|محرم \(Muharram\)|30|30|  
|2|صفر \(Safar\)|29|29|  
|3|‏ربيع الاول \(Rabi I\)|30|30|  
|4|‏ربيع الثاني \(Rabi II\)|29|29|  
|5|جمادى الاولى \(Jumada I\)|30|30|  
|6|جمادى الثانية \(Jumada II\)|29|29|  
|7|رجب \(Rajab\)|30|30|  
|9|شعبان \(Shaban\)|29|29|  
|9|رمضان \(時候\)|30|30|  
|10|شوال \(Shawwal\)|29|29|  
|11|ذو القعدة \(Zulkadah\)|30|30|  
|12|ذو الحجة \(閏年\)|29|30|  
  
 時候、世界では、イスラム文化、断食月の正式に終わります new moon の観測に基づいている決定に従って。 したがって、Shaban の日数とため日数が異なります。  
  
 グレゴリオ暦での紀元後 2001 年 1 月 1 日はイスラム暦カレンダーにおける年の 1421 a. h. の Shawwal の 6 日とほぼ同等です。  
  
 この実装、<xref:System.Globalization.HijriCalendar>クラスを追加または 0 ~ 2 日、開始時と時候の終了の差異に対応し、国\/リージョン間で日付の差に対応する値を減算によって、カレンダーの日付を調整します。 値を格納する、<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>プロパティです。 場合<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>が明示的に、コントロール パネルの地域と言語のオプション部分の設定からその値を派生し、HKEY\_CURRENT\_USER\\Control Panel\\International\\AddHijriDate のレジストリ値は設定されていません。 ただし、その情報は、期間の変更できる、<xref:System.AppDomain>です。<xref:System.Globalization.HijriCalendar>システム設定 でクラスに変更が検出されない自動的にします。  
  
 各<xref:System.Globalization.CultureInfo>予定表のセットをサポートしています。<xref:System.Globalization.CultureInfo.Calendar%2A>プロパティを返します、カルチャの既定のカレンダーと<xref:System.Globalization.CultureInfo.OptionalCalendars%2A>プロパティは、カルチャでサポートされているすべてのカレンダーを含む配列を返します。 によって使用される暦に変更する、 <xref:System.Globalization.CultureInfo>、アプリケーションを設定する必要があります、<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>プロパティ<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>を新しい<xref:System.Globalization.Calendar>です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.Calendar" />
    <altmember cref="P:System.Globalization.CultureInfo.OptionalCalendars" />
    <altmember cref="T:System.Globalization.UmAlQuraCalendar" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HijriCalendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Globalization.HijriCalendar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public override DateTime AddMonths (DateTime time, int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddMonths(valuetype System.DateTime time, int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> する月数を加算します。</param>
        <param name="months">追加するには、数か月の数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> 指定から、指定された月数だけは <see cref="T:System.DateTime" />です。</summary>
        <returns>
          <see cref="T:System.DateTime" /> を指定された、指定した月数を加算した結果を <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 結果の日の部分 <xref:System.DateTime> 結果として得られる日が結果の年の月の有効な日ではない場合に影響します。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果の年の部分 <xref:System.DateTime> 結果の月が指定された年の範囲外の場合は、影響を受ける <xref:System.DateTime>します。 この実装では、現在の時代をサポートします。 したがって、 <xref:System.ArgumentException> 結果の年が指定した時代 \(年号\) を超えた場合にスローされる <xref:System.DateTime>します。 結果の時刻の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。  
  
 たとえば、Zulkadah、30 日間、指定した月の場合の指定された日付は、その月の 30 日の値、 `months` パラメーターが 3 の場合、結果として得られる年は指定した年、月の 1 つ以上が Safar、日、29 日、最後の日 Safar であります。  
  
 場合の値、 `months` パラメーターが負の場合、その結果 <xref:System.DateTime> 、指定よりも前か <xref:System.DateTime>します。  
  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ <xref:System.DateTime> 値が常に等号 <xref:System.DateTimeKind.Unspecified?displayProperty=fullName>します。 保持する、 <xref:System.DateTime.Kind%2A> のプロパティ、 `time` パラメーターを呼び出して、 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> メソッドを次の例のようにです。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]
 [!code-vb[System.Globalization.Calendar.AddMethods\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">その結果、 <see cref="T:System.DateTime" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="months" /> 小さい\-120000 です。  
  
 または  
  
 <paramref name="months" /> 120000 よりも大きくなっています。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public override DateTime AddYears (DateTime time, int years);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime AddYears(valuetype System.DateTime time, int32 years) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
        <Parameter Name="years" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="time">
          <see cref="T:System.DateTime" /> に年数を加算します。</param>
        <param name="years">追加する年数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> から、指定した年の指定した数は <see cref="T:System.DateTime" />です。</summary>
        <returns>
          <see cref="T:System.DateTime" /> を指定された、指定した年数を加算した結果を <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 結果の日の部分 <xref:System.DateTime> 結果として得られる日が結果の年の月の有効な日ではない場合に影響します。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果の月の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。 この実装では、現在の時代をサポートします。 したがって、 <xref:System.ArgumentException> 結果の年が指定した時代 \(年号\) を超えた場合にスローされる <xref:System.DateTime>します。 結果の時刻の部分 <xref:System.DateTime> 、指定した場合と変わりません <xref:System.DateTime>します。  
  
 たとえば、閏年が 29 日までを除く平年の場合は 30 日間です。 指定した日付がうるう年に閏年の 30 日の値の場合 `years` 1 では、結果として得られる日付は次の年の閏年の 29 日になります。  
  
 場合 `years` が負の場合、その結果 <xref:System.DateTime> 、指定よりも前か <xref:System.DateTime>します。  
  
 <xref:System.DateTime.Kind%2A> 、返されたプロパティ <xref:System.DateTime> 値が常に等号 <xref:System.DateTimeKind.Unspecified?displayProperty=fullName>します。 保持する、 <xref:System.DateTime.Kind%2A> のプロパティ、 `time` パラメーターを呼び出して、 <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> メソッドを次の例のようにです。  
  
 [!code-csharp[System.Globalization.Calendar.AddMethods\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]
 [!code-vb[System.Globalization.Calendar.AddMethods\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">その結果、 <see cref="T:System.DateTime" /> がサポートされている範囲外です。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)" />
        <altmember cref="M:System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="AlgorithmType">
      <MemberSignature Language="C#" Value="public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Globalization.CalendarAlgorithmType AlgorithmType" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.AlgorithmType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CalendarAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のカレンダーの太陽暦、太陰暦、または両方の組み合わせを示す値を取得します。</summary>
        <value>常に <see cref="F:System.Globalization.CalendarAlgorithmType.LunarCalendar" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、リフレクションを使用して、それぞれのインスタンスを作成 <xref:System.Globalization.Calendar> 型については、.NET Framework との値を表示、 <xref:System.Globalization.Calendar.AlgorithmType%2A> プロパティです。  
  
 [!code-csharp[System.Globalization.Calendar.AlgorithmType\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]
 [!code-vb[System.Globalization.Calendar.AlgorithmType\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysInYearBeforeMinSupportedYear">
      <MemberSignature Language="C#" Value="protected override int DaysInYearBeforeMinSupportedYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DaysInYearBeforeMinSupportedYear" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定された年の前にある年の日数を取得、 <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" /> プロパティです。</summary>
        <value>指定された年の前にある年の日数 <see cref="P:System.Globalization.HijriCalendar.MinSupportedDateTime" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、354 の定数値を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eras">
      <MemberSignature Language="C#" Value="public override int[] Eras { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] Eras" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.Eras" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>時代 \(年号\) の一覧を取得、 <see cref="T:System.Globalization.HijriCalendar" />です。</summary>
        <value>時代 \(年号\) を表す整数の配列、 <see cref="T:System.Globalization.HijriCalendar" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イスラム暦の日付は、1 つの時代 \(年号\) を認識します a. h.。\(ラテン"Anno Hegirae"、「年の移行には、」のモハメド \(PBUH\) ふもとからの移行をつまり\)。 このプロパティは、常に 1 つだけの要素を含む配列を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfMonth">
      <MemberSignature Language="C#" Value="public override int GetDayOfMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した月の日を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した月の日を表す 30 に 1 から整数 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Day" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfWeek">
      <MemberSignature Language="C#" Value="public override DayOfWeek GetDayOfWeek (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DayOfWeek GetDayOfWeek(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した週の曜日を返します <see cref="T:System.DateTime" />します。</summary>
        <returns>A <see cref="T:System.DayOfWeek" /> を指定した週の曜日を表す値 <see cref="T:System.DateTime" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.DayOfWeek> 値は、次のようにします。  
  
|DayOfWeek 値|これを示します|  
|-----------------|-------------|  
|日曜日|الاحد \(Al Ahad\)|  
|月曜日|الاثنين \(Al Ithnayn\)|  
|火曜日|الثلاثاء \(Thulaathaa に '\)|  
|水曜日|الاربعاء \(Al Arbi'aa'\)|  
|木曜日|الخميس \(Al Khamiis\)|  
|金曜日|الجمعة \(Al Jumu'ah\)|  
|土曜日|السبت \(Sabt として\)|  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfWeek" />
        <altmember cref="T:System.DayOfWeek" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDayOfYear">
      <MemberSignature Language="C#" Value="public override int GetDayOfYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDayOfYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した年の日を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した年の日を表す 355 を 1 から整数 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 その年の日付は、その年の最初の日付から日数として定義されます。 たとえば、 <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> 最初の月の最初の日に 1 が返されたのと <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> 過去 1 か月の最後の日では、その年の日数の合計数が返されます、同じ値から返される <xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>です。  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.DayOfYear" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInMonth">
      <MemberSignature Language="C#" Value="public override int GetDaysInMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した年と時代 \(年号\) の指定した月の日数を返します。</summary>
        <returns>指定した時代 \(年号\) の指定された年の指定した月の日数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、このメソッドを返します 29 または 30 閏年の \(`month` \= 12\) かどうかに応じて、 `year` うるう年です。  
  
   
  
## 例  
 次のコード例では `GetDaysInMonth` 各時代 \(年号\) の 5 年間の各の 12 か月です。  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetDaysInMonth\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CPP/hijricalendar_getdaysinmonth.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetDaysInMonth\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CS/hijricalendar_getdaysinmonth.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetDaysInMonth\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/VB/hijricalendar_getdaysinmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="year" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDaysInYear">
      <MemberSignature Language="C#" Value="public override int GetDaysInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetDaysInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した年と時代 \(年号\) の日数を返します。</summary>
        <returns>指定した年と時代 \(年号\) の日数。 日数を指定では、共通の年、閏年の場合は 355 354 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では `GetDaysInYear` 各時代 \(年号\) の 5 年間です。  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetDaysInYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CPP/hijricalendar_getdaysinyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetDaysInYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CS/hijricalendar_getdaysinyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetDaysInYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/VB/hijricalendar_getdaysinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> または <paramref name="era" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetEra">
      <MemberSignature Language="C#" Value="public override int GetEra (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEra(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した、時代 \(年号\) を返す <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した時代 \(年号\) を表す整数 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イスラム暦の日付は、1 つの時代 \(年号\) を認識します a. h.。\(ラテン"Anno Hegirae"、「年の移行には、」のモハメド \(PBUH\) ふもとからの移行をつまり\)。  
  
   
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetLeapMonth">
      <MemberSignature Language="C#" Value="public override int GetLeapMonth (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLeapMonth(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">1 年です。</param>
        <param name="era">時代 \(年号\)。<see cref="F:System.Globalization.Calendar.CurrentEra" /> または <see cref="F:System.Globalization.HijriCalendar.HijriEra" /> を指定します。</param>
        <summary>指定した年と時代 \(年号\) の閏月を計算します。</summary>
        <returns>常に 0 ため、 <see cref="T:System.Globalization.HijriCalendar" /> 種類は閏月の概念をサポートしていません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 閏月の概念をサポートする予定表、閏月は特定の月の後、または 1 年間の任意の月の後にことができます。 たとえば、 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> メソッドが 1 ~ 13 を示す、指定された日付に関連付けられている月の間に番号を返します。 年の第 8 と 9 番目の月の間、閏月がある場合、 <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> メソッド leap 8 番目の月の 9 と 10 の 9 番目の月、8 番目の月の 8 が返されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> 1 つまたは 9666 年より大きい値がイスラム暦のカレンダー年未満です。  
  
 または  
  
 <paramref name="era" /> が、<see cref="F:System.Globalization.Calendar.CurrentEra" /> でも <see cref="F:System.Globalization.HijriCalendar.HijriEra" /> でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMonth">
      <MemberSignature Language="C#" Value="public override int GetMonth (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonth(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した月を返します <see cref="T:System.DateTime" />します。</summary>
        <returns>1 ~ 12 の整数を指定した月を表す <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Month" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="GetMonthsInYear">
      <MemberSignature Language="C#" Value="public override int GetMonthsInYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMonthsInYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した年と時代 \(年号\) の月の数を返します。</summary>
        <returns>指定した年と時代 \(年号\) の月の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、それぞれの時代 \(年号\) の 5 年間 GetMonthsInYear メソッドを呼び出します。  
  
 [!code-cpp[System.Globalization.HijriCalendar.GetMonthsInYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CPP/hijricalendar_getmonthsinyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.GetMonthsInYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CS/hijricalendar_getmonthsinyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.GetMonthsInYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/VB/hijricalendar_getmonthsinyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="year" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetYear">
      <MemberSignature Language="C#" Value="public override int GetYear (DateTime time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetYear(valuetype System.DateTime time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.GetYear(System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="time">読み取る対象の <see cref="T:System.DateTime" />。</param>
        <summary>指定した年が返されます <see cref="T:System.DateTime" />します。</summary>
        <returns>指定した年を表す整数 <see cref="T:System.DateTime" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、いくつかのコンポーネントの値を表示、 <xref:System.DateTime> イスラム暦の観点からです。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_AddGet\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Year" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetEra(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)" />
        <altmember cref="M:System.Globalization.Calendar.GetHour(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMinute(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetSecond(System.DateTime)" />
        <altmember cref="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="HijriAdjustment">
      <MemberSignature Language="C#" Value="public int HijriAdjustment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HijriAdjustment" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.HijriAdjustment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を追加または開始および時候の末尾で差異に対応し、国\/地域の日付の違いに合わせてカレンダーから減算する日数を指定します。</summary>
        <value>\-2 2 を表す整数を追加またはカレンダーから減算する日数を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装、<xref:System.Globalization.HijriCalendar>クラスを追加するか、0 ~ 2 日、開始時と時候の終了の差異に対応し、国\/リージョン間で日付の差に対応する値を減算によって、カレンダーの日付を調整します。 値を格納する、<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>プロパティです。 場合<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>が明示的に、コントロール パネルの地域と言語のオプション部分の設定からその値を派生し、HKEY\_CURRENT\_USER\\Control Panel\\International\\AddHijriDate のレジストリ値は設定されていません。 ただし、その情報を変更できますの有効期間中に、<xref:System.AppDomain>です。<xref:System.Globalization.HijriCalendar>クラスには、システム設定の変更は検出されません自動的にします。  
  
   
  
## 例  
 次のコード例に示す方法<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>日付に影響します。  
  
 [!code-cpp[System.Globalization.HijriCalendar.HijriAdjustment\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CPP/hijriadjustment.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.HijriAdjustment\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CS/hijriadjustment.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.HijriAdjustment\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/VB/hijriadjustment.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティは、無効な値に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="HijriEra">
      <MemberSignature Language="C#" Value="public static readonly int HijriEra;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 HijriEra" />
      <MemberSignature Language="DocId" Value="F:System.Globalization.HijriCalendar.HijriEra" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の時代 \(年号\) を表します。 このフィールドは定数です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Globalization.HijriCalendar.HijriEra> フィールドは 1 です。  
  
 イスラム暦の日付は、1 つの時代 \(年号\) を認識します a. h.。\(ラテン"Anno Hegirae"、「年の移行には、」のモハメド \(PBUH\) ふもとからの移行をつまり\)。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapDay">
      <MemberSignature Language="C#" Value="public override bool IsLeapDay (int year, int month, int day, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapDay(int32 year, int32 month, int32 day, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="day">日を表す 1 ~ 30 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した日付が閏日かどうかを確認します。</summary>
        <returns>指定した日が閏日である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 30、第 2、5、7、10、13、16、18th、21st、24th で割り切れる年で終わるすべての 30 年間サイクルでは 26 日 ~ 29 年がうるう年でした。 共通の年度平年の日数があり、うるう年 355 日です。  
  
 閏日は、閏年内のみで発生した日です。 回教暦では、閏年の 30 日は、唯一の閏日です。  
  
   
  
## 例  
 次のコード例では、 `IsLeapDay` 、時代 \(年号\) のそれぞれに 5 年間の 2 番目の月 \(2 月\) の最後の日のメソッドです。  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CPP/hijricalendar_isleapday.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapDay\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CS/hijricalendar_isleapday.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapDay\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/VB/hijricalendar_isleapday.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="year" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="day" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapMonth">
      <MemberSignature Language="C#" Value="public override bool IsLeapMonth (int year, int month, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapMonth(int32 year, int32 month, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した年と時代 \(年号\) の指定した月が閏月かどうかを確認します。</summary>
        <returns>このメソッドは常に返します <see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 30、第 2、5、7、10、13、16、18th、21st、24th で割り切れる年で終わるすべての 30 年間サイクルでは 26 日 ~ 29 年がうるう年でした。 共通の年度平年の日数があり、うるう年 355 日です。  
  
 閏月は、閏年でのみ発生する月全体です。 回教暦には、閏月はありません。  
  
   
  
## 例  
 次のコード例では `IsLeapMonth` の現在の時代 \(年号\) の 5 年間のすべての月です。  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapMonth\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CPP/hijricalendar_isleapmonth.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapMonth\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CS/hijricalendar_isleapmonth.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapMonth\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/VB/hijricalendar_isleapmonth.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="year" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public override bool IsLeapYear (int year, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsLeapYear(int32 year, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>指定した時代 \(年号\) の指定した年が閏年かどうかを確認します。</summary>
        <returns>指定した年が閏年である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 30、第 2、5、7、10、13、16、18th、21st、24th で割り切れる年で終わるすべての 30 年間サイクルでは 26 日 ~ 29 年がうるう年でした。 共通の年度平年の日数があり、うるう年 355 日です。  
  
   
  
## 例  
 次のコード例では、 `IsLeapYear` 、時代 \(年号\) のそれぞれに 5 年間のメソッドです。  
  
 [!code-cpp[System.Globalization.HijriCalendar.IsLeapYear\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CPP/hijricalendar_isleapyear.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar.IsLeapYear\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CS/hijricalendar_isleapyear.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar.IsLeapYear\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/VB/hijricalendar_isleapyear.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="year" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MaxSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MaxSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MaxSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.MaxSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このカレンダーでサポートされている最新の日時を取得します。</summary>
        <value>最新の日付と時刻でサポートされている、 <see cref="T:System.Globalization.HijriCalendar" /> はグレゴリオ暦の紀元 9999 年 12 月 31 日の最終時点に相当する型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 12 月 31 日から 9999 紀元では、イスラム暦の 9666 年の 4 番目の月の第 3 日に相当します。  
  
   
  
## 例  
 次のコード例では、最小値と予定表の最大値を取得します。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_MinMax\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_MinMax\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_MinMax\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinSupportedDateTime">
      <MemberSignature Language="C#" Value="public override DateTime MinSupportedDateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime MinSupportedDateTime" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.MinSupportedDateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このカレンダーでサポートされている最も古い日付と時刻を取得します。</summary>
        <value>最初の日付と時刻でサポートされている、 <see cref="T:System.Globalization.HijriCalendar" /> 622 年 7 月 18日西暦グレゴリオ暦での最初の時点に相当する型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Microsoft Visual Basic でサポートされている日付の最小値で指定された時間として時刻を表す、 <xref:System.DateTime> は西暦 0001 年 1 月 1 日の種類ただし、 <xref:System.Globalization.HijriCalendar> 種類では、その日付の最小値をサポートしていません。 その結果、現在の暦を使用して時刻の書式を設定するメソッドを呼び出す場合、書式指定子を指定しない場合は、ISO 8601 並べ替え可能な \("s"\) の書式設定は日付\/時刻既定の一般 \("G"\) の日付\/時刻パターン書式指定子ではなくパターンの書式指定子。 詳細については、「[Standard DateTime Format Strings](http://msdn.microsoft.com/ja-jp/bb79761a-ca08-44ee-b142-b06b3e2fc22b)」を参照してください。  
  
   
  
## 例  
 次のコード例では、最小値と予定表の最大値を取得します。  
  
 [!code-cpp[System.Globalization.HijriCalendar\_MinMax\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]
 [!code-csharp[System.Globalization.HijriCalendar\_MinMax\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]
 [!code-vb[System.Globalization.HijriCalendar\_MinMax\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime ToDateTime(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, int32 era) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
        <Parameter Name="era" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">年を表す整数。</param>
        <param name="month">月を表す 1 ~ 12 の整数。</param>
        <param name="day">日を表す 1 ~ 30 の整数。</param>
        <param name="hour">時間を表す 0 ~ 23 の整数。</param>
        <param name="minute">分を表す 0 ~ 59 の整数。</param>
        <param name="second">秒を表す 0 ~ 59 の整数。</param>
        <param name="millisecond">ミリ秒を表す 0 ~ 999 の整数。</param>
        <param name="era">時代 \(年号\) を表す整数。</param>
        <summary>返します。、 <see cref="T:System.DateTime" /> 指定した日付、時刻、時代 \(年号\) に設定されています。</summary>
        <returns>
          <see cref="T:System.DateTime" /> 現在の時代 \(年号\) で指定した日時に設定されています。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="era" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="year" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="month" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="day" /> このカレンダーでサポートされる範囲外です。  
  
 または  
  
 <paramref name="hour" /> が 0 未満であるか、23 を超えています。  
  
 または  
  
 <paramref name="minute" /> 59 より大きいか、0 より小さい。  
  
 または  
  
 <paramref name="second" /> 59 より大きいか、0 より小さい。  
  
 または  
  
 <paramref name="millisecond" /> 0 よりもか 999 を超えるです。</exception>
        <altmember cref="T:System.DateTime" />
        <altmember cref="F:System.Globalization.Calendar.CurrentEra" />
        <altmember cref="F:System.Globalization.HijriCalendar.HijriEra" />
        <altmember cref="P:System.Globalization.HijriCalendar.Eras" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)" />
        <altmember cref="M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ToFourDigitYear">
      <MemberSignature Language="C#" Value="public override int ToFourDigitYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ToFourDigitYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year">変換する年を表す 2 桁または 4 桁の整数。</param>
        <summary>使用して、指定された年を 4 桁の年に変換、 <see cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" /> プロパティを適切な世紀を決定します。</summary>
        <returns>
          <paramref name="year" /> の 4 桁表記を保持する整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> 2 桁の年を表すことができる 100 年の範囲の最後の年です。 4 桁の年が 2 桁の数字の唯一の検索基準 `year` その 100 年の範囲内です。 たとえば場合、 <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> 設定されている 1429 に 100 年の範囲は 1330 1429年に。 そのため、30 の 2 桁の値は 1330 として解釈され、、29 の 2 桁の値が 1429 として解釈されます。  
  
 <xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A> 2 桁または 4 桁の年のいずれかをサポートしています。 2 桁の年の値 \(100 未満\) を渡すと、値によると 4 桁の値に変換するメソッド、 <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> 適切な 4 桁の年を表す値。 場合は、アプリケーションがサポートされているカレンダーの範囲内にある 4 桁の年の値を提供 <xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A>, 、実際の入力値を返します。 アプリケーションがサポートされているカレンダー範囲から外れて 4 桁の値が指定した場合、または負の値が渡された場合、メソッドは例外をスローします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="year" /> このカレンダーでサポートされる範囲外です。</exception>
        <altmember cref="P:System.Globalization.HijriCalendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="TwoDigitYearMax">
      <MemberSignature Language="C#" Value="public override int TwoDigitYearMax { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TwoDigitYearMax" />
      <MemberSignature Language="DocId" Value="P:System.Globalization.HijriCalendar.TwoDigitYearMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Globalization.Calendars</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年を取得または設定します。</summary>
        <value>年の 2 桁表記で表すことができる 100 年間の範囲内で最後に当たる年。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、2 桁の年を 4 桁の年に適切に変換を使用します。 たとえば、このプロパティが 1429年に設定されている場合、100 年間は範囲 1330 1429年します。 そのため、30 の 2 桁の値は、2 桁の値は 29 が 1429年として解釈されます、1330年として解釈されます。  
  
 このプロパティの初期値は、コントロール パネルの地域と言語のオプション部分の設定から取得されます。 ただし、その情報がの有効期間中に変更できる、 <xref:System.AppDomain>です。<xref:System.Globalization.HijriCalendar> クラスは、システムの設定の変更を検出しません自動的にします。  
  
 アプリケーションでは、この値を 2 桁の年をそのまま使用することを示す 99 に設定する必要があります。 たとえば、このプロパティが 99 に設定されている場合 100 年の範囲は 0 \(ほとんどのカレンダーの有効な値されません\) 99 です。 そのため、30 の 2 桁の値は、30 として解釈されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このカレンダーは、読み取り専用です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">セット操作の値は、100 より小さいか、9666 より大きいです。</exception>
        <altmember cref="M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>