<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>グループ アカウントをカプセル化します。 グループ アカウントには、プリンシパル オブジェクトまたは管理目的のために作成されたアカウントの任意のコレクションを指定できます。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> サーバーまたは操作の実行対象となるドメインを指定します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> 指定したコンテキストを使用してクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成されると、グループのプリンシパル アカウントは保持されません。 アカウントを保持するための呼び出し、 <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> サーバーまたは操作の実行対象となるドメインを指定します。</param>
        <param name="samAccountName">このプリンシパルの SAM アカウント名。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> クラスし、指定したコンテキストと SAM アカウント名に割り当てられます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成されると、グループのプリンシパル アカウントは保持されません。 アカウントを保持するための呼び出し、 <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のインスタンスを破棄する、 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> オブジェクトです。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> サーバーまたは操作の実行対象となるドメインを指定します。</param>
        <param name="identityValue">グループのプリンシパルの id。 このパラメーターに含まれている任意の形式を指定できます、 <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列挙します。</param>
        <summary>指定された id 値と一致するグループ プリンシパル オブジェクトを返します。</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> オブジェクトの指定された id 値と型と一致するか、一致が見つからない場合は null です。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">現在のグループ オブジェクトと一致する複数のグループ プリンシパル オブジェクトが見つかりました。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> サーバーまたは操作の実行対象となるドメインを指定します。</param>
        <param name="identityType">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> の形式を指定する列挙値、 <c>identityValue</c> パラメーター。</param>
        <param name="identityValue">グループのプリンシパルの id。 このパラメーターに含まれている任意の形式を指定できます、 <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列挙します。</param>
        <summary>指定した id の型と値に一致するグループ プリンシパル オブジェクトを返します。 このバージョンの <see cref="Overlaod:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> メソッドは、id 値の形式を指定します。</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> 、指定された id 値と型と一致するか、一致なしの場合は null を検出します。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">現在のグループ オブジェクトと一致する複数のグループ プリンシパル オブジェクトが見つかりました。</exception>
        <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">Id 値が、無効 <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列挙値。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>グループに含まれているプリンシパル オブジェクトのコレクションを返します。</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> 、グループにメンバーがあるない場合、グループ、または空のコレクションのメンバーであるプリンシパル オブジェクトを含むオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、現在のグループ再帰的には検索しません。 そのため、プリンシパル オブジェクトのコレクションでグループ オブジェクトが返されます。  
  
 メンバーは、コンテキストに関係なく返されます。 例では、AD DS コンテキストに基づいている場合の"CN SpecialUsers, DC \= Fabrikam, DC \= \= com"、PrincipalFindResult セットに格納されているグループのメンバーも含まれます"CN NormalUsers, DC \= Fabrikam, DC \= com を \="検索条件となるコンテキストの一部ではないスコープに該当する場合でもも、です。 返されるプリンシパル コレクションは、グループとは異なるストアに格納されているメンバーを含めることもできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">グループが再帰的に検索するかどうかを指定するブール値。</param>
        <summary>グループに含まれているプリンシパル オブジェクトのコレクションを返します。 Recursive フラグが true の場合、このメソッドに設定する場合、現在のグループ再帰的を検索し、すべての入れ子になったグループ メンバーを返します。</summary>
        <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> 、グループにメンバーがあるない場合、グループ、または空のコレクションのメンバーであるプリンシパル オブジェクトを含むオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返されるプリンシパル コレクション含まないグループ オブジェクトに recursive フラグが設定されているときに `true`; のみリーフ ノードが返されます。 たとえば、コンピューター オブジェクトと、グループ オブジェクト \(ユーザーのプリンシパルのみに使用する場合\) を含むグループが再帰的に検索の場合、返されるコレクションにはコンピューター オブジェクトと、入れ子になったグループにユーザーのプリンシパル オブジェクトが含まれます。 グループ オブジェクトがリーフではないため、空であるときにもは返されません再帰検索します。  Recursive フラグに設定すると `false`, 、返されるコレクションは、グループ オブジェクトを含めることができます。  
  
 メンバーは、コンテキストに関係なく返されます。 例では、AD DS コンテキストに基づいている場合の"CN SpecialUsers, DC \= Fabrikam, DC \= \= com"、PrincipalFindResult セットに格納されているグループのメンバーも含まれます"CN NormalUsers, DC \= Fabrikam, DC \= com を \="検索条件となるコンテキストの一部ではないスコープに該当する場合でもも、です。 返されるプリンシパル コレクションは、グループとは異なるストアに格納されているメンバーを含めることもできます。  
  
   
  
## 例  
 次のコードが LDAP ドメイン"fabrikam.com"とユーザー名"administrator"と"SecretPwd123"に設定されているパスワードに設定するには接続、 <xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンス トラクターです。  
  
 指定されたコンテナーの下で"Domain Admins"という名前を持つグループを検索する検索、 <xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンス トラクター"DC \= fabrikam, DC \= com です"。 グループが見つかった場合、再帰メンバーが含まれているこのグループのメンバーであるすべてのプリンシパルが列挙されます。  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 Nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> グループ プリンシパルのスコープを指定する列挙体です。</summary>
        <value>Null 許容型 <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> スコープが設定されていない場合は、このグループのスコープを指定する列挙値。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">アプリケーションを null にこのプロパティを設定しない場合があります。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグループがセキュリティ機能が有効かどうかを示す null 許容のブール値を設定します。</summary>
        <value>
          <see langword="true" /> 場合は、グループが永続化されていない; グループがセキュリティが有効な場合、または null の場合それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが false から戻るときに、グループは一時的にセキュリティ\-無効です。 ときに、 [IsSecurityGroup](<!-- TODO: review code entity reference <xref:assetId:///IsSecurityGroup?qualifyHint=False&amp;autoUpgrade=True>  -->) プロパティは後で、true にリセット、グループは、同じプロパティを false に設定された前に、します。  
  
 プリンシパルは、ストアに永続化されていない、このプロパティは null を返します。 プリンシパルが永続化された後に、セキュリティが有効な既定の設定は、ストアによって異なります。 AD DS および AD LDS ストアを無効にする新しいプリンシパル永続化するときに対し、SAM は、永続化するときに新しいプリンシパルを有効にします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">アプリケーションを null にこのプロパティを設定しない場合があります。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループのメンバーを表すプリンシパル オブジェクトのコレクションを取得します。</summary>
        <value>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> グループのメンバーを表すプリンシパル オブジェクトを含むオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 AD DS グループの場合、 <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> プロパティには、その primaryId 属性により、グループのメンバーであるユーザーのプリンシパルが含まれています。 グループにこれらの種類のメンバーが含まれている場合、次の制限が適用されます。  
  
-   <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Remove%2A> 、PrimaryId 属性により、グループの一部であるメンバーを削除する方法を使用できません。  
  
-   <xref:System.DirectoryServices.AccountManagment.PrincipalCollection.Clear%2A> 、PrimaryId 属性により、グループの一部であるメンバーを消去する方法を使用できません。  
  
   
  
## 例  
 次のコードが LDAP ドメイン"fabrikam.com"とユーザー名"administrator"と"SecretPwd123"に設定されているパスワードに設定するには接続、 <xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンス トラクターです。  
  
 指定されたコンテナーの下で名前が"Domain Admins"グループを検索する検索、 <xref:System.DirectoryServices.AccountManagement.PrincipalContext> コンス トラクターは、"DC \= fabrikam, DC \= com です"。 名前"John Smith"を持つユーザーは、グループから削除し、"Jim Daly"の名前を持つユーザーはグループに追加、グループが見つかった場合  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>グループに含まれているプリンシパル オブジェクトのコレクションを返します。</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> クラスの新しいインスタンスを初期化します。</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された id 値と一致するグループ プリンシパル オブジェクトを返します。</summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
  </Members>
</Type>