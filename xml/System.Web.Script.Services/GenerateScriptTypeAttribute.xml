<Type Name="GenerateScriptTypeAttribute" FullName="System.Web.Script.Services.GenerateScriptTypeAttribute">
  <TypeSignature Language="C#" Value="public sealed class GenerateScriptTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GenerateScriptTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.GenerateScriptTypeAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Interface, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>プロキシ オブジェクトで、サーバーの種類を生成する必要があるかを指定します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 AJAX 対応 ASP.NET Web サイト、ASP.NET は Web サービス クラスのメソッドのプロキシ オブジェクトを自動的に生成することができます。 これは、入力パラメーターとしてマークされているすべての Web メソッドの戻り値の最上位のほとんどの型に <xref:System.Web.Script.Services.ScriptServiceAttribute>します。  
  
 それ以外の場合の場合に、サーバーの型に対して生成するプロキシ オブジェクト適用 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 手動でします。 適用できる <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> web サービス自体または任意の web サービス メソッドまたは `static` でマークされたページ メソッド <xref:System.Web.Services.WebMethodAttribute>します。  
  
 場合によっては、種類が入力パラメーターまたは Web サービス メソッドの戻り値に対応する場合でも、プロキシは生成されません自動的にします。 この場合は、使用する必要があります、 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 属性の種類のプロキシ オブジェクトを生成します。 これはジェネリック型およびなどを持つ複数の引数は、配列の場合に発生 `Dictionary<string,<T>>`します。  
  
 1 つまたは複数のインスタンス <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> Web サービス クラスまたはメソッドに適用できます。 ASP.NET は最上位レベルの各宣言によって参照される各種の ECMAScript \(JavaScript\) プロキシ クラスを生成し、 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>です。  
  
> [!NOTE]
>  手動で適用する必要がある入れ子にされた型のプロキシ オブジェクトを生成する場合は、 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 入れ子にされた型のそれぞれにします。 ASP.NET は、最上位の型にのみプロキシを生成しは自動的に再帰的に属性を適用しない入れ子にされた型にします。  
  
 属性を使用する方法の詳細については、次を参照してください。 [Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)します。  
  
   
  
## 例  
 次の例は、適用する方法を示しています。 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> Web サービス クラスにし、Web メソッドにします。 結果として、 `ColorObject` 型とその入れ子になった型 `FavoriteColors` プロキシ オブジェクトに含まれています。  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateScriptTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">プロキシ クラスに含める種類です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> 指定した型のクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> このコンス トラクターのパラメーターを名前付きプロパティはオプションです。  
  
   
  
## 例  
 次の例は、使用する方法を示しています。 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> メタデータ マーカーについて、特定の種類の識別子を使用して指定した型のプロキシ オブジェクトを生成します。  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTypeId">
      <MemberSignature Language="C#" Value="public string ScriptTypeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptTypeId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または型のメタデータのマーカーの種類の識別子を設定します。</summary>
        <value>シリアル化された JavaScript Object Notation \(JSON\) 文字列の型のメタデータのマーカーの種類の識別子です。 既定値は、型のアセンブリ修飾名です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、省略可能なプロパティです。 値を指定します。 場合 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> 型メタデータ マーカー \("\_ \_type"\)、型のアセンブリ修飾名ではなくシリアル化された JSON 文字列で使用します。 逆シリアル化中に、型の競合回避モジュールに関連付けられている、 <xref:System.Web.Script.Serialization.JavaScriptSerializer> オブジェクトは、適切なマネージ型に割り当てる型メタデータ マーカー値を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロキシ オブジェクトに含まれている型を取得します。</summary>
        <value>生成されたプロキシ オブジェクトに含まれている型のオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>