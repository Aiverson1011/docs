<Type Name="FileMode" FullName="System.IO.FileMode">
  <TypeSignature Language="C#" Value="public enum FileMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed FileMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileMode" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オペレーティング システムがファイルを開く方法を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。 [&#91;\<topic:\/\/cpconwritingtexttofile\>&#93;](http://msdn.microsoft.com/ja-jp/060cbe06-2adf-4337-9e7b-961a5c840208)します。 ファイルからテキストの読み取りの例は、次を参照してください。 [&#91;\<topic:\/\/cpconreadingtextfromfile\>&#93;](http://msdn.microsoft.com/ja-jp/ed180baa-dfc6-4c69-a725-46e87edafb27)します。 読み取りと書き込みをバイナリ ファイルの例は、次を参照してください。 [&#91;\<topic:\/\/cpconReadingWritingToNewlyCreatedDataFile\>&#93;](http://msdn.microsoft.com/ja-jp/e209d949-31e8-44ea-8e38-87f9093f3093)します。  
  
 A `FileMode` 多くのコンス トラクターのパラメーターが指定されている <xref:System.IO.FileStream>, 、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, 、し、\[、 `Open` のメソッド <xref:System.IO.File> と <xref:System.IO.FileInfo> 、ファイルを開く方法を制御します。  
  
 `FileMode` パラメーター コントロール、ファイルを上書きすると、作成されると、開くか、またはその組み合わせです。 使用 `Open` を既存のファイルを開きます。 ファイルへの追加するには使用 `Append`します。 ファイルを切り捨てるか、存在しない場合は、ファイルを作成、使用 `Create`します。  
  
   
  
## 例  
 次 `FileStream` コンス トラクターは、既存のファイルを開きます \(`FileMode.Open`\)。  
  
 [!code-cpp[Classic FileAccess Example\#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FileAccess Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FileAccess Example\#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FileAccess Example/CS/source.cs#1)]
 [!code-vb[Classic FileAccess Example\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FileAccess Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.IO.File.Open(System.String,System.IO.FileMode)" />
    <altmember cref="M:System.IO.FileInfo.Open(System.IO.FileMode)" />
    <altmember cref="T:System.IO.FileStream" />
    <altmember cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="Append" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Append = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Append" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>存在して、ファイルの末尾をシークまたは新しいファイルを作成する場合は、ファイルを開きます。 これが必要です <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Append" /> 権限です。<see langword="FileMode.Append" /> 組み合わせてでのみ使用できる <see langword="FileAccess.Write" />です。 ファイルのスローの末尾より前に、の位置までシークしようとして、 <see cref="T:System.IO.IOException" /> 例外、および読み取りが失敗してスローしよう、 <see cref="T:System.NotSupportedException" /> 例外です。</summary>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="Create" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Create = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Create" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オペレーティング システムが新しいファイル作成することを指定します。 ファイルが既に存在する場合は上書きされます。 これが必要です <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 権限です。<see langword="FileMode.Create" /> ファイルが存在しない場合と使用を要求するのと同じ <see cref="F:System.IO.FileMode.CreateNew" />、それ以外を使用して <see cref="F:System.IO.FileMode.Truncate" />します。 ファイルは既に存在するが、隠しファイルである場合、 <see cref="T:System.UnauthorizedAccessException" /> 例外がスローされます。</summary>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="CreateNew" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode CreateNew = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.CreateNew" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オペレーティング システムが新しいファイル作成することを指定します。 これが必要です <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 権限です。 ファイルが既に存在する場合、 <see cref="T:System.IO.IOException" /> 例外がスローされます。</summary>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="Open" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Open = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Open" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オペレーティング システムを既存のファイルを開くことを指定します。 ファイルを開くことがで指定された値に依存して、 <see cref="T:System.IO.FileAccess" /> 列挙します。 A <see cref="T:System.IO.FileNotFoundException" /> ファイルが存在しない場合、例外がスローされます。</summary>
      </Docs>
    </Member>
    <Member MemberName="OpenOrCreate">
      <MemberSignature Language="C#" Value="OpenOrCreate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode OpenOrCreate = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.OpenOrCreate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>存在する場合に、オペレーティング システムでファイルを開くことを指定します。それ以外の場合、新しいファイルを作成する必要があります。 ファイルが開かれた場合 <see langword="FileAccess.Read" />, 、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> アクセス許可が必要です。 ファイルのアクセスは場合 <see langword="FileAccess.Write" />, 、<see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> アクセス許可が必要です。 ファイルが開かれた場合 <see langword="FileAccess.ReadWrite" />, 両方 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /> と <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> アクセス許可が必要です。</summary>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="Truncate" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.IO.FileMode Truncate = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.IO.FileMode.Truncate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Primitives</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オペレーティング システムを既存のファイルを開くことを指定します。 ファイルを開くと、そのサイズが 0 バイトになるよう切り捨て必要があります。 これが必要です <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /> 権限です。 ファイルからの読み取りに使用して開いた <see langword="FileMode.Truncate" /> が発生する、 <see cref="T:System.ArgumentException" /> 例外です。</summary>
      </Docs>
    </Member>
  </Members>
</Type>