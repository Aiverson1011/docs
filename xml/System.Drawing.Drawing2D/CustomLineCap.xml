<Type Name="CustomLineCap" FullName="System.Drawing.Drawing2D.CustomLineCap">
  <TypeSignature Language="C#" Value="public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomLineCap extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.CustomLineCap" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>カスタムのユーザー定義のライン キャップをカプセル化します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ライン キャップが先頭と末尾または GDI \+ で描画した曲線に使用される <xref:System.Drawing.Pen> オブジェクトです。 GDI \+ いくつかの定義済みキャップ スタイルをサポートし、ユーザーが独自のキャップ スタイルを定義することができます。 このクラスは、カスタム キャップ スタイルを作成して使用します。  
  
   
  
## 例  
 <xref:System.Drawing.Drawing2D.CustomLineCap> クラスを使用する方法を次の例に示します。 この例貼り付け、Windows フォームにコードを実行します。 フォームの処理 <xref:System.Windows.Forms.Control.Paint> イベントと呼び出し `DrawCaps` 、フォームから <xref:System.Windows.Forms.Control.Paint> イベント処理メソッドを渡す `e` として <xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="fillPath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> カスタム キャップの塗りつぶしを定義するオブジェクト。</param>
        <param name="strokePath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> カスタム キャップのアウトラインを定義するオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> した指定のアウトラインと塗りつぶし。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Drawing2D.CustomLineCap> 操作用に指定の塗りつぶしモードに関係なく、「ワインディング」の塗りつぶしモードを使用します。  
  
 `fillPath` と `strokePath` パラメーターは、同時に使用できません。 1 つのパラメーターには、null 値を渡す必要があります。 どちらのパラメーターに null 値が渡された場合 `fillPath` は無視されます。 場合 `strokePath` は `null`, 、`fillPath` 負の値、y 軸を先に取得する必要があります。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> コンス トラクターです。 この例を実行するには、Windows フォームにコードを貼り付けます。 フォームの処理 <xref:System.Windows.Forms.Control.Paint> イベントと呼び出し `DrawCaps` 、フォームから <xref:System.Windows.Forms.Control.Paint> イベント処理メソッドを渡す `e` として <xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="fillPath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> カスタム キャップの塗りつぶしを定義するオブジェクト。</param>
        <param name="strokePath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> カスタム キャップのアウトラインを定義するオブジェクト。</param>
        <param name="baseCap">カスタム キャップを作成するためのライン キャップ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> から指定した既存のクラス <see cref="T:System.Drawing.Drawing2D.LineCap" /> 指定のアウトラインと塗りつぶしを持つ列挙します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Drawing2D.CustomLineCap> 操作用に指定の塗りつぶしモードに関係なく、「ワインディング」の塗りつぶしモードを使用します。  
  
 `fillPath` と `strokePath` パラメーターは、同時に使用できません。 1 つのパラメーターには、null 値を渡す必要があります。 どちらのパラメーターに null 値が渡された場合 `fillPath` は無視されます。 場合 `strokePath` は `null`, 、`fillPath` 負の値、y 軸を先に取得する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap, float32 baseInset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="baseInset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fillPath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> カスタム キャップの塗りつぶしを定義するオブジェクト。</param>
        <param name="strokePath">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> カスタム キャップのアウトラインを定義するオブジェクト。</param>
        <param name="baseCap">カスタム キャップを作成するためのライン キャップ。</param>
        <param name="baseInset">Cap と線間の距離。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> から指定した既存のクラス <see cref="T:System.Drawing.Drawing2D.LineCap" /> 指定のアウトライン、塗りつぶし、および埋め込みを列挙します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Drawing2D.CustomLineCap> 操作用に指定の塗りつぶしモードに関係なく、「ワインディング」の塗りつぶしモードを使用します。  
  
 `fillPath` と `strokePath` パラメーターは、同時に使用できません。 1 つのパラメーターには、null 値を渡す必要があります。 どちらのパラメーターに null 値が渡された場合 `fillPath` は無視されます。 場合 `strokePath` は `null`, 、`fillPath` 負の値、y 軸を先に取得する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap BaseCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Drawing.Drawing2D.LineCap" /> この列挙体 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 基づきます。</summary>
        <value>
          <see cref="T:System.Drawing.Drawing2D.LineCap" /> この列挙体 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> 基づきます。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseInset">
      <MemberSignature Language="C#" Value="public float BaseInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BaseInset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または cap と、行の間の距離を設定します。</summary>
        <value>キャップの先頭と末尾の行の間の距離。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> の同一コピーを作成します。</summary>
        <returns>
          <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> このメソッドを作成する、オブジェクトとしてキャストします。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例は、Windows フォームで使用するために設計されていて、必要な <xref:System.Windows.Forms.PaintEventArgs>`e`, 、 <xref:System.Windows.Forms.Control.Paint> イベント オブジェクトです。 コードは、次のアクションを実行します。  
  
-   使用してカスタム ライン キャップを作成、 <xref:System.Drawing.Drawing2D.GraphicsPath> オブジェクトです。  
  
-   作成、 <xref:System.Drawing.Drawing2D.CustomLineCap> オブジェクト、 `firstCap`,を使用して、 <xref:System.Drawing.Drawing2D.GraphicsPath> 先ほど作成したオブジェクト。  
  
-   クローンを作成 `firstCap` を使用して、 <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> メソッドです。  
  
-   設定、 <xref:System.Drawing.Pen.CustomStartCap%2A> と <xref:System.Drawing.Pen.CustomEndCap%2A> のプロパティ、 <xref:System.Drawing.Pen> オブジェクト、およびその行と、カスタム キャップを画面に描画するペンを使用しています。  
  
```vb  
Public Sub CloneExample(e As PaintEventArgs)  
 Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  
 New Point(5, - 5)  
 Dim capPath As New GraphicsPath()  
 ' Create a Path and add two lines to it,  
 ' forming a custom line cap.  
 capPath.AddLines(points)  
 ' Create a CustomLineCap object.  
 Dim firstCap As New CustomLineCap(Nothing, capPath)  
 ' Create a copy of firstCap.  
 Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  
 CustomLineCap)  
 ' Create a Pen object.  
 Dim pen As New Pen(Color.Black, 3F)  
 'Set up the line.  
 Dim point1 As New Point(20, 20)  
 Dim point2 As New Point(100, 100)  
 ' Set up the caps.  
 pen.CustomStartCap = firstCap  
 pen.CustomEndCap = secondCap  
 ' Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2)  
 End Sub  
```  
  
```csharp  
private void CloneExample(PaintEventArgs e)  
 {  
 // Create a Path and add two lines to it,  
 // forming a custom line cap.  
 Point[] points =  
 {  
 new Point(-5, -5),  
 new Point(0, 0),  
 new Point(5, -5)  
 };  
 GraphicsPath capPath = new GraphicsPath();  
 capPath.AddLines(points);  
 // Create a CustomLineCap object.  
 CustomLineCap firstCap = new CustomLineCap(null, capPath);  
 // Create a copy of firstCap.  
 CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  
 // Create a Pen object.  
 Pen pen = new Pen(Color.Black, 3.0f);  
 // Set up the line.  
 Point point1 = new Point(20, 20);  
 Point point2 = new Point(100, 100);  
 // Set up the caps.  
 pen.CustomStartCap = firstCap;  
 pen.CustomEndCap = secondCap;  
 // Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> オブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Calling <xref:System.IDisposable.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.CustomLineCap> object to be reallocated for other purposes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CustomLineCap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> リソースを解放し、前に他のクリーンアップ操作を実行しようとする、 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> がガベージ コレクションによって回収されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrokeCaps">
      <MemberSignature Language="C#" Value="public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <see cref="T:System.Drawing.Drawing2D.LineCap" /> この上限内の行の先頭に使用される列挙体です。</param>
        <param name="endCap">
          <see cref="T:System.Drawing.Drawing2D.LineCap" /> この上限内の行の最後に使用される列挙体です。</param>
        <summary>このカスタム キャップを構成する最終行の開始に使用するキャップを取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームにコードを貼り付けます。 フォームの処理 <xref:System.Windows.Forms.Control.Paint> イベントと呼び出し `DrawCaps` 、フォームから <xref:System.Windows.Forms.Control.Paint> イベント処理メソッドを渡す `e` として <xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrokeCaps">
      <MemberSignature Language="C#" Value="public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="startCap">
          <see cref="T:System.Drawing.Drawing2D.LineCap" /> この上限内の行の先頭に使用される列挙体です。</param>
        <param name="endCap">
          <see cref="T:System.Drawing.Drawing2D.LineCap" /> この上限内の行の最後に使用される列挙体です。</param>
        <summary>このカスタム キャップを構成する最終行の開始に使用するキャップを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> メソッドの使用方法を次の例に示します。 この例を実行するには、Windows フォームにコードを貼り付けます。 フォームの処理 <xref:System.Windows.Forms.Control.Paint> イベントと呼び出し `DrawCaps` 、フォームから <xref:System.Windows.Forms.Control.Paint> イベント処理メソッドを渡す `e` として <xref:System.Windows.Forms.PaintEventArgs>します。  
  
 [!code-csharp[System.Drawing.Misc3\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 列挙型を決定する方法これを構成する行 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> オブジェクトが参加しています。</summary>
        <value>
          <see cref="T:System.Drawing.Drawing2D.LineJoin" /> 列挙この <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> オブジェクトの結合線を使用しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを指定する <xref:System.Drawing.Drawing2D.LineJoin> 直線と曲線の線のパスを構成するに参加するために使用する列挙体 <xref:System.Drawing.Drawing2D.CustomLineCap> オブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthScale">
      <MemberSignature Language="C#" Value="public float WidthScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WidthScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これを拡大または縮小する量を取得または <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> クラス オブジェクトの幅に対して、 <see cref="T:System.Drawing.Pen" /> オブジェクトです。</summary>
        <value>キャップを拡大または縮小する量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、カスタム キャップのサイズを乗算するペンの幅の倍数を指定します。 たとえば場合は、このプロパティは 1 に等しい、カスタム キャップの幅\] は、10、カスタム キャップの高さが 5、および行が 3 の幅とペンで描画された、描画 30 単位 15 単位で高はキャップにします。 このプロパティを 3 に設定すると、キャップの幅が描画された 90 単位と高さが 45 単位です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> した指定のアウトラインと塗りつぶし。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>