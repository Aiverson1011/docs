<Type Name="TaskLoggingHelper" FullName="Microsoft.Build.Utilities.TaskLoggingHelper">
  <TypeSignature Language="C#" Value="public class TaskLoggingHelper : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TaskLoggingHelper extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.TaskLoggingHelper" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>タスクで使用するヘルパー ログ メソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、1 つまたは複数のディレクトリを作成するタスクのコードを示します。  
  
 [!code-csharp[msbuild\_MakeDirTask\#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskLoggingHelper (Microsoft.Build.Framework.ITask taskInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask taskInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.ITask)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskInstance" Type="Microsoft.Build.Framework.ITask" />
      </Parameters>
      <Docs>
        <param name="taskInstance">このタスクのインスタンスを含むタスクです。</param>
        <summary>
          <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> クラスの新しいインスタンスを初期化し、そのインスタンスに、指定されたタスクのインスタンスを関連付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskLoggingHelper (Microsoft.Build.Framework.IBuildEngine buildEngine, string taskName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.IBuildEngine buildEngine, string taskName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.#ctor(Microsoft.Build.Framework.IBuildEngine,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="buildEngine" Type="Microsoft.Build.Framework.IBuildEngine" />
        <Parameter Name="taskName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buildEngine">ビルド エンジン。</param>
        <param name="taskName">タスク名。</param>
        <summary>タスク ファクトリによってメッセージのログ記録を支援するために使用するパブリック コンス トラクターです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildEngine">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.IBuildEngine BuildEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.IBuildEngine BuildEngine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.BuildEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.IBuildEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タスクに関連付けられているビルド エンジンを取得します。</summary>
        <value>タスクに関連付けられているビルド エンジンのインスタンスを表す <see cref="T:Microsoft.Build.Framework.IBuildEngine" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractMessageCode">
      <MemberSignature Language="C#" Value="public string ExtractMessageCode (string message, out string messageWithoutCodePrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExtractMessageCode(string message, string messageWithoutCodePrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.ExtractMessageCode(System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageWithoutCodePrefix" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">コード プレフィックスを含む、解析対象の完全なメッセージ。</param>
        <param name="messageWithoutCodePrefix">コード プレフィックスが削除されたメッセージ。</param>
        <summary>指定した完全なメッセージ文字列からメッセージ コード プレフィックスを抽出します。</summary>
        <returns>完全なメッセージ文字列から抽出されたメッセージ コード プレフィックス。メッセージ コードがない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Message code prefixes must match the following .NET regular expressions in order to be recognized: `^\s*[A-Za-z]+\d+:\s*`.  
  
   
  
## 例  
 If this method is given the full message string `MYTASK1001: This is an error message.` and it accepts `This is an error message.` as the value for the **parameterReference tag is not supported!!!!**  
 parameter, then it returns `MYTASK1001`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatResourceString">
      <MemberSignature Language="C#" Value="public virtual string FormatResourceString (string resourceName, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatResourceString(string resourceName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatResourceString(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="resourceName">読み込む文字列リソースの名前。</param>
        <param name="args">読み込まれた文字列の書式設定のための省略可能な引数。</param>
        <summary>指定したリソース文字列を読み込み、必要に応じて、指定した引数を使用して文字列を書式指定します。</summary>
        <returns>書式指定文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在のスレッドのカルチャの書式設定が使用されます。  
  
 このメソッドには、いずれかとそのリソースを登録する所有者のタスクが必要です。、 <xref:Microsoft.Build.Utilities.Task> 基本クラス コンス トラクターまたは <xref:Microsoft.Build.Utilities.Task.TaskResources%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceName" /> によって示される文字列リソースが存在しません。</exception>
        <exception cref="T:System.InvalidOperationException">所有者タスクの <see cref="P:Microsoft.Build.Utilities.Task.TaskResources" /> プロパティは設定されません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public virtual string FormatString (string unformatted, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string FormatString(string unformatted, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.FormatString(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unformatted" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="unformatted">形式を指定する文字列。</param>
        <param name="args">書式設定用の引数。</param>
        <summary>指定した引数を使用して指定した文字列を書式設定します。</summary>
        <returns>書式設定された文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在のスレッドのカルチャの書式設定が使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="unformatted" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceMessage">
      <MemberSignature Language="C#" Value="public virtual string GetResourceMessage (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetResourceMessage(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.GetResourceMessage(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">リソース名。</param>
        <summary>タスクのライブラリ リソースからメッセージを取得します。</summary>
        <returns>タスクのライブラリ リソースからメッセージを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="public bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.HasLoggedErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タスクがこのログ記録ヘルパー オブジェクトを使ってエラーを記録したかどうかを示す値を取得します。</summary>
        <value>タスクがこのログ ヘルパー オブジェクトを通してエラーを記録した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、1 つまたは複数のディレクトリを作成するタスクのコードを示しています。  
  
 [!code-csharp[msbuild\_MakeDirTask\#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpKeywordPrefix">
      <MemberSignature Language="C#" Value="public string HelpKeywordPrefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpKeywordPrefix" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.HelpKeywordPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソース名からヘルプ キーワードを作成するために使用されるプレフィックスを取得または設定します。</summary>
        <value>リソース名からヘルプ キーワードを作成するために使用されるプレフィックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを無視またはに設定できる場合は、タスクには、そのメッセージに関連付けられたヘルプ キーワードがあるない、`null`です。 このプロパティは、空に設定されている場合<xref:System.String>リソース名をそのままヘルプ キーワードとして使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.InitializeLifetimeService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>InitializeLifetimeService は、リモート オブジェクトがアクティブになったときに呼び出されます。  
  
 このメソッドは、オブジェクトの有効期間の場合は長さが決まります。  
  
 スレッド セーフであります。 ただし、InitializeLifetimeService と MarkAsInactive 必要がありますのみ呼び出すことを順番にまとめてまたはまったくないと複数回。</summary>
        <returns>このオブジェクトの有効期間を制御するリース オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCommandLine">
      <MemberSignature Language="C#" Value="public void LogCommandLine (string commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogCommandLine(string commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandLine">コマンド ライン文字列。</param>
        <summary>タスクの基になるツール、実行可能ファイル、またはシェル コマンドのためのコマンド ラインを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCommandLine">
      <MemberSignature Language="C#" Value="public void LogCommandLine (Microsoft.Build.Framework.MessageImportance importance, string commandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogCommandLine(valuetype Microsoft.Build.Framework.MessageImportance importance, string commandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCommandLine(Microsoft.Build.Framework.MessageImportance,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="commandLine" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importance">コマンド ラインの重要度レベルを示す <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 値の 1 つ。</param>
        <param name="commandLine">コマンド ライン文字列。</param>
        <summary>指定した重要度レベルを使用して、タスクの基になるツール、実行可能ファイル、またはシェル コマンドのためのコマンド ラインを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogCriticalMessage">
      <MemberSignature Language="C#" Value="public void LogCriticalMessage (string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogCriticalMessage(string subcategory, string code, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogCriticalMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">警告の種類 \(null にすることができます\) の説明です。</param>
        <param name="code">メッセージ コードが \(null にすることができます\)。</param>
        <param name="helpKeyword">ホスト \(null にすることができます\) IDE のヘルプ キーワード。</param>
        <param name="file">\(Null にすることができます\)、メッセージが発生したファイルへのパス。</param>
        <param name="lineNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の行。</param>
        <param name="columnNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の列。</param>
        <param name="endLineNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の行の範囲の最後の行。</param>
        <param name="endColumnNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の列の範囲の最後の列です。</param>
        <param name="message">メッセージ文字列。</param>
        <param name="messageArgs">メッセージ文字列の書式設定のための省略可能な引数。</param>
        <summary>指定した文字列とその他のメッセージの詳細を使用して重要なメッセージをログに記録します。  
  
 スレッド セーフであります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">場合にスローされる <c>message</c> が null です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LogError">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>エラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、1 つまたは複数のディレクトリを作成するタスクのコードを示します。  
  
 [!code-csharp[msbuild\_MakeDirTask\#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public void LogError (string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogError(string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">メッセージ。</param>
        <param name="messageArgs">メッセージ文字列の書式設定のための省略可能な引数。</param>
        <summary>指定したメッセージとともにエラーを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 次の例では、1 つまたは複数のディレクトリを作成するタスクのコードを示します。  
  
 [!code-csharp[msbuild\_MakeDirTask\#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogError">
      <MemberSignature Language="C#" Value="public void LogError (string subcategory, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogError(string subcategory, string errorCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogError(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">エラーの種類の説明。</param>
        <param name="errorCode">エラー コード。</param>
        <param name="helpKeyword">エラーに関連付けるヘルプ キーワード。</param>
        <param name="file">エラーを格納しているファイルへのパス。</param>
        <param name="lineNumber">エラーが発生したファイル内の行。</param>
        <param name="columnNumber">エラーが発生したファイル内の列。</param>
        <param name="endLineNumber">エラーが発生したファイル内の最終行。</param>
        <param name="endColumnNumber">エラーが発生したファイル内の最終列。</param>
        <param name="message">メッセージ。</param>
        <param name="messageArgs">メッセージ文字列の書式設定のための省略可能な引数。</param>
        <summary>指定したメッセージおよびその他のエラー詳細を使用してエラーを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター `subCategory`, 、`errorCode`, 、`helpKeyword`, 、および `file` できる `null`です。  
  
 パラメーター `lineNumber`, 、`columnNumber`, 、`endLineNumber`, 、および `endColumnNumber` に設定する必要があります 0 利用できない場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromException">
      <MemberSignature Language="C#" Value="public void LogErrorFromException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">ログに記録される例外。</param>
        <summary>指定した例外からのメッセージを使用してエラーを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し履歴は表示されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromException">
      <MemberSignature Language="C#" Value="public void LogErrorFromException (Exception exception, bool showStackTrace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromException(class System.Exception exception, bool showStackTrace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="showStackTrace" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exception">ログに記録される例外</param>
        <param name="showStackTrace">スタック トレースをログに含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定した例外からのメッセージおよびスタック トレース \(省略可能\) を使用して、エラーを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromException">
      <MemberSignature Language="C#" Value="public void LogErrorFromException (Exception exception, bool showStackTrace, bool showDetail, string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromException(class System.Exception exception, bool showStackTrace, bool showDetail, string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromException(System.Exception,System.Boolean,System.Boolean,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="showStackTrace" Type="System.Boolean" />
        <Parameter Name="showDetail" Type="System.Boolean" />
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="exception">ログに記録される例外。</param>
        <param name="showStackTrace">スタック トレースをログに含める場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</param>
        <param name="showDetail">例外の種類とすべての内部例外をログに記録する場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</param>
        <param name="file">例外に関連するファイルの名前。またはプロジェクト ファイルをログに記録する必要がある場合は、<see langword="null" />。</param>
        <summary>指定した例外とすべての内部例外からのメッセージ、およびオプションでスタック トレースを使用して、エラーのログを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorFromResources (string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列を使用して、エラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorFromResources (string subcategoryResourceName, string errorCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorFromResources(string subcategoryResourceName, string errorCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">エラーの種類を説明する文字列リソースの名前。</param>
        <param name="errorCode">エラー コード。</param>
        <param name="helpKeyword">エラーに関連付けるヘルプ キーワード。</param>
        <param name="file">エラーを格納しているファイルへのパス。</param>
        <param name="lineNumber">エラーが発生したファイル内の行。</param>
        <param name="columnNumber">エラーが発生したファイル内の列。</param>
        <param name="endLineNumber">エラーが発生したファイル内の最終行。</param>
        <param name="endColumnNumber">エラーが発生したファイル内の最終列。</param>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列およびその他のエラーの詳細を使用して、エラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター `subCategoryResourceName`, 、`errorCode`, 、`helpKeyword`, 、および `file` できる `null`です。  
  
 パラメーター `lineNumber`, 、`columnNumber`, 、`endLineNumber`, 、および `endColumnNumber` に設定する必要があります 0 利用できない場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorWithCodeFromResources (string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorWithCodeFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列を使用して、エラー コードとともにエラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージは、エラー コードで始まっている場合、コードが抽出され、メッセージが記録されます。  
  
 ヘルプ キーワードのプレフィックスが指定された場合は、メッセージも記録されます。 ヘルプ キーワードは、ヘルプ キーワードのプレフィックスを追加し、文字列リソース名で構成されます。 タスクは、いずれかとヘルプ キーワードのプレフィックスを指定できます、 <xref:Microsoft.Build.Utilities.Task> 基本クラス コンス トラクターまたは <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogErrorWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogErrorWithCodeFromResources (string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogErrorWithCodeFromResources(string subcategoryResourceName, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogErrorWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">エラーの種類を説明する文字列リソースの名前。</param>
        <param name="file">エラーを格納しているファイルへのパス。</param>
        <param name="lineNumber">エラーが発生したファイル内の行。</param>
        <param name="columnNumber">エラーが発生したファイル内の列。</param>
        <param name="endLineNumber">エラーが発生したファイル内の最終行。</param>
        <param name="endColumnNumber">エラーが発生したファイル内の最終列。</param>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列およびその他のエラーの詳細を使用して、エラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージは、エラー コードで始まっている場合、コードが抽出され、メッセージが記録されます。  
  
 ヘルプ キーワードのプレフィックスが指定された場合は、メッセージも記録されます。 ヘルプ キーワードは、ヘルプ キーワードのプレフィックスを追加し、文字列リソース名で構成されます。 タスクは、いずれかとヘルプ キーワードのプレフィックスを指定できます、 <xref:Microsoft.Build.Utilities.Task> 基本クラス コンス トラクターまたは <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A> プロパティです。  
  
 パラメーター `subCategoryResourceName`, 、および `file` できる `null`です。  
  
 パラメーター `lineNumber`, 、`columnNumber`, 、`endLineNumber`, 、および `endColumnNumber` に設定する必要があります 0 利用できない場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogExternalProjectFinished">
      <MemberSignature Language="C#" Value="public void LogExternalProjectFinished (string message, string helpKeyword, string projectFile, bool succeeded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogExternalProjectFinished(string message, string helpKeyword, string projectFile, bool succeeded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectFinished(System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="succeeded" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="message">テキスト メッセージ。</param>
        <param name="helpKeyword">ヘルプ キーワード。</param>
        <param name="projectFile">プロジェクトの名前です。</param>
        <param name="succeeded">そのプロジェクトが正常にビルドされたを示す場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>カスタム <see cref="T:Microsoft.Build.Framework.ExternalProjectFinishedEventArgs" /> 作成イベントのログを記録するときに役立ちます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogExternalProjectStarted">
      <MemberSignature Language="C#" Value="public void LogExternalProjectStarted (string message, string helpKeyword, string projectFile, string targetNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogExternalProjectStarted(string message, string helpKeyword, string projectFile, string targetNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogExternalProjectStarted(System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="targetNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">テキスト メッセージ。</param>
        <param name="helpKeyword">ヘルプ キーワード。</param>
        <param name="projectFile">プロジェクトの名前です。</param>
        <param name="targetNames">ビルドするターゲット。 空の文字列は既定のターゲットを示します。</param>
        <summary>カスタム <see cref="T:Microsoft.Build.Framework.ExternalProjectStartedEventArgs" /> 作成イベントのログを記録するときに役立ちます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LogMessage">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した文字列を含むメッセージをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、1 つまたは複数のディレクトリを作成するタスクのコードを示します。  
  
 [!code-csharp[msbuild\_MakeDirTask\#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">メッセージ。</param>
        <param name="messageArgs">メッセージの書式設定のための引数。</param>
        <summary>指定した文字列を含むメッセージをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:Microsoft.Build.Framework.MessageImportance> メッセージの値は `Normal` 既定です。  
  
   
  
## 例  
 次の例では、1 つまたは複数のディレクトリを作成するタスクのコードを示します。  
  
 [!code-csharp[msbuild\_MakeDirTask\#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_MakeDirTask/CS/msbuild_MakeDirTask.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (Microsoft.Build.Framework.MessageImportance importance, string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(valuetype Microsoft.Build.Framework.MessageImportance importance, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="importance">メッセージの重要度を指定する列挙値の 1 つ。</param>
        <param name="message">メッセージ。</param>
        <param name="messageArgs">メッセージの書式設定のための引数。</param>
        <summary>指定した文字列と重要度でメッセージを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーターを正しく順序に注意してください、または誤って他のオーバー ロードが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessage">
      <MemberSignature Language="C#" Value="public void LogMessage (string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, Microsoft.Build.Framework.MessageImportance importance, string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessage(string subcategory, string code, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, valuetype Microsoft.Build.Framework.MessageImportance importance, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessage(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="code" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">警告の種類 \(null にすることができます\) の説明です。</param>
        <param name="code">メッセージ コード \(null にすることができます\)</param>
        <param name="helpKeyword">ホスト \(null にすることができます\) IDE のヘルプ キーワード。</param>
        <param name="file">\(Null にすることができます\)、メッセージが発生したファイルへのパス。</param>
        <param name="lineNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の行。</param>
        <param name="columnNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の列。</param>
        <param name="endLineNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の行の範囲の最後の行。</param>
        <param name="endColumnNumber">\(この情報が得られない場合は 0 に設定します\)、メッセージが発生したファイル内の列の範囲の最後の列です。</param>
        <param name="importance">メッセージの重要度です。</param>
        <param name="message">メッセージ文字列。</param>
        <param name="messageArgs">メッセージ文字列の書式設定のための省略可能な引数。</param>
        <summary>指定した文字列とその他のメッセージの詳細を使用してメッセージをログに記録します。  
  
 スレッド セーフであります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">場合にスローされる <c>message</c> が null です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessageFromResources">
      <MemberSignature Language="C#" Value="public void LogMessageFromResources (string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessageFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定したリソース文字列でメッセージを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:Microsoft.Build.Framework.MessageImportance> メッセージの値は `Normal` 既定です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessageFromResources">
      <MemberSignature Language="C#" Value="public void LogMessageFromResources (Microsoft.Build.Framework.MessageImportance importance, string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogMessageFromResources(valuetype Microsoft.Build.Framework.MessageImportance importance, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromResources(Microsoft.Build.Framework.MessageImportance,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importance" Type="Microsoft.Build.Framework.MessageImportance" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="importance">メッセージの重要度を指定する列挙値の 1 つ。</param>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定したリソース文字列と重要度でメッセージを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーターを正しく順序に注意してください、または誤って他のオーバー ロードが呼び出されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessageFromText">
      <MemberSignature Language="C#" Value="public bool LogMessageFromText (string lineOfText, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessageFromText(string lineOfText, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessageFromText(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineOfText" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="lineOfText">記録するテキスト行。</param>
        <param name="messageImportance">コマンド ラインの重要度レベルを示す <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 値の 1 つ。</param>
        <summary>指定した行のテキストからのエラー メッセージまたは警告を記録します。</summary>
        <returns>エラーが記録された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エラー メッセージや警告は、正規の形式に一致する行にのみ記録されます。 その他のすべての行は、メッセージとして扱われます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="lineOfText" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesFromFile">
      <MemberSignature Language="C#" Value="public bool LogMessagesFromFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessagesFromFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">メッセージの記録元にするファイルの名前。</param>
        <summary>指定されたファイル内でテキストの行ごとにエラー、警告、およびメッセージを記録します。</summary>
        <returns>少なくとも 1 つのエラーのログが記録される場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 特定の標準形式に一致する行のエラーと警告が記録されます。 その他のすべての行は、メッセージとして記録されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesFromFile">
      <MemberSignature Language="C#" Value="public bool LogMessagesFromFile (string fileName, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessagesFromFile(string fileName, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromFile(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="fileName">メッセージのログを記録するファイルの名前。</param>
        <param name="messageImportance">ログが記録されたメッセージの重要度を指定する列挙値の 1 つ。</param>
        <summary>指定されたファイル内でテキストの行ごとにエラー、警告、およびメッセージのログを記録します。 メッセージの重要性もログに記録します。</summary>
        <returns>少なくとも 1 つのエラーのログが記録された場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 特定の標準形式に一致する行のエラーと警告が記録されます。 その他のすべての行は、メッセージとして記録されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <c>filename</c> が null の場合にスローされます。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogMessagesFromStream">
      <MemberSignature Language="C#" Value="public bool LogMessagesFromStream (System.IO.TextReader stream, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool LogMessagesFromStream(class System.IO.TextReader stream, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogMessagesFromStream(System.IO.TextReader,Microsoft.Build.Framework.MessageImportance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.TextReader" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="stream">ログ記録の元になるストリームを読み取る <see cref="T:System.IO.TextReader" />。</param>
        <param name="messageImportance">コマンド ラインの重要度レベルを示す <see cref="T:Microsoft.Build.Framework.MessageImportance" /> 値の 1 つ。</param>
        <summary>指定したストリームからのエラー メッセージまたは警告を記録します。</summary>
        <returns>エラーが記録された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public void LogWarning (string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarning(string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="message">メッセージ。</param>
        <param name="messageArgs">メッセージ文字列の書式設定のための省略可能な引数。</param>
        <summary>指定したメッセージとともに警告を記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarning">
      <MemberSignature Language="C#" Value="public void LogWarning (string subcategory, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarning(string subcategory, string warningCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string message, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarning(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategory" Type="System.String" />
        <Parameter Name="warningCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategory">警告の種類の説明。</param>
        <param name="warningCode">警告コード。</param>
        <param name="helpKeyword">警告に関連付けるヘルプ キーワード。</param>
        <param name="file">警告を格納するファイルのパス。</param>
        <param name="lineNumber">警告が発生したファイル内の行。</param>
        <param name="columnNumber">警告が発生したファイル内の列。</param>
        <param name="endLineNumber">警告が発生したファイル内の最終行。</param>
        <param name="endColumnNumber">警告が発生したファイル内の最終列。</param>
        <param name="message">メッセージ。</param>
        <param name="messageArgs">メッセージ文字列の書式設定のための省略可能な引数。</param>
        <summary>指定されたメッセージおよびその他の警告の詳細を使用して、警告をログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター `subCategory`, 、`warningCode`, 、`helpKeyword`, 、および `file` できる `null`です。  
  
 パラメーター `lineNumber`, 、`columnNumber`, 、`endLineNumber`, 、および `endColumnNumber` に設定する必要があります 0 利用できない場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromException">
      <MemberSignature Language="C#" Value="public void LogWarningFromException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">ログに記録される例外。</param>
        <summary>指定した例外から出されたメッセージを使用して、警告をログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromException">
      <MemberSignature Language="C#" Value="public void LogWarningFromException (Exception exception, bool showStackTrace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromException(class System.Exception exception, bool showStackTrace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromException(System.Exception,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="showStackTrace" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="exception">ログに記録される例外</param>
        <param name="showStackTrace">スタック トレースをログに含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定した例外からのメッセージと、オプションでスタック トレースを使用して、警告を記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningFromResources (string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列を使用して、警告をログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningFromResources (string subcategoryResourceName, string warningCode, string helpKeyword, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningFromResources(string subcategoryResourceName, string warningCode, string helpKeyword, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningFromResources(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="warningCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">警告の種類を説明する文字列リソースの名前。</param>
        <param name="warningCode">警告コード。</param>
        <param name="helpKeyword">警告に関連付けるヘルプ キーワード。</param>
        <param name="file">警告を格納するファイルのパス。</param>
        <param name="lineNumber">警告が発生したファイル内の行。</param>
        <param name="columnNumber">警告が発生したファイル内の列。</param>
        <param name="endLineNumber">警告が発生したファイル内の最終行。</param>
        <param name="endColumnNumber">警告が発生したファイル内の最終列。</param>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列とその他の警告の詳細を使用して、警告をログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パラメーター `subCategoryResourceName`, 、`warningCode`, 、`helpKeyword`, 、および `file` できる `null`です。  
  
 パラメーター `lineNumber`, 、`columnNumber`, 、`endLineNumber`, 、および `endColumnNumber` に設定する必要があります 0 利用できない場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningWithCodeFromResources (string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningWithCodeFromResources(string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列を使用して、警告を警告コードと共にログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージは、警告コードで始まっている場合は、コードが抽出され、メッセージが記録されます。  
  
 ヘルプ キーワードのプレフィックスが指定された場合は、メッセージも記録されます。 ヘルプ キーワードは、ヘルプ キーワードのプレフィックスを追加し、文字列リソース名で構成されます。 タスクは、いずれかとヘルプ キーワードのプレフィックスを指定できます、 <xref:Microsoft.Build.Utilities.Task> 基本クラス コンス トラクターまたは <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LogWarningWithCodeFromResources">
      <MemberSignature Language="C#" Value="public void LogWarningWithCodeFromResources (string subcategoryResourceName, string file, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string messageResourceName, object[] messageArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LogWarningWithCodeFromResources(string subcategoryResourceName, string file, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string messageResourceName, object[] messageArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.LogWarningWithCodeFromResources(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subcategoryResourceName" Type="System.String" />
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="messageResourceName" Type="System.String" />
        <Parameter Name="messageArgs" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="subcategoryResourceName">警告の種類を説明する文字列リソースの名前。</param>
        <param name="file">警告を格納するファイルのパス。</param>
        <param name="lineNumber">警告が発生したファイル内の行。</param>
        <param name="columnNumber">警告が発生したファイル内の列。</param>
        <param name="endLineNumber">警告が発生したファイル内の最終行。</param>
        <param name="endColumnNumber">警告が発生したファイル内の最終列。</param>
        <param name="messageResourceName">読み込む文字列リソースの名前。</param>
        <param name="messageArgs">読み込まれた文字列の書式設定のための引数。</param>
        <summary>指定されたリソース文字列とその他の警告の詳細を使用して、警告と警告コードをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メッセージは、警告コードで始まっている場合は、コードが抽出され、メッセージが記録されます。  
  
 ヘルプ キーワードのプレフィックスが指定された場合は、メッセージも記録されます。 ヘルプ キーワードは、ヘルプ キーワードのプレフィックスを追加し、文字列リソース名で構成されます。 タスクは、いずれかとヘルプ キーワードのプレフィックスを指定できます、 <xref:Microsoft.Build.Utilities.Task> 基本クラス コンス トラクターまたは <xref:Microsoft.Build.Utilities.Task.HelpKeywordPrefix%2A> プロパティです。  
  
 パラメーター `subCategoryResourceName`, 、および `file` できる `null`です。  
  
 パラメーター `lineNumber`, 、`columnNumber`, 、`endLineNumber`, 、および `endColumnNumber` に設定する必要があります 0 利用できない場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="messageResourceName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="MarkAsInactive">
      <MemberSignature Language="C#" Value="public void MarkAsInactive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkAsInactive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.TaskLoggingHelper.MarkAsInactive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この通知 <see langword="TaskLoggingHelper" /> 不要になったことです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはスレッド セーフである、ただし、InitializeLifetimeService と MarkAsInactive の両方をこの順序で呼び出す必要がありますか、どちらのメソッドを呼び出す必要があります、どちらのメソッドに複数回呼び出す必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskName">
      <MemberSignature Language="C#" Value="protected string TaskName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TaskName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親タスクの名前を取得します。</summary>
        <value>親タスクの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskResources">
      <MemberSignature Language="C#" Value="public System.Resources.ResourceManager TaskResources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Resources.ResourceManager TaskResources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.TaskLoggingHelper.TaskResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.ResourceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログ作成メソッドで使用されるカルチャ固有のリソースを取得または設定します。</summary>
        <value>ログ作成メソッドで使用されるカルチャ固有のリソースを表す <see cref="T:System.Resources.ResourceManager" />。 この値は、<see langword="null" /> の場合もあります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生クラスでローカライズされた文字列が場合、このプロパティを使用して、リソースを登録する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LogWarningFromException">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した例外から出されたメッセージを使用して、警告をログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogMessageFromResources">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したリソース文字列でメッセージを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogMessagesFromFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたファイル内でテキストの行ごとにエラー、警告、およびメッセージを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogErrorWithCodeFromResources">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたリソース文字列を使用して、エラー コードとともにエラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogWarningFromResources">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたリソース文字列を使用して、警告をログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogErrorFromResources">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたリソース文字列を使用して、エラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogWarningWithCodeFromResources">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたリソース文字列を使用して、警告を警告コードと共にログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogCommandLine">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コマンドラインを記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogErrorFromException">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された例外からのメッセージを使用して、エラーをログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LogWarning">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>警告をログに記録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>