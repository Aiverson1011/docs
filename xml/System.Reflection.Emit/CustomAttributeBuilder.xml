<Type Name="CustomAttributeBuilder" FullName="System.Reflection.Emit.CustomAttributeBuilder">
  <TypeSignature Language="C#" Value="public class CustomAttributeBuilder : System.Runtime.InteropServices._CustomAttributeBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit CustomAttributeBuilder extends System.Object implements class System.Runtime.InteropServices._CustomAttributeBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.CustomAttributeBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._CustomAttributeBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._CustomAttributeBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>カスタム属性の構築を支援します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 `CustomAttributeBuilder` カスタム属性を記述するコンス トラクターによって返されるオブジェクト。 関連付ける、 `CustomAttribute` を呼び出してビルダー インスタンスと、 `SetCustomAttribute` そのビルダー インスタンスのメソッドです。 たとえば、作成、 `CustomAttributeBuilder` のインスタンスを記述する `AssemblyCultureAttribute` のコンス トラクターを提供することによって <xref:System.Reflection.AssemblyCultureAttribute> およびその引数。 まず <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> 上、 `AssemblyBuilder` の関連付けを確立するためにします。  
  
   
  
## 例  
 次のコード サンプルは、の使用方法を示します `CustomAttributeBuilder`します。  
  
 [!code-cpp[System.Reflection.Emit.CustomAttributeBuilder Example\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.CustomAttributeBuilder Example\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.CustomAttributeBuilder Example\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.CustomAttributeBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">カスタム属性のコンストラクター。</param>
        <param name="constructorArgs">カスタム属性のコンストラクターに渡す引数。</param>
        <summary>カスタム属性のコンストラクター、およびコンストラクターに渡す引数を指定して、<see langword="CustomAttributeBuilder" /> クラスのインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The elements of the **parameterReference tag is not supported!!!!**  
 array are restricted to element types. They can be **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, an enum, a type, any of the previous types that was cast to an object, or a single\-dimension, zero\-based array of any of the previous types.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="con" /> は静的またはプライベートです。  
  
 または  
  
 指定した引数の数が、コンストラクターの呼び出し規約で求められるコンストラクターのパラメーターの数と一致しません。  
  
 または  
  
 指定した引数の型は、コンストラクターで宣言されているパラメーターの型と一致しません。  
  
 または  
  
 指定した引数は、<see cref="T:System.String" /> または <see cref="T:System.Type" /> 以外の参照型です。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="con" /> または <paramref name="constructorArgs" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.FieldInfo[] namedFields, object[] fieldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs, class System.Reflection.FieldInfo[] namedFields, object[] fieldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
        <Parameter Name="namedFields" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="fieldValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">カスタム属性のコンストラクター。</param>
        <param name="constructorArgs">カスタム属性のコンス トラクターの引数。</param>
        <param name="namedFields">カスタム属性の名前付きフィールドです。</param>
        <param name="fieldValues">カスタム属性の名前付きフィールドの値です。</param>
        <summary>インスタンスを初期化、 <see langword="CustomAttributeBuilder" /> クラスのコンス トラクター、および名前付きフィールドと値のペアのセット引数、カスタム属性のコンス トラクターを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素、 `constructorArgs` と `fieldValues` 配列は要素の型に制限します。 なる場合が `byte`, 、`sbyte`, 、`int`, 、`uint`, 、`long`, 、`ulong`, 、`float`, 、`double`, 、`String`, 、`char`, 、`bool`, 、列挙型、型、オブジェクトにキャストされた以前の型のいずれかまたは以前の型のいずれかの 1 次元、0 から始まる配列です。  
  
> [!IMPORTANT]
>  プライベート フィールドには含まれません `namedFields`します。 そうと、 [CustomAttributeBuilder コンストラクター \(ConstructorInfo, Object\[\], FieldInfo\<xref:System.Reflection.CustomAttributeFormatException> をいつスローする、 [CustomAttributeBuilder コンストラクター \(ConstructorInfo, Object\[\], FieldInfo\<xref:System.Attribute.GetCustomAttributes%2A> メソッドが後で型と呼ばれます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">長さ、 <paramref name="namedFields" /> と <paramref name="fieldValues" /> 配列が異なります。  
  
 または  
  
 <paramref name="con" /> 静的またはプライベートです。  
  
 または  
  
 指定された引数の数が、コンス トラクターの呼び出し規約によって必要に応じて、コンス トラクターのパラメーターの数と一致しません。  
  
 または  
  
 指定された引数の型は、コンス トラクターで宣言されているパラメーターの型と一致しません。  
  
 または  
  
 フィールド値の型では、名前付きフィールドの種類が一致しません。  
  
 または  
  
 フィールドは、コンス トラクターと同じクラスまたは基本クラスに属していません。  
  
 または  
  
 指定された引数または名前付きフィールド以外の場合、参照型は、 <see cref="T:System.String" /> または <see cref="T:System.Type" />です。</exception>
        <exception cref="T:System.ArgumentNullException">パラメーターの 1 つは <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs, class System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
        <Parameter Name="namedProperties" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="propertyValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">カスタム属性のコンストラクター。</param>
        <param name="constructorArgs">カスタム属性のコンス トラクターの引数。</param>
        <param name="namedProperties">カスタム属性のプロパティの名前。</param>
        <param name="propertyValues">カスタム属性の名前付きプロパティの値。</param>
        <summary>インスタンスを初期化、 <see langword="CustomAttributeBuilder" /> クラスのコンス トラクター、および名前付きのプロパティまたは値のペアのセット引数、カスタム属性のコンス トラクターを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素、 `constructorArgs` と `propertyValues` 配列は要素の型に制限します。 なる場合が `byte`, 、`sbyte`, 、`int`, 、`uint`, 、`long`, 、`ulong`, 、`float`, 、`double`, 、`String`, 、`char`, 、`bool`, 、列挙型、型、オブジェクトにキャストされた以前の型のいずれかまたは以前の型のいずれかの 1 次元、0 から始まる配列です。  
  
> [!IMPORTANT]
>  プライベート プロパティを含めないでください `namedProperties`します。 そうと、 [CustomAttributeBuilder コンストラクター \(ConstructorInfo, Object\[\], PropertyInfo\<xref:System.Reflection.CustomAttributeFormatException> をいつスローする、 [CustomAttributeBuilder コンストラクター \(ConstructorInfo, Object\[\], PropertyInfo\<xref:System.Attribute.GetCustomAttributes%2A> メソッドが後で型と呼ばれます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">長さ、 <paramref name="namedProperties" /> と <paramref name="propertyValues" /> 配列が異なります。  
  
 または  
  
 <paramref name="con" /> 静的またはプライベートです。  
  
 または  
  
 指定された引数の数が、コンス トラクターの呼び出し規約によって必要に応じて、コンス トラクターのパラメーターの数と一致しません。  
  
 または  
  
 指定された引数の型は、コンス トラクターで宣言されているパラメーターの型と一致しません。  
  
 または  
  
 プロパティ値の型では、名前付きプロパティの型が一致しません。  
  
 または  
  
 プロパティには、setter メソッドがありません。  
  
 または  
  
 プロパティは、コンス トラクターと同じクラスまたは基本クラスに属していません。  
  
 または  
  
 指定された引数または名前付きプロパティ以外の場合、参照型は、 <see cref="T:System.String" /> または <see cref="T:System.Type" />です。</exception>
        <exception cref="T:System.ArgumentNullException">パラメーターの 1 つは <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeBuilder (System.Reflection.ConstructorInfo con, object[] constructorArgs, System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues, System.Reflection.FieldInfo[] namedFields, object[] fieldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ConstructorInfo con, object[] constructorArgs, class System.Reflection.PropertyInfo[] namedProperties, object[] propertyValues, class System.Reflection.FieldInfo[] namedFields, object[] fieldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="constructorArgs" Type="System.Object[]" />
        <Parameter Name="namedProperties" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="propertyValues" Type="System.Object[]" />
        <Parameter Name="namedFields" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="fieldValues" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="con">カスタム属性のコンストラクター。</param>
        <param name="constructorArgs">カスタム属性のコンス トラクターの引数。</param>
        <param name="namedProperties">カスタム属性のプロパティの名前。</param>
        <param name="propertyValues">カスタム属性の名前付きプロパティの値。</param>
        <param name="namedFields">カスタム属性の名前付きフィールドです。</param>
        <param name="fieldValues">カスタム属性の名前付きフィールドの値です。</param>
        <summary>インスタンスを初期化、 <see langword="CustomAttributeBuilder" /> という名前のフィールドまたは値のペアのクラスのコンス トラクター、名前付きのプロパティまたは値のペアのセット、および一連の引数、カスタム属性のコンス トラクターを指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 要素、 `constructorArgs`, 、`propertyValues`, 、または `fieldValues` 配列は要素の型に制限します。 なる場合が `byte`, 、`sbyte`, 、`int`, 、`uint`, 、`long`, 、`ulong`, 、`float`, 、`double`, 、`String`, 、`char`, 、`bool`, 、列挙型、型、オブジェクトにキャストされた以前の型のいずれかまたは以前の型のいずれかの 1 次元、0 から始まる配列です。  
  
> [!IMPORTANT]
>  プライベート プロパティまたはフィールドは含まれません `namedProperties` または `namedFields`です。 そうと、 [CustomAttributeBuilder コンストラクター \(ConstructorInfo, Object\[\], PropertyInfo\[\], Object\[\], FieldInfo\<xref:System.Reflection.CustomAttributeFormatException> をいつスローする、 [CustomAttributeBuilder コンストラクター \(ConstructorInfo, Object\[\], PropertyInfo\[\], Object\[\], FieldInfo\<xref:System.Attribute.GetCustomAttributes%2A> メソッドが後で型と呼ばれます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">長さ、 <paramref name="namedProperties" /> と <paramref name="propertyValues" /> 配列が異なります。  
  
 または  
  
 長さ、 <paramref name="namedFields" /> と <paramref name="fieldValues" /> 配列が異なります。  
  
 または  
  
 <paramref name="con" /> 静的またはプライベートです。  
  
 または  
  
 指定された引数の数が、コンス トラクターの呼び出し規約によって必要に応じて、コンス トラクターのパラメーターの数と一致しません。  
  
 または  
  
 指定された引数の型は、コンス トラクターで宣言されているパラメーターの型と一致しません。  
  
 または  
  
 プロパティ値の型では、名前付きプロパティの型が一致しません。  
  
 または  
  
 フィールド値の型では、対応するフィールドの種類の型が一致しません。  
  
 または  
  
 プロパティには、set アクセス操作子がありません。  
  
 または  
  
 プロパティまたはフィールド属さない同じクラスまたは基本クラスにコンス トラクターとします。  
  
 または  
  
 指定された引数、名前付きプロパティ、または名前付きフィールド以外の場合、参照型は、 <see cref="T:System.String" /> または <see cref="T:System.Type" />です。</exception>
        <exception cref="T:System.ArgumentNullException">パラメーターの 1 つは <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.GetIDsOfNames(valuetype System.Guid riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">将来使用するために予約されています。 IID\_NULL にする必要があります。</param>
        <param name="rgszNames">マッピング対象として渡される名前の配列。</param>
        <param name="cNames">マッピングされる名前のカウント。</param>
        <param name="lcid">名前を解釈するロケール コンテキスト。</param>
        <param name="rgDispId">名前に対応する ID を受け取る、呼び出し元が割り当てた配列。</param>
        <summary>一連の名前を対応する一連のディスパッチ識別子に割り当てます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびないマネージ コードから呼び出す必要があります。 詳細については `IDispatch::GetIDsOfNames`, 、MSDN ライブラリを参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">メソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">返される型情報。</param>
        <param name="lcid">型情報のロケール ID。</param>
        <param name="ppTInfo">要求された型情報オブジェクトへのポインターを取得します。</param>
        <summary>オブジェクトの型情報を取得します。この型情報を使用して、インターフェイスの型情報を取得できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびないマネージ コードから呼び出す必要があります。 詳細については `IDispatch::GetTypeInfo`, 、MSDN ライブラリを参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">メソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.GetTypeInfoCount(unsigned int32 pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">オブジェクトによって提供される型情報インターフェイスの数を受け取る場所へのポインター。</param>
        <summary>オブジェクトが提供する型情報インターフェイスの数 \(0 または 1\) を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびないマネージ コードから呼び出す必要があります。 詳細については `IDispatch::GetTypeInfoCount`, 、MSDN ライブラリを参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">メソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._CustomAttributeBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _CustomAttributeBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._CustomAttributeBuilder.Invoke(unsigned int32 dispIdMember, valuetype System.Guid riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.CustomAttributeBuilder.System#Runtime#InteropServices#_CustomAttributeBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">メンバーを識別します。</param>
        <param name="riid">将来使用するために予約されています。 IID\_NULL にする必要があります。</param>
        <param name="lcid">引数を解釈する対象のロケール コンテキスト。</param>
        <param name="wFlags">呼び出しのコンテキストを記述するフラグ。</param>
        <param name="pDispParams">引数の配列、名前付き引数の DISPID の配列、配列内の要素数のカウントを格納している構造体へのポインター。</param>
        <param name="pVarResult">結果が格納される場所へのポインター。</param>
        <param name="pExcepInfo">例外情報を格納する構造体へのポインター。</param>
        <param name="puArgErr">エラーが存在する最初の引数のインデックス。</param>
        <summary>オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびないマネージ コードから呼び出す必要があります。 詳細については `IDispatch::Invoke`, 、MSDN ライブラリを参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">メソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>インスタンスを初期化、 <see langword="CustomAttributeBuilder" /> クラスです。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>