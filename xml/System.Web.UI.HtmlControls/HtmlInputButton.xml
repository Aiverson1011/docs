<Type Name="HtmlInputButton" FullName="System.Web.UI.HtmlControls.HtmlInputButton">
  <TypeSignature Language="C#" Value="public class HtmlInputButton : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputButton extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputButton" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバー上の HTML <see langword="&lt;input type= button&gt;" />、<see langword="&lt;input type= submit&gt;" />、および <see langword="&lt;input type= reset&gt;" /> の各要素へのプログラムによるアクセスを許可します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.HtmlControls.HtmlInputButton> class to create button controls on a Web page. An **languageKeyword tag is not supported!!!!**  
 HTML element is a push button with no default behavior when clicked. An **languageKeyword tag is not supported!!!!**  
 HTML element is a button that submits a form when clicked. An **languageKeyword tag is not supported!!!!**  
 HTML button resets all controls to their initial values when clicked.  
  
 In ASP.NET 2.0, use the <xref:System.Web.UI.HtmlControls.HtmlInputReset> class and the <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> class to create Reset and Submit buttons, respectively.  
  
 For a list of initial property values for an instance of <xref:System.Web.UI.HtmlControls.HtmlInputButton>, see the <xref:System.Web.UI.HtmlControls.HtmlInputButton.%23ctor%2A> constructor.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlInputButton> control to create a command button, a Submit button, and a Reset button.  
  
 [!code-csharp[System.Web.UI.HtmlControls.HtmlInputButton\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/cs/htmlinputbuttoncs.aspx#1)]
 [!code-vb[System.Web.UI.HtmlControls.HtmlInputButton\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInputButton/vb/htmlinputbuttonvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定値を使用して <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The following table shows the initial property value for an instance of <xref:System.Web.UI.HtmlControls.HtmlInputButton>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|The "button" literal string.|  
  
   
  
## 例  
 The following code example demonstrates how to create a new instance of an <xref:System.Web.UI.HtmlControls.HtmlInputButton> control using the default constructor.  
  
 [!code-csharp[HtmlInputButtonCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor/CS/htmlinputbuttonctorcs.aspx#1)]
 [!code-vb[HtmlInputButtonCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor/VB/htmlinputbuttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputButton (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">入力ボタンの種類。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" />クラスの指定したボタンの種類を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Web.UI.HtmlControls.HtmlInputButton>です。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|`type` パラメーターの値。|  
  
 次の表に、別の値、`type`パラメーター。  
  
|値|説明|  
|-------|--------|  
|`button`|コマンド ボタンをクリックします。|  
|`submit`|サーバーにフォームを送信するボタンです。|  
|`reset`|フォームをクリアするボタンです。|  
  
   
  
## 例  
 次のコード例は、の新しいインスタンスを作成する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlInputButton>オーバー ロードされたコンス トラクターの使用を制御します。  
  
 [!code-csharp[HtmlInputButtonCtor2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCtor2/CS/htmlinputbuttonctor2cs.aspx#1)]
 [!code-vb[HtmlInputButtonCtor2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCtor2/VB/htmlinputbuttonctor2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証を実行するかどうかを示す値を設定するときに、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> コントロールがクリックされました。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> コントロールがクリックされたときに検証を実行する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、ページの検証が実行されるときに、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> コントロールがクリックされました。 ページの検証では、入力コントロールが検証コントロールで指定された検証規則に準拠のすべてのページ上の検証コントロールに関連付けられているかどうかを決定します。  
  
 指定したり、クライアントとサーバーの両方で検証を実行するかどうかを決定するときに、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> を使用してコントロールがクリックされた、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> プロパティです。 検証が実行されているを防ぐためには、設定、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> プロパティを `false`します。  
  
 このプロパティは、イベント ハンドラーでよく使用、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> ページまたはリセットする \[キャンセル\] ボタンがクリックされたときに発生する検証が実行できなくイベントです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> ページ検証の発生を防ぐためにプロパティです。 通知方法、 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドをアクティブにない各検証コントロール個別にします。  
  
 [!code-csharp[HtmlInputButtonCausesValidation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/CS/htmlinputbuttoncausesvalidationcs.aspx#1)]
 [!code-vb[HtmlInputButtonCausesValidation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonCausesValidation/VB/htmlinputbuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />。</param>
        <summary>発生させる、 <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> ポストバックを生成するためのイベントとレジスタのクライアント スクリプトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> メソッドのオーバーライド、 <xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName> メソッドです。<xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> 主にコントロールの開発者によって使用されます。  
  
   
  
## 例  
 次のコード例を上書きする方法を示しています、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> メソッドことは、カスタムを常に表示できるように <xref:System.Web.UI.HtmlControls.HtmlInputButton> 太字のテキスト。  
  
 [!code-csharp[CustomHtmlInputButtonOnPreRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerendercs.aspx#1)]
 [!code-vb[CustomHtmlInputButtonOnPreRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonOnPreRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/CS/custom_htmlinputbutton_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputButtonOnPreRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonOnPreRender/VB/custom_htmlinputbutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" /> イベントを発生させます。 これにより、イベントを直接処理できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> イベントが発生したときに、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> コントロールがクリックされました。  
  
> [!NOTE]
>  \[リセット\] ボタンは発生しません、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> イベントです。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> イベントです。 イベント ハンドラーは、ページ上の 2 つのテキスト ボックスの値を追加し、結果を表示します。  
  
 [!code-csharp[HtmlInputButton\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-vb[HtmlInputButton\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-csharp[HtmlInputButtonServerClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-vb[HtmlInputButtonServerClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> コントロールのイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent%2A> メソッドを使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> を発生させる、クリックしてされたときのコントロール、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> イベントです。  
  
 場合、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> プロパティは、 `true`, 、 <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> で指定されたコントロールのグループを使用してメソッドが呼び出される、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> プロパティです。  
  
 このメソッドは、主の機能を拡張するコントロールの開発者によって使用、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、レンダリングされたコンテンツを受け取る。</param>
        <summary>指定されたライターに属性を表示してから、 <see cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A> メソッドは、ベース <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=fullName>.method します。<xref:System.Web.UI.HtmlControls.HtmlInputButton.RenderAttributes%2A> 主にコントロールの開発者によって使用されます。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.OnPreRender%2A> カスタム サーバー内のメソッドを制御できるため、ツールヒントとしてアクセスできるように特定のタイトル テキストはに対して常に表示される、 <xref:System.Web.UI.HtmlControls.HtmlInputButton>です。  
  
 [!code-csharp[CustomHtmlInputButtonRenderAttributes\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributescs.aspx#1)]
 [!code-vb[CustomHtmlInputButtonRenderAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputButtonRenderAttributes\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/CS/custom_htmlinputbutton_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputButtonRenderAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputButtonRenderAttributes/VB/custom_htmlinputbutton_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> Web ページにコントロールをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントが発生したときに、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> コントロールがクリックされました。  
  
> [!NOTE]
>  \[リセット\] ボタンは発生しません、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> イベントです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ServerClick> イベントです。 イベント ハンドラーは、ページ上の 2 つのテキスト ボックスの値を追加し、結果を表示します。  
  
 [!code-csharp[HtmlInputButton\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButton/CS/htmlinputbuttoncs.aspx#1)]
 [!code-vb[HtmlInputButton\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButton/VB/htmlinputbuttonvb.aspx#1)]  
  
 [!code-csharp[HtmlInputButtonServerClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonServerClick/CS/htmlinputbuttonserverclickcs.aspx#1)]
 [!code-vb[HtmlInputButtonServerClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonServerClick/VB/htmlinputbuttonserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputButton.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡される省略可能なイベント引数を表す <see cref="T:System.String" />。</param>
        <summary>実装して、 <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" /> メソッドを呼び出して、 <see cref="M:System.Web.UI.HtmlControls.HtmlInputButton.RaisePostBackEvent(System.String)" /> メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのグループを設定する、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> が原因で、サーバーへのポストバック時に検証します。</summary>
        <value>なるコントロールのグループ、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> 時に、サーバーへのポストバックします。 既定値は空の文字列 \(""\)、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループから個別に検証できます。 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> の検証グループの名前を指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> 時に、サーバーへのポストバックします。  
  
 このプロパティは、有効される場合にのみの値、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> にプロパティが設定されている `true`します。 値を指定すると、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> プロパティには、指定したグループの一部である検証コントロールだけは、検証、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> コントロールは、サーバーにポストバックします。 このプロパティの値を指定しないかどうか、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation%2A> にプロパティが設定されている `true`, 、検証グループに割り当てられていないページ上のすべての検証コントロールは、サーバーへのコントロールのポストバック時に検証されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputButton.ValidationGroup%2A> プロパティを検証するためにコントロールを指定する、 <xref:System.Web.UI.HtmlControls.HtmlInputButton> コントロールは、サーバーにポストバックします。 ページには、ユーザーからのデータをキャプチャする 2 つのテキスト ボックスと 2 つの <xref:System.Web.UI.WebControls.RequiredFieldValidator> こと、ユーザーは空白でないテキスト ボックスをように制御します。<xref:System.Web.UI.WebControls.RequiredFieldValidator> で最初のテキスト ボックスは、制御、 `CityInfoGroup` 検証グループおよび <xref:System.Web.UI.WebControls.RequiredFieldValidator> 、2 番目のボックスが制御、 `StateInfoGroup` 検証グループです。 ときに、 `CityQueryButton` がクリックすると、コントロールにのみ、 `CityInfoGroup` 検証グループを検証します。 ときに、 `StateQueryButton` がクリックすると、コントロールにのみ、 `StateInfoGroup` 検証グループを検証します。  
  
 [!code-csharp[HtmlInputButtonValidationGroup\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/CS/htmlinputbuttonvalidationgroupcs.aspx#1)]
 [!code-vb[HtmlInputButtonValidationGroup\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputButtonValidationGroup/VB/htmlinputbuttonvalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputButton.CausesValidation" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputButton" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>