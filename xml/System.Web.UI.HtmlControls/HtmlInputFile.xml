<Type Name="HtmlInputFile" FullName="System.Web.UI.HtmlControls.HtmlInputFile">
  <TypeSignature Language="C#" Value="public class HtmlInputFile : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputFile extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputFile" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;input type= file&gt;" /> 要素へのプログラムによるアクセスを可能にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.HtmlControls.HtmlInputFile> server control to handle uploading binary or text files from a browser client to the server. File upload works with Microsoft Internet Explorer version 3.02 or later.  
  
> [!NOTE]
>  The <xref:System.Web.UI.HtmlControls.HtmlInputFile> control is designed to be used only in postback scenarios and not in asynchronous postback scenarios during partial\-page rendering. When you use a <xref:System.Web.UI.HtmlControls.HtmlInputFile> control inside an <xref:System.Web.UI.UpdatePanel> control, the file must be uploaded by using a control that is a <xref:System.Web.UI.PostBackTrigger> object for the panel. <xref:System.Web.UI.UpdatePanel> controls are used to update selected regions of a page instead of updating the whole page with a postback. For more information, see [UpdatePanel Control Overview](http://msdn.microsoft.com/ja-jp/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial\-Page Rendering Overview](http://msdn.microsoft.com/ja-jp/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 To specify the file to upload, enter the full path to the file \(for example, "C:\\MyFiles\\Test.txt"\) in the text box of the control. You can also select the file by clicking the **ui tag is not supported!!!!**  
 button and then locating it in the **ui tag is not supported!!!!**  
 dialog box.  
  
> [!NOTE]
>  The <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> property of an <xref:System.Web.UI.HtmlControls.HtmlForm> control must be set to "multipart\/form\-data" for this control to work properly.  
  
 The <xref:System.Web.UI.HtmlControls.HtmlInputFile> control does not have a built\-in way to post back to the server. To upload the file to the server, use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method of the <xref:System.Web.HttpPostedFile?displayProperty=fullName> object contained in the <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> property. This operation is usually done in an event\-handling method, such as for a button click.  
  
> [!NOTE]
>  When you use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method of the <xref:System.Web.HttpPostedFile> class, make sure to specify a rooted path \(for example, "C:\\MyFiles\\Test.txt"\). The behavior of the <xref:System.Web.HttpPostedFile.SaveAs%2A> method can be specified in the [httpRuntime Element \(ASP.NET Settings Schema\)](http://msdn.microsoft.com/ja-jp/e9b81350-8aaf-47cc-9843-5f7d0c59f369) configuration section with the **languageKeyword tag is not supported!!!!**  
>  attribute. The default value of this attribute is **languageKeyword tag is not supported!!!!**  
> . If you set this attribute to **languageKeyword tag is not supported!!!!**  
> , then using the <xref:System.Web.HttpPostedFile.SaveAs%2A> method with no path specified will attempt to place the file in the **parameterReference tag is not supported!!!!**  
>  \\system32\\inetsrv directory. By default, this directory is write\-protected; therefore, the file can not be saved there. Make sure to provide write permission for the account used by ASP.NET for the directory where you want to store the file.  
  
 When uploading large files, use the **languageKeyword tag is not supported!!!!**  
 attribute of the [httpRuntime Element \(ASP.NET Settings Schema\)](http://msdn.microsoft.com/ja-jp/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element to increase the maximum allowable file size. A DNS error is generated in the browser when the file exceeds the specified size. You might also receive the following error message when uploading large files:  
  
 aspnet\_wp.exe \(PID: 1520\) was recycled because memory consumption exceeded 460 MB \(60 percent of available RAM\).  
  
 If you encounter this error message, increase the value of the **languageKeyword tag is not supported!!!!**  
 attribute in the [processModel Element \(ASP.NET Settings Schema\)](http://msdn.microsoft.com/ja-jp/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d) element of the Machine.config file.  
  
 For a list of initial property values for an instance of <xref:System.Web.UI.HtmlControls.HtmlInputFile>, see the <xref:System.Web.UI.HtmlControls.HtmlInputFile.%23ctor%2A> constructor.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlInputFile> control to create a simple file upload scenario. For this example to work properly, you need to create a directory called `Temp` on your computer's drive C.  
  
 [!code-csharp[Classic HtmlInputFile Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputFile Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpPostedFile" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.HtmlControls.HtmlInputFile> クラスです。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。 <xref:System.Web.UI.HtmlControls.HtmlInputFile>します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|"File"のリテラル文字列です。|  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.UI.HtmlControls.HtmlInputFile> クラスの新しいインスタンスを作成する方法を示しています。 正常に動作するこの例では、というディレクトリを作成する必要があります。 `Temp` コンピューターのドライブ c です。  
  
 [!code-csharp[HtmlInputFileCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileCtor/CS/htmlinputfilectorcs.aspx#1)]
 [!code-vb[HtmlInputFileCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileCtor/VB/htmlinputfilectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public string Accept { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Accept" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Accept" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが選択できるファイルの種類を制限するために使用される MIME エンコードのコンマ区切りの一覧を設定します。</summary>
        <value>MIME エンコードのコンマ区切り一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、サーバーにアップロードできるファイルの種類を指定します。 たとえば、イメージの選択を制限するには、このプロパティを設定"イメージ\/\*"です。  
  
> [!NOTE]
>  このプロパティのサポートは、ブラウザーによって異なります。 ブラウザーでこのプロパティをサポートしているかどうかを確認してください。 サーバー側のコードを使用して、ファイルが予期される型であることを確認することをお勧めします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> からイメージ ファイル以外のすべてのファイルを選択すると、ユーザーを制限するプロパティです。 正常に動作するこの例では、というディレクトリを作成する必要があります。 `Temp` コンピューターのドライブ c です。のサポート、 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Accept%2A> プロパティ ブラウザーに依存するは、イメージのみをアップロードすることを確認するサーバー側のチェックが実行されます。 としてアップロードされたファイルを読み取ることができません、例外がスローされますが、 <xref:System.Drawing.Image> 型です。  
  
 [!code-csharp[Classic HtmlInputFile.Accept Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputFile.Accept Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Accept Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信したすべての名前値のコレクション。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> コントロールのポストバック データを処理します。</summary>
        <returns>このメソッドは常に <see langword="false" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile>制御を実装して、<xref:System.Web.UI.IPostBackDataHandler>インターフェイスで、次の 2 つの方法があります:<xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName>と<xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName>です。<xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A>メソッドによって呼び出されますの<xref:System.Web.UI.HtmlControls.HtmlInputFile.System%23Web%23UI%23IPostBackDataHandler%23RaisePostDataChangedEvent%2A>メソッドを常に返します`false`ことを示すことの<xref:System.Web.UI.HtmlControls.HtmlInputFile>コントロールの状態は、ASP.NET ページ フレームワークによって管理されていません。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData%2A>メソッドが、主の機能を拡張するコントロールの開発者によって使用される、<xref:System.Web.UI.HtmlControls.HtmlInputFile>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクライアント コンピューターからアップロードするファイルのファイル パスの最大長を設定します。</summary>
        <value>ファイルのパスの最大長。 既定値は、\-1 で、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、アップロードするファイル パスを入力できる文字数の制限を指定します。  
  
> [!NOTE]
>  このプロパティのサポートは、ブラウザーによって異なります。 ブラウザーでこのプロパティをサポートしているかどうかを確認してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> コントロールの <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エンコーディングを指定しないかどうか、Web ページの <xref:System.Web.UI.HtmlControls.HtmlForm> コントロール、 <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> プロパティが「マルチパート\/フォームのデータ」に設定します。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlInputFile.OnPreRender%2A> メソッドできるように、 `Title` 属性は常に各ユーザーに追加 <xref:System.Web.UI.HtmlControls.HtmlInputFile> コントロールです。 正常に動作するこの例では、というディレクトリを作成する必要があります。 `Temp` コンピューターのドライブ c です。  
  
 [!code-csharp[CustomHtmlInputFileOnPreRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerendercs.aspx#1)]
 [!code-vb[CustomHtmlInputFileOnPreRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputFileOnPreRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/CS/custom_htmlinputfile_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputFileOnPreRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputFileOnPreRender/VB/custom_htmlinputfile_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントによって指定されたアップロードされたファイルへのアクセスを取得します。</summary>
        <value>A <see cref="T:System.Web.HttpPostedFile" /> アップロードするファイルにアクセスします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ブラウザーのセキュリティ制限により、この値は、複数の要求で維持されているものです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile%2A> プロパティをサーバーにファイルを転送するユーティリティを開始します。 バイト単位でアップロードされたファイルのサイズの値を超える場合、 <xref:System.Web.HttpPostedFile.ContentLength%2A> プロパティには、ファイルはアップロードされません。 正常に動作するこの例では、というディレクトリを作成する必要があります。 `Temp` コンピューターのドライブ c です。  
  
 [!code-csharp[Classic HtmlInputFile.PostedFile Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputFile.PostedFile Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.PostedFile Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> コントロールの状態が変化したことをコントロールに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile>制御を実装して、<xref:System.Web.UI.IPostBackDataHandler>インターフェイスで、次の 2 つの方法があります:<xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName>および<xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName>です。<xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName>メソッドがの処理に関与しません、<xref:System.Web.UI.HtmlControls.HtmlInputFile>コントロールに含まれ、インターフェイスの実装を完了します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.RaisePostDataChangedEvent%2A>の機能を拡張するメソッドが、主にコントロールの開発者によって使用される、<xref:System.Web.UI.HtmlControls.HtmlInputFile>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputFile.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはファイル パスが入力されるテキスト ボックスの幅を設定します。</summary>
        <value>ファイル パス\] テキスト ボックスの幅。 既定値は、\-1 で、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、ファイルのパスを入力するためのテキスト ボックスの幅を指定します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Size%2A> プロパティをユーザーがファイルのパスを入力したテキスト ボックスの幅を指定します。 正常に動作するこの例では、というディレクトリを作成する必要があります。 `Temp` コンピューターのドライブ c です。  
  
 [!code-csharp[Classic HtmlInputFile.Size Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputFile.Size Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputFile.Size Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />」を参照してください。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputFile" /> ポストバックの結果コントロールの状態が変化した場合は、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.HtmlControls.HtmlInputFile> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputFile.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.HtmlControls.HtmlInputFile> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputFile.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントのコンピューター上のファイルの完全なパスを取得します。</summary>
        <value>クライアントのファイルの完全パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A>プロパティは、クライアントのコンピューター \(たとえば"C:\\MyFiles\\Test.txt"\) 上のファイルの完全なパスを取得します。 これは、ファイルを送信しているコンピューターでファイルを格納する場所を知る必要がある場合に便利です。 元のファイル名を指定するのには、このプロパティは使用はまた、一般。 元のファイル名を取得するには、このプロパティの値を解析します。  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A>プロパティは読み取り専用です。 このプロパティに値を代入しようとする場合、<xref:System.NotSupportedException?displayProperty=fullName>がスローされます。  
  
   
  
## 例  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.HtmlControls.HtmlInputFile.Value%2A>クライアントのコンピューター上のファイルの完全なパスを表示するプロパティです。 この例を正しく動作するというディレクトリを作成する必要があります。`Temp`コンピューターのドライブ c です。  
  
 [!code-csharp[HtmlInputFileValue\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputFileValue/CS/htmlinputfilevaluecs.aspx#1)]
 [!code-vb[HtmlInputFileValue\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputFileValue/VB/htmlinputfilevaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このプロパティに値を代入しようとしました。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputControl.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputFile.PostedFile" />
        <altmember cref="T:System.NotSupportedException" />
      </Docs>
    </Member>
  </Members>
</Type>