<Type Name="HtmlSelect" FullName="System.Web.UI.HtmlControls.HtmlSelect">
  <TypeSignature Language="C#" Value="public class HtmlSelect : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlSelect extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IParserAccessor, class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlSelect" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.HtmlControls.HtmlSelectBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;select&gt;" /> 要素へのプログラムによるアクセスを可能にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.HtmlControls.HtmlSelect> control to create a selection box. Specify item listings in the control by placing HTML **languageKeyword tag is not supported!!!!**  
 elements between the opening and closing **languageKeyword tag is not supported!!!!**  
 tags. Each item is represented by a <xref:System.Web.UI.WebControls.ListItem?displayProperty=fullName> object. To specify the text that is displayed for each item in the control, you can set the <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> property of the item, or simply place text between the opening and closing **languageKeyword tag is not supported!!!!**  
 tags. By setting the <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> property of the item, you can associate a value with the item that is different from the text. To select an item from the list by default, set the <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=fullName> property of the item to **languageKeyword tag is not supported!!!!**  
.  
  
 You can control the appearance and behavior of the <xref:System.Web.UI.HtmlControls.HtmlSelect> control by setting the <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> and <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> properties. The <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> property specifies the height \(in rows\) of the control. The <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> property specifies whether more than one item can be concurrently selected in the <xref:System.Web.UI.HtmlControls.HtmlSelect> control.  
  
 By default, the <xref:System.Web.UI.HtmlControls.HtmlSelect> control is displayed as a drop\-down list box. If you allow multiple selections \(by setting the <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> property to **languageKeyword tag is not supported!!!!**  
\) or specify a height greater than one row \(by setting the <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> property to a value greater than **languageKeyword tag is not supported!!!!**  
\), the control is displayed as a list box.  
  
 To determine the selected item in a single\-selection <xref:System.Web.UI.HtmlControls.HtmlSelect> control, use the <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> property to get the index of the selected item. You can then use this value to retrieve the item from the <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> collection.  
  
 To determine the selected items from an <xref:System.Web.UI.HtmlControls.HtmlSelect> control that allows multiple selections, iterate through the <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> collection and test the <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=fullName> property of each item.  
  
 The <xref:System.Web.UI.HtmlControls.HtmlSelect> class provides two properties to support data binding. To bind data to any object that implements the <xref:System.Collections.IEnumerable?displayProperty=fullName> interface \(such as <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, and <xref:System.Collections.Generic.List%601?displayProperty=fullName>\), or the <xref:System.ComponentModel.IListSource> interface, use the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> property to specify the data source to bind to. When you set the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> property, you must manually write the code to perform the data binding. To automatically bind an <xref:System.Web.UI.HtmlControls.HtmlSelect> control to a data source represented by a data source control, use the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> property and set its value to the <xref:System.Web.UI.Control.ID%2A> property of the data source control to use. When you set the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> property, the <xref:System.Web.UI.HtmlControls.HtmlSelect> control automatically binds to the specified data source control. Therefore, you do not need to explicitly call the <xref:System.Web.UI.Control.DataBind%2A> method.  
  
 You can also specify which fields in the data source bind to the <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> and <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> properties of an item in the control by setting the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> and <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> properties, respectively. If the data source contains multiple sources of data, use the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> property to specify the specific source to bind to the control. For example, if you have a <xref:System.Data.DataSet?displayProperty=fullName> object with multiple tables, you must specify which table to bind to the control with the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> property.  
  
 For a list of initial property values for an instance of <xref:System.Web.UI.HtmlControls.HtmlSelect>, see the <xref:System.Web.UI.HtmlControls.HtmlSelect.%23ctor%2A> constructor.  
  
   
  
## 例  
 The following code example demonstrates how to create an <xref:System.Web.UI.HtmlControls.HtmlSelect> control by explicitly declaring the items that appear in the control.  
  
 [!code-csharp[htmlselect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-vb[htmlselect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 The following code example demonstrates how to create an <xref:System.Web.UI.HtmlControls.HtmlSelect> control by binding the control to a data source.  
  
 [!code-csharp[HtmlSelectDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-vb[HtmlSelectDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> property to specify the data source for an <xref:System.Web.UI.HtmlControls.HtmlSelect> control. The <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> property is set to the <xref:System.Web.UI.Control.ID%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control used to retrieve the data. When the page is loaded, the <xref:System.Web.UI.HtmlControls.HtmlSelect> control automatically binds to the data source specified by the <xref:System.Web.UI.WebControls.SqlDataSource> control and the data is displayed to the user.  
  
 [!code-csharp[HtmlSelect.DataSourceID\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-vb[HtmlSelect.DataSourceID\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
    <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.HtmlControls.HtmlSelect>クラスです。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Web.UI.HtmlControls.HtmlSelect>です。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"Select"リテラル文字列。|  
  
   
  
## 例  
 次のコード例は、のインスタンスを動的に作成する方法を示します、<xref:System.Web.UI.HtmlControls.HtmlSelect>制御し、Web ページ上に配置します。  
  
 [!code-csharp[HtmlSelectCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectCtor/CS/htmlselectctorcs.aspx#1)]
 [!code-vb[HtmlSelectCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectCtor/VB/htmlselectctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">追加する解析された子コントロール。</param>
        <summary>解析された子コントロールを追加、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A> に解析された子コントロールを追加する方法が ASP.NET で使用される、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlSelect.AddParsedSubObject%2A> に常にチェックするようにカスタム サーバー内のメソッドが制御のインスタンス、 <xref:System.Web.UI.WebControls.ListItem> クラスに追加されます、 <xref:System.Web.UI.HtmlControls.HtmlSelect> 項目のコレクションを選択します。  
  
 [!code-csharp[CustomHtmlSelectAddParsedSubObject\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobjectcs.aspx#1)]
 [!code-vb[CustomHtmlSelectAddParsedSubObject\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectAddParsedSubObject\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/CS/custom_htmlselect_addparsedsubobject.cs#2)]
 [!code-vb[CustomHtmlSelectAddParsedSubObject\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectAddParsedSubObject/VB/custom_htmlselect_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">指定した子コントロール、 <paramref name="obj" /> パラメーター型でなければなりません <see cref="T:System.Web.UI.WebControls.ListItem" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="protected virtual void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>一覧の選択を解除、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールとセット、 <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> プロパティのすべての項目を <see langword="false" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A> を反復処理メソッド、 <xref:System.Web.UI.WebControls.ListItemCollection> によって表されるコレクション、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールの <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> プロパティとセット、 <xref:System.Web.UI.WebControls.ListItem.Selected%2A> の各プロパティ <xref:System.Web.UI.WebControls.ListItem> オブジェクトを `false`します。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlSelect.ClearSelection%2A> の選択したすべての項目を常にクリアするようにカスタム サーバー内のメソッドが制御、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コレクションです。  
  
 [!code-csharp[CustomHtmlSelectClearSelection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselectioncs.aspx#1)]
 [!code-vb[CustomHtmlSelectClearSelection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselectionvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectClearSelection\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/CS/custom_htmlselect_clearselection.cs#2)]
 [!code-vb[CustomHtmlSelectClearSelection\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectClearSelection/VB/custom_htmlselect_clearselection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Web.UI.EmptyControlCollection" /> のオブジェクト、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> 、現在のサーバー コントロールの子サーバー コントロールを含めます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールで子コントロールが許可されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public virtual string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にバインドするデータのセット、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールから、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 複数のデータ セットを持つプロパティです。</summary>
        <value>バインドするデータのセット、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールから、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> 、データの複数のセットです。 既定値は空の文字列 \(""\) を示すプロパティが設定されていません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティには、複数のデータ セットが含まれています。 を使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> プロパティをコントロールにバインドするデータのセットを指定します。 たとえば、ある、 <xref:System.Data.DataSet?displayProperty=fullName> を複数のテーブル オブジェクトをコントロールにバインドするテーブルを示すためにこのプロパティを使用します。  
  
 バインドするデータ ソースからどのフィールドを指定できます、コントロールにバインドするデータ ソースを指定したら、 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> と <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> を設定してコントロールの各項目のプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> と <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> プロパティそれぞれします。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> プロパティにバインドするデータを指定するのには、 <xref:System.Web.UI.HtmlControls.HtmlSelect> から制御、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> 複数のデータ セットを持つプロパティです。  
  
 [!code-csharp[HtmlSelectDataMember\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataMember/CS/htmlselectdatamemberdscs.aspx#1)]
 [!code-vb[HtmlSelectDataMember\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataMember/VB/htmlselectdatamemberdsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> フェーズでは、データ バインドのプロパティを設定、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソースにバインドする情報の取得または設定、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" /> または <see cref="T:System.ComponentModel.IListSource" /> このコントロールにデータを提供するために使用する値のコレクションを格納します。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティをバインドするデータ ソースを指定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 データ ソースを実装するコレクションである必要があります、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイス \(よう <xref:System.Data.DataView?displayProperty=fullName>, 、<xref:System.Collections.ArrayList?displayProperty=fullName>, 、または <xref:System.Collections.Generic.List%601?displayProperty=fullName>\) または <xref:System.ComponentModel.IListSource> インターフェイスです。 設定すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティには、データ バインドを実行するコードを手動で記述する必要があります。  
  
 など、データ ソースに、データの複数のセットが含まれている場合、 <xref:System.Data.DataSet?displayProperty=fullName> を複数のテーブル オブジェクトを使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> プロパティをコントロールにバインドするには、どのデータ セットを指定します。  
  
 バインドするデータ ソースからどのフィールドを指定する、 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> と <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> を設定してコントロールの各項目のプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> と <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> プロパティそれぞれします。  
  
 また、使用することができます、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティを自動的にデータ ソース コントロールで表されるデータ ソースにバインドします。 設定すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティには、リスト コントロールを自動的にデータを指定したデータ ソース コントロールにバインドします。 明示的に呼び出しのコードを記述する必要はありません、 <xref:System.Web.UI.Control.DataBind%2A> メソッドです。  
  
 両方の値が指定されている場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティおよび <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティには、ASP.NET がデータ ソースを解決できないと <xref:System.Web.HttpException?displayProperty=fullName> 例外がスローされます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティにバインドする情報のソースを指定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelectDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-vb[HtmlSelectDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定したデータ ソースは、いずれかと互換性がない <see cref="T:System.Collections.IEnumerable" /> または <see cref="T:System.ComponentModel.IListSource" />, 、れない <see langword="null" />します。</exception>
        <exception cref="T:System.Web.HttpException">両方の値が指定されているために、データ ソースが解決できない、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> プロパティおよび <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> プロパティです。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="P:System.Web.UI.Control.ID" /> データ ソースのプロパティを制御する、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 、データ ソースを取得するコントロールを使用する必要があります。</summary>
        <value>データ ソース コントロールに割り当てられたプログラムの id。 既定値は空の文字列 \(""\)、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティを設定またはアクセス、 <xref:System.Web.UI.Control.ID%2A> データ ソースのプロパティを制御する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> 、データ ソースを取得するコントロールを使用する必要があります。 データ ソースによって参照されるコントロール、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティを実装する任意のコントロールを使用できます、 <xref:System.Web.UI.IDataSource> インターフェイスです。 データ ソース コントロールと同じ名前付けコンテナーのいずれかに存在する必要があります、 <xref:System.Web.UI.HtmlControls.HtmlSelect> それを参照するコントロールの親コントロールで、または、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 このプロパティの値を指定するときに、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールが自動的に指定されたデータ ソース コントロールにバインドします。 明示的に呼び出しのコードを記述する必要はありません、 <xref:System.Web.UI.Control.DataBind%2A> メソッドです。  
  
 また、使用することができます、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティにバインドする値のソースを指定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 データ ソースを実装するコレクションである必要があります、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイス \(よう <xref:System.Data.DataView?displayProperty=fullName>, 、<xref:System.Collections.ArrayList?displayProperty=fullName>, 、または <xref:System.Collections.Generic.List%601?displayProperty=fullName>\) または <xref:System.ComponentModel.IListSource> インターフェイスです。 設定すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティには、データ バインドを実行するコードを手動で記述する必要があります。  
  
 両方の値が指定されている場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティおよび <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティには、ASP.NET がデータ ソースを解決できないと <xref:System.Web.HttpException?displayProperty=fullName> 例外がスローされます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> のデータ ソースを指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティに設定されて、 <xref:System.Web.UI.Control.ID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールのデータを取得するために使用します。 ページが読み込まれるときに、 <xref:System.Web.UI.HtmlControls.HtmlSelect> で指定されたデータ ソースに自動的にバインドするコントロール、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールとデータがユーザーに表示されます。  
  
 [!code-csharp[HtmlSelect.DataSourceID\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataSourceID/CS/htmlselect.datasourceidcs.aspx#1)]
 [!code-vb[HtmlSelect.DataSourceID\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataSourceID/VB/htmlselect.datasourceidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">両方の値が指定されているために、データ ソースが解決できない、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> プロパティおよび <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> プロパティです。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定フィールドにバインドするデータ ソース、 <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 内の各項目のプロパティ、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>バインドするデータ ソースのフィールド、 <see cref="P:System.Web.UI.WebControls.ListItem.Text" /> 内の各項目のプロパティ、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。 既定値は空の文字列 \(""\)、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> プロパティをバインドするデータ ソースからどのフィールドを指定する、 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> コントロール内の各項目のプロパティです。 このプロパティは通常の値を提供する使用、 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> プロパティの値とは異なる、 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> プロパティです。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> クラスにバインドするデータ ソースを指定する 2 つのプロパティを提供します。<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティを使用すると、バインド、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールを実装する任意のコレクションを <xref:System.Collections.IEnumerable?displayProperty=fullName> または <xref:System.ComponentModel.IListSource?displayProperty=fullName> インターフェイス \(など <xref:System.Data.DataView?displayProperty=fullName>, 、<xref:System.Collections.ArrayList?displayProperty=fullName>, 、または <xref:System.Collections.Generic.List%601?displayProperty=fullName>\)。 使用すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティをデータ ソースを指定する明示的に呼び出す必要があります、 <xref:System.Web.UI.Control.DataBind%2A> コントロールをバインドするメソッドとその <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> プロパティをデータ ソース。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティを使用すると、バインド、 <xref:System.Web.UI.HtmlControls.HtmlSelect> データ ソースを表すデータ ソース コントロールにコントロールできます。 使用すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティをデータ ソースを指定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールとその <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> プロパティが自動的に指定されたデータ ソース コントロールにバインドします。 そのため、明示的に呼び出す必要はありません、 <xref:System.Web.UI.Control.DataBind%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> と <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> プロパティにバインドするデータ ソースのフィールドを指定する、 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> 内の各項目のプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelectDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-vb[HtmlSelectDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> と <xref:System.Web.UI.HtmlControls.HtmlSelect.DataTextField%2A> プロパティにバインドするデータ ソースのフィールドを指定する、 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> 内の各項目のプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelect.DataValueField2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-vb[HtmlSelect.DataValueField2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Text" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public virtual string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.DataValueField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定フィールドにバインドするデータ ソース、 <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 内の各項目のプロパティ、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 制御します。</summary>
        <value>バインドするデータ ソースのフィールド、 <see cref="P:System.Web.UI.WebControls.ListItem.Value" /> 内の各項目のプロパティ、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。 既定値は空の文字列 \(""\)、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> プロパティをバインドするデータ ソースからどのフィールドを指定する、 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> コントロール内の各項目のプロパティです。 このプロパティは通常の値を提供する使用、 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> プロパティの値とは異なる、 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> プロパティです。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> クラスにバインドするデータ ソースを指定する 2 つのプロパティを提供します。<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティを使用すると、バインド、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールを実装する任意のコレクションを <xref:System.Collections.IEnumerable> または <xref:System.ComponentModel.IListSource> インターフェイス \(など <xref:System.Data.DataView?displayProperty=fullName>, 、<xref:System.Collections.ArrayList?displayProperty=fullName>, 、または <xref:System.Collections.Generic.List%601?displayProperty=fullName>\)。 使用すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティをデータ ソースを指定する明示的に呼び出す必要があります、 <xref:System.Web.UI.Control.DataBind%2A> コントロールをバインドするメソッドとその <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> プロパティをデータ ソース。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティを使用すると、バインド、 <xref:System.Web.UI.HtmlControls.HtmlSelect> データ ソースを表すデータ ソース コントロールにコントロールできます。 使用すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティをデータ ソースを指定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> 制御とその <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> プロパティは、データ ソース コントロールに自動的にバインドします。 そのため、明示的に呼び出す必要はありません、 <xref:System.Web.UI.Control.DataBind%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> と <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> プロパティにバインドするデータ ソースのフィールドを指定する、 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> 内の各項目のプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelectDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectDataSource/CS/htmlselectdatasourcecs.aspx#1)]
 [!code-vb[HtmlSelectDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectDataSource/VB/htmlselectdatasourcevb.aspx#1)]  
  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> と <xref:System.Web.UI.HtmlControls.HtmlSelect.DataValueField%2A> プロパティにバインドするデータ ソースのフィールドを指定する、 <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> 内の各項目のプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelect.DataValueField2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelect.DataValueField2/CS/htmlselect.datavaluefield2cs.aspx#1)]
 [!code-vb[HtmlSelect.DataValueField2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelect.DataValueField2/VB/htmlselect.datavaluefield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Value" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>あることを確認、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールがデータ バインドを必要とし、有効なデータ ソース コントロールを呼び出す前に指定されている、 <see cref="M:System.Web.UI.Control.DataBind" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値を指定すると、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティには、ASP.NET は自動的に一覧表示するコントロールを指定したデータ ソース コントロールにデータ バインドします。 ASP.NET では、コントロールのデータ バインドを実行するときに呼び出す、 <xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A> コントロールがまだデータ バインドされていませんし、有効なデータ ソースを制御することを実装することを確認するには、まずメソッド、 <xref:System.Web.UI.IDataSource> のインターフェイスが指定されているその <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティです。<xref:System.Web.UI.HtmlControls.HtmlSelect.EnsureDataBound%2A> メソッドを呼び出します、 <xref:System.Web.UI.Control.DataBind%2A> メソッドをコントロールがデータにバインドされて直後にこのメソッドを呼び出すことを確認します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得、 <see cref="T:System.Collections.IEnumerable" /> にバインドされているデータ ソースを表すオブジェクト、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> オブジェクト。 データ ソースが指定されていない場合、既定値は <see langword="null" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.GetData%2A> メソッドが返される、 <xref:System.Collections.IEnumerable> オブジェクト データ ソースがによって指定されているかどうかに依存しない、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティまたは <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 型のプロパティは使用されません <see cref="T:System.Web.UI.IDataSource" />します。  
  
 または  
  
 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 型のプロパティは使用されません <see cref="T:System.Web.UI.IHierarchicalDataSource" />します。</exception>
        <exception cref="T:System.InvalidOperationException">両方の <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> と <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> のプロパティを定義、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。  
  
 または  
  
 要求されたデータのビューが見つかりません。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="InnerHtml">
      <MemberSignature Language="C#" Value="public override string InnerHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerHtml" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または特殊文字をタグに自動的に変換することがなく、開始タグと終了タグのコントロールの間のコンテンツを設定します。 このコントロールは、このプロパティがサポートされていません。</summary>
        <value>開始タグと終了タグのコントロールの間のコンテンツ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!CAUTION]
>  読み取り、このプロパティに値を代入したりしないでください。 このような操作を行わない場合、<xref:System.NotSupportedException?displayProperty=fullName> 例外がスローされます。 このプロパティは、 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> クラスし、は適用されません、 <xref:System.Web.UI.HtmlControls.HtmlSelect> クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">読み取る、またはこのプロパティに値を割り当てる試みです。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      </Docs>
    </Member>
    <Member MemberName="InnerText">
      <MemberSignature Language="C#" Value="public override string InnerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InnerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.InnerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタグおよびコントロールの特殊文字の自動変換の終了タグの間でコンテンツをタグに設定します。 このコントロールは、このプロパティがサポートされていません。</summary>
        <value>開始タグと終了タグのコントロールの間のコンテンツ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!CAUTION]
>  読み取り、このプロパティに値を代入したりしないでください。 このような操作を行わない場合、<xref:System.NotSupportedException?displayProperty=fullName> 例外がスローされます。 このプロパティは、 <xref:System.Web.UI.HtmlControls.HtmlContainerControl> クラスし、は適用されません、 <xref:System.Web.UI.HtmlControls.HtmlSelect> クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">読み取る、またはこのプロパティに値を割り当てる試みです。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.InnerHtml" />
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> のプロパティを定義、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>
          <see langword="true" /> データ ソース コントロールが定義されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合を表す文字列の長さ、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティの文字列は、ゼロより大きく、 <xref:System.Web.UI.HtmlControls.HtmlSelect.IsBoundUsingDataSourceID%2A> 返します `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示される項目を含むコレクションを取得、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> に表示される項目を含む、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> に表示される項目を管理するコレクション、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 プログラムから項目を削除し、コレクションに項目を挿入する項目を追加することができます。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 内の項目を反復処理するコレクションを使用してよく、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 たとえば、複数の項目を選択すると、反復処理する、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 選択された項目を確認します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> 内の項目を反復処理するコレクション、 <xref:System.Web.UI.HtmlControls.HtmlSelect> を制御し、選択された項目を決定します。  
  
 [!code-csharp[htmlselect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/htmlselect/CS/htmlselectcs.aspx#1)]
 [!code-vb[htmlselect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/htmlselect/VB/htmlselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>ポストバック データを処理、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <returns>ポストバックの結果、<see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの状態が変化した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> メソッド チェックするかどうかのポストバック データ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロール前の値と異なる場合を返します `true`します。 場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールの <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> プロパティは、 `false`, 、単一選択を示す <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロール、 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> メソッド チェック、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> プロパティです。 場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールの <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> プロパティは、 `true`, 、複数選択を示す <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロール、 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> メソッド チェック、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> プロパティです。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> プロパティが内の項目数より大きい値に設定されて、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールまたはより小さい <see langword="-1" />します。</exception>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary>復元、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> によって前のページから状態情報を要求できるコントロールのビューが保存された、 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> としてコントロールのビュー ステートが格納されている、 <xref:System.Web.UI.Triplet> オブジェクトです。<xref:System.Web.UI.Triplet.First> のフィールド、 <xref:System.Web.UI.Triplet> オブジェクトが保持している、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールの基本のビュー ステート。<xref:System.Web.UI.Triplet.Second> のフィールド、 <xref:System.Web.UI.Triplet> オブジェクトが保持している、 <xref:System.Web.UI.WebControls.ListItemCollection> によって表されるコレクション、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> プロパティです。<xref:System.Web.UI.Triplet.Third> のフィールド、 <xref:System.Web.UI.Triplet> オブジェクトによって表される選択されたインデックスを保持して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> プロパティです。<xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A> メソッドは、基本クラスの <xref:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState%2A?displayProperty=fullName> コントロールの基本のビューステートを復元する方法です。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" /> method so that the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's view state is properly managed.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="public bool Multiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または複数の項目に同時に選択できるかどうかを示す値を設定、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 複数の項目を同時に選択できる場合、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロール。 それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> で複数の項目を同時に選択するかどうかを指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 既定では、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールがドロップダウン リスト ボックスとして表示されます。 複数選択を許可する場合 \(設定して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> プロパティを `true`\) か、1 つの行より大きい高さを指定 \(設定して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> プロパティより大きい値を `1`\)、コントロールが、リスト ボックスとして表示されます。  
  
 選択した項目を決定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> を反復処理する複数の同時選択が可能なコントロール、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> コレクションとテスト、 <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=fullName> の各アイテムのプロパティです。  
  
> [!NOTE]
>  `multiple` で属性を表示、 <xref:System.Web.UI.HtmlControls.HtmlSelect> このプロパティが設定されている場合にのみ制御 `true`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> で複数の項目を選択できるかどうかを指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelectMultiple\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-vb[HtmlSelectMultiple\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に関連付けられた一意の識別子名、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>一意の識別子名に関連付けられている、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A> 一意の識別子名を判断するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 この実装では、 `get` アクセサーの値を返す、 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=fullName> プロパティです。 ただし、 `set` アクセサーは、このプロパティに値を割り当てません。  
  
> [!NOTE]
>  `set` ために、アクセサーがこのプロパティに値を代入しない、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A> プロパティと同じ値には、 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=fullName> プロパティを <xref:System.Web.UI.HtmlControls.HtmlSelect> 適切に機能するコントロール。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Name%2A> のプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> の特定の項目を選択するコントロール、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> \] ボックスの一覧です。  
  
 [!code-csharp[HtmlSelectName\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectName/CS/htmlselectnamecs.aspx#1)]
 [!code-vb[HtmlSelectName\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectName/VB/htmlselectnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.Control.DataBinding" /> のイベント、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Control.DataBinding> にデータがバインドされると、イベントが発生した、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 このメソッドは、それに関連付けられているデータ バインド ロジックを実行するコントロールを通知します。 具体的には、 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A> メソッドは、作成、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> いずれかで指定されたデータ ソースからのコレクション、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティまたは <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 型のプロパティは使用されません <see cref="T:System.Web.UI.IDataSource" />します。  
  
 または  
  
 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 型のプロパティは使用されません <see cref="T:System.Web.UI.IHierarchicalDataSource" />します。</exception>
        <exception cref="T:System.InvalidOperationException">両方の <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> と <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> のプロパティを定義、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。  
  
 または  
  
 要求されたデータのビューが見つかりません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> プロパティが内の項目数より大きい値に設定されて、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールまたはより小さい <see langword="-1" />します。</exception>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataBinding(System.EventArgs)" /> method in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.GetData" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ときに呼び出さ、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />, 、<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />, 、または <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> プロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A> メソッドのセット、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> プロパティを `true` 場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>, 、<xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A>, 、または <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティが変更されました。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">フェーズでは、データ バインド コントロールのプロパティの値を変更しようとしました。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ときに呼び出さ、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />, 、<see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />, 、または <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> プロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A> メソッドのセット、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> プロパティを `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A> メソッドは、通知、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールを作成し、インスタンスを設定するために必要な初期化の手順を実行します。 場合、 <xref:System.Web.UI.Control.IsViewStateEnabled%2A> プロパティは `false` と <xref:System.Web.UI.Page.IsPostBack%2A> プロパティは、 `true`, 、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> にプロパティが設定されている `true`します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" /> method in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnInit(System.EventArgs)" /> method so that the registered delegates received the event.</para>
        </block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
        <altmember cref="P:System.Web.UI.Control.IsViewStateEnabled" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnLoad(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの <see cref="E:System.Web.UI.Control.Load" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A> メソッドは、通知、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールに関連付けられたページの各 HTTP 要求に共通のアクションを実行する必要があります。<xref:System.Web.UI.HtmlControls.HtmlSelect.OnLoad%2A> 接続、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールをいずれかで指定された適切なデータ ソース、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A> プロパティまたは <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティです。 場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A> プロパティがデータ ソース コントロールを指定するには、 <xref:System.Web.UI.HtmlControls.HtmlSelect> そのデータ ソースを取得するコントロールを使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged%2A> メソッドは、イベント ハンドラーとして設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">指定された ID、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> プロパティが見つかりません。  
  
 または  
  
 指定したコントロール、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> 型のプロパティは使用されません <see cref="T:System.Web.UI.IDataSource" />します。</exception>
        <exception cref="T:System.InvalidOperationException">両方の値が指定されているために、データ ソースが解決できない、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" /> プロパティおよび <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" /> プロパティです。  
  
 または  
  
 要求された <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" /> プロパティが見つかりませんでした。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> プロパティが 1 より大きい、 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A> メソッド レジスタ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールを <xref:System.Web.UI.Page> コントロールのポストバック処理を必要とするものとします。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnPreRender%2A> カスタムことにより、選択した複数のメソッド <xref:System.Web.UI.HtmlControls.HtmlSelect> サーバー コントロール。  
  
 [!code-csharp[CustomHtmlSelectOnPreRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerendercs.aspx#1)]
 [!code-vb[CustomHtmlSelectOnPreRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectOnPreRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/CS/custom_htmlselect_onprerender.cs#2)]
 [!code-vb[CustomHtmlSelectOnPreRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectOnPreRender/VB/custom_htmlselect_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />のイベント、<see cref="T:System.Web.UI.HtmlControls.HtmlSelect" />コントロール。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>イベントが発生したときにで選択された項目、<xref:System.Web.UI.HtmlControls.HtmlSelect>サーバーへのポスト間で変更を制御します。  
  
> [!NOTE]
>  このイベントは、ユーザーなどを送信 ボタンをクリックすると、サーバーへのポストを開始する場合にのみ発生します。 このイベントでは、発生するサーバーへのポストは発生しません。  
  
> [!NOTE]
>  コントロールのビュー ステートを有効になっている必要があります、<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>正常に動作するイベントです。  
  
 このイベントを使用してデータの検証を実行することができます、<xref:System.Web.UI.HtmlControls.HtmlSelect>ユーザーがコントロールで選択を変更する場合を制御します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定し、コードのイベント ハンドラーを次のコード例には、<xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange>のイベント、<xref:System.Web.UI.HtmlControls.HtmlSelect>コントロール。 イベント ハンドラーは、選択したアイテムが互いに互換性があるかどうかを判断します。  
  
 [!code-csharp[HtmlSelectOnServerChange\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-vb[HtmlSelectOnServerChange\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 [!code-csharp[HtmlSelectServerChange\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-vb[HtmlSelectServerChange\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> method in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出し、 <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" /> を通知するメソッド、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの状態が変更されたコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、レンダリングされたコンテンツを受け取る。</param>
        <summary>レンダリング、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの属性を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> メソッドでの表示、 `name` の属性、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールと同じ値があることを確認するには、直接、 <xref:System.Web.UI.Control.UniqueID%2A?displayProperty=fullName> プロパティです。 属性を表示した後、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> メソッドは、基本クラスの <xref:System.Web.UI.HtmlControls.HtmlContainerControl.RenderAttributes%2A> メソッドです。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderAttributes%2A> カスタム サーバー内のメソッドを制御できるため、特定のソフトウェア タイトルのテキストはに対して常に表示される、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[CustomHtmlSelectRenderAttributes\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributescs.aspx#1)]
 [!code-vb[CustomHtmlSelectRenderAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderAttributes\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/CS/custom_htmlselect_renderattributes.cs#2)]
 [!code-vb[CustomHtmlSelectRenderAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderAttributes/VB/custom_htmlselect_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Name" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
        <altmember cref="T:System.Web.UI.AttributeCollection" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、レンダリングされたコンテンツを受け取る。</param>
        <summary>レンダリング、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの子コントロールを指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A> メソッドは、基本クラスの <xref:System.Web.UI.Control.RenderChildren%2A> メソッドが基本メソッドを呼び出さずにします。 各、 `<option>` 開始タグと終了の間に要素 `<select>` でタグがレンダリングされて、 `value` 、属性、 `selected` 項目が選択されている場合、属性とそれに関連付けられているテキスト。  
  
 複数の項目を選択した場合も、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> にプロパティが設定されている `false`, 、 <xref:System.Web.HttpException> 例外がスローされます。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RenderChildren%2A> メソッドことは常にカスタム既定オプションのテキストを表示できるように <xref:System.Web.UI.HtmlControls.HtmlSelect> サーバー コントロール。  
  
 [!code-csharp[CustomHtmlSelectRenderChildren\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildrencs.aspx#1)]
 [!code-vb[CustomHtmlSelectRenderChildren\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildrenvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlSelectRenderChildren\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/CS/custom_htmlselect_renderchildren.cs#2)]
 [!code-vb[CustomHtmlSelectRenderChildren\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlSelectRenderChildren/VB/custom_htmlselect_renderchildren.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">複数の項目が選択されていますが、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" /> にプロパティが設定されている <see langword="false" />します。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールは、指定されたデータ ソースにバインドする必要があります。</summary>
        <value>
          <see langword="true" /> コントロールがデータ ソースにバインドする必要がある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロール、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> コントロールを呼び出す必要があるかどうかを決定するプロパティ、 <xref:System.Web.UI.Control.DataBind%2A> の指定されたデータ ソースにバインドするメソッドです。  
  
 毎回、 `set` いずれかでアクセサーが呼び出される、 <xref:System.Web.UI.HtmlControls.HtmlSelect.DataSource%2A>, 、<xref:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID%2A>, 、または <xref:System.Web.UI.HtmlControls.HtmlSelect.DataMember%2A> 後データ ソースを変更するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnInit%2A> メソッドが既に呼び出されて、ASP.NET の値を自動的に設定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> プロパティを `true`します。 値、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> プロパティに設定されても `true` ときに、 <xref:System.Web.UI.HtmlControls.HtmlSelect.OnDataPropertyChanged%2A> メソッドが呼び出されます。  
  
 ASP.NET の値を自動的に設定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect.RequiresDataBinding%2A> プロパティを `false` 後すぐに、 <xref:System.Web.UI.Control.DataBind%2A> メソッドが呼び出されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSource" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataSourceID" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>いずれかに保存 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 状態の変更があるコントロールのビューは、ページがサーバーにポストされた後で発生しました。</summary>
        <returns>
          <see cref="T:System.Object" /> への変更を含む、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 状態を表示します。 オブジェクトに関連付けられたビューステートがない場合は、このメソッドは null 参照を返します \(<see langword="Nothing" /> Visual Basic で\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect> としてコントロールのビュー ステートが格納されている、 <xref:System.Web.UI.Triplet> オブジェクトです。<xref:System.Web.UI.Triplet.First> のフィールド、 <xref:System.Web.UI.Triplet> オブジェクトが保持している、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールの基本のビュー ステート。<xref:System.Web.UI.Triplet.Second> のフィールド、 <xref:System.Web.UI.Triplet> オブジェクトが保持している、 <xref:System.Web.UI.WebControls.ListItemCollection> によって表されるコレクション、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> プロパティです。<xref:System.Web.UI.Triplet.Third> のフィールド、 <xref:System.Web.UI.Triplet> オブジェクトによって表される選択されたインデックスを保持して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> プロパティです。<xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A> メソッドは、基本クラスの <xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName> コントロールの基本のビュー ステートに保存するメソッドです。  
  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlSelect.SaveViewState" /> method so that the <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> control's view state is properly managed.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.Triplet" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (int[] selectedIndices);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(int32[] selectedIndices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.Select(System.Int32[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndices" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="selectedIndices">
          <see cref="T:System.Array" /> 型の <see cref="T:System.Int32" /> を選択する項目を格納します。</param>
        <summary>複数のアイテムの選択、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Select%2A> メソッドは、複数の項目の選択、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> コレクションです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>序数に基づくインデックスで選択した項目の取得または設定、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>選択した項目の序数インデックス、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。 値 <see langword="-1" /> 項目が選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> 単一選択で選択した項目のインデックスを特定するプロパティは通常使用 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 項目を取得する、このインデックスを使用して、ことができます、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> コレクションです。  
  
 場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> にプロパティが設定されている `true`, 、ことは、複数の項目を同時に選択を示す、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> プロパティには、最初に選択した項目のインデックスが含まれています。 選択した項目を決定する、 <xref:System.Web.UI.HtmlControls.HtmlSelect> を反復処理する複数の同時選択が可能なコントロール、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> コレクションとテスト、 <xref:System.Web.UI.WebControls.ListItem.Selected%2A?displayProperty=fullName> の各アイテムのプロパティです。  
  
> [!CAUTION]
>  されていないアイテムを選択することができます。 項目が選択されていない場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> プロパティの値が格納 `-1`します。 これは、ページが初めて読み込まれ、既定では、項目が選択されていない場合によく起こります。 内の項目を参照する前にこの値をテストするコードを <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> コレクションです。 それ以外の場合、インデックスがコレクションの範囲外の場合、例外がスローされます。  
  
 既定では、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールがドロップダウン リスト ボックスとして表示されます。 複数選択を許可する場合 \(設定して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> プロパティを `true`\) か、1 つの行より大きい高さを指定 \(設定して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> プロパティより大きい値を `1`\)、コントロールが、リスト ボックスとして表示されます。 ドロップダウン リスト ボックスが表示されている場合、項目が常に選択します。 プログラムを使用して設定してすべての項目から選択を解除することができます\] ボックスの一覧ボックスが表示されている場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> プロパティを `-1`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> で選択した項目のインデックスを特定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 選択した項目の取得に、インデックスを使用し、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> コレクションです。  
  
 [!code-csharp[HtmlSelectSingleSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-vb[HtmlSelectSingleSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティが内の項目数より大きい値に設定された、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールまたはより小さい <see langword="-1" />します。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Items" />
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndices">
      <MemberSignature Language="C#" Value="protected virtual int[] SelectedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] SelectedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在選択されているすべての項目の 0 から始まるインデックスを含むコレクションを取得、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>現在のすべての 0 から始まるインデックスを含むコレクションには、内の項目が選択されている、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> プロパティを使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect> クラスを現在のすべての 0 から始まるインデックスを含むコレクションを取得するには、内の項目が選択されている、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 機能を拡張する開発者の制御、 <xref:System.Web.UI.HtmlControls.HtmlSelect> クラスをオーバーライドできる、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndices%2A> プロパティを選択した項目を返す現在のカスタム アルゴリズムを提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlSelect.ServerChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときにで選択された項目、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> サーバーへのポスト間の変更を制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> イベントが発生したときにで選択された項目、 <xref:System.Web.UI.HtmlControls.HtmlSelect> サーバーへのポスト間の変更を制御します。  
  
> [!NOTE]
>  コントロールのビュー ステートを有効になっている必要があります、 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> 正常に動作するイベントです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例を指定して、コードのイベント ハンドラーを宣言的方法を示します、 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> のイベント、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 イベント ハンドラーは、選択したアイテムが互いに互換性があるかどうかを決定します。  
  
 [!code-csharp[HtmlSelectOnServerChange\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectOnServerChange/CS/htmlselectonserverchangecs.aspx#1)]
 [!code-vb[HtmlSelectOnServerChange\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectOnServerChange/VB/htmlselectonserverchangevb.aspx#1)]  
  
 指定して、プログラムでのイベント ハンドラーをコード次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlSelect.ServerChange> のイベント、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 イベント ハンドラーは、選択したアイテムが互いに互換性があるかどうかを決定します。  
  
 [!code-csharp[HtmlSelectServerChange\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectServerChange/CS/htmlselectserverchangecs.aspx#1)]
 [!code-vb[HtmlSelectServerChange\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectServerChange/VB/htmlselectserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.OnServerChange(System.EventArgs)" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>高さを行単位で取得または設定、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</summary>
        <value>高さを \(行\)、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> \(行\) の高さを指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。 コントロール内の項目の数よりも小さいサイズを指定する場合は、リストを上下に移動できるようにスクロール バーが表示されます。  
  
 既定では、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールがドロップダウン リスト ボックスとして表示されます。 複数選択を許可する場合 \(設定して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Multiple%2A> プロパティを `true`\) か、1 つの行より大きい高さを指定 \(設定して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> プロパティより大きい値を `1`\)、コントロールが、リスト ボックスとして表示されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Size%2A> \(行\) の高さを指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelectMultiple\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectMultiple/CS/htmlselectmultiplecs.aspx#1)]
 [!code-vb[HtmlSelectMultiple\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectMultiple/VB/htmlselectmultiplevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.Multiple" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />」を参照してください。</summary>
        <returns>ポストバックの結果、<see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールの状態が変化した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.HtmlControls.HtmlSelect> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> プロパティが内の項目数より大きい値に設定されて、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールまたはより小さい <see langword="-1" />します。</exception>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.HtmlControls.HtmlSelect> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlSelect.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トラックを表示する状態の変更、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> 、コントロールの変更を保存できるように制御 <see cref="T:System.Web.UI.StateBag" /> オブジェクトです。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.TrackViewState%2A> メソッド内の項目が引き続き発生する、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Items%2A> のコレクション、 <xref:System.Web.UI.HtmlControls.HtmlSelect> 状態を表示するコントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlSelect.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した項目の値を取得、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールまたはセット、 <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" /> 、指定した値リストの最初の項目のインデックスにコントロールのプロパティです。</summary>
        <value>選択した項目の値、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールです。 コントロールでは、項目が選択されていない場合 <see cref="F:System.String.Empty" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A> によって参照される項目の値を取得するプロパティは通常使用、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> プロパティです。  
  
> [!NOTE]
>  コントロールでは、項目が選択されていない場合 <xref:System.String.Empty?displayProperty=fullName> が返されます。  
  
 このプロパティに値を設定する場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> プロパティはその値を含むリストの最初の項目のインデックスで更新します。 一致する値が見つからない場合、 <xref:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex%2A> プロパティのまま変更されません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlSelect.Value%2A> で選択した項目の値を取得するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlSelect> コントロールです。  
  
 [!code-csharp[HtmlSelectSingleSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlSelectSingleSelect/CS/htmlselectsingleselectcs.aspx#1)]
 [!code-vb[HtmlSelectSingleSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlSelectSingleSelect/VB/htmlselectsingleselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlSelect.Value" /> プロパティ内の項目数より大きい項目に設定されて、 <see cref="T:System.Web.UI.HtmlControls.HtmlSelect" /> コントロールまたはより小さい <see langword="-1" />します。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlSelect.SelectedIndex" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>