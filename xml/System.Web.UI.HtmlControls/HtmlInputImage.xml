<Type Name="HtmlInputImage" FullName="System.Web.UI.HtmlControls.HtmlInputImage">
  <TypeSignature Language="C#" Value="public class HtmlInputImage : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputImage extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputImage" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;input type= image&gt;" /> 要素へのプログラムによるアクセスを可能にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> イメージを表示するボタンを作成するコントロール。 関連付けられたアクションをプログラムで制御できる、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールのイベント ハンドラーを提供することにより、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> イベントです。  
  
 ユーザーがクリックした座標、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> を使用してコントロールを決定できる、 <xref:System.Web.UI.ImageClickEventArgs.X?displayProperty=fullName> と <xref:System.Web.UI.ImageClickEventArgs.Y?displayProperty=fullName> のプロパティ、 <xref:System.Web.UI.ImageClickEventArgs?displayProperty=fullName> をパラメーターとしてユーザー定義のイベント ハンドラーに渡されるオブジェクト。  
  
 インスタンスの初期プロパティ値の一覧については <xref:System.Web.UI.HtmlControls.HtmlInputImage>, を参照してください、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> イメージを表示するボタンを作成するコントロール。  
  
> [!NOTE]
>  この例で正常に動作する独自のイメージ ファイルを指定する必要があります。  
  
 [!code-csharp[Classic HtmlInputImage.Src Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputImage.Src Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputControl" />
    <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
    <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlInputImage> control.  
  
 The following table shows the initial property value for an instance of <xref:System.Web.UI.HtmlControls.HtmlInputImage>.  
  
|Property|Initial Value|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|The "image" literal string.|  
  
   
  
## 例  
 The following code example demonstrates how to create a new instance of the <xref:System.Web.UI.HtmlControls.HtmlInputImage> control and place it on the Web page.  
  
 [!code-csharp[HtmlInputImageCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageCtor/CS/htmlinputimagectorcs.aspx#1)]
 [!code-vb[HtmlInputImageCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageCtor/VB/htmlinputimagectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Align">
      <MemberSignature Language="C#" Value="public string Align { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Align" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Align" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の配置、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> Web ページ上の他の要素に関連してコントロールします。</summary>
        <value>配置、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> Web ページ上の他の要素に関連してコントロールします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Align%2A> の配置を指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> Web ページ上の他の要素に関連してコントロールします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Align%2A> の配置を指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> Web ページ上の他の要素に関連してコントロールします。  
  
 [!code-csharp[Classic HtmlInputImage.Align Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputImage.Align Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public string Alt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Alt" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の代替テキストをイメージが利用できないか、ダウンロードされていない場合、ブラウザーに表示されます。</summary>
        <value>指定したイメージの代替テキスト。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> プロパティを指定されたイメージが利用できないか、ダウンロードされていないときに表示されるテキストを指定します。 プログラムで指定した代替テキストを特定するのにこのプロパティを使用することもできます。  
  
 ツールヒント機能をサポートするブラウザーでは、このテキストも表示されますのツールヒントとして、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> プロパティ、イメージを利用できないときに表示する代替テキストを指定します。  
  
 [!code-csharp[Classic HtmlInputImage.Src Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputImage.Src Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" />
      </Docs>
    </Member>
    <Member MemberName="Border">
      <MemberSignature Language="C#" Value="public int Border { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Border" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Border" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の境界線の幅、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールです。</summary>
        <value>境界線の幅をピクセル単位での <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Border%2A> 境界線の幅を指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
> [!NOTE]
>  このプロパティはすべてのブラウザーでサポートされていません。 互換性を確認するようにブラウザーを確認してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Border%2A> 境界線の幅を指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 [!code-csharp[Classic HtmlInputImage.Align Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputImage.Align Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Align Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証を実行するかどうかを示す値を設定するときに、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールがクリックされました。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールがクリックされたときに検証を実行する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、ページの検証が実行されるときに、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールがクリックされました。 ページの検証では、入力コントロールが検証コントロールで指定された検証規則に準拠のすべてのページ上の検証コントロールに関連付けられているかどうかを決定します。  
  
 指定したり、クライアントとサーバーの両方で検証を実行するかどうかを決定するときに、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> を使用してコントロールがクリックされた、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> プロパティです。 検証が実行されているを防ぐためには、設定、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> プロパティを `false`します。  
  
 このプロパティは、イベント ハンドラーでよく使用、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> ページまたはリセットする \[キャンセル\] ボタンがクリックされたときに発生する検証が実行できなくイベントです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> ページ検証の発生を防ぐためにプロパティです。 通知方法、 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドをアクティブにない各検証コントロール個別にします。  
  
 [!code-csharp[HtmlInputImageCausesValidation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageCausesValidation/CS/htmlinputimagecausesvalidationcs.aspx#1)]
 [!code-vb[HtmlInputImageCausesValidation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageCausesValidation/VB/htmlinputimagecausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>ポストバック データを処理、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールです。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> ポストバックの結果コントロールの状態が変化した場合は、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> メソッドか、イメージが、ユーザーがクリックしてされた位置を表す座標のポストバック データの一部であるかどうかをチェック、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。 座標がポストバックのデータの一部である場合、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> メソッド レジスタ、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> で処理されるときに発生するイベントを必要とするコントロールと Web ページを制御します。  
  
> [!NOTE]
>  原点の座標 \(0, 0\) は、イメージの左上隅にあります。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> だけ表示する前にメソッドが呼び出される、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。<xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender%2A> メソッドことは、カスタムを常に表示できるように <xref:System.Web.UI.HtmlControls.HtmlInputImage> 境界のないサーバー コントロール。  
  
 [!code-csharp[CustomHtmlInputImageOnPreRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/CS/custom_htmlinputimage_onprerendercs.aspx#1)]
 [!code-vb[CustomHtmlInputImageOnPreRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/VB/custom_htmlinputimage_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputImageOnPreRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/CS/custom_htmlinputimage_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputImageOnPreRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageOnPreRender/VB/custom_htmlinputimage_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" /> method in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnPreRender(System.EventArgs)" /> method so that registered delegates receive the <see cref="E:System.Web.UI.Control.PreRender" /> event.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (System.Web.UI.ImageClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.Web.UI.ImageClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ImageClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.ImageClickEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> イベントは、ユーザーがクリックすると、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 ユーザーがクリックした座標、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> を使用してコントロールを決定できる、 <xref:System.Web.UI.ImageClickEventArgs.X?displayProperty=fullName> と <xref:System.Web.UI.ImageClickEventArgs.Y?displayProperty=fullName> のプロパティ、 <xref:System.Web.UI.ImageClickEventArgs?displayProperty=fullName> オブジェクトです。<xref:System.Web.UI.ImageClickEventArgs?displayProperty=fullName> オブジェクトは、ユーザー定義のイベント ハンドラーにパラメーターとして渡されます。  
  
> [!NOTE]
>  原点 \(0, 0\) は、イメージの左上隅に配置されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> ユーザーがクリックした座標を決定するイベント、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 [!code-csharp[Classic HtmlInputImage.ServerClick Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputImage.ServerClick Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[HtmlInputImageServerClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageServerClick/CS/htmlinputimageserverclickcs.aspx#1)]
 [!code-vb[HtmlInputImageServerClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageServerClick/VB/htmlinputimageserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
        <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールのイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostBackEvent%2A> メソッドを使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> を発生させる、クリックしてされたときのコントロール、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> イベントです。  
  
 場合、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> プロパティは、 `true`、 <xref:System.Web.UI.Page.Validate%2A> で指定されたコントロールのグループを使用してメソッドが呼び出される、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> プロパティです。  
  
 このメソッドは、主の機能を拡張するコントロールの開発者によって使用、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>通知、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールの状態が変更されたコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent%2A> メソッドは、処理に関与しません、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> を制御して完了するために、 <xref:System.Web.UI.IPostBackDataHandler> インターフェイスの実装です。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> クライアントで表示する出力ストリームを格納しています。</param>
        <summary>レンダリング、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールの属性を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> メソッドで設定する URL を解決する、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> プロパティには、書き込み、 `onclick` 、レンダリングの属性 <xref:System.Web.UI.HtmlControls.HtmlInputImage> 場合は、制御、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> プロパティは、 `true`, 、最後に、ベースを呼び出して <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> メソッドです。 場合の値、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> プロパティは、誤った形式の URL、 <xref:System.Web.HttpException> 例外がスローされます。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.RenderAttributes%2A> カスタム サーバー内のメソッドは制御と、ツールヒントとしてアクセスできるように、特定の代替テキストが常に表示されるように、 <xref:System.Web.UI.HtmlControls.HtmlInputImage>です。  
  
 [!code-csharp[CustomHtmlInputImageRenderAttributes\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/CS/custom_htmlinputimage_renderattributescs.aspx#1)]
 [!code-vb[CustomHtmlInputImageRenderAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/VB/custom_htmlinputimage_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputImageRenderAttributes\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/CS/custom_htmlinputimage_renderattributes.cs#2)]
 [!code-vb[CustomHtmlInputImageRenderAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputImageRenderAttributes/VB/custom_htmlinputimage_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" /> プロパティには、誤った形式の URL が含まれています。</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
        <altmember cref="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.ImageClickEventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.ImageClickEventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ImageClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバーで、ユーザーがクリックしたときに発生する <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> イベントは、ユーザーがクリックすると、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ServerClick> ユーザーがクリックした座標を決定するイベント、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 [!code-csharp[Classic HtmlInputImage.ServerClick Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputImage.ServerClick Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.ServerClick Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[HtmlInputImageServerClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageServerClick/CS/htmlinputimageserverclickcs.aspx#1)]
 [!code-vb[HtmlInputImageServerClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageServerClick/VB/htmlinputimageserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputImage.OnServerClick(System.Web.UI.ImageClickEventArgs)" />
        <altmember cref="T:System.Web.UI.ImageClickEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Src">
      <MemberSignature Language="C#" Value="public string Src { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Src" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.Src" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはイメージ ファイルの場所を設定します。</summary>
        <value>イメージ ファイルの場所。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> プロパティを表示するイメージの場所を指定する、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。 テキストが指定されたイメージが使用できない場合、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Alt%2A> プロパティが表示されます。  
  
 相対パスまたは絶対 URL を使用することができます。 相対 URL では、サーバーの完全なパスを指定せず、Web ページの場所にイメージの場所が関連しています。 パスは Web ページの場所の相対パスです。 これにより、コード内でイメージへのパスを更新することがなく、サーバー上の別のディレクトリにサイト全体を移動しやすくします。 相対パスを使用して" `~/` "に、ページが配置されている現在の仮想ディレクトリを参照してください。 たとえば、値の <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> の `<input type="image" runat="server" src="~/abc/d.gif">` "XspTest"内のページ上で仮想ディレクトリは `<input type="image" src="/XspText/abc/d.gif">`です。 絶対 URL は、完全なパスを提供します。 そのため、サイトを別のディレクトリに移動するには、コードを更新する必要があります。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.Src%2A> に表示するイメージへのパスを指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールです。  
  
 [!code-csharp[Classic HtmlInputImage.Src Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlInputImage.Src Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlInputImage.Src Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.Alt" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>実装して、 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> インターフェイス メソッドを呼び出すことによって、 <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> メソッドです。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> ポストバックの結果コントロールの状態が変化した場合は、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>実装して、 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> インターフェイス メソッドを呼び出すことによって、 <see cref="M:System.Web.UI.HtmlControls.HtmlInputImage.RaisePostDataChangedEvent" /> メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputImage.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>により、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> ポストバック時にイベントを発生させるコントロールです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのグループを設定する、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> 時に、サーバーへのポストバックします。</summary>
        <value>なるコントロールのグループ、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputImage" /> 時に、サーバーへのポストバックします。 既定値は空の文字列 \(""\)、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループから個別に検証できます。 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> の検証グループの名前を指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> 時に、サーバーへのポストバックします。  
  
 このプロパティは、有効される場合にのみの値、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> にプロパティが設定されている `true`します。 値を指定すると、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> プロパティには、指定したグループの一部である検証コントロールだけは、検証、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールは、サーバーにポストバックします。 このプロパティの値を指定しないかどうか、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation%2A> にプロパティが設定されている `true`, 、検証グループに割り当てられていないページ上のすべての検証コントロールは、サーバーへのコントロールのポストバック時に検証されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputImage.ValidationGroup%2A> プロパティを検証するためにコントロールを指定する、 <xref:System.Web.UI.HtmlControls.HtmlInputImage> コントロールは、サーバーにポストバックします。 ページには、ユーザーからのデータをキャプチャする 2 つのテキスト ボックスと 2 つの <xref:System.Web.UI.WebControls.RequiredFieldValidator> こと、ユーザーは空白でないテキスト ボックスをように制御します。<xref:System.Web.UI.WebControls.RequiredFieldValidator> で最初のテキスト ボックスは、制御、 `CityInfoGroup` 検証グループおよび <xref:System.Web.UI.WebControls.RequiredFieldValidator> 、2 番目のボックスが制御、 `StateInfoGroup` 検証グループです。 ときに、 `CityQueryButton` がクリックすると、コントロールにのみ、 `CityInfoGroup` 検証グループを検証します。 ときに、 `StateQueryButton` がクリックすると、コントロールにのみ、 `StateInfoGroup` 検証グループを検証します。  
  
 [!code-csharp[HtmlInputImageValidationGroup\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputImageValidationGroup/cs/htmlinputimagevalidationgroupcs.aspx#1)]
 [!code-vb[HtmlInputImageValidationGroup\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputImageValidationGroup/vb/htmlinputimagevalidationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputImage.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>