<Type Name="HtmlInputText" FullName="System.Web.UI.HtmlControls.HtmlInputText">
  <TypeSignature Language="C#" Value="public class HtmlInputText : System.Web.UI.HtmlControls.HtmlInputControl, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputText extends System.Web.UI.HtmlControls.HtmlInputControl implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputText" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;input type= text&gt;" /> 要素と <see langword="&lt;input type= password&gt;" /> 要素へのプログラムによるアクセスを許可します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText> テキストまたはパスワードを入力するユーザーができる単一行のテキスト ボックスを作成するコントロール。<xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> プロパティは、テキスト ボックスに入力できる文字の最大数を指定します。<xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> プロパティでは、テキスト ボックスの幅を指定することができます。 テキスト ボックスに、ユーザーが入力した値を確認するのには、使用、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> プロパティです。<xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールを提供、 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> イベントがいつ発生するか、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> プロパティには、サーバーへのポスト間の値が変更されました。 これにより、イベントが発生するたびにカスタム一連の命令を実行するイベント ハンドラーを作成することができます。  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールは、サーバーにポストバックする組み込み機能を提供しません。 など、サーバーへの投稿をサポートする Web ページの別のコントロールを提供する必要があります、 <xref:System.Web.UI.HtmlControls.HtmlButton> コントロールがコントロールの値をサーバーに送信します。  
  
 複数行テキスト ボックスを作成するには、使用、 <xref:System.Web.UI.HtmlControls.HtmlTextArea> コントロールです。  
  
 インスタンスの初期プロパティ値の一覧については <xref:System.Web.UI.HtmlControls.HtmlInputText>, を参照してください、 <xref:System.Web.UI.HtmlControls.HtmlInputText.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText> ユーザー入力を取得するコントロール。  
  
 [!code-csharp[HtmlInputText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-vb[HtmlInputText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定値を使用して <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlInputText> control using default values. It creates a **languageKeyword tag is not supported!!!!**  
 type text box control.  
  
 The following table shows the initial property value for an instance of <xref:System.Web.UI.HtmlControls.HtmlInputText>.  
  
|Property|Initial Value|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|The "text" literal string.|  
  
   
  
## 例  
 [!code-csharp[HtmlInputTextCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextCtor/CS/htmlinputtextctorcs.aspx#1)]
 [!code-vb[HtmlInputTextCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextCtor/VB/htmlinputtextctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputText (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">入力コントロールの型。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> クラスの指定した入力コントロールの種類を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.HtmlControls.HtmlInputText> 、指定した入力コントロールの種類を使用して制御します。 テキスト ボックス コントロールの特定の種類を作成することができます `password`します。 のみ、 `password` または `text` 型は現在サポートされています。 このコンス トラクターは、使用可能になった場合、その他のテキスト ボックスの種類を作成できるように設計されています。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。 <xref:System.Web.UI.HtmlControls.HtmlInputText>します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|`type` パラメーターの値。|  
  
> [!NOTE]
>  このコンス トラクターを使用して、作成すること、 `text` 種類テキスト ボックス コントロールの既定のコンス トラクターが代わりに使用される一般的です。  
  
   
  
## 例  
 [!code-csharp[HtmlInputTextCtor2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextCtor2/CS/htmlinputtextctor2cs.aspx#1)]
 [!code-vb[HtmlInputTextCtor2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextCtor2/VB/htmlinputtextctor2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>ポストバック データを処理、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> コントロールです。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> ポストバックの結果コントロールの状態が変化した場合は、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData%2A> メソッドかをチェックするかどうかのポストバックの値、 <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロール前の値と異なる場合を返します `true`します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputText.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはテキスト ボックスに入力できる文字の最大数を設定します。</summary>
        <value>テキスト ボックスに入力できる文字の最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> プロパティを指定またはテキスト ボックスに入力できる文字の最大数を確認します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> プロパティ テキスト ボックスに入力できる文字の最大数を指定します。  
  
 [!code-csharp[HtmlInputText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-vb[HtmlInputText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputText.Size" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender%2A> だけ表示する前にメソッドが呼び出される、 <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールです。<xref:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールです。  
  
   
  
## 例  
 次のコード例を上書きする方法を示しています、 <xref:System.Web.UI.HtmlControls.HtmlInputText.OnPreRender%2A> メソッドのため、it の設定、 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> プロパティ、カスタムの 30 文字を <xref:System.Web.UI.HtmlControls.HtmlInputText> サーバー コントロール。  
  
 [!code-csharp[CustomHtmlInputTextOnPreRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/CS/custom_htmlinputtext_onprerendercs.aspx#1)]
 [!code-vb[CustomHtmlInputTextOnPreRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/VB/custom_htmlinputtext_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlInputTextOnPreRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/CS/custom_htmlinputtext_onprerender.cs#2)]
 [!code-vb[CustomHtmlInputTextOnPreRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlInputTextOnPreRender/VB/custom_htmlinputtext_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerChange">
      <MemberSignature Language="C#" Value="protected virtual void OnServerChange (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerChange(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> イベントが発生したときに、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> サーバーでプロパティを変更します。  
  
> [!NOTE]
>  コントロールのビュー ステートを有効になっている必要があります、 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> 正常に動作するイベントです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> イベントです。 カスタム イベント ハンドラーに入力するテキストの値を表示する Web ページ上のラベルを更新して、 `<input type=text>` HTML 要素です。  
  
 [!code-csharp[HtmlInputTextServerChange\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextServerChange/CS/htmlinputtextserverchangecs.aspx#1)]
 [!code-vb[HtmlInputTextServerChange\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextServerChange/VB/htmlinputtextserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出し、 <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" /> を通知するメソッド、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> コントロールの状態が変更されたコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent%2A> の機能を拡張するコントロールの開発者が、主にメソッドを使用、 <xref:System.Web.UI.HtmlControls.HtmlInputText> コントロールです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" /> method in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" /> method so that the <see cref="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" /> event is correctly raised.</para>
        </block>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> クライアントで表示する出力ストリームを格納しています。</param>
        <summary>レンダリング、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> コントロールの属性を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerChange">
      <MemberSignature Language="C#" Value="public event EventHandler ServerChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerChange" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlInputText.ServerChange" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Web.UI.HtmlControls.HtmlInputText.Value" /> サーバーでプロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> イベントが発生したときに、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> サーバーでプロパティを変更します。  
  
> [!NOTE]
>  コントロールのビュー ステートを有効になっている必要があります、 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> 正常に動作するイベントです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> イベントです。 カスタム イベント ハンドラーに入力するテキストの値を表示する Web ページ上のラベルを更新して、 `<input type=text>` HTML 要素です。  
  
 [!code-csharp[HtmlInputTextServerChange\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputTextServerChange/CS/htmlinputtextserverchangecs.aspx#1)]
 [!code-vb[HtmlInputTextServerChange\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputTextServerChange/VB/htmlinputtextserverchangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlInputText.OnServerChange(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputText.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはテキスト ボックスの幅を設定します。</summary>
        <value>テキスト ボックスの文字の幅。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> プロパティを指定するか、文字で、テキスト ボックスの幅を決定します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> プロパティ テキスト ボックスの幅を指定します。  
  
 [!code-csharp[HtmlInputText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-vb[HtmlInputText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlInputText.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>実装して、 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> インターフェイス メソッドを呼び出すことによって、 <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> メソッドです。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> ポストバックの結果コントロールの状態が変化した場合は、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputText.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>実装して、 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" /> インターフェイス メソッドを呼び出すことによって、 <see cref="M:System.Web.UI.HtmlControls.HtmlInputText.RaisePostDataChangedEvent" /> メソッドです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlInputText.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはテキスト ボックスの内容を設定します。</summary>
        <value>テキスト ボックスに含まれるテキストです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> プロパティをプログラムによってテキスト ボックスに、ユーザーが入力したテキストを確認します。 テキスト ボックスの既定のテキストを提供するのにこのプロパティを使用することもできます。  
  
> [!NOTE]
>  値を指定する場合、 `password` 型 <xref:System.Web.UI.HtmlControls.HtmlInputText> を制御する値がテキスト ボックスに表示されません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> プロパティをプログラムによってテキスト ボックスにユーザーが入力したテキストを確認します。  
  
 [!code-csharp[HtmlInputText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlInputText/CS/htmlinputtextcs.aspx#1)]
 [!code-vb[HtmlInputText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlInputText/VB/htmlinputtextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlInputText" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>