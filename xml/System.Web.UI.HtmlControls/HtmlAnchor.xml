<Type Name="HtmlAnchor" FullName="System.Web.UI.HtmlControls.HtmlAnchor">
  <TypeSignature Language="C#" Value="public class HtmlAnchor : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlAnchor extends System.Web.UI.HtmlControls.HtmlContainerControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlAnchor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバーの HTML <see langword="&lt;a&gt;" /> 要素へのプログラムによるアクセスを可能にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つの方法を使用する、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> クラスです。 1 つはナビゲーションのため、: を使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.HRef%2A> にリンクするページの場所を定義するプロパティです。 2 つ目は、ポストバック イベントに対する: を使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> プログラムを使用して、ユーザーを処理するイベントのリンクをクリックします。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
 インスタンスの初期プロパティ値の一覧については <xref:System.Web.UI.HtmlControls.HtmlAnchor>, を参照してください、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベント メッセージを表示するときに、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされました。  
  
 [!code-csharp[HtmlAnchor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlAnchor/CS/htmlanchorcs.aspx#1)]
 [!code-vb[HtmlAnchor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlAnchor/VB/htmlanchorvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlAnchor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlAnchor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.HtmlControls.HtmlAnchor>コントロール。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。<xref:System.Web.UI.HtmlControls.HtmlAnchor>です。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|"A"リテラル文字列。|  
  
   
  
## 例  
 次のコード例は、動的に追加する方法を示します、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> Web フォーム ページを制御します。  
  
 [!code-csharp[HtmlAnchorConstructor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlAnchorConstructor/CS/htmlanchorconstructorcs.aspx#1)]
 [!code-vb[HtmlAnchorConstructor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlAnchorConstructor/VB/htmlanchorconstructorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlAnchor.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証を実行するかどうかを示す値を設定するときに、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> コントロールがクリックされました。</summary>
        <value>
          <see langword="true" /> 検証を実行する場合と、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> がクリックされた場合、それ以外の場合 <see langword="false" />します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、ページの検証が実行されるときに、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされました。 ページの検証では、あるかどうかのコントロールに関連付けられている検証コントロールによって指定されている検証規則を渡すすべてのページ上の検証コントロールを決定します。  
  
 指定したり、クライアントとサーバーの両方で検証を実行するかどうかを決定するときに、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> を使用してコントロールがクリックされた、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.CausesValidation%2A> プロパティです。 検証が実行されているを防ぐためには、設定、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.CausesValidation%2A> プロパティを false にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlAnchor.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="HRef">
      <MemberSignature Language="C#" Value="public string HRef { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HRef" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlAnchor.HRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で指定されたリンクの URL 対象、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> サーバー コントロール。</summary>
        <value>リンクの URL 対象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用してリンクするときに URL を指定する、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされました。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.HRef%2A> ときに移動する Web ページを指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされました。  
  
 [!code-csharp[Classic HtmlAnchor.HRef Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlAnchor.HRef Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlAnchor.HRef Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlAnchor.HRef Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlAnchor.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で定義されているブックマーク名、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> サーバー コントロール。</summary>
        <value>ブックマーク名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、名前を持つ Web ページのセクションをマークできます。 これによりどこからでもこのセクションへのリンクを同じページにします。 たとえば、ページ上のトピックに直接リンクされるページの上部にあるコンテンツのテーブルを提供できます。  
  
 マークされたセクションにリンクするには、使用、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールを <xref:System.Web.UI.HtmlControls.HtmlAnchor.HRef%2A> 、セクションの名前に設定するプロパティの前 \# 記号 \(\< a HRef \="\#Topic1"\/\>\)。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Name%2A> プロパティを Web ページ上のさまざまなセクションをマークし、コンテンツのテーブルからのリンクを設定します。  
  
 [!code-csharp[Classic HtmlAnchor.Name Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlAnchor.Name Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlAnchor.Name Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlAnchor.Name Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlAnchor.HRef" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlAnchor.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.Control.PreRender" /> ポストバックを生成するためのイベントとレジスタのクライアント スクリプトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.OnPreRender%2A> メソッドことが常に表示できるように、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Title%2A> カスタム タグ <xref:System.Web.UI.HtmlControls.HtmlAnchor> サーバー コントロール。  
  
 [!code-csharp[CustomHtmlAnchorOnPreRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlAnchorOnPreRender/CS/custom_htmlanchor_onprerendercs.aspx#1)]
 [!code-vb[CustomHtmlAnchorOnPreRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlAnchorOnPreRender/VB/custom_htmlanchor_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomHtmlAnchorOnPreRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlAnchorOnPreRender/CS/custom_htmlanchor_onprerender.cs#2)]
 [!code-vb[CustomHtmlAnchorOnPreRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlAnchorOnPreRender/VB/custom_htmlanchor_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerClick">
      <MemberSignature Language="C#" Value="protected virtual void OnServerClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnServerClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlAnchor.OnServerClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベントが発生したときに、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされました。 このサーバーのイベントでは、サーバーおよび背面に、クライアントから発生する可能性へのラウンド トリップをさせます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlAnchor.OnServerClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのイベント ハンドラーを宣言によってを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベントです。 ときに、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされると、メッセージが表示されます。  
  
 [!code-csharp[HtmlAnchorServerClickDeclarative\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlAnchorServerClickDeclarative/CS/sourcecs.aspx#1)]
 [!code-vb[HtmlAnchorServerClickDeclarative\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlAnchorServerClickDeclarative/VB/sourcevb.aspx#1)]  
  
 次のコード例をプログラムで指定し、コードのイベント ハンドラーの前の例を変更する、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベントです。  
  
 [!code-csharp[HtmlAnchorServerClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlAnchorServerClick/CS/htmlanchorserverclickcs.aspx#1)]
 [!code-vb[HtmlAnchorServerClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlAnchorServerClick/VB/htmlanchorserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.HtmlControls.HtmlAnchor.OnServerClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.HtmlControls.HtmlAnchor.OnServerClick(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="E:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlAnchor.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> コントロールのイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlAnchor.RaisePostBackEvent%2A> メソッドを使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> を発生させる、クリックしてされたときのコントロール、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベントです。  
  
 このメソッドは、主の機能を拡張するコントロールの開発者によって使用、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlAnchor.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> クライアントで表示する出力ストリームを格納しています。</param>
        <summary>レンダリング、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> コントロールの属性を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合の値、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.HRef%2A> プロパティは、誤った形式の URL、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.RenderAttributes%2A> メソッドでのスロー、 <xref:System.Web.HttpException> 例外です。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.RenderAttributes%2A> カスタム サーバー内のメソッドを制御できるため、ツールヒントとしてアクセスできるように特定のタイトル テキストはに対して常に表示される、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールです。  
  
 [!code-csharp[CustomHtmlAnchorRenderAttributes\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlAnchorRenderAttributes/CS/custom_htmlanchor_renderattributescs.aspx#1)]
 [!code-vb[CustomHtmlAnchorRenderAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlAnchorRenderAttributes/VB/custom_htmlanchor_renderattributesvb.aspx#1)]  
  
 [!code-csharp[CustomHtmlAnchorRenderAttributes\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomHtmlAnchorRenderAttributes/CS/custom_htmlanchor_renderattributes.cs#2)]
 [!code-vb[CustomHtmlAnchorRenderAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomHtmlAnchorRenderAttributes/VB/custom_htmlanchor_renderattributes.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.HtmlControls.HtmlAnchor.HRef" /> 誤った形式の URL が含まれています。</exception>
        <altmember cref="M:System.Web.UI.Control.ResolveClientUrl(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlAnchor.HRef" />
      </Docs>
    </Member>
    <Member MemberName="ServerClick">
      <MemberSignature Language="C#" Value="public event EventHandler ServerClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ServerClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> コントロールをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベントが発生したときに、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされました。 このサーバーのイベントでは、サーバーおよび背面に、クライアントから発生する可能性へのラウンド トリップをさせます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのイベント ハンドラーを宣言によってを次のコード例には、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベントです。 ときに、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールがクリックされると、メッセージが表示されます。  
  
 [!code-csharp[HtmlAnchorServerClickDeclarative\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlAnchorServerClickDeclarative/CS/sourcecs.aspx#1)]
 [!code-vb[HtmlAnchorServerClickDeclarative\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlAnchorServerClickDeclarative/VB/sourcevb.aspx#1)]  
  
 次のコード例は、プログラムを使用して指定し、コードのイベント ハンドラーの前の例を変更、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ServerClick> イベントです。  
  
 [!code-csharp[HtmlAnchorServerClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlAnchorServerClick/CS/htmlanchorserverclickcs.aspx#1)]
 [!code-vb[HtmlAnchorServerClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlAnchorServerClick/VB/htmlanchorserverclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlAnchor.OnServerClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlAnchor.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント引数。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.HtmlControls.HtmlAnchor.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> メソッドは <xref:System.Web.UI.HtmlControls.HtmlAnchor.RaisePostBackEvent%2A> メソッドを呼び出します。  
  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.HtmlControls.HtmlAnchor> のインスタンスが <xref:System.Web.UI.IPostBackEventHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlAnchor.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlAnchor.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはブラウザー ウィンドウまたはときにリンクされている Web ページの内容を表示するフレームの名前を設定、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> コントロールをクリックします。</summary>
        <value>ブラウザー ウィンドウまたはフレームの Web ページの内容を表示するときにリンクされている、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> をクリックします。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Target%2A> プロパティを対象となるウィンドウを指定するか、フレームのするときにリンクされている Web ページの内容を表示する、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールをクリックします。  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlAnchor.Target%2A> としてプロパティを表示、 `target` 属性です。`target` 属性を `a` 要素は、XHTML 1.1 ドキュメント型定義では許可されません。 設定されていない、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Target%2A> プロパティ場合に表示される出力、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> XHTML 1.1 に準拠している必要があります。 詳細については、「[ASP.NET and XHTML Compliance](http://msdn.microsoft.com/ja-jp/1b78d416-66bb-43a5-ac77-c703aab55b97)」を参照してください。  
>   
>  ユーザー補助対応の Web ページを作成する場合は、使用しないように、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Target%2A> 別のウィンドウを対象とするプロパティです。 詳細については、次を参照してください。 [NIB: ASP.NET のユーザー補助](http://msdn.microsoft.com/ja-jp/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)します。  
  
 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Target%2A> 値は、範囲の A ~ Z \(小文字\)、次の特殊な値を除く、アンダー スコアで始まるの文字で始まる必要があります。  
  
|対象の値|説明|  
|----------|--------|  
|`_blank`|新しいウィンドウ フレームを使用せずにコンテンツをレンダリングします。|  
|`_parent`|直前のフレーム セットの親に内容を表示します。|  
|`_search`|\[検索\] ウィンドウのコンテンツをレンダリングします。|  
|`_self`|フォーカスのあるフレームのコンテンツをレンダリングします。|  
|`_top`|フル ウィンドウ フレームを使用せずにコンテンツをレンダリングします。|  
  
> [!NOTE]
>  かどうかをブラウザーのマニュアルを確認して、 `_search` 値はサポートされています。  Microsoft Internet Explorer 5.0 およびそれ以降のサポートなど、 `_search` ターゲット値。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Target%2A> ときにナビゲートが行われたページを表示するプロパティを <xref:System.Web.UI.HtmlControls.HtmlAnchor> フレームなしに新しいウィンドウでコントロールをクリックします。  
  
 [!code-csharp[Classic HtmlAnchor.Target Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlAnchor.Target Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlAnchor.Target Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlAnchor.Target Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlAnchor.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の上にマウス ポインターをとき表示されるツールヒント テキスト、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> コントロールです。</summary>
        <value>上にマウス ポインターをときに表示されるテキスト、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティにカスタム ツールヒントを使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールです。 マウス ポインターがコントロール上に置いたときに、このテキストが表示されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.Title%2A> ツールヒントのカスタム テキストを提供するプロパティです。  
  
 [!code-csharp[Classic HtmlAnchor.Title Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HtmlAnchor.Title Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HtmlAnchor.Title Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HtmlAnchor.Title Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlAnchor.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのグループを設定する、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> 時に、サーバーへのポストバックします。</summary>
        <value>なるコントロールのグループ、 <see cref="T:System.Web.UI.HtmlControls.HtmlAnchor" /> が原因で、サーバーへのポストバック時に検証します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループとは無関係に検証できます。 使用して、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ValidationGroup%2A> の検証グループの名前を指定するプロパティ、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> 時に、サーバーへのポストバックします。  
  
 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ValidationGroup%2A> プロパティは、有効される場合にのみの値、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.CausesValidation%2A> にプロパティが設定されている `true`します。 値を指定すると、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.ValidationGroup%2A> プロパティには、指定したグループの一部である検証コントロールだけは、検証、 <xref:System.Web.UI.HtmlControls.HtmlAnchor> コントロールは、サーバーにポストバックします。 このプロパティの値を指定しないかどうか、 <xref:System.Web.UI.HtmlControls.HtmlAnchor.CausesValidation%2A> にプロパティが設定されている `true`, 、検証グループに割り当てられていないページ上のすべての検証コントロールは、サーバーへのコントロールのポストバック時に検証されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlAnchor.CausesValidation" />
      </Docs>
    </Member>
  </Members>
</Type>