<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>カスタムの型リゾルバーを実装するための抽象基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> クラスのサービスを提供します。  
  
-   文字列値に情報を入力するマネージへの変換、 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> メソッドです。  
  
-   経由で型をマネージを適切な文字列値を解決する、 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> メソッドです。  
  
 ときに、 <xref:System.Web.Script.Serialization.JavaScriptSerializer> オブジェクトは、カスタム型をシリアル化に含めることができます必要に応じてシリアル化された JavaScript Object Notation \(JSON\) 文字列の型情報を格納する値。 逆シリアル化中に <xref:System.Web.Script.Serialization.JavaScriptSerializer> JSON 文字列を変換するのには、この文字列値を適切な判断が管理されている参照を入力します。  
  
 型リゾルバーを指定する場合、 <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンス、シリアライザーが使用する、 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> と <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> それぞれシリアル化および逆シリアル化の処理中にマネージ型と文字列値の間でマップする方法です。  
  
 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> クラスの基本クラスは、 <xref:System.Web.Script.Serialization.SimpleTypeResolver> クラスで、マネージ型のアセンブリ修飾名を使用する型リゾルバーの実装を提供します。  
  
   
  
## 例  
 次の例では、カスタム タイプ リゾルバーを作成する方法を示します。  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver\#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver\#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When you implement a type resolver, the string that is returned by the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> method must map back to the same managed type when the string value is passed to the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> method.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">マネージ型の名前。</param>
        <summary>派生クラスでオーバーライドされると、 <see cref="T:System.Type" /> 指定された型名に関連付けられているオブジェクト。</summary>
        <returns>
          <see cref="T:System.Type" /> 指定された型名に関連付けられているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 型リゾルバーに関連付けられている場合、 <xref:System.Web.Script.Serialization.JavaScriptSerializer> インスタンス、シリアライザーを使用して、 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> を反復処理、JSON 文字列を固有の仕様を決定のマネージ型の JSON 型を変換する必要がある場合は、メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Given a string value, the type resolver must return a <see cref="T:System.Type" /> object that represents the corresponding managed type.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">解決するマネージ型です。</param>
        <summary>派生クラスでオーバーライドされた場合は、指定された型名を返します <see cref="T:System.Type" /> オブジェクトです。</summary>
        <returns>指定したマネージ型の名前。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> メソッドでは、いずれかを返します `null` または <xref:System.String.Empty>, 、型の競合回避モジュールは、型をサポートしていませんし、します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>