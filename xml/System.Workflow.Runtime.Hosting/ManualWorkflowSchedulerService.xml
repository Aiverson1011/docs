<Type Name="ManualWorkflowSchedulerService" FullName="System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService">
  <TypeSignature Language="C#" Value="public class ManualWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManualWorkflowSchedulerService extends System.Workflow.Runtime.Hosting.WorkflowSchedulerService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowSchedulerService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>スレッド サービスを提供します。ワークフロー インスタンスを作成するホスト アプリケーションは、このスレッド サービスを使用することにより、ワークフロー インスタンスが実行される <see cref="T:System.Threading.Thread" /> を提供できます。 このスレッド サービスを使用することで、ホスト アプリケーションは 1 つの <see cref="T:System.Threading.Thread" /> のワークフロー インスタンスを同期モードで実行できます \(ただし、ワークフローに遅延アクティビティが含まれる場合、<see cref="System.Threading.Timer" /> によって生じる個別のスレッドで遅延アクティビティが実行されるまで、処理が延期されます\)。このモードは、ワークフロー インスタンスがアイドル状態になるまで、ホスト アプリケーションの実行をブロックします。 その後、このサービスの <see cref="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" /> メソッドの使用によってのみ、ワークフロー インスタンスを実行できます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService> は、キュー内のワークフロー インスタンスを自動的には実行しません。 ホストが <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow%2A> を呼び出して、指定されたワークフローを実行する必要があります。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService (bool useActiveTimers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool useActiveTimers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="useActiveTimers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useActiveTimers">遅延アクティビティの処理方法を決定する <see langword="Boolean" />。<see langword="true" /> の場合は、遅延アクティビティの期限が切れると、スケジューラ サービスはメモリ内のタイマーを使用して自動的にワークフローを再開します。<see langword="false" /> の場合は、遅延アクティビティの期限が切れてからホストが手動でワークフローを再開する必要があります。</param>
        <summary>
          <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManualWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> のパラメーターが格納された <c>useActiveTimers</c>。<see langword="true" /> の場合は、遅延アクティビティの期限が切れると、スケジューラ サービスはメモリ内のタイマーを使用して自動的にワークフローを再開します。<see langword="false" /> の場合は、遅延アクティビティの期限が切れてからホストが手動でワークフローを再開する必要があります。</param>
        <summary>
          <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override void Cancel (Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Cancel(valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Cancel(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="timerId">キャンセルする既存のスケジュール済み作業項目に関連付けられている <see cref="T:System.Guid" />。</param>
        <summary>指定した既存のワークフロー インスタンス作業項目をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected override void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.OnStarted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" /> からオーバーロードされます。 このメソッドは <see cref="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime" /> が呼び出されるときに必ず呼び出され、<see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> が開始されるときの必要な作業を行うために <see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunWorkflow">
      <MemberSignature Language="C#" Value="public bool RunWorkflow (Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RunWorkflow(valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.RunWorkflow(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowInstanceId">実行するワークフロー インスタンスの <see cref="T:System.Guid" />。</param>
        <summary>指定したワークフロー インスタンスを実行します。</summary>
        <returns>ワークフローが実行を開始した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、現在のスレッドを使用してワークフローを実行する同期呼び出しです。 ワークフローがアイドル状態になるか、中断、完了、終了、中止のいずれかの状態になるまで返されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workflowInstanceId" /> が空の GUID です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">実行するメソッドを表す <see cref="T:System.Threading.WaitCallback" /> マルチキャスト デリゲート。</param>
        <param name="workflowInstanceId">ワークフロー インスタンスを表す <see cref="T:System.Guid" />。</param>
        <summary>指定したマルチキャスト デリゲートを使用する指定したワークフロー インスタンスを使用して、保留中の作業項目のキューにワークフロー インスタンスを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" /> に null 参照 \(Visual Basic の場合は <see langword="Nothing" />\) が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Schedule">
      <MemberSignature Language="C#" Value="protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Schedule(class System.Threading.WaitCallback callback, valuetype System.Guid workflowInstanceId, valuetype System.DateTime whenUtc, valuetype System.Guid timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.WaitCallback" />
        <Parameter Name="workflowInstanceId" Type="System.Guid" />
        <Parameter Name="whenUtc" Type="System.DateTime" />
        <Parameter Name="timerId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="callback">実行するメソッドを表す <see cref="T:System.Threading.WaitCallback" /> マルチキャスト デリゲート。</param>
        <param name="workflowInstanceId">ワークフロー インスタンスを表す <see cref="T:System.Guid" />。</param>
        <param name="whenUtc">スレッドの実行を開始する時刻を示す <see cref="T:System.DateTime" />。</param>
        <param name="timerId">スケジュール済みスレッドを表す <see cref="T:System.Guid" />。</param>
        <summary>指定したマルチキャスト デリゲート、<see cref="T:System.DateTime" />、および GUID を使用して、保留中の作業項目のキューに、指定したワークフロー インスタンスを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="callback" /> に null 参照 \(Visual Basic の場合は <see langword="Nothing" />\) が含まれています。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="workflowInstanceId" /> または <paramref name="timerId" /> が空の GUID です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected override void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService.Stop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" /> からオーバーロードされます。<see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> はこのメソッドを使用して、<see cref="T:System.Workflow.Runtime.WorkflowRuntime" /> が停止するときの必要な作業を行います。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Schedule">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>保留中の作業項目のキューにワークフロー インスタンスを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>