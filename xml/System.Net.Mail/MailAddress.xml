<Type Name="MailAddress" FullName="System.Net.Mail.MailAddress">
  <TypeSignature Language="C#" Value="public class MailAddress" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailAddress extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailAddress" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>電子メールの送信者または受信者のアドレスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Mail.MailAddress> クラスを使って、 <xref:System.Net.Mail.SmtpClient> と <xref:System.Net.Mail.MailMessage> を電子メール メッセージのアドレス情報を格納するクラス。  
  
 メール アドレスで構成されます、 <xref:System.Net.Mail.MailAddress.User%2A> 名、 <xref:System.Net.Mail.MailAddress.Host%2A> 名前と、必要に応じて、 <xref:System.Net.Mail.MailAddress.DisplayName%2A>です。<xref:System.Net.Mail.MailAddress.DisplayName%2A> エンコードする場合は、非 ASCII 文字を含めることができます。  
  
 <xref:System.Net.Mail.MailAddress> クラスは、次のメール アドレスの形式をサポートしています。  
  
-   単純なアドレス形式 `user@host`します。 場合、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> 設定された場合、これは、生成されたメール アドレスの形式ではありません。  
  
-   標準の引用符で囲まれた表示名の形式の `"display name" <user@host>`です。 場合、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> を設定すると、これは、生成された形式です。  
  
-   山かっこ周囲に追加される、 <xref:System.Net.Mail.MailAddress.User%2A> 名、 <xref:System.Net.Mail.MailAddress.Host%2A> の名前 `"display name" user@host` これらが含まれていない場合。  
  
-   引用符の前後、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> の `display name <user@host>`, これらが含まれていない場合、します。  
  
-   Unicode 文字がサポートされている、 <xref:System.Net.Mail.MailAddress.DisplayName%2A>です。 プロパティを使用する方法を示します。  
  
-   A <xref:System.Net.Mail.MailAddress.User%2A> 引用符を含む名前です。 たとえば、`"user name"@host` のようにします。  
  
-   ユーザー名に連続するおよび末尾のドットです。 たとえば、`user...name..@host` のようにします。  
  
-   かっこで囲まれたドメイン リテラルです。 たとえば、`<user@[my domain]>` のようにします。  
  
-   コメントです。 たとえば、`(comment)"display name"(comment)<(comment)user(comment)@(comment)domain(comment)>(comment)` のようにします。 コメントは、伝送する前に削除されます。  
  
 メール アドレスのリストに要素を区切るでコンマを使用します。 その結果、リスト内の引用符なしの表示名にコンマを使用する必要がありますされません。 次のメール アドレスが許可されます。  
  
 `"John, Doe" <user@host>, "Bob, Smith" <user2@host>`  
  
 次のメール アドレスは許可されていません。  
  
 `John, Doe <user@host>, Bob, Smith <user2@host>`  
  
 引用符で囲まれた文字列に引用符を埋め込むことができますが、それらをエスケープする必要があります。 次のメール アドレスが許可されます。  
  
 `"John \"Jr\" Doe" <user@host>`  
  
 `"\"John \\\"Jr\\\" Doe\" <user@host>"`  
  
 次のメール アドレスは許可されていません。  
  
 `"John "Jr" Doe" <user@host>`  
  
 注引用符で囲まれた文字列 \(またはコンマ\) の開始の間のすべてのテキストと、アドレスが一部と見なされ、ユーザー名が場合は、 <xref:System.Net.Mail.MailAddress.DisplayName%2A>, 、コメントを含みます。  
  
 \-\-例: \(非コメント\) 引用符なしの表示 \(非コメント\) 名 \(コメントではない\) \< user@host \>  
  
 ただし、 <xref:System.Net.Mail.MailAddress> クラスが有効な他のメール サーバーは、メール アドレスをそのまま使用しないと、メール アドレスを受け取る。  
  
 <xref:System.Net.Mail.MailAddress> クラスは次のメール アドレスの形式をサポートしていません。  
  
 引用符で囲まれた、引用符なしの表示名を混在させます。 たとえば、`display "name" <user@host>`  
  
 グループ、セクション 3.4 IETF によって発行されたに RFC 2822 で定義されています。  
  
 ユーザーの古い名前の形式の `"user"."name"@host, user."name"@host` または `"user".name@host`  
  
   
  
## 例  
 使用して電子メール メッセージを送信する次のコード例に示します、 <xref:System.Net.Mail.SmtpClient>, 、<xref:System.Net.Mail.MailAddress>, 、および <xref:System.Net.Mail.MailMessage> クラスです。  
  
 [!code-cpp[NclMailSync\#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync\#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">電子メール アドレスを格納している <see cref="T:System.String" />。</param>
        <summary>指定したアドレスを使用して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `address`アドレスを山かっこで囲む場合に、パラメーターが、表示名と関連付けられた電子メール アドレスを含めることができます。 例:  
  
 `"Tom Smith <tsmith@contoso.com>"`  
  
 空白文字は、表示名と山かっこの間で許可されます。  
  
 次の表に、プロパティ値を<xref:System.Net.Mail.MailAddress>前の例のアドレスを使用して構築されたオブジェクト。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Net.Mail.MailAddress.DisplayName%2A>|`"Tom Smith"`|  
|<xref:System.Net.Mail.MailAddress.Host%2A>|`"contoso.com"`|  
|<xref:System.Net.Mail.MailAddress.User%2A>|`"tsmith"`|  
|<xref:System.Net.Mail.MailAddress.Address%2A>|`"tsmith@contoso.com"`|  
  
   
  
## 例  
 次のコード例を作成するこのコンス トラクターを使用して、<xref:System.Net.Mail.MailAddress>オブジェクトに対して、<xref:System.Net.Mail.MailMessage.Bcc%2A>電子メール メッセージの受信者です。  
  
 [!code-cpp[NclMailSync\#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync\#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> が <see cref="F:System.String.Empty" /> \(""\) です。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> が、認識される形式ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">電子メール アドレスを格納している <see cref="T:System.String" />。</param>
        <param name="displayName">
          <c>address</c> に関連付けられた表示名を格納している <see cref="T:System.String" />。 このパラメーターは、<see langword="null" /> に設定できます。</param>
        <summary>アドレスと表示名を指定して、<see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示名の先頭および末尾の空白は保持されます。  
  
 場合`displayName`非 ASCII 文字を含む iso 8859\-1 文字のセットが使用、`displayName`エンコードします。 非 ASCII 文字エン コードは、後ほど記載されている RFC 1522 [http:\/\/www.ietf.org](http://www.ietf.org)です。  
  
 場合`address`、表示名が含まれていますと`displayName`は`null`と等しくないを<xref:System.String.Empty?displayProperty=fullName>、`displayName`で指定された値よりも優先`address`です。  
  
   
  
## 例  
 次のコード例を作成するこのコンス トラクターを使用して<xref:System.Net.Mail.MailAddress>送信者および受信者の電子メール メッセージのインスタンス。  
  
 [!code-cpp[NclMailSync\#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync\#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> が <see cref="F:System.String.Empty" /> \(""\) です。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> が、認識される形式ではありません。  
  
 または  
  
 <paramref name="address" /> に非 ASCII 文字が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailAddress (string address, string displayName, System.Text.Encoding displayNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string address, string displayName, class System.Text.Encoding displayNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("We don't do anything with displayNameEncoding")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="displayNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="address">電子メール アドレスを格納している <see cref="T:System.String" />。</param>
        <param name="displayName">
          <c>address</c> に関連付けられた表示名を格納している <see cref="T:System.String" />。</param>
        <param name="displayNameEncoding">
          <see cref="T:System.Text.Encoding" /> を使用した文字セットを定義する <c>displayName</c>です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.Mail.MailAddress" /> クラスの指定したアドレスを使用して、表示名、およびエンコードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示名の先頭および末尾の空白が保持されます。  
  
 場合 `address` 表示名が含まれていて、 `displayName` は `null` と等しくないと <xref:System.String.Empty?displayProperty=fullName>, 、`displayName` で指定された値よりも優先 `address`します。  
  
 <xref:System.Net.Mail.MailAddress.%23ctor%2A> 場合メソッドをチェックしません、 `displayName` パラメーターが無効です。 このメソッドは周囲の引用符では表示されない、削除、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> プロパティです。 引用符は場合を除き、伝送する前に追加する <xref:System.Text.Encoding.ASCII%2A> または <xref:System.Text.Encoding.Unicode%2A> で指定された、 `displayNameEncoding` パラメーター。 指定されたエンコーディング、 `displayNameEncoding` パラメーターに適用される、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> 伝送する前にプロパティ <xref:System.Text.Encoding.ASCII%2A> または <xref:System.Text.Encoding.Unicode%2A> で指定された、 `displayNameEncoding` パラメーター。<xref:System.Text.Encoding.UTF8%2A> 指定されていない場合にエンコーディングする既定値。  
  
 サポートされているメール アドレスの形式の詳細については、次を参照してください。 <xref:System.Net.Mail.MailAddress>します。  
  
   
  
## 例  
 次のコード例では、このコンス トラクターを使用すると <xref:System.Net.Mail.MailAddress> 、電子メール メッセージの送信者のインスタンス。  
  
 [!code-cpp[NclMailASync\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#2)]
 [!code-csharp[NclMailASync\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#2)]
 [!code-vb[NclMailASync\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="address" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="displayName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="address" /> が <see cref="F:System.String.Empty" /> \(""\) です。  
  
 または  
  
 <paramref name="displayName" /> is <see cref="F:System.String.Empty" /> \(""\).</exception>
        <exception cref="T:System.FormatException">
          <paramref name="address" /> が、認識される形式ではありません。  
  
 または  
  
 <paramref name="address" /> に非 ASCII 文字が含まれています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public string Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスの作成時に指定されている電子メール アドレスを取得します。</summary>
        <value>A <see cref="T:System.String" /> 電子メール アドレスを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティによって返される値は含まれません、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> 情報。  
  
   
  
## 例  
 次のコード例では、電子メール メッセージの受信者のアドレスを表示します。  
  
 [!code-cpp[NclMailSync\#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync\#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得し、表示名から構成される表示名、アドレス情報は、このインスタンスの作成時に指定されています。</summary>
        <value>A <see cref="T:System.String" /> を含む、表示名以外の場合、 <see cref="F:System.String.Empty" /> \(""\) このインスタンスの作成時に表示名の情報が指定されなかった場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 非 ASCII 文字の表示名は、人間が判読できる形式で返されます。 使用して、 <xref:System.Net.Mail.MailAddress.ToString%2A> のエンコード形式を取得するメソッド、 <xref:System.Net.Mail.MailAddress.DisplayName%2A>です。  
  
 電子メールの表示の読み取りに使用される一部のソフトウェア プログラム、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> の代わりに、または電子メール アドレス以外に、プロパティ値です。  
  
   
  
## 例  
 次のコード例を表示、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> 電子メール メッセージの受信者。  
  
 [!code-cpp[NclMailSync\#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync\#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>2 つのメール アドレスを比較します。</summary>
        <returns>
          <see langword="true" /> 2 つのメール アドレスが等しい場合はそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メール アドレスのハッシュ値を返します。</summary>
        <returns>整数ハッシュ値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Mail.MailAddress.GetHashCode%2A> メソッドは、メールのアドレスのハッシュ コードを返します。 この値は、ハッシュ テーブル内のキーとして使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public string Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Host" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスの作成時に指定されたアドレスのホスト部分を取得します。</summary>
        <value>A <see cref="T:System.String" /> 用の電子メールを受信するホスト コンピューターの名前を表す、 <see cref="P:System.Net.Mail.MailAddress.User" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常の電子メール アドレスにはホスト文字列にはするには、情報の次すべてにはが含まれます。、"`@`"記号。 たとえば、 `"tsmith@contoso.com"`, 、ホストが `"contoso.com"`です。  
  
   
  
## 例  
 次のコード例では、電子メール メッセージの送信先を表示します。  
  
 [!code-cpp[NclMailSync\#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync\#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailAddress.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスの文字列表現を返します。</summary>
        <returns>A <see cref="T:System.String" /> これの内容を含む <see cref="T:System.Net.Mail.MailAddress" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドによって返される文字列は、インスタンスの作成時に指定された文字列は必ずしも同じではありません。 場合、 <xref:System.Net.Mail.MailAddress.DisplayName%2A> プロパティは使用されません `null` と等しくありません <xref:System.String.Empty?displayProperty=fullName> \(""\)、 <xref:System.Net.Mail.MailAddress.ToString%2A> 、次の構文を使用して構成文字列を返します。  
  
 <xref:System.Net.Mail.MailAddress.DisplayName%2A> \<<xref:System.Net.Mail.MailAddress.User%2A>@<xref:System.Net.Mail.MailAddress.Host%2A>\>  
  
 場合 <xref:System.Net.Mail.MailAddress.DisplayName%2A> は `null` に等しいまたは <xref:System.String.Empty?displayProperty=fullName>, 、<xref:System.Net.Mail.MailAddress.ToString%2A> の値を返します、 <xref:System.Net.Mail.MailAddress.Address%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、電子メール メッセージの送信先を表示します。  
  
 [!code-cpp[NclMailSync\#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync\#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public string User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string User" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailAddress.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このインスタンスの作成時に指定されたアドレスからユーザー情報を取得します。</summary>
        <value>A <see cref="T:System.String" /> のユーザー名部分を含む、 <see cref="P:System.Net.Mail.MailAddress.Address" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常の電子メール アドレスにはユーザー文字列にはするには、上記のすべての情報が含まれます。、"`@`"記号。 たとえば、 `"tsmith@contoso.com"`, 、ユーザーが `"tsmith"`です。  
  
   
  
## 例  
 次のコード例では、電子メール メッセージの送信先を表示します。  
  
 [!code-cpp[NclMailSync\#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync\#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailAddress" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>