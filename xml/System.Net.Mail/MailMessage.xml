<Type Name="MailMessage" FullName="System.Net.Mail.MailMessage">
  <TypeSignature Language="C#" Value="public class MailMessage : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MailMessage extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Mail.MailMessage" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Mail</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>使用して送信される電子メール メッセージを表す、 <see cref="T:System.Net.Mail.SmtpClient" /> クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス、 <xref:System.Net.Mail.MailMessage> クラスが配信を使用する SMTP サーバーに送信される電子メール メッセージの構築に使用される、 <xref:System.Net.Mail.SmtpClient> クラスです。  
  
 送信者、受信者、件名、および電子メール メッセージの本文をパラメーターとして指定することがあるときに、 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 初期化するために使用される、 <xref:System.Net.Mail.MailMessage> オブジェクトです。 これらのパラメーターも設定することがありますかのプロパティを使用してアクセス、 <xref:System.Net.Mail.MailMessage> オブジェクトです。  
  
 次のプロパティを使用して、プライマリ メール メッセージのヘッダーとメッセージの要素を設定が、 <xref:System.Net.Mail.MailMessage> クラスです。  
  
|メール ヘッダーまたはパーツ|プロパティ|  
|--------------------|-----------|  
|Attachments|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|ブラインド カーボン コピー \(BCC\)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|カーボン コピー \(CC\)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|コンテンツの種類|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|カスタム ヘッダーのエンコード|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|メッセージ本文|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|優先度|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|受信者|<xref:System.Net.Mail.MailMessage.To%2A>|  
|返信先|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|送信者|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Subject|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
 <xref:System.Net.Mail.MailMessage> クラスでは、アプリケーションを使用してメッセージのヘッダーのコレクションにアクセスすることもできます、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティです。 このコレクションは読み取り専用 \(新しいコレクション設定できません\)、カスタム ヘッダーに追加できるか、このコレクションから削除します。 カスタム ヘッダーを追加対象となるときに、 <xref:System.Net.Mail.MailMessage> インスタンスを送信します。 このコレクションにはヘッダーのみが具体的には追加メッセージを送信する前に、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティがコレクションに含まれています。 後に、 <xref:System.Net.Mail.MailMessage> インスタンスを送信すると、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティは、関連付けのプロパティを使用して設定されているヘッダーも含まれます、 <xref:System.Net.Mail.MailMessage> クラスまたはパラメーターを渡すときに、 <xref:System.Net.Mail.MailMessage.%23ctor%2A> は初期化に使用、 <xref:System.Net.Mail.MailMessage> オブジェクトです。  
  
 一部のメール ヘッダーが正しくない場合は、電子メール メッセージが破損する可能性があります、されます。 ヘッダーのコレクションのプロパティを使用して設定できるため、メール ヘッダー、 <xref:System.Net.Mail.MailMessage> を使用してクラスを設定する必要がありますのみ、 <xref:System.Net.Mail.MailMessage> クラス プロパティまたはパラメーターとして渡すときに、 <xref:System.Net.Mail.MailMessage.%23ctor%2A> を初期化します、 <xref:System.Net.Mail.MailMessage> オブジェクトです。 使用して次のメールのヘッダーの一覧を追加できませんが、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティおよび任意の値を使用してこれらのヘッダーを設定、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティが破棄または、メッセージが送信されるときに上書きされます。  
  
-   \[Bcc\]  
  
-   Cc  
  
-   コンテンツ ID  
  
-   コンテンツの場所  
  
-   コンテンツ転送エンコード  
  
-   コンテンツの種類  
  
-   日付  
  
-   変換前  
  
-   重要度  
  
-   MIME バージョン  
  
-   優先度  
  
-   返信先  
  
-   送信者  
  
-   目的  
  
-   優先度の X  
  
 かどうかは、アプリケーションで指定されない X 送信者ヘッダーを使用して、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティには、 <xref:System.Net.Mail.MailMessage> クラスが作成されますのメッセージを送信します。  
  
 使用して、 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> プロパティをさまざまな形式で電子メール メッセージのコピーを指定します。 たとえば、html 形式でメッセージを送信する場合をすることも一部の受信者 HTML コンテンツを表示できない電子メール プログラムを使用している場合は、プレーン テキスト バージョンを提供します。 代替ビューでメッセージを作成するかを示す例については <xref:System.Net.Mail.MailMessage.AlternateViews%2A>です。  
  
 使用して、 <xref:System.Net.Mail.MailMessage.Attachments%2A> 電子メール メッセージに添付ファイルを追加するプロパティです。 ファイルが添付されたメッセージを作成するかを示す例については <xref:System.Net.Mail.MailMessage.Attachments%2A>です。  
  
 電子メール メッセージをアセンブル後に送信するを使用して、 <xref:System.Net.Mail.SmtpClient.Send%2A> または <xref:System.Net.Mail.SmtpClient.SendAsync%2A> メソッドです。  
  
   
  
## 例  
 次のコード例は、作成して、添付ファイルを含む電子メール メッセージの送信を示します。  
  
 [!code-cpp[NclMailSync\#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync\#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> クラスの空のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 MailSettings のネットワーク要素の値に設定されてから[](http://msdn.microsoft.com/ja-jp/220b0329-e384-4e0c-86b4-0945ad17efd9), 存在します場合。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (System.Net.Mail.MailAddress from, System.Net.Mail.MailAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Mail.MailAddress from, class System.Net.Mail.MailAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.Net.Mail.MailAddress" />
        <Parameter Name="to" Type="System.Net.Mail.MailAddress" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.Net.Mail.MailAddress" /> 電子メール メッセージの送信者のアドレスを格納します。</param>
        <param name="to">A <see cref="T:System.Net.Mail.MailAddress" /> 電子メール メッセージの受信者のアドレスを格納します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.Mail.MailMessage" /> クラスを指定して <see cref="T:System.Net.Mail.MailAddress" /> クラス オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Mail.MailMessage.From%2A> を使用してプロパティを初期化 `from` と <xref:System.Net.Mail.MailMessage.To%2A> を使用してプロパティを初期化 `to`します。  
  
   
  
## 例  
 次のコード例では、このコンス トラクターを呼び出す方法を示します。  
  
 [!code-cpp[NclMailSync\#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#4)]
 [!code-csharp[NclMailSync\#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="to" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> または <paramref name="to" /> 形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> 電子メール メッセージの送信者のアドレスを格納します。</param>
        <param name="to">A <see cref="T:System.String" /> 電子メール メッセージの受信者のアドレスを格納します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Net.Mail.MailMessage" /> クラスを指定して <see cref="T:System.String" /> クラス オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Mail.MailMessage.From%2A> を使用してプロパティを初期化 `from` と <xref:System.Net.Mail.MailMessage.To%2A> を使用してプロパティを初期化 `to`します。  
  
   
  
## 例  
 次のコード例では、このコンス トラクターを呼び出す方法を示します。  
  
 [!code-cpp[NclMailSync\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="to" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> is <see cref="F:System.String.Empty" /> \(""\).  
  
 または  
  
 <paramref name="to" /> is <see cref="F:System.String.Empty" /> \(""\).</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> または <paramref name="to" /> 形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MailMessage (string from, string to, string subject, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string from, string to, string subject, string body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="from" Type="System.String" />
        <Parameter Name="to" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="from">A <see cref="T:System.String" /> 電子メール メッセージの送信者のアドレスを格納します。</param>
        <param name="to">A <see cref="T:System.String" /> 電子メール メッセージの受信者のアドレスを格納します。</param>
        <param name="subject">A <see cref="T:System.String" /> 件名のテキストを格納しています。</param>
        <param name="body">A <see cref="T:System.String" /> メッセージ本文を含んでいます。</param>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいプロパティ <xref:System.Net.Mail.MailMessage> オブジェクトが次のように初期化されます。  
  
|パラメーター|プロパティ|  
|------------|-----------|  
|`from`|<xref:System.Net.Mail.MailMessage.From%2A>|  
|-   `to`|-   <xref:System.Net.Mail.MailMessage.To%2A>|  
|-   `subject`|-   <xref:System.Net.Mail.MailMessage.Subject%2A>|  
|-   `body`|-   <xref:System.Net.Mail.MailMessage.Body%2A>|  
  
 既定では、件名と内容と見なされますローカル コンピューターの設定に基づいて既定のエンコーディングを使用します。 使用して、 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> と <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> プロパティをさまざまなエンコーディングを指定します。  
  
   
  
## 例  
 次のコード例では、このコンス トラクターを呼び出す方法を示します。  
  
 [!code-cpp[NclMailSync\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#3)]
 [!code-csharp[NclMailSync\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="from" /> は <see langword="null" /> です。  
  
 \-または\-  
  
 <paramref name="to" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="from" /> is <see cref="F:System.String.Empty" /> \(""\).  
  
 または  
  
 <paramref name="to" /> is <see cref="F:System.String.Empty" /> \(""\).</exception>
        <exception cref="T:System.FormatException">
          <paramref name="from" /> または <paramref name="to" /> 形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="AlternateViews">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AlternateViewCollection AlternateViews { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AlternateViewCollection AlternateViews" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.AlternateViews" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AlternateViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージ本文の代替フォームの格納に使用される添付データのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.AlternateViewCollection" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> プロパティをさまざまな形式で電子メール メッセージのコピーを指定します。 たとえば、html 形式でメッセージを送信する場合をすることも一部の受信者 HTML コンテンツを表示できない電子メール プログラムを使用している場合は、プレーン テキスト バージョンを提供します。  
  
 別のビューを追加する、 <xref:System.Net.Mail.MailMessage> オブジェクトは、作成、 <xref:System.Net.Mail.Attachment> 、ビューのによって返されるコレクションに追加し、 <xref:System.Net.Mail.MailMessage.AlternateViews%2A>です。 使用して、 <xref:System.Net.Mail.MailMessage.Body%2A> プロパティをテキスト形式を指定し、使用、 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> ビューを他の MIME の種類を指定するコレクション。 使用して、 <xref:System.Net.Mime.MediaTypeNames> クラス メンバーの代替ビューの MIME の種類を指定します。  
  
   
  
## 例  
 次のコード例は、作成して、プレーン テキストと HTML の代替ビューで電子メール メッセージの送信を示します。  
  
 [!code-cpp[NclMailSync\#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#5)]
 [!code-csharp[NclMailSync\#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#5)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="none" />
      </Docs>
    </Member>
    <Member MemberName="Attachments">
      <MemberSignature Language="C#" Value="public System.Net.Mail.AttachmentCollection Attachments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.AttachmentCollection Attachments" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Attachments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.AttachmentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージにアタッチされたデータの格納に使用される添付データのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.AttachmentCollection" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返されるコレクションを使用して、 <xref:System.Net.Mail.MailMessage.Attachments%2A> ファイルの内容などの添付ファイルを追加するプロパティ、 <xref:System.IO.Stream>, 、これを <xref:System.Net.Mail.MailMessage>します。  
  
 作成、 <xref:System.Net.Mail.Attachment> が接続され、し、追加データを参照または格納している、 <xref:System.Net.Mail.Attachment> によって返されるコレクションに <xref:System.Net.Mail.MailMessage.Attachments%2A>します。  
  
   
  
## 例  
 次のコード例は、作成して、ファイルが添付された電子メール メッセージの送信を示します。  
  
 [!code-cpp[NclMailSync\#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#6)]
 [!code-csharp[NclMailSync\#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Bcc">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection Bcc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection Bcc" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Bcc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージのブラインド カーボン コピー \(BCC\) 受信者を格納するアドレスのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.MailAddressCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 BCC 受信者を電子メール メッセージに追加するには、作成、 <xref:System.Net.Mail.MailAddress> 、受信者のアドレス、およびによって返されるコレクションにそのオブジェクトを追加、 <xref:System.Net.Mail.MailMessage.Bcc%2A> プロパティです。  
  
 受信者、電子メール メッセージを表示するときに、 <xref:System.Net.Mail.MailMessage.Bcc%2A> アドレスは通常、表示されません。  
  
   
  
## 例  
 次のコード例は、アドレスを追加することを示しています、 <xref:System.Net.Mail.MailMessage.Bcc%2A> アドレスのコレクション。  
  
 [!code-cpp[NclMailSync\#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#9)]
 [!code-csharp[NclMailSync\#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public string Body { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Body" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Body" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージ本文を設定します。</summary>
        <value>A <see cref="T:System.String" /> 本文テキストを表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Mime.ContentType> の <xref:System.Net.Mail.MailMessage.Body%2A> コンテンツが「テキスト\/プレーン」です。 本文で使用されるエンコーディングを指定する、 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> プロパティです。  
  
 使用して、本文の内容の代替ビューでを指定するには、本文の内容をより充実したのプレゼンテーション オプション、受信者を指定する別の形式で使用できる場合、 <xref:System.Net.Mail.MailMessage.AlternateViews%2A> プロパティです。 たとえば、アプリケーションは、プレーン テキストの本文とメッセージ本文の HTML バージョンの両方を送信することもできます。 HTML を表示できる電子メール プログラムに提示する、本文の HTML バージョン受信者、HTML を表示できないプログラムが表示されるメッセージのテキスト形式のバージョンが代わりにします。  
  
   
  
## 例  
 設定を次のコード例に示します、 <xref:System.Net.Mail.MailMessage.Body%2A> プロパティです。  
  
 [!code-cpp[NclMailSync\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BodyEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding BodyEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding BodyEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージ本文をエンコードに使用されるエンコーディングを設定します。</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> の内容に適用する、 <see cref="P:System.Net.Mail.MailMessage.Body" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された値、 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> プロパティは、Content\-type ヘッダーで文字セットのフィールドを設定します。 既定の文字セットは `"us-ascii"`です。  
  
 設定した場合、 <xref:System.Net.Mail.MailMessage.BodyEncoding%2A> プロパティを <xref:System.Text.Encoding.UTF8%2A>, 、<xref:System.Text.Encoding.Unicode%2A>, 、または <xref:System.Text.Encoding.UTF32%2A>, 、フレームワークの選択、 <xref:System.Net.Mime.TransferEncoding> の <xref:System.Net.Mime.TransferEncoding.Base64> この <xref:System.Net.Mail.MailMessage>します。  
  
   
  
## 例  
 次のコード例は、UTF8 エンコーディングを使用する電子メール メッセージを作成するを示します。  
  
 [!code-cpp[NclMailAsync\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailAsync\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailAsync\#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="BodyTransferEncoding">
      <MemberSignature Language="C#" Value="public System.Net.Mime.TransferEncoding BodyTransferEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mime.TransferEncoding BodyTransferEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.BodyTransferEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mime.TransferEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の転送エンコード メッセージの本文をエンコードするために使用します。</summary>
        <value>
          <see cref="T:System.Net.Mime.TransferEncoding" /> を返します。  
  
 A <see cref="T:System.Net.Mime.TransferEncoding" /> の内容に適用する、 <see cref="P:System.Net.Mail.MailMessage.Body" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CC">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection CC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection CC" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.CC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージのカーボン コピー \(CC\) 受信者を格納するアドレスのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.MailAddressCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 CC 受信者を電子メール メッセージに追加するには、作成、 <xref:System.Net.Mail.MailAddress> 受信者のアドレスし、によって返されるコレクションにそのオブジェクトを追加、 <xref:System.Net.Mail.MailMessage.CC%2A> プロパティです。  
  
   
  
## 例  
 次のコード例は、アドレスを追加することを示しています、 <xref:System.Net.Mail.MailMessage.CC%2A> アドレスのコレクション。  
  
 [!code-cpp[NclMailSync\#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync\#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <Member MemberName="DeliveryNotificationOptions">
      <MemberSignature Language="C#" Value="public System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.DeliveryNotificationOptions DeliveryNotificationOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.DeliveryNotificationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.DeliveryNotificationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこの電子メール メッセージの配信通知を設定します。</summary>
        <value>A <see cref="T:System.Net.Mail.DeliveryNotificationOptions" /> このメッセージの配信通知を表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Call the <xref:System.Net.Mail.MailMessage.Dispose%2A> method when you are finished using the <xref:System.Net.Mail.MailMessage>. The <xref:System.Net.Mail.MailMessage.Dispose%2A> method leaves the <xref:System.Net.Mail.MailMessage> in an unusable state. After calling <xref:System.Net.Mail.MailMessage.Dispose%2A>, you must release all references to the <xref:System.Net.Mail.MailMessage> so the garbage collector can reclaim the memory that the <xref:System.Net.Mail.MailMessage> was occupying. For more information, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213) and [Implementing a Dispose Method](http://msdn.microsoft.com/ja-jp/eb4e1af0-3b48-4fbc-ad4e-fc2f64138bf9).  
  
> [!NOTE]
>  Always call <xref:System.Net.Mail.MailMessage.Dispose%2A> before you release your last reference to the <xref:System.Net.Mail.MailMessage>.  
  
   
  
## 例  
 The following code example demonstrates disposing a <xref:System.Net.Mail.MailMessage>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Mail.MailMessage.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
**legacyBold tag is not supported!!!!**  
method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Mail.MailMessage> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress From" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、この電子メール メッセージの差出人アドレスです。</summary>
        <value>A <see cref="T:System.Net.Mail.MailAddress" /> を含む、アドレスの情報からです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アドレスが検証されないか、現在ログオンしているユーザーに関連付けられます。  
  
   
  
## 例  
 次のコード例では、値の設定を示しています、 <xref:System.Net.Mail.MailMessage.From%2A> プロパティです。  
  
 [!code-cpp[NclMailSync\#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#10)]
 [!code-csharp[NclMailSync\#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージで送信される電子メールのヘッダーを取得します。</summary>
        <value>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> 電子メール ヘッダーを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティでは、メッセージのヘッダーのコレクションにアクセスするアプリケーション。 このコレクションは読み取り専用 \(新しいコレクション設定できません\)、カスタム ヘッダーに追加できるか、このコレクションから削除します。 カスタム ヘッダーを追加対象となるときに、 <xref:System.Net.Mail.MailMessage> インスタンスを送信します。 このコレクションにはヘッダーのみが具体的には追加メッセージを送信する前に、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティがコレクションに含まれています。 後に、 <xref:System.Net.Mail.MailMessage> インスタンスを送信すると、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティは、関連付けのプロパティを使用して設定されているヘッダーも含まれます、 <xref:System.Net.Mail.MailMessage> クラスまたはパラメーターを渡すときに、 <xref:System.Net.Mail.MailMessage.%23ctor%2A> は初期化に使用、 <xref:System.Net.Mail.MailMessage> オブジェクトです。  
  
 一部のメール ヘッダーが正しくない場合は、電子メール メッセージが破損する可能性があります、されます。 ヘッダーのコレクションのプロパティを使用して設定できるため、メール ヘッダー、 <xref:System.Net.Mail.MailMessage> を使用してクラスを設定する必要がありますのみ、 <xref:System.Net.Mail.MailMessage> クラス プロパティまたはパラメーターとして渡すときに、 <xref:System.Net.Mail.MailMessage.%23ctor%2A> を初期化します、 <xref:System.Net.Mail.MailMessage> オブジェクトです。 使用して次のメールのヘッダーの一覧を追加できませんが、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティおよび任意の値を使用してこれらのヘッダーを設定、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティが破棄または、メッセージが送信されるときに上書きされます。  
  
-   \[Bcc\]  
  
-   Cc  
  
-   コンテンツ ID  
  
-   コンテンツの場所  
  
-   コンテンツ転送エンコード  
  
-   コンテンツの種類  
  
-   日付  
  
-   変換前  
  
-   重要度  
  
-   MIME バージョン  
  
-   優先度  
  
-   返信先  
  
-   送信者  
  
-   目的  
  
-   優先度の X  
  
 かどうかは、アプリケーションで指定されない X 送信者ヘッダーを使用して、 <xref:System.Net.Mail.MailMessage.Headers%2A> プロパティには、 <xref:System.Net.Mail.MailMessage> クラスが作成されますのメッセージを送信します。  
  
 送信者、受信者、件名、および電子メール メッセージの本文をパラメーターとして指定することがあるときに、 <xref:System.Net.Mail.MailMessage.%23ctor%2A> 初期化するために使用される、 <xref:System.Net.Mail.MailMessage> オブジェクトです。 これらのパラメーターも設定することがありますかのプロパティを使用してアクセス、 <xref:System.Net.Mail.MailMessage> オブジェクトです。  
  
 次のプロパティを使用して、プライマリ メール メッセージのヘッダーとメッセージの要素を設定が、 <xref:System.Net.Mail.MailMessage> クラスです。  
  
|メール ヘッダーまたはパーツ|プロパティ|  
|--------------------|-----------|  
|Attachments|<xref:System.Net.Mail.MailMessage.Attachments%2A>|  
|ブラインド カーボン コピー \(BCC\)|<xref:System.Net.Mail.MailMessage.Bcc%2A>|  
|カーボン コピー \(CC\)|<xref:System.Net.Mail.MailMessage.CC%2A>|  
|コンテンツの種類|<xref:System.Net.Mail.MailMessage.BodyEncoding%2A>|  
|カスタム ヘッダーのエンコード|<xref:System.Net.Mail.MailMessage.HeadersEncoding%2A>|  
|メッセージ本文|<xref:System.Net.Mail.MailMessage.Body%2A>|  
|優先度|<xref:System.Net.Mail.MailMessage.Priority%2A>|  
|受信者|<xref:System.Net.Mail.MailMessage.To%2A>|  
|返信先|<xref:System.Net.Mail.MailMessage.ReplyToList%2A>|  
|送信者|<xref:System.Net.Mail.MailMessage.From%2A>|  
|Subject|<xref:System.Net.Mail.MailMessage.Subject%2A>|  
  
   
  
## 例  
 次のコード例では、メール メッセージのヘッダーを表示するを示します。  
  
 [!code-cpp[NclMailSync\#24](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#24)]
 [!code-csharp[NclMailSync\#24](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeadersEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding HeadersEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding HeadersEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.HeadersEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、この電子メール メッセージのユーザー定義のカスタム ヘッダーに使用されるエンコーディングを設定します。</summary>
        <value>この電子メール メッセージのユーザー定義のカスタム ヘッダーを使用するエンコーディング。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Net.Mail.MailMessage.HeadersEncoding%2A> プロパティの既定値 <xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName>です。  
  
 SMTP メッセージは、ヘッダーと本文で構成されます。 SMTP の IETF Rfc では、ヘッダーと本文部分名 ascii を制限します。 ただし、IETF Rfc には、ヘッダーと本文パーツの値を Unicode 文字を含むことができるようにします。 特定の値の非 ASCII 文字が存在する場合、値はエンコード組み合わせを使用して文字のエンコーディング \(UTF8 または例については、Shift JIS\) の後にバイトをエンコードすることによって \(<xref:System.Net.Mime.TransferEncoding.Base64> または <xref:System.Net.Mime.TransferEncoding.QuotedPrintable> など\)。 通常は結果の ASCII 文字のみが、ネットワーク転送のストリームです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.SubjectEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="IsBodyHtml">
      <MemberSignature Language="C#" Value="public bool IsBodyHtml { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBodyHtml" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.IsBodyHtml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または電子メール メッセージの本文が html 形式であるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> メッセージ本文の html の場合else <see langword="false" />します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailPriority Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Mail.MailPriority Priority" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailPriority</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこの電子メール メッセージの優先順位を設定します。</summary>
        <value>A <see cref="T:System.Net.Mail.MailPriority" /> このメッセージの優先順位を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyTo">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress ReplyTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress ReplyTo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use ReplyToList instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメール メッセージの ReplyTo アドレスを設定します。</summary>
        <value>値を示す MailAddress、 <see cref="P:System.Net.Mail.MailMessage.ReplyTo" /> フィールドです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Net.Mail.MailMessage.ReplyTo%2A> プロパティ以外のアドレスを示すために、 <xref:System.Net.Mail.MailMessage.From%2A> アドレスを使用してこのメッセージに返信します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToList">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection ReplyToList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection ReplyToList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.ReplyToList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメール メッセージの返信先アドレスの一覧を設定します。</summary>
        <value>メール メッセージの返信先アドレスの一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Net.Mail.MailMessage.ReplyToList%2A> プロパティ以外のアドレスの一覧を示すために、 <xref:System.Net.Mail.MailMessage.From%2A> アドレスを使用してこのメッセージに返信します。  
  
 <xref:System.Net.Mail.MailMessage.ReplyToList%2A> プロパティ置換、 <xref:System.Net.Mail.MailMessage.ReplyTo%2A> のみに応答する 1 つのアドレスを許可するプロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sender">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress Sender { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress Sender" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Sender" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこの電子メール メッセージの送信者のアドレスを設定します。</summary>
        <value>A <see cref="T:System.Net.Mail.MailAddress" /> 送信者のアドレス情報を格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 送信者のアドレスが検証されないか、現在ログオンしているユーザーに関連付けられます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subject">
      <MemberSignature Language="C#" Value="public string Subject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subject" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.Subject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこの電子メール メッセージの件名を設定します。</summary>
        <value>A <see cref="T:System.String" /> 件名の内容を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サブジェクトを使用して使用するエンコーディングを指定する、 <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> プロパティです。  
  
   
  
## 例  
 設定を次のコード例に示します、 <xref:System.Net.Mail.MailMessage.Subject%2A> プロパティです。  
  
 [!code-cpp[NclMailSync\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#2)]
 [!code-csharp[NclMailSync\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubjectEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding SubjectEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding SubjectEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.SubjectEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、この電子メール メッセージの件名の内容に使用されるエンコーディングを設定します。</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> をエンコードするときに使用した、 <see cref="P:System.Net.Mail.MailMessage.Subject" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メール エージェントで、問題がある場合、 <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> の <xref:System.Text.Encoding.Unicode%2A>, を使用して <xref:System.Text.Encoding.UTF8%2A>します。  
  
   
  
## 例  
 設定を次のコード例に示します、 <xref:System.Net.Mail.MailMessage.SubjectEncoding%2A> プロパティです。  
  
 [!code-cpp[NclMailASync\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclMailASync/cpp/mailasync.cpp#3)]
 [!code-csharp[NclMailASync\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclMailASync/CS/mailasync.cs#3)]
 [!code-vb[NclMailASync\#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclMailASync/vb/mailasync.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Mail.MailMessage.BodyEncoding" />
        <altmember cref="P:System.Net.Mail.MailMessage.HeadersEncoding" />
        <altmember cref="T:System.Net.Mime.TransferEncoding" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddressCollection To { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddressCollection To" />
      <MemberSignature Language="DocId" Value="P:System.Net.Mail.MailMessage.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Mail</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddressCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この電子メール メッセージの受信者を格納するアドレスのコレクションを取得します。</summary>
        <value>書き込み可能な <see cref="T:System.Net.Mail.MailAddressCollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Mail.MailMessage.To%2A> プロパティを使用して、\[電子メール メッセージの宛先アドレスを指定します。 電子メール メッセージに受信者を追加するには、作成、 <xref:System.Net.Mail.MailAddress> 、受信者のアドレス、および、このプロパティによって返されるコレクションにそのオブジェクトを追加します。  
  
   
  
## 例  
 設定を次のコード例に示します、 <xref:System.Net.Mail.MailMessage.To%2A> プロパティです。  
  
 [!code-cpp[NclMailSync\#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLMailSync/CPP/NclMailSync.cpp#7)]
 [!code-csharp[NclMailSync\#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLMailSync/CS/mail.cs#7)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="None" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Net.Mail.MailMessage" /> で使用したリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>