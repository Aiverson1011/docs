<Type Name="OleDbParameter" FullName="System.Data.OleDb.OleDbParameter">
  <TypeSignature Language="C#" Value="public sealed class OleDbParameter : System.Data.Common.DbParameter, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OleDbParameter extends System.Data.Common.DbParameter implements class System.Data.IDataParameter, class System.Data.IDbDataParameter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OleDb.OleDbParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbParameter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.OleDb.OleDbParameter/OleDbParameterConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Data.OleDb.OleDbCommand" /> に対するパラメーターと、必要に応じてその <see cref="T:System.Data.DataSet" /> 列へのマッピングを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 OLE DB.NET Framework データ プロバイダーは、名前付きパラメーターの代わりに疑問符 \(?\) で示される位置指定パラメーターを使用します。  
  
 使用して Oracle \(MSDAORA\) と OLE DB.NET Framework データ プロバイダーの Microsoft OLE DB プロバイダーを使用して Oracle データベースのクエリを実行するときに、 `LIKE` 固定長フィールドの値をクエリに句が必要なすべての一致を返さない場合があります。 Oracle には、固定長フィールドの値が一致するとその理由は、 `LIKE` 句で、末尾の埋め込み空白を含む文字列の長さ全体に一致することです。 などの場合は、テーブルで Oracle データベースを含むとして定義されている"Field1"という名前のフィールド `char(3)`, 、値を入力して、次のコードは、そのテーブルの行に"a"は返しません行です。  
  
```vb  
Dim queryString As String = "SELECT * FROM Table1 WHERE Field1 LIKE ?"  
Dim command As OleDbCommand = New OleDbCommand(queryString, connection)  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a"  
Dim reader As OleDbDataReader = command.ExecuteReader()  
```  
  
```csharp  
string queryString = "SELECT * FROM Table1 WHERE Field1 LIKE ?";  
OleDbCommand command = new OleDbCommand(queryString, connection);  
command.Parameters.Add("@p1", OleDbType.Char, 3).Value = "a";  
OleDbDataReader reader = command.ExecuteReader();  
```  
  
 これは、Oracle に"a"列の値を格納するため \(padding"a"、末尾にスペース、3 の固定長フィールドの長さ\)、Oracle はの場合に"a"のパラメーター値の一致するものとして扱われませんが、 `LIKE` 固定長フィールドの比較します。  
  
 この問題を解決するのには、パラメーターの値にパーセント \(「%」\) のワイルドカード文字を追加します \(`"a%"`\)、SQL を使用して、または `=` 比較代わりにします。  
  
   
  
## 例  
 次の例の複数のインスタンスを作成する <xref:System.Data.OleDb.OleDbParameter> を通じて、 <xref:System.Data.OleDb.OleDbParameterCollection> 内のコレクション、 <xref:System.Data.OleDb.OleDbDataAdapter>です。 これらのパラメーターは、データ ソースからデータを選択し、内のデータを配置するために使用、 <xref:System.Data.DataSet>です。 この例では、 <xref:System.Data.DataSet> と <xref:System.Data.OleDb.OleDbDataAdapter> 適切なスキーマ、コマンド、および接続を使用して既に作成されています。  
  
 [!code-csharp[Classic WebData OleDbParameter Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.OleDb.OleDbParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="dataType">
          <see cref="T:System.Data.OleDb.OleDbType" /> 値の 1 つ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.OleDb.OleDbParameter" /> パラメーターの名前とデータ型を使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ型、および必要に応じて <xref:System.Data.OleDb.OleDbParameter.Size%2A> と <xref:System.Data.OleDb.OleDbParameter.Precision%2A> の値から推論される、 `dataType` パラメーター。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter1 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter1 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataType" /> パラメーターに指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="value">新しい値 <see cref="T:System.Data.OleDb.OleDbParameter" /> オブジェクトです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.OleDb.OleDbParameter" /> パラメーター名と新しい値を使用するクラス <see cref="T:System.Data.OleDb.OleDbParameter" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このオーバー ロードを使用しているときに警告を使用して、 <xref:System.Data.OleDb.OleDbParameter> コンス トラクター パラメーター値の整数を指定します。 このオーバー ロードがかかるため、 `value` 型の <xref:System.Object>, は整数値を変換する必要があります、 <xref:System.Object> 値が 0 ときに、入力すると、次の c\# の例で示すようにします。  
  
```  
Parameter = new OleDbParameter("@pname", Convert.ToInt32(0));  
```  
  
 コンパイラが呼び出すしようとしていることを想定していますこの変換を実行しない場合、 <xref:System.Data.OleDb.OleDbParameter.%23ctor%2A> コンス トラクター オーバー ロードします。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter>です。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter5 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter5 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="dataType">
          <see cref="T:System.Data.OleDb.OleDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.OleDb.OleDbParameter" /> パラメーター名、データ型および長さを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A> の値から推論される、 `dataType` パラメーター明示的に設定されていない場合、 `size` パラメーター。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter2 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter2 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataType" /> パラメーターに指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string name, System.Data.OleDb.OleDbType dataType, int size, string srcColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.OleDb.OleDbType dataType, int32 size, string srcColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="srcColumn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">マップするパラメーターの名前。</param>
        <param name="dataType">
          <see cref="T:System.Data.OleDb.OleDbType" /> の値の 1 つ。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="srcColumn">ソース列の名前。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.OleDb.OleDbParameter" /> パラメーター名、データ型、長さ、およびソース列名を使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A> の値から推論される、 `dataType` パラメーター明示的に設定されていない場合、 `size` パラメーター。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter3 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter3 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataType" /> パラメーターに指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, bool isNullable, unsigned int8 precision, unsigned int8 scale, string srcColumn, valuetype System.Data.DataRowVersion srcVersion, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="isNullable" Type="System.Boolean" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="srcColumn" Type="System.String" />
        <Parameter Name="srcVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">パラメーターの名前。</param>
        <param name="dbType">
          <see cref="T:System.Data.OleDb.OleDbType" /> 値のいずれか。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> の値の 1 つ。</param>
        <param name="isNullable">フィールドの値を NULL に設定できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="precision">
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale">
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="srcColumn">ソース列の名前。</param>
        <param name="srcVersion">
          <see cref="T:System.Data.DataRowVersion" /> 値のいずれか。</param>
        <param name="value">
          <see cref="T:System.Data.OleDb.OleDbParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.OleDb.OleDbParameter" /> パラメーター名、データ型、長さ、ソース列名、パラメーターの方向、数値有効桁数、およびその他のプロパティを使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A> と <xref:System.Data.OleDb.OleDbParameter.Precision%2A> の値から推論される、 `dataType` パラメーターで明示的に設定されていない場合、 `size` と `precision` パラメーター。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、表示、 <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>です。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataType" /> パラメーターに指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OleDbParameter (string parameterName, System.Data.OleDb.OleDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string parameterName, valuetype System.Data.OleDb.OleDbType dbType, int32 size, valuetype System.Data.ParameterDirection direction, unsigned int8 precision, unsigned int8 scale, string sourceColumn, valuetype System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.#ctor(System.String,System.Data.OleDb.OleDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.OleDb.OleDbType" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Data.ParameterDirection" />
        <Parameter Name="precision" Type="System.Byte" />
        <Parameter Name="scale" Type="System.Byte" />
        <Parameter Name="sourceColumn" Type="System.String" />
        <Parameter Name="sourceVersion" Type="System.Data.DataRowVersion" />
        <Parameter Name="sourceColumnNullMapping" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameterName">パラメーターの名前。</param>
        <param name="dbType">
          <see cref="T:System.Data.OleDb.OleDbType" /> 値のいずれか。</param>
        <param name="size">パラメーターの長さ。</param>
        <param name="direction">
          <see cref="T:System.Data.ParameterDirection" /> 値の 1 つ。</param>
        <param name="precision">
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点の左側および右側の桁数の合計。</param>
        <param name="scale">
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> を解決する際の、小数点以下の合計桁数。</param>
        <param name="sourceColumn">ソース列の名前。</param>
        <param name="sourceVersion">
          <see cref="T:System.Data.DataRowVersion" /> 値のいずれか。</param>
        <param name="sourceColumnNullMapping">ソース列で NULL 値が許容される場合は <see langword="true" />。NULL 値が許容されない場合は <see langword="false" />。</param>
        <param name="value">
          <see cref="T:System.Data.OleDb.OleDbParameter" /> の値である <see cref="T:System.Object" />。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Data.OleDb.OleDbParameter" /> パラメーター名、データ型、長さ、ソース列名、パラメーターの方向、数値有効桁数、およびその他のプロパティを使用するクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A> と <xref:System.Data.OleDb.OleDbParameter.Precision%2A> の値から推論される、 `dataType` パラメーターで明示的に設定されていない場合、 `size` と `precision` パラメーター。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、表示、 <xref:System.Data.OleDb.OleDbParameter.ParameterName%2A>です。  
  
 [!code-csharp[Classic WebData OleDbParameter.OleDbParameter4 Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.OleDbParameter4 Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.OleDbParameter4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="dataType" /> パラメーターに指定された値が、正しくないバックエンド データ型です。</exception>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public override System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.DbType" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.DbType" /> 値のいずれか。 既定値は、<see cref="F:System.Data.DbType.String" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> と <xref:System.Data.OleDb.OleDbParameter.DbType%2A> リンクされています。 このため、設定、 <xref:System.Data.OleDb.OleDbParameter.DbType%2A> の変更、 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> に、サポートする <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>です。  
  
 サポートされるデータ型の一覧を参照してください、適切な <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> メンバーです。 詳細については、「[Using Parameters with a DataAdapter](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12)」を参照してください。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 [!code-csharp[Classic WebData OleDbParameter.DbType Example\#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbParameter.DbType Example\#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbParameter.DbType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">有効なプロパティが設定されていない <see cref="T:System.Data.DbType" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパラメーターが入力専用、出力専用かどうか、双方向、またはストアド プロシージャの戻り値パラメーターを示す値を設定します。</summary>
        <value>
          <see cref="T:System.Data.ParameterDirection" /> 値のいずれか。 既定値は、<see langword="Input" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Data.ParameterDirection> 出力、および関連付けられている実行は、 <xref:System.Data.OleDb.OleDbCommand> 、値を返さない、 <xref:System.Data.OleDb.OleDbParameter> null 値が含まれています。  
  
 `Output`, 、`InputOut`, 、と `ReturnValue` を呼び出して返されたパラメーター <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> が呼び出されるまでにアクセスできない <xref:System.Data.OleDb.OleDbDataReader.Close%2A> または **Dispose** で、 <xref:System.Data.OleDb.OleDbDataReader>です。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティが、有効な <see cref="T:System.Data.ParameterDirection" /> 値のいずれかに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public override bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターが null 値を受け取るかどうかを示す値を取得または設定します。</summary>
        <value>null 値を受け取る場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Null 値の処理を使用して、 <xref:System.DBNull> クラスです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
```vb  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.IsNullable = True  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
```csharp  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.IsNullable = true;  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OleDbType">
      <MemberSignature Language="C#" Value="public System.Data.OleDb.OleDbType OleDbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OleDb.OleDbType OleDbType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Data.Common.DbProviderSpecificTypeProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.OleDb.OleDbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの <see cref="T:System.Data.OleDb.OleDbType" /> を取得または設定します。</summary>
        <value>パラメーターの <see cref="T:System.Data.OleDb.OleDbType" />。 既定値は、<see cref="F:System.Data.OleDb.OleDbType.VarWChar" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> と <xref:System.Data.OleDb.OleDbParameter.DbType%2A> リンクされています。 このため、設定、 <xref:System.Data.OleDb.OleDbParameter.DbType%2A> の変更、 <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> に、サポートする <xref:System.Data.OleDb.OleDbType>です。  
  
 サポートされるデータ型の一覧を参照してください、適切な <xref:System.Data.OleDb.OleDbType> メンバーです。 詳細については、「[Using Parameters with a DataAdapter](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterName">
      <MemberSignature Language="C#" Value="public override string ParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.ParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Data.OleDb.OleDbParameter" /> の名前を取得または設定します。</summary>
        <value>
          <see cref="T:System.Data.OleDb.OleDbParameter" /> の名前。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 OLE DB .NET プロバイダーでは、名前付きパラメーターの代わりに疑問符 \(?\) で示される位置指定パラメーターを使用します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 \[Visual Basic\]  
  
```  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Direction = ParameterDirection.Output  
End Sub 'CreateOleDbParameter  
```  
  
 \[C\#\]  
  
```  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Direction = ParameterDirection.Output;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Precision">
      <MemberSignature Language="C#" Value="public byte Precision { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Precision" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Precision" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> プロパティを表すために使用する最大桁数を取得または設定します。</summary>
        <value>
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> プロパティを表すために使用する最大桁数。 既定値は 0 で、データ プロバイダーでの有効桁数を設定することを示します <see cref="P:System.Data.OleDb.OleDbParameter.Value" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.Precision%2A> プロパティは、10 進数と数値の入力パラメーターにのみ使用します。  
  
 <xref:System.Data.OleDb.OleDbParameter.Precision%2A> に対してのみプロパティを設定する必要があります `Decimal` と `Numeric` パラメーターを呼び出す前に、 <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> のメソッド、 <xref:System.Data.OleDb.OleDbCommand>です。  
  
 データベース内の値以外の値にこのプロパティの設定では、データ プロバイダーの実装に依存し、エラー コードの切り捨てや丸めデータを返す可能性があります。  
  
 `Precision` プロパティでは、パラメーターのみに影響が <xref:System.Data.OleDb.OleDbType> は `Decimal`, 、`Numeric`, 、または `VarNumeric`です。 他のデータ型の `Precision` は無視されます。  
  
> [!NOTE]
>  データベースに渡されるデータを強制的にこのプロパティの使用がサポートされていません。 Round、切り捨て、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、 <xref:System.Math> クラスの一部である、 `System` にパラメーターの値を代入する前に名前空間 `Value` プロパティです。  
  
> [!NOTE]
>  .NET Framework version 1.0 で含まれている .NET framework データ プロバイダーを確認しないように、 <xref:System.Data.OleDb.OleDbParameter.Precision%2A> または <xref:System.Data.OleDb.OleDbParameter.Scale%2A> の <xref:System.Decimal> パラメーターの値。 これには、切り捨てられたデータをデータ ソースに挿入する可能性があります。 .NET Framework version 1.0 を使用している場合は、検証、 <xref:System.Data.OleDb.OleDbParameter.Precision%2A> と <xref:System.Data.OleDb.OleDbParameter.Scale%2A> の <xref:System.Decimal> パラメーターの値を設定する前に値です。<xref:System.Data.OleDb.OleDbParameter.Scale%2A> 超える値、 <xref:System.Decimal> パラメーター スケールはまだに切り捨てられます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 \[Visual Basic\]  
  
```  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
 \[C\#\]  
  
```  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDbType">
      <MemberSignature Language="C#" Value="public override void ResetDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResetDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.OleDb.OleDbParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コマンドの実行時は、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することも値から推論できます。 このメソッドを呼び出すと、パラメーターに渡された値からもう一度推測できるように、パラメーターがリセットされます。 このメソッドを呼び出して、両方の影響を与える、 <xref:System.Data.OleDb.OleDbParameter.DbType%2A> と <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> のプロパティ、 <xref:System.Data.OleDb.OleDbParameter>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="ResetOleDbType">
      <MemberSignature Language="C#" Value="public void ResetOleDbType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetOleDbType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ResetOleDbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この <see cref="T:System.Data.OleDb.OleDbParameter" /> に関連付けられている型をリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コマンドの実行時は、パラメーター値を含むまたはパラメーターの型は、コードで明示的に設定することも値から推論できます。 このメソッドを呼び出すと、パラメーターに渡された値からもう一度推測できるように、パラメーターがリセットされます。 このメソッドを呼び出して、両方の影響を与える、 <xref:System.Data.OleDb.OleDbParameter.DbType%2A> と <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> のプロパティ、 <xref:System.Data.OleDb.OleDbParameter>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.OleDb.OleDbParameter.ResetDbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.DbType" />
        <altmember cref="P:System.Data.OleDb.OleDbParameter.OleDbType" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public byte Scale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 Scale" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> が解決される、小数点以下の桁数を取得または設定します。</summary>
        <value>
          <see cref="P:System.Data.OleDb.OleDbParameter.Value" /> が解決される、小数点以下の桁数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.Scale%2A> プロパティは、呼び出す前に 10 進数と数値の入力パラメーターにのみ使用、 <xref:System.Data.OleDb.OleDbCommand.Prepare%2A> のメソッド、 <xref:System.Data.OleDb.OleDbCommand> と数値の出力パラメーターを指定します。  
  
 データベース内の値以外の値にこのプロパティの設定では、データ プロバイダーの実装に依存し、エラー コードの切り捨てや丸めデータを返す可能性があります。  
  
 SQL Server Native Client 10 \(以降\) を使用する場合、型がパラメーターをバインドする `Decimal`, 、`Numeric,``VarNumeric, DBDate`, 、または `DBTimeStamp`, 、適切なスケール値を手動で指定する必要があります。  
  
> [!NOTE]
>  データベースに渡されるデータを強制的にこのプロパティの使用がサポートされていません。 Round、切り捨て、またはそれ以外の場合、データベースに渡す前にデータを変換を使用して、 <xref:System.Math> クラスの一部である、 `System` にパラメーターの値を代入する前に名前空間 `Value` プロパティです。  
  
> [!NOTE]
>  .NET Framework version 1.0 で含まれている .NET framework データ プロバイダーを確認しないように、 <xref:System.Data.OleDb.OleDbParameter.Precision%2A> または <xref:System.Data.OleDb.OleDbParameter.Scale%2A> の <xref:System.Decimal> パラメーターの値。 これには、切り捨てられたデータをデータ ソースに挿入する可能性があります。 .NET Framework version 1.0 を使用している場合は、検証、 <xref:System.Data.OleDb.OleDbParameter.Precision%2A> と <xref:System.Data.OleDb.OleDbParameter> の <xref:System.Decimal> パラメーターの値を設定する前に値です。<xref:System.Data.OleDb.OleDbParameter.Scale%2A> 超える値、 <xref:System.Decimal> パラメーター スケールはまだに切り捨てられます。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 \[Visual Basic\]  
  
```  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Price", OleDbType.Decimal)  
    parameter.Value = 3.1416  
    parameter.Precision = 8  
    parameter.Scale = 4  
End Sub 'CreateOleDbParameter  
```  
  
 \[C\#\]  
  
```  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Price", OleDbType.Decimal);  
    parameter.Value = 3.1416;  
    parameter.Precision = 8;  
    parameter.Scale = 4;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public override int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列内のデータの最大サイズをバイト単位で取得または設定します。</summary>
        <value>列内のデータの最大サイズ \(バイト単位\)。 既定値はパラメーター値から推論されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.Size%2A> バイナリおよび文字列型のプロパティを使用します。  
  
 文字列以外のデータ型と ANSI 文字列データのため、 <xref:System.Data.OleDb.OleDbParameter.Size%2A> プロパティがバイト単位の数を示します。 Unicode 文字列データの <xref:System.Data.OleDb.OleDbParameter.Size%2A> 文字の数を示します。 文字列の数では、終端の文字は含まれません。  
  
 可変長のデータ型の <xref:System.Data.OleDb.OleDbParameter.Size%2A> サーバーに転送するデータの最大量をについて説明します。 たとえば、Unicode 文字列値、 <xref:System.Data.OleDb.OleDbParameter.Size%2A> 最初の 100 個の文字をサーバーに送信されるデータの量が制限される可能性があります。  
  
 双方向と出力パラメーターと戻り値は、の値を設定する必要があります <xref:System.Data.OleDb.OleDbParameter.Size%2A>します。 これは入力パラメーターでは必要ないかどうかは明示的に設定するの値は、推論指定されたパラメーターの実際のサイズからパラメーター化されたステートメントを実行するとします。  
  
 <xref:System.Data.OleDb.OleDbParameter.DbType%2A>, 、<xref:System.Data.OleDb.OleDbParameter.OleDbType%2A>, 、および <xref:System.Data.OleDb.OleDbParameter.Size%2A> 設定で、パラメーターのプロパティを推測できなければ <xref:System.Data.OleDb.OleDbParameter.Value%2A>します。 そのため、それらを指定する必要はありません。 ただし、これらはで <xref:System.Data.OleDb.OleDbParameter> プロパティの設定です。 たとえば、パラメーターのサイズが推論された <xref:System.Data.OleDb.OleDbParameter.Size%2A> ステートメントの実行後、推定値が含まれていません。  
  
 固定長のデータ型の値の <xref:System.Data.OleDb.OleDbParameter.Size%2A> は無視されます。 サーバーへのパラメーターの値を送信するときに、プロバイダーを使用して、情報提供を目的に利用できます。  
  
 値のサイズが指定した場合、 <xref:System.Data.OleDb.OleDbParameter> 、指定されたを超えています <xref:System.Data.OleDb.OleDbParameter.Size%2A>, 、 <xref:System.Data.OleDb.OleDbParameter.Value%2A> の <xref:System.Data.OleDb.OleDbParameter> のサイズに切り捨て、指定した値を含む、 <xref:System.Data.OleDb.OleDbParameter>です。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 \[Visual Basic\]  
  
```  
Public Sub CreateOleDbParameter()  
    Dim myValue As String = "12 foot scarf - multiple colors, one previous owner"  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar)  
    parameter.Direction = ParameterDirection.Output  
    parameter.Size = myValue.Length  
    parameter.Value = myValue  
End Sub 'CreateOleDbParameter  
```  
  
 \[C\#\]  
  
```  
public void CreateOleDbParameter()   
 {  
    string myValue = "12 foot scarf - multiple colors, one previous owner";  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar);  
    parameter.Direction = ParameterDirection.Output;  
    parameter.Size = myValue.Length;  
    parameter.Value = myValue;  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumn">
      <MemberSignature Language="C#" Value="public override string SourceColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceColumn" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にマップされたソース列の名前、 <see cref="T:System.Data.DataSet" /> ロードしたり返したりするために使用して、 <see cref="P:System.Data.OleDb.OleDbParameter.Value" />です。</summary>
        <value>
          <see cref="T:System.Data.DataSet" /> にマップされるソース列の名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> と列から取得した、空の文字列パラメーターの値以外の値に設定されている、 <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> 名。 場合 <xref:System.Data.OleDb.OleDbParameter.Direction%2A> に設定されている `Input`, から値を取得、 <xref:System.Data.DataSet>です。 場合 <xref:System.Data.OleDb.OleDbParameter.Direction%2A> に設定されている `Output`, 、データ ソースから値を取得します。 A <xref:System.Data.OleDb.OleDbParameter.Direction%2A> の `InputOutput` は両方の組み合わせです。  
  
 使用する方法の詳細についての <xref:System.Data.OleDb.OleDbParameter.SourceColumn%2A> プロパティを参照してください [Using Parameters with a DataAdapter](http://msdn.microsoft.com/ja-jp/f21e6aba-b76d-46ad-a83e-2ad8e0af1e12) と [Updating the Database with a DataAdapter and the DataSet](http://msdn.microsoft.com/ja-jp/d1bd9a8c-0e29-40e3-bda8-d89176b72fb1)です。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 \[Visual Basic\]  
  
```  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
End Sub 'CreateOleDbParameter  
```  
  
 \[C\#\]  
  
```  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceColumnNullMapping">
      <MemberSignature Language="C#" Value="public override bool SourceColumnNullMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SourceColumnNullMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ソース列が null 許容かどうかを示す値を設定または取得します。 これにより、 <see cref="T:System.Data.Common.DbCommandBuilder" /> 正しく null 許容の列の Update ステートメントを生成します。</summary>
        <value>ソース列が null 許容である場合は <see langword="true" />。null 許容ではない場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> によって使用される、 <xref:System.Data.Common.DbCommandBuilder> null 許容の列を処理するときに、更新コマンドを正しく生成します。 一般に、使用の <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> から継承する開発者に制限されて <xref:System.Data.Common.DbCommandBuilder>します。  
  
 <xref:System.Data.Common.DbCommandBuilder> このプロパティを使用して、基になる列が nullable、し、このプロパティを設定するかどうかを判断する `true` 、null 許容である場合と `false` がない場合。<xref:System.Data.Common.DbCommandBuilder> が調べ、Update ステートメントを生成すると、 <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> パラメーターごとにします。 プロパティの場合 `true`, 、<xref:System.Data.Common.DbCommandBuilder> 次のように WHERE 句が生成されます \(このクエリ式の"FieldName"を表すフィールドの名前\)。  
  
```  
((@IsNull_FieldName = 1 AND FieldName IS NULL) OR   
  (FieldName = @Original_FieldName))  
```  
  
 場合 <xref:System.Data.OleDb.OleDbParameter.SourceColumnNullMapping%2A> フィールドが false の場合、 <xref:System.Data.Common.DbCommandBuilder> 次の WHERE 句が生成されます。  
  
```  
FieldName = @OriginalFieldName  
```  
  
 さらに、ソース フィールドが含まれる場合、null、0 そうでない場合に、@IsNull\_FieldName は 1 です。 このメカニズムでは、SQL Server のパフォーマンスを最適化するためし、複数のプロバイダーの間で機能する共通のコードを提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceVersion">
      <MemberSignature Language="C#" Value="public override System.Data.DataRowVersion SourceVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowVersion SourceVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.SourceVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Data.DataRowVersion" /> を読み込むときに使用する <see cref="P:System.Data.OleDb.OleDbParameter.Value" />です。</summary>
        <value>
          <see cref="T:System.Data.DataRowVersion" /> 値のいずれか。 既定値は、<see langword="Current" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用される <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> にパラメーターの値を設定するかどうかを確認、更新操作中に `Current` または `Original`です。 これにより、プライマリ キーを更新できます。 バージョンにこのプロパティを設定、 <xref:System.Data.DataRow> で使用される、 <xref:System.Data.DataRow.Item%2A> プロパティ、または <xref:System.Data.DataRow.GetChildRows%2A> のメソッド、 <xref:System.Data.DataRow> オブジェクトです。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 \[Visual Basic\]  
  
```  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.SourceColumn = "Description"  
    parameter.SourceVersion = DataRowVersion.Current  
End Sub  
```  
  
 \[C\#\]  
  
```  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.SourceColumn = "Description";  
    parameter.SourceVersion = DataRowVersion.Current;  
 }  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">いずれかに、プロパティが設定されていない、 <see cref="T:System.Data.DataRowVersion" /> 値。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.System#ICloneable#Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.ICloneable.Clone" />」を参照してください。</summary>
        <returns>このインスタンスのコピーである新しい <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Data.OleDb.OleDbParameter> のインスタンスが <xref:System.ICloneable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OleDb.OleDbParameter.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" /> を表す文字列を取得します。</summary>
        <returns>
          <see cref="P:System.Data.OleDb.OleDbParameter.ParameterName" /> を表す文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OleDb.OleDbParameter.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの値を取得または設定します。</summary>
        <value>パラメーターの値である <see cref="T:System.Object" />。 既定値は NULL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 入力パラメーターの値がバインドされている、 <xref:System.Data.OleDb.OleDbCommand> は、サーバーに送信します。 完了時に出力パラメーターと戻り値パラメーターの値を設定、 <xref:System.Data.OleDb.OleDbCommand> 後、 <xref:System.Data.OleDb.OleDbDataReader> が閉じられます。  
  
 指定する必要があります、サーバーに null パラメーター値を送信するときに <xref:System.DBNull>, null でないです。 システムの null 値は、値のない空オブジェクトです。<xref:System.DBNull> は、null 値を表すために使用します。  
  
 アプリケーションでは、データベースの種類を指定する場合、プロバイダーがサーバーにデータを送信するとき、その型にバインドされた値が変換されます。 プロバイダーがサポートしている場合は、あらゆるタイプの値を変換しようとした場合、 <xref:System.IConvertible> インターフェイスです。 変換エラーには、指定した型の値と互換性がない場合があります。  
  
 両方の <xref:System.Data.OleDb.OleDbParameter.DbType%2A> と <xref:System.Data.OleDb.OleDbParameter.OleDbType%2A> 値を設定してプロパティを推論することができます。  
  
 <xref:System.Data.OleDb.OleDbParameter.Value%2A> の Update メソッドでプロパティが上書きされる <xref:System.Data.IDbDataAdapter>します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Data.OleDb.OleDbParameter> し、一部のプロパティを設定します。  
  
 \[Visual Basic\]  
  
```  
Public Sub CreateOleDbParameter()  
    Dim parameter As New OleDbParameter("Description", OleDbType.VarChar, 88)  
    parameter.Value = "garden hose"  
End Sub 'CreateOleDbParameter  
```  
  
 \[C\#\]  
  
```  
public void CreateOleDbParameter()   
 {  
    OleDbParameter parameter = new OleDbParameter("Description", OleDbType.VarChar, 88);  
    parameter.Value = "garden hose";  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Data.OleDb.OleDbParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>