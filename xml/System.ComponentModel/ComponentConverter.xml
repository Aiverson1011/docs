<Type Name="ComponentConverter" FullName="System.ComponentModel.ComponentConverter">
  <TypeSignature Language="C#" Value="public class ComponentConverter : System.ComponentModel.ReferenceConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentConverter extends System.ComponentModel.ReferenceConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ComponentConverter" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ReferenceConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>さまざまな表現でコンポーネントを変換する型コンバーターを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは実装 <xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A> と <xref:System.ComponentModel.ComponentConverter.GetProperties%2A> を通じてプロパティを返すことによって、 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> メソッドの <xref:System.ComponentModel.TypeDescriptor>です。  
  
 型コンバーターの詳細については、次を参照してください。、 <xref:System.ComponentModel.TypeConverter> 基本クラスと [How to: Implement a Type Converter](http://msdn.microsoft.com/ja-jp/90373a3f-d8c8-492d-841c-945d62393c56)です。  
  
> [!NOTE]
>  <xref:System.ComponentModel.ComponentConverter> のインスタンスは作成しないでください。 代わりに、 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> メソッドの <xref:System.ComponentModel.TypeDescriptor>です。 詳細については、例を参照してください、 <xref:System.ComponentModel.TypeConverter> 基本クラスです。  
  
 このコンバーターが変換を実装するオブジェクト <xref:System.ComponentModel.IComponent> し、\[プロパティ\] ウィンドウでそのプロパティを表示します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ComponentConverter.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> に関連付けるコンポーネント コンバーターの型を表します。</param>
        <summary>
          <see cref="T:System.ComponentModel.ComponentConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="value">
          <see cref="T:System.Object" /> のプロパティを取得するコンポーネントの種類を指定します。</param>
        <param name="attributes">型の配列 <see cref="T:System.Attribute" /> フィルターとして使用されます。</param>
        <summary>値パラメーターで指定されたコンポーネントの型のプロパティのコレクションを取得します。</summary>
        <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> 、コンポーネントで公開されているプロパティを持つまたは <see langword="null" /> プロパティがない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。 これは、 `null`, 、常に確認します。 また、コンテキスト オブジェクトのプロパティを返す `null`します。  
  
 `attributes` 配列は配列をフィルター処理に使用されます。`attributes` が混在していることができます <xref:System.Type> と <xref:System.Attribute> オブジェクトです。 フィルター処理は、次のルールによって定義されます。  
  
-   A <xref:System.Type> オブジェクトは、ワイルドカードとして扱われます; を持つ任意のプロパティが一致することが、 <xref:System.Type> 属性のセットにします。  
  
-   プロパティがない場合、 <xref:System.Attribute> 同じクラスのプロパティの対象から除外返される配列にします。  
  
-   属性のインスタンスである場合 <xref:System.Attribute>, プロパティは完全に一致する必要があります、または返される配列にされません。  
  
-   場合、 <xref:System.Attribute> インスタンスが指定されていると、既定のプロパティは、含まれることが、返された配列のインスタンスがない場合でも、 <xref:System.Attribute> プロパティにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>このオブジェクトが指定したコンテキストを使用してプロパティをサポートしているかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> このオブジェクトのプロパティを検索する呼び出す必要があります。 このメソッドが戻ることはありません <see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。 これは、 `null`, 、常に確認します。 また、コンテキスト オブジェクトのプロパティを返す `null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>