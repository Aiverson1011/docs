<Type Name="ISynchronizeInvoke" FullName="System.ComponentModel.ISynchronizeInvoke">
  <TypeSignature Language="C#" Value="public interface ISynchronizeInvoke" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizeInvoke" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ISynchronizeInvoke" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>同期または非同期では、デリゲートを実行する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.ISynchronizeInvoke> インターフェイスは、イベントの発生時のオブジェクト間の同期および非同期の通信を提供します。 このインターフェイスを実装するオブジェクトには、イベントが発生し、イベントに関するクエリに対応することを示す通知を受信できます。 この方法で、クライアントは必ず最初の完了に依存して、後続の要求を送信する前に、その 1 つの要求が処理されたことを確認できます。  
  
 <xref:System.ComponentModel.ISynchronizeInvoke> クラスには、プロセスを開始する 2 つの方法が用意されています。  
  
1.  使用して、非同期的に、 <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> メソッドです。<xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> プロセスを開始し、すぐに返します。 使用 <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> プロセスによって開始されるまで待機する <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> が完了するとします。  
  
2.  使用して同期的に、 <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> メソッドです。<xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> プロセス、完了するまでの待機、および改行を開始します。 使用 <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> 時点で、コントロールのメイン スレッドは呼び出し元の適切なスレッドへの呼び出しをマーシャ リングするスレッドと異なる。  
  
> [!NOTE]
>  <xref:System.Security.Permissions.HostProtectionAttribute> このクラスに適用される属性が次 <xref:System.Security.Permissions.HostProtectionAttribute.Resources%2A> プロパティ値: <xref:System.Security.Permissions.HostProtectionResource.Synchronization> &#124; <xref:System.Security.Permissions.HostProtectionResource.ExternalThreading>します。<xref:System.Security.Permissions.HostProtectionAttribute> は、デスクトップ アプリケーション \(通常、アイコンのダブルクリック、コマンドの入力、またはブラウザーへの URL の入力により起動されます\) には影響しません。 詳細については、<xref:System.Security.Permissions.HostProtectionAttribute> クラスのトピックまたは「[SQL Server Programming and Host Protection Attributes](http://msdn.microsoft.com/ja-jp/7dfa36b4-e773-4c75-a3ff-ff1af3ce4c4f)」を参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
    <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
  </Docs>
  <Members>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">A <see cref="T:System.Delegate" /> を同じ数およびに含まれている型のパラメーターを受け取るメソッドへ <c>args</c>します。</param>
        <param name="args">型の配列 <see cref="T:System.Object" /> 特定のメソッドに引数として渡す。 引数が必要ない場合は、<see langword="null" /> を指定できます。</param>
        <summary>このオブジェクトを作成したスレッドでデリゲートを非同期に実行します。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> このメソッドを呼び出して非同期操作を表すインターフェイスを開始します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `method` デリゲートを実行するスレッドではなく、オブジェクトを作成したスレッドで <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A> 呼び出されました。  
  
 デリゲートは、非同期的に呼び出され、このメソッドをすぐに返します。 このメソッドは、任意のスレッドから呼び出すことができます。 このメソッドを使用して開始されたプロセスからの戻り値が必要な場合 <xref:System.ComponentModel.ISynchronizeInvoke.EndInvoke%2A> 値を取得します。  
  
 同期的に、デリゲートを呼び出す必要がある場合、 <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> メソッド代わりにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> 非同期操作を表すインターフェイスを呼び出すことによって開始 <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />します。</param>
        <summary>呼び出して、処理するまで待機を開始 <see cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" /> 完了し、プロセスによって生成された値が返されます。</summary>
        <returns>
          <see cref="T:System.Object" /> を表す非同期の操作によって生成された戻り値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドによって表される非同期操作の戻り値の取得、 <xref:System.IAsyncResult> このインターフェイスによって渡されます。 非同期操作が完了していない場合、このメソッドは、結果が利用可能になるまで待機します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="method">A <see cref="T:System.Delegate" /> コントロールのスレッドのコンテキストでは、呼び出すメソッドを格納しています。</param>
        <param name="args">型の配列 <see cref="T:System.Object" /> を表す特定のメソッドに渡す引数。 引数が必要ない場合は、<see langword="null" /> を指定できます。</param>
        <summary>このオブジェクトを作成し、作成中のスレッドの呼び出しをマーシャ リングするスレッドで、デリゲートが同期的に実行します。</summary>
        <returns>
          <see cref="T:System.Object" /> 呼び出されるデリゲートからの戻り値を表すまたは <see langword="null" /> デリゲートに戻り値があるない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 異なり <xref:System.ComponentModel.ISynchronizeInvoke.BeginInvoke%2A>, 待機は、戻る前に、プロセスが完了するまで、このメソッドは同期的に動作します。 呼び出し元には、呼び出し中に発生した例外が反映されます。  
  
 適切なスレッドへの呼び出しをマーシャ リングするのに、別のスレッドからメソッドを呼び出したときに、このメソッドを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出し元が呼び出す必要があるかどうかを示す値を取得 <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" /> このインターフェイスを実装するオブジェクトを呼び出すとき。</summary>
        <value>
          <see langword="true" /> 呼び出し元が呼び出す必要がある場合 <see cref="M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])" />。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、呼び出し元が呼び出す必要があるかどうかを決定 <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> ときに、このインターフェイスを実装するオブジェクトへのメソッド呼び出しを作成します。 このようなオブジェクトは、特定のスレッドにバインドされ、スレッド セーフではありません。 使用する必要があります、別のスレッドからメソッドを呼び出す場合、 <xref:System.ComponentModel.ISynchronizeInvoke.Invoke%2A> 適切なスレッドへの呼び出しをマーシャ リングするメソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>