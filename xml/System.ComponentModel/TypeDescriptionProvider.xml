<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>追加のメタデータを <see cref="T:System.ComponentModel.TypeDescriptor" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.TypeDescriptionProvider> クラスは、追加、変更、または非表示にする属性、プロパティ、およびイベントなどの特性によって型またはオブジェクトに関連付けられている種類の情報を動的に拡張します。 単一のメタデータを提供する型説明プロバイダー クラスを複数できます <xref:System.ComponentModel.TypeDescriptor>します。  
  
 関連付けるには 2 つの方法がある、 <xref:System.ComponentModel.TypeDescriptionProvider> で、 <xref:System.ComponentModel.TypeDescriptor>:  
  
-   ときに、ターゲット クラス割り当てることができる、適切なデザイン時に <xref:System.ComponentModel.TypeDescriptionProviderAttribute> タグ。  
  
-   実行時に、1 台の <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> のメソッド、 <xref:System.ComponentModel.TypeDescriptor> クラスを呼び出すことができます。 これらのオーバー ロードされたメソッドは、ターゲット オブジェクトまたはそのクラス型のいずれかが必要です。  
  
 <xref:System.ComponentModel.TypeDescriptionProvider> クラスは構築時に指定された、同じ型の親オブジェクトに依存します。 これによりから派生するクラス <xref:System.ComponentModel.CustomTypeDescriptor> 選択的にメソッドをオーバーライドします。  
  
 インスタンスを <xref:System.ComponentModel.TypeDescriptionProvider> はパフォーマンスに関する情報をカスタム型の影響を最小限に抑え、要求に基づいて構築されるだけです。  
  
 このクラスは継承できません。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class. Do not write insecure code by assuming the caller is trusted. Assume instead that callers might create instances of your type in partial trust.</para>
    </block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、その他の呼び出しに相当 <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> コンス トラクター パラメーター値を持つ `null`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent">親の種類の説明のプロバイダー。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> クラスの親の種類の説明のプロバイダーを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `parent` パラメーターは `null`, すべて <xref:System.ComponentModel.TypeDescriptionProvider> メソッドでは、既定値を返します。 それ以外の場合、すべて <xref:System.ComponentModel.TypeDescriptionProvider> メソッドのメソッドに代行させるは `parent`です。  
  
 次の表に、既定の戻り値の <xref:System.ComponentModel.TypeDescriptionProvider> メソッドです。  
  
|メソッド|既定の戻り値|  
|----------|------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|新しく作成されたオブジェクトを呼び出すことによって、 <xref:System.Activator.CreateInstance%2A> メソッドです。|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|既定のインスタンス、 <xref:System.ComponentModel.CustomTypeDescriptor> クラスです。|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|既定のインスタンス、 <xref:System.ComponentModel.CustomTypeDescriptor> クラスです。|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|`objectType` 最初のパラメーターです。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider">省略可能なサービス プロバイダーの場合。</param>
        <param name="objectType">作成するオブジェクトの型。 このパラメーターは、決して <see langword="null" />します。</param>
        <param name="argTypes">省略可能なオブジェクトのコンス トラクターに渡されるパラメーターの型を表す型の配列。 この配列は、 <see langword="null" /> または長さ 0 のです。</param>
        <param name="args">オブジェクトのコンストラクターに渡すパラメーターの値の省略可能な配列。</param>
        <summary>別のデータ型の代わりに使用できるオブジェクトを作成します。</summary>
        <returns>代替 <see cref="T:System.Object" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [CreateInstance メソッド \(IServiceProvider, Type, Type\<xref:System.IServiceProvider> によって指定された、 `provider` 内で渡されるパラメーター、 [CreateInstance メソッド \(IServiceProvider, Type, Type\<xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=fullName> のメソッド、 [CreateInstance メソッド \(IServiceProvider, Type, Type\<xref:System.ComponentModel.TypeDescriptor> クラスです。 場合 `provider` は `null`, 、サービス プロバイダーは、作成呼び出しに関する追加のコンテキストを取得する型説明のプロバイダーで使用できます。  
  
 [CreateInstance メソッド \(IServiceProvider, Type, Type\<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> メソッドは `virtual` 、既定では、結果を返す、 [CreateInstance メソッド \(IServiceProvider, Type, Type\<xref:System.Activator.CreateInstance%2A?displayProperty=fullName> メソッド場合 `provider` は `null`です。 場合 `provider` は `null`, 、このメソッドを呼び出しますが、 [CreateInstance メソッド \(IServiceProvider, Type, Type\<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> 親プロバイダーのメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">キャッシュを取得する対象のオブジェクト。</param>
        <summary>としてアクセスされる、オブジェクトごとのキャッシュを取得、 <see cref="T:System.Collections.IDictionary" /> キー\/値ペアのです。</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> 指定されたオブジェクトは、キャッシュをサポートしている場合、それ以外の場合 <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.ComponentModel.TypeDescriptor> メタデータのコレクションで複雑な操作を実行する必要があります。 型は、ドメインの有効期間にアンロードされないため、 <xref:System.ComponentModel.TypeDescriptor> クラスの型に基づいてこれらの操作の結果が自動的にキャッシュします。 ただし、一部の操作は、ライブ オブジェクトのインスタンスを使用します。 内でこれらの操作をキャッシュすることはできません、 <xref:System.ComponentModel.TypeDescriptor> クラスにキャッシュされないため、オブジェクトがガベージ コレクトします。 代わりに、 <xref:System.ComponentModel.TypeDescriptor> としてアクセスされる、オブジェクトごとのキャッシュでは、クラス、 <xref:System.Collections.IDictionary> オブジェクト上に存在する、キー\/値ペアのです。<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> メソッドは、このキャッシュのインスタンスを返します。<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> メソッドから返される `null` オブジェクトのサポートされているキャッシュが存在しない場合。  
  
 既定値 <xref:System.ComponentModel.TypeDescriptionProvider> で使用される <xref:System.ComponentModel.TypeDescriptor> して、配置のコンポーネントを実装するかどうかは、オブジェクトを調べて、 <xref:System.ComponentModel.Design.IDictionaryService> インターフェイスです。 オブジェクトがある場合は、オブジェクトのキャッシュを格納するディクショナリ サービスを使用します。 それ以外の場合、オブジェクトが返されます `null`します。 その他の型の説明のプロバイダーは、独自の実装を提供できます。 たとえば、依存関係オブジェクトには型のプロパティが接続できるだけ <xref:System.Collections.IDictionary>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">拡張型記述子を取得する対象のオブジェクト。</param>
        <summary>指定したオブジェクトの拡張のカスタム型記述子を取得します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> オブジェクトの拡張されたメタデータを提供することができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 拡張型記述子は、プランの他のオブジェクトがこのオブジェクトに追加のプロパティが、オブジェクトが実際に定義されているカスタム型記述子です。 たとえば、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] コンポーネント モデルでは、オブジェクトを実装する、 <xref:System.ComponentModel.IExtenderProvider> インターフェイスは、同じ論理コンテナーに格納されている他のオブジェクトにプロパティを関連付けることができます。 オーバー ロードされた <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> メソッドには、これらの余分な拡張プロパティを提供する型記述子は返しません。<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> メソッドは、これらの拡張プロパティのセットを返します。<xref:System.ComponentModel.TypeDescriptor> これら 2 つのプロパティのコレクションの結果を自動的にマージされます。 中に、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] コンポーネント モデルには、拡張プロパティのみがサポートしている <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> 拡張属性だけでなく、イベントの種類の説明のプロバイダーがサポートされている場合に使用できます。  
  
 <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> `virtual` し、既定では、親プロバイダーが渡されなかった場合は、空の結果を返すカスタムの型記述子を返します。 このメソッドが親のプロバイダーを呼び出す親プロバイダーが渡された場合 <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">拡張プロバイダーを取得するオブジェクト。</param>
        <summary>指定したオブジェクトの拡張プロバイダーを取得します。</summary>
        <returns>配列の拡張プロバイダーの <paramref name="instance" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">指定したコンポーネント。</param>
        <summary>指定したコンポーネントの名前を取得または <see langword="null" /> コンポーネントが名前を持たない場合です。</summary>
        <returns>指定したコンポーネントの名前。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="component" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">型のインスタンス \(することはできません <see langword="null" />\)。</param>
        <summary>指定したオブジェクトに対して通常のリフレクションを実行します。</summary>
        <returns>このリフレクションの種類 <paramref name="instance" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> メソッドは、下位のバージョンの <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> メソッドです。 カスタムの型記述子が見つからないオブジェクトの場合 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> を呼び出してオブジェクトに対して通常のリフレクションを実行します。  
  
 型の代わりにインスタンスを使用する型記述子のメンバーを呼び出した場合は、このメソッドのオーバー ロードを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> は <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">取得する対象のオブジェクトの種類、 <see cref="T:System.Reflection.IReflect" />です。</param>
        <summary>型に対して通常のリフレクションを実行します。</summary>
        <returns>このリフレクションの種類 <paramref name="objectType" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> メソッドは、下位のバージョンの <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> メソッドです。 カスタムの型記述子が見つからないオブジェクトの場合 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> を呼び出してオブジェクトに対して通常のリフレクションを実行します。  
  
 インスタンスの代わりに型を使用する型記述子のメンバーを呼び出した場合は、このメソッドのオーバー ロードを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="objectType" /> は <see langword="null" /> です。</exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">取得する対象のオブジェクトの種類、 <see cref="T:System.Reflection.IReflect" />です。</param>
        <param name="instance">型のインスタンス。<see langword="null" /> の可能性があります。</param>
        <summary>所定の型指定されたオブジェクトに対して通常のリフレクションを実行します。</summary>
        <returns>このリフレクションの種類 <paramref name="objectType" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> メソッドは、下位のバージョンの <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> メソッドです。 カスタムの型記述子が見つからないオブジェクトの場合 <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> を呼び出してオブジェクトに対して通常のリフレクションを実行します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed. If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</para>
        </block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="reflectionType">そのランタイムの対応に変換する型。</param>
        <summary>ランタイム型リフレクション型に変換します。</summary>
        <returns>A <see cref="T:System.Type" /> を表すランタイムと同等の <paramref name="reflectionType" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> メソッドの逆、<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> ランタイム型にリフレクション型に変換します。 使用して、 <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> メソッドを使用するよりも好ましい、 <xref:System.Type.UnderlyingSystemType%2A> プロパティは、ランタイム型を取得する以前のバージョンで使用されていました。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reflectionType" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">型のインスタンス。 できる <see langword="null" /> にインスタンスが渡されなかった場合、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</param>
        <summary>指定したオブジェクトのカスタムの型記述子を取得します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 型のメタデータを提供することができます。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> は <see langword="null" /> です。</exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">型記述子を取得する対象のオブジェクトの型。</param>
        <summary>指定された型のカスタムの型記述子を取得します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 型のメタデータを提供することができます。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType">型記述子を取得する対象のオブジェクトの型。</param>
        <param name="instance">型のインスタンス。 できる <see langword="null" /> にインスタンスが渡されなかった場合、 <see cref="T:System.ComponentModel.TypeDescriptor" />です。</param>
        <summary>指定した型およびオブジェクトのカスタムの型記述子を取得します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> 型のメタデータを提供することができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、プロトタイプは `virtual` し、既定では、親プロバイダーが渡されなかった場合に空の記述子を返します。 このメソッドが親のプロバイダーを呼び出す親プロバイダーが渡された場合 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object. If the method does not provide type information for the object, it should return <see langword="null" />.</para>
        </block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">互換性のためにテストする型。</param>
        <summary>指定した型が型の説明と型説明のプロバイダーのチェーンと互換性のあるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="type" /> 型の説明と型説明のプロバイダーのチェーンと互換性のある以外は、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された型またはオブジェクトのカスタム型記述子を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトに対して通常のリフレクションを実行します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>