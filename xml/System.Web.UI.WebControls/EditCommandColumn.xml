<Type Name="EditCommandColumn" FullName="System.Web.UI.WebControls.EditCommandColumn">
  <TypeSignature Language="C#" Value="public class EditCommandColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditCommandColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EditCommandColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>各行のデータ項目を編集するための <see langword="Edit" /> ボタンを格納する <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの特別な列の型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.EditCommandColumn> class to create a special column for the <xref:System.Web.UI.WebControls.DataGrid> control that contains the **languageKeyword tag is not supported!!!!**  
, **languageKeyword tag is not supported!!!!**  
, and **languageKeyword tag is not supported!!!!**  
 buttons for each data row in the grid. These buttons allow you to edit the values of a row in the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
 If no row is selected, an **languageKeyword tag is not supported!!!!**  
 button displays in the <xref:System.Web.UI.WebControls.EditCommandColumn> object for each data row in the <xref:System.Web.UI.WebControls.DataGrid> control. When the **languageKeyword tag is not supported!!!!**  
 button for an item is clicked, the <xref:System.Web.UI.WebControls.DataGrid.EditCommand> event is raised and the **languageKeyword tag is not supported!!!!**  
 button is replaced with the **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 buttons. You need to provide code to handle the <xref:System.Web.UI.WebControls.DataGrid.EditCommand> event. A typical event handler sets the <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> property to the selected row, and then rebinds the data to the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
> [!NOTE]
>  You must provide values for the <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A>, <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A>, and <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> properties. Otherwise, the associated buttons will not appear in the <xref:System.Web.UI.WebControls.EditCommandColumn>.  
  
 The buttons in the <xref:System.Web.UI.WebControls.EditCommandColumn> can be set to display as hyperlinks or push buttons by setting the <xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A> property.  
  
 Clicking the **languageKeyword tag is not supported!!!!**  
 or **languageKeyword tag is not supported!!!!**  
 button raises the <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> or <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> event, respectively. You need to provide code to handle these events.  
  
 A typical handler for the <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> event updates the data, sets the <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> property to `-1` \(to deselect the item\), and then rebinds the data to the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
 A typical handler for the <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> event sets the <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> property to `-1` \(to deselect the item\), and then rebinds the data to the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
> [!CAUTION]
>  The <xref:System.Web.UI.WebControls.EditCommandColumn> object can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. You can use validation controls to verify user input before displaying the input text in a <xref:System.Web.UI.WebControls.DataGrid> control.  ASP.NET provides an input request validation feature to block script and HTML in user input. For more information, see [Securing Standard Controls](http://msdn.microsoft.com/ja-jp/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](http://msdn.microsoft.com/ja-jp/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), and [Validating User Input in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 By default, page validation is performed when an **languageKeyword tag is not supported!!!!**  
 button in the  <xref:System.Web.UI.WebControls.EditCommandColumn> control is clicked. Page validation determines whether the input controls that are associated with a validation control on the page all pass the validation rules that are specified by the validation control. To prevent page validation from occurring, set the <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> property to **languageKeyword tag is not supported!!!!**  
.  
  
   
  
## 例  
 The following code example demonstrates how to add an <xref:System.Web.UI.WebControls.EditCommandColumn> object to a <xref:System.Web.UI.WebControls.DataGrid> control.  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">for operating in a hosted environment. Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Permission value: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="P:System.Web.UI.WebControls.DataGrid.EditItemIndex" />
    <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
    <altmember cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
    <altmember cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditCommandColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EditCommandColumn.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.EditCommandColumn> class.  
  
   
  
## 例  
 The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.EditCommandColumn> class.  
  
 [!code-csharp[Classic EditCommandColumn.EditCommandColumn Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic EditCommandColumn.EditCommandColumn Example/CS/source.cs#1)]
 [!code-vb[Classic EditCommandColumn.EditCommandColumn Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic EditCommandColumn.EditCommandColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonColumnType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonColumnType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または列のボタンの種類を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 値のいずれか。 既定値は <see langword="LinkButton" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A> プロパティ列のボタンは、プッシュ ボタンやハイパーリンクとして表示するかどうかを指定します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A> プロパティを表示、 `Edit` コマンドとしてプッシュ ボタンのボタンです。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したボタンの種類が、 <see cref="T:System.Web.UI.WebControls.ButtonColumnType" /> 値。</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelText">
      <MemberSignature Language="C#" Value="public virtual string CancelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.CancelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示するテキスト、 <see langword="Cancel" /> コマンド ボタンで、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />です。</summary>
        <value>キャプションを表示する、 <see langword="Cancel" /> コマンド ボタンで、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A> プロパティを表示するテキストを指定する、 `Cancel` コマンド ボタンで、 <xref:System.Web.UI.WebControls.EditCommandColumn>です。  
  
> [!NOTE]
>  値を指定する必要があります、 <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A> プロパティです。 それ以外の場合、 `Cancel` にコマンド ボタンは表示されません、 <xref:System.Web.UI.WebControls.EditCommandColumn>です。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A> のカスタム テキストを提供するプロパティ、 `Cancel` コマンド ボタンをクリックします。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.EditText" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.UpdateText" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証を実行するかどうかを示す値を設定するときに、 <see langword="Update" /> ボタンをクリックして、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> オブジェクトがクリックされました。</summary>
        <value>
          <see langword="true" /> 検証を実行する場合と、 <see langword="Update" /> ボタンをクリックして、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> がクリックされた場合、それ以外の場合 <see langword="false" />します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、ページの検証が実行されるときに、 `Update` ボタンをクリックして、 <xref:System.Web.UI.WebControls.EditCommandColumn> コントロールがクリックされました。 ページの検証では、検証コントロールによって指定されている検証規則を渡すすべてのページで、検証に関連付けられている入力コントロールを制御するかどうかを決定します。  
  
 指定したり、クライアントとサーバーの両方で検証を実行するかどうかを決定するときに、 `Update` ボタンをクリックして、 <xref:System.Web.UI.WebControls.EditCommandColumn> を使用してコントロールがクリックされた、 <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> プロパティです。 検証が実行されているを防ぐためには、設定、 <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> プロパティを `false`します。  
  
 ときの値、 <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> にプロパティが設定されている `true`, 、使用することも、 <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> の検証グループの名前を指定するプロパティ、 `Update` ボタンをクリックして、 <xref:System.Web.UI.WebControls.EditCommandColumn> オブジェクトが原因で検証します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="EditText">
      <MemberSignature Language="C#" Value="public virtual string EditText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.EditText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示するテキスト、 <see langword="Edit" /> ボタンをクリックして、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />です。</summary>
        <value>キャプションを表示する、 <see langword="Edit" /> ボタンをクリックして、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A> プロパティを表示するテキストを指定する、 `Edit` ボタンをクリックして、 <xref:System.Web.UI.WebControls.EditCommandColumn> コントロールです。  
  
> [!NOTE]
>  値を指定する必要があります、 <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A> プロパティです。 それ以外の場合、 `Edit` にボタンが表示されませんが、 <xref:System.Web.UI.WebControls.EditCommandColumn>です。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例を使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A> のカスタム テキストを提供するプロパティ、 `Edit` \] ボタンをクリックします。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.CancelText" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.UpdateText" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.TableCell" /> 初期化するためにセルに関する情報を格納します。</param>
        <param name="columnIndex">セルが存在する列番号。</param>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListItemType" /> 値のいずれか。</param>
        <summary>列内のセルを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateText">
      <MemberSignature Language="C#" Value="public virtual string UpdateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.UpdateText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示するテキスト、 <see langword="Update" /> コマンド ボタンで、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />です。</summary>
        <value>キャプションを表示する、 <see langword="Update" /> コマンド ボタンで、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> プロパティを表示するテキストを指定する、 `Update` コマンド ボタンで、 <xref:System.Web.UI.WebControls.EditCommandColumn>です。  
  
> [!NOTE]
>  値を指定する必要があります、 <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> プロパティです。 それ以外の場合、 `Update` にコマンド ボタンは表示されません、 <xref:System.Web.UI.WebControls.EditCommandColumn>です。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> のカスタム テキストを提供するプロパティ、 `Update` コマンド ボタンをクリックします。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.CancelText" />
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.EditText" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の検証コントロールのグループを <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> オブジェクトは、サーバーへのポストバック時に検証を実行します。</summary>
        <value>検証コントロールの更新ボタンのグループ、 <see cref="T:System.Web.UI.WebControls.EditCommandColumn" /> が原因で、サーバーへのポストバック時に検証します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループとは無関係に検証できます。 使用して、 <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> プロパティを更新\] ボタンの検証グループの名前を指定する、 <xref:System.Web.UI.WebControls.EditCommandColumn> オブジェクトは、サーバーへのポストバック時に検証を実行します。  
  
 <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> プロパティは、有効される場合にのみの値、 <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> にプロパティが設定されている `true`します。 値を指定すると、 <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> プロパティには、指定したグループの一部であるコントロールが検証された検証のみと更新プログラムのボタン、 <xref:System.Web.UI.WebControls.EditCommandColumn> オブジェクトがサーバーにポストバックします。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> プロパティおよび <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> にプロパティが設定されている `true`, 、検証グループに割り当てられていないページ上のすべての検証コントロールが検証されますと更新プログラムのボタン、 <xref:System.Web.UI.WebControls.EditCommandColumn> オブジェクトがサーバーにポストバックします。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.EditCommandColumn.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>