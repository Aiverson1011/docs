<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>目次などの階層データをツリー構造で表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [ノード](#nodes)  
  
-   [静的なデータ](#static_data)  
  
-   [データへのバインド](#binding_to_data)  
  
-   [動的なノード](#dynamic_node_population)  
  
-   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [スクロール](#scrolling)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.TreeView> コントロールはツリー構造でのコンテンツまたはファイルのディレクトリのテーブルなどの階層データの表示に使用され、次の機能をサポートしています。  
  
-   データ バインディングは、XML、表形式、またはリレーショナル データにバインドするコントロールのノードです。  
  
-   サイト ナビゲーションの統合により、 <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールです。  
  
-   プレーン テキストまたはハイパーリンクとして表示可能なノードのテキスト。  
  
-   プログラムによるアクセスを <xref:System.Web.UI.WebControls.TreeView> オブジェクト モデル ツリーを作成、ノードを作成、プロパティを動的に設定します。  
  
-   クライアント側のノードの読み込み \(サポートされているブラウザー\)。  
  
-   各ノードの横にあるチェック ボックスを表示する権限です。  
  
-   ユーザー定義のテーマを使用したカスタマイズ可能な外観は、イメージ、およびスタイルします。  
  
    > [!NOTE]
    >  <xref:System.Web.UI.WebControls.TreeView> コントロールが内部で使用するように設計、 <xref:System.Web.UI.UpdatePanel> 制御される場合にのみ <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> に設定されている `true`します。<xref:System.Web.UI.UpdatePanel> コントロールは、ポストバック時にページ全体が更新ではなくページの選択した領域の更新に使用されます。 詳細については、[UpdatePanel Control Overview](http://msdn.microsoft.com/ja-jp/29a2265d-9674-4c19-b70e-e5560ee9689a) および [Partial\-Page Rendering Overview](http://msdn.microsoft.com/ja-jp/5c12736d-d9e9-464a-9388-3fe0f9f49e49) を参照してください。  
  
<a name="nodes"></a>   
## \[ノード\]  
 <xref:System.Web.UI.WebControls.TreeView> ノードのコントロールで構成されます。 ツリー内の各エントリし、呼ばれ、ノードによって表される、 <xref:System.Web.UI.WebControls.TreeNode> オブジェクトです。 ノード型の定義は次のとおりです。  
  
-   他のノードを含むノードと呼ばれる、 *親ノード*します。  
  
-   別のノードに格納されているノードと呼ばれる、 *子ノード*します。  
  
-   子を持たないノードと呼ばれる、 *リーフ ノード*します。  
  
-   その他のノードに含まれていないが、その他のすべてのノードの先祖ノードが、 *ルート ノード*します。  
  
 ノードが親と子がルートの親の両方になることができ、リーフ ノードは互いに排他的です。 ノードの表示と動作のプロパティは、ノードがルート、子、またはリーフ ノードかどうかによって決まります。  
  
 一般的なツリー構造になります。 1 つだけのルート ノードですが、 <xref:System.Web.UI.WebControls.TreeView> コントロールでは、複数のルート ノードをツリー構造に追加することができます。 これは、製品カテゴリの一覧に示すように、単一のルート ノードを表示せずに項目の一覧を表示する場合に便利です。  
  
 各ノードには、 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> プロパティおよび <xref:System.Web.UI.WebControls.TreeNode.Value%2A> プロパティです。 値、 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> でプロパティの表示、 <xref:System.Web.UI.WebControls.TreeView>, 、中に、 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> ノードに関連付けられているポストバック イベントに渡されるデータなど、ノードに関するその他のデータを格納するプロパティを使用します。  
  
 ノードが 2 つのモードのいずれかになります。 選択モードとナビゲーション モードです。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにするには、設定、 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 、空の文字列以外の値をノードのプロパティ \(""\) です。 ノードを選択モードにする、 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティ ノードへの空の文字列 \(""\) です。  
  
> [!NOTE]
>  一部のインターネット ブラウザーのパフォーマンスに影響する制限がある、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 たとえば、Microsoft Internet Explorer 6.0 では、ポストバック 2067年文字の URL 文字の制限があります。 ノードの URL の文字数が数よりも大きい場合は、そのノードの展開は失敗し、例外はスローされません。  
  
<a name="static_data"></a>   
## 静的なデータ  
 最も単純なデータ モデル、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、静的データです。 宣言型構文を使用して静的データを表示するには、まずを開いたり閉じたり `<Nodes>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 次に、ツリー構造を入れ子により作成 `<asp:TreeNode>` 開始タグと終了の間で要素 `<Nodes>` タグ。 各 `<asp:TreeNode>` 要素ツリーのノードを表すありにマップする <xref:System.Web.UI.WebControls.TreeNode> オブジェクトです。 属性を設定して各ノードのプロパティを設定することができます、 `<asp:TreeNode>` 要素。 子ノードを作成するには、追加入れ子 `<asp:TreeNode>` 開始タグと終了の間で要素 `<asp:TreeNode>` 親ノードのタグ。  
  
<a name="binding_to_data"></a>   
## データへのバインド  
 <xref:System.Web.UI.WebControls.TreeView> データにコントロールをバインドすることもできます。 2 つのメソッドのいずれかを使用して、バインドすることができます、 <xref:System.Web.UI.WebControls.TreeView> 適切なデータ ソースの種類を制御します。  
  
-   <xref:System.Web.UI.WebControls.TreeView> コントロールを実装する任意のデータ ソース コントロールを使用できます、 <xref:System.Web.UI.IHierarchicalDataSource> インターフェイスなど、 <xref:System.Web.UI.WebControls.XmlDataSource> コントロールまたは <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールです。 データ ソース コントロールにバインドする、 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.TreeView> への制御、 <xref:System.Web.UI.Control.ID%2A> データ ソース コントロールの値。<xref:System.Web.UI.WebControls.TreeView> コントロールが自動的に指定されたデータ ソース コントロールにバインドします。 これは、優先データにバインドする方法です。  
  
-   <xref:System.Web.UI.WebControls.TreeView> にコントロールをバインドすることも、 <xref:System.Xml.XmlDocument> オブジェクトまたは <xref:System.Data.DataSet> リレーションを持つオブジェクト。 これらのデータ ソースのいずれかにバインドするには、設定、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> のプロパティ、 <xref:System.Web.UI.WebControls.TreeView> データ ソースを制御し、呼び出す、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドです。  
  
 ノードの各データ項目が複数のプロパティ持つ XML 要素属性がいくつか\) などにはが含まれているデータ ソースにバインドがによって返される値に表示される状況、 `ToString` 既定では、データ項目のメソッドです。 XML 要素の場合は、ノードは、要素名、ツリーの基になる構造を示していますが、あまり役に立ちませんそれ以外の場合を表示します。 ノードを特定のデータ項目のプロパティにバインドするにを使用してツリー ノードのバインディングを指定することによって、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> コレクションです。<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> コレクションに含まれる `TreeNodeBinding` データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト。 ノードに表示するには、バインドとデータ項目のプロパティの条件を指定できます。 ツリー ノードのバインディングの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TreeNodeBinding>します。  
  
> [!IMPORTANT]
>  悪意のあるユーザーはコールバック要求を作成して、データのノードを取得する、 <xref:System.Web.UI.WebControls.TreeView> コントロールをページの開発者は表示されません。 したがって、データ ソースでデータのセキュリティを実装する必要があります。 使用しないでください、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> プロパティ データを非表示にします。  
  
<a name="dynamic_node_population"></a>   
## 動的なノード  
 場合によっては、データ ソースに返されるデータが多すぎるため、または表示するデータは、実行時に取得する情報に依存するために、ツリー構造を静的に定義するは実用的ではありません。 このため、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、動的なノードをサポートしています。 ときに、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> にノードのプロパティが設定されている `true`, 、そのノードが、ノードを展開するときに、実行時設定を取得します。 ノードを動的に設定するには、ノードを作成するロジックを含むイベント処理メソッドを定義する必要があります、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> イベントです。  
  
 コールバック スクリプトをサポートするブラウザーでは、クライアント側のも利用できます。 \(これを含む Internet Explorer 5.5 とそれ以降、およびその他のブラウザー\) クライアント側のノード、 <xref:System.Web.UI.WebControls.TreeView> ユーザー、サーバーへのラウンド トリップを必要とせず、ノードを展開すると、クライアント スクリプトを使用してノードを設定するとします。 クライアント側のノードの作成の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>します。  
  
<a name="customizing_the_user_interface"></a>   
## ユーザー インターフェイスのカスタマイズ  
 外観をカスタマイズする方法はたくさんあります、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 最初に、それぞれのノード型 \(フォント サイズや色\) などの別のスタイルを指定できます。  
  
 コントロールの外観をカスタマイズするカスケード スタイル シート \(CSS\) を使用する場合は、インライン スタイルまたは個別の CSS ファイルのいずれかを使用します。 インライン スタイルと独立した CSS ファイルの両方を使用して予期しない結果が発生する可能性があります。 コントロールのスタイル シートの使用に関する詳細については、次を参照してください。 [ASP.NET Web Server Controls and CSS Styles](http://msdn.microsoft.com/ja-jp/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)します。  
  
 次の表は、使用可能なノードのスタイルを示します。  
  
|ノードのスタイル プロパティ|説明|  
|--------------------|--------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|マウス ポインターを置いたときにノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|リーフ ノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|ノードの既定のスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|親ノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|ルート ノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|選択したノードのスタイル設定。|  
  
 使用して、ツリー内の特定の深さでノードのスタイルを制御することも、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクションです。 コレクション内の最初のスタイルは、ツリー内の 1 つのレベルのノードのスタイルに対応します。 コレクション内の 2 番目のスタイルは、ツリーで 2 番目のレベルのノードのスタイルに対応します。 これは最も頻繁に使用コンテンツ スタイルのナビゲーション メニューのテーブルを生成する特定の深さのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要があります。  
  
> [!NOTE]
>  特定の深さレベルを使用して、スタイルが定義されているかどうか、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクション、スタイルが、ルート、親、またはその深さにあるノードのリーフ ノードのスタイルの設定をオーバーライドします。  
  
 表示されるイメージをカスタマイズするのには、コントロールの外観を変更する方法、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 次の表に示すようにプロパティを設定して、独自のカスタム コントロールのさまざまな部分のイメージのセットを指定できます。  
  
|イメージのプロパティ|説明|  
|----------------|--------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|折りたたみ可能なノード インジケーターに表示されるイメージの URL。 このイメージは、通常、マイナス記号 \(\-\) です。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノード インジケーターに表示されるイメージの URL。 このイメージは、通常、プラス記号 \(\+\) です。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|親ノードの子ノードを接続するために使用する線のイメージを含むフォルダーの URL。<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> プロパティ設定することも必要があります。 `true` が影響し、このプロパティのです。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開なノード インジケーターに表示されるイメージの URL。|  
  
> [!NOTE]
>  すべてのイメージ プロパティをカスタマイズする必要はありません。 イメージ プロパティが明示的に設定されていない場合は、組み込みの既定のイメージが使用します。  
  
 <xref:System.Web.UI.WebControls.TreeView> コントロールもできるため、ノードの横にあるチェック ボックスを表示します。 ときに、 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティが以外の値に設定されて `TreeNodeTypes.None`, 、指定したノードの種類の横にあるチェック ボックスが表示されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティを設定して、ビットごとの組み合わせを <xref:System.Web.UI.WebControls.TreeNodeTypes> 列挙メンバー値。  
  
 ページがサーバーにポストされるたびに、 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> コレクションは選択したノードが設定されます。 使用することができます\] チェック ボックスが表示されるときに、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> サーバーへのポスト間で、チェック ボックスをオンの状態が変更されるたびに、カスタムのルーチンを実行するイベントです。  
  
<a name="events"></a>   
## イベント  
 <xref:System.Web.UI.WebControls.TreeView> コントロールには、プログラム可能ないくつかのイベントが用意されています。 これにより、イベントが発生するたびに、カスタムのルーチンを実行できます。 次の表に、イベントでサポートされている、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|発生したときのチェック ボックス、 <xref:System.Web.UI.WebControls.TreeView> コントロールがサーバーへのポスト間で状態を変更します。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|ノードが選択したときに発生、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|内のノードが展開されたときに発生する、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|内のノードが折りたたまれているときに発生、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|特定のノードの場合に発生、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> プロパティに設定 `true` で展開されて、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|内のノードにデータ項目がバインドされると発生、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。|  
  
<a name="scrolling"></a>   
## スクロール  
 <xref:System.Web.UI.WebControls.TreeView> コントロールに組み込まれているスクロールがありません。 スクロールを追加するには、配置、 <xref:System.Web.UI.WebControls.TreeView> の制御、 <xref:System.Web.UI.WebControls.Panel> を制御しにスクロール バーを追加、 <xref:System.Web.UI.WebControls.Panel> コントロールです。 詳細については、「[Panel Web Server Control Overview](http://msdn.microsoft.com/ja-jp/127b61ed-87f2-46f4-92a3-785166e7245b)」を参照してください。  
  
<a name="accessibility"></a>   
## ユーザー補助  
 このコントロールの既定で表示されるマークアップは、ユーザー補助の標準に準拠していません可能性があります。 このコントロールのユーザー補助のサポートに関する詳細については、「 [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)します。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## 例  
 このセクションでは、7 つのコード例を示します。  
  
-   最初のコード例では、2 つ目のコード例については、フレームを設定する方法を示します。  
  
-   2 番目のコード例は、宣言構文を使用して、静的データを表示する方法を示します、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
-   3 番目のコード例をバインドする方法を示しています、 <xref:System.Web.UI.WebControls.TreeView> XML データ ソースを制御します。  
  
-   4 番目のコード例では、3 番目のコード例のサンプル XML データを提供します。  
  
-   5 番目のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.TreeView> にバインドすることによってサイト ナビゲーションの制御、 <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールです。  
  
-   6 番目のコード例は、5 番目のコード例については、サンプル サイト マップ データを提供します。  
  
-   7 番目のコード例に示します内のノードを設定する方法について、 <xref:System.Web.UI.WebControls.TreeView> クライアントからのコントロールです。  
  
 次のコード例では、次のコード例のフレームを設定する方法を示します。  
  
 [!code-csharp[TreeViewFrameSet\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-vb[TreeViewFrameSet\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 次のコード例では、静的データを表示する宣言構文を使用して、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 この例は、コンテンツのテーブルを表示する前の例のフレーム セット内で使用されます。  
  
 [!code-csharp[TreeViewFrameExample\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-vb[TreeViewFrameExample\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 次のコード例では、バインド、 <xref:System.Web.UI.WebControls.TreeView> XML データ ソースを制御します。 正常に動作するこの例では、Book.xml という名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。  
  
 [!code-csharp[TreeViewXml\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-vb[TreeViewXml\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView> にバインドすることによってサイト ナビゲーションの制御、 <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールです。 正常に動作するこの例では、Web.sitemap という名前のファイルにこのコード例の後、サンプル サイト マップ データをコピーする必要があります。  
  
 [!code-csharp[TreeViewAutoGenerateBindings\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-vb[TreeViewAutoGenerateBindings\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル サイト マップ データを提供します。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 次のコード例でノードを作成、 <xref:System.Web.UI.WebControls.TreeView> クライアントから管理します。 クライアント側のノードの作成を有効にすると、ノードが設定されます動的にクライアントで、サーバーにポストバックする必要はありません。  
  
 [!code-csharp[TreeViewPopulateNodesFromClient\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-vb[TreeViewPopulateNodesFromClient\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TreeView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> 作成しての新しいインスタンスを初期化するコンス トラクター、 <xref:System.Web.UI.WebControls.TreeView> クラスです。 追加する、 <xref:System.Web.UI.WebControls.TreeView> ページに動的に制御は、新しい作成 <xref:System.Web.UI.WebControls.TreeView> オブジェクト、そのプロパティを設定し、追加するに、 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> コンテナーのコレクションを制御するなど、 <xref:System.Web.UI.WebControls.PlaceHolder> コントロールです。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> コンス トラクターを追加する、 <xref:System.Web.UI.WebControls.TreeView> ページに動的に制御します。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> コンス トラクターを追加する、 <xref:System.Web.UI.WebControls.TreeView> ページに動的に制御します。 正常に動作するこの例では、Book.xml という名前のファイルにこのコード例の後のサンプル XML データをコピーする必要があります。  
  
 [!code-csharp[TreeViewCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-vb[TreeViewCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>HTML 属性およびスタイルをレンダリングする必要がある追加を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A> メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールは、ツリー ノードのバインディングを自動的に生成されます。</summary>
        <value>
          <see langword="true" /> <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールは、ツリー ノードのバインディングを自動的に生成しない場合は、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ツリー ノードのバインディングは、データ項目とそのバインド先のノード間のリレーションシップを定義します。 各データ項目が複数のプロパティ持つ XML 要素属性がいくつか\) などにはが含まれているデータ ソースにバインドするときに、 <xref:System.Web.UI.WebControls.TreeView> コントロールをバインドするデータ項目プロパティがわかっている必要がある <xref:System.Web.UI.WebControls.TreeNode> プロパティです。 場合、 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、設定ツリー ノードのバインディングを既定値を自動的に生成、 <xref:System.Web.UI.WebControls.TreeNode.Text%2A> のプロパティ、 <xref:System.Web.UI.WebControls.TreeNode> によって返される値にバインディングに関連付けられているオブジェクト、 `ToString` データ項目のメソッドです。  
  
> [!NOTE]
>  自動的に生成されたツリー ノードのバインディングに追加されていない、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> コレクションです。  
  
 XML 要素によって返される値の場合、 `ToString` メソッドは XML ファイルの基になる構造を示していますが、あまり役に立ちませんそれ以外の場合、要素名。 さらに便利なツリーを作成するには、設定することによって、独自のツリー ノードのバインディングを定義する必要があります、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> コレクションです。  
  
> [!NOTE]
>  定義した場合、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 、コレクション、 <xref:System.Web.UI.WebControls.TreeView> コントロールが自動的に生成されたツリー ノードのバインディングではなくそれらの値を使用します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を設定して自動ツリー ノードのバインドの生成を無効にする方法を示しています、 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> プロパティを `false`します。 2 番目のコード例では、最初のコード例のサンプル サイト マップ データを提供します。  
  
 次のコード例を設定して自動ツリー ノードのバインドの生成を無効にする方法を示しています、 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> プロパティを `false`します。 A <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 内のデータ項目間の関係を確立するためにコレクションを定義し、 <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールとのノード、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 正常に動作するこの例では、Web.sitemap という名前のファイルにこのコード例の後、サンプル サイト マップ データをコピーする必要があります。  
  
 [!code-csharp[TreeViewAutoGenerateBindings\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-vb[TreeViewAutoGenerateBindings\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル サイト マップ データを提供します。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.TreeNode" /> でノードを表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> 選択されたチェック ボックスを表示するコントロール。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 内のノードを含む、 <see cref="T:System.Web.UI.WebControls.TreeView" /> 選択されたチェック ボックスを表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チェック ボックスが表示される場合、 <xref:System.Web.UI.WebControls.TreeView> コントロール \(設定して、 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティ以外の値を `TreeNodeType.None`\) を使用して、 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> プロパティのどのノードが選択されているチェック ボックスを表示します。 このコレクションは、通常をツリーで選択されているチェック ボックスを持つすべてのノードを反復処理に使用されます。  
  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> イベントが発生したときのチェック ボックス、 <xref:System.Web.UI.WebControls.TreeView> コントロールがサーバーへのポスト間で状態を変更します。 これにより、このイベントが発生するたびに、データベースまたは表示されているコンテンツの更新などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> ツリー構造の深さ優先検査を使用して、コレクションが設定されます。 次の親ノードを作成する前に各親ノードがその子ノードまで処理します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> するノードを特定のプロパティ チェック ボックスがオンのある、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewShowCheckBoxes\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-vb[TreeViewShowCheckBoxes\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー内の各ノードを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> メソッドは、ツリー内の各ノードを終了する便利な手段を提供します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> メソッド内のすべてのノードを折りたたみます、 <xref:System.Web.UI.WebControls.TreeView> 、同時に管理します。  
  
 [!code-csharp[TreeViewExpandAll\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-vb[TreeViewExpandAll\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノードの折りたたみ可能なインジケーターに表示されるイメージのツールヒントを設定します。</summary>
        <value>折りたたみ可能なノード インジケーターに表示されるイメージのツールヒント。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> 折りたたみ可能なイメージのツールヒントを指定するプロパティです。 指定したテキストは、コントロールをより使いやすくために使用するイメージの説明を持つデバイスの支援技術を提供します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> プロパティ ノードの折りたたみ可能なインジケーターに表示されるイメージのツールヒントを指定します。  
  
 [!code-csharp[TreeViewCustomImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-vb[TreeViewCustomImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノードの折りたたみ可能なインジケーターのカスタム イメージの URL を設定します。</summary>
        <value>折りたたみ可能なノードに表示されるカスタム イメージの URL。 既定値は空の文字列 \(""\)、既定のマイナス記号 \(\-\) のイメージが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティ ノードの折りたたみ可能なインジケーターのカスタム イメージを指定します。 このイメージは、折りたたみ可能なノードの横に表示され、マイナス記号 \(\-\) で、通常です。  
  
 ときに、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、プラス記号 \(\+\) またはマイナス記号 \(\-\) かどうかを示すノード展開可能な折りたたみ可能なまたは展開できる、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定でカスタム イメージを指定することができます、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> プロパティを `TreeViewImageSet.Custom`, 、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, 、および <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティをカスタム イメージの Url。 イメージが指定されていない場合は、既定のイメージが使用されます。 ノードの展開のインジケーターを非表示にするには、設定、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> プロパティを `false`します。  
  
> [!NOTE]
>  ノードに適切にアライメントされることを確認する、 <xref:System.Web.UI.WebControls.TreeView> カスタム イメージを使用する場合を制御することを確認して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, と <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティ次元が同じであります。  
  
 カスタム イメージの折りたたみ可能なノード指標を使用する場合は設定も考慮する必要があります、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A> イメージのツールヒントを指定するプロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティ ノードの折りたたみ可能なインジケーターのカスタム イメージを指定します。 コード例を表示し、画像をコントロールに表示するには、独自のイメージを提供する必要があり、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> にプロパティを設定する必要があります `TreeNodeImageSet.Custom`します。  
  
 [!code-csharp[TreeViewCustomImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-vb[TreeViewCustomImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子コントロールを格納するコレクションを作成します。</summary>
        <returns>常に <see cref="T:System.Web.UI.EmptyControlCollection" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.TreeView> control does not support embedding of child controls. This method has been overridden to prevent the addition of child controls and always returns an <xref:System.Web.UI.EmptyControlCollection?displayProperty=fullName> object.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを返します。<see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> ヘルパー メソッドです。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> の新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> メソッドは、の新しいインスタンスを返すヘルパー メソッド、 <xref:System.Web.UI.WebControls.TreeNode> クラスです。  
  
 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A> メソッドは、主にコントロールの開発者によって使用されます。 拡張する開発者の制御、 <xref:System.Web.UI.WebControls.TreeView> クラスを拡張することによって、 <xref:System.Web.UI.WebControls.TreeNode> クラスから派生したオブジェクトを取得するには、このメソッドをオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.TreeNode>です。 拡張する一般的な理由、 <xref:System.Web.UI.WebControls.TreeNode> クラスは、オーバーライドする、 <xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A> と <xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出し、 <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> 基本クラスのメソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ バインド コントロールをオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> メソッドの代わりに、 <xref:System.Web.UI.WebControls.TreeView.DataBind%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" /> データ項目とそのバインド先のノード間のリレーションシップを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> コレクションに含まれる <xref:System.Web.UI.WebControls.TreeNodeBinding> データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト。 ノードの各データ項目が複数のプロパティ持つ XML 要素属性がいくつか\) などにはが含まれているデータ ソースにバインドがによって返される値に表示される状況、 `ToString` 既定では、データ項目のメソッドです。 XML 要素の場合は、ノードは、要素名、ツリーの基になる構造を示していますが、あまり役に立ちませんそれ以外の場合を表示します。 ツリー ノードのバインディングを指定することによって、ノードを特定のデータ項目のプロパティにバインドできます。  
  
 データ項目と、ノード間のリレーションシップを定義するときに、バインディング、および値のプロパティにバインドするの両方の条件を指定する必要があります <xref:System.Web.UI.WebControls.TreeNode> オブジェクトです。 基準は、データ項目をノードにバインドするときを示します。 条件は、ノードの深さ、データ メンバー、またはその両方を指定できます。 ノードの深さでは、バインドされるノードのレベルを指定します。 たとえば、ノードの深さは 0 を指定すると、レベル 0 のツリー構造のすべてのノードが、ツリー ノードのバインディングを使用してバインドされます。 データ メンバーは、基になるデータ ソース内のデータ項目の種類を指定しますが、データ ソースによってさまざまな情報を表すことができます。 たとえば、XML 要素のデータ メンバーは、要素の名前を指定します。  
  
 複数の <xref:System.Web.UI.WebControls.TreeNodeBinding> 、互いに競合するオブジェクトが定義されて、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、次の優先順位でツリー ノードのバインディングを適用します。  
  
1.  <xref:System.Web.UI.WebControls.TreeNodeBinding> 深さとデータ メンバーの両方を定義するオブジェクト。  
  
2.  <xref:System.Web.UI.WebControls.TreeNodeBinding> 深さのみを定義するオブジェクト。  
  
3.  <xref:System.Web.UI.WebControls.TreeNodeBinding> データ メンバーだけを定義するオブジェクト。  
  
4.  <xref:System.Web.UI.WebControls.TreeNodeBinding> 深さもデータ メンバーを定義するオブジェクト。  
  
 同じ優先順位の条件に一致する複数のバインディングを指定する場合は、コレクションの最初のバインドが適用されます。  
  
 プロパティをバインドできますし、バインディングの基準が確立されると、 <xref:System.Web.UI.WebControls.TreeNode> オブジェクトの値にバインドされていることができます。 属性またはデータ項目のフィールドにバインドするか、静的な値を表示します。 バインディングのプロパティの詳細については、 <xref:System.Web.UI.WebControls.TreeNode> オブジェクトの値には、「 <xref:System.Web.UI.WebControls.TreeNodeBinding>します。  
  
 ただし、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> コレクションがプログラムによって設定されると、宣言によって通常設定されています。 ツリー ノードのバインディングを指定するには、まずを開いたり閉じたり `<DataBindings>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 次に、 `<asp:TreeNodeBinding>` 開始タグと終了の間で要素 `<DataBindings>` バインディングの各ツリー ノードのタグが指定します。  
  
 設定してデータ バインディングを作成するときに、 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> のプロパティ、 <xref:System.Web.UI.WebControls.TreeView> に制御を `true`, 、作成されるバインディングがある、 <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> プロパティに設定 `true`します。 宣言によって作成されるデータ バインディングがある、 <xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> プロパティに設定 `false`します。 宣言の構文を使用するには、個々 のデータ バインディングの動作を制御することができます。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> データ項目とバインド先のノード間のリレーションシップを定義するコレクション。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> データ項目とそのバインド先のノード間のリレーションシップを定義するコレクション。 正常に動作するこの例では、Book.xml という名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。 この例でのみ指定、 <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> バインディングのプロパティです。 指定することによってパフォーマンスを多少向上を追加することが、 <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> プロパティです。  
  
 [!code-csharp[TreeViewXml\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-vb[TreeViewXml\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 次のコード例では、前の例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールは、展開と折りたたみのイベントを処理するクライアント側\-スクリプトを表示します。</summary>
        <value>
          <see langword="true" /> 互換性のあるブラウザーのクライアント側スクリプトを表示するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> プロパティを指定するかどうか、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、展開と折りたたみのイベントを処理する互換性のあるブラウザー上のクライアント側スクリプトを表示します。 このプロパティに設定すると `true`, 、互換性のあるブラウザーがクライアント上のノードを閉じたりするコードを実行します。 クライアント側スクリプトを操作するツリー ノードのデータを事前に知る必要があります。 クライアント スクリプトを使用できないように、投稿はサーバーにノードを展開または折りたたむたびにします。  
  
 場合、ノードをクライアントから設定できますツリー ノードのデータを事前にわからないが、ときに、 `PopulateNodesFromClient` プロパティに設定されても `true`です。 このシナリオでは、イベント処理の方法も提供する必要があります、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> 、ノードを作成するイベントです。 クライアント側のノードの作成の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>します。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> にプロパティが設定されている `false`, 、 <xref:System.Web.UI.WebControls.TreeView> たびに、ノードを展開または折りたたむへ、サーバー コントロールのポストバックします。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> プロパティを展開し、互換性のあるブラウザーのノードを折りたたむに使用されるクライアント側スクリプトを表示します。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> プロパティを展開し、互換性のあるブラウザーのノードを折りたたむに使用されるクライアント側スクリプトを表示します。 展開してノードを折りたたみます。 サーバーへのポストが必要なことに注意してください。 ときに、 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> にプロパティが設定されている `false`します。 正常に動作するこの例では、Book.xml という名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。  
  
 [!code-csharp[TreeViewEnableClientScript\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-vb[TreeViewEnableClientScript\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー内のすべてのノードを開きます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> メソッドを開くには、ツリー内のすべてのノードの便利な方法を提供します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> メソッド内のすべてのノードを展開、 <xref:System.Web.UI.WebControls.TreeView> 、同時に管理します。  
  
 [!code-csharp[TreeViewExpandAll\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-vb[TreeViewExpandAll\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の場合に展開されるレベル数、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールが最初に表示されます。</summary>
        <value>ときに表示されるまでの奥行き、 <see cref="T:System.Web.UI.WebControls.TreeView" /> が最初に表示されます。 既定では\-1 で、すべてのノードが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> プロパティの表示を制御する、 <xref:System.Web.UI.WebControls.TreeView> 表示されている最初の時間を制御します。 以降のポストバックでは、ノードは、現在展開された状態を保持します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または展開可能なノード インジケーターに表示されるイメージのツールヒントを設定します。</summary>
        <value>展開可能なノード指標を表示するイメージのツールヒント。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> イメージのツールヒントを指定するプロパティです。 指定したテキストは、コントロールをより使いやすくために使用するイメージの説明を持つデバイスの支援技術を提供します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> プロパティを展開可能なノード インジケーターに表示されるイメージのツールヒントを指定します。  
  
 [!code-csharp[TreeViewCustomImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-vb[TreeViewCustomImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタム イメージを展開可能なノードのインジケーターの URL を設定します。</summary>
        <value>展開可能なノードに表示されるカスタム イメージの URL。 既定値は空の文字列 \(""\)、既定値を表示する正符号 \(\+\) のイメージです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> プロパティをカスタム イメージの展開可能なノード指標を指定します。 このイメージは、展開可能なノードの横に表示され、プラス記号 \(\+\) は、通常です。  
  
 ときに、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、プラス記号 \(\+\) またはマイナス記号 \(\-\) かどうかを示すノード展開可能な折りたたみ可能なまたは展開できる、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定でカスタム イメージを指定することができます、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> プロパティを `TreeViewImageSet.Custom`, 、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, 、および <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティをカスタム イメージの Url。 イメージが指定されていない場合は、既定のイメージが使用されます。 ノードの展開のインジケーターを非表示にするには、設定、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> プロパティを `false`します。  
  
> [!NOTE]
>  ノードに適切にアライメントされることを確認する、 <xref:System.Web.UI.WebControls.TreeView> カスタム イメージを使用する場合を制御することを確認して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, と <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティ次元が同じであります。  
  
 カスタム イメージを正しく表示するのには、設定する必要があります <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> に `false`します。  
  
 カスタム イメージの展開可能なノード指標を使用する場合は、設定も考慮する必要があります、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A> イメージのツールヒントを指定するプロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> プロパティをカスタム イメージの展開可能なノード指標を指定します。 コード例を表示し、画像をコントロールに表示するには、独自のイメージを提供する必要があり、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> にプロパティを設定する必要があります `TreeNodeImageSet.Custom`します。  
  
 [!code-csharp[TreeViewCustomImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-vb[TreeViewCustomImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">ノードの値パス。</param>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.TreeNode" /> 内のオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> 指定した値パスにあるコントロール。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> 指定した値パスにあります。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> からノードを取得するメソッド、 <xref:System.Web.UI.WebControls.TreeView> 指定した値パスにあるコントロール。 値パスには、ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧が含まれています。 各ノードの値のパスを格納する、 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティです。<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> プロパティは、ノードの値を区切るために使用する区切り文字を指定します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> からノードを取得するメソッド、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[TreeViewFindNode\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-vb[TreeViewFindNode\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView> 実装するコントロール、 <xref:System.Web.UI.ICallbackEventHandler> インターフェイスと使用法、 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> データを取得して、 <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> コントロールに対して、取得したデータを返すメソッド。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />上にマウス ポインターが配置されているときに、ノードの外観を設定できるようにするオブジェクト。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />上にマウス ポインターが配置されている場合に、ノードのスタイルを表すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>上にマウス ポインターが配置されているときに、ノードの外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>返されるオブジェクト。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト \(たとえば、 `HoverNodeStyle-ForeColor`\)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`\(たとえば、 `HoverNodeStyle.ForeColor`\)。 この機能は、スクリプト対応のクライアントでのみサポートされます。  
  
> [!NOTE]
>  使用する、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティ、する必要があります、`<head>`を持つ要素を`runat="server"`属性。  
  
 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  スタイルの設定、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティ内にある対応するノード スタイル設定を上書きする、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>プロパティです。  
  
 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>ノードのプロパティはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`です。  
  
 異なり、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>と<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>プロパティであるプロパティ<xref:System.Web.UI.WebControls.TreeNodeStyle>、オブジェクト、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティは、<xref:System.Web.UI.WebControls.Style>オブジェクト。  
  
   
  
## 例  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>上にマウス ポインターが配置されているときに、ノードの外観を制御するプロパティです。 この例を実行するにする必要があります、`<head>`を持つ要素を`runat="server"`属性。  
  
 [!code-csharp[TreeViewHoverNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-vb[TreeViewHoverNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に使用する画像のグループ、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 値のいずれか。 既定値は、<see langword="TreeViewImageSet.Custom" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> プロパティを使用するイメージのグループを指定する、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 定義済みの標準的な外観を制御または独自のカスタム セットを定義するイメージのセットを選択できますか。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> プロパティでは、ノードのすべてのスタイル設定には影響しません。 適切なスタイル プロパティを設定、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> をカスタムの色との間隔を追加する場合は、プロパティです。  
  
 次の表に、有効な値の <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> プロパティです。  
  
|イメージのセット|説明|  
|--------------|--------|  
|`TreeViewImageSet.Arrows`|矢印の画像を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.BulletedList`|ダイヤ型の行頭文字を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.BulletedList2`|四角形の行頭文字のイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.BulletedList3`|区分けされ、ひし形の定義済みセットの形の行頭文字です。|  
|`TreeViewImageSet.BulletedList4`|代替区分けされ、ひし形の定義済みセットには、レベルごとに異なるサイズの行頭文字イメージが形です。|  
|`TreeViewImageSet.Contacts`|MSN Messenger の画像を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Custom`|ユーザー定義のイメージを設定します。|  
|`TreeViewImageSet.Events`|イベント ログ スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Faq`|よく寄せられる質問スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Inbox`|電子メール スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.News`|ニュースグループ スタイルのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Simple`|単純な図形を使用する定義済みのイメージ セットについて説明します。|  
|`TreeViewImageSet.Simple2`|単純な塗りつぶされた図形を使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.Msdn`|MSDN イメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.WindowsHelp`|Microsoft Windows のヘルプのイメージを使用する定義済みのイメージ セット。|  
|`TreeViewImageSet.XPFileExplorer`|Microsoft Windows XP で使用できるイメージは Windows エクスプ ローラーを使用する定義済みのイメージ セット。|  
  
 イメージのカスタム セットを定義するときに、次の表にプロパティのそれぞれに対してイメージを指定する必要があります。 それ以外の場合、そのプロパティの既定のイメージが使用されます。  
  
|プロパティ|説明|  
|-----------|--------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|ノードの折りたたみ可能なインジケーターのカスタム イメージの URL。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノードのインジケーターのカスタム イメージの URL。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|カスタム イメージのノードを接続する線を含むフォルダーの URL。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開なノードのインジケーターのカスタム イメージの URL。|  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 内のイメージの Windows エクスプ ローラーのセットを表示するプロパティを <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewImageSet\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-vb[TreeViewImageSet\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したイメージ セットは、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> リーフ ノードの外観を設定できるようにするオブジェクト。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 内のリーフ ノードのスタイルを表す、 <see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> 内のリーフ ノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクト \(たとえば、 `LeafNodeStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `LeafNodeStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, 、または <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ノードの種類によって異なります。 場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクションを定義して、その他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 使用を検討する特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 個別のスタイル プロパティの設定ではなくプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> 内のリーフ ノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewLeafNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-vb[TreeViewLeafNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.Style" /> ツリーの個々 のレベルにあるノードのスタイルを表すオブジェクト。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.StyleCollection" /> ツリーの個々 のレベルにあるノードのスタイルを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> の代わりに、個々 のスタイル プロパティのコレクション \(など、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> プロパティ\) ツリーの個々 のレベルにあるノードのスタイルを制御します。 コレクション内の最初のスタイルは、ツリーの最初のレベルのノードのスタイルに対応します。 コレクション内の 2 番目のスタイルは、2 番目のレベル、ツリーのノードのスタイルに対応します。 このプロパティは、ほとんどの場合、特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する使用します。  
  
 スタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, 、または <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ノードの種類によって異なります。 場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクションを定義して、その他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> ナビゲーション メニューを作成するプロパティです。 ノード展開インジケーターと非表示にイメージをコントロールが常に完全に展開されています。 また、 <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> ノード レベルの間隔を制御するプロパティを使用します。  
  
 [!code-csharp[TreeViewLevelStyles\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-vb[TreeViewLevelStyles\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または親ノードに子ノードを接続するために使用される線のイメージを格納するフォルダへのパスを設定します。</summary>
        <value>ノードを接続するために使用する線のイメージを格納するフォルダへのパス。 既定値は空の文字列 \(""\)、ことを示します、 <see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> プロパティが設定されていません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView> コントロールは、親ノードに子ノードを接続する線を表示できるときに、 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> にプロパティが設定されている `true`します。 行が表示されたらを使用して、 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> の線を使用する描画前イメージのセットを含む Web からアクセス可能なフォルダーを指定するプロパティです。 次の表に、イメージで使用される、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
|イメージ|説明|  
|----------|--------|  
|Dash.gif|ツリー構造内の 1 つだけのルート ノードとルート ノードがある場合に、ルート ノードの横に表示される線のイメージは、リーフです。|  
|Dashminus.gif|マイナス記号 \(\-\) をルート ノードが展開されているかを示すツリー構造に 1 つだけのルート ノードが存在する場合、ルート ノードの横に表示されるイメージ。|  
|Dashplus.gif|ルート ノードが折りたたまれていることを示すためにツリー構造に 1 つだけのルート ノードが存在する場合は、ルート ノードの横に表示されるプラス記号 \(\+\) のイメージ。|  
|I.gif|隣接するノードに接続する線のイメージです。|  
|L.gif|線のイメージ ノードに表示される次に最後の分岐でのノードがリーフときです。|  
|Lminus.gif|分岐を示すノードが展開されている最後のノードの横に表示される線のイメージです。|  
|Lplus.gif|ノードが折りたたまれていることを示すためにブランチ最後のノードの横に表示される線のイメージです。|  
|Minus.gif|マイナス記号 \(\-\)、ノードが展開されたことを示すために複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示されるイメージ。 このイメージは、余分な線は含まれず、ルート ノードが折りたたまれたがある場合にのみ表示されます。 ページが最初に読み込まれたときに、Rminus.gif 画像が表示されます。|  
|Noexpand.gif|リーフ ノードの横に表示される空のスペーサー イメージ。 このイメージは、垂直方向に整列するテキストを使用します。|  
|Plus.gif|ノードであることを示す複数のルート ノードを含むツリー構造では、最初のルート ノードの横に表示されるプラス記号 \(\+\) イメージが折りたたまれています。 このイメージは、余分な線は含まれず、ルート ノードが展開された後がある場合にのみ表示されます。 ページが最初に読み込まれたときに、Rplus.gif 画像が表示されます。|  
|R.gif|ノードがリーフ ノードであることを示す複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示される線のイメージ。|  
|Rminus.gif|マイナス記号 \(\-\)、ノードが展開されたことを示すために複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示されるイメージ。 このイメージは、余分な行が含まれており、ページが最初に読み込まれた場合にのみが表示されます。 ルート後ノードが折りたたまれた、Minus.gif イメージが表示されたら、します。|  
|Rplus.gif|ノードであることを示す複数のルート ノードを含むツリー構造では、最初のルート ノードの横に表示されるプラス記号 \(\+\) イメージが折りたたまれています。 このイメージは、余分な行が含まれており、ページが最初に読み込まれた場合にのみが表示されます。 ルート ノードの展開が Plus.gif イメージが表示されたら、されます。|  
|T.gif|ノードがリーフであることを示します \(t の交点\) にあるツリー構造の中のノードの横に表示される行イメージ。|  
|Tminus.gif|マイナス記号 \(\-\)、ノードが展開されたことを示すために \(t の交点\) にあるツリー構造の中のノードの横に表示されるイメージ。|  
|Tplus.gif|ノードが折りたたまれていることを示すために \(t の交点\) にあるツリー構造の中のノードの横に表示されるプラス記号 \(\+\) のイメージ。|  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> プロパティが設定されていない、 <xref:System.Web.UI.WebControls.TreeView> コントロールが組み込まれており、既定のイメージ \(20 × 20 ピクセル\) を使用します。  
  
 Microsoft Visual Studio などのいくつかのビジュアル デザイナーでは、行のイメージを生成するツールを提供します。  
  
 実行時は右から左へ表示用のカスタム イメージを反転していません。 Web ページの左から右へと右から左への両方をサポートするには、双方向のイメージ セットを作成する必要があります。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> に表示する行のイメージを含むフォルダーを指定するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 次の例でするには、あらかじめ線デザイナー ツールを使用して、線イメージのセットを作成します。 サンプル アプリケーションについては、ディレクトリ内である LineImages をという名前のフォルダーに配置します。  
  
 [!code-csharp[TreeViewLineImagesFolderUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-vb[TreeViewLineImagesFolderUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのポストバック データを処理します。</summary>
        <returns>
          <see langword="true" />, 、場合、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態の変更、ポストバック イベントの結果としてそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET ページ フレームワークを返すすべてのサーバー コントロールを追跡する `true` から、 <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> メソッドの呼び出しが呼び出され、および、 <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> それらのコントロールにメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">コントロールの保存されているビュー ステートの値を格納するオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にバインドするツリー レベルの最大数、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>バインドするツリー レベルの最大数、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。 既定値は、\-1 で、データ ソース内のすべてのツリー レベルをコントロールにバインドします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 バインドするときに、 <xref:System.Web.UI.WebControls.TreeView> コントロールをデータ ソースを使用して、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> プロパティをコントロールにバインドするツリー レベルの数を制限します。 たとえば、このプロパティを設定 `2` ルート ノードのみとするルート ノードの下にあるすべてのノードを結び付け、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 データ ソース内の残りのすべてのノードは無視されます。  
  
> [!IMPORTANT]
>  悪意のあるユーザーはコールバック要求を作成して、データのノードを取得する、 <xref:System.Web.UI.WebControls.TreeView> コントロールをページの開発者は表示されません。 したがって、データ ソースでデータのセキュリティを実装する必要があります。 使用しないでください、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> プロパティ データを非表示にします。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> のみ、最初次の 2 つのノードのレベル \(深さ 0 および 1\) にバインドするプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A> のみ、最初次の 2 つのノードのレベル \(深さ 0 および 1\) にバインドするプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 データ ソース内のすべてのノード レベルは無視されます。 正常に動作するこの例では、Book.xml という名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。  
  
 [!code-csharp[TreeViewMaxDataBindDepth\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-vb[TreeViewMaxDataBindDepth\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値より小さい <see langword="-1" />します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定インデント幅 \(ピクセル単位\) で、子ノードの <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>子ノードの左端とその親ノードの左端のピクセル単位での領域の量。 既定値は 20 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> の子ノードの左端とその親ノードの左端の間の間隔の量を制御するプロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> プロパティはすべての子ノードに、影響、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 各ノードのインデント幅を個別に制御することはできません。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A> 子ノードのインデントを制御するプロパティです。  
  
 [!code-csharp[TreeViewNodeIndent\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-vb[TreeViewNodeIndent\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.TreeNode" /> でルート ノードを表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> のルート ノードを含む、 <see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> を取得するプロパティ、 <xref:System.Web.UI.WebControls.TreeNodeCollection> オブジェクト ツリー内のすべてのルート ノードが含まれています。 このコレクションはすべてのルート ノードをすばやく反復処理する、またはツリーで特定のルート ノードへのアクセスによく使用されます。  
  
> [!NOTE]
>  一般的なツリー構造になります。 1 つだけのルート ノードです。ただし、複数のルート ノードを追加することができます、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティは、ツリーのルート ノードをプログラムで管理にも使用できます。 追加、挿入、削除、および取得 <xref:System.Web.UI.WebControls.TreeNode> コレクションからオブジェクトです。 コレクションに加えた変更は自動的に反映されます、 <xref:System.Web.UI.WebControls.TreeView> サーバー ラウンド トリップの隣にあるコントロール。  
  
 ルート ノードの子ノードにアクセスするには、使用、 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> はノードのプロパティです。 使用して、 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 各ノードのレベルを下へ移動後続の親レベルのノードのプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> プロパティをツリーを走査します。  
  
 [!code-csharp[TreeNodeCollectionCount\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-vb[TreeNodeCollectionCount\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 内のノードの既定の外観を設定できるようにするオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> を表すノードの既定のスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> プロパティ内のノードの既定の外観を制御する、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクト \(たとえば、 `NodeStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `NodeStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, 、または <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ノードの種類によって異なります。 場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクションを定義して、その他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  対応するノードのスタイル設定、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, 、または <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> プロパティのスタイル設定の上書き、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> プロパティです。  
  
 使用を検討する特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 個別のスタイル プロパティの設定ではなくプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> 内のノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-vb[TreeViewNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノード容量が不足しているときに、ノードにテキストを折り返すかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> テキストを折り返すそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> プロパティ領域が不足すると、各ノードに表示されるテキストが折り返されるかどうかを指定します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A> プロパティのテキストを折り返す、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewNodeWrap\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-vb[TreeViewNodeWrap\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または非展開可能なノードのインジケーターのカスタム イメージの URL を設定します。</summary>
        <value>カスタム イメージを展開なノードに表示の URL です。 既定値は空の文字列 \(""\)、既定の空白のイメージが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> プロパティ展開なノード指標のカスタム イメージを指定します。 展開なノード インジケーターの画像 \(またはスペース用\) は、親またはルート ノードとリーフ ノードを配置する \(ノードを展開したり折りたたんだりできる評価指標\) の代わりに、リーフ ノードの横に表示されます。  
  
 ときに、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、プラス記号 \(\+\) またはマイナス記号 \(\-\) かどうかを示すノード展開可能な折りたたみ可能なまたは展開できる、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定でカスタム イメージを指定することができます、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> プロパティを `TreeViewImageSet.Custom`, 、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, 、および <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティをカスタム イメージの Url。 イメージが指定されていない場合は、既定のイメージが使用されます。 ノードの展開のインジケーターを非表示にするには、設定、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> プロパティを `false`します。  
  
> [!NOTE]
>  ノードに適切にアライメントされることを確認する、 <xref:System.Web.UI.WebControls.TreeView> カスタム イメージを使用する場合を制御することを確認して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, と <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティ次元が同じであります。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> 展開なノードのインジケーターのカスタム イメージを指定するプロパティです。 コード例を表示し、画像をコントロールに表示するには、独自のイメージを提供する必要があり、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> にプロパティを設定する必要があります `TreeNodeImageSet.Custom`します。  
  
 [!code-csharp[TreeViewCustomImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-vb[TreeViewCustomImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> メソッドは、 <xref:System.Web.UI.WebControls.TreeView> させるコントロール、 <xref:System.Web.UI.Control.Init> イベントです。 通常は、使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.TreeView> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> メソッドをオーバーライドして、ポストバック用に登録します。 クライアント スクリプトが有効になっている場合、必要なスクリプトと非表示フィールドがまた表示します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> のイベント、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> でノードを選択すると、イベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに表示されているコンテンツの更新などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 設定すると、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> そのノードが選択されているときに発生するイベントを指定するノードのプロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> を持つノードにはレンダリングされません、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> プロパティに設定 `TreeNodeSelectAction.None`します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> のイベント、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> イベントは、チェック ボックスで、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、サーバーへのポスト間で状態を変更します。 これにより、このイベントが発生するたびに、データベースまたは表示されているコンテンツの更新などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> のイベント、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> でノードが折りたたまれているときにイベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> のイベント、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> 内のノードにデータ項目がバインドされている場合、イベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> のイベント、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> でノードが展開されると、イベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> にノードのプロパティが設定されている <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> または <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>, 、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> でそのノードをクリックすると、イベントが発生も、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> のイベント、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合によっては、データ サイズやユーザー入力に依存するカスタムのコンテンツのためのツリー構造を静的に事前に定義するは実用的ではありません。 このため、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、動的なノードをサポートしています。 ときに、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> にノードのプロパティが設定されている `true`, 、そのノードが、ノードを展開するときに、実行時設定を取得します。  
  
 ノードを動的に設定するには、最初に設定、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> をノードのプロパティ `true`します。 イベント処理の方法を次に、定義、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> プログラムを使用して、ノードを設定します。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造体にデータを置くし、するノード構造を追加、 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 値が設定されるノードのコレクション。 追加することで、ノードの構造が作成された <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 親ノードのコレクション。  
  
> [!NOTE]
>  ときに、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> にノードのプロパティが設定されている `true`, 、ノードを動的に設定する必要があります。 宣言によって下に別のノードをネストすることはできません。それ以外の場合、ページで、エラーが発生します。  
  
 サポートされているブラウザー \(Internet Explorer 4.0 と互換性のあるブラウザー以降\) のクライアント側のノードも利用できます。 これにより、有効にすると、 <xref:System.Web.UI.WebControls.TreeView> サーバーにポストバックする必要性を防ぐことがそのノードを展開すると、ときに、クライアント上のノードを動的に生成するコントロール。 クライアント側のノードの作成の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 内の親ノードの外観を設定できるようにするオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> 内の親ノードのスタイルを表す、 <see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 内の親ノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクト \(たとえば、 `ParentNodeStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `ParentNodeStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, 、または <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ノードの種類によって異なります。 場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクションを定義して、その他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 使用を検討する特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 個別のスタイル プロパティの設定ではなくプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> 内の親ノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewParentNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-vb[TreeViewParentNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で指定されているノードの値を区切るために使用される文字、 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> プロパティです。</summary>
        <value>指定されたノードの値を区切るために使用する文字、 <see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> プロパティです。 既定値は、スラッシュ \(\/\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティには、ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧が含まれています。 使用して、 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> 、区切り記号の文字を指定するプロパティは、ノードの値を使用します。 個々 の値のリストを解析するときに、この値は使用一般的です。  
  
 表示されるテキストによって、 <xref:System.Web.UI.WebControls.TreeView> コントロール、区切り文字は、すべての競合を防ぐために変更する必要があります。 たとえば、コンマを区切り文字を設定すると場合、表示されるテキストにコンマを入れないでください。それ以外の場合、 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> プロパティを正確に解析することはできません。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> の区切り文字を指定するプロパティ、 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> ノードのプロパティです。 この値は解析に使用し、 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> 個々 の値のプロパティです。  
  
 [!code-csharp[TreeViewPathSeparator2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-vb[TreeViewPathSeparator2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースに基づくすべてのノードを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.TreeView> コントロールの指定したデータ ソースをコントロールにバインドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Because the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method is sealed, you should override the <see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" /> method, if you need to perform any additional tasks when binding data.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクライアントからの要求時にノードのデータを表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> クライアントからの要求時にツリー ノードのデータを設定するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合によっては、データ サイズやユーザー入力に依存するカスタムのコンテンツのためのツリー構造を静的に事前に定義するは実用的ではありません。 このため、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、動的なノードをサポートしています。 ときに、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> にノードのプロパティが設定されている `true`, 、そのノードが、ノードを展開するときに、実行時設定を取得します。  
  
 オンデマンドのノードを設定するだけでなく、サポートされているクライアントのブラウザーで直接ノードを作成することです。 ときに、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> にプロパティが設定されている `true`, 、サービスがサーバーにポストバックが不要になるツリー ノードを作成するクライアントから呼び出されます。 それ以外の場合、 <xref:System.Web.UI.WebControls.TreeView> 、ノードを作成するサーバーへのポストバックを制御します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> プロパティ設定することも必要があります。 `true` ために、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> プロパティに設定する `true`です。  
  
 クライアント上のノードを作成するには、まず設定、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> プロパティを `true` し、設定、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> をノードのプロパティ `true`します。 イベント処理の方法を次に、定義、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> プログラムを使用して、ノードを設定します。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造体にデータを置くし、するノード構造を追加、 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 値が設定されるノードのコレクション。 追加することで、ノードの構造を作成する <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 親ノードのコレクション。  
  
> [!NOTE]
>  ときに、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> にノードのプロパティが設定されている `true`, 、ノードを動的に設定する必要があります。 宣言によって下に別のノードをネストすることはできません。それ以外の場合、ページで、エラーが発生します。  
  
> [!NOTE]
>  クライアント側のノード カタログの作成機能は、コールバック スクリプトをサポートするブラウザーでサポートされています。 確認するには、ブラウザーがコールバック スクリプトのアクセスをサポートしているかどうかを使用して、 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> のプロパティ、 <xref:System.Web.HttpBrowserCapabilities> クラスです。 インスタンスにアクセスすることができます、 <xref:System.Web.HttpBrowserCapabilities> を通じて現在の要求のクラス、 <xref:System.Web.HttpRequest.Browser%2A> のプロパティ、 <xref:System.Web.HttpRequest> クラスです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> 内のノードのクライアント側のカタログ作成を有効にするプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 クライアント側のノードの作成を有効にすると、ノードが設定されている動的にも、サーバーにポストバックすることがなく、クライアント上に注意してください。  
  
 [!code-csharp[TreeViewPopulateNodesFromClient\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-vb[TreeViewPopulateNodesFromClient\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>指定した引数を使用して、コールバック イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> method is a helper method for the <xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> method.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>により、 <see cref="T:System.Web.UI.WebControls.TreeView" /> フォームがサーバーにポストバックされるときに発生するイベントを処理するコントロール。<see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> メソッドのヘルパー メソッド、 <see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値が渡されます、 `eventArgument` パラメーターを <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> を実装するコントロールのメソッド、 <xref:System.Web.UI.IPostBackEventHandler?displayProperty=fullName> インターフェイスです。 これは、 <xref:System.Web.UI.WebControls.TreeView> コントロールはポストバック イベントが発生すると、HTML 要素をレンダリングします。 スクリプトから引数を渡す場合は、コントロールは、クライアント側\-スクリプト、サーバーにポストバックをレンダリングする、 `eventArgument` パラメーター。 サーバーに送信する、単純なによってポストバック イベントが発生した場合、 `eventArgument` パラメーターは `null`です。  
  
 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> メソッドは、HTML や Web サーバー コントロールによって実装される多数のイベントの機能を提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シグナル、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態が変更された ASP.NET アプリケーションに通知するコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 変更のイベント、 <xref:System.Web.UI.WebControls.TreeView> から制御が発生した、 <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定したライターにコントロールの開始タグ、HTML をレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A> メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>内のノードを表示、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A> 内のノードを表示するメソッド、 <xref:System.Web.UI.WebControls.TreeView> クライアントに制御します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>終了タグが指定したライターにコントロールの HTML をレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A> メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> のルート ノードの外観を設定できるようにするオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> のルート ノードのスタイルを表す、 <see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> のルート ノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクト \(たとえば、 `RootNodeStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `RootNodeStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, 、または <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ノードの種類によって異なります。 場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクションを定義して、その他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 使用を検討する特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 個別のスタイル プロパティの設定ではなくプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> のルート ノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewRootNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-vb[TreeViewRootNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態を保存します。</summary>
        <returns>サーバー コントロールの現在のビューステート。それ以外の場合、 <see langword="null" />, 、コントロールに関連付けられたビューステートがない場合は、です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.TreeNode" /> で選択したノードを表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNode" /> で選択したノードを表す、 <see cref="T:System.Web.UI.WebControls.TreeView" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のノードのテキスト、 <xref:System.Web.UI.WebControls.TreeView> コントロールが 2 つのモードのいずれかになります。 選択モードとナビゲーション モードです。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにするには、設定、 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> 、空の文字列以外の値をノードのプロパティ \(""\) です。 ノードを選択モードにする、 <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> プロパティ ノードへの空の文字列 \(""\) です。  
  
 ノードが選択モードのとき、ユーザーは、ノード内のテキストをクリックしてノードを選択することができます。 使用して、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> でどのノードが選択を決定するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
> [!NOTE]
>  ノードにすることはできないとき、 <xref:System.Web.UI.WebControls.TreeView> コントロールのハイパーリンクを表示します。 ハイパーリンクが表示されるときに、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> プロパティは常に返します `null`します。  
  
 ユーザーが別のノードを選択すると、 <xref:System.Web.UI.WebControls.TreeView> コントロールを新しいノードのテキストをクリックすると、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> 既定では、イベントが発生します。 別のイベントを設定して指定できます、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> プロパティのプロパティです。 利用可能なオプションの一覧を次の表に示します。  
  
|選択範囲の操作|説明|  
|-------------|--------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|ノードの展開と折りたたみを切り替えます。 発生させる、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> または <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> 適切なイベントです。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|ノードを選択するとイベントは発生しません。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|発生させる、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベント、ノードを選択するとします。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|両方を生成、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> と <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> イベント、ノードを選択するとします。 ノードのみの展開、折りたたむことはできません。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> を持つノードにはレンダリングされません、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> プロパティに設定 `TreeNodeSelectAction.None`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> で選択したノードの値を決定するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewSelectedNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-vb[TreeViewSelectedNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードが選択したときに発生、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> でノードを選択すると、イベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに表示されているコンテンツの更新などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 設定すると、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> そのノードが選択されているときに発生するイベントを指定するノードのプロパティです。 利用可能なオプションの一覧を次の表に示します。  
  
|選択範囲の操作|説明|  
|-------------|--------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|ノードの展開と折りたたみを切り替えます。 発生させる、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> または <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> 適切なイベントです。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|ノードを選択するとイベントは発生しません。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|発生させる、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベント、ノードを選択するとします。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|両方を生成、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> と <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> イベント、ノードを選択するとします。 ノードのみの展開、折りたたむことはできません。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> を持つノードにはレンダリングされません、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> プロパティに設定 `TreeNodeSelectAction.None`します。  
  
 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> ユーザーは、ノードをクリックしたときに、投稿にのみイベントが発生します。 場合に、イベントが発生しない、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> プロパティをプログラムで変更します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> を更新するイベント、 <xref:System.Web.UI.WebControls.Label> コントロールでノードを選択すると、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewSelectedNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-vb[TreeViewSelectedNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> で選択したノードの外観を制御するオブジェクト、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> で選択したノードのスタイルを表す、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。 既定値は <see langword="null" />, 、ことを示します、 <see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> プロパティが設定されていません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> で選択したノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.TreeNodeStyle> オブジェクト \(たとえば、 `SelectedNodeStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `SelectedNodeStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>, 、または <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>, ノードの種類によって異なります。 場合、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> コレクションを定義して、その他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> で選択したノードの外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewSelectedNodeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-vb[TreeViewSelectedNodeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択したノードの値を取得します。</summary>
        <value>選択したノードの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A> プロパティは、選択したノードの値を決定する便利な手段を提供します。 このプロパティの値を返すだけで、 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> のプロパティ、 <xref:System.Web.UI.WebControls.TreeNode> によって参照されるオブジェクト、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> プロパティです。 現在選択されているノードがない場合、 <xref:System.Web.UI.WebControls.TreeView> を制御する、空の文字列 \(""\) が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataBound">ノードをデータ バインドとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>派生クラスかどうかを設定する、指定した <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールがデータ バインドされています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A> を示す方法かどうか、指定した <xref:System.Web.UI.WebControls.TreeNode> データ バインドされています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" /> method is provided to allow a control that is derived from the <see cref="T:System.Web.UI.WebControls.TreeView" /> control to set the <see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" /> property on a node.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataItem">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> のデータ項目。</param>
        <summary>派生クラスが、指定されたデータ項目を設定できるように <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A> メソッドは、指定されたデータ項目を指定して <xref:System.Web.UI.WebControls.TreeNode> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataPath">
          <see cref="T:System.Web.UI.WebControls.TreeNode" /> のデータ パス。</param>
        <summary>派生クラスが、指定されたデータ パスを設定できるように <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A> メソッドは、指定されたデータ パスを設定する <xref:System.Web.UI.WebControls.TreeNode> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の種類のノードでのチェック ボックスを表示を示す値、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 値のビットごとの組み合わせ。 既定値は、<see langword="TreeNodeType.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 複数のノードの選択のサポートを提供する、 <xref:System.Web.UI.WebControls.TreeView> コントロール、イメージ ノードの横のチェック ボックスを表示することができます。 使用して、 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティをチェック ボックスを表示する種類のノードを指定します。 たとえば、このプロパティが `TreeNodeType.Parent`, 、ツリー内の各親ノードのチェック ボックスが表示されます。 次の表は、このプロパティの有効な値を一覧表示します。  
  
|ノード型|説明|  
|----------|--------|  
|`TreeNodeType.All`|すべてのノードのチェック ボックスが表示されます。|  
|`TreeNodeType.Leaf`|すべてのリーフ ノードの場合は、チェック ボックスが表示されます。|  
|`TreeNodeType.None`|チェック ボックスは表示されません。|  
|`TreeNodeType.Parent`|すべての親ノードのチェック ボックスが表示されます。|  
|`TreeNodeType.Root`|すべてのルート ノードのチェック ボックスが表示されます。|  
  
 列挙型に使用される、 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティはフラグ列挙体は、ビットごとの演算を使用して値を結合することができます。 たとえば、表示するには、親ノードとリーフ ノードのチェック ボックスを結合するビットごとの OR 演算子を使用、 `TreeNodeType.Parent` と `TreeNodeType.Leaf` 値。  
  
 ノードのチェック ボックスを利用するかどうかのノードを選択すると、反復処理する、 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> コレクションです。  
  
> [!NOTE]
>  オーバーライドすることができます、 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> 設定して、 <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> の各ノードのプロパティです。  
  
 単一選択のみサポートを提供する必要がある場合は、使用を検討して、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> プロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> プロパティを別のノードの種類のチェック ボックスを非表示にしたりします。  
  
 [!code-csharp[TreeViewShowCheckBoxes\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-vb[TreeViewShowCheckBoxes\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">ビットごとの組み合わせ値が範囲外の <see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 列挙します。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはノード展開インジケーターが表示されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 拡張ノードのインジケーターを表示するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ノード展開インジケーターを使用して、ノードが展開された、折りたたまれた、または展開なのかどうかを表示します。 使用して、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> にノードを展開するインジケーターを表示するかどうかを指定するプロパティ、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 ときに、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、プラス記号 \(\+\) またはマイナス記号 \(\-\) かどうかを示すノード展開可能な折りたたみ可能なまたは展開できる、それぞれのノードの横にあるプレース ホルダー イメージが表示されます。 最初の設定でカスタム イメージを指定することができます、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> プロパティを `TreeViewImageSet.Custom`, 、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>, 、<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, 、および <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> プロパティをカスタム イメージの Url。 イメージが指定されていない場合は、既定のイメージが使用されます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> プロパティを表示し、拡張ノードのアイコンを非表示にします。  
  
 [!code-csharp[TreeViewShowExpandCollapse\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-vb[TreeViewShowExpandCollapse\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または親ノードの子ノードを結ぶ線を表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ノードを接続する線を表示するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> プロパティの親ノードに子ノードを接続している線を表示するかどうかを指定します。 このプロパティに設定すると `true`, 、 <xref:System.Web.UI.WebControls.TreeView> コントロールで指定されている Web からアクセス可能なフォルダーが検索、 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> 線イメージのプロパティです。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A> プロパティが設定されていない、 <xref:System.Web.UI.WebControls.TreeView> コントロールが組み込まれており、既定のイメージ \(20 × 20 ピクセル\) を使用します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> 内のノードを結ぶ線を表示するプロパティを <xref:System.Web.UI.WebControls.TreeView> コントロールです。 必ず線デザイナー ツールを使用して線イメージのセットを作成し、サンプル アプリケーションについては、ディレクトリ内である LineImages をという名前のフォルダーに配置してください。  
  
 [!code-csharp[TreeViewLineImagesFolderUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-vb[TreeViewLineImagesFolderUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのコンテンツをスキップするスクリーン リーダーの代替テキストをレンダリングするために使用する値を設定します。</summary>
        <value>ある文字列、 <see cref="T:System.Web.UI.WebControls.TreeView" /> スクリーン リーダーにヒントとして非表示イメージの代替テキストとしてレンダリングされます。 既定値は「スキップ ナビゲーション リンク」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> プロパティは、Web ページを増減したりアクセスできるように設定できるプロパティです。 繰り返し出現するコンテンツを含む web ページは、ユーザーが読み上げられる内容をスキップするスクリーン リーダーのためのメカニズムを提供できます。  
  
 <xref:System.Web.UI.WebControls.TreeView> コントロールには、 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> スクリーン リーダーによってスキップされるコントロール全体の手段としてのプロパティです。 場合、 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> プロパティが設定されており、代替テキストを非表示の画像を表示すると、コントロールの末尾に移動するためのオプションをユーザーに提供します。 スクリーン リーダーを読み上げる代替テキスト、イメージが 1 つだけのピクセルのスペースを占有します。 ページのレンダリングをピクセル正確に制御を設定、 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> プロパティを空の文字列 \(""\) し、ツリーをスキップする独自のメカニズムを提供します。  
  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A> プロパティは、既定で、コントロールは省略スクリーン リーダーによって空の文字列に設定します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView> 実装するコントロール、 <xref:System.Web.UI.ICallbackEventHandler> インターフェイスと使用法、 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> データを取得して、 <xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A> コントロールに対して、取得したデータを返すメソッド。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>指定した引数を使用して、コールバック イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Control developers should override the <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> method.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信するすべての名前値のコレクションです。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのポストバック データを処理します。</summary>
        <returns>
          <see langword="true" />, 、場合、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態の変更、ポストバック イベントの結果としてそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールの開発者をオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シグナル、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態が変更された ASP.NET アプリケーションに通知するコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールの開発者をオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>により、 <see cref="T:System.Web.UI.WebControls.TreeView" /> フォームがサーバーにポストバックされるときに発生するイベントを処理するコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールの開発者をオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。</summary>
        <value>常に返します、 <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TagKey%2A> プロパティでは、適切な HTML マークアップを書き込む出力ストリーム、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can override the <see cref="P:System.Web.UI.WebControls.TreeView.TagKey" /> property to specify which <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value to use for your derived control.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはターゲット ウィンドウまたはノードに関連付けられている Web ページの内容を表示するフレームを設定します。</summary>
        <value>リンクされた Web ページの内容を表示する対象のウィンドウまたはフレーム。 値始める必要があります A Z からの範囲の文字 \(大文字小文字を区別\)、次の表に示すように、アンダー スコアで始まる特殊な値を除く。  
  
 <list type="table">  
<listheader>  
<term> 対象の値  
  
 </term>  
<description> コンテンツをレンダリングします  
  
 </description>  
</listheader>  
<item>  
<term> <see langword="_blank" />  
  
 </term>  
<description> フレームを使用せず、新しいウィンドウ  
  
 </description>  
</item>  
<item>  
<term> <see langword="_parent" />  
  
 </term>  
<description> 直前のフレーム セットの親です。  
  
 </description>  
</item>  
<item>  
<term> <see langword="_search" />  
  
 </term>  
<description> 検索ペイン。  
  
 </description>  
</item>  
<item>  
<term> <see langword="_self" />  
  
 </term>  
<description> フォーカスのあるフレーム。  
  
 </description>  
</item>  
<item>  
<term> <see langword="_top" />  
  
 </term>  
<description> フレームなしフル ウィンドウです。  
  
 </description>  
</item>  
</list>  
  
 <block subset="none" type="note">  
<para>  
 かどうかをブラウザーのマニュアルを確認して、 <see langword="_search" /> 値はサポートされています。  Microsoft Internet Explorer 5.0 およびそれ以降のサポートなど、 <see langword="_search" /> ターゲット値。  
  
</para>  
</block>  
  
 既定値は空の文字列 \(""\)、ウィンドウまたはフォーカスのあるフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TreeView.Target%2A> ウィンドウまたはフレームを表示するために、Web の内容を指定するプロパティをそのノードがクリックされたときに、ノードにリンクします。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.Target%2A> としてプロパティを表示、 `target` 属性です。`target` 属性を `anchor` 要素は、XHTML 1.1 ドキュメント型定義では許可されません。 設定されていない、 <xref:System.Web.UI.WebControls.TreeView.Target%2A> プロパティには場合に、表示される出力、 <xref:System.Web.UI.WebControls.TreeView> XHTML 1.1 を対応にする必要があります。 詳細については、「[ASP.NET and XHTML Compliance](http://msdn.microsoft.com/ja-jp/1b78d416-66bb-43a5-ac77-c703aab55b97)」を参照してください。  
>   
>  ユーザー補助対応の Web ページを作成するときに使用を避ける必要があります、 <xref:System.Web.UI.WebControls.TreeView.Target%2A> 別のウィンドウを対象とするプロパティです。 詳細については、「[ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)」を参照してください。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.Target%2A> プロパティをそのノードがクリックされたときに、新しいウィンドウでノードにリンクされている Web コンテンツを表示します。  
  
 [!code-csharp[TreeViewTarget\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-vb[TreeViewTarget\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートの変更を追跡、 <see cref="T:System.Web.UI.WebControls.TreeView" /> 制御に格納できるように、 <see cref="T:System.Web.UI.StateBag" /> コントロールのオブジェクト。 これは、 <see cref="T:System.Web.UI.StateBag" /> 経由でアクセスでき、 <see cref="P:System.Web.UI.Control.ViewState" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A> メソッドをオーバーライドするコントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始点をマークします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生時のチェック ボックス、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールは、サーバーへのポスト間で状態を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> イベントは、チェック ボックスで、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、サーバーへのポスト間で状態を変更します。 これにより、このイベントが発生するたびに、データベースまたは表示されているコンテンツの更新などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 にもかかわらず、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> イベントが発生したポストバックのチェック ボックスを変更するは伴いませんポスト バックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> を更新するイベント、 <xref:System.Web.UI.WebControls.Label> タイミングを制御のチェック ボックス、 <xref:System.Web.UI.WebControls.TreeView> コントロールがサーバーへのポスト間で状態を変更します。  
  
 [!code-csharp[TreeViewCheckChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-vb[TreeViewCheckChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のノードが折りたたまれているときに発生、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> でノードが折りたたまれているときにイベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> の内容を更新するイベント、 <xref:System.Web.UI.WebControls.Label> 制御、ユーザーがでノードを縮小するときに、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewTreeNodeExpand\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-vb[TreeViewTreeNodeExpand\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のノードにデータ項目がバインドされると発生、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> 内のノードにデータ項目がバインドされている場合、イベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> をいくつかの条件が満たされたときに、ノードのイメージを変更するイベントです。 2 番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound> をいくつかの条件が満たされたときに、ノードのイメージを変更するイベントです。 正常に動作するこの例では、Book.xml という名前のファイルにこのコード例の後、サンプルの XML データをコピーする必要があります。 この例を表示するための独自のイメージを提供することを確認できます。  
  
 [!code-csharp[TreeViewTreeNodeDataBound\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-vb[TreeViewTreeNodeDataBound\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 次のコード例では、前のコード例のサンプル XML データを提供します。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のノードが展開されたときに発生する、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> でノードが展開されると、イベントが発生した、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> にノードのプロパティが設定されている `TreeNodeSelectAction.Expand` または `TreeNodeSelectAction.SelectExpand`, 、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> でそのノードをクリックすると、イベントが発生も、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> の内容を更新するイベント、 <xref:System.Web.UI.WebControls.Label> 制御、ユーザーが内のノードを展開するときに、 <xref:System.Web.UI.WebControls.TreeView> コントロールです。  
  
 [!code-csharp[TreeViewTreeNodeExpand\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-vb[TreeViewTreeNodeExpand\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定のノードの場合に発生、 <see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> プロパティに設定 <see langword="true" /> で展開されて、 <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合によっては、データ サイズやユーザー入力に依存するカスタムのコンテンツのためのツリー構造を静的に事前に定義するは実用的ではありません。 このため、 <xref:System.Web.UI.WebControls.TreeView> コントロールは、動的なノードをサポートしています。 ときに、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> にノードのプロパティが設定されている `true`, 、そのノードが、ノードを展開するときに、実行時設定を取得します。  
  
 ノードを動的に設定するには、最初に設定、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> をノードのプロパティ `true`します。 イベント処理の方法を次に、定義、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> プログラムを使用して、ノードを設定します。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造体にデータを置くし、するノード構造を追加、 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 値が設定されるノードのコレクション。 追加することで、ノードの構造が作成された <xref:System.Web.UI.WebControls.TreeNode> オブジェクトを <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> 親ノードのコレクション。  
  
> [!NOTE]
>  ときに、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> にノードのプロパティが設定されている `true`, 、ノードを動的に設定する必要があります。 宣言によって下に別のノードをネストすることはできません。それ以外の場合、ページで、エラーが発生します。  
  
 サポートされているブラウザー \(Internet Explorer 4.0 と互換性のあるブラウザー以降\) のクライアント側のノードも利用できます。 これにより、有効にすると、 <xref:System.Web.UI.WebControls.TreeView> サーバーにポストバックする必要性を防ぐことがそのノードを展開すると、ときに、クライアント上で動的にノードを生成するコントロール。 クライアント側のノードの作成の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> でノードを作成するイベント、 <xref:System.Web.UI.WebControls.TreeView> サーバー上に動的に管理します。 注意して、 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> にプロパティが設定されている `false` を展開するノードのイベントがクライアントで処理されていることを防ぐためにします。  
  
 [!code-csharp[TreeViewTreeNodePopulate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-vb[TreeViewTreeNodePopulate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページに UI と、コントロールを表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />, 、コントロールがページに表示されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.TreeView.Visible%2A> にプロパティが設定されている `false`, 、コントロールはレンダリングされません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>