<Type Name="ListViewInsertedEventArgs" FullName="System.Web.UI.WebControls.ListViewInsertedEventArgs">
  <TypeSignature Language="C#" Value="public class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView> 昇給の制御、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> ときに、\[挿入\] ボタンにイベント、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートをクリックすると後、 <xref:System.Web.UI.WebControls.ListView> コントロールがデータ ソースのレコードを更新します。 \(挿入ボタンは、ボタンが `CommandName` プロパティが"Insert"に設定します\)。<xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントでは、挿入された項目をデータベースから自動生成された値を取得するなどのカスタム アクションを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> オブジェクトが挿入された項目とが発生する例外の数を特定することにより、イベント処理メソッドに渡されます。 挿入操作の影響を受ける項目の数を確認するのには、使用、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> プロパティです。 使用して、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> プロパティを例外が発生したかどうかを確認します。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> プロパティです。 データ ソースを使用してに送信されていた挿入された項目のフィールドの値にアクセスする必要がある場合、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> プロパティです。  
  
 既定では、 <xref:System.Web.UI.WebControls.ListView> クリアの制御、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> を挿入する新しい項目の値を追加することができる挿入操作の後のテンプレートです。 挿入操作中に例外が発生する場合は、維持、 <xref:System.Web.UI.WebControls.ListView> コントロールを設定して挿入モードで、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> プロパティを `true`します。 これは、再バインド、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 値に項目を挿入する前に試行したときのテンプレートです。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A> コンストラクターに関するトピックを参照してください。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> のハンドラーに渡されるオブジェクト、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewInsertedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">挿入操作の影響を受ける行の数。</param>
        <param name="exception">存在する場合、挿入操作が実行されたときに発生する例外です。 例外が発生しなかった場合は使用 <see langword="null" /> このパラメーターにします。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスです。  
  
> [!NOTE]
>  このコンス トラクターは、イベントを発生させる場合に、主にコントロールの開発者によって使用されます。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスのインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>|`affectedRows` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=fullName> オブジェクトに含まれている、 `e` パラメーター。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>|初期化 `false`します。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>|初期化 `false`します。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作の影響を受ける行の数を取得します。</summary>
        <value>挿入操作の影響を受ける行の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> プロパティをデータ ソース コントロールによって返される、挿入操作の影響を受けたレコードの数を決定します。 通常、このプロパティは、次のシナリオで使用されます。  
  
-   1 つのレコードが挿入されたことを確認します。 正しく記述されていない insert ステートメントでは、複数のレコードを挿入できます。  
  
-   挿入操作中にエラーが発生しましたが、例外が発生しないために、レコードが挿入されなかったことを確認します。  
  
-   競合の検出 \(オプティミスティック同時実行制御\) をサポートするデータ ソース コントロールがあるときに、レコードが挿入されたことを確認する、 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> プロパティに設定、 `ConflictOptions.CompareAllValues` 列挙値。 このプロパティをサポートするコントロールが含まれる、 <xref:System.Web.UI.WebControls.SqlDataSource> と <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。 プロパティには、この値がある、別のユーザーによって挿入されたレコードと同じキー値がある場合、レコードが挿入されていない可能性があります。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> のハンドラーに渡されるオブジェクト、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 挿入操作中に例外が発生したかどうかを決定するイベントです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>例外を取得します \(存在する場合\) が挿入操作中に発生しました。</summary>
        <value>挿入操作中に発生した例外または <see langword="null" /> 例外が発生しなかった場合です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生した例外を処理するイベント ハンドラーで設定されている場合、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> プロパティを `true`します。 それ以外の場合、 <xref:System.Web.UI.WebControls.ListView> コントロールでは、例外が再度スローします。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> のハンドラーに渡されるオブジェクト、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 挿入操作中に例外が発生したかどうかを決定するイベントです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または挿入操作中に発生した例外が、イベント ハンドラーで処理されたかどうかを示すを設定します。</summary>
        <value>
          <see langword="true" /> 例外が処理された場合、イベント ハンドラーです。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生すると、挿入操作中を使用して、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> プロパティを例外が、イベント ハンドラーで処理されたかどうかを示します。 このプロパティに設定すると `true`, 、例外が処理され、再スローされないと見なされます。 このプロパティ設定されている場合 `false`, 、 <xref:System.Web.UI.WebControls.ListView> コントロールでは、例外が再度スローします。 どの例外が発生したかを確認するを使用して、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> プロパティです。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> のハンドラーに渡されるオブジェクト、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 挿入操作中に例外が発生したかどうかを決定するイベントです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定をユーザーの値を保持しつつ内のコントロールを入力するかどうかを示す値、 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレートです。</summary>
        <value>
          <see langword="true" /> 内のコントロールの値は保持され、ユーザーの入力の場合、 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレート <see langword="false" /> かどうか、ユーザー入力値は、コントロールの既定値に置き換えられます。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Web.UI.WebControls.ListView> コントロールからのコントロールの値にリセット、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレート挿入操作の後、既定値にします。 これは、挿入する新しい項目の値を追加できます。 保持することができます、挿入操作中に例外が発生する場合、 <xref:System.Web.UI.WebControls.ListView> コントロールを設定して挿入モードで、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> プロパティを `true`します。 これは、内のコントロールの項目を挿入する前の試行から値を維持、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートです。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 挿入操作中にエラーが発生したときに、ユーザーが入力した値を保持するプロパティです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入されたレコードのフィールドの名前と値のペアを取得します。</summary>
        <value>挿入したレコードのフィールドの名前\/値ペア。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 挿入したレコードのフィールドの値にアクセスするプロパティです。 たとえば、挿入されたレコードのログを保持するのにこれらの値を使用できます。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> プロパティを返します。、 <xref:System.Collections.Specialized.OrderedDictionary> を実装するオブジェクト、 <xref:System.Collections.Specialized.IOrderedDictionary> インターフェイスです。<xref:System.Collections.Specialized.OrderedDictionary> オブジェクトを含む <xref:System.Collections.DictionaryEntry> 挿入されたレコードのフィールドを表すオブジェクト。 フィールド名にアクセスするには、使用、 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=fullName> のプロパティ、 <xref:System.Collections.Specialized.OrderedDictionary> オブジェクトです。 同様を使用してフィールドの値にアクセスすることができます、 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=fullName> プロパティです。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.OrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。 インデクサーを使用するメリットは、フィールドの値が直接返されることです。 データ ソース フィールドの順序に依存するコントロール \(よう <xref:System.Web.UI.WebControls.AccessDataSource>\) フィールドの値にインデックスによってのみアクセスできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
      </Docs>
    </Member>
  </Members>
</Type>