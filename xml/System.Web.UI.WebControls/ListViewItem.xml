<Type Name="ListViewItem" FullName="System.Web.UI.WebControls.ListViewItem">
  <TypeSignature Language="C#" Value="public class ListViewItem : System.Web.UI.Control, System.Web.UI.IDataItemContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewItem extends System.Web.UI.Control implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewItem" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.ListView" /> コントロール内の個別の項目を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListViewItem> で個々 の項目を表すクラスが使用される、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 個々 のアイテムは通常の基になるデータ ソース内のレコードを表す、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 内の各項目、 <xref:System.Web.UI.WebControls.ListView> コントロールにある次の表に示すように、指定された項目の種類。  
  
|項目の種類|説明|  
|-----------|--------|  
|<xref:System.Web.UI.WebControls.ListViewItemType.DataItem>|内のデータ項目、 <xref:System.Web.UI.WebControls.ListView> コントロールです。|  
|<xref:System.Web.UI.WebControls.ListViewItemType.InsertItem>|\[アイテムの挿入、 <xref:System.Web.UI.WebControls.ListView> コントロールです。|  
|<xref:System.Web.UI.WebControls.ListViewItemType.EmptyItem>|空の項目で、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 空の項目が表示されるときに、 <xref:System.Web.UI.WebControls.ListView> コントロールに表示するにはいくつかのレコードがないときに、グループ、または、 <xref:System.Web.UI.WebControls.ListView> コントロールには、多くのレコードの表示はありません。|  
  
 型を決定する、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクトを使用して、 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> プロパティです。  
  
 使用して、コントロールを取得するには、アイテムに他のコントロールが含まれている場合、 <xref:System.Web.UI.Control.Controls%2A> 項目のコレクション。 場合は、コントロールの <xref:System.Web.UI.Control.ID%2A> プロパティが設定されて、使用することも、 <xref:System.Web.UI.Control.FindControl%2A> コントロールを検索するメソッドです。  
  
 インスタンスの初期プロパティ値の一覧については <xref:System.Web.UI.WebControls.ListViewItem>, を参照してください、 <xref:System.Web.UI.WebControls.ListViewItem.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListViewItem> クラスが作成される項目のプロパティにアクセスする、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItem/CS/ListViewItemCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListViewItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItem/VB/ListViewItemVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="P:System.Web.UI.WebControls.ListView.Items" />
    <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
    <altmember cref="M:System.Web.UI.Control.FindControl(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewItem (System.Web.UI.WebControls.ListViewItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.WebControls.ListViewItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewItem.#ctor(System.Web.UI.WebControls.ListViewItemType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListViewItemType" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 列挙値のいずれか。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListViewItem" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクトです。  
  
 <xref:System.Web.UI.WebControls.ListViewItem> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A>|`itemType` パラメーターの値。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.Items" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewItem.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または基になるデータ オブジェクトを設定、 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> オブジェクトにバインドします。</summary>
        <value>基になるデータ オブジェクトを <see cref="T:System.Web.UI.WebControls.ListViewItem" /> オブジェクトにバインドします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewItem.DataItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインドされているデータ項目のインデックスを取得、 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> コントロールです。</summary>
        <value>バインドされているデータ項目のインデックス、 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 制御します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayIndex">
      <MemberSignature Language="C#" Value="public virtual int DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewItem.DisplayIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されるデータ項目の位置を取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>表示されるように、データ項目の位置、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ListViewItemType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ListViewItemType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItemType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目の種類を取得、 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> 項目の種類を決定するプロパティ、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクトを表している次の表に記載されています。  
  
|項目の種類|説明|  
|-----------|--------|  
|<xref:System.Web.UI.WebControls.ListViewItemType.DataItem>|内のデータ項目、 <xref:System.Web.UI.WebControls.ListView> コントロールです。|  
|<xref:System.Web.UI.WebControls.ListViewItemType.InsertItem>|\[アイテムの挿入、 <xref:System.Web.UI.WebControls.ListView> コントロールです。|  
|<xref:System.Web.UI.WebControls.ListViewItemType.EmptyItem>|空の項目で、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 空の項目が表示されるときに、 <xref:System.Web.UI.WebControls.ListView> コントロールに表示するにはいくつかのレコードがないときに、グループ、または、 <xref:System.Web.UI.WebControls.ListView> コントロールには、多くのレコードの表示はありません。|  
  
 通常、このプロパティを使用するには、操作を実行する前に、項目の種類を判断します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> プロパティが作成される項目がデータ項目であるかどうかを確認します。 データ項目は、電子メール アドレスが斜体で表示されます。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListViewItem> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewItem\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItem/CS/ListViewItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListViewItem\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItem/VB/ListViewItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewItem.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベントのデータ。</param>
        <summary>ページの ASP.NET サーバー コントロールの階層構造のイベントを渡すかどうかを決定します。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
  </Members>
</Type>