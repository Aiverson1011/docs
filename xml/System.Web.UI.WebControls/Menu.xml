<Type Name="Menu" FullName="System.Web.UI.WebControls.Menu">
  <TypeSignature Language="C#" Value="public class Menu : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Menu extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("MenuItemClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MenuDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET Web ページにメニューを表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [メニュー項目](#menu_items)  
  
-   [静的なデータ](#static_data)  
  
-   [データへのバインド](#binding_to_data)  
  
-   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.Menu> コントロール、ASP.NET Web ページにメニューを表示するために使用しと組み合わせて使用されて多くの場合、 <xref:System.Web.UI.WebControls.SiteMapDataSource> Web サイトを移動するコントロール。<xref:System.Web.UI.WebControls.Menu> コントロールは、次の機能をサポートします。  
  
-   階層化されたデータ ソースにバインドされるコントロールのメニュー項目は、データ バインディング。  
  
-   サイト ナビゲーションの統合により、 <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールです。  
  
-   プログラムでアクセス、 <xref:System.Web.UI.WebControls.Menu> オブジェクト モデルを動的にメニューを作成、メニュー項目の設定、プロパティを設定および具合です。  
  
-   テーマ、ユーザー定義のイメージ、スタイル、およびユーザー定義のテンプレートを使用したカスタマイズ可能な外観です。  
  
 ユーザーがメニュー項目をクリックすると、 <xref:System.Web.UI.WebControls.Menu> コントロールのリンクされた Web ページに移動または単に、サーバーに投稿できます。 場合、 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> メニュー項目のプロパティが設定されて、 <xref:System.Web.UI.WebControls.Menu> コントロールがリンク先のページに移動。 それ以外の場合、サーバーで処理するためにページをポストバックします。 同じウィンドウまたはフレームとして既定では、リンク先のページが表示される、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 別のウィンドウまたはフレームでは、リンクされたコンテンツを表示するには、使用、 <xref:System.Web.UI.WebControls.Menu.Target%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu.Target%2A> プロパティがコントロール内のすべてのメニュー項目に影響します。 ウィンドウまたは個々 のメニュー項目のフレームを指定する、 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> のプロパティ、 <xref:System.Web.UI.WebControls.MenuItem> オブジェクトに直接します。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールには、2 種類のメニューが表示されます。 静的メニューと動的メニュー。 静的メニューに表示されます、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 既定では、ルート レベル \(レベル 0\) にあるメニュー項目は、静的メニューに表示されます。 静的メニュー内の他のメニュー レベル \(静的サブメニュー\) を表示するには設定して、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティです。 メニュー項目 \(ある場合\) で指定された値よりも高いレベルで、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティが動的メニューに表示されます。 動的メニューには、動的なサブメニューを含む親メニュー項目の上に、ユーザーがマウス ポインターを置いた場合にのみが表示されます。 動的メニューは、特定の期間後に自動的に消滅します。 使用して、 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 、期間を指定するプロパティです。  
  
> [!NOTE]
>  動的メニューには、メニュー以外の場所、ユーザーがクリックしたときにも表示されなくなります。  
  
 設定して動的メニューに表示されるレベル数を制限することもできます。、 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> プロパティです。 指定した値よりも高いメニュー レベルは破棄されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Menu> 内で使用するコントロールは設計されていません、 <xref:System.Web.UI.UpdatePanel> コントロールです。 追加することができます、 <xref:System.Web.UI.WebControls.Menu> コントロール外のページにのみ、 <xref:System.Web.UI.UpdatePanel> コントロールです。<xref:System.Web.UI.UpdatePanel> コントロールは、ポストバック時にページ全体が更新ではなくページの選択した領域の更新に使用されます。 詳細については、[UpdatePanel Control Overview](http://msdn.microsoft.com/ja-jp/29a2265d-9674-4c19-b70e-e5560ee9689a) および [Partial\-Page Rendering Overview](http://msdn.microsoft.com/ja-jp/5c12736d-d9e9-464a-9388-3fe0f9f49e49) を参照してください。  
  
<a name="menu_items"></a>   
## メニュー項目  
 A <xref:System.Web.UI.WebControls.Menu> で表されるメニュー項目のツリーのコントロールが構成される <xref:System.Web.UI.WebControls.MenuItem> オブジェクトです。 最上位レベル \(レベル 0\) にあるメニュー項目には、ルート メニュー項目が呼び出されます。 親メニュー項目を持つメニュー項目には、子メニュー項目が呼び出されます。 すべてのルート メニュー項目が格納されている、 <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションです。 子メニュー項目が親メニュー項目に格納されている <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> コレクションです。  
  
 各メニュー項目が、 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> と <xref:System.Web.UI.WebControls.MenuItem.Value%2A> プロパティです。 値、 <xref:System.Web.UI.WebControls.MenuItem.Text%2A> でプロパティの表示、 <xref:System.Web.UI.WebControls.Menu> コントロール、中に、 <xref:System.Web.UI.WebControls.MenuItem.Value%2A> メニュー項目に関連付けられているポストバック イベントに渡されるデータなどのメニュー項目に関するその他のデータを格納するプロパティを使用します。 示された別の Web ページにメニュー項目を移動できますをクリックすると、 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> プロパティです。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.MenuItem.NavigateUrl%2A> メニュー項目のプロパティが設定されていない、 <xref:System.Web.UI.WebControls.Menu> コントロールは、メニュー項目がクリックされたときに処理するためのサーバーにページを単に送信します。  
  
 設定して、メニュー項目にイメージを表示することができます必要に応じて、 <xref:System.Web.UI.WebControls.MenuItem.ImageUrl%2A> プロパティです。  
  
 メニュー項目の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.MenuItem>します。  
  
<a name="static_data"></a>   
## 静的なデータ  
 最も単純なデータ モデル、 <xref:System.Web.UI.WebControls.Menu> コントロールは、静的メニュー項目です。 宣言型構文を使用して、静的メニュー項目を表示するには、まずを開いたり閉じたり `<Items>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 次に、メニュー構造を入れ子により作成 `<asp:MenuItem>` 開始タグと終了の間で要素 `<Items>` タグ。 各 `<asp:MenuItem>` 要素がコントロールのメニュー項目を表しにマップする <xref:System.Web.UI.WebControls.MenuItem> オブジェクトです。 各メニュー項目のプロパティを設定するにはの属性を設定してその `<asp:MenuItem>` 要素。 サブメニュー項目を作成するには、追加入れ子 `<asp:MenuItem>` 開始タグと終了の間で要素 `<asp:MenuItem>` 親メニュー項目のタグ。  
  
<a name="binding_to_data"></a>   
## データへのバインド  
 <xref:System.Web.UI.WebControls.Menu> コントロールになど、階層化されたデータ ソースの管理を使用して、 <xref:System.Web.UI.WebControls.XmlDataSource> コントロールまたは <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールです。 階層化されたデータ ソース コントロールにバインドする、 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Menu> への制御、 <xref:System.Web.UI.Control.ID%2A> データ ソース コントロールの値。<xref:System.Web.UI.WebControls.Menu> コントロールが自動的に指定されたデータ ソース コントロールにバインドします。 これは、優先データにバインドする方法です。  
  
 メニュー項目を各データ項目が複数のプロパティ持つ XML 要素属性がいくつか\) などにはが含まれているデータ ソースにバインドがによって返される値に表示される状況、 `ToString` 既定ではデータ項目のメソッドです。 XML 要素の場合は、メニュー項目は、要素名\] メニューの \[ツリーの基になる構造を示していますが、あまり役に立ちませんそれ以外の場合を表示します。 メニュー項目を特定のデータ項目のプロパティにバインドするにを使用して、 <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> メニュー項目のバインディングを指定するコレクション。<xref:System.Web.UI.WebControls.Menu.DataBindings%2A> コレクションに含まれる <xref:System.Web.UI.WebControls.MenuItemBinding> データ項目とそのバインド先のメニュー項目間のリレーションシップを定義するオブジェクト。 ノードに表示するには、バインドとデータ項目のプロパティの条件を指定できます。 メニュー項目のバインディングの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.MenuItemBinding>します。  
  
 空のノードを作成することはできません、 <xref:System.Web.UI.WebControls.Menu> コントロールを設定して、 <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> または <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> プロパティを空の文字列 \(""\) です。 プロパティを設定しないのと同じ効果を持つ空の文字列にこれらのプロパティを設定します。 その場合は、 <xref:System.Web.UI.WebControls.Menu> コントロールを使用して既定のバインドを作成、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> プロパティです。 詳細については、次を参照してください。 [データベースへのバインド](http://msdn.microsoft.com/ja-jp/ab7b2846-975b-4057-a948-45527497c742)します。  
  
<a name="customizing_the_user_interface"></a>   
## ユーザー インターフェイスのカスタマイズ  
 外観をカスタマイズする方法はたくさんあります、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 最初に、指定するかどうか、 <xref:System.Web.UI.WebControls.Menu> コントロールを表示するか横書きに設定して、 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> プロパティです。 \(フォント サイズや色\) などの別のスタイルは、各メニュー項目の種類も指定できます。  
  
 コントロールの外観をカスタマイズするカスケード スタイル シート \(CSS\) を使用する場合は、インライン スタイルまたは個別の CSS ファイルのいずれかを使用します。 インライン スタイルと独立した CSS ファイルの両方を使用して予期しない結果が発生する可能性があります。 コントロールのスタイル シートの使用に関する詳細については、次を参照してください。 [ASP.NET Web Server Controls and CSS Styles](http://msdn.microsoft.com/ja-jp/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)します。  
  
 次の表は、利用可能なメニュー項目のスタイルを示します。  
  
|メニュー項目スタイルのプロパティ|説明|  
|----------------------|--------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>|マウス ポインターを置いたときに動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>|個々 の動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>|動的メニューのスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>|現在選択されている動的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>|マウス ポインターを置いたときに、静的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>|各静的メニュー項目のスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>|静的メニューのスタイル設定。|  
|<xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>|現在選択されている静的メニュー項目のスタイル設定。|  
  
 個々 のスタイル プロパティを設定するには、代わりに、次のスタイルのコレクションを使用して、レベルに基づいてメニュー項目に適用されるスタイルを指定できます。  
  
|スタイル レベルのコレクション|説明|  
|---------------------|--------|  
|<xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A>|コレクション <xref:System.Web.UI.WebControls.MenuItemStyle> レベルに基づいてメニュー項目のスタイルを制御するオブジェクト。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A>|コレクション <xref:System.Web.UI.WebControls.MenuItemStyle> のスタイルを制御するオブジェクトは、レベルに基づいてメニュー項目を選択します。|  
|<xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A>|コレクション <xref:System.Web.UI.WebControls.MenuItemStyle> レベルに基づいてサブメニュー項目のスタイルを制御するオブジェクト。|  
  
 コレクション内の最初のスタイルは、メニュー ツリーの最初の深さのレベルにあるメニュー項目のスタイルに対応します。 コレクション内の 2 番目のスタイルは、メニューのツリーで 2 つ目の深さのレベルにあるメニュー項目のスタイルに対応します。 これはほとんどの場合に使用内容スタイルのナビゲーション メニューのテーブルを生成する特定の深さにあるメニュー項目がサブメニューがあるかどうかに関係なく、同じ外観を持つ必要があります。  
  
> [!NOTE]
>  スタイルを定義する前の表に示したスタイル レベルのコレクションのいずれかを使用する場合、 <xref:System.Web.UI.WebControls.Menu> コントロール、これらのスタイル設定は、個々 のメニュー項目のスタイル プロパティを上書きします。  
  
 表示されたイメージをカスタマイズするのには、コントロールの外観を変更する方法、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 次の表に示すようにプロパティを設定して、独自のカスタム イメージ コントロールのさまざまな部分を指定できます。  
  
|イメージのプロパティ|説明|  
|----------------|--------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A>|他のメニュー項目と区別するための動的メニュー項目の下部に表示される省略可能なイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A>|サブメニューがあることを示すために動的メニュー項目に表示される省略可能なイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A>|他のメニュー項目と区別するための動的メニュー項目の上部に表示される省略可能なイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A>|追加のメニュー項目の表示まで、ユーザーがスクロールできることを示すためにメニュー項目の下部に表示されるイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A>|追加のメニュー項目の表示までをユーザーがスクロールできるを示すためにメニュー項目の上部に表示されるイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A>|他のメニュー項目と区別するための静的メニュー項目の下部に表示される省略可能なイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A>|サブメニューがあることを示すために、静的メニュー項目に表示される省略可能なイメージ。|  
|<xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A>|他のメニュー項目と区別するための静的メニュー項目の上部に表示される省略可能なイメージ。|  
  
 ユーザー インターフェイス \(UI\) の完全な制御のカスタム テンプレートを定義できます、 <xref:System.Web.UI.WebControls.Menu> 次のテンプレートのプロパティを使用して制御します。  
  
|テンプレートのプロパティ|説明|  
|------------------|--------|  
|<xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A>|動的メニュー項目に表示されるカスタム コンテンツを格納しているテンプレートです。|  
|<xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A>|このテンプレートは、静的メニュー項目に表示されるカスタム コンテンツが含まれています。|  
  
 動的メニューを親メニュー項目に対して相対的の垂直および水平方向の位置を設定して制御することができます、 <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> と <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> プロパティそれぞれします。 静的メニューの静的なサブメニュー項目のインデントを制御する、 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> プロパティです。  
  
<a name="events"></a>   
## イベント  
 <xref:System.Web.UI.WebControls.Menu> コントロールには、プログラム可能ないくつかのイベントが用意されています。 これにより、イベントが発生するたびに、カスタムのルーチンを実行できます。 次の表には、サポートされているイベントが一覧表示します。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemClick>|メニュー項目がクリックされたときに発生します。 このイベントは通常の同期に使用する <xref:System.Web.UI.WebControls.Menu> \] ページで別のコントロールでのコントロールです。|  
|<xref:System.Web.UI.WebControls.Menu.MenuItemDataBound>|メニュー項目がデータにバインドされている場合に発生します。 このイベントは通常のレンダリング前に、メニュー項目を変更する使用、 <xref:System.Web.UI.WebControls.Menu> コントロールです。|  
  
<a name="accessibility"></a>   
## ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) と [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:Menu  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    DisappearAfter="integer"  
    DynamicBottomSeparatorImageUrl="uri"  
    DynamicEnableDefaultPopOutImage="True|False"  
    DynamicHorizontalOffset="integer"  
    DynamicItemFormatString="string"  
    DynamicPopOutImageTextFormatString="string"  
    DynamicPopOutImageUrl="uri"  
    DynamicTopSeparatorImageUrl="uri"  
    DynamicVerticalOffset="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ItemWrap="True|False"  
    MaximumDynamicDisplayLevels="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnMenuItemClick="MenuItemClick event handler"  
    OnMenuItemDataBound="MenuItemDataBound event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    Orientation="Horizontal|Vertical"  
    PathSeparator="string"  
    runat="server"  
    ScrollDownImageUrl="uri"  
    ScrollDownText="string"  
    ScrollUpImageUrl="uri"  
    ScrollUpText="string"  
    SkinID="string"  
    SkipLinkText="string"  
    StaticBottomSeparatorImageUrl="uri"  
    StaticDisplayLevels="integer"  
    StaticEnableDefaultPopOutImage="True|False"  
    StaticItemFormatString="string"  
    StaticPopOutImageTextFormatString="string"  
    StaticPopOutImageUrl="uri"  
    StaticSubMenuIndent="size"  
    StaticTopSeparatorImageUrl="uri"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:MenuItemBinding  
                    DataMember="string"  
                    Depth="integer"  
                    Enabled="True|False"  
                    EnabledField="string"  
                    FormatString="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopOutImageUrl="uri"  
                    PopOutImageUrlField="string"  
                    Selectable="True|False"  
                    SelectableField="string"  
                    SeparatorImageUrl="uri"  
                    SeparatorImageUrlField="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <DynamicHoverStyle />  
        <DynamicItemTemplate>  
            <!-- child controls -->  
        </DynamicItemTemplate>  
        <DynamicMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <DynamicSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <Items />  
        <LevelMenuItemStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelMenuItemStyles>  
        <LevelSelectedStyles>  
                <asp:MenuItemStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ItemSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSelectedStyles>  
        <LevelSubMenuStyles>  
                <asp:SubMenuStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelSubMenuStyles>  
        <StaticHoverStyle />  
        <StaticItemTemplate>  
            <!-- child controls -->  
        </StaticItemTemplate>  
        <StaticMenuItemStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|  
                X-Small|Small|Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticMenuStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <StaticSelectedStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ItemSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:Menu>  
```  
  
   
  
## 例  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=192868)します。  
  
 次のコード例では、作成、 <xref:System.Web.UI.WebControls.Menu> コントロール宣言構文を使用して静的メニュー項目にします。  
  
 [!code-csharp[MenuDeclarative\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDeclarative/CS/menudeclarativecs.aspx#1)]
 [!code-vb[MenuDeclarative\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDeclarative/VB/menudeclarativevb.aspx#1)]  
  
 次のコード例では、バインド、 <xref:System.Web.UI.WebControls.Menu> への制御、 <xref:System.Web.UI.WebControls.SiteMapDataSource> コントロールです。 正常に動作するこの例では、以下のサンプル サイト マップ データを Web.sitemap という名前のファイルにコピーする必要があります。  
  
 [!code-csharp[MenuDataBind\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDataBind/CS/menudatabindcs.aspx#1)]
 [!code-vb[MenuDataBind\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDataBind/VB/menudatabindvb.aspx#1)]  
  
 前の例のサンプル サイト マップ データを次に示します。  
  
```  
<siteMap>  
  <siteMapNode url="~\Home.aspx"   
    title="Home"  
    description="Home">  
    <siteMapNode url="~\Music.aspx"  
      title="Music"  
      description="Music">  
      <siteMapNode url="~\Classical.aspx"   
        title="Classical"  
        description="Classical"/>  
      <siteMapNode url="~\Rock.aspx"  
        title="Rock"  
        description="Rock"/>  
      <siteMapNode url="~\Jazz.aspx"  
        title="Jazz"  
        description="Jazz"/>  
    </siteMapNode>  
    <siteMapNode url="~\Movies.aspx"  
      title="Movies"  
      description="Movies">  
      <siteMapNode url="~\Action.aspx"  
        title="Action"  
        description="Action"/>  
      <siteMapNode url="~\Drama.aspx"  
        title="Drama"  
        description="Drama"/>  
      <siteMapNode url="~\Musical.aspx"  
        title="Musical"  
        description="Musical"/>  
    </siteMapNode>  
  </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Menu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.Menu> クラスです。 動的に追加する、 <xref:System.Web.UI.WebControls.Menu> コントロールをページ、\[新しい <xref:System.Web.UI.WebControls.Menu> オブジェクト、そのプロパティを設定し、追加するに、 <xref:System.Web.UI.Control.Controls%2A> などのコンテナーのコレクションが制御 <xref:System.Web.UI.WebControls.PlaceHolder>します。  
  
   
  
## 例  
 次のコード例をコンス トラクターを使用して動的に追加する方法を示しています、 <xref:System.Web.UI.WebControls.Menu> ページにコントロールできます。  
  
 [!code-csharp[MenuCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuCtor/CS/menuctorcs.aspx#1)]
 [!code-vb[MenuCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuCtor/VB/menuctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML のコンテンツを表示する出力ストリーム。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに表示する必要のある HTML 属性およびスタイルを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu> のオーバーライドを制御、 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> 再設定する方法、 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> プロパティを <xref:System.String.Empty>します。 このメンバーはからのカスタム コントロールを派生している場合、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.Menu> クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlCollection" /> コントロールの子コントロールを格納している <see cref="T:System.Web.UI.WebControls.Menu" /> を取得します。</summary>
        <value>子コントロールを格納している <see cref="T:System.Web.UI.ControlCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.Menu.Controls%2A> property allows you programmatic access to the instance of the <xref:System.Web.UI.ControlCollection> class for the <xref:System.Web.UI.WebControls.Menu> control. You can add controls to the collection, remove controls from the collection, or iterate through the server controls in the collection.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールの子コントロールを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This member is primarily used by control developers when deriving a custom control from the <xref:System.Web.UI.WebControls.Menu> class.  
  
 This method is called by the ASP.NET infrastructure to notify any controls that use composition\-based implementation, including controls that derive from <xref:System.Web.UI.WebControls.CompositeDataBoundControl> and <xref:System.Web.UI.WebControls.CompositeControl>. to create any child controls they contain in preparation for postback or rendering.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースを <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールにバインドします。 このメソッドは継承できません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This member is used primarily by control developers when deriving a custom control from the <xref:System.Web.UI.WebControls.Menu> class.  
  
 Use the <xref:System.Web.UI.WebControls.Menu.DataBind%2A> method to bind data from a data source to the <xref:System.Web.UI.WebControls.Menu> control. This method resolves all data\-binding expressions in the active template of the control.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Data-bound controls should override <see cref="M:System.Web.UI.WebControls.Menu.PerformDataBinding" /> instead of <see cref="M:System.Web.UI.WebControls.Menu.DataBind" />. If <see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> is overridden, the <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> and <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" /> events are raised in the wrong order.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目とそのバインド先のメニュー項目との間の関係を定義する <see cref="T:System.Web.UI.WebControls.MenuItemBinding" /> オブジェクトのコレクションを取得します。</summary>
        <value>データ項目とそのバインド先のメニュー項目との間の関係を表す <see cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection contains <xref:System.Web.UI.WebControls.MenuItemBinding> objects that define the relationship between a data item and the menu item it is binding to. When binding to a data source where each data item contains multiple properties \(such as an XML element with several attributes\), a menu item displays the value returned by the **languageKeyword tag is not supported!!!!**  
 method of the data item by default. In the case of an XML element, the menu item displays the element name, which shows the underlying structure of the tree, but is not very useful otherwise. You can bind a menu item to a specific data item property by specifying menu item bindings.  
  
 When defining the relationship between a data item and a menu item, you must specify both the criteria for binding and the property of a data item to bind to. The criteria indicate when a data item should be bound to a menu item. The criteria can be specified with a depth, a data member, or both. The depth specifies the menu level that gets bound. For example, if you specify a depth of 0, all menu items in the tree structure at level 0 are bound using the menu item binding. A data member specifies the type of the data item in the underlying data source, but can represent different information depending on the data source. For example, the data member for an XML element specifies the name of the element.  
  
 If multiple <xref:System.Web.UI.WebControls.MenuItemBinding> objects are defined that conflict with each other, the <xref:System.Web.UI.WebControls.Menu> control applies the menu item bindings in the following order of precedence:  
  
1.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines both a depth and a data member.  
  
2.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines only the depth.  
  
3.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines only the data member.  
  
4.  The <xref:System.Web.UI.WebControls.MenuItemBinding> object that defines neither the depth nor the data member.  
  
 Once the binding criteria are established, you can then bind a property of a <xref:System.Web.UI.WebControls.MenuItem> object that is able to be bound to an attribute or field of a data item. For example, you can bind the <xref:System.Web.UI.WebControls.MenuItem.Text%2A> property of a menu item to the text attribute on an XML element by setting the <xref:System.Web.UI.WebControls.MenuItemBinding.TextField%2A> property of a <xref:System.Web.UI.WebControls.MenuItemBinding> object. You can also bind to a static value. If you set the <xref:System.Web.UI.WebControls.MenuItemBinding.Text%2A> property of a <xref:System.Web.UI.WebControls.MenuItemBinding> object, all menu items to which the <xref:System.Web.UI.WebControls.MenuItemBinding> object is applied share the same static text value. For more information on binding the properties of a <xref:System.Web.UI.WebControls.MenuItem> object to a value, see <xref:System.Web.UI.WebControls.MenuItemBinding>.  
  
 Although the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection can be programmatically populated, it is usually set declaratively. To specify the menu item bindings, first nest opening and closing **languageKeyword tag is not supported!!!!**  
 tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.Menu> control. Next, place **languageKeyword tag is not supported!!!!**  
 elements between the opening and closing **languageKeyword tag is not supported!!!!**  
 tags for each menu item binding you want to specify.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection to define the relationship between the fields of an <xref:System.Web.UI.WebControls.XmlDataSource> control and the menu items in a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  
  
 [!code-csharp[MenuBindings\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuBindings/CS/menubindingscs.aspx#1)]
 [!code-vb[MenuBindings\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuBindings/VB/menubindingsvb.aspx#1)]  
  
 The following is sample site map data for the previous example.  
  
```  
<MapHomeNode url="~\Home.aspx"   
  title="Home"  
  description="Home">  
  <MapNode url="~\Music.aspx"  
    title="Music"  
    description="Music">  
    <MapNode url="~\Classical.aspx"   
      title="Classical"  
      description="Classical"/>  
    <MapNode url="~\Rock.aspx"  
      title="Rock"  
      description="Rock"/>  
    <MapNode url="~\Jazz.aspx"  
      title="Jazz"  
      description="Jazz"/>  
  </MapNode>  
  <MapNode url="~\Movies.aspx"  
    title="Movies"  
    description="Movies">  
    <MapNode url="~\Action.aspx"  
      title="Action"  
      description="Action"/>  
    <MapNode url="~\Drama.aspx"  
      title="Drama"  
      description="Drama"/>  
    <MapNode url="~\Musical.aspx"  
      title="Musical"  
      description="Musical"/>  
  </MapNode>  
</MapHomeNode>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBinding" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="DisappearAfter">
      <MemberSignature Language="C#" Value="public int DisappearAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisappearAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DisappearAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターがメニューの上から離れた後で動的メニューを表示しておく時間を取得または設定します。</summary>
        <value>マウス ポインターがメニューの上から離れた後で動的メニューを表示しておく時間 \(ミリ秒単位\)。 既定値は 500 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、動的メニューはときにマウス ポインターが上から離れた、メニュー、特定の期間後に自動的に消えます。 使用して、 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> 、期間を指定するプロパティです。  
  
> [!NOTE]
>  動的メニューは、ユーザーが、メニューの外部でクリックすると直ちに見えなくなります。  
  
 動的メニューはこのプロパティを\-1 に設定して自動的に消去するかを指定することもできます。 この場合は、動的メニュー項目には、メニューの外側をクリックしたときにのみが消えます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.DisappearAfter%2A> プロパティをユーザーが 2 秒以上、メニューからマウス ポインターを移動した後が動的メニューを消去する必要があります。  
  
 [!code-csharp[MenuDisappearAfter\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDisappearAfter/CS/menudisappearaftercs.aspx#1)]
 [!code-vb[MenuDisappearAfter\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDisappearAfter/VB/menudisappearaftervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値は、\-1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>他のメニュー項目と区別するために各動的メニュー項目の下部に表示するイメージの URL を取得または設定します。</summary>
        <value>各動的メニュー項目の下部に表示される区切り線イメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> property to specify an optional custom image to display at the bottom of each dynamic menu item. This image acts as a separator between menu items and is commonly an image of a line.  
  
> [!NOTE]
>  You can also display a separator image at the top of each dynamic menu item by setting the <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> property.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> property to display a separator image at the bottom of each dynamic menu item.  
  
 [!code-csharp[MenuDynamicBottomSeparatorImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/CS/menudynamicbottomseparatorimageurlcs.aspx#1)]
 [!code-vb[MenuDynamicBottomSeparatorImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicBottomSeparatorImageUrl/VB/menudynamicbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool DynamicEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニュー項目にサブメニューがあることを示す組み込みイメージを表示するかどうかを示す値を取得または設定します。</summary>
        <value>サブメニューのある動的メニュー項目に対して組み込みイメージを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu by positioning the mouse pointer over the menu item. There are two ways to display this image:  
  
-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property to **languageKeyword tag is not supported!!!!**  
     to use the built\-in image \(default\).  
  
-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property to specify a custom image.  
  
 If the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property is set, that image overrides the built\-in image.  
  
> [!NOTE]
>  If the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property is not set and the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property is set to **languageKeyword tag is not supported!!!!**  
> , no image is displayed.  
  
 You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> property. This text is displayed as a ToolTip when the user positions the mouse pointer over the image. This text also provides assistive technology devices with a description of the image that can be used to make the control more accessible.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property to hide the image that indicates that a dynamic menu item has a submenu. The <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property must also be set to an empty string \(""\) for the image to be hidden.  
  
 [!code-csharp[MenuDynamicEnableDefaultPopOutImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/CS/menudynamicenabledefaultpopoutimagecs.aspx#1)]
 [!code-vb[MenuDynamicEnableDefaultPopOutImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicEnableDefaultPopOutImage/VB/menudynamicenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHorizontalOffset">
      <MemberSignature Language="C#" Value="public int DynamicHorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicHorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューを横方向にシフトするピクセル数を、親メニュー項目に対する相対値として取得または設定します。</summary>
        <value>動的メニューを親メニュー項目に対して相対的に横方向にシフトするピクセル数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> property to adjust the horizontal position of a dynamic menu relative to its parent menu item. This property affects the position of a dynamic menu differently depending on whether the <xref:System.Web.UI.WebControls.Menu> control is displayed vertically or horizontally \(as specified by the <xref:System.Web.UI.WebControls.Menu.Orientation%2A> property\). The following table describes the differences.  
  
|Orientation|Description|  
|-----------------|-----------------|  
|Horizontal|By default, a dynamic menu is displayed directly below its parent menu item. Setting this property shifts the dynamic menu position horizontally from this base position.|  
|Vertical|By default, a dynamic menu item is displayed next to its parent menu item without any spacing in between. Setting this property controls the horizontal spacing between the dynamic menu and its parent menu item.|  
  
> [!NOTE]
>  You can set this property to a negative value to shift a dynamic menu in a negative direction. If you are displaying a vertical menu, a negative value causes a dynamic menu and its parent menu item to overlap.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset%2A> property to specify a 5\-pixel gap between a dynamic menu and its parent menu item.  
  
 [!code-csharp[MenuDynamicHorizontalOffset\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-vb[MenuDynamicHorizontalOffset\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="DynamicHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style DynamicHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style DynamicHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが上に置かれているときの動的メニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>マウス ポインターが上に置かれているときの動的メニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> 上にマウス ポインターが置かれたときに動的メニュー項目の外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.Style> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.Style> オブジェクト \(たとえば、 `DynamicHoverStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `DynamicHoverStyle.ForeColor`\)。  
  
 動的メニュー項目のスタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A> プロパティをユーザーは、上にマウス ポインターを置いたときに、空の薄い青に動的メニュー項目の背景色を変更します。  
  
 [!code-csharp[MenuDynamicHoverStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHoverStyle/CS/menudynamichoverstylecs.aspx#1)]
 [!code-vb[MenuDynamicHoverStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHoverStyle/VB/menudynamichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemFormatString">
      <MemberSignature Language="C#" Value="public string DynamicItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的に表示されるすべてのメニュー項目と共に表示される追加テキストを取得または設定します。</summary>
        <value>すべてのメニュー項目と共に表示される追加のテキストまたは文字。 このプロパティの既定値は "{0}" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This property can be used to insert text to format dynamic menu items in a menu displayed on mobile devices. The <xref:System.Web.UI.WebControls.Menu> control supports templates for the display of static and dynamic menu items. For mobile devices, templates are ignored, so this property allows you to add characters or text to apply formatting to menu items without using a template.  
  
> [!NOTE]
>  To achieve consistent formatting when you use this property, you should also set the <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> property if you want the formatting to be identical between the static and dynamic menu items.  
  
 If both template formatting and this property are applied, the template formatting is ignored for mobile devices.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> and <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> properties to add text to each menu item.  
  
 [!code-csharp[MenuItemFormatString\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-vb[MenuItemFormatString\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate DynamicItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate DynamicItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューに表示されるカスタム コンテンツを格納しているテンプレートを取得または設定します。</summary>
        <value>動的メニューのカスタム コンテンツを格納している <see cref="T:System.Web.UI.ITemplate" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Instead of using the built\-in rendering for a dynamic menu, you can define your own look and feel for a dynamic menu item by using the <xref:System.Web.UI.WebControls.Menu.DynamicItemTemplate%2A> property. To specify a custom template for a dynamic menu item, first place **languageKeyword tag is not supported!!!!**  
 tags between the opening and closing tags of the <xref:System.Web.UI.WebControls.Menu> control. You can then list the contents of the template between the opening and closing **languageKeyword tag is not supported!!!!**  
 tags. You can further control the style of a dynamic menu by using the <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> property.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューの中のメニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>動的メニューの中のメニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> property to control the appearance of the menu items within a dynamic menu. This property is read\-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form **parameterReference tag is not supported!!!!**  
, where **parameterReference tag is not supported!!!!**  
 is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object \(for example, **languageKeyword tag is not supported!!!!**  
\). The properties can also be set programmatically in the form **parameterReference tag is not supported!!!!**  
 \(for example, **languageKeyword tag is not supported!!!!**  
\).  
  
 Style properties for a dynamic menu item are applied in the following order:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A> property to specify a light sky blue background color for the menu items in a dynamic menu.  
  
 [!code-csharp[MenuDynamicMenuItemStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/menudynamicmenuitemstyle/CS/MenuDynamicMenuItemStylecs.aspx#1)]
 [!code-vb[MenuDynamicMenuItemStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/menudynamicmenuitemstyle/VB/MenuDynamicMenuItemStylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle DynamicMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューの外観を設定できる <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>動的メニューのスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> 動的メニューの外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクト \(たとえば、 `DynamicMenuStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `DynamicMenuStyle.ForeColor`\)。  
  
 動的メニュー項目のスタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A> 動的メニューに明るい青 sky の背景色を指定するプロパティです。  
  
 [!code-csharp[MenuDynamicMenuStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicMenuStyle/CS/menudynamicmenustylecs.aspx#1)]
 [!code-vb[MenuDynamicMenuStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicMenuStyle/VB/menudynamicmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニュー項目にサブメニューがあることを示すために使用されるイメージの代替テキストを取得または設定します。</summary>
        <value>動的メニュー項目にサブメニューがあることを示すために使用されるイメージの代替テキスト。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu. Use the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> property to specify the alternate text for this image. The text that you specify provides assistive technology devices with a description of the image that can be used to make the control more accessible.  
  
 There are two ways to display the image:  
  
-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property to **languageKeyword tag is not supported!!!!**  
     to use the built\-in image \(default\).  
  
-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property to specify a custom image.  
  
> [!NOTE]
>  This property applies to both the built\-in image and the custom image.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> property to specify the alternate text for the image used to indicate that a dynamic menu item has a submenu. This text is displayed as a ToolTip when the user positions the mouse pointer over the image.  
  
 [!code-csharp[MenuDynamicPopoutImageText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-vb[MenuDynamicPopoutImageText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニュー項目にサブメニューがある場合に、動的メニュー項目に表示されるカスタム イメージの URL を取得または設定します。</summary>
        <value>動的メニュー項目にサブメニューがあることを示すために使用されるイメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When a dynamic menu item contains a submenu, an image can be displayed to indicate that the user can expand the menu by positioning the mouse pointer over the menu item. There are two ways to display this image:  
  
-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property to **languageKeyword tag is not supported!!!!**  
     to use the built\-in image \(default\).  
  
-   Set the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property to specify a custom image.  
  
 If the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property is set, that image overrides the built\-in image.  
  
 If the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property is not set and the <xref:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage%2A> property is set to **languageKeyword tag is not supported!!!!**  
, no image is displayed.  
  
> [!NOTE]
>  When you set this property, use a slash mark \(\/\) instead of a backslash \(\\\). If you use backslashes in the path, the specified image will not be displayed.  
  
 You can specify alternate text for the image by setting the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString%2A> property.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl%2A> property to specify a custom image to display in a dynamic menu item to indicate that the menu item has a submenu.  
  
 [!code-csharp[MenuDynamicPopoutImageText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicPopoutImageText/CS/menudynamicpopoutimagetextcs.aspx#1)]
 [!code-vb[MenuDynamicPopoutImageText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicPopoutImageText/VB/menudynamicpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="DynamicSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle DynamicSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択した動的メニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>選択された動的メニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> property to control the appearance of a dynamic menu item when the user selects it from the menu. This property is read\-only; however, you can set the properties of the <xref:System.Web.UI.WebControls.MenuItemStyle> object it returns. The properties can be set declaratively in the form **parameterReference tag is not supported!!!!**  
, where **parameterReference tag is not supported!!!!**  
 is a property of the <xref:System.Web.UI.WebControls.MenuItemStyle> object \(for example, **languageKeyword tag is not supported!!!!**  
\). The properties can also be set programmatically in the form **parameterReference tag is not supported!!!!**  
 \(for example, **languageKeyword tag is not supported!!!!**  
\).  
  
 Style properties for a dynamic menu item are applied in the following order:  
  
1.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuStyle%2A>.  
  
2.  <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> collection or <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  
  
3.  <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A>. If the <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> collection is defined, it is applied at this time, overriding the other menu item style properties.  
  
4.  <xref:System.Web.UI.WebControls.Menu.DynamicHoverStyle%2A>.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> property to specify a light blue background color for the selected dynamic menu item.  
  
 [!code-csharp[MenuDynamicSelectedStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicSelectedStyle/CS/menudynamicselectedstylecs.aspx#1)]
 [!code-vb[MenuDynamicSelectedStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicSelectedStyle/VB/menudynamicselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="DynamicTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string DynamicTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>他のメニュー項目と区別するために各動的メニュー項目の上部に表示するイメージの URL を取得または設定します。</summary>
        <value>各動的メニュー項目の上部に表示される区切り線イメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> property to specify an optional custom image to display at the top of each dynamic menu item. This image acts as a separator between menu items and is commonly an image of a line.  
  
> [!NOTE]
>  You can also display a separator image at the bottom of each dynamic menu item by setting the <xref:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl%2A> property.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl%2A> property to display a separator image at the top of each dynamic menu item.  
  
 [!code-csharp[MenuDynamicTopSeparatorImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/CS/menudynamictopseparatorimageurlcs.aspx#1)]
 [!code-vb[MenuDynamicTopSeparatorImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicTopSeparatorImageUrl/VB/menudynamictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DynamicVerticalOffset">
      <MemberSignature Language="C#" Value="public int DynamicVerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DynamicVerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューを縦方向にシフトするピクセル数を、親メニュー項目に対する相対値として取得または設定します。</summary>
        <value>動的メニューを親メニュー項目に対して相対的に縦方向にシフトするピクセル数。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> property to adjust the vertical position of a dynamic menu relative to its parent menu item. This property affects the position of a dynamic menu differently depending on whether the <xref:System.Web.UI.WebControls.Menu> control is displayed vertically or horizontally \(as specified by the <xref:System.Web.UI.WebControls.Menu.Orientation%2A> property\). The following table describes the differences.  
  
|Orientation|Description|  
|-----------------|-----------------|  
|Horizontal|By default, a dynamic menu is displayed directly below its parent menu item without any spacing in between. Setting this property controls the vertical spacing between the dynamic menu and its parent menu item.|  
|Vertical|By default, a dynamic menu item is displayed next to its parent menu item with the top edges aligned. Setting this property shifts the dynamic menu position vertically from this base position.|  
  
> [!NOTE]
>  You can set this property to a negative value to shift a dynamic menu in a negative direction. If you are displaying a horizontal menu, a negative value causes a dynamic menu and its parent menu item to overlap.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Menu.DynamicVerticalOffset%2A> property to shift a dynamic menu down by 10 pixels from the top of its parent menu item.  
  
 [!code-csharp[MenuDynamicHorizontalOffset\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/CS/menudynamichorizontaloffsetcs.aspx#1)]
 [!code-vb[MenuDynamicHorizontalOffset\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuDynamicHorizontalOffset/VB/menudynamichorizontaloffsetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.EnsureDataBound" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メニュー コントロールがデータ バインディングを必要とするかどうかと、<see cref="M:System.Web.UI.WebControls.Menu.DataBind" /> メソッドを呼び出す前に有効なデータ ソース コントロールが指定されるかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  This method is used primarily by control developers to extend the <xref:System.Web.UI.WebControls.Menu> control.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem FindItem (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.MenuItem FindItem(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">取得するメニュー項目の値パス。</param>
        <summary>指定した値パスにあるメニュー項目を取得します。</summary>
        <returns>指定した値パスにあるメニュー項目を表す <see cref="T:System.Web.UI.WebControls.MenuItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> を取得するメソッド、 <xref:System.Web.UI.WebControls.MenuItem> オブジェクトから、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 取得する、 <xref:System.Web.UI.WebControls.MenuItem> オブジェクト、メニュー項目をメニュー パスを指定する必要があります。 メニューのパスは、ルート メニュー項目から現在のメニュー項目へのパスを構成する区切り記号付きの値の文字列です。 区切り文字を確認するのには、使用、 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.FindItem%2A> からメニュー項目を取得するメソッドを <xref:System.Web.UI.WebControls.Menu> 指定した値パスにあるコントロール。  
  
 [!code-csharp[MenuPathSeparator\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-vb[MenuPathSeparator\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.PathSeparator" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.GetDesignModeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのデザイン時状態を取得します。</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> コントロールのデザイン時状態を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.GetDesignModeState%2A> メソッドはの現在のデザイン時状態を取得するために使用するヘルパー メソッド、 <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="IncludeStyleBlock">
      <MemberSignature Language="C#" Value="public bool IncludeStyleBlock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeStyleBlock" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.IncludeStyleBlock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET で、メニューで使用されるスタイルのカスケード スタイル シート \(CSS: Cascading Style Sheet\) 定義のブロックをレンダリングするかどうかを示す値を取得または設定します。</summary>
        <value>ASP.NET で、メニューで使用されるスタイルの CSS 定義のブロックをレンダリングするかどうかを示す値。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu> コントロールでは、CSS スタイルを使用して、ブラウザーでその外観を制御します。 既定では、レンダリング、 `style` する CSS クラスの CSS 定義が含まれる要素を使用します。 このプロパティ設定する `false` 次の状況で。  
  
-   メニューの外観をカスタマイズするために、独自の CSS 定義を提供するには。 ページで、CSS 定義のブロックを行ったり、定義を含む外部 CSS ファイルへのリンクを含める必要がありますし。  
  
-   既定の外観を保持するが、別のファイルに生成された CSS 定義を保存しておきたくします。 ファイルとそれへのリンクを提供する必要があります。  
  
 このような状況では、すれば、既定の CSS ブロックのコピーを <xref:System.Web.UI.WebControls.Menu> コントロールは、プロパティを設定して生成 `true`, \] ページを実行している、およびブラウザーでページを表示します。 コピーとブラウザーにページのソースを表示し、ページのマークアップ、または別のファイルには、CSS ブロックを貼り付けることができます。  
  
 このプロパティを設定する場合は、 `false`, 、スタイルのプロパティを設定することはできません。 たとえば、追加することはできません、 `DynamicHoverStyle-ForeColor` マークアップやセット内の属性、 `DynamicHoverStyle.ForeColor` コード内のプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> コントロールのすべてのメニュー項目を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemCollection" /> コントロールのすべてのメニュー項目を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.Items%2A> を取得するプロパティ \(コレクション\)、 <xref:System.Web.UI.WebControls.MenuItemCollection> の項目をすべてのメニューを含むオブジェクトを <xref:System.Web.UI.WebControls.Menu> コントロールです。 このコレクションはすべてのメニュー項目をすばやく反復処理するか、特定のメニュー項目にアクセスするよく使用されます。  
  
 <xref:System.Web.UI.WebControls.Menu.Items%2A> コレクションは、メニュー項目をプログラムで管理にも使用できます。 追加、挿入、削除、および取得 <xref:System.Web.UI.WebControls.MenuItem> コレクション オブジェクトです。 コレクションに加えた変更が自動的に反映する、 <xref:System.Web.UI.WebControls.Menu> サーバー ラウンド トリップの隣にあるコントロール。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.Items%2A> 、メニューを走査するコレクションの項目を <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 [!code-csharp[MenuItems\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItems/CS/menuitemscs.aspx#1)]
 [!code-vb[MenuItems\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItems/VB/menuitemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuItem" />
        <altmember cref="T:System.Web.UI.WebControls.MenuItemCollection" />
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ChildItems" />
      </Docs>
    </Member>
    <Member MemberName="ItemWrap">
      <MemberSignature Language="C#" Value="public bool ItemWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ItemWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ItemWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目のテキストを折り返すかどうかを示す値を取得または設定します。</summary>
        <value>メニュー項目のテキストを折り返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> プロパティ メニュー項目ごとに表示されるテキストを折り返すかどうかを指定します。 テキストの領域が不足するが自動的に分割され、次の行に続きます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.ItemWrap%2A> でテキストの折り返しを有効にするプロパティ、 <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 [!code-csharp[MenuItemWrap\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemWrap/CS/menuitemwrapcs.aspx#1)]
 [!code-vb[MenuItemWrap\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemWrap/VB/menuitemwrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      </Docs>
    </Member>
    <Member MemberName="LevelMenuItemStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelMenuItemStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいてメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいてメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> の代わりに、個々 のスタイル プロパティのコレクション \(など <xref:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle%2A>\)\] メニューの個々 のレベルにあるメニュー項目のスタイルを制御します。 このコレクションに格納されているスタイルは、メニュー レベルに基づいてメニュー項目に適用されます。 コレクション内の最初のスタイルは、メニューの最初のレベルでのメニュー項目のスタイルに対応します。 コレクション内の 2 番目のスタイルは、メニューの 2 番目のレベルでのメニュー項目のスタイルに対応します。 このコレクションは、ほとんどの場合、特定のレベルにあるメニュー項目がサブメニューがあるかどうかに関係なく、同じ外観を持つ必要があります内容スタイルのナビゲーション メニューのテーブルを生成を使用します。  
  
> [!NOTE]
>  特定レベルの使用について、スタイルが定義されている場合、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> 任意のメニュー項目スタイルそのレベルでのメニュー項目の設定のコレクション、この上書きします。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> でのメニュー項目にスタイル設定を適用するコレクション、 <xref:System.Web.UI.WebControls.Menu> レベルに基づいて制御します。  
  
 [!code-csharp[MenuLevelMenuItemStyles\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-vb[MenuLevelMenuItemStyles\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSelectedStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyleCollection LevelSelectedStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいて選択されたメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのメニュー項目のレベルに基づいて選択されたメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションの代わりに、 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> と <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> \] メニューの個々 のレベルで選択されたメニュー項目のスタイルを制御するプロパティです。 このコレクションに格納されているスタイルは、そのメニュー レベルに基づいて選択されたメニュー項目に適用されます。 コレクション内の最初のスタイルは、メニューの最初のレベルで選択されたメニュー項目のスタイルに対応します。 コレクション内の 2 番目のスタイルは、メニューの 2 番目のレベルで選択されたメニュー項目のスタイルに対応します。 このコレクションは、ほとんどの場合、特定のレベルにあるメニュー項目がサブメニューがあるかどうかに関係なく、同じ外観を持つ必要があります内容スタイルのナビゲーション メニューのテーブルを生成を使用します。  
  
> [!NOTE]
>  特定レベルの使用について、スタイルが定義されている場合、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクション、これにより、上書き、 <xref:System.Web.UI.WebControls.Menu.DynamicSelectedStyle%2A> と <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> そのレベルのプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> で選択されたメニュー項目にスタイル設定を適用するコレクション、 <xref:System.Web.UI.WebControls.Menu> コントロールがそのレベルに基づきます。  
  
 [!code-csharp[MenuLevelMenuItemStyles\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelMenuItemStyles/CS/menulevelmenuitemstylecs.aspx#1)]
 [!code-vb[MenuLevelMenuItemStyles\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelMenuItemStyles/VB/menulevelmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelSubMenuStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyleCollection LevelSubMenuStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのサブメニュー項目のレベルに基づいて静的メニューのサブメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" /> オブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> コントロール内でのサブメニュー項目のレベルに基づいて静的メニューのサブメニュー項目に適用されるスタイル設定を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> の代わりに、個々 のスタイル プロパティのコレクション \(など <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>\) 個々 のレベルにある静的メニューに表示される静的なサブメニュー項目のスタイルを制御します。 このコレクションに格納されているスタイルは、メニュー レベルに基づいて静的サブメニュー項目に適用されます。 コレクション内の最初のスタイルは、静的メニューに表示される最初の静的サブメニュー レベルのスタイルに対応します。 コレクション内の 2 番目のスタイルは、静的メニューに表示されるレベル 2 番目のサブメニューのスタイルに対応します。 このコレクションは、ほとんどの場合、特定のレベルにあるメニュー項目がサブメニューがあるかどうかに関係なく、同じ外観を持つ必要があります内容スタイルのナビゲーション メニューのテーブルを生成を使用します。  
  
> [!NOTE]
>  特定レベルの使用について、スタイルが定義されている場合、 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> 静的サブメニュー項目が、そのレベルで設定をスタイル コレクション、この上書きします。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> の静的メニューに表示されるサブメニュー項目にスタイル設定を適用するコレクション、 <xref:System.Web.UI.WebControls.Menu> レベルに基づいて制御できます。  
  
 [!code-csharp[MenuLevelSubMenuStyles\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuLevelSubMenuStyles/CS/menulevelsubmenustylescs.aspx#1)]
 [!code-vb[MenuLevelSubMenuStyles\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuLevelSubMenuStyles/VB/menulevelsubmenustylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのプロパティの状態を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumDynamicDisplayLevels">
      <MemberSignature Language="C#" Value="public int MaximumDynamicDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumDynamicDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動的メニューに表示するメニュー レベルの数を取得または設定します。</summary>
        <value>動的メニューに表示するメニュー レベルの数。 既定値は 3 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 静的メニューに設定して、複数のメニュー レベルを表示することができます、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティを 1 より大きい値にします。 このプロパティを 0 より大きい値に設定して動的メニューに追加レベルを表示することもできます。 たとえば、静的メニューにメニューの 2 つのレベルを表示する場合 \(設定して、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティを 2\) 3 レベルが動的メニューに表示される 3 つの追加のメニューにこのプロパティを設定するとします。 すべての残り高いメニュー レベル \(存在する場合\) が破棄されます。  
  
> [!NOTE]
>  このプロパティを 0 に設定で指定されたレベルに達するまでフラットなメニューが表示されます、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティには、すべての動的メニューなし。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> プロパティを 1 に動的メニューに表示するメニュー レベルの数を制限します。 ルート メニュー レベルのみが表示されます。  
  
 [!code-csharp[MenuMaximumDynamicDisplayLevels\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/CS/menumaximumdynamicdisplaylevelscs.aspx#1)]
 [!code-vb[MenuMaximumDynamicDisplayLevels\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMaximumDynamicDisplayLevels/VB/menumaximumdynamicdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" /> プロパティは、0 未満の値が設定されています。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目がクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> でメニュー項目をクリックすると、イベントが発生した、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 これにより、このイベントが発生するたびに\] ページで、別のコントロールとの同期などのカスタムのルーチンを実行するイベント ハンドラーを提供することができます。  
  
 A <xref:System.Web.UI.WebControls.MenuEventArgs> オブジェクトは、イベントを発生させたメニュー項目のプロパティにアクセスできるイベント ハンドラーに渡されます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、イベント ハンドラーを作成、 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> 、ユーザーが選択したメニュー項目のテキストを表示するイベントです。  
  
 [!code-csharp[MenuMenuItemClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuMenuItemClick/CS/menumenuitemclickcs.aspx#1)]
 [!code-vb[MenuMenuItemClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuMenuItemClick/VB/menumenuitemclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MenuItemClickCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MenuItemClickCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MenuItemClickCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Menu.MenuItemClickCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンド名を格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この読み取り専用フィールドには、メニュー項目にアクセスするために使用されるコマンドの名前が含まれています。 既定値は、"Click"です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MenuEventHandler MenuItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目がデータにバインドされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> メニュー項目がデータにバインドされている場合、イベントが発生した、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 これにより、カスタム コンテンツの追加や、レンダリング前に、このイベントが発生するたびに、メニュー項目を変更するなどのカスタムのルーチンを実行するイベント ハンドラーを提供することができます。  
  
 A <xref:System.Web.UI.WebControls.MenuEventArgs> オブジェクトは、イベントを発生させたメニュー項目のプロパティにアクセスできるイベント ハンドラーに渡されます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、イベント ハンドラーを作成、 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> のテキストを変更するイベント、 `Home` メニュー項目に表示されるまで、 <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 [!code-csharp[MenuItemDataBound\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemDataBound/CS/menumenuitemdataboundcs.aspx#1)]
 [!code-vb[MenuItemDataBound\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemDataBound/VB/menumenuitemdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのイベントをページのユーザー インターフェイス \(UI\) サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは <xref:System.Web.UI.Control.OnBubbleEvent%2A> をオーバーライドします。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.DataBinding" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Control.DataBinding> にデータがバインドされると、イベントが発生した、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 このメソッドは、それに関連付けられているデータ バインド ロジックを実行するコントロールを通知します。  
  
 <xref:System.Web.UI.WebControls.Menu.OnDataBinding%2A> メソッドを使用して派生クラスでデリゲートを結び付けずに、イベントを処理します。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 このメソッドは通常、使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.Menu> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Menu.OnDataBinding(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されたら、Web サーバー コントロールは、インスタンスを作成および設定に必要な初期化の手順を実行する必要があります。 サーバー コントロールのライフ サイクルのこの段階で、コントロールのビュー ステートを設定する必要があります。 さらに、子またはこのコントロールの親であるかどうかにかかわらず、このメソッドが呼び出されるとは別のサーバー コントロールにアクセスできません。 他のサーバー コントロールでは、作成されたアクセスできる状態に限りません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Menu.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Menu.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemClick (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemClick(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> メソッドは、 <xref:System.Web.UI.WebControls.Menu> させるコントロール、 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> イベントです。 通常は、使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.Menu> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMenuItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnMenuItemDataBound (System.Web.UI.WebControls.MenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMenuItemDataBound(class System.Web.UI.WebControls.MenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.MenuEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> メソッドは、 <xref:System.Web.UI.WebControls.Menu> させるコントロール、 <xref:System.Web.UI.WebControls.Menu.MenuItemDataBound> イベントです。 通常は、使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.Menu> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 <xref:System.Web.UI.WebControls.Menu.OnMenuItemDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Menu.OnMenuItemDataBound(System.Web.UI.WebControls.MenuEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.MenuEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.MenuEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.OnMenuItemClick(System.Web.UI.WebControls.MenuEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> メソッドは、 <xref:System.Web.UI.WebControls.Menu> させるコントロール、 <xref:System.Web.UI.Control.PreRender> イベントです。 通常は、使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.Menu> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 <xref:System.Web.UI.WebControls.Menu.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Menu.OnPreRender(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールの表示方向を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Orientation" /> 列挙値のいずれか。 既定値は、<see langword="Orientation.Vertical" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> プロパティを表示する方向を指定する、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 次の表は、利用可能な方向を示します。  
  
|\[方向\]|説明|  
|------------|--------|  
|`Orientation.Horizontal`|<xref:System.Web.UI.WebControls.Menu> コントロールが水平方向に表示します。|  
|`Orientation.Vertical`|<xref:System.Web.UI.WebControls.Menu> コントロールを垂直方向に表示します。|  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.Orientation%2A> 水平メニューを表示するプロパティです。  
  
 [!code-csharp[MenuOrientation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuOrientation/CS/menuorientationcs.aspx#1)]
 [!code-vb[MenuOrientation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuOrientation/VB/menuorientationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目のパスの区切り文字を取得または設定します。</summary>
        <value>メニュー項目のパスの区切り文字。 既定値はスラッシュ \(\/\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各メニュー項目 \(によって表される、 <xref:System.Web.UI.WebControls.MenuItem> オブジェクト\) で、 <xref:System.Web.UI.WebControls.Menu> コントロールが、 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティ メニュー項目の位置を指定します。 値パスは、ルート メニュー項目から現在のメニュー項目へのパスを構成する区切り記号付きの値の文字列です。 使用して、 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> \] メニューの \[パスの値を区切るために使用する区切り記号を指定するプロパティです。 個々 の値のリストを解析するときに、この値は使用一般的です。  
  
 表示されるテキストによって、 <xref:System.Web.UI.WebControls.Menu> コントロール、区切り文字は、すべての競合を防ぐために変更する必要があります。 たとえば、コンマを区切り文字を設定すると場合、表示されるテキストにコンマを入れないでください。それ以外の場合、 <xref:System.Web.UI.WebControls.MenuItem.ValuePath%2A> プロパティを正確に解析することはできません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.PathSeparator%2A> コンマにメニュー項目の値パスの区切り文字を変更するプロパティです。  
  
 [!code-csharp[MenuPathSeparator\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuPathSeparator/CS/menupathseparatorcs.aspx#1)]
 [!code-vb[MenuPathSeparator\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuPathSeparator/VB/menupathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.ValuePath" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.FindItem(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.PerformDataBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースの項目を <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのメニュー項目にバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.PerformDataBinding%2A> メソッドによって呼び出されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.Menu> コントロールのバインド先のデータ ソース内の項目、 <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡されるイベント引数を表す <see cref="T:System.String" />。</param>
        <summary>フォームがサーバーにポストされたときに発生するイベントを処理します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>クライアントのブラウザーにメニュー コントロールをレンダリングします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">デバイス固有の出力を構築および表示するメソッドを含む <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>タグ属性を追加し、コントロールの開始タグのマークアップを、ブラウザーまたはデバイスに出力される出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> メソッドは追加タグの属性し、コントロールの開始タグのマークアップをクライアント ブラウザーの応答ストリームに出力される出力ストリームに書き込みます。  
  
 オーバーライド <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> カスタム動作を実装する場合は、前に、応答ストリームに複数のタグを書き込む例については、コンテンツなど制御 `<table><tr><td>`します。 このメソッドは、 <xref:System.Web.UI.WebControls.Menu.RenderBeginTag%2A> を追加するメソッド、 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">デバイス固有の出力を構築および表示するメソッドを含む <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>このメンバーは <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" /> をオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバーライド、 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> 開始と終了タグの間、コントロールの内容を表示します。 このメソッドの既定の実装は、子コントロールを表示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">デバイス固有の出力を構築および表示するメソッドを含む <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>最終マークアップを実行し、コントロールの HTML 終了タグを、ブラウザーまたはデバイスに出力される出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A?displayProperty=fullName> をレンダリングする <xref:System.Web.UI.WebControls.Menu> サブメニュー、および <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuRenderingMode RenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.MenuRenderingMode RenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.RenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールが、HTML <see langword="table" /> 要素およびインライン スタイルをレンダリングするか、または <see langword="listitem" /> 要素およびカスケード スタイル シート \(CSS: Cascading Style Sheet\) スタイルをレンダリングするかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールが、HTML <see langword="table" /> 要素およびインライン スタイルをレンダリングするか、または <see langword="listitem" /> 要素およびカスケード スタイル シート \(CSS: Cascading Style Sheet\) スタイルをレンダリングするかを示す値。 既定値は <see cref="F:System.Web.UI.WebControls.MenuRenderingMode.Default" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Web.UI.WebControls.Menu.RenderingMode%2A> プロパティは、メニュー コントロールのマークアップをレンダリングする方法を決定、 <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ASP.NET 3.5 および以前のバージョンで、 <xref:System.Web.UI.WebControls.Menu> コントロールは、HTML を使用して `table` 要素およびインライン スタイルをブラウザーで、メニューの外観を指定します。 ASP.NET 4 では既定では、以降のバージョン、 <xref:System.Web.UI.WebControls.Menu> コントロールは、HTML を使用して `listitem` 要素およびカスケード スタイル シート \(CSS\) のスタイル。  
  
 このプロパティが設定されていない場合、 <xref:System.Web.UI.WebControls.Menu> コントロールで示されている ASP.NET のバージョンに対応するマークアップをレンダリング、 <xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName> プロパティです。<xref:System.Web.UI.WebControls.Menu> コントロールは、次の規則を使用します。  
  
-   場合の値、 <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティは、 `3.5`, 、 <xref:System.Web.UI.WebControls.Menu> コントロールは、HTML を使用して `table` 要素およびインライン スタイル。  
  
-   場合の値、 <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティは `4.0` より古いバージョンの <xref:System.Web.UI.WebControls.Menu> コントロールは、HTML を使用して `listitem` 要素と CSS スタイル。  
  
 このプロパティは、旧バージョンと互換性のために用意されています。 場合、 <xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティを選択するとコントロールは、ASP.NET 4 と互換性のある以降の HTML を生成する必要しますが、ある、 <xref:System.Web.UI.WebControls.Menu> を以前の動作を使用するコントロールこのプロパティを設定する <xref:System.Web.UI.WebControls.MenuRenderingMode.Table>です。 たとえば、右から左へテキストを表示する Web ページがある場合このプロパティを設定する <xref:System.Web.UI.WebControls.MenuRenderingMode.Table> 一部のブラウザーが表示されないため、 <xref:System.Web.UI.WebControls.MenuRenderingMode.List> 右から左へテキスト用に正しくモード マークアップです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのプロパティの状態を保存します。</summary>
        <returns>コントロールの状態データを格納しているオブジェクト。 状態に何の変更も加えられていない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはプロパティの状態の保存に使用、 <xref:System.Web.UI.WebControls.Menu> 場合でも、その永続化する必要があるコントロール、 <xref:System.Web.UI.Control.EnableViewState%2A> にプロパティが設定されている `false`します。<xref:System.Web.UI.WebControls.Menu.SaveControlState%2A> メソッドは、状態データを \(インデックスまたはキーワードの場合\) などのコントロールの操作に不可欠であり、コントロールのビュー ステート データとは別に関係します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールの状態を保存します。</summary>
        <returns>
          <see cref="T:System.Object" /> コントロールの状態を格納している <see cref="T:System.Web.UI.WebControls.Menu" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollDownImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollDownImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがメニューをスクロール ダウンして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL を取得または設定します。</summary>
        <value>ユーザーがメニューをスクロール ダウンして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、.NET 4.0 のレンダリング モードではサポートされません。 このプロパティが必要な場合は、ページのコードで、次を追加することで、メニューを .NET 3.5 のレンダリング モードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> プロパティをユーザーが他のメニュー項目スクロール ダウンしてできることを示すために各動的メニューの下部に表示するカスタム イメージを指定します。  
  
> [!NOTE]
>  このプロパティが設定されていない内部、既定のイメージが使用されます。  
  
 設定して、イメージの代替テキストを指定できます、 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollDownImageUrl%2A> プロパティをユーザーが他のメニュー項目の動的メニューにスクロール ダウンしてできることを示すカスタム イメージを表示します。  
  
 [!code-csharp[MenuScrollDownImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-vb[MenuScrollDownImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollDownText">
      <MemberSignature Language="C#" Value="public string ScrollDownText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollDownText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> プロパティで指定されているイメージの代替テキストを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" /> プロパティで指定されているイメージの代替テキスト。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、.NET 4.0 のレンダリング モードではサポートされません。 このプロパティが必要な場合は、ページのコードで、次を追加することで、メニューを .NET 3.5 のレンダリング モードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 動的メニュー項目に、メニューの下部にあるその他の項目が含まれている場合は、追加のメニュー項目の表示まで、ユーザーがスクロールできることを示すために、画像が表示されます。 使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> プロパティをこのイメージの代替テキストを指定します。 指定したテキストは、コントロールをより使いやすくために使用するイメージの説明を持つデバイスの支援技術を提供します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollDownText%2A> プロパティをユーザーが他のメニュー項目の動的メニューにスクロール ダウンしてできることを示すために使用されるイメージの代替テキストを指定します。  
  
 [!code-csharp[MenuScrollDownImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-vb[MenuScrollDownImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpImageUrl">
      <MemberSignature Language="C#" Value="public string ScrollUpImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがメニューをスクロール アップして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL を取得または設定します。</summary>
        <value>ユーザーがメニューをスクロール アップして他のメニュー項目を表示できることを示すために動的メニューに表示するイメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、.NET 4.0 のレンダリング モードではサポートされません。 このプロパティが必要な場合は、ページのコードで、次を追加することで、メニューを .NET 3.5 のレンダリング モードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> アップして他のメニュー項目、ユーザーがスクロールできることを示すために各動的メニューの上部に表示するカスタム イメージを指定するプロパティです。  
  
> [!NOTE]
>  このプロパティが設定されていない内部、既定のイメージが使用されます。  
  
 設定して、イメージの代替テキストを指定できます、 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> プロパティです。  
  
   
  
## 例  
 次のコード例を使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollUpImageUrl%2A> で他のメニュー項目の動的メニューをスクロールできるユーザーを示すカスタム イメージを表示するプロパティです。  
  
 [!code-csharp[MenuScrollDownImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-vb[MenuScrollDownImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      </Docs>
    </Member>
    <Member MemberName="ScrollUpText">
      <MemberSignature Language="C#" Value="public string ScrollUpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScrollUpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> プロパティで指定されているイメージの代替テキストを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" /> プロパティで指定されているイメージの代替テキスト。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、.NET 4.0 のレンダリング モードではサポートされません。 このプロパティが必要な場合は、ページのコードで、次を追加することで、メニューを .NET 3.5 のレンダリング モードに設定できます。  
  
```  
menuInstance.RenderingCompatibility = new Version(3, 5);  
```  
  
 動的メニュー項目には、メニューの上部にあるその他のアイテムが含まれている、ユーザーが他のメニュー項目の表示までスクロールできるを示すイメージが表示されます。 使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> プロパティをこのイメージの代替テキストを指定します。 指定したテキストは、コントロールをより使いやすくために使用するイメージの説明を持つデバイスの支援技術を提供します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.ScrollUpText%2A> プロパティでは、他のメニュー項目の動的メニューをスクロールできるユーザーを示すために使用されるイメージの代替テキストを指定します。  
  
 [!code-csharp[MenuScrollDownImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuScrollDownImage/CS/menuscrolldownimagecs.aspx#1)]
 [!code-vb[MenuScrollDownImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuScrollDownImage/VB/menuscrolldownimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されたメニュー項目を取得します。</summary>
        <value>選択されたメニュー項目を表す <see cref="T:System.Web.UI.WebControls.MenuItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> プロパティをユーザーが選択したメニュー項目を決定します。  
  
> [!NOTE]
>  簡単な方法として確認することも選択されているメニュー項目のテキストを使用して直接、 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> プロパティです。  
  
 ユーザーがからメニュー項目を選択すると、 <xref:System.Web.UI.WebControls.Menu> コントロール、 <xref:System.Web.UI.WebControls.Menu.MenuItemClick> イベントを発生すると、イベント ハンドラーを提供することによってカスタム ルーチンを実行できます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> プロパティで選択されたメニュー項目を <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 [!code-csharp[MenuSelectedItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-vb[MenuSelectedItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されたメニュー項目の値を取得します。</summary>
        <value>選択されたメニュー項目の値。 既定値は <see cref="F:System.String.Empty" /> です。現在選択されているメニュー項目がないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> として選択されたメニュー項目のテキストへのショートカット プロパティです。 選択されたメニュー項目の他のプロパティにアクセスするには、使用、 <xref:System.Web.UI.WebControls.Menu.SelectedItem%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.SelectedValue%2A> プロパティで選択されたメニュー項目のテキストを <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 [!code-csharp[MenuSelectedItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSelectedItem/CS/menuselecteditemcs.aspx#1)]
 [!code-vb[MenuSelectedItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSelectedItem/VB/menuselecteditemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.SelectedItem" />
        <altmember cref="E:System.Web.UI.WebControls.Menu.MenuItemClick" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">コントロールを表示するための状態データを格納している <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールのデザイン時データを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Web.UI.Control.SetDesignModeState%2A>です。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.Menu> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemDataBound">
      <MemberSignature Language="C#" Value="protected void SetItemDataBound (System.Web.UI.WebControls.MenuItem node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataBound(class System.Web.UI.WebControls.MenuItem node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataBound">ノードをデータ バインドとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定された <see cref="P:System.Web.UI.WebControls.MenuItem.DataBound" /> オブジェクトの <see cref="T:System.Web.UI.WebControls.MenuItem" /> プロパティに指定された値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataBound%2A> メソッドを設定する派生クラスによって使用されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.MenuItem.DataBound%2A> の指定したプロパティ <xref:System.Web.UI.WebControls.MenuItem> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataItem">
      <MemberSignature Language="C#" Value="protected void SetItemDataItem (System.Web.UI.WebControls.MenuItem node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataItem(class System.Web.UI.WebControls.MenuItem node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataItem">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> のデータ項目。</param>
        <summary>指定された <see cref="P:System.Web.UI.WebControls.MenuItem.DataItem" /> オブジェクトの <see cref="T:System.Web.UI.WebControls.MenuItem" /> プロパティに指定された値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataItem%2A> メソッドを設定する派生クラスによって使用されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.MenuItem.DataItem%2A> の指定したプロパティ <xref:System.Web.UI.WebControls.MenuItem> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataBound(System.Web.UI.WebControls.MenuItem,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetItemDataPath">
      <MemberSignature Language="C#" Value="protected void SetItemDataPath (System.Web.UI.WebControls.MenuItem node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetItemDataPath(class System.Web.UI.WebControls.MenuItem node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.MenuItem" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.MenuItem" />。</param>
        <param name="dataPath">
          <see cref="T:System.Web.UI.WebControls.MenuItem" /> のデータ パス。</param>
        <summary>指定された <see cref="P:System.Web.UI.WebControls.MenuItem.DataPath" /> オブジェクトの <see cref="T:System.Web.UI.WebControls.MenuItem" /> プロパティに指定された値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Menu.SetItemDataPath%2A> メソッドを設定する派生クラスによって使用されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.MenuItem.DataPath%2A> の指定したプロパティ <xref:System.Web.UI.WebControls.MenuItem> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataItem(System.Web.UI.WebControls.MenuItem,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Menu.SetItemDataPath(System.Web.UI.WebControls.MenuItem,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リンクの一覧をスキップするためにスクリーン リーダーによって読み取られる非表示イメージの代替テキストを取得または設定します。</summary>
        <value>リンクの一覧をスキップするためにスクリーン リーダーによって読み取られる非表示イメージの代替テキスト。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> リンクの一覧をスキップするためにスクリーン リーダーによって読み取られたプロパティを非表示イメージの代替テキストを指定します。 指定したテキストは、コントロールをより使いやすくために使用できるリンクの画像をスキップする、非表示の説明を持つデバイスの支援技術を提供します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 <xref:System.Web.UI.WebControls.Menu> コントロールには、 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> スクリーン リーダーによってスキップされるコントロール全体の手段としてのプロパティです。 場合、 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティが設定されており、代替テキストを非表示の画像を表示すると、コントロールの末尾に移動するためのオプションをユーザーに提供します。 スクリーン リーダーは代替テキストを読み上げる、読み取り、イメージが 1 つだけのピクセルのスペースを占有しています。 ページのレンダリングをピクセル正確に制御を設定、 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティを空の文字列 \(""\) し、メニューをスキップする独自のメカニズムを提供します。<xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> プロパティが既定では空の文字列に設定します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.SkipLinkText%2A> リンクの一覧をスキップするためにスクリーン リーダーによって読み取られたプロパティを非表示イメージの代替テキストを指定します。  
  
 [!code-csharp[MenuSkipLinkText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuSkipLinkText/CS/menuskiplinktextcs.aspx#1)]
 [!code-vb[MenuSkipLinkText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuSkipLinkText/VB/menuskiplinktextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticBottomSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticBottomSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticBottomSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各静的メニュー項目の下部に区切り線として表示されるイメージの URL を取得または設定します。</summary>
        <value>各静的メニュー項目の下部に区切り線として表示されるイメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> 項目の各静的メニューの下部に表示するカスタム イメージを指定するにはメニュー項目間の区切り記号として機能します。  
  
> [!NOTE]
>  代わりに、表示することも、区切り線イメージ各静的メニュー項目の上部に設定して、 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> プロパティを各静的メニュー項目の下部に表示する区切り線イメージを指定します。  
  
 [!code-csharp[MenuStaticBottomSeparatorImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/CS/menustaticbottomseparatorimageurlcs.aspx#1)]
 [!code-vb[MenuStaticBottomSeparatorImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticBottomSeparatorImageUrl/VB/menustaticbottomseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticDisplayLevels">
      <MemberSignature Language="C#" Value="public int StaticDisplayLevels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StaticDisplayLevels" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューに表示するメニュー レベルの数を取得または設定します。</summary>
        <value>静的メニューに表示するメニュー レベルの数。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティを静的メニューに表示するメニュー レベルの数を指定します。 動的メニューには、指定した値以下のすべてのメニュー レベルが表示されます。 動的メニューに設定して表示するメニュー レベルの数を制限することもできます。、 <xref:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティを静的メニューの最初の 2 つのメニューのレベルを表示します。  
  
 [!code-csharp[MenuStaticDisplayLevels\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticDisplayLevels/CS/menustaticdisplaylevelscs.aspx#1)]
 [!code-vb[MenuStaticDisplayLevels\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticDisplayLevels/VB/menustaticdisplaylevelsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値は、1 より小さい値です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.MaximumDynamicDisplayLevels" />
      </Docs>
    </Member>
    <Member MemberName="StaticEnableDefaultPopOutImage">
      <MemberSignature Language="C#" Value="public bool StaticEnableDefaultPopOutImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaticEnableDefaultPopOutImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニュー項目にサブメニューがあることを示す組み込みイメージを表示するかどうかを示す値を取得または設定します。</summary>
        <value>サブメニューのある静的メニュー項目に対して組み込みイメージを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 静的メニュー項目にサブメニューが含まれている場合は、ユーザーがメニューを展開できることを示すイメージを表示できます。 このイメージを表示する 2 つの方法があります。  
  
-   設定、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを `true` 組み込みイメージ \(既定値\) を使用します。  
  
-   設定、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティをカスタム イメージを指定します。  
  
 場合、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティの設定は、そのイメージの値に関係なく、組み込みのイメージの優先、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティです。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティが設定されていないと、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> にプロパティが設定されている `false`, 、イメージは表示されません。  
  
 設定して、イメージの代替テキストを指定できます、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを静的メニュー項目にサブメニューがあることを示すイメージを非表示にします。<xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティは、空の文字列にも設定する必要があります \(""\) イメージを非表示になります。  
  
 [!code-csharp[MenuStaticEnableDefaultPopOutImage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/CS/menustaticenabledefaultpopoutimagecs.aspx#1)]
 [!code-vb[MenuStaticEnableDefaultPopOutImage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticEnableDefaultPopOutImage/VB/menustaticenabledefaultpopoutimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StaticHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StaticHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが上に置かれているときの静的メニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>マウス ポインターが上に置かれているときの静的メニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> 上にマウス ポインターが置かれたときに、静的メニュー項目の外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.Style> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.Style> オブジェクト \(たとえば、 `StaticHoverStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `StaticHoverStyle.ForeColor`\)。  
  
 静的メニュー項目のスタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A> プロパティをユーザーは、上にマウス ポインターを置いたときに、空の薄い青に、静的メニュー項目の背景色を変更します。  
  
 [!code-csharp[MenuStaticHoverStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticHoverStyle/CS/menustatichoverstylecs.aspx#1)]
 [!code-vb[MenuStaticHoverStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticHoverStyle/VB/menustatichoverstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemFormatString">
      <MemberSignature Language="C#" Value="public string StaticItemFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticItemFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的に表示されるすべてのメニュー項目と共に表示される追加テキストを取得または設定します。</summary>
        <value>すべてのメニュー項目と共に表示される追加のテキストまたは文字。 このプロパティの既定値は "{0}" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、テキストを挿入し、メニュー内の静的メニュー項目の書式設定を使用できます。 これは、モバイル デバイスに特に便利です。<xref:System.Web.UI.WebControls.Menu> コントロールは、静的および動的メニュー項目を表示するためのテンプレートをサポートしていますが、モバイル デバイスにテンプレートは無視されます。 このプロパティでは、文字またはテキストを追加して、モバイルおよびデスクトップの両方のデバイスのメニュー項目テンプレートを使用せずに書式設定を適用できます。  
  
> [!NOTE]
>  このプロパティを使用するときに、一貫した書式設定を実現するためにも設定、 <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> プロパティを同じ静的および動的メニュー項目に書式設定する場合。  
  
 テンプレートの書式設定と、このプロパティの両方を適用すると、モバイル デバイスのテンプレートの書式設定は無視されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticItemFormatString%2A> と <xref:System.Web.UI.WebControls.Menu.DynamicItemFormatString%2A> 各メニュー項目にテキストを追加するプロパティです。  
  
 [!code-csharp[MenuItemFormatString\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuItemFormatString/CS/menuitemformatstringcs.aspx#1)]
 [!code-vb[MenuItemFormatString\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuItemFormatString/VB/menuitemformatstringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicItemFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticItemTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate StaticItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StaticItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.MenuItemTemplateContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューに表示されるカスタム コンテンツを格納しているテンプレートを取得または設定します。</summary>
        <value>静的メニューのカスタム コンテンツを格納している <see cref="T:System.Web.UI.ITemplate" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、静的メニュー項目の独自のユーザー インターフェイス \(UI\) を定義する静的メニューの組み込みの表示を使用する代わりに、 <xref:System.Web.UI.WebControls.Menu.StaticItemTemplate%2A> プロパティです。 静的メニュー項目用のカスタム テンプレートを指定するには、最初に `<StaticTemplate>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、 `<StaticTemplate>` タグ。 さらに、使用して、静的メニューのスタイルを管理することができます、 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticMenuItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticMenuItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューの中のメニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>静的メニューの中のメニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> 静的メニューのメニュー項目の外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクト \(たとえば、 `StaticMenuItemStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `StaticMenuItemStyle.ForeColor`\)。  
  
 静的メニュー項目のスタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A> プロパティを静的メニューのメニュー項目に対して明るい青 sky の背景色を指定します。  
  
 [!code-csharp[MenuStaticMenuItemStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuItemStyle/CS/menustaticmenuitemstylecs.aspx#1)]
 [!code-vb[MenuStaticMenuItemStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuItemStyle/VB/menustaticmenuitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticMenuStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SubMenuStyle StaticMenuStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SubMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューの外観を設定できる <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>静的メニューのスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> 静的メニューの外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクト \(たとえば、 `StaticMenuStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `StaticMenuStyle.ForeColor`\)。  
  
 静的メニュー項目のスタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A> プロパティを静的メニュー全体に対して明るい青 sky の背景色を指定します。  
  
 [!code-csharp[MenuStaticMenuStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticMenuStyle/CS/menustaticmenustylecs.aspx#1)]
 [!code-vb[MenuStaticMenuStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticMenuStyle/VB/menustaticmenustylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageTextFormatString">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニュー項目にサブメニューがあることを示すために使用されるポップアウト イメージの代替テキストを取得または設定します。</summary>
        <value>ポップアウト イメージの代替テキスト。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 静的メニュー項目にサブメニューが含まれている場合は、ユーザーがメニューを展開できることを示すイメージを表示できます。 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティをこのイメージの代替テキストを指定します。  
  
 イメージを表示する 2 つの方法があります。  
  
-   設定、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを `true` 組み込みイメージ \(既定値\) を使用します。  
  
-   設定、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティをカスタム イメージを指定します。  
  
> [!NOTE]
>  このプロパティは、組み込みのイメージとカスタム イメージの両方に適用されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティを静的メニュー項目にサブメニューがあることを示すイメージの代替テキストを指定します。 ユーザーが画像の上にマウス ポインターを置いたときに、このテキストがツールヒントとして表示されます。  
  
 [!code-csharp[MenuStaticPopoutImageText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-vb[MenuStaticPopoutImageText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="StaticPopOutImageUrl">
      <MemberSignature Language="C#" Value="public string StaticPopOutImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticPopOutImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニュー項目にサブメニューがあることを示すために表示されるイメージの URL を取得または設定します。</summary>
        <value>静的メニュー項目にサブメニューがあることを示すために表示されるイメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 静的メニュー項目にサブメニューが含まれている場合は、ユーザーがメニューを展開できることを示すイメージを表示できます。 このイメージを表示する 2 つの方法があります。  
  
-   設定、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティを `true` 組み込みイメージ \(既定値\) を使用します。  
  
-   設定、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティをカスタム イメージを指定します。  
  
 場合、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティの設定は、そのイメージの値に関係なく、組み込みのイメージの優先、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> プロパティです。  
  
 場合、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティが設定されていないと、 <xref:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage%2A> にプロパティが設定されている `false`, 、イメージは表示されません。  
  
> [!NOTE]
>  このプロパティを設定すると、円記号 \(\\\) ではなくスラッシュ記号 \(\/\) を使用します。 パスに円記号を使用する場合、指定されたイメージは表示されません。  
  
 設定して、イメージの代替テキストを指定できます、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticPopOutImageUrl%2A> プロパティ メニュー項目にサブメニューがある場合に、静的メニュー項目に表示するカスタム イメージを指定します。  
  
 [!code-csharp[MenuStaticPopoutImageText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticPopoutImageText/CS/menustaticpopoutimagetextcs.aspx#1)]
 [!code-vb[MenuStaticPopoutImageText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticPopoutImageText/VB/menustaticpopoutimagetextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicPopOutImageTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticEnableDefaultPopOutImage" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticPopOutImageTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="StaticSelectedStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MenuItemStyle StaticSelectedStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSelectedStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MenuItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが選択した静的メニューのメニュー項目の外観を設定できる、<see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>静的メニューの中の選択されたメニュー項目のスタイルを表す <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> 静的メニューにユーザーが選択したメニュー項目の外観を制御するプロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクトが返されます。 フォームのプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.MenuItemStyle> オブジェクト \(たとえば、 `StaticSelectedStyle-ForeColor`\)。 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `StaticSelectedStyle.ForeColor`\)。  
  
 静的メニュー項目のスタイル プロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.Menu.StaticMenuStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.Menu.StaticMenuItemStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelMenuItemStyles%2A> コレクションまたは <xref:System.Web.UI.WebControls.Menu.LevelSubMenuStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
3.  <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A>。 場合、 <xref:System.Web.UI.WebControls.Menu.LevelSelectedStyles%2A> コレクションを定義して、他のメニュー項目スタイル プロパティをオーバーライドするこの時点で適用されます。  
  
4.  <xref:System.Web.UI.WebControls.Menu.StaticHoverStyle%2A>。  
  
> [!IMPORTANT]
>  互換性に影響するように変更します。  
  
 定義するときに、.NET Framework 4.0 の前に、 `<asp:Menu>` コントロール .aspx ファイルでユーザーを設定できます、 `StaticSelectedStyle-CssClass` プロパティを選択したコントロールの項目の CSS クラスを設定します。 たとえば、ユーザーには、次に示すようにメニュー コントロールがあります。  
  
```  
<asp:Menu ID="Menu1" runat="server" Orientation="Horizontal"   
    StaticMenuItemStyle-CssClass="MenuItem"  
    StaticSelectedStyle-CssClass="MenuItem_selected"  
    OnMenuItemClick="Menu1_MenuItemClick" Style="margin-bottom: 0px" EnableTheming="True" ClientIDMode="Static">  
    <Items>  
        <asp:MenuItem Text="item_0" Value="0" Selected="True"></asp:MenuItem>  
        <asp:MenuItem Text="itme_1" Value="1"></asp:MenuItem>  
    </Items>  
</asp:Menu>  
```  
  
 およびとして、menu コントロールが表示されます。  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem MenuItem_selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
```  
  
 ただし、.NET Framework 4.0 以降では、選択されたメニュー項目に設定されて、 `selected` で指定されたクラスではなく常に CSS クラス `StaticSelectedStyle-CssClass`します。 そのため、上記の ASP.NET コードが表示される代わりとして。  
  
```  
<div id="Menu1" style="margin-bottom: 0px">  
    <ul class="level1">  
        <li><a class="level1 MenuItem selected " href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;0&#39;)">item_0</a></li>  
        <li><a class="level1 MenuItem" href="#" onclick="__doPostBack(&#39;Menu1&#39;,&#39;1&#39;)">itme_1</a></li>  
    </ul>  
</div>  
  
```  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticSelectedStyle%2A> プロパティを選択した静的メニュー項目に対して明るい青の背景色を指定します。  
  
 [!code-csharp[MenuStaticSelectedStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSelectedStyle/CS/menustaticselectedstylecs.aspx#1)]
 [!code-vb[MenuStaticSelectedStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSelectedStyle/VB/menustaticselectedstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicMenuStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicSelectedStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelMenuItemStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSelectedStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.LevelSubMenuStyles" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticMenuStyle" />
      </Docs>
    </Member>
    <Member MemberName="StaticSubMenuIndent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit StaticSubMenuIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit StaticSubMenuIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticSubMenuIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的メニューのサブメニューをインデントする間隔をピクセル単位で取得または設定します。</summary>
        <value>静的メニューのサブメニューをインデントする間隔をピクセル単位で表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 静的メニューがメニューの 1 つ以上のレベルを表示すると \(場合、 <xref:System.Web.UI.WebControls.Menu.StaticDisplayLevels%2A> プロパティが 1 より大きい値に設定されている\) を使用して、 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 静的メニューのサブメニュー項目のインデントに使用するピクセル数を指定するプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticSubMenuIndent%2A> 10 ピクセル、静的メニューのサブメニュー項目のインデントを設定するプロパティです。  
  
 [!code-csharp[MenuStaticSubMenuIndent\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticSubMenuIndent/CS/menustaticsubmenuindentcs.aspx#1)]
 [!code-vb[MenuStaticSubMenuIndent\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticSubMenuIndent/VB/menustaticsubmenuindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値 <see cref="T:System.Web.UI.WebControls.Unit" /> が 0 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticDisplayLevels" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicHorizontalOffset" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicVerticalOffset" />
      </Docs>
    </Member>
    <Member MemberName="StaticTopSeparatorImageUrl">
      <MemberSignature Language="C#" Value="public string StaticTopSeparatorImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StaticTopSeparatorImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各静的メニュー項目の上部に区切り線として表示されるイメージの URL を取得または設定します。</summary>
        <value>各静的メニュー項目の上部に区切り線として表示されるイメージの URL。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> 項目の各静的メニューの上部に表示するカスタム イメージを指定するにはメニュー項目間の区切り記号として機能します。  
  
> [!NOTE]
>  代わりに、表示することも、区切り線イメージ各静的メニュー項目の下部に設定して、 <xref:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.StaticTopSeparatorImageUrl%2A> プロパティを各静的メニュー項目の上部に表示する区切り線イメージを指定します。  
  
 [!code-csharp[MenuStaticTopSeparatorImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/CS/menustatictopseparatorimageurlcs.aspx#1)]
 [!code-vb[MenuStaticTopSeparatorImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuStaticTopSeparatorImageUrl/VB/menustatictopseparatorimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicBottomSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.DynamicTopSeparatorImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollDownText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.ScrollUpText" />
        <altmember cref="P:System.Web.UI.WebControls.Menu.StaticBottomSeparatorImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡されるイベント引数を表す <see cref="T:System.String" />。</param>
        <summary>フォームがサーバーにポストされたときに発生するイベントを処理します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.Menu" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>常に <see langword="HtmlTextWriterTag.Table" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.TagKey%2A> を決定するプロパティ、 <xref:System.Web.UI.HtmlTextWriterTag> に関連付けられている値、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Menu.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目に関連付けられている Web ページの内容を表示する対象のウィンドウまたはフレームを取得または設定します。</summary>
        <value>リンクされた Web ページの内容を表示する対象のウィンドウまたはフレーム。 既定値は空の文字列 \(""\) です。フォーカスのあるウィンドウまたはフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Menu.Target%2A> ウィンドウまたは Web コンテンツを表示するためのフレームを指定するには、そのメニュー項目がクリックされたときにメニュー項目にリンクします。 値は、範囲の A ~ Z \(小文字\)、特殊な値が次の表に示すように、アンダー スコアで始まる以外の文字で始まる必要があります。  
  
|対象の値|説明|  
|----------|--------|  
|`_blank`|新しいウィンドウ フレームを使用せずにコンテンツをレンダリングします。|  
|`_parent`|直前のフレーム セットの親に内容を表示します。|  
|`_search`|\[検索\] ウィンドウのコンテンツをレンダリングします。|  
|`_self`|フォーカスのあるフレームのコンテンツをレンダリングします。|  
|`_top`|フル ウィンドウ フレームを使用せずにコンテンツをレンダリングします。|  
  
> [!NOTE]
>  かどうかをブラウザーのマニュアルを確認して、 `_search` 値はサポートされています。  たとえば、バージョンの Internet Explorer 5.0 以降のサポート、 `_search` ターゲット値  
  
 このプロパティは、すべてのメニュー項目に適用されます、 <xref:System.Web.UI.WebControls.Menu> コントロールです。 選択的に設定してこのプロパティをオーバーライドすることができます、 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> の各プロパティ <xref:System.Web.UI.WebControls.MenuItem> オブジェクトに直接します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティは、対象の属性として表示されます。 アンカー要素で対象の属性は、XHTML 1.1 strict のドキュメント型定義では許可されません。 表示される出力は、XHTML、またはユーザー補助の標準に準拠する必要がありますは設定されていない場合、 <xref:System.Web.UI.WebControls.MenuItem.Target%2A> プロパティです。 詳細については、[ASP.NET and XHTML Compliance](http://msdn.microsoft.com/ja-jp/1b78d416-66bb-43a5-ac77-c703aab55b97) および [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Menu.Target%2A> 、ユーザーがそのメニュー項目をクリックすると、新しいウィンドウでコンテンツは、各メニュー項目にリンクを指定するプロパティを表示する必要があります。  
  
 [!code-csharp[MenuTarget\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MenuTarget/CS/menutargetcs.aspx#1)]
 [!code-vb[MenuTarget\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MenuTarget/VB/menutargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MenuItem.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Menu.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Menu" /> コントロールに対するビューステートの変更を追跡し、コントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに保存できるようにします。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
  </Members>
</Type>