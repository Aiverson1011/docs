<Type Name="ListControl" FullName="System.Web.UI.WebControls.ListControl">
  <TypeSignature Language="C#" Value="public abstract class ListControl : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IEditableTextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ListControl extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IEditableTextControl, class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IEditableTextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.WebControls.ListControlDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Items")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>すべてのリスト型コントロールに共通なプロパティ、メソッド、およびイベントを定義する抽象基本クラスの役割を果たします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス、 <xref:System.Web.UI.WebControls.ListControl> 抽象クラスを直接作成することはできません。 代わりに、このクラスは、他のクラスによって継承など、 <xref:System.Web.UI.WebControls.CheckBoxList>, 、<xref:System.Web.UI.WebControls.DropDownList>, 、<xref:System.Web.UI.WebControls.ListBox>, 、および <xref:System.Web.UI.WebControls.RadioButtonList> クラス、共通の基本的な機能を提供します。  
  
 プロパティ、 <xref:System.Web.UI.WebControls.ListControl> クラスを使用するリスト コントロールを作成するデータのソースを指定します。 使用して、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> プロパティ リスト コントロールにバインドするデータ ソースを指定します。 データ ソースに複数のテーブルが含まれている場合、 <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A> プロパティを使用するテーブルを指定します。 データ ソース内の各フィールドをバインドすることができます、 <xref:System.Web.UI.WebControls.ListItem.Text%2A?displayProperty=fullName> と <xref:System.Web.UI.WebControls.ListItem.Value%2A?displayProperty=fullName> を設定して、リスト コントロール内の項目のプロパティ、 <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> と <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> プロパティそれぞれします。 リスト コントロール内の各項目での表示テキストの書式を設定して、 <xref:System.Web.UI.WebControls.ListControl.DataTextFormatString%2A> プロパティです。  
  
 リスト コントロールに表示されるすべての項目が含まれて、 <xref:System.Web.UI.WebControls.ListControl.Items%2A> コレクションです。 プログラムを使用して指定するかを使用して、リスト コントロールで選択した項目のインデックスを特定、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> プロパティです。 選択した項目のプロパティを使用してアクセスできる、 <xref:System.Web.UI.WebControls.ListControl.SelectedItem%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.ListControl> クラスには、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> サーバーへのポスト間で、リスト コントロールで選択が変更されたときに発生するイベントです。 これにより、このイベントのカスタム ハンドラーを提供することができます。 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ListControl> クラスが実装する、 <xref:System.Web.UI.IEditableTextControl> リスト型コントロールを派生するためのインターフェイスは、他のコントロールのテンプレート モードで使用できます。  
  
   
  
## 例  
 次のコード例では、項目を選択、 <xref:System.Web.UI.WebControls.ListBox> コントロールです。 テキスト ボックスに、項目が見つかった場合、項目が選択され、選択した項目の名前を示すメッセージが表示されます。 項目が見つからない場合は、項目が選択されていないと、項目が見つからなかったことを示すメッセージが表示されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[ListControlSelectedValue\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlSelectedValue/CS/listcontrolselectedvaluecs.aspx#1)]
 [!code-vb[ListControlSelectedValue\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlSelectedValue/VB/listcontrolselectedvaluevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
    <altmember cref="T:System.Web.UI.WebControls.DropDownList" />
    <altmember cref="T:System.Web.UI.WebControls.ListBox" />
    <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を示しますハウツー プログラムを使用して  
  
 作成、 <xref:System.Web.UI.WebControls.ListBox> コントロールです。 例では、 <xref:System.Web.UI.WebControls.PlaceHolder> コントロールのコンテナーとして、 <xref:System.Web.UI.WebControls.ListBox>です。  
  
 [!code-csharp[ListControlctor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlctor/CS/sourcecs.aspx#1)]
 [!code-vb[ListControlctor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlctor/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトの表示に HTML 属性およびスタイルを適用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.AddAttributesToRender%2A> メソッドは、主にコントロールの開発者によって追加の属性を挿入するために使用しにスタイルを設定、 <xref:System.Web.UI.HtmlTextWriter> から派生したコントロールの出力ストリームは、 <xref:System.Web.UI.WebControls.ListControl> クラスです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.WebControls.ListControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> method overrides the <see cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> method.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AppendDataBoundItems">
      <MemberSignature Language="C#" Value="public virtual bool AppendDataBoundItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendDataBoundItems" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.AppendDataBoundItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインディングの前にリスト項目が消去されるかどうかを示す値を取得または設定します。</summary>
        <value>データ バインディングの前にリスト項目が消去されない場合は <see langword="true" />。データ バインディングが行われる前に項目のコレクションが消去される場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.AppendDataBoundItems%2A> プロパティを使用すると、項目の追加、 <xref:System.Web.UI.WebControls.ListControl> オブジェクトのデータ バインドが発生する前にします。 データ バインディングの後の項目コレクションには、データ ソースから取得した項目と、以前に追加された項目の両方が含まれています。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、データ バインド項目とのデータ バインドされていない項目の両方を含める、 <xref:System.Web.UI.WebControls.ListBox> コントロールです。<xref:System.Web.UI.Control.Load> イベントを <xref:System.Web.UI.Page>, に 1 つの項目を追加、 <xref:System.Web.UI.WebControls.ListControl.Items%2A> コレクションおよび <xref:System.Web.UI.WebControls.ListControl.AppendDataBoundItems%2A> にプロパティが設定されている `true`します。 次に、 <xref:System.Web.UI.WebControls.ListBox> コントロールにバインドする、 <xref:System.Data.DataTable> コントロールです。 その結果、 <xref:System.Web.UI.WebControls.ListBox> コントロールには、データ バインド項目と個別に追加された項目の両方が含まれています。  
  
 [!code-csharp[ListControlAppendDataBoundItems\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlAppendDataBoundItems/CS/AppendItemsCs.aspx#1)]
 [!code-vb[ListControlAppendDataBoundItems\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlAppendDataBoundItems/VB/AppendItemsVb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBack">
      <MemberSignature Language="C#" Value="public virtual bool AutoPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.AutoPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リストの選択を変更したときに、サーバーへのポストバックが自動的に発生するかどうかを示す値を取得または設定します。</summary>
        <value>リストの選択を変更するたびにサーバーへのポストバックが自動的に発生する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定 `true` 場合は、サーバーが行われるとすぐには、選択範囲をキャプチャする必要があります。 たとえば、Web ページの他のコントロールは、リスト コントロールから、ユーザーの選択に応じて自動的に入力します。  
  
 このプロパティは、ユーザーの一覧で選択した項目に基づいて Web ページの他のコントロールの自動作成を許可するように使用できます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例では、有効にする <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> の <xref:System.Web.UI.WebControls.ListBox> コントロールです。  
  
 [!code-csharp[ListControlAutoPostBack\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlAutoPostBack/CS/ListControlAutoPostBackcs.aspx#1)]
 [!code-vb[ListControlAutoPostBack\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlAutoPostBack/VB/ListControlAutoPostBackvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> クラスから派生したコントロールがクリックされたときに検証を実行するかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> コントロールがクリックされたときに検証を実行する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> property to determine whether validation is performed when a <xref:System.Web.UI.WebControls.ListControl> control is clicked. Page validation determines whether the input controls that are associated with a validation control on the page all pass the validation rules that are specified by the validation control.  
  
 By default, clicking a control that is derived from the <xref:System.Web.UI.WebControls.ListControl> class does not cause page validation. To perform page validation when the control that is derived from the <xref:System.Web.UI.WebControls.ListControl> class is clicked, set the <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> property to **languageKeyword tag is not supported!!!!**  
.  
  
 When the value of the <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> property is set to **languageKeyword tag is not supported!!!!**  
, you can also use the <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.ListControl> control causes validation.  
  
 The value of this property is stored in view state.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="ClearSelection">
      <MemberSignature Language="C#" Value="public virtual void ClearSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.ClearSelection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リストの選択を解除して、すべての項目の <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> プロパティを false に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this method to reset the control so that no items are selected.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListItem.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リスト項目のテキストの内容を提供するデータ ソースのフィールドを取得または設定します。</summary>
        <value>リスト項目のテキストの内容を提供するデータ ソースのフィールド。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用してフィールドを指定する、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> リスト コントロールのリストの項目として表示するプロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> の <xref:System.Web.UI.WebControls.RadioButtonList> コントロールです。<xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> に表示されるテキスト、 <xref:System.Web.UI.WebControls.RadioButtonList>です。  
  
 [!code-csharp[ListControlDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-vb[ListControlDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リスト コントロールに連結されたデータの表示方法を制御するために使用する書式指定文字列を取得または設定します。</summary>
        <value>コントロールに連結されたデータの書式指定文字列。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.ListControl.DataTextFormatString%2A> property to provide a custom display format the items in a list control.  
  
 The data format string consists of two parts, separated by a colon, in the form { **parameterReference tag is not supported!!!!**  
 : **parameterReference tag is not supported!!!!**  
 }. For example, the formatting string {0:F2} would format the cell to display a fixed point number with two decimal places.  
  
> [!NOTE]
>  The entire string must be enclosed in braces to indicate that it is a format string and not a literal string. Any text outside the braces is displayed as literal text.  
  
 The value before the colon \(**parameterReference tag is not supported!!!!**  
 in the general example\) specifies the parameter index in a zero\-based list of parameters.  
  
> [!NOTE]
>  This value can only be set to 0 because there is only one value in each cell.  
  
 The character after the colon \(**parameterReference tag is not supported!!!!**  
 in the general example\) specifies the format to display the value in. The following table lists the common formats.  
  
|Format character|Description|  
|----------------------|-----------------|  
|`C`|Displays numeric values in currency format.|  
|`D`|Displays numeric values in decimal format.|  
|`E`|Displays numeric values in scientific \(exponential\) format.|  
|`F`|Displays numeric values in fixed format.|  
|`G`|Displays numeric values in general format.|  
|`N`|Displays numeric values in number format.|  
|`X`|Displays numeric values in hexadecimal format.|  
  
> [!NOTE]
>  The format character is not case\-sensitive, except for **languageKeyword tag is not supported!!!!**  
> , which displays the hexadecimal characters in the case specified.  
  
 The value after the format character \(**parameterReference tag is not supported!!!!**  
 in the general example\) specifies the number of significant digits or decimal places to display.  
  
 The following table contains examples of formatting strings and the results. It assumes standard English settings.  
  
|Numeric Value|Format String|Result|  
|-------------------|-------------------|------------|  
|12345.6789|"{0:C}"|$12,345.68|  
|\-12345.6789|"{0:C}"|\($12,345.68\)|  
|12345|"{0:D}"|12345|  
|12345|"{0:D8}"|00012345|  
|12345.6789|"{0:E}"|1234568E\+004|  
|12345.6789|"{0:E10}"|1.2345678900E\+004|  
|12345.6789|"{0:F}"|12345.68|  
|12345.6789|"{0:F0}"|12346|  
|12345.6789|"{0:G}"|12345.6789|  
|123456789|"{0:G7}"|1.234568E8|  
|12345.6789|"{0:N}"|12,345.68|  
|123456789|"{0:N4}"|123,456,789.0000|  
|12345.6789|"Total: {0:C}"|Total: $12345.68|  
  
 For more information on formatting strings, see [Formatting Overview](http://msdn.microsoft.com/ja-jp/0d1364da-5b30-4d42-8e6b-03378343343f).  
  
 The value of this property is stored in view state.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataValueField">
      <MemberSignature Language="C#" Value="public virtual string DataValueField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataValueField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.DataValueField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各リスト項目の値を提供するデータ ソースのフィールドを取得または設定します。</summary>
        <value>各リスト項目の値を提供するデータ ソースのフィールド。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this property to specify the field that contains the value of each item in a list control.  
  
 The value of this property is stored in view state.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## 例  
 The following example demonstrates how to specify the <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> for the <xref:System.Web.UI.WebControls.RadioButtonList> control. The <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> is the value for the each item in the <xref:System.Web.UI.WebControls.RadioButtonList>.  
  
 [!code-csharp[ListControlDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-vb[ListControlDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ListItemsCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リスト コントロールの項目のコレクションを取得します。</summary>
        <value>リスト内の項目。 既定値は空のリストです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、リスト コントロール項目のプロパティを取得します。 このプロパティは、リスト コントロールで選択された項目を使用できます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.ListControl.Items%2A> の選択した項目を決定するプロパティ、 <xref:System.Web.UI.WebControls.CheckBoxList> コントロールです。  
  
 [!code-csharp[ListControlItems\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlItems/CS/ListControlItemscs.aspx#1)]
 [!code-vb[ListControlItems\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlItems/VB/ListControlItemsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生コントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.DetailsView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.LoadViewState%2A> メソッドの以前に保存されたビューステートの読み込みを使用して、 <xref:System.Web.UI.WebControls.ListControl> \-コントロールを派生します。  
  
> [!NOTE]
>  拡張する場合、このメソッドは、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.ListControl> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnDataBinding(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.DataBinding" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.DataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、ビュー ステートや内容の表示を保存する前に、必要なプリレンダ リング手順を実行するサーバー コントロールに通知します。通常は、使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.ListControl> クラスです。  
  
 <xref:System.Web.UI.WebControls.ListControl.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.ListControl.OnPreRender(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListControl.SelectedIndexChanged" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> イベント リスト コントロール内の選択項目がサーバーへのポスト間で変更されたときに発生します。  
  
> [!NOTE]
>  リスト コントロールには、正常に動作するには、このイベントのサーバーへのポスト間のいくつかの値は保持されます。 リスト コントロールのビュー ステートが有効になっていることを確認します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次の例には、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> ユーザーによる選択範囲を表示するイベントです。  
  
 [!code-csharp[ListControlDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-vb[ListControlDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListControl.SelectedIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListControl.TextChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> から派生したコントロール、メソッドを呼び出して、 <xref:System.Web.UI.WebControls.ListControl> を発生させるクラス、 <xref:System.Web.UI.WebControls.ListControl.TextChanged> イベントです。 一般に、 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> を拡張する場合、メソッドがコントロールの開発者によって使用される、 <xref:System.Web.UI.WebControls.ListControl> クラスです。  
  
 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListControl.TextChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソースを表す <see cref="T:System.Collections.IEnumerable" />。</param>
        <summary>指定したデータ ソースを、<see cref="T:System.Web.UI.WebControls.ListControl" /> クラスから派生したコントロールにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.PerformDataBinding%2A> メソッドから派生したコントロールによって呼び出されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.ListControl> クラスを指定したデータ ソースをコントロールにバインドします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">キャッシュされた値 <see cref="P:System.Web.UI.WebControls.ListControl.SelectedIndex" /> が範囲外です。</exception>
        <exception cref="T:System.ArgumentException">キャッシュされた値の <see cref="P:System.Web.UI.WebControls.ListControl.SelectedIndex" /> と <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" /> 一致しません。</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.PerformSelect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連するデータ ソースからデータを取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.PerformSelect%2A> メソッドの呼び出し、 <xref:System.Web.UI.WebControls.ListControl.PerformDataBinding%2A> メソッドをデータ バインド コントロールの要素のデータをバインドするデータが取得された後です。 詳細については、「<xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="M:System.Web.UI.Control.OnDataBinding(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> コントロールの各項目を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListControl.RenderContents%2A> 内の項目を表示するメソッド、 <xref:System.Web.UI.WebControls.ListControl> クライアントに制御します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生コントロールおよびそれに含まれる項目の現在のビュー状態を保存します。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> コントロールの保存された状態を格納している <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DetailsView.SaveViewState%2A> メソッドによって呼び出されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.ListControl> コントロールの状態を保存するコントロール。  
  
> [!NOTE]
>  拡張する場合、このメソッドは、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.ListControl> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リストで選択された項目の最小の序数インデックスを取得または設定します。</summary>
        <value>リストで選択された項目の最小の序数インデックス。 既定値は \-1 です。これは、何も選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、リスト コントロールで 1 つだけ選択できる場合は、リスト内の現在選択されている項目のインデックスを確認します。 リスト コントロールでは、複数の選択をサポートする場合は、このプロパティを使用して、選択した項目の最小のインデックスを決定します。  
  
 値、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> ポストバック時にプロパティが具体的には保存されません。 ポストバックを使用してで復元されて、 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティです。 たとえば場合、 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティは、ポストバックでは、上の 4、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> のインデックスにプロパティが設定されている、 <xref:System.Web.UI.WebControls.ListItem> を持つオブジェクト、 <xref:System.Web.UI.WebControls.ListItem.Value%2A> 4 のプロパティです。 1 つ以上の場合 <xref:System.Web.UI.WebControls.ListItem> オブジェクトには、 <xref:System.Web.UI.WebControls.ListItem.Value%2A> 4 では、最初の項目のプロパティ、 <xref:System.Web.UI.WebControls.ListControl.Items%2A> コレクションを選択します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例では、使用して <xref:System.Web.UI.WebControls.ListControl.SelectedIndex%2A> で選択された項目の最小のインデックスを決定する、 <xref:System.Web.UI.WebControls.CheckBoxList>です。  
  
 [!code-csharp[ListControlSelectedIndex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlSelectedIndex/CS/ListControlSelectedIndexcs.aspx#1)]
 [!code-vb[ListControlSelectedIndex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlSelectedIndex/VB/ListControlSelectedIndexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">\-1 より小さい値に設定されたインデックスまたはリストをレンダリング時の一覧の項目の数以上です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListControl.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リスト コントロール内の選択項目がサーバーへのポスト間で変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> イベント リスト コントロール内の選択項目がサーバーへのポスト間で変更されたときに発生します。  
  
> [!NOTE]
>  リスト コントロールには、正常に動作するには、このイベントのサーバーへのポスト間のいくつかの値は保持されます。 リスト コントロールのビュー ステートが有効になっていることを確認します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次の例には、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> ユーザーによる選択範囲を表示するイベントです。  
  
 [!code-csharp[ListControlDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-vb[ListControlDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リスト コントロールで最小のインデックスを持つ選択された項目を取得します。</summary>
        <value>リスト コントロールで選択された最小のインデックスを持つ項目。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リスト コントロールでは、単一の選択のみを許可している場合は、このプロパティを使用して、選択したアイテムの個々 のプロパティを取得します。 リスト コントロールでは、複数の選択を許可している場合は、このプロパティを使用して、使用できるインデックス付きのリスト コントロールで選択された項目のプロパティを取得します。  
  
   
  
## 例  
 次の例では、使用して <xref:System.Web.UI.WebControls.ListControl.SelectedItem%2A> で現在選択されているアイテムの個々 のプロパティを取得する、 <xref:System.Web.UI.WebControls.RadioButtonList> し、そのアイテムとその値を表示します。  
  
 [!code-csharp[ListControlDataSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlDataSource/CS/ListControlDataSourcecs.aspx#1)]
 [!code-vb[ListControlDataSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlDataSource/VB/ListControlDataSourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public virtual string SelectedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true, System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リスト コントロール内の選択されている項目の値を取得します。または、指定した値が含まれるリスト コントロール内の項目を選択します。</summary>
        <value>リスト コントロール内の選択されている項目の値。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを返します、 <xref:System.Web.UI.WebControls.ListItem.Value%2A> プロパティの選択された <xref:System.Web.UI.WebControls.ListItem>します。<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> リスト コントロールで選択した項目の値を決定するプロパティは通常使用します。 複数の項目が選択されている場合は、最小のインデックスを持つ選択項目の値が返されます。 項目が選択されていない場合、空の文字列 \(""\) が返されます。  
  
 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティは、項目の値を設定することによってリスト コントロール内の項目を選択するも使用できます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ポストバックが実行されると、選択した値が使用可能な値の一覧ではなく、 <xref:System.ArgumentOutOfRangeException> 例外がスローされます。 次の例では、ポストバックが発生する前に、無効な値をキャッチする方法を示します。  
  
```vb  
Me.DropDownList1.Items.Add(New ListItem( Text="Hello", Value="1" ))   
If DropDownList1.Items.FindByValue("2") IsNot Nothing Then   
    Response.Write("Found")   
End If  
```  
  
```csharp  
this.DropDownList1.Items.Add(new ListItem{ Text="Hello", Value="1" });  
if(DropDownList1.Items.FindByValue("2") != null) {  
    Response.Write("Found");  
}  
```  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 内の項目を選択するプロパティを <xref:System.Web.UI.WebControls.ListBox> コントロールです。 このプロパティは、選択された項目の値を取得するも使用することを確認します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[ListControlSelectedValue\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ListControlSelectedValue/CS/listcontrolselectedvaluecs.aspx#1)]
 [!code-vb[ListControlSelectedValue\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ListControlSelectedValue/VB/listcontrolselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が使用可能な値、表示状態、またはその他の状態の一覧には読み込まれていません \(ポストバックが実行されています\)。 詳細については、「解説」を参照してください。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.DataValueField" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Items" />
        <altmember cref="T:System.Web.UI.WebControls.ListItem" />
        <altmember cref="T:System.ArgumentOutOfRangeException" />
      </Docs>
    </Member>
    <Member MemberName="SetPostDataSelection">
      <MemberSignature Language="C#" Value="protected void SetPostDataSelection (int selectedIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPostDataSelection(int32 selectedIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.SetPostDataSelection(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="selectedIndex">
          <see cref="P:System.Web.UI.WebControls.ListControl.Items" /> コレクション内の選択された項目のインデックス。</param>
        <summary>ページがポストされた後、<see cref="T:System.Web.UI.WebControls.ListItem" /> コントロールの <see cref="P:System.Web.UI.WebControls.ListItem.Selected" /> プロパティを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.SetPostDataSelection%2A> メソッドは、ヘルパー メソッドで選択した項目を保持する、 <xref:System.Web.UI.WebControls.ListControl> ページがポストされた後に制御します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.TagKey%2A> プロパティから派生したコントロールの適切な HTML マークアップを書き込む出力ストリーム、 <xref:System.Web.UI.WebControls.ListControl> クラスです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can override the <see cref="P:System.Web.UI.WebControls.ListControl.TagKey" /> property to specify which <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value to use for your derived control.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> コントロールの <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" /> プロパティを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> の <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.Text%2A> プロパティを取得し、同じ値を設定、 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>e プロパティです。  
  
 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> で選択した項目の値を決定するプロパティは通常使用、 <xref:System.Web.UI.WebControls.ListControl> コントロールです。 項目が選択されていない場合、空の文字列 \(""\) が返されます。  
  
 使用することも、 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> 内の項目を選択するプロパティを <xref:System.Web.UI.WebControls.ListControl> 項目の値を設定することによって制御されます。 場合に項目がありません、 <xref:System.Web.UI.WebControls.ListControl> コントロールは、指定した値を含む、 <xref:System.ArgumentOutOfRangeException?displayProperty=fullName> 例外がスローされます。  
  
 コントロールの開発者がオーバーライドできる、 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティに関連していない機能をサポートする、 <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティです。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListControl.TextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.ListControl.Text" /> プロパティと <see cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" /> プロパティが変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.TextChanged> イベントが発生したときに、 <xref:System.Web.UI.WebControls.ListControl.Text%2A> と <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> プロパティが変更されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ListControl.OnTextChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ListControl.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.Text" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListControl" /> 派生コントロールに対するビュー状態の変更の追跡と保存を始める開始点にマークを付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドをオーバーライドして、コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始点をマークします。  
  
> [!NOTE]
>  拡張する場合、このメソッドは、主にコントロールの開発者によって使用 <xref:System.Web.UI.WebControls.ListControl>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListControl.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.ListControl" /> クラスから派生したコントロールによって発生する検証の対象となるコントロールのグループを取得または設定します。</summary>
        <value>サーバーへのポストバック時に、派生した <see cref="T:System.Web.UI.WebControls.ListControl" /> によって発生する検証の対象となるコントロールのグループ。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループから個別に検証できます。 使用して、 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> の検証グループの名前を指定するプロパティから派生したコントロール、 <xref:System.Web.UI.WebControls.ListControl> クラスは、サーバーへのポストバック時に検証を実行します。  
  
 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> プロパティは、有効される場合にのみの値、 <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> にプロパティが設定されている `true`します。 値を指定すると、 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> プロパティには、指定したグループの一部である検証コントロールだけは、検証、 <xref:System.Web.UI.WebControls.ListControl> コントロールは、サーバーにポストバックします。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> プロパティおよび <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> にプロパティが設定されている `true`, 、検証グループに割り当てられていないページ上のすべての検証コントロールは、サーバーへのコントロールのポストバック時に検証されます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ListControl.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
    <Member MemberName="VerifyMultiSelect">
      <MemberSignature Language="C#" Value="protected virtual void VerifyMultiSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void VerifyMultiSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListControl.VerifyMultiSelect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リスト コントロールが複数選択モードをサポートするかどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListControl.VerifyMultiSelect%2A> メソッドは何も複数選択がサポートされている場合。 それ以外の場合、スロー、 <xref:System.Web.HttpException> 例外です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.ListBox.SelectionMode" /> が <see cref="F:System.Web.UI.WebControls.ListSelectionMode.Single" /> に設定されます。</exception>
      </Docs>
    </Member>
  </Members>
</Type>