<Type Name="LoginView" FullName="System.Web.UI.WebControls.LoginView">
  <TypeSignature Language="C#" Value="public class LoginView : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LoginView extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LoginView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ViewChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("CurrentView")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LoginViewDesigner,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>特定のユーザーの認証の状態およびロール メンバーシップに基づいて、そのユーザーに適切なコンテンツ テンプレートを表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.LoginView> 別の Web サイト コンテンツ テンプレート \(または「ビュー」\) でユーザーごとのユーザーを認証するかどうかに基づいてにコントロールが表示され、かどうかに属している場合は、Web サイトの役割です。  
  
> [!NOTE]
>  ASP.NET で使用できるログイン コントロールのセットに慣れていない場合は、次を参照してください。 [ASP.NET Login Controls Overview](http://msdn.microsoft.com/ja-jp/ac032230-6469-4b03-b68d-03ef2643a24d) 続行する前にします。 ログイン コントロールおよびメンバーシップに関連するその他のトピックの一覧は、次を参照してください。 [Managing Users By Using Membership](http://msdn.microsoft.com/ja-jp/824c3a24-f0af-427c-a652-0d2d1e9397cd)します。  
  
 テンプレートが保管されて、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> がログインしていない Web サイトの訪問者にプロパティが表示されます。 サイトにユーザーのログインは、ユーザーのロールのいずれかに関連付けられている、テンプレートのいずれかが表示されます、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> プロパティまたは既定のテンプレートで指定された、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.LoginView> コントロールでは、3 つのテンプレートのプロパティのいずれかにテンプレートを割り当てると、さまざまなテンプレート間で切り替えを管理する、 <xref:System.Web.UI.WebControls.LoginView> クラス。  
  
-   <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> \-Web サイトにログインしていないユーザーに表示するテンプレートを指定します。 ログオンしているユーザーでは、このテンプレートは参照できません。  
  
-   <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> \-Web サイト ログインしているが、定義済みのテンプレートでの役割グループに属していないユーザーに表示する既定のテンプレートを指定します。  
  
-   <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> \-定義済みの役割グループ テンプレートを持つロールのメンバーであるログインにユーザーに表示するテンプレートを指定します。 テンプレートは、ロール内の特定のセットに関連付けられたコンテンツ <xref:System.Web.UI.WebControls.RoleGroup> インスタンス。  
  
 ロール グループのテンプレートは、ソースで定義されている順序で検索されます。 最初に一致するロール グループ テンプレートは、ユーザーに表示されます。 ユーザーが 1 つ以上のロールのメンバーである場合は、ユーザーのロールのいずれかに一致する最初の役割グループ テンプレートは使用されます。 複数のテンプレートは、1 つのロールに関連付けられて、最初に定義されているテンプレートだけが使用されます。  
  
 次の表の動作、 <xref:System.Web.UI.WebControls.LoginView> テンプレートのさまざまな組み合わせが使用されている場合を制御します。  
  
|当てはまります Template プロパティ|匿名の Template プロパティ|Rolegroup プロパティ|LoginView 動作|  
|----------------------------|------------------------|---------------------|------------------|  
|未設定|未設定|未設定|コンテンツは表示されません。|  
|設定|未設定|未設定|ユーザーがログインした場合にのみ、内容を表示します。|  
|未設定|設定|未設定|ユーザーがサインインしていない場合にのみ、内容を表示します。|  
|未設定|未設定|設定|最初のテンプレートを表示、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> ユーザーのロールのいずれかと一致するコレクション。 一致が見つからない場合に、コンテンツを表示されません。|  
|設定|設定|未設定|表示で指定されたテンプレートの場合は、ユーザーがログインに、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティです。 ユーザーにログインしていない場合で指定したテンプレートを表示、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> プロパティです。|  
|設定|設定|設定|表示の最初のテンプレートの場合は、ユーザーがログインに、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> ユーザーのロールのいずれかと一致するコレクション。 一致が見つからない場合で指定されたテンプレートを表示、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティです。 指定されたテンプレートを表示、ユーザーがログインしていない場合、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> プロパティです。|  
|設定|未設定|設定|表示の最初のテンプレートの場合は、ユーザーがログインに、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> ユーザーのロールのいずれかと一致するコレクション。 一致が見つからない場合で指定されたテンプレートを表示、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティです。 ユーザーがログインしていない場合は、何も表示されます。|  
|未設定|設定|設定|表示の最初のテンプレートの場合は、ユーザーがログインに、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> ユーザーのロールのいずれかと一致するコレクション。 一致が見つからない場合は、何も表示されます。 指定されたテンプレートを表示、ユーザーがログインしていない場合、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> プロパティです。|  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> と <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> を設定する任意の認証スキームで使用できる、 <xref:System.Security.Principal.IIdentity.Name%2A> のプロパティ、 <xref:System.Web.UI.Page> オブジェクトの <xref:System.Web.UI.Page.User%2A> プロパティです。 使用するロールの管理を構成する必要があります、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> Web サイトでユーザーのロール ベースのテンプレートを定義するプロパティです。 詳細については、「[Understanding ASP.NET Role Management](http://msdn.microsoft.com/ja-jp/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)」を参照してください。  
  
 <xref:System.Web.UI.Control.Focus%2A> メソッドは、Web ページの初期フォーカスを設定していない、 <xref:System.Web.UI.WebControls.LoginView> コントロール、またはその子コントロールのいずれかです。 含まれるコントロール、 <xref:System.Web.UI.WebControls.LoginView> 後にコントロールが作成された、 <xref:System.Web.UI.Control.PreRender> イベントです。 含まれる子コントロールにフォーカスを設定する、 <xref:System.Web.UI.WebControls.LoginView>, 、処理、 `On_PreRender` を呼び出すと、 <xref:System.Web.UI.Control.Focus%2A> メソッドです。  使用することも、 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> と <xref:System.Web.UI.WebControls.LoginView.ViewChanged> イベント内のコントロールをプログラムでアクセスを <xref:System.Web.UI.WebControls.LoginView> コントロール テンプレートです。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:LoginView  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    OnViewChanged="ViewChanged event handler"  
    OnViewChanging="ViewChanging event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <AnonymousTemplate>  
            <!-- child controls -->  
        </AnonymousTemplate>  
        <LoggedInTemplate>  
            <!-- child controls -->  
        </LoggedInTemplate>  
        <RoleGroups>  
                <asp:RoleGroup  
                    Roles="string"  
                >  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                </asp:RoleGroup>  
        </RoleGroups>  
</asp:LoginView>  
```  
  
   
  
## 例  
 次のコード例は、3 つのテンプレートがサポートの種類ごとにテンプレートを設定する方法を示します、 <xref:System.Web.UI.WebControls.LoginView> コントロールです。  
  
 [!code-csharp[LoginViewClass\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewClass/CS/loginviewclasscs.aspx#1)]
 [!code-vb[LoginViewClass\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewClass/VB/loginviewclassvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Security.Roles" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LoginView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AnonymousTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AnonymousTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.AnonymousTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定する Web サイトにログインしていないユーザーに表示するテンプレート。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> を表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> プロパティは、Web サイトのユーザーの Web サイトにサインインしていない、ときに表示するコンテンツのテンプレートを指定します。 このテンプレートが表示されるときに、 <xref:System.Security.Principal.IIdentity.Name%2A> のプロパティ、 <xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A> プロパティは `null`です。  
  
 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> テンプレートが認証されたユーザーに表示されることはありません。 場合、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> プロパティが空、ログインしていないユーザーにコンテンツは表示されません。  
  
   
  
## 例  
 次のコード例で指定されたテンプレートを使用して、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> にサインアップするための招待を表示するテンプレートがサービスをカスタマイズします。  
  
 [!code-csharp[LoginViewAnonymousTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-vb[LoginViewAnonymousTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.ControlCollection" /> の子を含むオブジェクトを制御、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールです。</summary>
        <value>子コントロールのコレクション、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子コントロールを構成するを作成、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.CreateChildControls%2A> メソッドを構成する個々 のコントロールの作成、 <xref:System.Web.UI.WebControls.LoginView> コントロールです。 作成されるコントロール セットは、ユーザーに表示されるコンテンツ テンプレートによって異なります。 たとえば、ユーザーが Web サイト ログインしていない場合、テンプレートに含まれるコントロールのみで指定、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> プロパティを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースをバインド <see cref="T:System.Web.UI.WebControls.LoginView" /> とそのすべての子コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.LoginView.DataBind%2A> をソースからデータをバインドするメソッド、 <xref:System.Web.UI.WebControls.LoginView> コントロールとその子。 このメソッド内のすべてのデータ バインディング式を解決する、 <xref:System.Web.UI.WebControls.LoginView> コントロールおよび作業中のテンプレートで子コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にテーマを適用できるかどうかを示す値、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> テーマを使用するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> プロパティは、テーマが有効になっているかどうかを示す、 <xref:System.Web.UI.WebControls.LoginView> コントロールです。<xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> プロパティに含まれるコントロールのテーマが有効になっているかどうかにも影響、 <xref:System.Web.UI.WebControls.LoginView.Controls%2A> コレクションです。 ときに、 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> プロパティは、 `true`, 、コントロール スキンを適用するテーマのアプリケーションのディレクトリが検索されます。 テーマ ディレクトリに特定のコントロールのスキンが存在しない場合、スキンは適用されません。 ときに、 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> プロパティは、 `false`, 、テーマ ディレクトリは検索されませんおよびの内容、 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> プロパティは使用されません。  
  
 オーバーライド、 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> 値の親コントロールまたはコントロールを含むページで設定します。 たとえば、親コントロールがある <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> に設定 `false`, を設定して、親内に含まれる子コントロールにテーマを選択的に適用できます、 <xref:System.Web.UI.WebControls.LoginView.EnableTheming%2A> プロパティを `true` 個々 の子コントロールにします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>入力コントロールにフォーカスを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.Focus%2A> メソッドは、Web ページの初期フォーカスを設定していない、 <xref:System.Web.UI.WebControls.LoginView> コントロールまたはその子コントロールのいずれかにします。 コントロールに含まれている、 <xref:System.Web.UI.WebControls.LoginView> 後にコントロールが作成された、 <xref:System.Web.UI.Control.PreRender> イベントです。 含まれる子コントロールにフォーカスを設定する、 <xref:System.Web.UI.WebControls.LoginView>, 、処理、 `On_PreRender` を呼び出すと、 <xref:System.Web.UI.Control.Focus%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出す、 <see cref="M:System.Web.UI.WebControls.LoginView.Focus" /> メソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary>このメソッドは、<see cref="M:System.Web.UI.Control.LoadControlState(System.Object)" /> を実装します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoggedInTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LoggedInTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LoggedInTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.LoggedInTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.LoginView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定する Web サイト ログインしているが、いずれかで指定したロール グループのメンバーではない Web サイト ユーザーに表示するテンプレート、 <see cref="P:System.Web.UI.WebControls.LoginView.RoleGroups" /> プロパティです。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> を表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> の両方の次の条件が満たされたときに、Web サイトのユーザーにプロパティが表示されます。  
  
-   <xref:System.Security.Principal.IIdentity.Name%2A> のプロパティ、 <xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A> プロパティは使用されません `null`  
  
-   ユーザーがで定義されたロール グループに属していない、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティは、認証済みの Web サイトのユーザーの既定のテンプレートを指定します。 ロール管理が構成されていない場合、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> 認証されたユーザーの専用のテンプレートがあります。 ロール管理の構成に関する詳細については、次を参照してください。 [Understanding ASP.NET Role Management](http://msdn.microsoft.com/ja-jp/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> ログイン ユーザーの個人用に設定された情報へのリンクを表示するテンプレートです。  
  
 [!code-csharp[LoginViewAnonymousTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewAnonymousTemplate/CS/loginviewanonymoustemplatecs.aspx#1)]
 [!code-vb[LoginViewAnonymousTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewAnonymousTemplate/VB/loginviewanonymoustemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> メソッドの初期化を実行する、 <xref:System.Web.UI.WebControls.LoginView> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.LoginView.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>ログイン ユーザーの役割に基づく表示するにはロール グループ テンプレートを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> 中にメソッドが呼び出されます、 <xref:System.Web.UI.Control.PreRender> イベント、ユーザーに表示するコンテンツ テンプレートを特定します。 場合、 <xref:System.Security.Principal.IIdentity.Name%2A> のプロパティ、 <xref:System.Web.UI.Page><xref:System.Web.UI.Page.User%2A> プロパティは、 `null`, で指定されたテンプレート、 <xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> プロパティが表示されます。 それ以外の場合、ユーザーのロールに関連付けられているテンプレートが表示されます。 ユーザーが定義されたロール グループに属していない場合、またはロールの管理が構成されていない場合、 <xref:System.Web.UI.WebControls.LoginView> コントロールで指定したテンプレートを表示、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティです。 ロール管理の構成に関する詳細については、次を参照してください。 [Role Management Providers](http://msdn.microsoft.com/ja-jp/71ddd651-5f91-471b-ad9f-61249b0bf0d5)します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.LoginView.OnPreRender(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" /> の後のイベント、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールがビューを切り替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.LoginView> コントロールがビューを切り替えると、以前のテンプレートからのコントロールを削除し、新しいテンプレートから新しい子コントロールを作成します。<xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> メソッドが呼び出される新しい子コントロールを作成します。  
  
 使用して、 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> などのデータ バインド、新しいビューにコントロールを初期化するために必要な処理を実行します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnViewChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnViewChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnViewChanging (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnViewChanging(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" /> 前に、イベント、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールがビューを切り替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.LoginView> コントロールがビューを切り替えると、以前のテンプレートからのコントロールを削除し、新しいテンプレートから新しい子コントロールを作成します。<xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> 以前のコントロールが削除される前に、メソッドが呼び出されます。  
  
 使用して、 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> コントロールが削除される前に、コントロールの情報の保存など、必要な処理を実行するメソッドです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.LoginView.OnViewChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> クライアントのブラウザーでサーバー コントロールの内容を表示するために使用します。</param>
        <summary>Web サーバー コントロールの内容を指定してクライアントのブラウザーのレンダリング <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.Render%2A> メソッドを使用して、サーバー コントロールの内容を指定してクライアントのブラウザーのレンダリング <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> オブジェクトです。  
  
 **注** このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.LoginView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RoleGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RoleGroupCollection RoleGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RoleGroupCollection RoleGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.RoleGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RoleGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定のロールのテンプレートに関連付けるロール グループのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> 定義済みロール グループ テンプレートを含むオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> プロパティには、Web サイトでさまざまなロールに関連付けられたコンテンツ テンプレートが含まれています。 内のコレクション、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> プロパティは、テンプレートが、ソースで定義されている順番で検索されます。 最初に一致するロール グループ テンプレートは、ユーザーに表示されます。 ユーザーが 1 つ以上のロールのメンバーである場合は、ユーザーのロールのいずれかに一致する最初の役割グループ テンプレートは使用されます。 複数のテンプレートが単一のロールに関連付けられている場合は、最初に定義されているテンプレートだけが使用されます。  
  
 サイトがで指定されたコンテンツのテンプレートを表示するログイン ユーザーがロール グループ コレクションに含まれるすべてのロールに属していない場合、 <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティです。 任意のテンプレートに含まれている匿名ユーザーが表示されない、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> コレクションです。  
  
 使用するロールの管理を構成する必要があります、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> テンプレートを定義するプロパティは、Web サイトのユーザーのロールに基づいています。 詳細については、「[Understanding ASP.NET Role Management](http://msdn.microsoft.com/ja-jp/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6)」を参照してください。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用方法を示します、 <xref:System.Web.UI.WebControls.LoginView.RoleGroups%2A> コレクションです。<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A> と <xref:System.Web.UI.WebControls.LoginView.LoggedInTemplate%2A> プロパティが設定されていない、コンテンツが定義されているコンテンツ テンプレートを使用してロールに属しているユーザーにのみ表示されます。  
  
 [!code-csharp[LoginViewRoleGroups\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LoginViewRoleGroups/CS/loginviewrolegroupscs.aspx#1)]
 [!code-vb[LoginViewRoleGroups\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LoginViewRoleGroups/VB/loginviewrolegroupsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.Roles" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生したすべてのサーバー コントロール状態の変化を保存します。</summary>
        <returns>サーバー コントロールの現在の状態を返します。 このコントロールに関連付けられている状態がない場合、このメソッドは <see langword="null" /> を返します。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LoginView.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">コントロールのデザイン時データを格納する <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>コントロールのデザイン時データを設定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LoginView.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に適用するスキン、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールです。</summary>
        <value>適用するスキンの名前、 <see cref="T:System.Web.UI.WebControls.LoginView" /> コントロールです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールで使用できるスキンは、テーマ ディレクトリ内の 1 つまたは複数のスキン ファイルに格納されます。<xref:System.Web.UI.WebControls.LoginView.SkinID%2A> プロパティには、これらのコントロールに適用するスキンのどれを指定します。 スキンは、特定のコントロールに固有異なる種類のコントロール間のスキンの設定を共有することはできません。  
  
 設定しない場合、 <xref:System.Web.UI.WebControls.LoginView.SkinID%2A> プロパティには、コントロールを使用して既定のスキンが定義されている場合。 などの場合、スキンなし ID の定義、 <xref:System.Web.UI.WebControls.Image> コントロールすべてにそのスキンを適用し、 <xref:System.Web.UI.WebControls.Image> コントロールを明示的に参照しない ID を使用して、スキンおよびテーマを無効にするには設定されていません。 ID を使用して、スキンが定義されている場合、 <xref:System.Web.UI.WebControls.Image> し、そのスキンの適用にのみ、制御 <xref:System.Web.UI.WebControls.Image> の制御 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> その ID に設定されています。  
  
 テーマ ディレクトリ内のスキン ファイルは、指定したスキンを含んでいない場合に <xref:System.Web.UI.WebControls.LoginView.SkinID%2A>, 、 <xref:System.ArgumentException> 実行時に例外がスローされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定されたスキン、 <see cref="P:System.Web.UI.WebControls.LoginView.SkinID" /> テーマのプロパティが存在しません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.LoginView.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビューが変更された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.LoginView> コントロールがビューを切り替えると、以前のテンプレートからのコントロールを削除し、新しいテンプレートから新しい子コントロールを作成します。<xref:System.Web.UI.WebControls.LoginView.ViewChanged> イベントは、新しい子コントロールを作成後に発生します。  
  
 使用して、 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> などのデータ バインド、新しいビューにコントロールを初期化するために必要な処理を実行するイベントです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanged> イベントは、ページにポストバック中に、ユーザーのログイン状態が変更された場合だけ発生します。<xref:System.Web.UI.WebControls.LoginView.ViewChanged> ユーザーがログインを使用する場合、イベントは発生しません、 <xref:System.Web.UI.WebControls.Login> コントロールを使用して、ユーザーがログオフする場合や、 <xref:System.Web.UI.WebControls.LoginStatus> コントロールです。<xref:System.Web.UI.WebControls.LoginView.ViewChanged> イベントがない場合にも、ユーザーがログインまたはアウトの後に、リダイレクトします。 ある場合を例、 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> 呼び出すことによって、ユーザーがログインしたときに、イベントが発生する、 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> 別のページにリダイレクトされることがなくメソッドです。 次のページにポストバック中に、 <xref:System.Web.UI.WebControls.LoginView> コントロールは、ユーザーのログイン ステータスの変更が検出され、発生し、 <xref:System.Web.UI.WebControls.LoginView.ViewChanged> イベントです。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      </Docs>
    </Member>
    <Member MemberName="ViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler ViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LoginView.ViewChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビューを変更するまでに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.LoginView> コントロールがビューを切り替えると、以前のテンプレートからのコントロールを削除し、新しいテンプレートから新しい子コントロールを作成します。<xref:System.Web.UI.WebControls.LoginView.ViewChanging> イベントは、以前のコントロールが削除される前に発生します。  
  
 使用して、 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> などのコントロールが削除される前に、必要なコントロール情報の保存、処理を実行するイベントです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.LoginView.ViewChanging> イベントは、ページにポストバック中に、ユーザーのログイン状態が変更された場合だけ発生します。<xref:System.Web.UI.WebControls.LoginView.ViewChanging> ユーザーがログインを使用する場合、イベントは発生しません、 <xref:System.Web.UI.WebControls.Login> コントロールを使用して、ユーザーがログオフする場合や、 <xref:System.Web.UI.WebControls.LoginStatus> コントロールです。<xref:System.Web.UI.WebControls.LoginView.ViewChanging> イベントがない場合にも、ユーザーがログインまたはアウトの後に、リダイレクトします。 ある場合を例、 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> 呼び出すことによって、ユーザーがログインしたときに、イベントが発生する、 <xref:System.Web.Security.FormsAuthentication.SignOut%2A> 別のページにリダイレクトされることがなくメソッドです。 次のページにポストバック中に、 <xref:System.Web.UI.WebControls.LoginView> コントロールは、ユーザーのログイン ステータスの変更が検出され、発生し、 <xref:System.Web.UI.WebControls.LoginView.ViewChanging> イベントです。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LoginView.OnViewChanging(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.LoginView.ViewChanged" />
      </Docs>
    </Member>
  </Members>
</Type>