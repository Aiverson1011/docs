<Type Name="ContentPlaceHolder" FullName="System.Web.UI.WebControls.ContentPlaceHolder">
  <TypeSignature Language="C#" Value="public class ContentPlaceHolder : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContentPlaceHolder extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ContentPlaceHolder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.UI")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.ContentPlaceHolderBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:ContentPlaceHolder runat="server"&gt;&lt;/{0}:ContentPlaceHolder&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET マスター ページ内のコンテンツ用の領域を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.UI.WebControls.ContentPlaceHolder> コントロールは、マスター ページにコンテンツの相対的な領域を定義しから、関連するすべてのテキスト、マークアップ、およびサーバー コントロールをレンダリング <xref:System.Web.UI.WebControls.Content> コントロール コンテンツ ページ内に存在します。  
  
 A <xref:System.Web.UI.WebControls.Content> にコントロールが関連付けられている、 <xref:System.Web.UI.WebControls.ContentPlaceHolder> を使用してその <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> プロパティです。 設定、 <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> プロパティの値を <xref:System.Web.UI.Control.ID%2A> 、関連する複数のプロパティ <xref:System.Web.UI.WebControls.ContentPlaceHolder> マスター ページにコントロールできます。 1 つ以上 <xref:System.Web.UI.WebControls.ContentPlaceHolder> マスター ページに宣言することができます。  
  
 1 つだけコンテンツ ページ内で <xref:System.Web.UI.WebControls.Content> コントロールのコンテンツを指定できます、 <xref:System.Web.UI.WebControls.ContentPlaceHolder> マスター ページにします。 ただし、マスター ページを使用する各コンテンツ ページはれて別 <xref:System.Web.UI.WebControls.Content> コントロールに関連付けられている、 <xref:System.Web.UI.WebControls.ContentPlaceHolder>です。 たとえば、定義、 <xref:System.Web.UI.WebControls.ContentPlaceHolder> をマスター ページにページのタイトル。 マスター ページを使用する各コンテンツ ページに追加することができます、 <xref:System.Web.UI.WebControls.Content> テキストとマークアップをページのタイトルを提供するコントロール。  
  
> [!NOTE]
>  XHTML 準拠のタイトルが定義されていないや見つからない場合は、空のタイトル要素が作成されます。  
  
 既定のコンテンツ内に配置を指定する、 <xref:System.Web.UI.WebControls.ContentPlaceHolder> コントロール タグが、このコンテンツはその関連付けられているコンテンツ ページの内容で置き換えられます。  
  
 マスター ページとコンテンツ ページの詳細については、次を参照してください。 [DEL: ASP.NET マスター ページ](http://msdn.microsoft.com/ja-jp/0852291d-6f62-4e9f-a809-45cc81e78d6b)します。  
  
<a name="DeclarativeSyntax"></a>   
## 宣言構文  
  
```  
<asp: ContentPlaceHolder  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    Visible="True|False"  
>  
        <!-- child controls -->  
</asp:ContentPlaceHolder>  
```  
  
   
  
## 例  
 次のコード例に示す方法、 <xref:System.Web.UI.WebControls.ContentPlaceHolder> コントロールを使用して、マスター ページのコンテンツ領域を定義します。 最初の Web ページが、マスター ページで、コンテンツ領域を使用して、定義、 <xref:System.Web.UI.WebControls.ContentPlaceHolder> コントロールです。  
  
 [!code-csharp[System.Web.UI.MasterPage\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.MasterPage_1/CS/MasterPageSample_1cs.master#1)]
 [!code-vb[System.Web.UI.MasterPage\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.MasterPage_1/VB/MasterPageSample_1vb.master#1)]  
  
 次のコード例では、前のマスター ページのコンテンツ ページを示します。 テキスト、マークアップ、および任意のサーバー コントロール内で定義された、 <xref:System.Web.UI.WebControls.Content> をコントロール テンプレートが表示される、 <xref:System.Web.UI.WebControls.ContentPlaceHolder> マスター ページにします。  
  
 [!code-csharp[System.Web.UI.MasterPage\_1\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.MasterPage_1/CS/samplemasterclass.cs#3)]
 [!code-vb[System.Web.UI.MasterPage\_1\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.MasterPage_1/VB/samplemasterclass.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Content" />
    <altmember cref="T:System.Web.UI.MasterPage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPlaceHolder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ContentPlaceHolder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Content" />
        <altmember cref="T:System.Web.UI.MasterPage" />
      </Docs>
    </Member>
  </Members>
</Type>