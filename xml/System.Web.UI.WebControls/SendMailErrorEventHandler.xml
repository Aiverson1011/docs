<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソース。</param>
    <param name="e">イベント データを含んでいる <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> オブジェクト。</param>
    <summary>処理するメソッドを表す、 <see langword="SendMailError" /> などのコントロールのイベント、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロール、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> コントロール、および <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベント ハンドラーを持つイベントを関連付けるには、デリゲートのインスタンスをイベントに追加します。 イベントのデリゲートを削除しない限り、イベントが発生するたびに、イベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、「[Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
 処理、 `SendMailError` イベントが引き続き実行、電子メール メッセージを送信しようとすると、例外が発生した場合でも、Web アプリケーションを使用します。 たとえば、これは、ユーザーは、複数のステップのウィザードを実行するときに、例外が発生した場合に便利です。 エラーを記録、情報メッセージをユーザーに表示され、ユーザーがアプリケーションを終了するのではなく、ウィザードを完了することをお勧めします。  
  
 イベント ハンドラーを作成しない場合、 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベント、または元のまま残りますイベント ハンドラーを作成する場合、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> プロパティに設定 `false`, Web アプリケーションは、電子メール メッセージを送信するときにエラーが発生した場合の実行を停止、および ASP.NET エラー メッセージが表示されます。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> メソッドでは、派生クラスの代わりにイベントを処理することもできます、 <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>です。 これから派生したクラスでイベントを処理するための手法をお勧め <xref:System.Web.UI.WebControls.ChangePassword> または <xref:System.Web.UI.WebControls.CreateUserWizard>です。  
  
 イベント処理の詳細については、「[Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> という名前のイベント `SendMailError`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードは、変更の確認をユーザーに電子メール メッセージを送信する SMTP を使用しようとします。 これには、 `SendingMail` イベント ハンドラーです。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
  </Docs>
</Type>