<Type Name="Calendar" FullName="System.Web.UI.WebControls.Calendar">
  <TypeSignature Language="C#" Value="public class Calendar : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Calendar extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Calendar" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectionChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedDate")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.CalendarDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedDate", typeof(System.DateTime), "1/1/0001")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.WebControls.CalendarDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーが日付を選択し、次または前の月に移動できる 1 か月カレンダーが表示されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 In this topic:  
  
-   [Introduction](#Introduction)  
  
-   [Accessibility](#Accessibility)  
  
-   [Declarative Syntax](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## Introduction  
 Use the <xref:System.Web.UI.WebControls.Calendar> control to display a single month of a calendar on a Web page. The control allows you to select dates and move to the next or previous month. The <xref:System.Web.UI.WebControls.Calendar> control supports all the <xref:System.Globalization.Calendar?displayProperty=fullName> types in the <xref:System.Globalization> namespace. Apart from the Gregorian calendar, this also includes calendars that use different year and month systems, such as the Hjiri calendar.  
  
 You can specify whether the <xref:System.Web.UI.WebControls.Calendar> control allows you to select a single day, week, or entire month by setting the <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> property.  
  
 By default, the control displays the days of the month, day headings for the days of the week, a title with the month name and year, links for selecting individual days of the month, and links for moving to the next and previous month. You can customize the appearance of the <xref:System.Web.UI.WebControls.Calendar> control by setting the properties that control the style for different parts of the control. The following table lists the properties that specify the style for the different parts of the control.  
  
|Property|Description|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Calendar.DayHeaderStyle%2A>|Specifies the style for the section that displays the days of the week.|  
|<xref:System.Web.UI.WebControls.Calendar.DayStyle%2A>|Specifies the style for the dates in the displayed month.|  
|<xref:System.Web.UI.WebControls.Calendar.NextPrevStyle%2A>|Specifies the style for the navigation controls in the title section.|  
|<xref:System.Web.UI.WebControls.Calendar.OtherMonthDayStyle%2A>|Specifies the style for the dates that are not in the currently displayed month.|  
|<xref:System.Web.UI.WebControls.Calendar.SelectedDayStyle%2A>|Specifies the style for the selected dates on the calendar.|  
|<xref:System.Web.UI.WebControls.Calendar.SelectorStyle%2A>|Specifies the style for the week and month date\-selection column.|  
|<xref:System.Web.UI.WebControls.Calendar.TitleStyle%2A>|Specifies the style for the title section.|  
|<xref:System.Web.UI.WebControls.Calendar.TodayDayStyle%2A>|Specifies the style for today's date.|  
|<xref:System.Web.UI.WebControls.Calendar.WeekendDayStyle%2A>|Specifies the style for the weekend dates.|  
  
 You can also show or hide different parts of the control. The following table lists the properties that control which parts are shown or hidden.  
  
|Property|Description|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Calendar.ShowDayHeader%2A>|Shows or hides the section that displays the days of the week.|  
|<xref:System.Web.UI.WebControls.Calendar.ShowGridLines%2A>|Shows or hides the gridlines between the days of the month.|  
|<xref:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth%2A>|Shows or hides the navigation controls to the next or previous month.|  
|<xref:System.Web.UI.WebControls.Calendar.ShowTitle%2A>|Shows or hides the title section.|  
  
 Although binding to a data source is not supported for the <xref:System.Web.UI.WebControls.Calendar> control, you can modify the content and formatting of the individual date cells. Before the <xref:System.Web.UI.WebControls.Calendar> control is displayed on the Web page, it creates and assembles the components that make up the control. The <xref:System.Web.UI.WebControls.Calendar.DayRender> event is raised when each date cell in the <xref:System.Web.UI.WebControls.Calendar> control is created. You can control the contents and formatting of a date cell as it is created by providing code in the event handler for the <xref:System.Web.UI.WebControls.Calendar.DayRender> event. For more information on customizing the contents of a date cell, see <xref:System.Web.UI.WebControls.Calendar.OnDayRender%2A>.  
  
> [!NOTE]
>  The <xref:System.Web.UI.WebControls.Calendar> control renders ECMAScript \(JScript, JavaScript\) to the client browser. The client browser must have ECMAScript enabled for this control to function properly. For more information on client script, see [Client Script in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/13edb6b9-2dea-43c6-b8c1-a47207de19aa).  
  
<a name="Accessibility"></a>   
## Accessibility  
 The markup rendered by default for this control might not conform to accessibility standards. For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## Declarative Syntax  
  
```  
<asp:Calendar  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DayNameFormat="Full|Short|FirstLetter|FirstTwoLetters|Shortest"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FirstDayOfWeek="Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|  
        Saturday|Default"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    NextMonthText="string"  
    NextPrevFormat="CustomText|ShortMonth|FullMonth"  
    OnDataBinding="DataBinding event handler"  
    OnDayRender="DayRender event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectionChanged="SelectionChanged event handler"  
    OnUnload="Unload event handler"  
    OnVisibleMonthChanged="VisibleMonthChanged event handler"  
    PrevMonthText="string"  
    runat="server"  
    SelectedDate="string"  
    SelectionMode="None|Day|DayWeek|DayWeekMonth"  
    SelectMonthText="string"  
    SelectWeekText="string"  
    ShowDayHeader="True|False"  
    ShowGridLines="True|False"  
    ShowNextPrevMonth="True|False"  
    ShowTitle="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    TitleFormat="Month|MonthYear"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    VisibleDate="string"  
    Width="size"  
>  
        <DayHeaderStyle/>  
        <DayStyle/>  
        <NextPrevStyle/>  
        <OtherMonthDayStyle/>  
        <SelectedDayStyle/>  
        <SelectorStyle/>  
        <TitleStyle/>  
        <TodayDayStyle/>  
        <WeekendDayStyle/>  
</asp:Calendar>  
```  
  
   
  
## 例  
 The following code example demonstrates how to create a <xref:System.Web.UI.WebControls.Calendar> control on a Web page.  
  
 [!code-csharp[Classic Calendar Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar Example/VB/sourcevb.aspx#1)]  
  
 The following example shows a <xref:System.Web.UI.WebControls.Calendar> control used when editing one of the columns displayed by a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.Calendar> control is bound to the data source with the **languageKeyword tag is not supported!!!!**  
 method. The **languageKeyword tag is not supported!!!!**  
 method is used to bind the date value that is displayed by the <xref:System.Web.UI.WebControls.Calendar> control.  
  
 [!code-csharp[GridViewConcepts\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewConcepts/CS/gridviewcustomcs.aspx#1)]
 [!code-vb[GridViewConcepts\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewConcepts/VB/gridviewcustomvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectionMode" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.DayHeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.DayStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.NextPrevStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.OtherMonthDayStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectedDayStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectorStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.TitleStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.TodayDayStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.WeekendDayStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowDayHeader" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowGridLines" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth" />
    <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowTitle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Calendar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Calendar" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.Calendar> クラスです。  
  
   
  
## 例  
 次のコード例を作成しの新しいインスタンスを初期化する方法を示しています、 <xref:System.Web.UI.WebControls.Calendar> クラスです。  
  
 [!code-csharp[Classic Calendar.Calendar Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.Calendar Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.Calendar Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.Calendar Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、カレンダーのキャプションとして表示されるテキスト値を設定します。</summary>
        <value>テーブル キャプションです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表のタイトルを使用して、1 ~ 3 個の文のテーブルの性質を記述します。 使用して、 <xref:System.Web.UI.WebControls.Calendar.CaptionAlign%2A> 暦で、キャプションの配置プロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。 <xref:System.ComponentModel.LocalizableAttribute> と [ASP.NET のグローバリゼーションおよびローカリゼーション](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.Caption%2A> のキャプションを表示するプロパティを <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[CalendarCaption\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarCaption/CS/calendarcaptioncs.aspx#1)]
 [!code-vb[CalendarCaption\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarCaption/VB/calendarcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカレンダーのキャプションとして表示されるテキストの配置を設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> キャプションの配置を示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの決定に関連するキャプションが表示され、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 既定値は <xref:System.Web.UI.WebControls.TableCaptionAlign.NotSet>, 、ブラウザーのキャプションの配置場所を決定することができます。 次の表に、リレーションシップ、 <xref:System.Web.UI.WebControls.TableCaptionAlign> 値とキャプションの外観です。  
  
|<xref:System.Web.UI.WebControls.TableCaptionAlign> の値|外観|  
|-------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|`Bottom`|中央揃えテキストで、予定表の一番下にキャプションが表示されます。|  
|`Left`|左揃えテキストで、予定表の上部にある、キャプションが表示されます。|  
|`NotSet`|キャプションの配置が設定されていないと、ブラウザーによって決定されます。|  
|`Right`|右揃えテキストで、予定表の上部にある、キャプションが表示されます。|  
|`Top`|予定表の上部にある中央揃えのテキスト、キャプションが表示されます。|  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.CaptionAlign%2A> のキャプションを配置するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[CalendarCaption\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarCaption/CS/calendarcaptioncs.aspx#1)]
 [!code-vb[CalendarCaption\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarCaption/VB/calendarcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値は、のいずれかではありません、 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容とセルの境界線間の間隔を設定します。</summary>
        <value>セルの内容とセルの境界線のピクセル単位の間隔の量。 既定値は <see langword="2" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、セルの内容とセルの境界線間の間隔を制御できます。 指定した間隔は、セルの 4 つすべての側面に追加されます。 個々 のセルのサイズを指定することはできません。  
  
> [!NOTE]
>  このプロパティを設定 `-1` 描画されたテーブルでこのプロパティが設定されていないことを示します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.CellPadding%2A> 5 ピクセルを使用して各セルの余白を埋めるためのプロパティです。  
  
 [!code-csharp[Classic Calendar.CellPadding Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.CellPadding Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.CellPadding Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.CellPadding Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarCellPadding\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarCellPadding/CS/calendarcellpaddingcs.aspx#1)]
 [!code-vb[CalendarCellPadding\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarCellPadding/VB/calendarcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したセル内のスペースは、\-1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセル間の領域のサイズを設定します。</summary>
        <value>セル間のピクセル単位で空白の量。 既定値は <see langword="0" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、予定表の個々 のセルの間隔を制御できます。 この間隔は、垂直方向と水平方向の両方に適用されます。  
  
> [!NOTE]
>  このプロパティを設定 `-1` 描画されたテーブルでこのプロパティが設定されていないことを示します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.CellSpacing%2A> プロパティ領域のセル 5 ピクセルを離れるにします。  
  
 [!code-csharp[Classic Calendar.CellSpacing Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.CellSpacing Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.CellSpacing Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.CellSpacing Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarCellPadding\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarCellPadding/CS/calendarcellpaddingcs.aspx#1)]
 [!code-vb[CalendarCellPadding\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarCellPadding/VB/calendarcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したセルの間隔は、\-1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.CellPadding" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子コントロールを格納するコレクションを作成します。</summary>
        <returns>常に <see langword="InternalControlCollection" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Calendar.CreateControlCollection%2A> メソッドは、主に予定表コントロールの機能を拡張コントロールの開発者を対象。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Calendar.CreateControlCollection%2A> メソッドにカスタム サーバー コントロールの新しいインスタンスを常に返されるように、 <xref:System.Web.UI.EmptyControlCollection> のクラス、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[CustomCalendarCreateControlCollection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarCreateControlCollection/CS/custom_calendar_createcontrolcollectioncs.aspx#1)]
 [!code-vb[CustomCalendarCreateControlCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarCreateControlCollection/VB/custom_calendar_createcontrolcollectionvb.aspx#1)]  
  
 [!code-csharp[CustomCalendarCreateControlCollection\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarCreateControlCollection/CS/custom_calendar_createcontrolcollection.cs#2)]
 [!code-vb[CustomCalendarCreateControlCollection\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarCreateControlCollection/VB/custom_calendar_createcontrolcollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle DayHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle DayHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.DayHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>週の曜日を表示するセクションのスタイル プロパティを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 週の曜日を表示するセクションのスタイル プロパティを格納します。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、日曜日を表示するセクションのスタイルを指定します。 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
> [!NOTE]
>  によって、曜日の名前の形式を制御、 <xref:System.Web.UI.WebControls.Calendar.DayNameFormat%2A> プロパティです。  
  
 このプロパティは、<xref:System.Web.UI.WebControls.Calendar.ShowDayHeader%2A> プロパティが `true` に設定されている場合にのみ適用されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.DayHeaderStyle%2A> 、週の日付を表示するセクションの太字のフォントを指定するプロパティです。  
  
 [!code-csharp[Classic Calendar.DayHeaderStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.DayHeaderStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.DayHeaderStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.DayHeaderStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarDayHeaderStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayHeaderStyle/CS/calendardayheaderstylecs.aspx#1)]
 [!code-vb[CalendarDayHeaderStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayHeaderStyle/VB/calendardayheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowDayHeader" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.DayNameFormat" />
      </Docs>
    </Member>
    <Member MemberName="DayNameFormat">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DayNameFormat DayNameFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DayNameFormat DayNameFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.DayNameFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DayNameFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または曜日の名前の形式を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DayNameFormat" /> 値のいずれか。 既定値は <see langword="Short" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.DayNameFormat%2A> 、曜日の名前の形式を指定するプロパティです。 このプロパティのいずれかで、 <xref:System.Web.UI.WebControls.DayNameFormat> 列挙値。 \(省略名\)、その日のうちの最初の文字または 1 日の最初の 2 つの文字を短い週の日付は、完全な名前として表示する、かどうかを指定することができます。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Calendar.ShowDayHeader%2A> プロパティに設定されて `true`します。  
  
 曜日名は、サーバーのローカル設定に基づきます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.DayNameFormat%2A> 曜日が完全に表示されることを指定するプロパティです。  
  
 [!code-csharp[Classic Calendar.DayNameFormat Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.DayNameFormat Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.DayNameFormat Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.DayNameFormat Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarDayNameFormat\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayNameFormat/CS/calendardaynameformatcs.aspx#1)]
 [!code-vb[CalendarDayNameFormat\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayNameFormat/VB/calendardaynameformatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した曜日名の形式は、のいずれかのではない、 <see cref="T:System.Web.UI.WebControls.DayNameFormat" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.DayNameFormat" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowDayHeader" />
      </Docs>
    </Member>
    <Member MemberName="DayRender">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DayRenderEventHandler DayRender;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DayRenderEventHandler DayRender" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Calendar.DayRender" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DayRenderEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>管理の階層で 1 日が作成されると発生、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 毎日のコントロール階層構造の作成時にこのイベントは発生、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 データ バインドはサポートされていませんが、 <xref:System.Web.UI.WebControls.Calendar> コントロールがコンテンツを変更可能であり、個々 の日付のセルの書式設定します。 前に、 <xref:System.Web.UI.WebControls.Calendar> コントロールは、Web ページに表示されるを作成し、コントロールを構成するコンポーネントをアセンブルします。<xref:System.Web.UI.WebControls.Calendar.DayRender> イベントが発生したときに日付ごとのセル、 <xref:System.Web.UI.WebControls.Calendar> コントロールを作成します。 内容とのイベント ハンドラーのコードを提供することによって作成されたときに、date セルの書式を制御する、 <xref:System.Web.UI.WebControls.Calendar.DayRender> イベントです。 Date セルの内容をカスタマイズする方法の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.Calendar.OnDayRender%2A>します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Calendar.DayRender> イベントが発生したときに、 <xref:System.Web.UI.WebControls.Calendar> コントロールを表示している、発生する可能性も、イベントなど、コントロールを追加することはできません <xref:System.Web.UI.WebControls.LinkButton>します。 など静的コントロールを追加することのみできます。 <xref:System.Web.UI.LiteralControl?displayProperty=fullName>, 、<xref:System.Web.UI.WebControls.Label>, 、<xref:System.Web.UI.WebControls.Image>, 、および <xref:System.Web.UI.WebControls.HyperLink>です。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.Calendar.DayRender> イベントが表示されている月の日付の色を黄色の背景にします。 セルの内容を追加してカスタマイズする方法も示します、 <xref:System.Web.UI.LiteralControl?displayProperty=fullName> コントロールのセルにします。  
  
 [!code-csharp[Classic Calendar.DayRender Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.DayRender Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.DayRender Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.DayRender Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarDayRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayRender/CS/calendardayrendercs.aspx#1)]
 [!code-vb[CalendarDayRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayRender/VB/calendardayrendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Calendar.OnDayRender(System.Web.UI.WebControls.TableCell,System.Web.UI.WebControls.CalendarDay)" />
      </Docs>
    </Member>
    <Member MemberName="DayStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle DayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle DayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.DayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されている月の日のスタイル プロパティを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 表示されている月の日付のスタイルのプロパティを格納します。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、表示されている月の日のスタイルを指定します。  
  
> [!NOTE]
>  選択した日付、週末の日付、現在表示されている月ではなく日付または今日の日付の異なるスタイルを指定しない場合は、これらの日付も表示されますで指定されたスタイルを使用して、 <xref:System.Web.UI.WebControls.Calendar.DayStyle%2A> プロパティです。 使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectedDayStyle%2A>, 、<xref:System.Web.UI.WebControls.Calendar.WeekendDayStyle%2A>, 、<xref:System.Web.UI.WebControls.Calendar.OtherMonthDayStyle%2A>, 、および <xref:System.Web.UI.WebControls.Calendar.TodayDayStyle%2A> プロパティでこれらの日付の代替スタイルを指定します。  
  
 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.DayStyle%2A> プロパティを現在表示されている月の日付は灰色で表示されていることを指定します。  
  
 [!code-csharp[Classic Calendar.DayStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.DayStyle Example/CS/sourcecs.aspx#1)]
 [!code-xml[Classic Calendar.DayStyle Example\#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic Calendar.DayStyle Example/Common/source.xml#1)]  
  
 [!code-csharp[CalendarDayStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayStyle/CS/calendardaystylecs.aspx#1)]
 [!code-vb[CalendarDayStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayStyle/VB/calendardaystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.WeekendDayStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.OtherMonthDayStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.TodayDayStyle" />
      </Docs>
    </Member>
    <Member MemberName="FirstDayOfWeek">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FirstDayOfWeek FirstDayOfWeek { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FirstDayOfWeek FirstDayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.FirstDayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FirstDayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の最初の日の列に表示する曜日、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FirstDayOfWeek" /> 値のいずれか。 既定値は <see langword="Default" />, 、システムの設定で指定した曜日が使用されることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.FirstDayOfWeek%2A> の最初の日の列に表示する曜日を指定するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 このプロパティのいずれかで、 <xref:System.Web.UI.WebControls.FirstDayOfWeek> 列挙値。 週の曜日を指定するまたは `FirstDayOfWeek.Default`, 、日付は、システムの設定によって決まりますを示します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.FirstDayOfWeek%2A> プロパティを月曜日に最初の日付列を設定します。  
  
 [!code-csharp[Classic Calendar.FirstDayOfWeek Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.FirstDayOfWeek Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.FirstDayOfWeek Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.FirstDayOfWeek Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarFirstDayOfWeek\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarFirstDayOfWeek/CS/calendarfirstdayofweekcs.aspx#1)]
 [!code-vb[CalendarFirstDayOfWeek\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarFirstDayOfWeek/VB/calendarfirstdayofweekvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した日付が、 <see cref="T:System.Web.UI.WebControls.FirstDayOfWeek" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.FirstDayOfWeek" />
      </Docs>
    </Member>
    <Member MemberName="HasWeekSelectors">
      <MemberSignature Language="C#" Value="protected bool HasWeekSelectors (System.Web.UI.WebControls.CalendarSelectionMode selectionMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool HasWeekSelectors(valuetype System.Web.UI.WebControls.CalendarSelectionMode selectionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.HasWeekSelectors(System.Web.UI.WebControls.CalendarSelectionMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionMode" Type="System.Web.UI.WebControls.CalendarSelectionMode" />
      </Parameters>
      <Docs>
        <param name="selectionMode">
          <see cref="T:System.Web.UI.WebControls.CalendarSelectionMode" /> 値のいずれか。</param>
        <summary>指定するかどうか、 <see cref="T:System.Web.UI.WebControls.CalendarSelectionMode" /> オブジェクトには、週のセレクターが含まれています。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.CalendarSelectionMode" /> 週セレクターが含まれています。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CalendarSelectionMode> 値 `DayWeek` と `DayWeekMonth` 週セレクターには両方が含まれています。  
  
   
  
## 例  
 値を確認する次のコード例には、 <xref:System.Web.UI.WebControls.Calendar.HasWeekSelectors%2A> カスタム プロパティ <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[CustomCalendarHasWeekSelectors\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarHasWeekSelectors/CS/custom_calendar_hasweekselectorscs.aspx#1)]
 [!code-vb[CustomCalendarHasWeekSelectors\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarHasWeekSelectors/VB/custom_calendar_hasweekselectorsvb.aspx#1)]  
  
 [!code-csharp[CustomCalendarHasWeekSelectors\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarHasWeekSelectors/CS/custom_calendar_hasweekselectors.cs#2)]
 [!code-vb[CustomCalendarHasWeekSelectors\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarHasWeekSelectors/VB/custom_calendar_hasweekselectors.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">A <see cref="T:System.Object" /> の保存された状態を格納している、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。</param>
        <summary>保存済みの状態を読み込み、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextMonthText">
      <MemberSignature Language="C#" Value="public string NextMonthText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NextMonthText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.NextMonthText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("&amp;gt;")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または翌月へのナビゲーション コントロールに表示されるテキストを設定します。</summary>
        <value>次の月のナビゲーション コントロールのキャプションのテキスト。 既定値は <see langword="&quot;&amp;gt;&quot;" />, 、これは、不等号 \(&gt;\) として表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.NextMonthText%2A> プロパティを次の月のナビゲーション コントロールのカスタムのテキストを指定します。 このプロパティは通常と共に使用、 <xref:System.Web.UI.WebControls.Calendar.PrevMonthText%2A> ナビゲーション コントロールのカスタム セットを提供するプロパティです。  
  
> [!NOTE]
>  このプロパティは、HTML に自動的にエンコードしません。 HTML として扱われる文字にする場合を除き、HTML の適切な値に特殊文字を変換する必要があります。 たとえば、明示的に表示する大なり記号 \(\>\) する必要があります値を使用する `&gt;`です。  
  
 HTML タグを指定することは HTML にもこのプロパティが自動的にエンコードしないため、 <xref:System.Web.UI.WebControls.Calendar.NextMonthText%2A> プロパティです。 たとえば、次の月のナビゲーション コントロールのイメージを表示する場合は、設定できますこのプロパティを含む式に、 `<img>` 要素。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth%2A> プロパティに設定されて `true`します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。 <xref:System.ComponentModel.LocalizableAttribute> と [ASP.NET のグローバリゼーションおよびローカリゼーション](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.NextMonthText%2A> プロパティを次の月にナビゲーション コントロールのカスタム テキストを指定します。  
  
 [!code-csharp[Classic Calendar.NextMonthText Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.NextMonthText Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.NextMonthText Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.NextMonthText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.PrevMonthText" />
      </Docs>
    </Member>
    <Member MemberName="NextPrevFormat">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.NextPrevFormat NextPrevFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.NextPrevFormat NextPrevFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.NextPrevFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.NextPrevFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>書式取得または設定、および前後の月のナビゲーション要素のタイトルのセクションで、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.NextPrevFormat" /> 値のいずれか。 既定値は <see langword="CustomText" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.NextPrevFormat%2A> で、前後の月のナビゲーション要素の形式を指定するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 このプロパティのいずれかで、 <xref:System.Web.UI.WebControls.NextPrevFormat> 列挙値。 ナビゲーション コントロールのテキストが完全な月名、短い \(省略形\) の月名、またはカスタム テキストとして表示されるかどうかを指定することができます。  
  
 カスタム ナビゲーション テキストを指定するには、このプロパティを設定 `NextPrevFormat.CustomText` し、設定、 <xref:System.Web.UI.WebControls.Calendar.NextMonthText%2A> と <xref:System.Web.UI.WebControls.Calendar.PrevMonthText%2A> カスタム テキストのプロパティです。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth%2A> プロパティに設定されて `true`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.NextPrevFormat%2A> ナビゲーション コントロールの短縮名の形式を指定するプロパティです。  
  
 [!code-csharp[Classic Calendar.NextPrevFormat Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.NextPrevFormat Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.NextPrevFormat Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.NextPrevFormat Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarNextPrevFormat\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarNextPrevFormat/CS/calendarnextprevformatcs.aspx#1)]
 [!code-vb[CalendarNextPrevFormat\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarNextPrevFormat/VB/calendarnextprevformatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した形式は、のいずれかのではない、 <see cref="T:System.Web.UI.WebControls.NextPrevFormat" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.NextPrevFormat" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.NextMonthText" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.PrevMonthText" />
      </Docs>
    </Member>
    <Member MemberName="NextPrevStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle NextPrevStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle NextPrevStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.NextPrevStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>および前後の月のナビゲーション要素のスタイル プロパティを取得します。</summary>
        <value>および前後の月のナビゲーション要素のスタイル プロパティ。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、前後の月のナビゲーション要素のスタイルを指定します。 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth%2A> プロパティに設定されて `true`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.NextPrevStyle%2A> を次の月と前の月のナビゲーションの青色のテキストを指定するプロパティを制御します。  
  
 [!code-csharp[Classic Calendar.NextPrevStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.NextPrevStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.NextPrevStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.NextPrevStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarNextPrevStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarNextPrevStyle/CS/calendarnextprevstylecs.aspx#1)]
 [!code-vb[CalendarNextPrevStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarNextPrevStyle/VB/calendarnextprevstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnDayRender">
      <MemberSignature Language="C#" Value="protected virtual void OnDayRender (System.Web.UI.WebControls.TableCell cell, System.Web.UI.WebControls.CalendarDay day);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDayRender(class System.Web.UI.WebControls.TableCell cell, class System.Web.UI.WebControls.CalendarDay day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.OnDayRender(System.Web.UI.WebControls.TableCell,System.Web.UI.WebControls.CalendarDay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="day" Type="System.Web.UI.WebControls.CalendarDay" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.TableCell" /> をレンダリングするセルに関する情報を格納します。</param>
        <param name="day">A <see cref="T:System.Web.UI.WebControls.CalendarDay" /> をレンダリングする日に関する情報を格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.Calendar.DayRender" /> のイベント、 <see cref="T:System.Web.UI.WebControls.Calendar" /> を制御し、カスタム ハンドラーを提供することができます、 <see cref="E:System.Web.UI.WebControls.Calendar.DayRender" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ バインドはサポートされていませんが、 <xref:System.Web.UI.WebControls.Calendar> コントロールがコンテンツを変更可能であり、個々 の日付のセルの書式設定します。 前に、 <xref:System.Web.UI.WebControls.Calendar> コントロールは、Web ページに表示されるを作成し、コントロールを構成するコンポーネントをアセンブルします。<xref:System.Web.UI.WebControls.Calendar.DayRender> イベントが発生したときに日付ごとのセル、 <xref:System.Web.UI.WebControls.Calendar> コントロールを作成します。 内容とのイベント ハンドラーのコードを提供することによって作成されたときに、date セルの書式を制御する、 <xref:System.Web.UI.WebControls.Calendar.DayRender> イベントです。  
  
 イベント ハンドラーは、 <xref:System.Web.UI.WebControls.DayRenderEventArgs> イベント データを格納するオブジェクト。<xref:System.Web.UI.WebControls.DayRenderEventArgs> オブジェクトには、date セルの書式をプログラムで制御するのに使用できる 2 つのプロパティが含まれています。<xref:System.Web.UI.WebControls.DayRenderEventArgs.Cell%2A> プロパティのセルを表すときに表示されない、 <xref:System.Web.UI.WebControls.DayRenderEventArgs.Day%2A> プロパティは、セルに表示する日付を表します。  
  
 コントロールを動的に追加して、セルの内容をカスタマイズすることも、 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> のコレクション、 <xref:System.Web.UI.WebControls.DayRenderEventArgs.Cell%2A> プロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Calendar.DayRender> イベントが発生したときに、 <xref:System.Web.UI.WebControls.Calendar> コントロールを表示している、発生する可能性も、イベントなど、コントロールを追加することはできません <xref:System.Web.UI.WebControls.LinkButton>します。 など静的コントロールを追加することのみできます。 <xref:System.Web.UI.LiteralControl?displayProperty=fullName>, 、<xref:System.Web.UI.WebControls.Label>, 、<xref:System.Web.UI.WebControls.Image>, 、および <xref:System.Web.UI.WebControls.HyperLink>です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 <xref:System.Web.UI.WebControls.Calendar.OnDayRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.Calendar.DayRender> イベントが表示されている月の日付の色を黄色の背景にします。 セルの内容を追加してカスタマイズする方法も示します、 <xref:System.Web.UI.LiteralControl?displayProperty=fullName> コントロールのセルにします。  
  
 [!code-csharp[Classic Calendar.DayRender Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.DayRender Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.DayRender Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.DayRender Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarDayRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarDayRender/CS/calendardayrendercs.aspx#1)]
 [!code-vb[CalendarDayRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarDayRender/VB/calendardayrendervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Calendar.OnDayRender(System.Web.UI.WebControls.TableCell,System.Web.UI.WebControls.CalendarDay)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Calendar.OnDayRender(System.Web.UI.WebControls.TableCell,System.Web.UI.WebControls.CalendarDay)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Calendar.DayRender" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="T:System.Web.UI.WebControls.CalendarDay" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Calendar.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Calendar.OnPreRender%2A> メソッドことは常にカスタム 3 ポイントの罫線を表示できるように <xref:System.Web.UI.WebControls.Calendar> サーバー コントロール。  
  
 [!code-csharp[CustomCalendarOnPreRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarOnPreRender/CS/custom_calendar_onprerendercs.aspx#1)]
 [!code-vb[CustomCalendarOnPreRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarOnPreRender/VB/custom_calendar_onprerendervb.aspx#1)]  
  
 [!code-csharp[CustomCalendarOnPreRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarOnPreRender/CS/custom_calendar_onprerender.cs#2)]
 [!code-vb[CustomCalendarOnPreRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarOnPreRender/VB/custom_calendar_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Calendar.OnPreRender(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.OnSelectionChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.Calendar.SelectionChanged" /> のイベント、 <see cref="T:System.Web.UI.WebControls.Calendar" /> を制御し、カスタム ハンドラーを提供することができます、 <see cref="E:System.Web.UI.WebControls.Calendar.SelectionChanged" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Calendar.SelectionChanged> イベントは、ユーザーが日付セレクター コントロールをクリックして、日、週、または月全体を選択したときに発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 <xref:System.Web.UI.WebControls.Calendar.OnSelectionChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.Calendar.SelectionChanged> で選択した項目の数を表示するイベント、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[CalendarSelectionChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarSelectionChanged/CS/calendarselectionchangedcs.aspx#1)]
 [!code-vb[CalendarSelectionChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarSelectionChanged/VB/calendarselectionchangedvb.aspx#1)]  
  
 [!code-csharp[CalendarSelectionChanged2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarSelectionChanged2/CS/calendarselectionchanged2cs.aspx#1)]
 [!code-vb[CalendarSelectionChanged2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarSelectionChanged2/VB/calendarselectionchanged2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Calendar.OnSelectionChanged" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Calendar.OnSelectionChanged" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Calendar.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleMonthChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibleMonthChanged (DateTime newDate, DateTime previousDate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibleMonthChanged(valuetype System.DateTime newDate, valuetype System.DateTime previousDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.OnVisibleMonthChanged(System.DateTime,System.DateTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newDate" Type="System.DateTime" />
        <Parameter Name="previousDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="newDate">A <see cref="T:System.DateTime" /> に現在表示されて、月を表す、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。</param>
        <param name="previousDate">A <see cref="T:System.DateTime" /> によって表示される前の月を表す、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.Calendar.VisibleMonthChanged" /> のイベント、 <see cref="T:System.Web.UI.WebControls.Calendar" /> を制御し、カスタム ハンドラーを提供することができます、 <see cref="E:System.Web.UI.WebControls.Calendar.VisibleMonthChanged" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Calendar.VisibleMonthChanged> イベントは、ユーザーは、\[タイトル\] セクションに次または前の月のナビゲーション要素をクリックすると発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 <xref:System.Web.UI.WebControls.Calendar.OnVisibleMonthChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.Calendar.VisibleMonthChanged> イベントを表示するかどうか、 <xref:System.Web.UI.WebControls.Calendar> 1 か月の前方または後方に移動しました。  
  
 [!code-csharp[CalendarVisibleMonthChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarVisibleMonthChanged/CS/calendarvisiblemonthchangedcs.aspx#1)]
 [!code-vb[CalendarVisibleMonthChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarVisibleMonthChanged/VB/calendarvisiblemonthchangedvb.aspx#1)]  
  
 [!code-csharp[CalendarVisibleMonthChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarVisibleMonthChanged/CS/calendarvisiblemonthchangedcs.aspx#1)]
 [!code-vb[CalendarVisibleMonthChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarVisibleMonthChanged/VB/calendarvisiblemonthchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Calendar.OnVisibleMonthChanged(System.DateTime,System.DateTime)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Calendar.OnVisibleMonthChanged(System.DateTime,System.DateTime)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Calendar.VisibleMonthChanged" />
        <altmember cref="T:System.DateTime" />
      </Docs>
    </Member>
    <Member MemberName="OtherMonthDayStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle OtherMonthDayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle OtherMonthDayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.OtherMonthDayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>日付のスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールに追加されていない表示されている月です。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> の曜日のスタイル プロパティを格納する、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールに追加されていない表示されている月です。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 日間にスタイルを指定するこのプロパティを使用して、 <xref:System.Web.UI.WebControls.Calendar> コントロールに追加されていない表示されている月です。 場合、 <xref:System.Web.UI.WebControls.Calendar.OtherMonthDayStyle%2A> プロパティが設定されていないで指定されたスタイル、 <xref:System.Web.UI.WebControls.Calendar.DayStyle%2A> プロパティを使用します。  
  
 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
   
  
## 例  
 次のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.Calendar.OtherMonthDayStyle%2A> で曜日の明るい灰色景色を指定するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールに追加されていない、現在表示されている月です。  
  
 [!code-csharp[CalendarOtherMonthDayStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarOtherMonthDayStyle/CS/calendarothermonthdaystylecs.aspx#1)]
 [!code-vb[CalendarOtherMonthDayStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarOtherMonthDayStyle/VB/calendarothermonthdaystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.DayStyle" />
      </Docs>
    </Member>
    <Member MemberName="PrevMonthText">
      <MemberSignature Language="C#" Value="public string PrevMonthText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrevMonthText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.PrevMonthText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("&amp;lt;")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または前の月のナビゲーション コントロールに表示されるテキストを設定します。</summary>
        <value>前の月のナビゲーション コントロールのキャプションのテキスト。 既定値は <see langword="&quot;&amp;lt;&quot;" />, 、これは小なり記号 \(&lt;\) として表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.PrevMonthText%2A> プロパティを前の月のナビゲーション コントロールのカスタムのテキストを指定します。 このプロパティは通常と共に使用、 <xref:System.Web.UI.WebControls.Calendar.NextMonthText%2A> ナビゲーション コントロールのカスタム セットを提供するプロパティです。  
  
> [!NOTE]
>  このプロパティは、HTML に自動的にエンコードしません。 HTML として扱われる文字にする場合を除き、HTML の適切な値に特殊文字を変換する必要があります。 たとえば、明示的に表示する大なり記号 \(\>\) する必要があります値を使用する `&gt;`です。  
  
 HTML タグを指定することは HTML にもこのプロパティが自動的にエンコードしないため、 <xref:System.Web.UI.WebControls.Calendar.PrevMonthText%2A> プロパティです。 たとえば、次の月のナビゲーション コントロールのイメージを表示する場合は、設定できますこのプロパティを含む式に、 `<img>` 要素。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth%2A> プロパティに設定されて `true`します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。 <xref:System.ComponentModel.LocalizableAttribute> と [ASP.NET のグローバリゼーションおよびローカリゼーション](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.PrevMonthText%2A> プロパティを前の月のナビゲーション コントロールのカスタム テキストを指定します。  
  
 [!code-csharp[Classic Calendar.NextMonthText Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.NextMonthText Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.NextMonthText Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.NextMonthText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.NextMonthText" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡されるイベント引数を表す <see cref="T:System.String" />。</param>
        <summary>イベントを発生させる、 <see cref="T:System.Web.UI.WebControls.Calendar" /> サーバーへのポストバックとを制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントはによって内部的に使用される、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに表示する出力ストリームを格納する <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>クライアントに <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Calendar.Render%2A> カスタム サーバー コントロールのメソッドように、 <xref:System.Web.UI.WebControls.Calendar> イメージが常に表示されます。  
  
 [!code-csharp[CustomCalendarRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarRender/CS/custom_calendar_rendercs.aspx#1)]
 [!code-vb[CustomCalendarRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarRender/VB/custom_calendar_rendervb.aspx#1)]  
  
 [!code-csharp[CustomCalendarRender\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCalendarRender/CS/custom_calendar_render.cs#2)]
 [!code-vb[CustomCalendarRender\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCalendarRender/VB/custom_calendar_render.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態を保存、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <returns>保存された状態を格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDate">
      <MemberSignature Language="C#" Value="public DateTime SelectedDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SelectedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SelectedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true, System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.DateTime), "1/1/0001")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択した日付を設定します。</summary>
        <value>A <see cref="T:System.DateTime" /> 、選択した日付を表します。 既定値は <see cref="F:System.DateTime.MinValue" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティを選択した日付を決める、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティおよび <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> コレクションが密接に関連します。 ときに、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> にプロパティが設定されている `CalendarSelectionMode.Day`, 、1 つの日付の選択のみを許可するモード <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> と `SelectedDates[0]` 値が同じであると `SelectedDates.Count` が 1 に等しい。 ときに、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> にプロパティが設定されている `CalendarSelectionMode.DayWeek` または `CalendarSelectionMode.DayWeekMonth`, 、複数の日付選択が可能なモード <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> と `SelectedDates[0]` 値が同じであります。  
  
 <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> を使用してプロパティを設定、 <xref:System.DateTime?displayProperty=fullName> オブジェクトです。  
  
 ユーザーが日付を選択すると、 <xref:System.Web.UI.WebControls.Calendar> コントロール、 <xref:System.Web.UI.WebControls.Calendar.SelectionChanged> イベントが発生します。<xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティは、選択した日付を更新します。<xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> コレクションも更新され、この日付だけが含まれています。  
  
> [!NOTE]
>  両方、 <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティおよび <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> する前にコレクションが更新される、 <xref:System.Web.UI.WebControls.Calendar.SelectionChanged> イベントが発生します。 使用して日付の選択をオーバーライドすることができます、 <xref:System.Web.UI.WebControls.Calendar.OnSelectionChanged%2A> イベント ハンドラーを手動で設定を <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティです。<xref:System.Web.UI.WebControls.Calendar.SelectionChanged> プログラムでこのプロパティが設定されている場合にイベントが発生しませんが取得されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティで選択した日付を <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[Classic Calendar.SelectedDate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.SelectedDate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.SelectedDate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.SelectedDate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectedDates" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectionMode" />
        <altmember cref="T:System.Web.UI.WebControls.CalendarSelectionMode" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.SelectionChanged" />
        <altmember cref="M:System.Web.UI.WebControls.Calendar.OnSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectedDates">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SelectedDatesCollection SelectedDates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.SelectedDatesCollection SelectedDates" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SelectedDates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SelectedDatesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.DateTime" /> で選択した日付を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.SelectedDatesCollection" /> のコレクションを含む <see cref="T:System.DateTime" /> で選択した日付を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。 既定値は空 <see cref="T:System.Web.UI.WebControls.SelectedDatesCollection" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> で現在選択されている日付を確認する、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティおよび <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> コレクションが密接に関連します。 ときに、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> にプロパティが設定されている `CalendarSelectionMode.Day`, 、1 つの日付の選択のみを許可するモード <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> と `SelectedDates[0]` 値が同じであると `SelectedDates.Count` が 1 に等しい。 ときに、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> にプロパティが設定されている `CalendarSelectionMode.DayWeek` または `CalendarSelectionMode.DayWeekMonth`, 、複数の日付選択が可能なモード <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> と `SelectedDates[0]` 値が同じであります。  
  
 <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> プロパティのコレクションが格納 <xref:System.DateTime?displayProperty=fullName> オブジェクトです。  
  
 ユーザーが週または月を選択すると、 <xref:System.Web.UI.WebControls.Calendar> コントロール、 <xref:System.Web.UI.WebControls.Calendar.SelectionChanged> イベントが発生します。 選択した日付に追加、 <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> コレクション、以前の内容を交換します。 日付の範囲は、日付の昇順で並べ替えられます。<xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> の最初の日付を格納するプロパティを更新しても、 <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> コレクションです。  
  
 使用することも、 <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> プログラムでの日付を選択するコレクション、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 使用して、 <xref:System.Web.UI.WebControls.SelectedDatesCollection.Add%2A>, 、<xref:System.Web.UI.WebControls.SelectedDatesCollection.Remove%2A>, 、<xref:System.Web.UI.WebControls.SelectedDatesCollection.Clear%2A>, 、および <xref:System.Web.UI.WebControls.SelectedDatesCollection.SelectRange%2A> をプログラムで選択した日付を操作するメソッド、 <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> コレクションです。  
  
> [!NOTE]
>  両方、 <xref:System.Web.UI.WebControls.Calendar.SelectedDate%2A> プロパティおよび <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> する前にコレクションが更新される、 <xref:System.Web.UI.WebControls.Calendar.SelectionChanged> イベントが発生します。 使用して日付の選択をオーバーライドすることができます、 <xref:System.Web.UI.WebControls.Calendar.OnSelectionChanged%2A> イベント ハンドラーを手動で設定を <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> コレクションです。<xref:System.Web.UI.WebControls.Calendar.SelectionChanged> プログラムを使用してこのコレクションが設定されている場合、イベントは発生しません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectedDates%2A> で選択した日付を確認する、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[Classic Calendar.SelectedDates Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.SelectedDates Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.SelectedDates Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.SelectedDates Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectionMode" />
        <altmember cref="T:System.Web.UI.WebControls.CalendarSelectionMode" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.SelectionChanged" />
        <altmember cref="M:System.Web.UI.WebControls.Calendar.OnSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectedDayStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SelectedDayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedDayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SelectedDayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した日付のスタイル プロパティを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 選択した日付のスタイルのプロパティを格納します。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、スタイルを選択した日付を指定する、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 場合、 <xref:System.Web.UI.WebControls.Calendar.SelectedDayStyle%2A> プロパティが設定されていないで指定されたスタイル、 <xref:System.Web.UI.WebControls.Calendar.DayStyle%2A> プロパティを使用します。  
  
 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
   
  
## 例  
 次のコード例を使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectedDayStyle%2A> プロパティを選択した日付の青色の背景色を指定する、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[Classic Calendar.SelectedDayStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.SelectedDayStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.SelectedDayStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.SelectedDayStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarSelectedDayStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarSelectedDayStyle/CS/calendarselecteddaystylecs.aspx#1)]
 [!code-vb[CalendarSelectedDayStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarSelectedDayStyle/VB/calendarselecteddaystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Calendar.SelectionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが日付セレクター コントロールをクリックして、日、週、月全体を選択したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーが日付セレクター コントロールをクリックして、日、週、月全体を選択すると、このイベントが発生します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.Calendar.SelectionChanged> で選択した項目の数を表示するイベント、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[CalendarSelectionChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarSelectionChanged/CS/calendarselectionchangedcs.aspx#1)]
 [!code-vb[CalendarSelectionChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarSelectionChanged/VB/calendarselectionchangedvb.aspx#1)]  
  
 [!code-csharp[CalendarSelectionChanged2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarSelectionChanged2/CS/calendarselectionchanged2cs.aspx#1)]
 [!code-vb[CalendarSelectionChanged2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarSelectionChanged2/VB/calendarselectionchanged2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Calendar.OnSelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.CalendarSelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.CalendarSelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SelectionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CalendarSelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または日付選択モードを設定、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールをユーザーが、1 日、週、または月全体を選択するかどうかを指定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.CalendarSelectionMode" /> 値のいずれか。 既定値は <see langword="Day" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> で日付の選択モードを指定するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 このプロパティのいずれかで、 <xref:System.Web.UI.WebControls.CalendarSelectionMode> 列挙値。 1 日、週、または月単位、ユーザーが選択できるか、自体に、日付選択機能を無効にすることができるかどうかを指定できます。  
  
 このプロパティを設定すると `CalendarSelectionMode.DayWeek` または `CalendarSelectionMode.DayWeekMonth`, 、月と週の選択コントロールが含まれたその他のセレクターの列が最初の列で表示される、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectorStyle%2A> プロパティをこの列の外観をカスタマイズします。  
  
 日付を選択するには、このプロパティを設定 `CalendarSelectionMode.None`です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> プロパティを 1 日、週、または月単位で日付を選択します。  
  
 [!code-csharp[Classic Calendar.SelectionMode Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.SelectionMode Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.SelectionMode Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.SelectionMode Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarSelectionMode2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarSelectionMode2/CS/calendarselectionmodecs.aspx#1)]
 [!code-vb[CalendarSelectionMode2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarSelectionMode2/VB/calendarselectionmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定選択モードは、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.CalendarSelectionMode" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.CalendarSelectionMode" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectorStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectMonthText">
      <MemberSignature Language="C#" Value="public string SelectMonthText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMonthText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SelectMonthText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("&amp;gt;&amp;gt;")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセレクターの列の月選択要素に表示されるテキストを設定します。</summary>
        <value>セレクターの列の月選択要素に表示されるテキスト。 既定値は <see langword="&quot;&amp;gt;&amp;gt;&quot;" />, 、レンダリングされる 2 と不等号 \(&gt;&gt;\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectMonthText%2A> セレクターの列の月の選択範囲の要素のカスタム テキストを提供するプロパティです。  
  
> [!NOTE]
>  このプロパティは、HTML に自動的にエンコードしません。 HTML として扱われる文字にする場合を除き、HTML の適切な値に特殊文字を変換する必要があります。 たとえば、明示的に表示する大なり記号 \(\>\) する必要があります値を使用する `&gt;`です。  
  
 HTML タグを指定することは HTML にもこのプロパティが自動的にエンコードしないため、 <xref:System.Web.UI.WebControls.Calendar.SelectMonthText%2A> プロパティです。 たとえば、次の月のナビゲーション コントロールのイメージを表示する場合は、設定できますこのプロパティを含む式に、 `<img>` 要素。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> プロパティに設定されて `CalendarSelectionMode.DayWeekMonth`します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。 <xref:System.ComponentModel.LocalizableAttribute> と [ASP.NET のグローバリゼーションおよびローカリゼーション](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectMonthText%2A> 月選択範囲の要素にカスタムのテキストを指定するプロパティです。  
  
 [!code-csharp[Classic Calendar.SelectMonthText Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.SelectMonthText Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.SelectMonthText Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.SelectMonthText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="SelectorStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SelectorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SelectorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>月と週セレクターの列のスタイル プロパティを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 月と週セレクターの列のスタイル プロパティを格納します。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、月と週セレクターの列のスタイルを指定します。 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
 <xref:System.Web.UI.WebControls.Calendar.SelectorStyle%2A> プロパティは適用される場合にのみ、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> にプロパティが設定されている `CalendarSelectionMode.DayWeek` または `CalendarSelectionMode.DayWeekMonth`です。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectorStyle%2A> セレクターの列に対して淡いグレーの背景色を指定するプロパティです。  
  
 [!code-csharp[Classic Calendar.SelectorStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.SelectorStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.SelectorStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.SelectorStyle Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectionMode" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectWeekText">
      <MemberSignature Language="C#" Value="public string SelectWeekText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectWeekText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SelectWeekText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("&amp;gt;")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセレクターの列の週選択要素に表示されるテキストを設定します。</summary>
        <value>セレクターの列の週選択要素に表示されるテキスト。 既定値は <see langword="&quot;&amp;gt;&quot;" />, 、値が高いとしてレンダリングされる不等号 \(&gt;\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectWeekText%2A> セレクターの列の週の選択範囲の要素のカスタム テキストを提供するプロパティです。  
  
> [!NOTE]
>  このプロパティは、HTML に自動的にエンコードしません。 HTML として扱われる文字にする場合を除き、HTML の適切な値に特殊文字を変換する必要があります。 たとえば、明示的に表示する大なり記号 \(\>\) する必要があります値を使用する `&gt;`です。  
  
 HTML タグを指定することは HTML にもこのプロパティが自動的にエンコードしないため、 <xref:System.Web.UI.WebControls.Calendar.SelectWeekText%2A> プロパティです。 たとえば、次の月のナビゲーション コントロールのイメージを表示する場合は、設定できますこのプロパティを含む式に、 `<img>` 要素。  
  
 場合にのみ、このプロパティが適用される、 <xref:System.Web.UI.WebControls.Calendar.SelectionMode%2A> にプロパティが設定されている `CalendarSelectionMode.DayWeek` または `CalendarSelectionMode.DayWeekMonth`です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。 <xref:System.ComponentModel.LocalizableAttribute> と [ASP.NET のグローバリゼーションおよびローカリゼーション](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.SelectWeekText%2A> プロパティを週の選択範囲の要素にカスタムのテキストを指定します。  
  
 [!code-csharp[Classic Calendar.SelectWeekText Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.SelectWeekText Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.SelectWeekText Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.SelectWeekText Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.SelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="ShowDayHeader">
      <MemberSignature Language="C#" Value="public bool ShowDayHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowDayHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.ShowDayHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または週の曜日の見出しが表示されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 週の曜日の見出しを表示する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowDayHeader%2A> プロパティ、曜日の見出しを表示するかどうかを指定します。  
  
 使用して、見出しの外観をカスタマイズすることができます、 <xref:System.Web.UI.WebControls.Calendar.DayHeaderStyle%2A> プロパティです。  
  
   
  
## 例  
 次のコード例を使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowDayHeader%2A> 、曜日の見出しを非表示にするプロパティです。  
  
 [!code-csharp[Classic Calendar.ShowDayHeader Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.ShowDayHeader Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.ShowDayHeader Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.ShowDayHeader Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarShowDayHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarShowDayHeader/CS/calendarshowdayheadercs.aspx#1)]
 [!code-vb[CalendarShowDayHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarShowDayHeader/VB/calendarshowdayheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.DayHeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowGridLines">
      <MemberSignature Language="C#" Value="public bool ShowGridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowGridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.ShowGridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかの日、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールはグリッド線で区切られます。</summary>
        <value>
          <see langword="true" /> 場合に日、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールはグリッド線に区切られた以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowGridLines%2A> プロパティを指定するかどうかの日、 <xref:System.Web.UI.WebControls.Calendar> コントロールはグリッド線で区切られます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowGridLines%2A> で日の間でのグリッド線を表示するプロパティを <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[Classic Calendar.ShowGridLines Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.ShowGridLines Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.ShowGridLines Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.ShowGridLines Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarShowGridLines\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarShowGridLines/CS/calendarshowgridlinescs.aspx#1)]
 [!code-vb[CalendarShowGridLines\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarShowGridLines/VB/calendarshowgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowNextPrevMonth">
      <MemberSignature Language="C#" Value="public bool ShowNextPrevMonth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowNextPrevMonth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールでは、\[タイトル\] セクションで、前後の月のナビゲーション要素が表示されます。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.Calendar" /> タイトルのセクションで、前後の月のナビゲーション要素を表示それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth%2A> タイトルのセクションで、前後の月のナビゲーション要素を表示するかどうかを指定するプロパティです。  
  
 ナビゲーション コントロールを使用してカスタマイズできる、前後の月の外観、 <xref:System.Web.UI.WebControls.Calendar.NextPrevStyle%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowNextPrevMonth%2A> タイトルのセクションで、前後の月のナビゲーションを非表示にするプロパティを制御します。  
  
 [!code-csharp[Classic Calendar.ShowNextPrevMonth Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.ShowNextPrevMonth Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.ShowNextPrevMonth Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.ShowNextPrevMonth Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarShowNextPrevMonth\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarShowNextPrevMonth/CS/calendarshownextprevmonthcs.aspx#1)]
 [!code-vb[CalendarShowNextPrevMonth\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarShowNextPrevMonth/VB/calendarshownextprevmonthvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.NextPrevStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowTitle">
      <MemberSignature Language="C#" Value="public bool ShowTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.ShowTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタイトルのセクションを表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.Calendar" /> タイトルのセクションが表示されます。 そうしないと、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowTitle%2A> プロパティ タイトルのセクションを表示するかどうかを指定します。  
  
> [!NOTE]
>  タイトルのセクションを非表示も、次へ\] を非表示にし、前の月のナビゲーション コントロールします。  
  
 使用して、タイトルのセクションの外観をカスタマイズすることができます、 <xref:System.Web.UI.WebControls.Calendar.TitleStyle%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.ShowTitle%2A> タイトル ヘッダーを非表示にするプロパティです。  
  
 [!code-csharp[CalendarShowTitle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarShowTitle/CS/calendarshowtitlecs.aspx#1)]
 [!code-vb[CalendarShowTitle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarShowTitle/VB/calendarshowtitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.TitleStyle" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> プロパティが <see langword="false" /> の場合、レンダリングされた HTML 要素の <see langword="disabled" /> 属性を "無効" に設定するかどうかを示す値を取得します。</summary>
        <value>
          <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> プロパティが <c>4.0</c> より低い ASP.NET のバージョンを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、コントロールが無効になっているときに ASP.NET がそのコントロールの HTML をどのように描画するかを示します。 場合は、このプロパティは `true`, 、ASP.NET では、 `disabled` 属性のコントロールが無効にするとします。 場合は、このプロパティは `false`, 、ASP.NET では、 `class` 属性のコントロールが無効にするとします。 詳細については、「<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>イベントのポストバックを発生させる、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFormat">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TitleFormat TitleFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TitleFormat TitleFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.TitleFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TitleFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはタイトルのセクションの書式を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TitleFormat" /> 値のいずれか。 既定値は <see langword="MonthYear" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.TitleFormat%2A> プロパティを \[タイトル\] セクションの書式を指定します。 このプロパティのいずれかで、 <xref:System.Web.UI.WebControls.TitleFormat> 列挙値。 月、または月と年の両方として、タイトルを表示するかどうかを指定することができます。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Calendar.ShowTitle%2A> プロパティに設定されて `true`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.TitleFormat%2A> タイトルのセクションで、月と年を表示するプロパティです。  
  
 [!code-csharp[Classic Calendar.TitleFormat Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.TitleFormat Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.TitleFormat Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.TitleFormat Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarTitleFormat\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarTitleFormat/CS/calendartitleformatcs.aspx#1)]
 [!code-vb[CalendarTitleFormat\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarTitleFormat/VB/calendartitleformatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたタイトル形式は、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.TitleFormat" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowTitle" />
      </Docs>
    </Member>
    <Member MemberName="TitleStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.TitleStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイトルの見出しのスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> の見出しのタイトルのスタイル プロパティを含む、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイトルの見出しのスタイルを指定するこのプロパティを使用して、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
 <xref:System.Web.UI.WebControls.Calendar.TitleStyle%2A> プロパティは適用される場合にのみ、 <xref:System.Web.UI.WebControls.Calendar.ShowTitle%2A> にプロパティが設定されている `true`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.TitleStyle%2A> 青色の背景色とのタイトルの見出しの黄色の前景の色を指定するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[Classic Calendar.TitleStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.TitleStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.TitleStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.TitleStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarTitleStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarTitleStyle/CS/calendartitlestylecs.aspx#1)]
 [!code-vb[CalendarTitleStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarTitleStyle/VB/calendartitlestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.ShowTitle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="TodayDayStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TodayDayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TodayDayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.TodayDayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>今日の日付スタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> の今日の日付のスタイル プロパティを格納する、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、スタイルを今日の日付を指定する、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 場合、 <xref:System.Web.UI.WebControls.Calendar.TodayDayStyle%2A> プロパティが設定されていないで指定されたスタイル、 <xref:System.Web.UI.WebControls.Calendar.DayStyle%2A> プロパティを使用します。  
  
 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.TodayDayStyle%2A> プロパティを今日の日付の青色の背景色と前景色の色を指定します。  
  
 [!code-csharp[Classic Calendar.TodayDayStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.TodayDayStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.TodayDayStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.TodayDayStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarTodayDayStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarTodayDayStyle/CS/calendartodaydaystylecs.aspx#1)]
 [!code-vb[CalendarTodayDayStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarTodayDayStyle/VB/calendartodaydaystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.DayStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="TodaysDate">
      <MemberSignature Language="C#" Value="public DateTime TodaysDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TodaysDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.TodaysDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または今日の日付の値を設定します。</summary>
        <value>A <see cref="T:System.DateTime" /> 値を格納する、 <see cref="T:System.Web.UI.WebControls.Calendar" /> 今日の日付であると見なします。 このプロパティは、明示的に設定されていない場合、この日付は、サーバー上の日付になります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.TodaysDate%2A> プロパティを今日の日付を決定します。 このプロパティを使用してプログラムを使用して今日の日付の値を設定する、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 使用してこのプロパティを設定、 <xref:System.DateTime?displayProperty=fullName> オブジェクトです。  
  
> [!NOTE]
>  この日付は、別のタイム ゾーンのユーザーには、それに合わせて調整する必要があります。  
  
 指定された日付の外観、 <xref:System.Web.UI.WebControls.Calendar.TodaysDate%2A> プロパティを使用してカスタマイズできる、 <xref:System.Web.UI.WebControls.Calendar.TodayDayStyle%2A> プロパティです。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.Calendar.VisibleDate%2A> プロパティが設定されていないで指定された日、 <xref:System.Web.UI.WebControls.Calendar.TodaysDate%2A> プロパティで月を表示を決定、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.TodaysDate%2A> プロパティを今日の日付の値をプログラムで設定を <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[Classic Calendar.TodaysDate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.TodaysDate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.TodaysDate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.TodaysDate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.Calendar.TodayDayStyle" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Calendar.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始位置をマークします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAccessibleHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.UseAccessibleHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーブル ヘッダーを表示するかどうかを示す値を取得または <see langword="&lt;th&gt;" /> テーブルのデータではなく日付ヘッダーの HTML 要素 <see langword="&lt;td&gt;" /> HTML 要素です。</summary>
        <value>
          <see langword="true" /> 場合、 <see langword="&lt;th&gt;" /> 要素が日単位のヘッダー セル; に使用されます <see langword="false" /> 場合、 <see langword="&lt;td&gt;" /> 日ヘッダーの要素を使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テーブル ヘッダー `<th>` HTML 要素が日単位のヘッダー セルの既定で使用します。 使用する .NET Framework version 1.0 の動作に戻すことができます `<td>` 要素このプロパティを設定して日単位のヘッダー セルを `false`します。  
  
 この値を変更することに影響するこのコントロールのバージョン 1.0 のエディションのレンダリング動作に依存するスクリプトに注意してください。 使用、 `<th>` 要素では、表示、可能な表示は変わる可能性があります、 <xref:System.Web.UI.WebControls.Calendar> と太字の中央揃えに日単位のヘッダー セルをすることでのブラウザーでコントロールされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisibleDate">
      <MemberSignature Language="C#" Value="public DateTime VisibleDate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime VisibleDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.VisibleDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.DateTime), "1/1/0001")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.DateTime" /> 上に表示する月を指定する値、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <value>A <see cref="T:System.DateTime" /> で表示する月を指定する、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。 既定値は <see cref="F:System.DateTime.MinValue" />, で指定された日付が含まれる月を表示する <see cref="P:System.Web.UI.WebControls.Calendar.TodaysDate" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Calendar.VisibleDate%2A> で表示する月をプログラムで設定するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 指定した日付の月の最初の日付を使用するが一般的ですが、表示する月の日付を指定できます。 使用してこのプロパティを設定、 <xref:System.DateTime?displayProperty=fullName> オブジェクトです。  
  
 <xref:System.Web.UI.WebControls.Calendar.VisibleDate%2A> 前にプロパティを更新、 <xref:System.Web.UI.WebControls.Calendar.VisibleMonthChanged> イベントが発生します。 カスタムを使用できる <xref:System.Web.UI.WebControls.Calendar.OnVisibleMonthChanged%2A> イベント ハンドラーを設定する、 <xref:System.Web.UI.WebControls.Calendar.VisibleDate%2A> プロパティは、自動的に生成された値よりも優先されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.VisibleDate%2A> に表示される月を示す値をプログラムで設定するプロパティ、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。  
  
 [!code-csharp[Classic Calendar.VisibleDate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.VisibleDate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.VisibleDate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.VisibleDate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="E:System.Web.UI.WebControls.Calendar.VisibleMonthChanged" />
      </Docs>
    </Member>
    <Member MemberName="VisibleMonthChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MonthChangedEventHandler VisibleMonthChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MonthChangedEventHandler VisibleMonthChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Calendar.VisibleMonthChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MonthChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーは、次へ\] をクリックするか、タイトル見出しの前後の月ナビゲーション コントロールと発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーがタイトル見出しの次または前の月のナビゲーション要素をクリックすると、このイベントが発生します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.Calendar.VisibleMonthChanged> イベントを表示するかどうか、 <xref:System.Web.UI.WebControls.Calendar> コントロールが前方または後方の 1 か月間を移動します。  
  
 [!code-csharp[CalendarVisibleMonthChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarVisibleMonthChanged/CS/calendarvisiblemonthchangedcs.aspx#1)]
 [!code-vb[CalendarVisibleMonthChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarVisibleMonthChanged/VB/calendarvisiblemonthchangedvb.aspx#1)]  
  
 [!code-csharp[CalendarVisibleMonthChanged2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarVisibleMonthChanged2/CS/calendarvisiblemonthchanged2cs.aspx#1)]
 [!code-vb[CalendarVisibleMonthChanged2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarVisibleMonthChanged2/VB/calendarvisiblemonthchanged2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Calendar.OnVisibleMonthChanged(System.DateTime,System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="WeekendDayStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle WeekendDayStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle WeekendDayStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Calendar.WeekendDayStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>週末の日付スタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.Calendar" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 週末の日付のスタイル プロパティを格納する、 <see cref="T:System.Web.UI.WebControls.Calendar" />です。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、スタイルを週末の日付を指定する、 <xref:System.Web.UI.WebControls.Calendar> コントロールです。 場合、 <xref:System.Web.UI.WebControls.Calendar.WeekendDayStyle%2A> プロパティが設定されていないで指定されたスタイル、 <xref:System.Web.UI.WebControls.Calendar.DayStyle%2A> プロパティを使用します。  
  
 制御できるさまざまなスタイル プロパティの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.TableItemStyle>します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Calendar.WeekendDayStyle%2A> 週末の日付の青色の背景色と前景色の色を指定するプロパティです。  
  
 [!code-csharp[Classic Calendar.WeekendDayStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Calendar.WeekendDayStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Calendar.WeekendDayStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Calendar.WeekendDayStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[CalendarWeekendDayStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CalendarWeekendDayStyle/CS/calendarweekenddaystylecs.aspx#1)]
 [!code-vb[CalendarWeekendDayStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CalendarWeekendDayStyle/VB/calendarweekenddaystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Calendar.DayStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
      </Docs>
    </Member>
  </Members>
</Type>