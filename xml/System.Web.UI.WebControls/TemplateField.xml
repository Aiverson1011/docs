<Type Name="TemplateField" FullName="System.Web.UI.WebControls.TemplateField">
  <TypeSignature Language="C#" Value="public class TemplateField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TemplateField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ バインドされたコントロール内にカスタム コンテンツを表示するフィールドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TemplateField> クラスはデータ バインド コントロールによって使用 \(など <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView>\) 各レコードに表示されるカスタム コンテンツを表示します。 によって提供されていない定義済みのデータのいずれかのコントロール フィールドをデータ バインド コントロールにコンテンツを表示する必要がある場合 \(など <xref:System.Web.UI.WebControls.BoundField>\) を使用して、 <xref:System.Web.UI.WebControls.TemplateField> カスタム ユーザー インターフェイス \(UI\) を作成するクラス。<xref:System.Web.UI.WebControls.TemplateField> オブジェクトが使用されているデータ バインド コントロールによって異なって表示されます。 たとえば、 <xref:System.Web.UI.WebControls.GridView> 表示を制御、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクト、列として、 <xref:System.Web.UI.WebControls.DetailsView> コントロールが、行として表示します。  
  
 さまざまな部分のカスタム テンプレートを定義する、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトの次の表に示すテンプレートを使用しています。  
  
|テンプレート|説明|  
|------------|--------|  
|<xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>|交互の項目に表示するコンテンツの指定、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>|編集モードで内のアイテムを表示するコンテンツの指定、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>|フッター セクションに表示する内容を指定する <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>|指定のヘッダー セクションに表示するコンテンツを <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>|挿入モード内のアイテムを表示する内容を指定する <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 このテンプレートでのみサポート、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。|  
|<xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>|項目を表示する内容を指定する <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
  
 非表示にすることができます、 <xref:System.Web.UI.WebControls.TemplateField> を設定してデータ バインド コントロール内のオブジェクト、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> プロパティを `false`します。  
  
 代わりに、カスタムの定義に <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> または <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> テンプレートのヘッダーとフッター セクションをカスタマイズすることができます、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトの他のプロパティを設定して、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 ヘッダーまたはフッターのセクションでは、キャプションを表示するには、設定、 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> または <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> プロパティには、それぞれします。 ヘッダー セクションにテキストを表示せずにイメージを表示するには、 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> プロパティです。 ヘッダー セクションを非表示にすることができます、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトを設定して、 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> プロパティを `false`します。  
  
> [!NOTE]
>  一部のデータ バインド コントロール \(など、 <xref:System.Web.UI.WebControls.GridView> コントロール\) を表示またはコントロールのすべてのヘッダー セクションのみを非表示にできます。 これらのデータ バインド コントロールをサポートしていない、 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> 個別のバインド フィールド プロパティ。 データ バインド コントロールのすべてのヘッダー セクションを非表示には、コントロールを使用して `ShowHeader` プロパティ \(該当する場合\)。  
  
 外観をカスタマイズできる、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクト \(フォントの色や背景色、\)、フィールドの各部分のスタイルのプロパティを設定しています。 次の表は、さまざまなスタイル プロパティを一覧表示します。  
  
|スタイル プロパティ|説明|  
|----------------|--------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|子の Web サーバー コントロールのスタイル設定、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|フッター セクションのスタイルの設定、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|ヘッダー セクションのスタイルの設定、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|内のデータ項目のスタイルの設定、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。|  
  
   
  
## 例  
 次のコード例では、カスタム作成 <xref:System.Web.UI.WebControls.TemplateField> を同じセルで 2 つのフィールドを表示するオブジェクト。 姓と名の最後のフィールドが同じ結合 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。  
  
 [!code-csharp[TemplateField\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateField/CS/templatefieldcs.aspx#1)]
 [!code-vb[TemplateField\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateField/VB/templatefieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.TemplateField" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.TemplateField> クラスです。 このコンス トラクターは、フィールドを動的に作成されたデータ バインド コントロールに追加する際に通常使用されます。  
  
 動的に追加する、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクト、データ バインド コントロールを新しい <xref:System.Web.UI.WebControls.TemplateField> オブジェクト、適切なテンプレートを定義し、データ バインド コントロールのフィールド コレクションに追加します。 たとえばを使用している場合、 <xref:System.Web.UI.WebControls.GridView> コントロールを追加、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトを <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションです。  
  
> [!NOTE]
>  データ バインド コントロールにフィールドを動的に追加できますが、強くお勧めするフィールドする静的に宣言されていると、表示または非表示をクリックします。 すべてのフィールドを静的に宣言すると、親データ バインド コントロールのビュー ステートのサイズが縮小します。  
  
   
  
## 例  
 次のコード例では、コンス トラクターを使用して動的に追加する、 <xref:System.Web.UI.WebControls.TemplateField> フィールド列を <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[TemplateFieldCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldCtor/CS/templatefieldctorcs.aspx#1)]
 [!code-vb[TemplateFieldCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldCtor/VB/templatefieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定テンプレート内のアイテムが交互に表示する、 <see cref="T:System.Web.UI.WebControls.TemplateField" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />に実装されているオブジェクトの項目を交互に表示するには、テンプレートを含む、 <see cref="T:System.Web.UI.WebControls.TemplateField" />です。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> に交互の項目に表示されるカスタム コンテンツを指定するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 交互の項目を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> プロパティは通常と組み合わせて使用、 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> プロパティをデータ バインド コントロールの他のすべての項目のさまざまな外観を作成します。  
  
 指定するテンプレートを最初に開いたり閉じたり `<AlternatingItemTemplate>` 開始タグと終了タグの間のタグ、 `<TemplateField>` 要素。 次に、開始タグと終了の間でのカスタム コンテンツを追加 `<AlternatingItemTemplate>` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
 テンプレートで定義されているコントロールをプログラムでアクセスするには、最初を特定する <xref:System.Web.UI.WebControls.TableCell> データ バインド コントロール内のオブジェクトには、コントロールが含まれています。 次に、使用、 <xref:System.Web.UI.Control.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.TableCell> コントロールにアクセスするオブジェクト。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.TableCell> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> 代替用のカスタム テンプレートを作成するプロパティの項目を <xref:System.Web.UI.WebControls.TemplateField> のフィールドの列、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 テンプレートで指定したテンプレートのバリエーションである、 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> プロパティ、セルの反対側にイメージを表示する場所です。  
  
 [!code-csharp[TemplateFieldAlternatingItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/CS/templatefieldalternatingitemtemplatecs.aspx#1)]
 [!code-vb[TemplateFieldAlternatingItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldAlternatingItemTemplate/VB/templatefieldalternatingitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、値を <see cref="T:System.Web.UI.WebControls.TemplateField" /> オブジェクトがバインドされているに変換する必要があります <see langword="null" /> であれば <see cref="F:System.String.Empty" />します。</summary>
        <value>
          <see langword="true" /> 場合、値を <see cref="T:System.Web.UI.WebControls.TemplateField" /> は値に変換する <see langword="null" /> である場合 <see cref="F:System.String.Empty" />。 そうしないと、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、テンプレートで行われた双方向のデータ バインド ステートメントに適用されます。 双方向のバインドされたテンプレートから、更新または挿入操作でデータ ソースに値を渡す前に、値を抽出後、変換が行われます。  
  
 たとえば、ユーザーが、空の文字列を入力 \(""\) のフィールドの値を更新またはレコードを挿入するとき。 使用して、 <xref:System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull%2A> プロパティを空の文字列値が自動的に変換するかどうかを指定する `null` データ フィールドがデータ ソースで更新される場合。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> 、現在のプロパティをコピーする <see cref="T:System.Web.UI.WebControls.TemplateField" /> にします。</param>
        <summary>現在のプロパティをコピー <see cref="T:System.Web.UI.WebControls.TemplateField" />\-を指定したオブジェクトを派生 <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TemplateField.CopyProperties%2A> メソッドは、現在のプロパティをコピーするために使用するヘルパー メソッド <xref:System.Web.UI.WebControls.TemplateField>\-派生オブジェクトを <xref:System.Web.UI.WebControls.DataControlField> メソッドによって作成されたオブジェクト。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.CreateField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい <see cref="T:System.Web.UI.WebControls.TemplateField" /> オブジェクトを作成します。</summary>
        <returns>新しいは常に返します <see cref="T:System.Web.UI.WebControls.TemplateField" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TemplateField.CreateField%2A> メソッドは、基本メソッドを返す、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.TemplateField.CreateField" /> in a derived class, be sure to create a new instance of your type and not call the base method.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の編集モードでの項目を表示するためのテンプレート、 <see cref="T:System.Web.UI.WebControls.TemplateField" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />\-編集モードで、項目を表示するためのテンプレートが含まれるオブジェクトを実装する、 <see cref="T:System.Web.UI.WebControls.TemplateField" />です。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> で編集モードになっている項目に表示されるカスタム コンテンツを指定するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 編集モードの項目を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。<xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> プロパティには、通常、データ ソース内の値を変更するユーザーの入力コントロールが含まれます。  
  
 指定するテンプレートを最初に開いたり閉じたり `<EditItemTemplate>` 開始タグと終了タグの間のタグ、 `<TemplateField>` 要素。 次に、開始タグと終了の間でのカスタム コンテンツを追加 `<EditItemTemplate>` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
 テンプレートで定義されているコントロールをプログラムでアクセスするには、最初を特定する <xref:System.Web.UI.WebControls.TableCell> データ バインド コントロール内のオブジェクトには、コントロールが含まれています。 次に、使用、 <xref:System.Web.UI.Control.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.TableCell> コントロールにアクセスするオブジェクト。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.TableCell> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> 編集モードでアイテムのカスタム テンプレートを作成するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> のフィールドの列、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 テンプレートには、ユーザーが、値のフィールドを空のままできないように、検証サーバー コントロールが含まれています。  
  
 [!code-csharp[TemplateFieldEditItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/CS/templatefieldedititemtemplatecs.aspx#1)]
 [!code-vb[TemplateFieldEditItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldEditItemTemplate/VB/templatefieldedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</param>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> のコントロールまたはテキストを含む、 <see cref="T:System.Web.UI.WebControls.TemplateField" />です。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つ。</param>
        <param name="includeReadOnly">
          <see langword="true" /> 読み取り専用のフィールドの値が含まれることを示すために、 <c>dictionary</c> コレクション以外の場合、 <see langword="false" />です。</param>
        <summary>1 つまたは複数の双方向のバインド ステートメントで指定されたフィールドのデータ コントロールの値が抽出されます \(<see langword="DataBind" />\) 現在のテーブル セルからを指定した値を加算して <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> メソッドはから派生した型によって実装 <xref:System.Web.UI.WebControls.DataControlField>, など <xref:System.Web.UI.WebControls.TemplateField>します。 このメソッドは、update、insert、または削除操作のデータ ソースに渡されるディクショナリを設定するテンプレートに双方向データ バインドのフィールドの値を取得します。 フィールドと値のペアは、メソッドに渡されるディクショナリ コレクションに格納されます。<xref:System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell%2A> メソッドは、 `ExtractRowValues` などのデータのコントロール <xref:System.Web.UI.WebControls.DetailsView> と <xref:System.Web.UI.WebControls.GridView>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のフッター セクションを表示するためのテンプレート、 <see cref="T:System.Web.UI.WebControls.TemplateField" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />\-のフッター セクションを表示するためのテンプレートが含まれるオブジェクトを実装する、 <see cref="T:System.Web.UI.WebControls.TemplateField" />です。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> のフッター セクションに表示されるカスタム コンテンツを指定するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 フッター セクションを表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
 指定するテンプレートを最初に開いたり閉じたり `<FooterTemplate>` 開始タグと終了タグの間のタグ、 `<TemplateField>` 要素。 次に、開始タグと終了の間でのカスタム コンテンツを追加 `<FooterTemplate>` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
 テンプレートで定義されているコントロールをプログラムでアクセスするには、最初を特定する <xref:System.Web.UI.WebControls.TableCell> データ バインド コントロール内のオブジェクトには、コントロールが含まれています。 次に、使用、 <xref:System.Web.UI.Control.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.TableCell> コントロールにアクセスするオブジェクト。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.TableCell> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> のフッター セクション用のカスタム テンプレートを作成するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> フィールドの列で、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 テンプレート内の値の合計を表示する、 <xref:System.Web.UI.WebControls.TemplateField> フィールドの列です。  
  
 [!code-csharp[TemplateFieldFooterTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldFooterTemplate/CS/templatefieldfootertemplatecs.aspx#1)]
 [!code-vb[TemplateFieldFooterTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldFooterTemplate/VB/templatefieldfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のヘッダー セクションを表示するためのテンプレート、 <see cref="T:System.Web.UI.WebControls.TemplateField" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />\-のヘッダー セクションを表示するためのテンプレートが含まれるオブジェクトを実装する、 <see cref="T:System.Web.UI.WebControls.TemplateField" /> データ バインド コントロールにします。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> のヘッダー セクションに表示されるカスタム コンテンツを指定するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 ヘッダー セクションを表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
 指定するテンプレートを最初に開いたり閉じたり `<HeaderTemplate>` 開始タグと終了タグの間のタグ、 `<TemplateField>` 要素。 次に、開始タグと終了の間でのカスタム コンテンツを追加 `<HeaderTemplate>` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
 テンプレートで定義されているコントロールをプログラムでアクセスするには、最初を特定する <xref:System.Web.UI.WebControls.TableCell> データ バインド コントロール内のオブジェクトには、コントロールが含まれています。 次に、使用、 <xref:System.Web.UI.Control.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.TableCell> コントロールにアクセスするオブジェクト。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.TableCell> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> のヘッダー セクション用のカスタム テンプレートを作成するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> フィールドの列で、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 テンプレートは、ユーザーがまたはの行を非表示にできるチェック ボックスを表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[TemplateFieldHeaderTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/CS/templatefieldheadertemplatecs.aspx#1)]
 [!code-vb[TemplateFieldHeaderTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldHeaderTemplate/VB/templatefieldheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> のコントロールまたはテキストを含む、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</param>
        <param name="cellType">
          <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値のいずれか。</param>
        <param name="rowState">いずれか、 <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> を含む行の状態を指定する値、 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />です。</param>
        <param name="rowIndex">行のインデックスを <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> に含まれています。</param>
        <summary>セルの controls コレクションにテキストやコントロールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用するカスタム データ バインド コントロールを作成するときに、このメソッドを呼び出す <xref:System.Web.UI.WebControls.DataControlFieldCell> データ、またはコントロールにテーブル構造のセルを初期化するためにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に挿入モードでの項目を表示するためのテンプレート、 <see cref="T:System.Web.UI.WebControls.TemplateField" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />\-で挿入モードに項目を表示するためのテンプレートが含まれるオブジェクトを実装する、 <see cref="T:System.Web.UI.WebControls.TemplateField" />です。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> の項目の挿入モードで表示されるカスタム コンテンツを指定するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 挿入モードの項目を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
 指定するテンプレートを最初に開いたり閉じたり `<InsertItemTemplate>` 開始タグと終了タグの間のタグ、 `<TemplateField>` 要素。 次に、開始タグと終了の間でのカスタム コンテンツを追加 `<InsertItemTemplate>` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
 テンプレートで定義されているコントロールをプログラムでアクセスするには、最初を特定する <xref:System.Web.UI.WebControls.TableCell> データ バインド コントロール内のオブジェクトには、コントロールが含まれています。 次に、使用、 <xref:System.Web.UI.Control.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.TableCell> コントロールにアクセスするオブジェクト。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.TableCell> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
> [!NOTE]
>  など、レコードを挿入するためのデータ バインド コントロールでのみこのテンプレートがサポートされているこのテンプレートをサポートしないデータ バインド コントロール、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> 挿入モードでのアイテムのカスタム テンプレートを作成するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> フィールド\] 行に、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。 テンプレートを表示、 <xref:System.Web.UI.WebControls.DropDownList> コントロールを定義済みリストから値を選択することができます。  
  
 [!code-csharp[TemplateFieldInsertItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/CS/templatefieldinsertitemtemplatecs.aspx#1)]
 [!code-vb[TemplateFieldInsertItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldInsertItemTemplate/VB/templatefieldinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.IDataItemContainer), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロール内の項目を表示するためのテンプレートを設定します。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" />\-内の項目を表示するためのテンプレートが含まれるオブジェクトを実装する、 <see cref="T:System.Web.UI.WebControls.TemplateField" />です。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> で項目に表示されるカスタム コンテンツを指定するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> オブジェクトです。 項目を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
> [!NOTE]
>  必要に応じて定義できる、 <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> プロパティと組み合わせて、 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> データ バインド コントロールの他のすべての項目の表示形式を作成するプロパティです。  
  
 指定するテンプレートを最初に開いたり閉じたり `<ItemTemplate>` 開始タグと終了タグの間のタグ、 `<TemplateField>` 要素。 次に、開始タグと終了の間でのカスタム コンテンツを追加 `<ItemTemplate>` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
 テンプレートで定義されているコントロールをプログラムでアクセスするには、最初を特定する <xref:System.Web.UI.WebControls.TableCell> データ バインド コントロール内のオブジェクトには、コントロールが含まれています。 次に、使用、 <xref:System.Web.UI.Control.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.TableCell> コントロールにアクセスするオブジェクト。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.TableCell> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> のアイテムのカスタム テンプレートを作成するプロパティ、 <xref:System.Web.UI.WebControls.TemplateField> フィールドに、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 テンプレートでフィールドの値を表示する、 <xref:System.Web.UI.WebControls.RadioButtonList> コントロールです。  
  
 [!code-csharp[TemplateFieldItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplateFieldItemTemplate/CS/templatefielditemtemplatecs.aspx#1)]
 [!code-vb[TemplateFieldItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplateFieldItemTemplate/VB/templatefielditemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateField.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TemplateField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールがクライアントの入力を検証するかどうかを指定する値を設定します。</summary>
        <value>
          <see langword="true" /> コントロールがクライアントの入力を検証する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールが含まれるかどうかを判断、 <see cref="T:System.Web.UI.WebControls.TemplateField" /> サポート ページのコールバック オブジェクトします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback%2A> メソッドがこのクラスと常に返します。 サポートされていません、 <xref:System.NotSupportedException> 例外です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このメソッドの既定の実装が呼び出されます。</exception>
        <block subset="none" type="overrides">
          <para>Classes that derive from the <see cref="T:System.Web.UI.WebControls.TemplateField" /> class can override this method to indicate whether the controls contained by the field support callbacks. To indicate that callbacks are supported, implement this method as an empty method that does not throw an exception; otherwise, throw an exception with a useful message describing why callbacks are not supported.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
  </Members>
</Type>