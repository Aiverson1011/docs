<Type Name="Wizard" FullName="System.Web.UI.WebControls.Wizard">
  <TypeSignature Language="C#" Value="public class Wizard : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Wizard extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Wizard" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("FinishButtonClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Wizard runat="server"&gt; &lt;WizardSteps&gt; &lt;asp:WizardStep title="Step 1" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;asp:WizardStep title="Step 2" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;/WizardSteps&gt; &lt;/{0}:Wizard&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>複数の手順からデータを収集するためのナビゲーションとユーザー インターフェイス \(UI\) を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [ウィザードのコンポーネント](#components)  
  
-   [ウィザードの手順](#wizard_steps)  
  
-   [ウィザード データの収集](#collecting_wizard_data)  
  
-   [ウィザードのコマンド名](#wizard_command_names)  
  
-   [動的に変化する手順](#dynamically_changing_steps)  
  
-   [ウィザードの外観](#wizard_appearance)  
  
-   [レイアウト テンプレートを使用して書式設定](#formatting_using_layout_templates)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 使用することができます、 <xref:System.Web.UI.WebControls.Wizard> を制御します。  
  
-   複数の手順には、関連するデータを収集します。  
  
-   小さい論理ステップにユーザー入力の収集に使用される大規模な Web ページを分割します。  
  
-   手順線状または非線形を移動できるようにします。  
  
<a name="components"></a>   
## ウィザードのコンポーネント  
 <xref:System.Web.UI.WebControls.Wizard> コントロールは、次のコンポーネントの構成します。  
  
-   A <xref:System.Web.UI.WebControls.WizardStepCollection> ページの開発者によって定義された各手順でユーザー インターフェイスが含まれている手順のコレクション。  
  
-   適切なボタンを表示するかを決定する組み込みのナビゲーション機能に基づいて、 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 値。  
  
-   ユーザーが置かれている手順に固有の情報を表示するカスタマイズ可能なヘッダー領域。  
  
-   コントロールのステップのサイドバー領域にすばやく移動するために使用できます。  
  
    > [!NOTE]
    >  Microsoft Visual Studio 2005 を使用している場合は注意してください、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> ソース ビュー内に保持されます。 変更する場合、 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> サイド バーのボタンをクリックしてデザイン ビューでのプロパティ\] ページでの最初の手順を実行し、 `Wizard` ために、コントロールは表示されない場合があります、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 異なるステップを指している可能性があります。  
  
<a name="wizard_steps"></a>   
## ウィザードの手順  
 各手順で、 <xref:System.Web.UI.WebControls.Wizard> コントロールが、 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> プロパティを作業は、ナビゲーション機能の種類を決定します。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> プロパティには、既定値は <xref:System.Web.UI.WebControls.WizardStepType.Auto>です。 次の表に、使用できる設定の <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> プロパティと、ステップの結果として得られる動作します。  
  
 `WizardStepType.Auto`  
 ナビゲーション ステップに表示する UI は、ステップが宣言されている順序で決定されます。  
  
 `WizardStepType.Complete`  
 最後に表示される手順です。 ナビゲーション ボタンは表示されません。  
  
 `WizardStepType.Finish`  
 ステップは、ユーザー データを収集する最後の 1 つです。**完了** ナビゲーション ボタンを表示します。  
  
 `WizardStepType.Start`  
 最初に表示される手順です。 A **前** ボタンは表示されません。  
  
 `WizardStepType.Step`  
 手順では、最初の間のステップと最後です。**前** と **次** ナビゲーション用のボタンが表示されます。  
  
<a name="collecting_wizard_data"></a>   
## ウィザード データの収集  
 使用して、 <xref:System.Web.UI.WebControls.Wizard> コントロール、線状または非線形ナビゲーションを通じてデータを収集できます。 非線形ナビゲーションの例をいくつかは不要なステップをスキップしています。 または、いくつかの値を変更する前に完了した手順に戻っています。<xref:System.Web.UI.WebControls.Wizard> コントロールがステップで入力したデータがデータ ストアへのすべての手順を実行するまで永続化する必要はありませんので、手順間の状態を維持、 <xref:System.Web.UI.WebControls.Wizard> コントロールが完了します。  
  
 または、としてデータ ストアに収集されたデータを永続化する場合は、各ステップが完了する場合など、 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> イベントは、設定する必要があります、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> のプロパティ、 <xref:System.Web.UI.WebControls.WizardStepBase> オブジェクトを `false` 、ユーザーが前に完了した手順に戻ることはできず、送信されたら、データを変更できるようにします。  
  
<a name="wizard_command_names"></a>   
## ウィザードのコマンド名  
 <xref:System.Web.UI.WebControls.Wizard> コントロールから次のコマンド名を継承する、 <xref:System.Web.UI.WebControls.View> クラスと <xref:System.Web.UI.WebControls.MultiView> クラス: <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName>, 、<xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName>, 、<xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName>, 、および <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName>です。 ウィザード コントロールは、これらのコマンド名を無視し、特別なロジックをナビゲーションに対して自動的に動作するこれらのコマンドを有効にすることはできません。 コマンド名の削除を行うボタンが見つからないかかどうか、 <xref:System.Web.UI.WebControls.Wizard> コントロール、例外はスローされません。 たとえば場合、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> ボタンには、値がありません <xref:System.Web.UI.WebControls.Button.CommandName%2A>, 、例外はスローされません。  
  
<a name="dynamically_changing_steps"></a>   
## 動的に変化する手順  
 使用することができます、 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> メソッドまたは <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> プロパティに現在表示されているステップを動的に変更を <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
> [!NOTE]
>  プログラムで追加する場合、 <xref:System.Web.UI.WebControls.WizardStep> で、 `Page_Load` イベント ハンドラーに、ページの読み込み前にそのステップのナビゲーションを追加する必要があります。  
  
<a name="wizard_appearance"></a>   
## ウィザードの外観  
 外観、 <xref:System.Web.UI.WebControls.Wizard> コントロールは、テンプレート、スキン、およびスタイル設定を完全にカスタマイズ可能です。 たとえば、使用、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>, 、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>, 、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>, 、<xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>, 、および <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> のインターフェイスをカスタマイズするプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
> [!NOTE]
>  設定、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>, 、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>, 、<xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>, 、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>, 、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>, 、または <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> プロパティの子コントロールを再作成、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 その結果、子コントロールのビュー ステートは、プロセスで失われます。 このような状況を避けるためには、明示的のコントロールの状態を維持、 <xref:System.Web.UI.WebControls.Wizard> コントロールの子は、明示的に制御またはテンプレート内でコントロールを含めるは避けます。  
  
 注意してください、 <xref:System.Web.UI.WebControls.Wizard> コントロールがの特別な Microsoft Internet Explorer のレンダリングをサポートしない非標準または互換捻出モードです。 最適な Internet Explorer のレンダリングを使用してを取得、 <xref:System.Web.UI.WebControls.Wizard> 制御、および Visual Studio の Visual Web Developer で既定で追加された XHTML doctype を使用します。  
  
<a name="formatting_using_layout_templates"></a>   
## レイアウト テンプレートを使用して書式設定  
 <xref:System.Web.UI.WebControls.Wizard> コントロールでは、HTML を使用することがなく、コントロールのレイアウトを指定できます。 `table` 要素。 代わりに、使用、 `LayoutTemplate` 要素のレイアウトを指定します。 テンプレートでは、プレース ホルダーに、項目を動的に挿入するコントロールを示すためにコントロールを作成します。 \(これは、ような方法のテンプレート モデル、 <xref:System.Web.UI.WebControls.ListView> 動作を制御します\)。 詳細については、<xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A?displayProperty=fullName> プロパティを参照してください。  
  
<a name="accessibility"></a>   
## ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) と [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:Wizard  
    AccessKey="string"  
    ActiveStepIndex="integer"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CancelButtonImageUrl="uri"  
    CancelButtonText="string"  
    CancelButtonType="Button|Image|Link"  
    CancelDestinationPageUrl="uri"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DisplayCancelButton="True|False"  
    DisplaySideBar="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FinishCompleteButtonImageUrl="uri"  
    FinishCompleteButtonText="string"  
    FinishCompleteButtonType="Button|Image|Link"  
    FinishDestinationPageUrl="uri"  
    FinishPreviousButtonImageUrl="uri"  
    FinishPreviousButtonText="string"  
    FinishPreviousButtonType="Button|Image|Link"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    HeaderText="string"  
    Height="size"  
    ID="string"  
    OnActiveStepChanged="ActiveStepChanged event handler"  
    OnCancelButtonClick="CancelButtonClick event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnFinishButtonClick="FinishButtonClick event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnNextButtonClick="NextButtonClick event handler"  
    OnPreRender="PreRender event handler"  
    OnPreviousButtonClick="PreviousButtonClick event handler"  
    OnSideBarButtonClick="SideBarButtonClick event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    SkipLinkText="string"  
    StartNextButtonImageUrl="uri"  
    StartNextButtonText="string"  
    StartNextButtonType="Button|Image|Link"  
    StepNextButtonImageUrl="uri"  
    StepNextButtonText="string"  
    StepNextButtonType="Button|Image|Link"  
    StepPreviousButtonImageUrl="uri"  
    StepPreviousButtonText="string"  
    StepPreviousButtonType="Button|Image|Link"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CancelButtonStyle />  
        <FinishCompleteButtonStyle />  
        <FinishNavigationTemplate>  
            <!-- child controls -->  
        </FinishNavigationTemplate>  
        <FinishPreviousButtonStyle />  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <NavigationButtonStyle />  
        <NavigationStyle />  
        <SideBarButtonStyle />  
        <SideBarStyle />  
        <SideBarTemplate>  
            <!-- child controls -->  
        </SideBarTemplate>  
        <StartNavigationTemplate>  
            <!-- child controls -->  
        </StartNavigationTemplate>  
        <StartNextButtonStyle />  
        <StepNavigationTemplate>  
            <!-- child controls -->  
        </StepNavigationTemplate>  
        <StepNextButtonStyle />  
        <StepPreviousButtonStyle />  
        <StepStyle />  
        <WizardSteps>  
                <asp:TemplatedWizardStep  
                    AllowReturn="True|False"  
                    ContentTemplateContainer="string"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
                </asp:TemplatedWizardStep>  
                <asp:WizardStep  
                    AllowReturn="True|False"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
                />  
        </WizardSteps>  
</asp:Wizard>  
```  
  
   
  
## 例  
 次のコード例は、定義する方法を示します、 <xref:System.Web.UI.WebControls.Wizard> ユーザーの名前と、別の出荷先住所を入力するオプションを使用して、アドレスの収集を制御します。 ユーザーが選択されない場合 **SeparateShippingCheckBox**, 、それによって別の住所を追加する要求を発行する、 <xref:System.Web.UI.WebControls.Wizard> 制御から直接移動 `Step2` に `Finish`します。`Finish` 手順で、ユーザーがオプションの先頭に戻るには、 <xref:System.Web.UI.WebControls.Wizard> コントロールをクリックして **GoBackButton**。 ただし、ユーザーにかかる `Step2` ため、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティを `Step1` に設定されている `false`します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.Wizard\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclasscs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.Wizard\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclassvb.aspx#1)]  
  
 次のコード例は、前の例で使用される Web ページの分離コード ファイルです。  
  
 [!code-csharp[System.Web.UI.WebControls.Wizard\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclass.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Wizard\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclass.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompositeControl" />
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Wizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.%23ctor%2A> 作成しての新しいインスタンスを初期化するコンス トラクター、 <xref:System.Web.UI.WebControls.Wizard> クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase ActiveStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase ActiveStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>手順を取得、 <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> をユーザーに現在表示されているコレクション。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> をユーザーに現在表示されています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> プロパティを返します。、 <xref:System.Web.UI.WebControls.WizardStepBase> に現在表示されているオブジェクト、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> プロパティは読み取り専用。 ただし、使用することができます、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 、現在のプロパティにアクセスするプロパティ <xref:System.Web.UI.WebControls.WizardStepBase> オブジェクトです。 使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> プロパティを動的に変更を <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 別のサーバーに対する <xref:System.Web.UI.WebControls.WizardStepBase> オブジェクトです。 また、使用することができます、 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> を動的に設定する方法、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> プロパティが次を設定するステップを <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 場合の値 `CheckBox1.Checked` は `true`, 、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> にプロパティが設定されている `Wizard1.Step3`。 そうしないと、、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> にプロパティが設定されている `Wizard1.Step2`します。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardActiveStep\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardActiveStep\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">対応する <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> が\-1 の数より大きいか小さい <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 内のオブジェクト、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
      </Docs>
    </Member>
    <Member MemberName="ActiveStepChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ActiveStepChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ActiveStepChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがコントロール内の新しいステップに切り替えると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> イベントは、現在のステップに表示される、 <xref:System.Web.UI.WebControls.Wizard> の変更を制御します。 使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> ときに余分な処理を提供するイベントの現在のステップ、 <xref:System.Web.UI.WebControls.Wizard> 変更を管理します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> を更新するイベント、 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardActiveStepChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardActiveStepChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveStepIndex">
      <MemberSignature Language="C#" Value="public virtual int ActiveStepIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveStepIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のインデックスを取得または <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトです。</summary>
        <value>インデックス、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> に現在表示されて、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> プロパティの 0 から始まるインデックスを提供する、 <xref:System.Web.UI.WebControls.WizardStepBase> に現在表示されているオブジェクト、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 プログラムで設定したり、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> どの手順を制御するプロパティは実行時にユーザーに表示します。  
  
> [!NOTE]
>  Microsoft Visual Studio 2005 を使用している場合は注意してください、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> ソース ビュー内に保持されます。 変更する場合、 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> サイド バーのボタンをクリックしてデザイン ビューでのプロパティ\] ページでの最初の手順を実行し、 `Wizard` ために、コントロールは表示されない場合があります、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 異なるステップを指している可能性があります。  
  
 値を設定した場合 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> \-1 既定では手順なしでウィザードをサポートするために、次の動作が発生しました。  
  
-   宣言的に設定した場合 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> \-1 または\-1 である場合、コントロールの既定の値を常にしようと、ウィザードの最初の手順をレンダリング セットに設定します。  
  
-   プログラムで設定した場合 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> \-1 コントロール レンダリングされません。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> プロパティを設定、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 場合の値 `CheckBox1.Checked` は `true`, 、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> にプロパティが設定されている `Wizard1.Step3`。 そうしないと、、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> にプロパティが設定されている `Wizard1.Step2`します。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardActiveStepIndex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/CS/wizardactivestepindexcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardActiveStepIndex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/VB/wizardactivestepindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値は、ウィザードの手順で定義されている数よりも大きく、 <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> コレクションです。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNavigationToStep">
      <MemberSignature Language="C#" Value="protected virtual bool AllowNavigationToStep (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowNavigationToStep(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.AllowNavigationToStep(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">インデックス、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> チェックされているオブジェクトします。</param>
        <summary>決定するブール値を使用するかどうか、 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> にプロパティを設定することができます、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> に渡されたインデックスに対応するオブジェクト。</summary>
        <returns>
          <see langword="false" /> 渡されたインデックスを指している場合、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> をまだアクセスされているとその <see cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" /> にプロパティが設定されている <see langword="false" />。 そうしないと、 <see langword="true" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> のみのための派生クラスからアクセスできるメソッド、 `protected` 修飾子です。 派生クラスで使用することができます、 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> 設定するのには、渡されたインデックスを使用できるかどうかを決定する方法、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> プロパティです。<xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> メソッドから返される `false` は、渡されたインデックスを指している場合、 <xref:System.Web.UI.WebControls.WizardStepBase> まだアクセスされてを持つオブジェクトの <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティに設定 `false`、それ以外が返されます `true`します。  
  
   
  
## 例  
 次のコード例は、という名前の派生クラスを作成する方法を示します `CustomWizard` させ、 <xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A> メソッドです。 サイド バーの領域上のボタン、 `CustomWizard` コントロールがクリックされた、 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A> 、選択したステップにアクセスできるかどうかを判断するメソッドが呼び出されます。 メッセージは、何が起こったのユーザーに通知を含む Web ページに書き込まれます。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardAllowNavigationToStep\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/CS/wizardallownavigationtostepcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardAllowNavigationToStep\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/VB/wizardallownavigationtostepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler CancelButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CancelButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 **キャンセル** \] ボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> イベントが発生したときに、 **キャンセル** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールがクリックされました。 使用して、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> ときに余分な処理を提供するイベントを **キャンセル** \] ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> イベントです。 ときに、 **キャンセル** ボタンがクリックされると、ページが http:\/\/www.wingtiptoys.com\/ にリダイレクトします。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardCancelButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardCancelButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CancelButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CancelButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別子を指定、 **キャンセル** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonID> は `"CancelButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されるイメージの URL、 **キャンセル** \] ボタンをクリックします。</summary>
        <value>表示されるイメージの URL、 **キャンセル** のボタンでは、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.ButtonType.Image>, を使用して、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **キャンセル** \] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CancelButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CancelButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>外観を定義するスタイル プロパティのコレクションへの参照を取得、 **キャンセル** \] ボタンをクリックします。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のスタイルの設定を定義する **キャンセル** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> プロパティの外観を定義、 **キャンセル** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。 適用されるすべての設定は、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A> プロパティに対応する設定をオーバーライド、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonText">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示されるテキスト キャプション、 **キャンセル** \] ボタンをクリックします。</summary>
        <value>表示されるテキスト キャプション **キャンセル** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<c>"Cancel"</c> です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A> プロパティが表示されるテキストを含む、 **キャンセル** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A> プロパティは、ボタンのテキストとして、画像の代わりとして、またはリンクのテキストとして表示されるテキストとして表示できることです。 次の表に、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> 値とそれぞれの影響、 **キャンセル** ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CancelButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **キャンセル** \] ボタンをクリックします。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public static readonly string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンド名を取得、 **キャンセル** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CancelCommandName> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.CancelCommandName> は `"Cancel"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="CancelDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定をクリックしたときに、ユーザーが転送される URL、**キャンセル**ボタンをクリックします。</summary>
        <value>クリックしたときに、ユーザーがリダイレクトされる URL**キャンセル**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A>プロパティは、ユーザーがクリックしたときに表示されているステップを指定、**キャンセル**ボタン、<xref:System.Web.UI.WebControls.Wizard>コントロール。 場合、<xref:System.Web.UI.WebControls.Wizard.DisplayCancelButton%2A>プロパティに設定されている`true`と<xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A>プロパティが設定されていない、Web ページが更新されると<xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A>イベントが発生します。  
  
 テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容とセルの境界線間の間隔を設定します。</summary>
        <value>セルの内容とセルの境界線間のピクセル単位での領域の量。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> セルの内容とセルの枠線の間隔を制御するプロパティです。 指定されている間隔は、セルの 4 つすべての側面に追加されます。 列内のすべてのセルが同じセル幅を共有します。したがって、間隔は、列の最大幅のセルに適用されます。 同様に、同じ行のすべてのセルは、同じセルの高さを共有します。 したがって、間隔は、行の行内のセルに適用されます。 個々 のセルのサイズを指定することはできません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> と <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> のレイアウトをプログラムするプロパティ、 <xref:System.Web.UI.WebControls.Wizard> 宣言によって制御されます。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardCellPadding\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardCellPadding\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセル間の領域のサイズを設定します。</summary>
        <value>セルの間隔をピクセル単位で指定します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> ウィザード コントロールの隣接するセルの間隔を制御するプロパティです。 この間隔は、垂直方向と水平方向の両方に適用されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.CellPadding%2A> と <xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A> のレイアウトをプログラムするプロパティ、 <xref:System.Web.UI.WebControls.Wizard> 宣言によって制御されます。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardCellPadding\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardCellPadding\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CellPadding" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子コントロールを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのコレクションを作成します。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>階層の子コントロールを構成するコントロールを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">補足記事のテンプレートを含まない、 <see cref="T:System.Web.UI.WebControls.DataList" /> コントロールです。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateChildControls" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateControlCollection" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのスタイルを作成します。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomFinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomFinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomFinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomFinishButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー定義の識別子を取得 **完了** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID> は `"CustomFinishButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CustomNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー定義の識別子を取得 **次** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID> は `"CustomNextButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CustomPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー定義の識別子を取得 **前** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID> は `"CustomPreviousButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="DataListID">
      <MemberSignature Language="C#" Value="protected static readonly string DataListID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string DataListID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.DataListID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイドバーの識別子を取得 <see cref="T:System.Web.UI.WebControls.DataList" /> コレクションです。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.DataListID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.DataListID> は `"SideBarList"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
      </Docs>
    </Member>
    <Member MemberName="DisplayCancelButton">
      <MemberSignature Language="C#" Value="public virtual bool DisplayCancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayCancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を表示するかどうかを示すブール値、 **キャンセル** \] ボタンをクリックします。</summary>
        <value>
          <see langword="true" /> 表示する **キャンセル** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="false" /> です。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<see cref="T:System.Web.UI.ThemeableAttribute" /> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySideBar">
      <MemberSignature Language="C#" Value="public virtual bool DisplaySideBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaySideBar" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のサイド バーの領域を表示するかどうかを示すブール値、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <value>
          <see langword="true" /> サイド バーの領域を表示する、 <see cref="T:System.Web.UI.WebControls.Wizard" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="true" /> です。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<see cref="T:System.Web.UI.ThemeableAttribute" /> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示に違いがあります、 <xref:System.Web.UI.WebControls.Wizard> にこのプロパティを設定するかどうかに応じてコントロール `true` または `false`です。 このプロパティの値を設定すると `true` と、サイド バーが表示されたら、セルの間隔には適用されません、 `HeadCell`, 、`StepCell`, 、または `NavigationCell` コントロールのテーブルの要素。 この値が `false`, 、セルの間隔を適用します。 これは、コントロールを描画する方法に影響する可能性です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="FinishButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 **完了** \] ボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> イベントが発生したときに、 **完了** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールがクリックされました。 使用して、 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> ときに余分な処理を提供するイベントを **完了** \] ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> イベントです。 ときに、 **\[完了\]** \] ボタンをクリックすると、確認メッセージを記述する `Label1` と `Label1.Visible` プロパティに設定されて `true` の手順で、メッセージが表示されないようにします。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardFinishButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardFinishButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別子を取得、 **完了** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.FinishButtonID> は `"FinishButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示される画像の URL、 **完了** \] ボタンをクリックします。</summary>
        <value>表示されるイメージの URL **完了** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> プロパティに設定されて、 <xref:System.Web.UI.WebControls.ButtonType.Image> フィールドを使用して、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **完了** \] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishCompleteButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishCompleteButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> 設定を定義するオブジェクト、 **完了** \] ボタンをクリックします。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のスタイルの設定を定義する **完了** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> プロパティの外観を定義、 **完了** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。 適用されるすべての設定は、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A> プロパティに対応する設定をオーバーライド、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示されるテキスト キャプション、 **完了** \] ボタンをクリックします。</summary>
        <value>表示されるテキスト キャプション **完了** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<c>"Finish"</c> です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A> プロパティが表示されるテキストを含む、 **完了** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A> プロパティは、イメージをレンダリングされないブラウザー内のイメージを別の方法として、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示できることです。 次の表に、フィールドの値、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> プロパティとそれぞれのそれぞれの効果、 **完了** ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストは、リンクのテキストとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishCompleteButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishCompleteButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **完了** \] ボタンをクリックします。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="FinishDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定がクリックしたときに、ユーザーがリダイレクトされる URL、 **完了** \] ボタンをクリックします。</summary>
        <value>クリックしたときに、ユーザーがリダイレクトされる URL **完了** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl%2A> プロパティは、ユーザーがクリックしたときに表示される手順を指定、 **完了** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
      </Docs>
    </Member>
    <Member MemberName="FinishNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FinishNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FinishNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のナビゲーション領域を表示するために使用するテンプレート、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 手順です。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> のナビゲーション領域のコンテンツを定義する、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> にナビゲーション領域のユーザー設定の内容を指定するプロパティが表示される、 <xref:System.Web.UI.WebControls.WizardStepType.Finish> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 ナビゲーション領域の描画方法を指定するテンプレートを作成してコンテンツを定義、 <xref:System.Web.UI.WebControls.WizardStepType.Finish> 手順です。  
  
 テンプレートのカスタム コンテンツに含まれる、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> オブジェクトです。 カスタム コンテンツを追加することができます、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> オブジェクトを使用してテンプレート編集モードまたは定義して、デザイン ビューで、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> を使用してオブジェクト インライン `FinishNavigationTemplate` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> に含まれているオブジェクト、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> プロパティには、2 つ含める必要があります <xref:System.Web.UI.WebControls.IButtonControl> には、1 とその <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> プロパティ"MoveComplete"し、もう一方に設定されて、 <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> "MovePrevious"に設定するとナビゲーション機能を有効にするプロパティです。  
  
 プログラムを使用して、テンプレートで定義されているコントロールにアクセスするには、使用、 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.Wizard> オブジェクトです。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.Wizard> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A> のナビゲーション領域のカスタム テンプレートを作成するプロパティ、 <xref:System.Web.UI.WebControls.WizardStepType.Finish> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardFinishNavigationTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/CS/wizardfinishnavigationtemplatecs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardFinishNavigationTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/VB/wizardfinishnavigationtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別子を取得、 **前** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 手順です。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID>`"FinishPreviousButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示される画像の URL、 **前** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 手順です。</summary>
        <value>表示されるイメージの URL **前** 上、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> プロパティに設定されて、 <xref:System.Web.UI.WebControls.ButtonType.Image> フィールドを使用して、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **前** ボタンを <xref:System.Web.UI.WebControls.WizardStepType.Finish> 手順です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> 設定を定義するオブジェクト、 **前** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 手順です。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のスタイルの設定を定義する **前** 上、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> プロパティの外観を定義、 **前** のボタンでは、 <xref:System.Web.UI.WebControls.WizardStepType.Finish> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。 適用されるすべての設定は、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> プロパティに対応する設定をオーバーライド、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示されるテキスト キャプション、 **前** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 手順です。</summary>
        <value>表示されるテキスト キャプション **前** 上、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<c>"Previous"</c> です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A> プロパティが表示されるテキストを含む、 **前** のボタンでは、 <xref:System.Web.UI.WebControls.WizardStepType.Finish> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A> プロパティは、イメージをレンダリングされないブラウザー内のイメージを別の方法として、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示できることです。 次の表に、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> プロパティ フィールドの値とのそれぞれの特殊効果、 **前** ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **前** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> 手順です。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetDesignModeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン モードの状態を取得します。</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistory">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetHistory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetHistory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetHistory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションを返す <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> アクセスされているオブジェクト。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> を含む、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> アクセスされているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.GetHistory%2A> メソッドを含むコレクションを返します、 <xref:System.Web.UI.WebControls.WizardStepBase> アクセスされているオブジェクト。<xref:System.Web.UI.WebControls.WizardStepBase> オブジェクトは、アクセスされた順序に並べ: コレクション内の最初の項目は、前 <xref:System.Web.UI.WebControls.WizardStepBase> オブジェクト、コレクション内の 2 番目の項目は、 <xref:System.Web.UI.WebControls.WizardStepBase> し、前の手順の前にアクセスしたことをオブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStepType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepType GetStepType (System.Web.UI.WebControls.WizardStepBase wizardStep, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.UI.WebControls.WizardStepType GetStepType(class System.Web.UI.WebControls.WizardStepBase wizardStep, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetStepType(System.Web.UI.WebControls.WizardStepBase,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wizardStep">
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> を関連付けられた <see cref="T:System.Web.UI.WebControls.WizardStepType" /> が返されます。</param>
        <param name="index">インデックス、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> を関連付けられた <see cref="T:System.Web.UI.WebControls.WizardStepType" /> が返されます。</param>
        <summary>返します。、 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 値を指定 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトです。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 値のいずれか。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.GetStepType%2A> メソッドを呼び出せば確認、 <xref:System.Web.UI.WebControls.WizardStepType> の指定した値 <xref:System.Web.UI.WebControls.WizardStepBase> オブジェクトです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.GetStepType%2A> の方法に関連付けられたを <xref:System.Web.UI.WebControls.WizardStepType> の現在のステップの値、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 毎回、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> イベントが発生すると、新しい <xref:System.Web.UI.WebControls.WizardStepType> 値を取得し、メッセージに書き込まれます `Label1`します。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardGetStepType\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/CS/wizardgetsteptypecs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardGetStepType\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/VB/wizardgetsteptypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
      </Docs>
    </Member>
    <Member MemberName="HeaderPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string HeaderPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string HeaderPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.HeaderPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ID を取得、 <see cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" /> 内のプレース ホルダー、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プレース ホルダー ID は、"headerPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、<see cref="T:System.Web.UI.WebControls.Style" />コントロールのヘッダー領域の設定を定義するオブジェクト。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />のヘッダー領域のスタイルの設定を定義する、<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>プロパティのヘッダー領域の外観を定義する、<xref:System.Web.UI.WebControls.Wizard>コントロール。<xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`\(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderText" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのヘッダー領域を表示するために使用するテンプレートを設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> のヘッダー領域を表示するためのテンプレートを含む、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> をカスタムの内容を指定するプロパティをヘッダー領域の表示は、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 ヘッダー領域を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
 テンプレートのカスタム コンテンツに含まれる、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> オブジェクトです。 カスタム コンテンツを追加することができます、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> オブジェクトを使用してテンプレート編集モードまたは定義して、デザイン ビューで、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> を使用してオブジェクト インライン `HeaderTemplate` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
 プログラムを使用して、テンプレートで定義されているコントロールにアクセスするには、使用、 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.Wizard> オブジェクトです。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.Wizard> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのヘッダー領域に表示されるテキスト キャプションを設定します。</summary>
        <value>ヘッダー領域に表示されるテキスト キャプション、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> プロパティ定義のヘッダー領域に表示されるテキスト キャプション、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 ヘッダー領域のスタイルを制御する、 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> プロパティです。 代わりに、ヘッダー行に、独自のカスタム UI を定義するには、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> プロパティの代わりに、 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> プロパティです。  
  
> [!NOTE]
>  両方の <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> と <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A> プロパティが定義されている、 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> プロパティには影響を及ぼしません。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> を更新するイベント、 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardActiveStepChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardActiveStepChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ルート コンテナー内のカスタム コンテンツを取得または、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <value>ルート コンテナー内のカスタム コンテンツを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A> のカスタム ユーザー インターフェイス \(UI\) を定義するプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 レイアウト テンプレートを指定するには、追加、 `LayoutTemplate` 内の要素、 <xref:System.Web.UI.WebControls.Wizard> コントロールのマークアップ。 内部、 `LayoutTemplate` 要素の各コンポーネントのプレース ホルダーを追加、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 ナビゲーション、補足記事のセクションではウィザードの手順のプレース ホルダー、 <xref:System.Web.UI.WebControls.Wizard> でコントロールが必要な `LayoutTemplate` 要素。  
  
> [!NOTE]
>  レイアウトのテンプレートを変更する **ソース** 表示します。 レイアウト テンプレートを編集する **デザイン** ビューがサポートされていません。  
  
   
  
## 例  
 次の例を追加する方法を示しています、 `LayoutTemplate` 要素を `Wizard` コントロールとコンポーネントの書式を設定する方法、 `Wizard` コントロールを使用して `div` 要素。 コントロールを表示すると、 `div` 要素は、コントロールの書式を設定する HTML テーブルではなく使用されます。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">コントロールの状態を復元します。</param>
        <summary>コントロールの状態情報を復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">コントロールの状態を復元します。</param>
        <summary>ビュー ステート情報を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> は正しい <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> 値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveCompleteCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveCompleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveCompleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているコマンドの名前を取得、 **完了** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName> は `"MoveComplete"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MoveToCommandName" />
      </Docs>
    </Member>
    <Member MemberName="MoveNextCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveNextCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveNextCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているコマンドの名前を取得、 **次** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName> は `"MoveNext"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="MovePreviousCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MovePreviousCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MovePreviousCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているコマンドの名前を取得、 **前** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName> は `"MovePrevious"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" />\-派生として設定するオブジェクト、 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />です。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.WebControls.WizardStepBase" />\-派生したオブジェクトの値として、 <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> のプロパティ、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> を制御するメソッド <xref:System.Web.UI.WebControls.WizardStepBase>\-派生オブジェクトは、の値として設定されて、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> プロパティに、 <xref:System.Web.UI.WebControls.Wizard> をプログラムで制御します。 これにより、変更、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> プロパティが動的に実行時にその他の条件に基づきます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.MoveTo%2A> を制御する方法、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 場合の値 `CheckBox1.Checked` は `true`, 、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> にプロパティが設定されている `Wizard1.Step3`。 そうしないと、、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> にプロパティが設定されている `Wizard1.Step2`します。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardMoveTo\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/CS/wizardmovetocs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardMoveTo\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/VB/wizardmovetovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">値、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" />\-に渡された派生オブジェクトが <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> 、関連する <see cref="T:System.Web.UI.WebControls.WizardStepBase" />に渡された派生オブジェクトが\-1 に等しい。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="MoveToCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveToCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveToCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveToCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイド バーのボタンのそれぞれに関連付けられているコマンド名を取得します。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.MoveToCommandName> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.MoveToCommandName> は `"Move"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="NavigationButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style NavigationButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style NavigationButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> コントロール上のナビゲーション領域で、ボタンの設定を定義するオブジェクト。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> 上のナビゲーション領域にあるボタンのスタイルの設定を定義する、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティは、上のボタンのナビゲーション領域の外観を定義、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティは、個々 のボタンのスタイルとマージします。 個々 のボタンのスタイル プロパティに適用されているすべての設定に対応する設定を上書き、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。 設定する場合など、 `FinishPreviousButtonStyle.ForeColor` プロパティを `"red"` と `NavigationButtonStyle.ForeColor` プロパティを `"green"`, 、ボタンの色が赤になりますので、個々 のスタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A> プロパティの設定の上書き、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。  
  
 次 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティ スタイルは、個々 のボタンのスタイル設定によって上書きされます。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="NavigationPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string NavigationPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string NavigationPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.NavigationPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ID を取得、 <see cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" /> 内のプレース ホルダー、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プレース ホルダー ID は、"navigationPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle NavigationStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle NavigationStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> コントロール上のナビゲーション領域の設定を定義するオブジェクト。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> 上のナビゲーション領域のスタイルの設定を定義する、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> プロパティのナビゲーション領域の外観を定義する、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 適用されるすべての設定、 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> プロパティがプロパティの対応する設定を上書き、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.Wizard> スタイル プロパティは、 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="NextButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、**次**ボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick>イベントが発生したときに、**次**ボタンをクリックして、<xref:System.Web.UI.WebControls.Wizard>コントロールがクリックされました。 使用して、<xref:System.Web.UI.WebControls.Wizard.NextButtonClick>ときに、追加処理を提供するイベント、 **\[次へ\]**ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.NextButtonClick>イベント。 たびに、**次**ボタンをクリックして、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>プロパティを<xref:System.Web.UI.WebControls.Wizard>によって測定されるは、コントロールを 1 ピクセルずつ増加、<xref:System.Web.UI.WebControls.Unit>クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnActiveStepChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveStepChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveStepChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A> メソッドを発生させる、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> イベントときに、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールを変更します。 使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> に現在にステップするときは、追加の処理を提供するイベントが表示されます、 <xref:System.Web.UI.WebControls.Wizard> の変更を制御します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged> を更新するイベント、 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardActiveStepChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardActiveStepChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" /> method of the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納します。</param>
        <summary>サーバー コントロールのイベントをページのユーザー インターフェイス サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> ページのユーザー インターフェイス サーバー コントロールの階層構造は、サーバー コントロールのイベントを渡す場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> イベントが発生したときに、 **キャンセル** \] ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick> イベントです。 ときに、 **キャンセル** ボタンがクリックされると、ステップは http:\/\/www.wingtiptoys.com\/ にリダイレクトします。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardCancelButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardCancelButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" /> method of the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnFinishButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinishButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> イベントが発生したときに、 **完了** \] ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnFinishButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick> イベントです。 ときに、 **\[完了\]** \] ボタンをクリックすると、確認メッセージを記述する `Label1` と `Label1.Visible` プロパティに設定されて `true` の手順で、メッセージが表示されないようにします。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardFinishButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardFinishButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method of the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">生成されるイベントです。</param>
        <summary>Init イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNextButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNextButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNextButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> イベントが発生したときに、 **次** \] ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnNextButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick> イベントです。 毎回、 **次** \] ボタンをクリックすると、 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> プロパティを <xref:System.Web.UI.WebControls.Wizard> によって測定されるコントロールが 1 ピクセルずつ増加する、 <xref:System.Web.UI.WebControls.Unit> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method of the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviousButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviousButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviousButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> イベントが発生したときに、 **前** \] ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> イベントです。 毎回、 **前** \] ボタンをクリックすると、 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> プロパティを <xref:System.Web.UI.WebControls.Wizard> によって測定されるコントロールが 1 ピクセルずつ減少、 <xref:System.Web.UI.WebControls.Unit> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method of the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnSideBarButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnSideBarButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSideBarButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> サイドバー領域上のボタンがクリックされたときにイベントが発生します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> 場合に、イベントがイベントを発生しません、 <xref:System.Web.UI.WebControls.Button> コントロールを <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティに設定 `Move` の外部には、 <xref:System.Web.UI.WebControls.DataList> のコントロールの補足記事のリスト、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> オブジェクトです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> イベントです。 たびに、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> イベントが発生すると、メッセージが出力に、 <xref:System.Web.UI.WebControls.Label.Text%2A> プロパティを `Label1` 領域ボタンがクリックされたどのサイドバーに情報を使用します。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardSideBarButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" /> method of the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="PreviousButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 **前** \] ボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> イベントが発生したときに、 **前** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールがクリックされました。 使用して、 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> ときに余分な処理を提供するイベントを **前** \] ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick> イベントです。 毎回、 **前** \] ボタンをクリックすると、 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> プロパティを <xref:System.Web.UI.WebControls.Wizard> によって測定されるコントロールが 1 ピクセルずつ減少、 <xref:System.Web.UI.WebControls.Unit> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterCommandEvents">
      <MemberSignature Language="C#" Value="protected void RegisterCommandEvents (System.Web.UI.WebControls.IButtonControl button);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RegisterCommandEvents(class System.Web.UI.WebControls.IButtonControl button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.RegisterCommandEvents(System.Web.UI.WebControls.IButtonControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="button">
          <see cref="T:System.Web.UI.WebControls.IButtonControl" /> の新しいインスタンス <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> が登録されています。</param>
        <summary>新しいインスタンスを登録、 <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> クラスは、指定された <see cref="T:System.Web.UI.WebControls.IButtonControl" /> オブジェクトです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML のライターです。</param>
        <summary>指定されたライターにコントロールを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの状態を保存します。</summary>
        <returns>コントロールの状態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビューステートを保存します。</summary>
        <returns>ビュー ステート。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonClick">
      <MemberSignature Language="C#" Value="public virtual event System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイド バー領域のボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> イベントは、サイド バー領域にボタン、 <xref:System.Web.UI.WebControls.Wizard> コントロールをクリックします。 使用して、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> をサイド バー領域のボタンがクリックされたときに余分な処理を提供するイベントです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> 場合に、イベントがイベントを発生しません、 <xref:System.Web.UI.WebControls.Button> コントロールを <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティに設定 `Move` の外部には、 <xref:System.Web.UI.WebControls.DataList> のコントロールの補足記事のリスト、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例は、イベント ハンドラーを指定する方法を示します、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> イベントです。 たびに、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick> イベントが発生すると、メッセージが出力に、 <xref:System.Web.UI.WebControls.Label.Text%2A> プロパティを `Label1` 領域ボタンがクリックされたどのサイドバーに情報を使用します。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardSideBarButtonClick\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string SideBarButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string SideBarButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイド バーのボタンのそれぞれに関連付けられている識別子を取得します。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonID> は `"SideBarButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SideBarButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SideBarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> サイドバー上のボタンの設定を定義するオブジェクト。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のサイドバー上のボタンのスタイル設定を定義する、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> プロパティのサイドバー上のボタンの外観を定義する、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 適用されるすべての設定、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> プロパティがプロパティの対応する設定を上書き、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.Wizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.Wizard> サイドバーの制御、 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SideBarPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string SideBarPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SideBarPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ID を取得、 <see cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" /> 内のプレース ホルダー、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プレース ホルダー ID は、"sideBarPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SideBarStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SideBarStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> コントロールにサイドバー領域の設定を定義するオブジェクト。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> でサイド バー領域のスタイルの設定を定義する、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> プロパティのサイド バー領域の外観を定義する、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> オブジェクトが返されます。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 適用されるすべての設定、 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> プロパティがプロパティの対応する設定を上書き、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
> [!NOTE]
>  Height プロパティ <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> 高さは、ウィザードの高さ未満に設定する場合は無視されます。 値を設定 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> 高さと <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> 高さは、ウィザードの全体的な高さに追加します。 ウィザードの高さが 500px に設定されている場合などと <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A> 高さまたは <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A> 高さが 50 ピクセルまたは 10% に設定し、合計のウィザードの高さは 550px です。  
  
 次 <xref:System.Web.UI.WebControls.Wizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SideBarTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SideBarTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SideBarTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールにサイド バーの領域を表示するために使用するテンプレートを設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> にサイドバー領域を表示するためのテンプレートを含む、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> にサイド バー領域のユーザー設定の内容を指定するプロパティが表示される、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 サイドバーの領域を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
 テンプレートのカスタム コンテンツに含まれる、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> オブジェクトです。 カスタム コンテンツを追加することができます、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> オブジェクトを使用してテンプレート編集モードまたは定義して、デザイン ビューで、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> を使用してオブジェクト インライン `SideBarTemplate` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A> オブジェクトを含める必要があります、 <xref:System.Web.UI.WebControls.DataList> コントロールまたは <xref:System.Web.UI.WebControls.ListView> いるコントロール <xref:System.Web.UI.Control.ID%2A> にプロパティが設定されている `"SideBarList"` サイド バー ナビゲーション機能を有効にします。 また、 `"SideBarList"` 上、 <xref:System.Web.UI.WebControls.DataList> または <xref:System.Web.UI.WebControls.ListView> コントロールを含める必要があります、 <xref:System.Web.UI.WebControls.IButtonControl> コントロールです。  
  
 プログラムを使用して、テンプレートで定義されているコントロールにアクセスするには、使用、 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.Wizard> オブジェクトです。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.Wizard> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
   
  
## 例  
 次の例は、追加する方法を示します、 <xref:System.Web.UI.WebControls.ListView> への制御、 `SideBarTemplate` 要素と使用方法、 <xref:System.Web.UI.WebControls.LinkButton> の手順を移動するコントロール。  
  
```  
<SideBarTemplate>  
  <asp:ListView ID="sideBarList" runat="server">  
    <LayoutTemplate>  
    <div id="ItemPlaceHolder" runat="server"/>  
    </LayoutTemplate>  
  
    <ItemTemplate>  
      <asp:LinkButton ID="sideBarButton" runat="server"   
          Text="Button" />  
    </ItemTemplate>  
  </asp:ListView>  
</SideBarTemplate>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public virtual string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサイド バー領域のコンテンツをスキップするスクリーン リーダーを通知する代替テキストをレンダリングするために使用する値を設定します。</summary>
        <value>ある文字列、 <see cref="T:System.Web.UI.WebControls.Wizard" /> スクリーン リーダーにヒントとして、非表示のイメージの代替テキストとして表示されます。 既定値は、<c>"Skip Navigation Links"</c> です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A> サイドバーのコンテンツをスキップするためにスクリーン リーダーによって読み取られる非表示イメージの代替テキストを指定するプロパティです。 指定したテキストは、コントロールをより使いやすくために使用する非表示イメージの説明を持つデバイスの支援技術を提供します。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> にプロパティが設定されている `false`, 、 <xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A> 代替テキストを持つプロパティが非表示イメージを作成できません。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StartNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StartNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のナビゲーション領域を表示するために使用するテンプレート、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> のステップ、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> 上のナビゲーション領域を表示するためのテンプレートを含む、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> にナビゲーション領域のユーザー設定の内容を指定するプロパティが表示される、 <xref:System.Web.UI.WebControls.WizardStepType.Start> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 ナビゲーション領域の描画方法を指定するテンプレートを作成してコンテンツを定義、 <xref:System.Web.UI.WebControls.WizardStepType.Start> 手順です。  
  
 テンプレートのカスタム コンテンツに含まれる、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> オブジェクトです。 カスタム コンテンツを追加することができます、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> オブジェクトを使用してテンプレート編集モードまたは定義して、デザイン ビューで、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> を使用してオブジェクト インライン `StartNavigationTemplate` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> オブジェクトに含まれている、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> プロパティを含める必要があります、 <xref:System.Web.UI.WebControls.IButtonControl> コントロールを <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> プロパティに設定 `"MoveNext"` ナビゲーション機能を有効にします。  
  
 プログラムを使用して、テンプレートで定義されているコントロールにアクセスするには、使用、 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.Wizard> オブジェクトです。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.Wizard> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WizardStepType.Start" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StartNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StartNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StartNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられている識別子を取得、 **次** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 手順です。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonID> 、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonID> は `"StartNextButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示される画像の URL、 **次** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 手順です。</summary>
        <value>表示されるイメージの URL **次** 上、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> プロパティに設定されて、 <xref:System.Web.UI.WebControls.ButtonType.Image> フィールドを使用して、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **次** \] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StartNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StartNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> 設定を定義するオブジェクト、 **次** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 手順です。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のスタイルの設定を定義する **次** 上、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> プロパティの外観を定義、 **次** のボタンでは、 <xref:System.Web.UI.WebControls.WizardStepType.Start> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。 適用されるすべての設定は、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A> プロパティに対応する設定をオーバーライド、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示されるテキスト キャプション、 **次** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 手順です。</summary>
        <value>表示されるテキスト キャプション **次** 上、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<c>"Next"</c> です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A> プロパティが表示されるテキストを含む、 **次** ボタンを <xref:System.Web.UI.WebControls.WizardStepType.Start> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A> プロパティは、イメージをレンダリングされないブラウザー内のイメージを別の方法として、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示できることです。 次の表に、フィールドの値、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> プロパティとそれぞれのそれぞれの効果、 **次** ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StartNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StartNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **次** のボタンでは、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> 手順です。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StepNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StepNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StepNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のいずれかのナビゲーション領域の表示に使用されるテンプレート <see cref="T:System.Web.UI.WebControls.WizardStepBase" />\-以外の派生クラスのオブジェクト、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />, 、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />, 、または <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" /> 手順です。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> のいずれかのナビゲーション領域を表示するためのテンプレートを格納している <see cref="T:System.Web.UI.WebControls.WizardStepBase" />\-派生のオブジェクト、 <see cref="T:System.Web.UI.WebControls.Wizard" /> 以外の制御、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />, 、<see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />, 、または <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" />です。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A> にナビゲーション領域のユーザー設定の内容を指定するプロパティが表示される、 <xref:System.Web.UI.WebControls.WizardStepType.Step> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 ナビゲーション領域の描画方法を指定するテンプレートを作成してコンテンツを定義、 <xref:System.Web.UI.WebControls.WizardStepType.Step> 手順です。  
  
 テンプレートのカスタム コンテンツに含まれる、 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> オブジェクトです。 カスタム コンテンツを追加することができます、 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> オブジェクトを使用してテンプレート編集モードまたは定義して、デザイン ビューで、 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> を使用してオブジェクト インライン `StepNavigationTemplate` タグ。 コンテンツには、プレーン テキストと同じくらい簡単またはより複雑な \(他のコントロール テンプレートに埋め込んでなど\) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> オブジェクトに含まれている、 <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A> プロパティには、2 つ含める必要があります <xref:System.Web.UI.WebControls.IButtonControl> には、1 とその <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> プロパティに設定 `"MoveNext"` 使用して、 <xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A> プロパティに設定 `"MovePrevious"`, ナビゲーション機能を有効にするにします。  
  
 プログラムを使用して、テンプレートで定義されているコントロールにアクセスするには、使用、 <xref:System.Web.UI.WebControls.CompositeControl.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.Wizard> オブジェクトです。 使用することも、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.Wizard> コントロールがある場合に、コントロールを検索するオブジェクト、 <xref:System.Web.UI.Control.ID%2A> プロパティが指定されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepNextButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられている識別子を取得、 **次** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonID> は `"StepNextButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示される画像の URL、 **次** \] ボタンをクリックします。</summary>
        <value>表示されるイメージの URL **次** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> プロパティに設定されて、 <xref:System.Web.UI.WebControls.ButtonType.Image> フィールドを使用して、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **次** \] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> 設定を定義するオブジェクト、 **次** \] ボタンをクリックします。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のスタイルの設定を定義する **次** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> プロパティの外観を定義、 **次** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。 適用されるすべての設定は、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A> プロパティに対応する設定をオーバーライド、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示されるテキスト キャプション、 **次** \] ボタンをクリックします。</summary>
        <value>表示されるテキスト キャプション **次** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<c>"Next"</c> です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A> プロパティが表示されるテキストを含む、 **次** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A> プロパティは、ボタンのテキストとして、画像の代わりとして、またはリンクのテキストとして表示されるテキストとして表示できることです。 次の表に、フィールドの値、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> プロパティとそれぞれのそれぞれの効果、 **次** ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **次** \] ボタンをクリックします。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepPreviousButtonID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられている識別子を取得、 **前** \] ボタンをクリックします。 このフィールドは、静的および読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID> フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID> は `"StepPreviousButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示される画像の URL、 **前** \] ボタンをクリックします。</summary>
        <value>表示されるイメージの URL **前** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> プロパティに設定されて、 <xref:System.Web.UI.WebControls.ButtonType.Image> フィールドを使用して、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **前** \] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> 設定を定義するオブジェクト、 **前** \] ボタンをクリックします。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のスタイルの設定を定義する **前** 上、 <see cref="F:System.Web.UI.WebControls.WizardStepType.Step" /> の <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> プロパティの外観を定義、 **前** のボタンでは、 <xref:System.Web.UI.WebControls.WizardStepType.Step> のステップ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。 適用されるすべての設定は、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A> プロパティに対応する設定をオーバーライド、 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に対して表示されるテキスト キャプション、 **前** \] ボタンをクリックします。</summary>
        <value>表示されるテキスト キャプション **前** 上、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、<c>"Previous"</c> です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A> プロパティが表示されるテキストを含む、 **前** のボタンでは、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A> プロパティは、イメージをレンダリングされないブラウザー内のイメージを別の方法として、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示できることです。 次の表に、フィールドの値、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> プロパティとそれぞれのそれぞれの効果、 **前** ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **前** \] ボタンをクリックします。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
      </Docs>
    </Member>
    <Member MemberName="StepStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle StepStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle StepStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> 設定を定義するオブジェクト、 <see cref="T:System.Web.UI.WebControls.WizardStep" /> オブジェクトです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> のスタイルの設定を定義する、 <see cref="T:System.Web.UI.WebControls.WizardStep" /> でオブジェクトを <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> プロパティへの参照を取得する、 <xref:System.Web.UI.WebControls.Style> の外観を定義するオブジェクト、 <xref:System.Web.UI.WebControls.WizardStep> でオブジェクトを <xref:System.Web.UI.WebControls.Wizard> コントロールです。<xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CancelButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CancelButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.WebControl.Style%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 適用されるすべての設定は、 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> プロパティに対応する設定をオーバーライド、 <xref:System.Web.UI.WebControls.WebControl.Style%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> プロパティの設定を上書きすることができます、 <xref:System.Web.UI.WebControls.WebControl.Style%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロール。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.CssClass%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 使用すると、 <xref:System.Web.UI.WebControls.TemplatedWizardStep> の外観を定義するテンプレート、 <xref:System.Web.UI.WebControls.WizardStep> オブジェクト、 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> に対応する値、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> に対応する値、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.TagKey%2A> プロパティは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.Wizard> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トラックは、状態を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardStepPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string WizardStepPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WizardStepPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.WizardStepPlaceholderId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ID を取得、 <see cref="T:System.Web.UI.WebControls.WizardStep" /> 内のプレース ホルダー、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プレース ホルダー ID は、"WizardStepPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardSteps">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepCollection WizardSteps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepCollection WizardSteps" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.WizardSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてを含むコレクションを取得、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コントロールに対して定義されているオブジェクト。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> すべてを表す、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> に対して定義されたオブジェクト、 <see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> プロパティのコレクションを返します <xref:System.Web.UI.WebControls.WizardStepBase> を構成するオブジェクト、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 使用することができます、 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> にアクセスするコレクション、 <xref:System.Web.UI.WebControls.WizardStepBase> オブジェクトに含まれている、 <xref:System.Web.UI.WebControls.Wizard> をプログラムで制御します。 使用して、 <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>, 、<xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>, 、<xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A>, 、および <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> を操作するメソッド、 <xref:System.Web.UI.WebControls.WizardStepBase> プログラムを使用して、コレクション内のオブジェクトします。  
  
> [!NOTE]
>  Microsoft Visual Studio 2005 を使用している場合は注意してください、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> ソース ビュー内に保持されます。 変更する場合、 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> サイド バーのボタンをクリックしてデザイン ビューでのプロパティ\] ページでの最初の手順を実行し、 `Wizard` ために、コントロールは表示されない場合があります、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> 異なるステップを指している可能性があります。  
  
 場合、 <xref:System.Web.UI.WebControls.Wizard> コントロールが複数含まれている <xref:System.Web.UI.WebControls.WizardStepCollection> コレクション、コレクションに結合されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例を作成する方法を示しています、 <xref:System.Web.UI.WebControls.Wizard> をプログラムで制御を使用する方法と、 <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A> メソッドを追加する <xref:System.Web.UI.WebControls.WizardStepBase> オブジェクトを <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> コレクションです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardSteps\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardSteps\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepCollection" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
      </Docs>
    </Member>
  </Members>
</Type>