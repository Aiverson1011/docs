<Type Name="ParameterCollection" FullName="System.Web.UI.WebControls.ParameterCollection">
  <TypeSignature Language="C#" Value="public class ParameterCollection : System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParameterCollection extends System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ParameterCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.StateManagedCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>高度なデータ バインディング シナリオでデータ ソース コントロールによって使用される、<see cref="T:System.Web.UI.WebControls.Parameter" /> および <see cref="T:System.Web.UI.WebControls.Parameter" /> 派生オブジェクトのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection> クラスのコレクションを表します <xref:System.Web.UI.WebControls.Parameter> データ ソース コントロールと高度なデータ バインディングのシナリオで使用されるオブジェクト。<xref:System.Web.UI.WebControls.Parameter> オブジェクトを使用してローカルに格納されている値をバインド <xref:System.Web.UI.Page> 変数、HTTP クッキー、セッション変数、およびデータ ソース コントロールの取得、更新、削除、およびデータを挿入するときにその他のコントロールの値。  
  
 使用して、 <xref:System.Web.UI.WebControls.ParameterCollection> クラスのセットをプログラムで管理する <xref:System.Web.UI.WebControls.Parameter> オブジェクトです。 追加、挿入、および削除 <xref:System.Web.UI.WebControls.Parameter> オブジェクトの適切なメソッドを使用して、 <xref:System.Web.UI.WebControls.ParameterCollection> クラスです。 プログラムを使用して取得する <xref:System.Web.UI.WebControls.Parameter> をコレクションからオブジェクトを使用して次のいずれか。  
  
-   1 つを取得するインデクサーを使用して <xref:System.Web.UI.WebControls.Parameter> 名または配列表記を使用して、コレクションからオブジェクトです。  
  
-   使用して、 <xref:System.Collections.IEnumerable.GetEnumerator%2A> を作成する方法、 <xref:System.Collections.IEnumerator?displayProperty=fullName>に実装されているオブジェクトをコレクションから項目を取得するために使用します。  
  
 <xref:System.Web.UI.StateManagedCollection.Count%2A> プロパティは、コレクションの項目の合計数を指定し、コレクションの上限を確認するために使用します。 リストにログインを追加したりを使用して、コレクションから項目を削除、 <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A>, 、<xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A>, 、<xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A>, 、および <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> メソッドです。  
  
 実装と、特定のデータ ソース コントロールにパラメーターが格納される順序のセマンティクスによって、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションが重要であります。 例についてを使用する場合、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールの順序、ODBC データ ソースとして、 <xref:System.Web.UI.WebControls.Parameter> 内のオブジェクト、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションは、パラメーター化された SQL クエリで使用するパラメーターの順序と同じである必要があります。 ただしを使用する場合、 <xref:System.Web.UI.WebControls.SqlDataSource> Microsoft SQL Server の順序を持つコントロール、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは重要ではありません。  
  
> [!IMPORTANT]
>  データ ソース コントロールを使用する場合は、潜在的なセキュリティ上の脅威が検証を伴わないコマンド パラメーターに値が挿入されます。 データ ソース コントロールのイベントを使用すると、コマンドが実行される前に、パラメーター値を検証します。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 次の表は、さまざまなパラメーター クラスとその使用方法を示します。  
  
|パラメーター クラス|説明|  
|----------------|--------|  
|<xref:System.Web.UI.WebControls.Parameter>|パラメーターの基本クラスです。 これを使用して、ローカル変数または静的な文字列を使用するどのにバインド、 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> プロパティです。|  
|<xref:System.Web.UI.WebControls.ControlParameter>|コントロールのプロパティやメソッドにバインドするために使用されるパラメーターは、値を返します。|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Cookie の値にバインドするために使用されるパラメーターです。|  
|<xref:System.Web.UI.WebControls.FormParameter>|現在の Web フォーム ページの属性にバインドするために使用するパラメーターです。|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|値にバインドするために使用されるパラメーターは、クエリ文字列には、Web フォーム ページに渡されます。|  
|<xref:System.Web.UI.WebControls.SessionParameter>|セッション変数の値にバインドするために使用されるパラメーターです。|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|ASP.NET プロファイル プロパティの値にバインドするために使用されるパラメーターです。|  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.AccessDataSource> コントロールと <xref:System.Web.UI.WebControls.FormParameter> で Microsoft Access データベースから情報を表示する、 <xref:System.Web.UI.WebControls.GridView> コントロールです。<xref:System.Web.UI.WebControls.FormParameter> にオブジェクトを追加、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクションを使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Add%2A> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.FormParameter\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.FormParameter\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Parameter" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParameterCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>継承クラス インスタンスによって使用されるクラスを初期化します。 このコンス トラクターは、継承クラスによってのみ呼び出すことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> 、コレクションに追加します。</param>
        <summary>指定した追加 <see cref="T:System.Web.UI.WebControls.Parameter" /> コレクションの末尾にオブジェクトです。</summary>
        <returns>追加された項目のインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> を追加する方法、 <xref:System.Web.UI.WebControls.Parameter> コレクションの末尾にオブジェクトです。 メソッドのこの実装は、 <xref:System.Web.UI.WebControls.Parameter> で指定されたオブジェクト、 `param` パラメーターをコレクションに追加します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.AccessDataSource> コントロールと <xref:System.Web.UI.WebControls.FormParameter> で Microsoft Access データベースから情報を表示するオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。<xref:System.Web.UI.WebControls.FormParameter> にオブジェクトを追加、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクションを使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.Web.UI.WebControls.Parameter%29> メソッドです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.FormParameter\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.FormParameter\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="value">パラメーターの既定値として機能する文字列。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.Parameter" /> 既定値と指定した名前が表示されたオブジェクトし、コレクションの末尾に追加します。</summary>
        <returns>追加された項目のインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> を作成し、追加メソッド、 <xref:System.Web.UI.WebControls.Parameter> コレクションの末尾に既定値を持つオブジェクト。 このメソッドの実装を作成、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトで指定された名前および既定の値を使用して、 `name` と `value` パラメーターをそれぞれし、コレクションに追加します。  
  
   
  
## 例  
 次のコード例を示す方法 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.String%29> メソッドを使用して、新規に追加することができます <xref:System.Web.UI.WebControls.Parameter> オブジェクトを <xref:System.Web.UI.WebControls.ParameterCollection> コレクションを指定して、 `name` と `value` パラメーター。 この例では、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトの値にバインドされているアクセスのデータ ソース コントロールの更新コマンドに追加、 <xref:System.Web.UI.WebControls.TextBox> コントロールです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ParameterCollection\_2\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ParameterCollection\_2\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, System.Data.DbType dbType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.Data.DbType dbType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.Data.DbType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="dbType">パラメーターのデータベースの種類。</param>
        <param name="value">パラメーターの既定値。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトの指定した名前、データベースの種類、および既定値を使用し、コレクションの末尾に追加します。</summary>
        <returns>追加された項目のインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはデータベースの型です。 使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> CLR 型のメソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (string name, TypeCode type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(string name, valuetype System.TypeCode type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Add(System.String,System.TypeCode,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="type">パラメーターの型。</param>
        <param name="value">パラメーターの既定値。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.Parameter" /> 指定の名前を持つオブジェクト <see cref="T:System.TypeCode" />, 、既定値、およびコレクションの末尾に追加します。</summary>
        <returns>追加された項目のインデックス値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> メソッドを作成し、厳密に型指定付加 <xref:System.Web.UI.WebControls.Parameter> コレクションの末尾に既定値を持つオブジェクト。 このメソッドの実装を作成、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトの名前、型で指定された値を使用して、 `name`, 、`type` と `value` パラメーターをそれぞれ、コレクションに追加され、します。  
  
   
  
## 例  
 次のコード例を示す方法 <xref:System.Web.UI.WebControls.ParameterCollection.Add%28System.String%2CSystem.TypeCode%2CSystem.String%29> メソッドを使用して、新規に追加することができます <xref:System.Web.UI.WebControls.Parameter> オブジェクトを <xref:System.Web.UI.WebControls.ParameterCollection> コレクションを指定して、 `name`, 、`value`, と `type` パラメーター。 この例では、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトが現在のシステム時刻の値を提供するアクセスのデータ ソース コントロールの更新コマンドに追加します。 パラメーターを追加、 <xref:System.TypeCode> の <xref:System.DateTime>です。  
  
 [!code-csharp[System.Web.UI.WebControls.ParameterCollection\_2\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/CS/paramcoll2cs.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ParameterCollection\_2\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ParameterCollection_2/VB/paramcoll2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Contains(System.Web.UI.WebControls.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 内で検索される <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>指定するかどうか、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクションには、特定の値が含まれています。</summary>
        <returns>そのオブジェクトが <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 場合 <see langword="null" /> 渡され、 <paramref name="value" /> パラメーター、 <see langword="false" /> が返されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、指定したかどうかを判断 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.Parameter[] parameterArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.Parameter[] parameterArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CopyTo(System.Web.UI.WebControls.Parameter[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterArray" Type="System.Web.UI.WebControls.Parameter[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterArray">指定したインデックス位置にある値からコピー元となるパラメーターの配列です。</param>
        <param name="index">
          <see langword="integer" /> のインデックス、 <c>parameterArray</c> がコピーされる項目。</param>
        <summary>パラメーターのコレクションに、パラメーター配列の指定したインデックスをコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected override object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">型のインデックス <see cref="T:System.Web.UI.WebControls.Parameter" /> によって返される型の順序付きリストから作成する <see cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />です。</param>
        <summary>既定のインスタンスを作成 <see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトです。</summary>
        <returns>既定のインスタンス、 <see cref="T:System.Web.UI.WebControls.Parameter" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection.CreateKnownType%2A> メソッドのインスタンスを作成、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトのインデックスに従って、 <xref:System.Type> によって返される、 <xref:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes%2A> メソッドです。 インデックス値は、次の表に示す型に対応します。  
  
|インデックス|パラメーターの型|  
|------------|--------------|  
|0|<xref:System.Web.UI.WebControls.ControlParameter>|  
|1|<xref:System.Web.UI.WebControls.CookieParameter>|  
|2|<xref:System.Web.UI.WebControls.FormParameter>|  
|3|<xref:System.Web.UI.WebControls.Parameter>|  
|4|<xref:System.Web.UI.WebControls.QueryStringParameter>|  
|5|<xref:System.Web.UI.WebControls.SessionParameter>|  
|6|<xref:System.Web.UI.WebControls.ProfileParameter>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定のインデックスが認識される範囲内ではありません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected override Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetKnownTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>配列を取得 <see cref="T:System.Web.UI.WebControls.Parameter" /> 種類、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクションを含めることができます。</summary>
        <returns>順序付けされた配列 <see cref="T:System.Type" /> オブジェクトの種類を識別する <see cref="T:System.Web.UI.WebControls.Parameter" /> コレクションに格納できるオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.CreateKnownType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary GetValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.IOrderedDictionary GetValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">現在 <see cref="T:System.Web.HttpRequest" /> を <see cref="T:System.Web.UI.WebControls.Parameter" /> にバインドします。</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> 各パラメーターに渡されるインスタンス <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> メソッドです。</param>
        <summary>順序付けられたコレクションを取得 <see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトの名前と現在のコレクションに含まれる対応する値。</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> 名前\/値ペアのです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `control` がパラメーターを使用 <xref:System.Web.UI.WebControls.Parameter> オブジェクトを取得するコレクションに含まれる、 <xref:System.Web.UI.Page> と現在 <xref:System.Web.HttpRequest> オブジェクトを <xref:System.Web.UI.WebControls.Parameter> をオブジェクトにバインドします。  
  
 <xref:System.Collections.Specialized.IOrderedDictionary> 必要がありますが一意にという名前のオブジェクトのエントリが、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションが必要な一意な保証していない <xref:System.Web.UI.WebControls.Parameter> オブジェクト名では、このメソッドの実装では、それぞれの末尾に番号が追加されます <xref:System.Web.UI.WebControls.Parameter.Name%2A> 返されたコレクションを一意にするプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.IndexOf(System.Web.UI.WebControls.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> 内で検索される <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>指定したインデックスを決定 <see cref="T:System.Web.UI.WebControls.Parameter" /> 内のオブジェクト、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクションです。</summary>
        <returns>インデックス <paramref name="parameter" />, コレクション内で見つかった、それ以外の場合、\-1 です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のパラメーターのインデックスを確認するには、このメソッドを使用して、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="index">位置の 0 から始まるインデックス、 <see cref="T:System.Web.UI.WebControls.Parameter" /> が挿入されます。</param>
        <param name="parameter">挿入する <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>指定した挿入 <see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトを <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクション内の指定したインデックス位置。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> を追加するメソッド、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトを <xref:System.Web.UI.WebControls.ParameterCollection> コレクション内の特定の位置。 この例ではいくつか <xref:System.Web.UI.WebControls.QueryStringParameter> オブジェクトに追加されます、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクション、1 つ <xref:System.Web.UI.WebControls.QueryStringParameter> 、コレクションに挿入され、ページが読み込まれるときに、コレクションの順序が出力されます。  
  
 [!code-csharp[System.Web.UI.WebControls.QueryStringParameter\_7\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/CS/qsp7acs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.QueryStringParameter\_7\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_7/VB/qsp7avb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> が 0 未満です。  
  
 または  
  
 <paramref name="index" /> が <see langword="Count" /> より大きくなっています。</exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">インデックス、 <see cref="T:System.Web.UI.WebControls.Parameter" /> をコレクションから取得します。</param>
        <summary>取得または設定、 <see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクト、コレクション内の指定したインデックス位置。</summary>
        <value>コレクション内の指定したインデックス位置の <see cref="T:System.Web.UI.WebControls.Parameter" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このインデクサーを使用して、取得、 <xref:System.Web.UI.WebControls.Parameter> オブジェクト内の場所を <xref:System.Web.UI.WebControls.ParameterCollection> コレクションです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Parameter this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Parameter Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ParameterCollection.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="P:System.Web.UI.WebControls.Parameter.Name" /> の <see cref="T:System.Web.UI.WebControls.Parameter" /> をコレクションから取得します。</param>
        <summary>取得または設定、 <see cref="T:System.Web.UI.WebControls.Parameter" /> 、コレクション内に指定した名前を持つオブジェクト。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Parameter" /> 、コレクション内に指定した名前にします。 場合、 <see cref="T:System.Web.UI.WebControls.Parameter" /> インデクサーの取得、コレクションに格納されていない <see langword="null" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このインデクサーを使用して、取得、 <xref:System.Web.UI.WebControls.Parameter> オブジェクト名を使用して、 <xref:System.Web.UI.WebControls.ParameterCollection> 配列表記を使用して、コレクションです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> メソッドおよび <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> を削除するためのインデクサー、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトから、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションです。 この例ではいくつか <xref:System.Web.UI.WebControls.QueryStringParameter> オブジェクトに追加されます、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクション、1 つ <xref:System.Web.UI.WebControls.QueryStringParameter> は、コレクションから削除され、ページが読み込まれるときに、コレクションの順序が出力されます。  
  
 [!code-csharp[System.Web.UI.WebControls.QueryStringParameter\_6\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.QueryStringParameter\_6\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
        <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
        <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
        <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected override void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションの内容を消去した後に、追加のカスタム処理を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection.OnClearComplete%2A> 後に追加の処理を実行するメソッドは、 <xref:System.Web.UI.StateManagedCollection.Clear%2A> メソッドが完了するとします。 呼び出す、 <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method allows implementers to define processes that must be performed after deleting all the elements from the underlying collection. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.  
  
 <see cref="M:System.Web.UI.StateManagedCollection.OnClear" /> is invoked before the standard <see langword="Clear" /> behavior, whereas <see cref="M:System.Web.UI.WebControls.ParameterCollection.OnClearComplete" /> is invoked after the standard <see langword="Clear" /> behavior.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected override void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsert(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">コレクション内のインデックスを <see cref="T:System.Web.UI.WebControls.Parameter" /> に挿入されます。</param>
        <param name="value">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> に挿入される、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />です。</param>
        <summary>発生する前に、 <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" /> メソッドが呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection.OnInsert%2A> メソッドを呼び出して前に追加の処理を実行する、 <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method allows implementers to define processes that must be performed before inserting an element into the underlying collection. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected override void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">コレクション内のインデックスを <see cref="T:System.Web.UI.WebControls.Parameter" /> に挿入されました。</param>
        <param name="value">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> が挿入された、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />です。</param>
        <summary>以降、 <see cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" /> メソッドが完了しました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection.OnInsertComplete%2A> 後に追加の処理を実行するメソッドは、 <xref:System.Web.UI.WebControls.ParameterCollection.Insert%2A> メソッドが完了するとします。 呼び出す、 <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method allows implementers to define processes that must be performed after inserting an element into the underlying collection. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Insert(System.Int32,System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="OnParametersChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParametersChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParametersChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected override void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">コレクション内のインデックスを <see cref="T:System.Web.UI.WebControls.Parameter" /> から削除されました。</param>
        <param name="value">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> から削除された、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" />です。</param>
        <summary>以降、 <see cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" /> メソッドが完了しました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection.OnRemoveComplete%2A> 後に追加の処理を実行するメソッドは、 <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> メソッドが完了するとします。 呼び出す、 <xref:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>This method allows implementers to define processes that must be performed after removing an element from the underlying collection. By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected override void OnValidate (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnValidate(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.OnValidate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <see langword="object" /> 検証中です。</param>
        <summary>値を検証するときは、追加のカスタム処理を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection.OnValidate%2A> メソッドは、オブジェクトを指定するかどうかを判断、 `o` パラメーターは、 <xref:System.Web.UI.WebControls.Parameter> インスタンス。 スローされていない場合、 <xref:System.ArgumentException> 例外です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">オブジェクトは、のインスタンスではない、 <see cref="T:System.Web.UI.WebControls.Parameter" /> クラスまたはその派生クラスのいずれかです。</exception>
        <exception cref="T:System.ArgumentNullException">オブジェクトが <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ParametersChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParametersChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParametersChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生するは以上 <see cref="T:System.Web.UI.WebControls.Parameter" /> 状態を変更するコレクションに含まれるオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションがデータ ソース コントロールが含まれている、 <xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged> イベント発生のデータ ソース コントロールの `DataSourceChanged` を再バインドするデータ バインド コントロールを引き起こすイベントです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.Parameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.Parameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.Remove(System.Web.UI.WebControls.Parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> から削除する <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</param>
        <summary>指定された削除 <see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトから、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、指定された削除 <xref:System.Web.UI.WebControls.Parameter> オブジェクトから、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.Remove%2A> メソッドおよび <xref:System.Web.UI.WebControls.ParameterCollection.Item%2A> を削除するためのインデクサー、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトから、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクションです。 この例ではいくつか <xref:System.Web.UI.WebControls.QueryStringParameter> にオブジェクトを追加、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクション、1 つ <xref:System.Web.UI.WebControls.QueryStringParameter> オブジェクトは、コレクションから削除され、ページが読み込まれるときに、コレクションの順序を出力します。  
  
 [!code-csharp[System.Web.UI.WebControls.QueryStringParameter\_6\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/CS/qsp6cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.QueryStringParameter\_6\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_6/VB/qsp6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">インデックス、 <see cref="T:System.Web.UI.WebControls.Parameter" /> を削除します。</param>
        <summary>削除、 <see cref="T:System.Web.UI.WebControls.Parameter" /> から指定したインデックス位置にオブジェクト、 <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> を削除するメソッド、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトをコレクションから指定したインデックス位置。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ParameterCollection.RemoveAt%2A> を削除するメソッド、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトから、 <xref:System.Web.UI.WebControls.ParameterCollection> コレクション内の特定の位置。 この例ではいくつか <xref:System.Web.UI.WebControls.QueryStringParameter> にオブジェクトを追加、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクション、1 つ <xref:System.Web.UI.WebControls.QueryStringParameter> オブジェクトは、コレクションから削除され、ページが読み込まれるときに、コレクションの順序を出力します。  
  
 [!code-csharp[System.Web.UI.WebControls.QueryStringParameter\_5\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/CS/qsp5cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.QueryStringParameter\_5\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.QueryStringParameter_5/VB/qsp5vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.Add(System.Web.UI.WebControls.Parameter)" />
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected override void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Web.UI.WebControls.Parameter" /> が最新の読み込み以降に変更されたかのビュー ステートを保存します。</param>
        <summary>指定したマーク <see cref="T:System.Web.UI.WebControls.Parameter" /> が最新の読み込み以降に変更されたオブジェクトまたは状態の表示から保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A> メソッドは、マークを付けるために使用されるヘルパー関数を <xref:System.Web.UI.WebControls.Parameter> が最新の読み込み以降に変更されたオブジェクトまたは状態の表示から保存します。  
  
> [!NOTE]
>  このメソッドは、コントロールの開発者によってのみ使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateValues">
      <MemberSignature Language="C#" Value="public void UpdateValues (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateValues(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ParameterCollection.UpdateValues(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">現在 <see cref="T:System.Web.HttpRequest" /> を <see cref="T:System.Web.UI.WebControls.Parameter" /> にバインドします。</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> 各パラメーターに渡されるインスタンス <see cref="M:System.Web.UI.WebControls.ControlParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> メソッドです。</param>
        <summary>反復処理、 <see cref="T:System.Web.UI.WebControls.Parameter" /> コレクション、および呼び出しに含まれるオブジェクト、 <see langword="Evaluate" /> メソッドを 1 つずつです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `control` がパラメーターを使用 <xref:System.Web.UI.WebControls.Parameter> オブジェクトを取得するコレクションに含まれる、 <xref:System.Web.UI.Page> と現在 <xref:System.Web.HttpRequest> オブジェクトを <xref:System.Web.UI.WebControls.Parameter> をオブジェクトにバインドします。  
  
 現在の値の場合は、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトがビュー ステートにキャッシュされている値と異なる、 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ParameterCollection.GetValues(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトをコレクションに追加します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.WebControls.Parameter" /> コレクション内のオブジェクト。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>