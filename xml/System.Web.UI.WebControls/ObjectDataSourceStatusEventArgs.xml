<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データを提供、 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />, 、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, 、<see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />, 、および <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> のイベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> でクラスを使用する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, 、および <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 出力パラメーター、戻り値、およびによって呼び出されるメソッドによってスローされる例外へのアクセスを提供するメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。 これらのログ アクセスは、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, 、および <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> プロパティそれぞれします。 処理するデリゲートを追加することで、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, 、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, 、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, 、または <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベントでは、このデータを確認し、必要なすべての投稿の追加処理を実行することができます。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、ライフ サイクルのさまざまなタイミングで、基になるビジネス オブジェクトを使用するために利用できる多数のイベントを公開します。 次の表は、イベントと関連付けられた <xref:System.EventArgs> クラスとイベント ハンドラー デリゲート。  
  
|イベント|EventArgs|EventHandler|  
|----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>。<br /><br /> ビジネス オブジェクトのインスタンスが作成される直前に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>。<br /><br /> ビジネス オブジェクトのインスタンスが作成された直後後に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>。<br /><br /> データが取得される前に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>、および <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>。<br /><br /> Insert、update、または削除操作を実行する前に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>。<br /><br /> データが取得された後に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>、および <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>。<br /><br /> Insert、update、または削除操作が完了した後に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>。<br /><br /> ビジネス オブジェクトが破棄される前に発生します。|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。 2 番目のコード例では、最初のコード例を使用する中間層ビジネス オブジェクトの例を提供します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> で指定されたメソッドを使用してアクションを実行、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションです。 このコード例では、1 つのパラメーターがで指定された、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 従業員 ID に対応するコレクション これは、ために、ID が含まれています、 <xref:System.Windows.Forms.DataGridView.Columns%2A> コレクションとして、 <xref:System.Web.UI.WebControls.BoundField> オブジェクトを文字列として渡されます、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。 明示的に追加することで、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> 使用して、コレクション、 <xref:System.Web.UI.WebControls.Parameter.Type%2A> プロパティに設定、 <xref:System.TypeCode.Int32> の値がフィルターによって適切、 <xref:System.Web.UI.WebControls.ObjectDataSource> 文字列ではなく、整数としてメソッドにします。  
  
 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 前に、イベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> アクションを実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出されます、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 操作が完了したら、発生した例外を処理します。`NorthwindEmployeeDeleted` デリゲートを使用しているビジネス オブジェクトによってスローされる可能性のある例外にアクセスする、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> オブジェクトです。 この例では場合、 `NorthwindDataException` がスローされると、このデリゲートによって処理されます。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 次のコード例では、前のコード例を使用する中間層ビジネス オブジェクトの例を提供します。 次の一覧には、コード例で定義されている 2 つの主要なクラスについて説明します。  
  
-   `EmployeeLogic` クラスは状態を維持しないと、ビジネス ロジックをカプセル化するクラス。  
  
-   `NorthwindEmployee` クラスは、モデル クラスを読み込んで、データ層からデータを保持するために必要な基本的な機能が含まれています。  
  
 さらに、 `NorthwindDataException` クラスは、便宜上指定します。  
  
 この例のクラスのセットは、Microsoft SQL Server と Microsoft Access で使用可能であるデータベースの例は、Northwind Traders データベースを使用します。 完全な実施例についてはこのコードをライブラリとしてコンパイルし、ASP ページからこれらのクラスを使用してください。 前の例で提供される ASP ページはこのクラス ライブラリを使用するように構成します。`UpdateEmployeeInfo` メソッドは完全に実装されていませんはないデータを挿入する Northwind Traders データベースにこの例を試すときようにします。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">完了したデータベースの操作の戻り値を表すオブジェクト。</param>
        <param name="outputParameters">
          <see cref="T:System.Collections.IDictionary" /> パラメーター オブジェクトの名前\/値ペアのです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> クラスの指定された出力パラメーターを使用し、値を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `returnValue` パラメーターは、ビジネス オブジェクト データ メソッドの呼び出しによって返される任意のオブジェクトを指定できます。`outputParameters` パラメーターは、 <xref:System.Collections.IDictionary> メソッドのシグネチャと一致し、参照によって渡される名前\/値ペアのコレクション。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">完了したデータベースの操作の戻り値を表すオブジェクト。</param>
        <param name="outputParameters">
          <see cref="T:System.Collections.IDictionary" /> パラメーター オブジェクトの名前\/値ペアのです。</param>
        <param name="exception">
          <see cref="T:System.Exception" /> メソッドの呼び出し中にスローされる内部例外をラップします。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> クラスの指定された出力パラメーターを使用して、値、および例外を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `returnValue` パラメーターは、ビジネス オブジェクト データ メソッドの呼び出しによって返される任意のオブジェクトを指定できます。`outputParameters` パラメーターは、 <xref:System.Collections.IDictionary> メソッドのシグネチャと一致し、参照によって渡される名前\/値ペアのコレクション。`exception` パラメーターは、 <xref:System.Exception> 例外によって呼び出されるメソッドによってスローされる例外をラップする、 <xref:System.Web.UI.WebControls.ObjectDataSource> データ操作中に制御します。 によって例外が処理されない場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, 、または <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> メソッドによってスローされます、 <xref:System.Web.UI.WebControls.ObjectDataSource> データ操作から返った後を制御します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータの操作の影響を受ける行の数を設定します。</summary>
        <value>データ操作によって影響を受けた行の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 予想される行数が影響を受けたことを確認しています。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>によって呼び出されるメソッドによってスローされる例外のラッパーを取得、 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> データ操作中に制御します。</summary>
        <value>
          <see cref="T:System.Exception" /> でビジネス オブジェクトによってスローされた例外をラップする、 <see cref="P:System.Exception.InnerException" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Exception> 例外は、ビジネス オブジェクト データのメソッドによってスローされる実際の例外を表しません。 使用することができます、 <xref:System.Exception.InnerException%2A> 、スローされた例外にアクセスするプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> で指定されたメソッドを使用してアクションを実行、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションです。  
  
 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> の前にイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> アクションを実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 、例外処理を実行するアクションが完了します。 この例では場合、 `NorthwindDataException` がスローされると、によって処理される、 `NorthwindEmployeeDeleted` を委任します。  
  
 実装を確認する、 `EmployeeLogic` このコード例を使用して、中間層ビジネス オブジェクトは、クラスの概要を参照してください。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはビジネス オブジェクトによってスローされた例外が処理されたかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ビジネス オブジェクトによってスローされる例外の処理が行われしてがスローされない場合、 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビジネス オブジェクト、例外をスローした場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> にプロパティが設定されている `false` で例外をラップし、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> プロパティです。 使用する場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> オブジェクトを確認すること、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> プロパティと、例外のハンドル。 例外を処理する場合は、設定、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> プロパティを `true` または <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは例外をスローします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> で指定されたメソッドを使用してアクションを実行、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> コレクションです。 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> 前に、イベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> アクションを実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出されます、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 操作が完了したら、発生した例外を処理します。 この例では場合、 `NorthwindDataException` がスローされると、によって処理される、 `NorthwindEmployeeDeleted` を委任します。  
  
 実装を確認する、 `EmployeeLogic` このコード例を使用して、中間層ビジネス オブジェクトは、クラスの概要を参照してください。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビジネス オブジェクト メソッドのパラメーターとその値を含むコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Collections.IDictionary" /> ビジネス オブジェクト メソッドのパラメーターとその対応する値を表す名前\/値ペア。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 参照によって、ビジネス オブジェクトのメソッドに渡されるパラメーターは、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> コレクションです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトとして存在する場合は、ビジネス オブジェクトのメソッドによって返される戻り値を取得します。</summary>
        <value>ビジネス オブジェクトのメソッドによって返される戻り値を表すオブジェクトそれ以外の場合、 <see langword="null" />, 、ビジネス オブジェクトのメソッドは値を返さない場合です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> プロパティで設定されて、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> コンス トラクターです。 値は、リフレクションを使用して呼び出されるビジネス オブジェクト メソッド呼び出しの戻り値に設定されます。 ビジネスのメソッドは値を返さない場合 \(ビジネス オブジェクトのメソッドが返す場合など `void`\)、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> プロパティの評価に `null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>