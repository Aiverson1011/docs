<Type Name="CreateUserWizard" FullName="System.Web.UI.WebControls.CreateUserWizard">
  <TypeSignature Language="C#" Value="public class CreateUserWizard : System.Web.UI.WebControls.Wizard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CreateUserWizard extends System.Web.UI.WebControls.Wizard" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CreateUserWizard" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Wizard</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("CreatedUser")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.CreateUserWizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CreateUserWizard runat="server"&gt; &lt;WizardSteps&gt; &lt;asp:CreateUserWizardStep runat="server"/&gt; &lt;asp:CompleteWizardStep runat="server"/&gt; &lt;/WizardSteps&gt; &lt;/{0}:CreateUserWizard&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>新しい Web サイトのユーザー アカウントを作成するためのユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 In this topic:  
  
-   [Introduction](#Introduction)  
  
-   [Creating a User](#creating_a_user)  
  
-   [Styles and Templates](#styles_and_templates)  
  
-   [Validation Grouping](#validation_grouping)  
  
-   [Formatting Using Layout Templates](#formatting_using_layout_templates)  
  
-   [Accessibility](#Accessibility)  
  
-   [Declarative Syntax](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## Introduction  
 The <xref:System.Web.UI.WebControls.CreateUserWizard> control provides the user interface for the <xref:System.Web.Security.MembershipProvider> object that communicates with your Web site's user data store to create new user accounts in the data store. The <xref:System.Web.UI.WebControls.CreateUserWizard> relies on the <xref:System.Web.Security.MembershipProvider> to create the user and disable them if necessary.  
  
> [!NOTE]
>  If you are not familiar with ASP.NET login controls, you might find it helpful to read [ASP.NET Login Controls Overview](http://msdn.microsoft.com/ja-jp/ac032230-6469-4b03-b68d-03ef2643a24d) before continuing. For a list of other topics related to login controls and membership, see [Managing Users By Using Membership](http://msdn.microsoft.com/ja-jp/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 By default, the <xref:System.Web.UI.WebControls.CreateUserWizard> control will accept a user name and password from the Web site visitor. Based on the requirements of the site's <xref:System.Web.Security.MembershipProvider> object, the <xref:System.Web.UI.WebControls.CreateUserWizard> control will optionally accept an e\-mail address, represented by the <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> property, and a password recovery confirmation question and answer, represented by <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A>. For a table showing all required and optional controls for <xref:System.Web.UI.WebControls.CreateUserWizard>, see <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A>.  
  
> [!IMPORTANT]
>  If <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> is set to **languageKeyword tag is not supported!!!!**  
>  and the <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> property is set in the application's Web.config file, you could potentially generate a password that does not pass the regular expression strength test. In this case, creating a user raises an error that indicates an invalid password.  
  
<a name="creating_a_user"></a>   
## Creating a User  
 When a user is created with the <xref:System.Web.UI.WebControls.CreateUserWizard>, the control interacts with the current <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> to accomplish the following tasks in order.  
  
1.  Create a password if <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> is set to **languageKeyword tag is not supported!!!!**  
    .  
  
2.  Create the user in the data store that the <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> represents.  
  
3.  Disable the user in the store if the <xref:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser%2A> property is set to **languageKeyword tag is not supported!!!!**  
  
 You can extend the <xref:System.Web.UI.WebControls.CreateUserWizard> control to accept additional information by adding additional fields, or by adding additional steps before or after the provided templates in the <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> properties.  
  
> [!NOTE]
>  The <xref:System.Web.UI.WebControls.CreateUserWizardStep> step is the first step within the <xref:System.Web.UI.WebControls.CreateUserWizard> control, and is a required step. By default, the <xref:System.Web.UI.WebControls.CreateUserWizardStep.AllowReturn%2A> property is set to **languageKeyword tag is not supported!!!!**  
>  to keep the user from returning to the <xref:System.Web.UI.WebControls.CreateUserWizardStep> step and accidentally attempting to create another user account with the same credentials. If <xref:System.Web.UI.Control.EnableViewState%2A> is set to **languageKeyword tag is not supported!!!!**  
> , the <xref:System.Web.UI.WebControls.CreateUserWizardStep.AllowReturn%2A> property is not maintained in view state and you must include logic in your application to maintain the <xref:System.Web.UI.WebControls.CreateUserWizardStep.AllowReturn%2A> value.  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard> control properties represented by text boxes, such as <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A>, are accessible during all phases of the page life cycle. The control will pick up any changes made by the end user by means of the <xref:System.Web.UI.WebControls.TextBox.TextChanged> event raised by the text boxes.  
  
 The <xref:System.Web.UI.WebControls.CreateUserWizard> control can optionally send e\-mail messages to new users if you have configured an SMTP mail server to send e\-mail. For more information, see the <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> property.  
  
> [!NOTE]
>  The <xref:System.Web.UI.WebControls.CreateUserWizard> control uses Internet e\-mail services to send login information to users. There are inherent security risks with sending passwords in e\-mail. You should determine whether these security risks are acceptable to your site.  
  
<a name="styles_and_templates"></a>   
## Styles and Templates  
 When the <xref:System.Web.UI.WebControls.CreateUserWizard> control is not customized with templates, the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property of the <xref:System.Web.UI.WebControls.CreateUserWizard> control applies to the first text box in the control and the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property, which is applied to all text boxes of the control. If the <xref:System.Web.UI.WebControls.CreateUserWizard> control is customized with templates, then the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property and the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property are ignored. In this case, directly set the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property and the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property of each template child control.  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard> control properties represented by text boxes, such as <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> and <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A>, are accessible during all phases of the page life cycle. The control will pick up any changes made by the end user by means of the <xref:System.Web.UI.WebControls.TextBox.TextChanged> event raised by the text boxes.  
  
> [!NOTE]
>  Setting the <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A>, <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A>, or <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> property recreates the child controls of the <xref:System.Web.UI.WebControls.CreateUserWizard> control, and their control state is lost in the process. To avoid this situation, explicitly maintain the control state of the <xref:System.Web.UI.WebControls.CreateUserWizard> control's child controls, or avoid putting controls inside of templates.  
  
 The following table lists the <xref:System.Web.UI.WebControls.CreateUserWizard> control style properties and explains which UI element each style property affects. For a list of which properties each style applies to, see the documentation for the individual style properties.  
  
|Style property|UI element affected|  
|--------------------|-------------------------|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle%2A>|**Continue** button.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle%2A>|**Create User** button.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A>|Links to other pages.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A>|Instructional text on the page that tells users how to use the control.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A>|Labels for all input fields, such as text boxes.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A>|Text entry input fields.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A>|Title text for each view.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A>|Text displayed to the user when the password recovery or reset attempt is successful.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A>|Error messages when the membership provider fails to create a new user account.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A>|The text that describes password requirements.|  
|<xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A>|Error messages associated with validation.|  
  
<a name="validation_grouping"></a>   
## Validation Grouping  
 The <xref:System.Web.UI.WebControls.CreateUserWizard> control uses a validation group so that other fields on the same page as the <xref:System.Web.UI.WebControls.CreateUserWizard> control can be validated separately. By default, the <xref:System.Web.UI.Control.ID%2A> property of the <xref:System.Web.UI.WebControls.CreateUserWizard> control is used as the name of the validation group. For example, a <xref:System.Web.UI.WebControls.CreateUserWizard> control with the ID "CreateUserWizard1" will use a validation group name of "CreateUserWizard1". If you want to set the validation group that the <xref:System.Web.UI.WebControls.CreateUserWizard> control is part of, you must template the control and change the validation group name.  
  
 Note that the <xref:System.Web.UI.WebControls.CreateUserWizard> class inherits from the <xref:System.Web.UI.WebControls.Wizard> class, which does not support special Microsoft Internet Explorer rendering for non\-standard or quirks mode. The <xref:System.Web.UI.WebControls.CreateUserWizard> does not attempt to optimize rendering for non\-standard Internet Explorer mode. To get the best Internet Explorer rendering using the <xref:System.Web.UI.WebControls.CreateUserWizard> control, use the XHTML doc type, which is added by default in Visual Web Developer and Visual Studio.  
  
<a name="formatting_using_layout_templates"></a>   
## Formatting Using Layout Templates  
 The <xref:System.Web.UI.WebControls.CreateUserWizard> control lets you specify the layout of the control without requiring you to use an HTML **languageKeyword tag is not supported!!!!**  
element. Instead, you can use a **languageKeyword tag is not supported!!!!**  
 element to specify the layout. In the layout template, you create placeholder controls to indicate where items should be dynamically inserted into the control. \(This is similar to how the template model for the <xref:System.Web.UI.WebControls.ListView> control works.\) For more information, see the <xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A?displayProperty=fullName> property.  
  
<a name="Accessibility"></a>   
## Accessibility  
 For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## Declarative Syntax  
  
```  
<asp:CreateUserWizard  
    AccessKey="string"  
    ActiveStepIndex="integer"  
    Answer="string"  
    AnswerLabelText="string"  
    AnswerRequiredErrorMessage="string"  
    AutoGeneratePassword="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CancelButtonImageUrl="uri"  
    CancelButtonText="string"  
    CancelButtonType="Button|Image|Link"  
    CancelDestinationPageUrl="uri"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CompleteSuccessText="string"  
    ConfirmPasswordCompareErrorMessage="string"  
    ConfirmPasswordLabelText="string"  
    ConfirmPasswordRequiredErrorMessage="string"  
    ContinueButtonImageUrl="uri"  
    ContinueButtonText="string"  
    ContinueButtonType="Button|Image|Link"  
    ContinueDestinationPageUrl="uri"  
    CreateUserButtonImageUrl="uri"  
    CreateUserButtonText="string"  
    CreateUserButtonType="Button|Image|Link"  
    CssClass="string"  
    DisableCreatedUser="True|False"  
    DisplayCancelButton="True|False"  
    DisplaySideBar="True|False"  
    DuplicateEmailErrorMessage="string"  
    DuplicateUserNameErrorMessage="string"  
    EditProfileIconUrl="uri"  
    EditProfileText="string"  
    EditProfileUrl="uri"  
    Email="string"  
    EmailLabelText="string"  
    EmailRegularExpression="string"  
    EmailRegularExpressionErrorMessage="string"  
    EmailRequiredErrorMessage="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FinishCompleteButtonImageUrl="uri"  
    FinishCompleteButtonText="string"  
    FinishCompleteButtonType="Button|Image|Link"  
    FinishDestinationPageUrl="uri"  
    FinishPreviousButtonImageUrl="uri"  
    FinishPreviousButtonText="string"  
    FinishPreviousButtonType="Button|Image|Link"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    HeaderText="string"  
    Height="size"  
    HelpPageIconUrl="uri"  
    HelpPageText="string"  
    HelpPageUrl="uri"  
    ID="string"  
    InstructionText="string"  
    InvalidAnswerErrorMessage="string"  
    InvalidEmailErrorMessage="string"  
    InvalidPasswordErrorMessage="string"  
    InvalidQuestionErrorMessage="string"  
    LoginCreatedUser="True|False"  
    MailDefinition-BodyFileName="uri"  
    MailDefinition-CC="string"  
    MailDefinition-From="string"  
    MailDefinition-IsBodyHtml="True|False"  
    MailDefinition-Priority="Normal|Low|High"  
    MailDefinition-Subject="string"  
    MembershipProvider="string"  
    OnActiveStepChanged="ActiveStepChanged event handler"  
    OnCancelButtonClick="CancelButtonClick event handler"  
    OnContinueButtonClick="ContinueButtonClick event handler"  
    OnCreatedUser="CreatedUser event handler"  
    OnCreateUserError="CreateUserError event handler"  
    OnCreatingUser="CreatingUser event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnFinishButtonClick="FinishButtonClick event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnNextButtonClick="NextButtonClick event handler"  
    OnPreRender="PreRender event handler"  
    OnPreviousButtonClick="PreviousButtonClick event handler"  
    OnSendingMail="SendingMail event handler"  
    OnSendMailError="SendMailError event handler"  
    OnSideBarButtonClick="SideBarButtonClick event handler"  
    OnUnload="Unload event handler"  
    PasswordHintText="string"  
    PasswordLabelText="string"  
    PasswordRegularExpression="string"  
    PasswordRegularExpressionErrorMessage="string"  
    PasswordRequiredErrorMessage="string"  
    Question="string"  
    QuestionLabelText="string"  
    QuestionRequiredErrorMessage="string"  
    RequireEmail="True|False"  
    runat="server"  
    SkinID="string"  
    SkipLinkText="string"  
    StartNextButtonImageUrl="uri"  
    StartNextButtonText="string"  
    StartNextButtonType="Button|Image|Link"  
    StepNextButtonImageUrl="uri"  
    StepNextButtonText="string"  
    StepNextButtonType="Button|Image|Link"  
    StepPreviousButtonImageUrl="uri"  
    StepPreviousButtonText="string"  
    StepPreviousButtonType="Button|Image|Link"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UnknownErrorMessage="string"  
    UserName="string"  
    UserNameLabelText="string"  
    UserNameRequiredErrorMessage="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CancelButtonStyle/>  
        <CompleteSuccessTextStyle/>  
        <ContinueButtonStyle/>  
        <CreateUserButtonStyle/>  
        <ErrorMessageStyle/>  
        <FinishCompleteButtonStyle/>  
        <FinishNavigationTemplate>  
            <!-- child controls -->  
        </FinishNavigationTemplate>  
        <FinishPreviousButtonStyle/>  
        <HeaderStyle/>  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <HyperLinkStyle/>  
        <InstructionTextStyle/>  
        <LabelStyle/>  
        <MailDefinition  
            BodyFileName="uri"  
            CC="string"  
            From="string"  
            IsBodyHtml="True|False"  
            Priority="Normal|Low|High"  
            Subject="string"  
>  
                <EmbeddedObjects>  
                        <asp:EmbeddedMailObject  
                            Name="string"  
                            Path="uri"  
                        />  
                </EmbeddedObjects>  
        </MailDefinition>  
        <NavigationButtonStyle/>  
        <NavigationStyle/>  
        <PasswordHintStyle/>  
        <SideBarButtonStyle/>  
        <SideBarStyle/>  
        <SideBarTemplate>  
            <!-- child controls -->  
        </SideBarTemplate>  
        <StartNavigationTemplate>  
            <!-- child controls -->  
        </StartNavigationTemplate>  
        <StartNextButtonStyle/>  
        <StepNavigationTemplate>  
            <!-- child controls -->  
        </StepNavigationTemplate>  
        <StepNextButtonStyle/>  
        <StepPreviousButtonStyle/>  
        <StepStyle/>  
        <TextBoxStyle/>  
        <TitleTextStyle/>  
        <ValidatorTextStyle/>  
        <WizardSteps>  
                <asp:TemplatedWizardStep  
                    AllowReturn="True|False"  
                    ContentTemplateContainer="string"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
                </asp:TemplatedWizardStep>  
                <asp:WizardStep  
                    AllowReturn="True|False"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
                />  
        </WizardSteps>  
</asp:CreateUserWizard>  
```  
  
   
  
## 例  
 The first code example shows how to use the <xref:System.Web.UI.WebControls.CreateUserWizard> control in its basic form. This page will create a new Web site user account with the site's default <xref:System.Web.Security.MembershipProvider> object.  
  
 [!code-csharp[CreateUserWizardBasic\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardBasic/CS/createuserwizardbasiccs.aspx#1)]
 [!code-vb[CreateUserWizardBasic\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardBasic/VB/createuserwizardbasicvb.aspx#1)]  
  
 The second code example shows how to use the <xref:System.Web.UI.WebControls.CreateUserWizard> control with the default templates.  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[CreateUserWizardFullTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardFullTemplate/CS/createuserwizardfulltemplatecs.aspx#1)]
 [!code-vb[CreateUserWizardFullTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardFullTemplate/VB/createuserwizardfulltemplatevb.aspx#1)]  
  
 The third code example adds an additional step to the <xref:System.Web.UI.WebControls.CreateUserWizard> control and uses the <xref:System.Web.UI.WebControls.CreateUserWizard.CreatedUser> event to store the user's first and last name in personalization properties. The code example requires the following entries in the Web.config file.  
  
 `<configuration>`  
  
 `<system.web>`  
  
 `<profile>`  
  
 `<properties>`  
  
 `<add name="userName" />`  
  
 `</properties>`  
  
 `</profile>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[CreateUserWizardCreatedUser\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardCreatedUser/CS/createuserwizardcreatedusercs.aspx#1)]
 [!code-vb[CreateUserWizardCreatedUser\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardCreatedUser/VB/createuserwizardcreateduservb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CreateUserWizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveStepIndex">
      <MemberSignature Language="C#" Value="public override int ActiveStepIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveStepIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ActiveStepIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーに現在表示されている手順を設定します。</summary>
        <value>ユーザーに現在表示されている手順のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ActiveStepIndex%2A> プロパティに現在表示されている手順の 0 から始まるインデックスを提供する、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 プログラムで設定したり、 <xref:System.Web.UI.WebControls.CreateUserWizard.ActiveStepIndex%2A> プロパティを動的にステップをユーザーに表示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Answer">
      <MemberSignature Language="C#" Value="public virtual string Answer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Answer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.Answer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または回復パスワードの確認の質問に、エンドユーザーの応答を設定します。</summary>
        <value>パスワードの回復の確認の質問に対する回答をエンドユーザーの。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定したメンバーシップ プロバイダー、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティは実行時に、質問と回答のテキスト ボックスが表示されるかどうかを決定します。  
  
 指定したメンバーシップ プロバイダーによって回答が必要な場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> にし、プロパティ、応答のテキスト ボックスが表示されます、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 各テキスト ボックスに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールが、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> オブジェクトが関連付けられています。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、電子メールの変更、 <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> にユーザーのパスワードの回復の確認応答を新しいユーザーに送信されるメッセージに含めるイベントです。  
  
 [!code-csharp[CreateUserWizardOnSendingMail\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/CS/CustomCreateUserWizard.cs#2)]
 [!code-vb[CreateUserWizardOnSendingMail\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/VB/CustomCreateUserWizard.vb#2)]  
  
 次のコード例を使用した Web ページを示しています、 `CustomCreateUserWizard`です。  
  
 [!code-csharp[CreateUserWizardOnSendingMail\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/CS/createuserwizardonsendingmailcs.aspx#1)]
 [!code-vb[CreateUserWizardOnSendingMail\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/VB/createuserwizardonsendingmailvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Question" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.AnswerLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.AnswerRequiredErrorMessage" />
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
      </Docs>
    </Member>
    <Member MemberName="AnswerLabelText">
      <MemberSignature Language="C#" Value="public virtual string AnswerLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnswerLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.AnswerLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの確認応答のテキスト ボックスを識別するラベルのテキストを設定します。</summary>
        <value>パスワードの確認応答のテキスト ボックスを識別するラベルのテキスト。 既定値は"秘密の答え:"です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Answer" />
      </Docs>
    </Member>
    <Member MemberName="AnswerRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string AnswerRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnswerRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.AnswerRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがパスワードの確認の質問に答えを入力していないときに表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーがパスワードの確認の質問に答えを入力しなかった場合に表示されるエラー メッセージ。 既定値は「秘密の答えが必要」です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Answer" />
      </Docs>
    </Member>
    <Member MemberName="AutoGeneratePassword">
      <MemberSignature Language="C#" Value="public virtual bool AutoGeneratePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGeneratePassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいユーザー アカウントのパスワードを自動的に生成するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 新しいユーザー アカウントのパスワードを自動的に生成するにはそれ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<see cref="T:System.Web.UI.ThemeableAttribute" /> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> プロパティでは、それらのパスワードを入力しなくてもユーザー アカウントを作成することです。 たとえば、管理者は、新しいユーザーのアカウントを作成し、パスワードをユーザーに付与する場合は、この機能は役立ちます。  
  
> [!IMPORTANT]
>  使用してユーザーを作成することはできません、 <xref:System.Web.UI.WebControls.CreateUserWizard> 場合 <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> に設定されている `true` と <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティは、アプリケーションの Web.config で設定します。 無効なパスワードを示すエラー メッセージが発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.CompleteWizardStep CompleteStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.CompleteWizardStep CompleteStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CompleteStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CompleteWizardStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最後のユーザー アカウントの作成手順への参照を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.CompleteWizardStep" /> を最後のユーザー アカウントの作成手順を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> プロパティは、ユーザー アカウントを作成するための最後の手順を定義します。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.CompleteWizardStep> オブジェクトを <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompleteWizardStep" />
      </Docs>
    </Member>
    <Member MemberName="CompleteSuccessText">
      <MemberSignature Language="C#" Value="public virtual string CompleteSuccessText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompleteSuccessText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのユーザー アカウントが正常に作成されるときに表示されるテキストを設定します。</summary>
        <value>Web サイトのユーザー アカウントが正常に作成されるときに表示されるテキスト。 既定値は「自分のアカウントが正常に作成されました」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、<xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessText%2A>ユーザー アカウントが正常に作成されるときに表示されるメッセージを変更するプロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、<xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser%2A>変更するメソッドを<xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessText%2A>プロパティが表示されるテキストにユーザー名を含めます。  
  
 [!code-csharp[CreateUserWizardCompleteSuccessText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardCompleteSuccessText/CS/createuserwizardcompletesuccesstextcs.aspx#1)]
 [!code-vb[CreateUserWizardCompleteSuccessText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardCompleteSuccessText/VB/createuserwizardcompletesuccesstextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteSuccessTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle CompleteSuccessTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle CompleteSuccessTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サイトのユーザー アカウントが正常に作成されるときに表示されるテキストの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> Web サイトのユーザー アカウントが正常に作成されるときに表示されるテキストの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A> Web サイトのユーザー アカウントが正常に作成されるときに表示されるテキストの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.TableItemStyle> クラス \(たとえば、 `CompleteSuccessTextStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CompleteSuccessTextStyle.ForeColor`\)。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A> プロパティ、ユーザーがクリックした後、Web サイトのユーザー アカウントが正常に作成するときに表示されるテキストの外観を定義、 **続行** のボタンでは、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> 手順です。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A> プロパティのプロパティに対応する設定のオーバーライド、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteSuccessTextStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmPassword">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>2 番目に、ユーザーが入力したパスワードを取得します。</summary>
        <value>ユーザーが入力した 2 番目のパスワード。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword%2A> プロパティには、ユーザーが入力した 2 番目のパスワード \(確認パスワード\) が含まれています。 既定では、 <xref:System.Web.UI.WebControls.CompareValidator> のオブジェクトが提供される、 <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A> と <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword%2A> テキスト ボックスの値。 各テキスト ボックスに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールもあります、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 関連付けられています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Password" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordCompareErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordCompareErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordCompareErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPasswordCompareErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがパスワードを 2 つの異なるパスワードを入力および確認パスワード テキスト ボックスに表示されるエラー メッセージを設定します。</summary>
        <value>エラーは、ユーザーがパスワードの 2 種類のパスワードに入ったときを示すメッセージをパスワード テキスト ボックスを確認します。 既定値は「パスワードと確認のパスワードなりません」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Password" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの 2 つ目のテキスト ボックスのラベルのテキストを設定します。</summary>
        <value>パスワードを確認するテキスト ボックスを識別するラベルのテキスト。 既定値は"パスワードの確認入力:"です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがパスワードを確認するテキスト ボックスを空のまま表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーがパスワードを確認するテキスト ボックスを空のまま表示されるエラー メッセージ。 既定値は「パスワードの確認入力が必要」です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword" />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler ContinueButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContinueButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがクリックしたときに発生、 **続行** の最後のユーザー アカウントの作成手順でボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick> イベントが発生したときに、 **続行** のボタンでは、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールがクリックされました。 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick> ときに余分な処理を提供するイベントを **続行** \] ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnContinueButtonClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string ContinueButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ContinueButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、 <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> の値、 **続行** 最後に、ユーザー アカウントを作成するためのボタンをクリックします。<see cref="F:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonCommandName" /> フィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonCommandName> フィールドを表す、 <xref:System.Web.UI.WebControls.Button.CommandName%2A> の値、 **続行** 最後に、ユーザー アカウントを作成するためのボタンをクリックします。  
  
 割り当てがいずれかの機能を引き続き <xref:System.Web.UI.WebControls.Button> 内に含まれるコントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールを <xref:System.Web.UI.WebControls.Button.CommandName%2A> に含まれている文字列をボタンのプロパティ、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonCommandName> フィールドです。  
  
 **続行** ボタンによって表されるユーザー アカウントを作成するための最後の手順のテンプレートに表示されます、 <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> プロパティです。 クリックすると、 **続行** ボタンに格納されている URL にはユーザーをリダイレクトする、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueDestinationPageUrl%2A> プロパティです。 カスタム機能を追加、 **続行** \] ボタン、イベント ハンドラーを作成、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick> イベントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に使用するイメージの URL、 **続行** 最後のユーザー アカウントの作成手順\] ボタンをクリックします。</summary>
        <value>使用するイメージの URL、 **続行** 最後のユーザー アカウントの作成手順\] ボタンをクリックします。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.ButtonType.Image>, を使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **続行** \] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ContinueButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ContinueButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>外観を定義するプロパティのコレクションへの参照を取得、 **続行** \] ボタンをクリックします。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> の外観を定義するプロパティを含む、 **続行** \] ボタンをクリックします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A?displayProperty=fullName> プロパティの外観を決定する、 **続行** ボタンをクリックして、 <xref:System.Web.UI.WebControls.CreateUserWizard> を使用してこれらの設定をオーバーライドできますが、コントロール、  <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle%2A> プロパティです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.Style> オブジェクトが返されます。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `ContinueButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `ContinueButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle%2A> プロパティは、対応する設定を上書き、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonText">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されるテキスト キャプション、 **続行** \] ボタンをクリックします。</summary>
        <value>表示されるテキスト キャプション、 **続行** \] ボタンをクリックします。 既定値は、"Continue"です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonText%2A> プロパティに表示されるテキストを含む、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールの **続行** \] ボタンをクリックします。 値に応じて、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonText%2A> プロパティは、ボタンのテキストとして、画像の代わりとして、またはリンクのテキストとして表示されるテキストとして表示できることです。 次の表に <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType%2A> プロパティの値とそれぞれの影響、 **続行** ボタンのテキスト キャプション。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ContinueButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ContinueButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **続行** \] ボタンをクリックします。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 列挙値のいずれか。 既定値は <see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したボタンの種類が、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContinueDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ContinueDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定をクリックすると、ユーザーに表示されるページの URL、 **続行** 成功ページ\] ボタンをクリックします。</summary>
        <value>インストール先\] ページの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueDestinationPageUrl%2A> プロパティには、サイトへの登録が正常に完了した後、ユーザーに表示される Web ページの URL が含まれています。 設定して、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueDestinationPageUrl%2A> プロパティには、新しく登録されたユーザーに表示される最初のページを制御することができます。  
  
 ときに、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueDestinationPageUrl%2A> プロパティは <xref:System.String.Empty> とユーザーがクリックした、 **続行** \] ボタンが、ページが更新され、フォーム上の任意の値が消去されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueDestinationPageUrl%2A> プロパティにユーザーを登録ページに到達する前に、ユーザーが表示されたページに戻ります。  
  
 [!code-csharp[CreateUserWizardContinueDestinationPageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardContinueDestinationPageUrl/CS/createuserwizardcontinuedestinationpageurlcs.aspx#1)]
 [!code-vb[CreateUserWizardContinueDestinationPageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardContinueDestinationPageUrl/VB/createuserwizardcontinuedestinationpageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>任意の子が含まれているコントロールをポストバックまたは表示のための準備に作成するには、このコントロールに通知する ASP.NET ページ フレームワークによって呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatedUser">
      <MemberSignature Language="C#" Value="public event EventHandler CreatedUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CreatedUser" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CreateUserWizard.CreatedUser" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーが、新しい Web サイトのユーザー アカウントを作成した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CreatedUser> で指定したメンバーシップ プロバイダー後イベントは、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティは、新しい Web サイトのユーザー アカウントを作成します。 場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> プロパティは、 `true`, 、Web サイトの後に、ユーザーのログインに、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreatedUser> イベントです。  
  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreatedUser> イベント、ユーザーのログインに、サイトに最初に前に、個人用設定の値などの Web サイトの値を設定します。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreatedUser> ユーザーを格納するイベントの最初と個人用設定のプロパティの名前。 このコード例では、Web.config ファイルに次のエントリが必要です。  
  
 `<configuration>`  
  
 `<system.web>`  
  
 `<profile>`  
  
 `<properties>`  
  
 `<add name="lastName" />`  
  
 `<add name="firstName" />`  
  
 `<add name="userName" />`  
  
 `</properties>`  
  
 `</profile>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 [!code-csharp[CreateUserWizardCreatedUser\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardCreatedUser/CS/createuserwizardcreatedusercs.aspx#1)]
 [!code-vb[CreateUserWizardCreatedUser\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardCreatedUser/VB/createuserwizardcreateduservb.aspx#1)]  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されるイメージの URL、 **Create User** \] ボタンをクリックします。</summary>
        <value>表示されるイメージの URL、 **Create User** \] ボタンをクリックします。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType%2A> プロパティに設定されて <xref:System.Web.UI.WebControls.ButtonType.Image>, を使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonImageUrl%2A> として表示するイメージを指定するプロパティ、 **Create User** ボタン。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CreateUserButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CreateUserButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>外観を定義するプロパティのコレクションへの参照を取得、 **Create User** \] ボタンをクリックします。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> の外観を定義するプロパティを含む、 **Create User** \] ボタンをクリックします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle%2A> プロパティの外観を定義、 **Create User** ボタンをクリックして、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.Style> オブジェクトが返されます。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `CreateUserButtonStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `CreateUserButtonStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle%2A> プロパティは、対応する設定を上書き、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonText">
      <MemberSignature Language="C#" Value="public virtual string CreateUserButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されるテキスト キャプション、 **Create User** \] ボタンをクリックします。</summary>
        <value>表示されるテキスト キャプション、 **Create User** ボタンをクリックして、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> コントロールです。 既定値は、\[送信\] です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonText%2A> プロパティに表示されるテキストを含む、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールの **Create User** \] ボタンをクリックします。 値に応じて、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonText%2A> プロパティは、ボタンのテキストとして、画像の代わりとして、またはリンクのテキストとして表示されるテキストとして表示できることです。 次の表に <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType%2A> プロパティの値とそれぞれの影響、 **Create User** ボタンのテキスト キャプション。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したボタンの種類が、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CreateUserButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CreateUserButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定として表示されるボタンの種類、 **Create User** \] ボタンをクリックします。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 列挙値のいずれか。 既定値は <see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したボタンの種類が、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserError">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CreateUserErrorEventHandler CreateUserError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CreateUserErrorEventHandler CreateUserError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CreateUserWizard.CreateUserError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CreateUserErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーが指定されたユーザー アカウントを作成できない場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserError> イベントは、サーバー上で指定したメンバーシップ プロバイダー、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティが指定されたユーザー アカウントの作成に失敗します。  
  
 エラー ハンドラーが渡される、 <xref:System.Web.Security.MembershipCreateStatus> メンバーシップ プロバイダーからのエラーの詳細を含むオブジェクト。 可能性のあるエラー条件の一覧は、次を参照してください。 <xref:System.Web.Security.MembershipCreateStatus>します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError(System.Web.UI.WebControls.CreateUserErrorEventArgs)" />
        <altmember cref="T:System.Web.Security.MembershipCreateStatus" />
        <altmember cref="T:System.Web.UI.WebControls.CreateUserErrorEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateUserStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.CreateUserWizardStep CreateUserStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.CreateUserWizardStep CreateUserStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CreateUserWizardStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー アカウントの作成手順のテンプレートへの参照を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" /> ユーザー アカウントの作成手順を表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> プロパティ定義のアカウントの作成手順、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.CreateUserWizardStep> オブジェクトを <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> を返します。  
  
 次の表に、必須およびオプションのコントロールのテンプレート コンテンツを使用する場合にサポートされている、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A>です。  
  
|ID またはコマンド名|コントロールの種類|必須\/オプション|  
|-----------------|---------------|---------------|  
|`UserName`|実装する任意のコントロール <xref:System.Web.UI.IEditableTextControl>, も含め、 <xref:System.Web.UI.WebControls.TextBox>, 、またはカスタムまたはサードパーティ製のコントロールです。|必須|  
|`Password`|実装する任意のコントロール <xref:System.Web.UI.IEditableTextControl>, も含め、 <xref:System.Web.UI.WebControls.TextBox>, 、またはカスタムまたはサードパーティ製のコントロールです。|必要な場合 <xref:System.Web.UI.WebControls.CreateUserWizard.AutoGeneratePassword%2A> に設定されている `false`します。|  
|`Email`|実装する任意のコントロール <xref:System.Web.UI.IEditableTextControl>, も含め、 <xref:System.Web.UI.WebControls.TextBox>, 、またはカスタムまたはサードパーティ製のコントロールです。|必要な場合 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> は `true.`|  
|`ConfirmPassword`|実装する任意のコントロール <xref:System.Web.UI.IEditableTextControl>, も含め、 <xref:System.Web.UI.WebControls.TextBox>, 、またはカスタムまたはサードパーティ製のコントロールです。|要件はありません。|  
|`Question`|実装する任意のコントロール <xref:System.Web.UI.IEditableTextControl>, も含め、 <xref:System.Web.UI.WebControls.TextBox>, 、またはカスタムまたはサードパーティ製のコントロールです。|メンバーシップが必要な場合は省略可能です。|  
|`Answer`|実装する任意のコントロール <xref:System.Web.UI.IEditableTextControl>, も含め、 <xref:System.Web.UI.WebControls.TextBox>, 、またはカスタムまたはサードパーティ製のコントロールです。|メンバーシップが必要な場合は省略可能です。|  
|`ErrorMessage`|実装する任意のコントロール <xref:System.Web.UI.ITextControl>します。|省略可能|  
|`CreateUser`|イベントのバブリングを原因となる任意のコントロール|省略可能|  
|`Cancel`|どれでも可|省略可能|  
  
 場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> にプロパティが設定されている `true` テンプレート コンテンツを使用していると、 <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> 制御が必要な <xref:System.Web.UI.WebControls.CreateUserWizard> 場合、制御が例外をスロー、 <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> コントロールが見つからないか、型が正しくありません。 場合 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> に設定されている `false`, 場合に、例外がスローされません、 <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> コントロールが見つかりませんでした。 コントロールが正しくない型の場合は無視されます。  
  
 同様に、メンバーシップ プロバイダーは、質問と回答が必要な場合 \(によって決定、 <xref:System.Web.UI.WebControls.CreateUserWizard.QuestionAndAnswerRequired%2A> プロパティ\)、 <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> と <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> コントロールは、必要な <xref:System.Web.UI.WebControls.CreateUserWizard> が見つからない場合や無効な型の例外をスローします。 メンバーシップ プロバイダーによって不要な場合、それらはそれらも例外はスローされません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizardStep" />
      </Docs>
    </Member>
    <Member MemberName="CreatingUser">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler CreatingUser;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler CreatingUser" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CreateUserWizard.CreatingUser" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しい Web サイトのユーザー アカウントを作成するメンバーシップ プロバイダーが呼び出される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.CreatingUser> イベントは、呼び出しの前に、 <xref:System.Web.Security.MembershipProvider.CreateUser%2A> メソッドで指定したメンバーシップ プロバイダーを <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティです。  
  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreatingUser> イベントの既定値を確立するか、メンバーシップ プロバイダーに情報を渡す前に、ユーザーが入力した情報を変更します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreatingUser> イベントへの <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> プロパティで指定したメンバーシップ プロバイダーに送信する前にすべて小文字、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティです。  
  
 [!code-csharp[CreateUserWizardCreatingUser\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardCreatingUser/CS/createuserwizardcreatingusercs.aspx#1)]
 [!code-vb[CreateUserWizardCreatingUser\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardCreatingUser/VB/createuserwizardcreatinguservb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatingUser(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DisableCreatedUser">
      <MemberSignature Language="C#" Value="public virtual bool DisableCreatedUser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableCreatedUser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいユーザーが Web サイトにログオンできるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 新しいユーザーの Web サイトへのログオンが許可された場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser%2A> プロパティは、メンバーシップ データ ストアで無効になって、新しく作成したユーザー アカウントはマークするかどうかを決定します。 ユーザー アカウントは無効としてマークされると、Web サイトにログオンするアカウントを作成できません。 たとえば、Web サイトにより、アカウントを要求する、新規ユーザーのアクセスを許可する前に管理者の承認が必要する場合は、設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser%2A> プロパティを `true` 、管理者がアカウントを承認するまで、新たに作成を無効にするアカウントにします。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser%2A> は `true`, 、設定する必要があります、 <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> プロパティを `false` ように、 <xref:System.Web.UI.WebControls.CreateUserWizard> 、新しいユーザーのログオンを試行しません。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Security.MembershipUser.IsApproved" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySideBar">
      <MemberSignature Language="C#" Value="public override bool DisplaySideBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaySideBar" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.DisplaySideBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのサイド バーの領域を表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> サイドバーの領域に表示される場合、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> コントロール。 それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateEmailErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string DuplicateEmailErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DuplicateEmailErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.DuplicateEmailErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定エラー メッセージが、ユーザーがメンバーシップ プロバイダーで使用されている電子メール アドレスを入力した場合に表示されます。</summary>
        <value>エラー メッセージは、ユーザーがメンバーシップ プロバイダーで使用されている電子メール アドレスを入力した場合に表示されます。 既定値は"入力した電子メール アドレスは既に使用されています。 入力してください、別の電子メール アドレスです。" コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.DuplicateUserNameErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="DuplicateUserNameErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string DuplicateUserNameErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DuplicateUserNameErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.DuplicateUserNameErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定エラー メッセージが、ユーザーがメンバーシップ プロバイダーで使用されているユーザー名を入力した場合に表示されます。</summary>
        <value>エラー メッセージは、ユーザーがメンバーシップ プロバイダーで既に使用されているユーザー名を入力した場合に表示されます。 既定値は「別のユーザー名を入力してください」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.DuplicateEmailErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="EditProfileIconUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー プロファイル編集ページへのリンクの横に表示するイメージの URL を設定します。</summary>
        <value>ユーザー プロファイル編集ページへのリンクの横に表示するイメージの URL。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileUrl" />
      </Docs>
    </Member>
    <Member MemberName="EditProfileText">
      <MemberSignature Language="C#" Value="public virtual string EditProfileText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー プロファイル編集ページへのリンクのテキスト キャプションを設定します。</summary>
        <value>ユーザー プロファイル編集ページへのリンクのテキスト キャプション。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileUrl" />
      </Docs>
    </Member>
    <Member MemberName="EditProfileUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー プロファイル編集ページの URL を設定します。</summary>
        <value>ユーザー プロファイル編集ページの URL です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EditProfileText" />
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public virtual string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、ユーザーが入力した電子メール アドレスを設定します。</summary>
        <value>ユーザーが入力した電子メール アドレス。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定したメンバーシップ プロバイダーによって電子メール アドレスが必要な場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティには、\[電子メール アドレス テキスト ボックスに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 各テキスト ボックスに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールが、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> オブジェクトが関連付けられています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EmailLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpression" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider" />
      </Docs>
    </Member>
    <Member MemberName="EmailLabelText">
      <MemberSignature Language="C#" Value="public virtual string EmailLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.EmailLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または電子メールのテキスト ボックスのラベルのテキストを設定します。</summary>
        <value>電子メールのテキスト ボックスを識別するラベルのテキスト。 既定値は"電子メール:"です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Email" />
      </Docs>
    </Member>
    <Member MemberName="EmailRegularExpression">
      <MemberSignature Language="C#" Value="public virtual string EmailRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または指定された電子メール アドレスの検証に使用される正規表現を設定します。</summary>
        <value>電子メール アドレスの検証に使用される正規表現を含む文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpression%2A> 電子メール アドレスを検証する正規表現を指定するには、特定のパターンと一致することを確認するユーザーが入力されます。 一般的な用途はなどユーザーが、完全な電子メール アドレスを入力するかどうかを確認する **user@contoso.com**します。 正規表現を使用して電子メール アドレスで指定したメンバーシップ プロバイダーによって課される制限に加えて、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティです。 テキストが含まれているメンバーシップ プロバイダーは、何らかの理由で、電子メール アドレスを拒否する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidEmailErrorMessage%2A> プロパティが表示されます。  
  
 場合、アドレスが正規表現と比較してのみ、 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> にプロパティが設定されている `true`します。  
  
 テキストが含まれている電子メール アドレスが正規表現を通過しない場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
   
  
## 例  
 次のコード例は、正規表現を割り当てます、 <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpression%2A> プロパティをユーザーが入力したユーザーの電子メール アドレスの形式が無効などを確認する **username@contoso.com**します。  
  
 [!code-csharp[CreateUserWizardEmailRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardEmailRegex/CS/createuserwizardemailregexcs.aspx#1)]
 [!code-vb[CreateUserWizardEmailRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardEmailRegex/VB/createuserwizardemailregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="EmailRegularExpressionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string EmailRegularExpressionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailRegularExpressionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または入力した電子メール アドレスに電子メール アドレスのサイトの基準が合格しない場合に表示されるエラー メッセージを設定します。</summary>
        <value>入力した電子メール アドレスで定義されている正規表現が合格しない場合に表示されるエラー メッセージ、 <see cref="P:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpression" /> プロパティです。 既定値は「別の電子メール アドレスを入力してください」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage%2A> プロパティを入力した電子メール アドレスが電子メール アドレスのサイトの基準をパスしなかったユーザーに通知します。  
  
   
  
## 例  
 次のコード例は、エラー メッセージを割り当てます、 <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage%2A> プロパティをユーザーに電子メール アドレスが有効な形式がされていないことを示します。  
  
 [!code-csharp[CreateUserWizardEmailRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardEmailRegex/CS/createuserwizardemailregexcs.aspx#1)]
 [!code-vb[CreateUserWizardEmailRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardEmailRegex/VB/createuserwizardemailregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpression" />
      </Docs>
    </Member>
    <Member MemberName="EmailRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string EmailRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmailRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.EmailRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または電子メール アドレスが、電子メールのテキスト ボックスに入力されていないとき、ユーザーに表示されるエラー メッセージを設定します。</summary>
        <value>電子メールのテキスト ボックスに電子メール アドレスが入力されていないとき、ユーザーに表示されるエラー メッセージ。 既定値は「電子メールが必要」です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Email" />
      </Docs>
    </Member>
    <Member MemberName="ErrorMessageStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle ErrorMessageStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ErrorMessageStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラー メッセージの外観を定義するスタイル プロパティのコレクションへの参照を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールでのエラー メッセージの外観を定義するスタイル プロパティを格納します。 既定値は null です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A> メンバーシップ プロバイダーが新しいユーザー アカウントの作成に失敗したときに表示されるエラー メッセージの外観を変更するプロパティです。 既定では、 <xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A> が赤で、次のメッセージを表示に設定します。  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.DuplicateEmailErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.DuplicateUserNameErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidAnswerErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidEmailErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidQuestionErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidPasswordErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UnknownErrorMessage%2A>  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.TableItemStyle> クラス \(たとえば、 `ErrorMessageStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `ErrorMessageStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 適用されるすべての設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A> プロパティがプロパティの対応する設定を上書き、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.ErrorMessageStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError(System.Web.UI.WebControls.CreateUserErrorEventArgs)" />
        <altmember cref="T:System.Web.Security.MembershipCreateStatus" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.GetDesignModeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのデザイン時のデータを取得します。</summary>
        <returns>なし</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはヘルプ ページへのリンクの横に表示するイメージの URL を設定します。</summary>
        <value>ヘルプ ページへのリンクの横に表示するイメージの URL。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageText" />
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、ヘルプ ページへのリンクのテキスト キャプションを設定します。</summary>
        <value>ヘルプ ページへのリンクのテキスト キャプション。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageUrl" />
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはヘルプ ページの URL を設定します。</summary>
        <value>ヘルプ ページの URL です。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.HelpPageText" />
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはハイパーリンクの外観を定義するプロパティのコレクションを設定します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> ハイパーリンクの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A> プロパティへの参照を取得する、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト内のハイパーリンクの外観を変更するために使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.TableItemStyle> クラス \(たとえば、 `HyperLinkStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `HyperLinkStyle.ForeColor`\)。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A> プロパティがプロパティの対応する設定を上書き、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.HyperLinkStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public virtual string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいユーザー アカウントを作成する方法についてを設定します。</summary>
        <value>新しいユーザー アカウントを作成するための指示テキストです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionText%2A> プロパティには、ユーザーが新しいユーザー アカウントを作成するための手順が含まれています。 このテキストが表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> タイトルの後のコントロールです。  
  
 場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionText%2A> プロパティが空の文字列 \(""\)、ユーザーに指示テキストは表示されません。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle" />
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>説明のテキストの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 命令テキストの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A> プロパティ内の命令テキストの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.TableItemStyle> クラス \(たとえば、 `InstructionTextStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `InstructionTextStyle.ForeColor`\)。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A> プロパティの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionText%2A> プロパティです。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A> プロパティのプロパティに対応する設定のオーバーライド、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.InstructionTextStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidAnswerErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidAnswerErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidAnswerErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.InvalidAnswerErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの取得の答えが無効である場合に表示されるメッセージを設定します。</summary>
        <value>パスワードの取得の答えが無効である場合に表示されるメッセージ。 既定値は「別の秘密の答えを入力してください」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership> で指定されたクラスのメンバーシップ プロバイダー、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティは質問をサポートし、回答の取得や、ユーザーのパスワードをリセットするためです。<xref:System.Web.UI.WebControls.CreateUserWizard.InvalidAnswerErrorMessage%2A> 、ユーザーが入力した答えがメンバーシップ プロバイダーにより設定答えの要件を満たしていない場合、プロパティが表示されます。 回答の実際の要件は、メンバーシップ プロバイダーによって決定され、他のプロバイダーに異なる可能性があります。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコードを変更する例、 <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidAnswerErrorMessage%2A> 最小の長さを持つ応答が必要なメンバーシップ プロバイダーのプロパティです。 実際のメンバーシップ プロバイダーは表示されません。  
  
 [!code-csharp[CreateUserWizardInvalidAnswerErrorMessage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardInvalidAnswerErrorMessage/CS/createuserwizardinvalidanswererrormessagecs.aspx#1)]
 [!code-vb[CreateUserWizardInvalidAnswerErrorMessage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardInvalidAnswerErrorMessage/VB/createuserwizardinvalidanswererrormessagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidEmailErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidEmailErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidEmailErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.InvalidEmailErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または入力した電子メール アドレスが無効である場合に表示されるメッセージを設定します。</summary>
        <value>入力した電子メール アドレスが無効である場合に表示されるメッセージ。 既定値は「有効な電子メール アドレスを入力してください」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership> で指定されたクラスのメンバーシップ プロバイダー、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティが受け付けることが電子メール アドレスを制限することができます。<xref:System.Web.UI.WebControls.CreateUserWizard.InvalidEmailErrorMessage%2A> 、ユーザーが入力した電子メール アドレスがメンバーシップ プロバイダーによって設定する電子メール アドレスの要件を満たしていない場合、プロパティが表示されます。 電子メール アドレスの実際の要件は、メンバーシップ プロバイダーによって決定され、他のプロバイダーに異なる可能性があります。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPasswordErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidPasswordErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidPasswordErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.InvalidPasswordErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に入力したパスワードが無効である場合に表示されるメッセージ。</summary>
        <value>入力したパスワードが有効な場合に表示されるメッセージです。 既定値は「有効なパスワードを入力してください」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership> で指定されたクラスのメンバーシップ プロバイダー、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティが受け付けることがパスワードを制限することができます。<xref:System.Web.UI.WebControls.CreateUserWizard.InvalidPasswordErrorMessage%2A> 、ユーザーが入力したパスワードが、メンバーシップ プロバイダーにより設定、パスワードの要件を満たしていない場合、プロパティが表示されます。 パスワードの実際の要件は、メンバーシップ プロバイダーによって決定され、他のプロバイダーに異なる可能性があります。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコードを変更する例、 <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidPasswordErrorMessage%2A> 大文字と小文字の両方が含まれているパスワードが必要なメンバーシップ プロバイダーのプロパティです。 実際のメンバーシップ プロバイダーは表示されません。  
  
 [!code-csharp[CreateUserWizardInvalidPasswordErrorMessage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardInvalidPasswordErrorMessage/CS/createuserwizardinvalidpassworderrormessagecs.aspx#1)]
 [!code-vb[CreateUserWizardInvalidPasswordErrorMessage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardInvalidPasswordErrorMessage/VB/createuserwizardinvalidpassworderrormessagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidQuestionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string InvalidQuestionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InvalidQuestionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.InvalidQuestionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または入力したパスワードの取得の質問が無効である場合に表示されるメッセージを設定します。</summary>
        <value>パスワードの取得の質問が有効な場合に表示されるメッセージです。 既定値は「有効な回答を入力してください」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Security.Membership> で指定されたクラスのメンバーシップ プロバイダー、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティが受け付けることがパスワードの取得の質問を制限することができます。<xref:System.Web.UI.WebControls.CreateUserWizard.InvalidQuestionErrorMessage%2A> 、ユーザーが入力した質問は、メンバーシップ プロバイダーにより設定質問の要件を満たしていない場合、プロパティが表示されます。 質問の実際の要件は、メンバーシップ プロバイダーによって決定され、他のプロバイダーに異なる可能性があります。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコードを変更する例、 <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidQuestionErrorMessage%2A> 文字の英数字の a ~ z、A ~ Z および 0 ~ 9 に質問を制限するメンバーシップ プロバイダーのプロパティです。 実際のメンバーシップ プロバイダーは表示されません。  
  
 [!code-csharp[CreateUserWizardInvalidQuestionErrorMessage\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardInvalidQuestionErrorMessage/CS/createuserwizardinvalidquestionerrormessagecs.aspx#1)]
 [!code-vb[CreateUserWizardInvalidQuestionErrorMessage\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardInvalidQuestionErrorMessage/VB/createuserwizardinvalidquestionerrormessagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ラベルの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> ラベルの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A> プロパティ内のラベルの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.TableItemStyle> クラス \(たとえば、 `LabelStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `LabelStyle.ForeColor`\)。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A> プロパティは、次のプロパティの外観を定義します。  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.EmailLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UserNameLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPasswordLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.QuestionLabelText%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.AnswerLabelText%2A>  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A> プロパティのプロパティに対応する設定のオーバーライド、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.LabelStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表すオブジェクト。</param>
        <summary>SaveViewState メソッドによって保存された前回のページ要求からビュー ステート情報を復元します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> は有効な <see cref="P:System.Web.UI.Control.ViewState" /> ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoginCreatedUser">
      <MemberSignature Language="C#" Value="public virtual bool LoginCreatedUser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoginCreatedUser" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー アカウントの作成後、新しいユーザーにログインするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合は、ユーザー アカウントを作成した後に新しいユーザーのログインする必要があります。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> プロパティを設定してを `false` をユーザー アカウントを作成しますが、作成後、アカウントを認証する場合。 管理者ユーザー アカウントを作成する場合、またはユーザーが Web サイトにアクセスする前に、待機期間がある場合は便利なにあります。  
  
> [!NOTE]
>  ときに、 <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> にプロパティが設定されている `true`, 、ユーザーが作成されの最後にサインインして、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> 手順です。 ユーザーがすべての手順を完了後に記録される場合は、設定できます、 <xref:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser%2A> プロパティを `false` までの手順をすべて、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールが完了しました。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.DisableCreatedUser" />
      </Docs>
    </Member>
    <Member MemberName="MailDefinition">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MailDefinition MailDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MailDefinition MailDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいユーザーに送信される電子メール メッセージの特性を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 電子メール メッセージを定義するオブジェクトは、新しいユーザーに送信します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> プロパティを使用して、書式を定義するプロパティのグループおよび新しいユーザーに送信される電子メール メッセージのコンテンツへの参照を返します。 一般的な設定には、件名、および送信者のリターン アドレスが含まれます。 プロパティの完全な一覧については、 <xref:System.Web.UI.WebControls.MailDefinition> クラスです。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトが返されます。 設定することができます、 <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> 形式で宣言によってプロパティ `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.MailDefinition> クラス \(たとえば、 `MailDefinition-Subject`\)。 プログラムでは、フォームにもプロパティを設定することができます `Property.SubProperty` \(たとえば、 `MailDefinition.Subject`\)。  
  
 唯一場合は、新しいユーザーに電子メール メッセージが送信される <xref:System.Web.UI.WebControls.MailDefinition> は `null` 場合 <xref:System.Web.Mail.MailMessage.Body%2A> が空でないまたは `null`です。 その場合は、 <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> 電子メール メッセージの送信が試行され、イベントが発生します。<xref:System.Web.UI.WebControls.MailDefinition.From%2A> プロパティは、電子メール アドレスに設定する必要があります。 それ以外の場合、 <xref:System.Web.HttpException> 例外がスローされます。  
  
 電子メール メッセージを作成すると、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトに、次の表に示されている置換を行うことができます。  
  
|置換テキスト|置き換えられます|  
|------------|--------------|  
|`<%UserName%>`|新しく作成したユーザー アカウントのユーザー名。|  
|`<%Password%>`|新しく作成したユーザー アカウントのパスワード。|  
  
 場合、 <xref:System.Web.UI.WebControls.MailDefinition.IsBodyHtml%2A> のプロパティ、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトが `true`, 、メール メッセージの内容を HTML エンコードされることをメッセージ受信者のクロスサイト スクリプティングのセキュリティ脆弱性を防ぐとなります。  
  
 使用することができます、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail%2A> を変更する方法、 <xref:System.Web.Mail.MailMessage> によって作成された、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトです。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
> [!NOTE]
>  ユーザーが受信または電子メール メッセージを表示することを保証することはできません。 ユーザーが電子メールで通知を受信したことを確認するには、ユーザーが通知を受信したことを確認することができる電子メール メッセージで確認用のリンクを提供することを検討してください。  
  
   
  
## 例  
 次のコード例のプロパティを設定する、 <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> 宣言型およびプログラムの両方の構文を使用してプロパティです。 このコード例では、次のテキストを含む MailFile.txt をという名前のテキスト ファイルが必要です。  
  
```  
Your account was set up on our Web site with the following:  
  
    Username:   <%UserName%>  
  
To reset your password, you must answer the following question:  
  
    Password Question: <%PasswordQuestion%>    
    Password Answer:   <%PasswordAnswer%>    
  
Thank you for creating an account with our Web site.  
  
```  
  
 [!code-csharp[CreateUserWizardMailDefinition\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardMailDefinition/CS/createuserwizardmaildefinitioncs.aspx#1)]
 [!code-vb[CreateUserWizardMailDefinition\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardMailDefinition/VB/createuserwizardmaildefinitionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.MailDefinition.From" /> 電子メール アドレスに設定されていません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.MailDefinition" />
        <altmember cref="T:System.Web.Mail.MailMessage" />
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー アカウントを作成すると呼ばれるメンバーシップ プロバイダーを設定します。</summary>
        <value>
          <see cref="T:System.Web.Security.MembershipProvider" /> ユーザー アカウントを作成するために使用します。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティは、定義済みの名前を含む <xref:System.Web.Security.MembershipProvider> クラス メンバーシップ プロバイダーはユーザー情報を格納するために使用します。 値を変更することでさまざまなデータ ストアでユーザーのメンバーシップ情報を格納する、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティです。 ときに、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> にプロパティが設定されている <xref:System.String.Empty>, 、Web.config ファイルで定義されている既定のメンバーシップ プロバイダーを使用します。  
  
 メンバーシップ プロバイダーが Web.config ファイルで定義されている、 `<membership>` セクションです。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例で定義されているメンバーシップ プロバイダーが必要です、 `<membership>` Web.config ファイルのセクションです。 小規模な会社の部門ごとにメンバーシップ プロバイダーを定義する Web.config ファイルを次に示します。 この例では、各メンバーシップ プロバイダーは、SQL Server データベースを指します。  
  
 `<configuration>`  
  
 `<system.web>`  
  
 `<membership>`  
  
 `<providers>`  
  
 `<add name="accountingProvider"`  
  
 `type="System.Web.Security.SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `<add name="manufacturingProvider"`  
  
 `type="System.Web.Security.` `SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `<add name="marketingProvider"`  
  
 `type="System.Web.Security.` `SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `<add name="salesProvider"`  
  
 `type="System.Web.Security.` `SqlMembershipProvider,`  
  
 `System.Web, Version=2.0.3600.0, Culture=neutral,`  
  
 `PublicKeyToken=b03f5f7f11d50a3a"`  
  
 `connectionStringName="LocalSqlServer"`  
  
 `enablePasswordRetrieval="false"`  
  
 `enablePasswordReset="true"`  
  
 `requiresQuestionAndAnswer="false"`  
  
 `applicationName="/"`  
  
 `requiresUniqueEmail="false"`  
  
 `passwordFormat="Hashed"`  
  
 `description="Stores and retrieves membership data from a Microsoft SQL Server database."`  
  
 `/>`  
  
 `</providers>`  
  
 `</membership>`  
  
 `</system.web>`  
  
 `</configuration>`  
  
 次のコード例は、ユーザーが所属する組織の部門を決定するユーザー アカウントを作成する前に、手順を挿入します。 次に、設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> の除算の適切なプロバイダーのプロバイダー。  
  
 [!code-csharp[CreateUserWizardMembershipProvider\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardMembershipProvider/CS/createuserwizardmembershipprovidercs.aspx#1)]
 [!code-vb[CreateUserWizardMembershipProvider\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardMembershipProvider/VB/createuserwizardmembershipprovidervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">指定したメンバーシップ プロバイダーは Web.config ファイルで定義されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">なし</param>
        <param name="e">なし</param>
        <summary>サーバー コントロールのイベントをページの UI サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>ブール値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContinueButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContinueButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinueButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnContinueButtonClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させます、 <see cref="E:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick" /> イベント、ユーザーがクリックすると、 **続行** 最後のユーザー アカウントの作成手順\] ボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick> イベントは、ユーザーがクリックすると発生、 **続行** のボタンでは、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnContinueButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnContinueButtonClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnContinueButtonClick(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.ContinueButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnCreatedUser">
      <MemberSignature Language="C#" Value="protected virtual void OnCreatedUser (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreatedUser(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.CreateUserWizard.CreatedUser" /> メンバーシップ プロバイダーは、ユーザー アカウントを作成した後にイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser%2A> Web サイトのユーザー アカウントがメンバーシップ プロバイダーによって作成された後に、メソッドが呼び出されます。 場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.LoginCreatedUser%2A> プロパティは、 `true`, 後、ユーザーがログインしている、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser%2A> メソッドが呼び出されます。  
  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser%2A> 、ユーザーが初めてログインする前に、個人用設定のプロパティなどの Web サイトの値を設定します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser(System.EventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatedUser(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.CreatedUser" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateUserError">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateUserError (System.Web.UI.WebControls.CreateUserErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateUserError(class System.Web.UI.WebControls.CreateUserErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError(System.Web.UI.WebControls.CreateUserErrorEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CreateUserErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.CreateUserErrorEventArgs" /> 、イベントのデータを使用します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.CreateUserWizard.CreateUserError" /> イベントの指定したユーザー アカウントの作成で問題がある場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError%2A> でメンバーシップ プロバイダーが指定した場合、メソッドが呼び出されます、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティは、指定したユーザー アカウントの作成をエラー メッセージを返します。<xref:System.Web.UI.WebControls.CreateUserErrorEventArgs.CreateUserError%2A> のプロパティ、 <xref:System.Web.UI.WebControls.CreateUserErrorEventArgs> として渡されるオブジェクト、 `e` パラメーターが含まれる、 <xref:System.Web.Security.MembershipCreateStatus> エラーの詳細を含むオブジェクト。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError(System.Web.UI.WebControls.CreateUserErrorEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError(System.Web.UI.WebControls.CreateUserErrorEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.CreateUserError" />
        <altmember cref="T:System.Web.Security.MembershipCreateStatus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreatingUser">
      <MemberSignature Language="C#" Value="protected virtual void OnCreatingUser (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreatingUser(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatingUser(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.LoginCancelEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.CreateUserWizard.CreatingUser" /> を新しいユーザー アカウントを作成するメンバーシップ プロバイダーを呼び出す前にイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatingUser%2A> に新しいユーザー情報を送信する前に必要なすべての処理を実行するメソッドを <xref:System.Web.Security.MembershipProvider.CreateUser%2A> で指定したメンバーシップ プロバイダーのメソッド、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティです。 たとえば、すべて小文字にユーザー名\] フィールドを設定したり、ユーザー アカウントの作成を許可する前に制限されているアドレスの一覧に電子メール アドレスを比較します。  
  
 新しいユーザー アカウントを作成、設定する要求をキャンセルする必要がある場合、 <xref:System.Web.UI.WebControls.LoginCancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.LoginCancelEventArgs> として渡されるオブジェクト、 `e` パラメーターを `true`します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatingUser%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例を定義するカスタム <xref:System.Web.UI.WebControls.CreateUserWizard> を使用するコントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnCreatingUser%2A> を作成するメソッド、 <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> プロパティをすべて小文字です。  
  
 [!code-csharp[CreateUserWizardOnCreatingUser\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnCreatingUser/CS/CustomCreateUserWizard.cs#2)]
 [!code-vb[CreateUserWizardOnCreatingUser\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnCreatingUser/VB/CustomCreateUserWizard.vb#2)]  
  
 次のコード例を使用した Web ページを示しています、 `CustomCreateUserWizard`です。  
  
 [!code-csharp[CreateUserWizardOnCreatingUser\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnCreatingUser/CS/createuserwizardoncreatingusercs.aspx#1)]
 [!code-vb[CreateUserWizardOnCreatingUser\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnCreatingUser/VB/createuserwizardoncreatinguservb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatingUser(System.Web.UI.WebControls.LoginCancelEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreatingUser(System.Web.UI.WebControls.LoginCancelEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.CreatingUser" />
      </Docs>
    </Member>
    <Member MemberName="OnNextButtonClick">
      <MemberSignature Language="C#" Value="protected override void OnNextButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnNextButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException">ページのメンバーシップ プロバイダーが見つかりません。 詳細については、「<see cref="P:System.Web.Security.Membership.Providers" />」を参照してください。</exception>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSendingMail">
      <MemberSignature Language="C#" Value="protected virtual void OnSendingMail (System.Web.UI.WebControls.MailMessageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendingMail(class System.Web.UI.WebControls.MailMessageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MailMessageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.MailMessageEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" /> 、新規ユーザーに電子メール メッセージが送信される前に、イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail%2A> 新しいユーザーに送信される電子メール メッセージを変更する方法です。<xref:System.Web.UI.WebControls.MailMessageEventArgs.Message%2A> のプロパティ、 <xref:System.Web.UI.WebControls.MailMessageEventArgs> として渡されるオブジェクト、 `e` パラメーターが含まれる、 <xref:System.Web.Mail.MailMessage> 新規ユーザーに送信されるオブジェクト。 プロパティを変更、 <xref:System.Web.Mail.MailMessage> 電子メール メッセージを変更するオブジェクト。  
  
 電子メール メッセージが作成のみ、 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> のプロパティ、 <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> で指定されたオブジェクト、 <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> プロパティは有効なファイル名を指しています。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例を定義するカスタム <xref:System.Web.UI.WebControls.CreateUserWizard> を使用するコントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail%2A> 新しいユーザーに送信する電子メールのテキストを変更する方法です。 この例では、次のテキストを含む MailFile.txt をという名前のテキスト ファイルが必要です。  
  
```csharp  
Your account was set up on our Web site with the following:  
  
    Username:   <%UserName%>  
  
To reset your password, you must answer the following question:  
  
    Password Question: <%PasswordQuestion%>    
    Password Answer:   <%PasswordAnswer%>    
  
Thank you for creating an account with our Web site.  
```  
  
 [!code-csharp[CreateUserWizardOnSendingMail\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/CS/createuserwizardonsendingmailcs.aspx#1)]
 [!code-vb[CreateUserWizardOnSendingMail\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/VB/createuserwizardonsendingmailvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
        <altmember cref="T:System.Web.Mail.MailMessage" />
      </Docs>
    </Member>
    <Member MemberName="OnSendMailError">
      <MemberSignature Language="C#" Value="protected virtual void OnSendMailError (System.Web.UI.WebControls.SendMailErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendMailError(class System.Web.UI.WebControls.SendMailErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" /> イベントと、新しいユーザーに電子メールを送信することはできません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendMailError%2A> SMTP メール システムを新しいユーザーに電子メールを送信しようとしています。 中に例外を発生させるメソッドが呼び出されます。  
  
 確認、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> として渡されるオブジェクト、 `e` 例外の実際の原因を特定のパラメーターです。 最も一般的な問題は、構成エラーで、 `<smtpMail>` Web.config ファイルのセクションです。  
  
 設定する必要があります、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> として渡されるオブジェクト、 `e` を通知すること、例外の原因となったパラメーター、 <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendMailError%2A> に呼び出されるメソッドが検討されて、それ以外の場合、例外は再スローされます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.OnSendMailError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例を定義するカスタム <xref:System.Web.UI.WebControls.CreateUserWizard> オブジェクトをサイト固有のログ関数を電子メール エラー ログに記録します。  
  
 [!code-csharp[CreateUserWizardOnSendMailError\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnSendMailError/CS/CustomCreateUserWizard.cs#2)]
 [!code-vb[CreateUserWizardOnSendMailError\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnSendMailError/VB/CustomCreateUserWizard.vb#2)]  
  
 次のコード例を使用した Web ページを示しています、 `CustomCreateUserWizard`です。  
  
 [!code-csharp[CreateUserWizardOnSendMailError\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnSendMailError/CS/createuserwizardonsendmailerrorcs.aspx#1)]
 [!code-vb[CreateUserWizardOnSendMailError\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnSendMailError/VB/createuserwizardonsendmailerrorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Web.UI.WebControls.CreateUserWizard.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public virtual string Password { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力したパスワードを取得します。</summary>
        <value>ユーザーが入力したパスワードです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A> プロパティには、ユーザーが入力したパスワードが含まれています。 既定では、 <xref:System.Web.UI.WebControls.CompareValidator> のオブジェクトが提供される、 <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A> と <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword%2A> テキスト ボックスの値。 各テキスト ボックスに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールもあります、 <xref:System.Web.UI.MobileControls.RequiredFieldValidator> オブジェクトが関連付けられています。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword" />
      </Docs>
    </Member>
    <Member MemberName="PasswordHintStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PasswordHintStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PasswordHintStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードの要件を説明するテキストの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> パスワード要件を説明するテキストの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A> プロパティでパスワードの要件を説明するテキストの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.TableItemStyle> クラス \(たとえば、 `PasswordHintStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `PasswordHintStyle.ForeColor`\)。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A> プロパティの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintText%2A> プロパティです。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A> プロパティのプロパティに対応する設定のオーバーライド、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordHintText">
      <MemberSignature Language="C#" Value="public virtual string PasswordHintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordHintText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.PasswordHintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの要件を説明するテキストを設定します。</summary>
        <value>パスワードの要件を説明するテキスト。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintText%2A> パスワードを作成する方法についてのガイドラインと、ユーザーの要件を提供するプロパティです。 たとえば、設定することが、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordHintText%2A> プロパティを「、パスワードは、最低 6 文字の長さをする必要があります」 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression%2A> 、ユーザーがのガイドラインに準拠しているパスワードを入力することを検証するプロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Password" />
      </Docs>
    </Member>
    <Member MemberName="PasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string PasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.PasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードのテキスト ボックスのラベルのテキストを設定します。</summary>
        <value>パスワード テキスト ボックスのラベルのテキストです。 既定値は"パスワード:"です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Password" />
      </Docs>
    </Member>
    <Member MemberName="PasswordRegularExpression">
      <MemberSignature Language="C#" Value="public virtual string PasswordRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または指定されたパスワードの検証に使用される正規表現を設定します。</summary>
        <value>指定したパスワードの検証に使用される正規表現を含む文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression%2A> プロパティを Web サイトでユーザーを検証するためのパスワードの要件を定義します。 一般的な用途では、ユーザーにはにより、攻撃者がパスワードを推測しにくくためのパスワードに文字以外の記号が含まれているかどうかを確認します。 指定したメンバーシップ プロバイダーによって、パスワードに課せられた制限に加えて、正規表現が使用される、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティです。 テキストが含まれているメンバーシップ プロバイダーは、何らかの理由で、パスワードを拒否する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.InvalidPasswordErrorMessage%2A> プロパティが表示されます。  
  
 入力したパスワードに、正規表現が渡されない場合、エラー メッセージが含まれている、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression%2A> いることを確認するパスワードを確認する正規表現を定義するプロパティ。  
  
-   7 文字を超えています。  
  
-   少なくとも 1 つの数字が含まれてください。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれてください。  
  
 テキストが含まれる、ユーザーが入力したパスワードがこれらの条件を満たしていない場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
 [!code-csharp[CreateUserWizardPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardPasswordRegex/CS/createuserwizardpasswordregexcs.aspx#1)]
 [!code-vb[CreateUserWizardPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardPasswordRegex/VB/createuserwizardpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="PasswordRegularExpressionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRegularExpressionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRegularExpressionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に入力したパスワードが、サイトのパスワードの要件に準拠していないときに表示されるエラー メッセージ。</summary>
        <value>入力したパスワードがで定義されている正規表現をやり取りしないときに表示されるエラー メッセージ、 <see cref="P:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression" /> プロパティです。 既定値は「別のパスワードを入力してください」 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage%2A> プロパティをユーザーに通知する、入力したパスワードが、サイトのパスワードの要件に準拠していません。  
  
   
  
## 例  
 次のコード例、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRequiredErrorMessage%2A> プロパティに入力したパスワードに格納されている正規表現の要件を満たしていないユーザーに説明するため、 <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression%2A> プロパティです。 正規表現を渡すと、パスワードが必要です。  
  
-   6 つの文字を超えないようにします。  
  
-   少なくとも 1 つの数字が含まれてください。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれてください。  
  
 [!code-csharp[CreateUserWizardPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardPasswordRegex/CS/createuserwizardpasswordregexcs.aspx#1)]
 [!code-vb[CreateUserWizardPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardPasswordRegex/VB/createuserwizardpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpression" />
      </Docs>
    </Member>
    <Member MemberName="PasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.PasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがパスワードを入力していないときに表示されるエラー メッセージのテキストを設定します。</summary>
        <value>ユーザーがパスワードを入力しない場合に表示されるエラー メッセージ。 既定値は「パスワードが必要」です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Password" />
      </Docs>
    </Member>
    <Member MemberName="Question">
      <MemberSignature Language="C#" Value="public virtual string Question { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Question" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.Question" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、ユーザーが入力したパスワード復旧確認の質問を設定します。</summary>
        <value>ユーザーが入力した、パスワードの回復の確認の質問 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定したメンバーシップ プロバイダー、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティで判断するかどうか、 <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> と <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> 実行時にテキスト ボックスが表示されます。 各テキスト ボックスに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールが、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 関連付けられています。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、電子メールの変更、 <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> にユーザーのパスワードの回復の確認の質問を新しいユーザーに送信されるメッセージに含めるイベントです。  
  
 [!code-csharp[CreateUserWizardOnSendingMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/CS/createuserwizardonsendingmailcs.aspx#1)]
 [!code-vb[CreateUserWizardOnSendingMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/VB/createuserwizardonsendingmailvb.aspx#1)]  
[!code-csharp[CreateUserWizardOnSendingMail#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/CS/CustomCreateUserWizard.cs#2)]
[!code-vb[CreateUserWizardOnSendingMail#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardOnSendingMail/VB/CustomCreateUserWizard.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Answer" />
      </Docs>
    </Member>
    <Member MemberName="QuestionAndAnswerRequired">
      <MemberSignature Language="C#" Value="protected bool QuestionAndAnswerRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QuestionAndAnswerRequired" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.QuestionAndAnswerRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスワードの確認の質問と回答を入力するユーザーが必要かどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ユーザーがパスワードの確認の質問と答えを入力する必要がある場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.QuestionAndAnswerRequired%2A> プロパティ設定されたメンバーシップ プロバイダーから値を返す、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> パスワードの確認の質問と回答を入力するユーザーが必要かどうかを指定するプロパティです。  
  
 メンバーシップ プロバイダーは、質問と回答を必要とする場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> と <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> コントロールは、必要な <xref:System.Web.UI.WebControls.CreateUserWizard> 存在しない場合、または間違った種類の例外をスローします。 メンバーシップ プロバイダーによって不要な場合、それらはそれらも例外はスローされません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Question" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Answer" />
      </Docs>
    </Member>
    <Member MemberName="QuestionLabelText">
      <MemberSignature Language="C#" Value="public virtual string QuestionLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.QuestionLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または質問のテキスト ボックスのラベルのテキストを設定します。</summary>
        <value>質問のテキスト ボックスのラベルのテキストです。 既定値は"セキュリティの質問:"です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.Question" />
      </Docs>
    </Member>
    <Member MemberName="QuestionRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string QuestionRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QuestionRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.QuestionRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがパスワードの確認の質問を入力していない場合に表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーがパスワードの確認の質問を入力していない場合に表示されるエラー メッセージ。 既定値は「セキュリティの質問が必要」です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireEmail">
      <MemberSignature Language="C#" Value="public virtual bool RequireEmail { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.RequireEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または電子メール アドレスが Web サイトのユーザーに必要かどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 電子メール アドレスが必要な場合です。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> プロパティは、 `true`, 、 <xref:System.Web.UI.WebControls.CreateUserWizard> テキスト ボックスおよび電子メール アドレスを入力するユーザーに関連付けられているラベルが表示されます。 ユーザーが電子メール アドレスを入力しない場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRequiredErrorMessage%2A> プロパティ エラー メッセージが表示されます。  
  
 場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> にプロパティが設定されている `true` テンプレート コンテンツを使用していると、 <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> 制御が必要な <xref:System.Web.UI.WebControls.CreateUserWizard> は例外をスロー、 <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> コントロールが見つからないか、型が正しくありません。 場合 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> に設定されている `false`, 場合に、例外がスローされません、 <xref:System.Web.UI.WebControls.CreateUserWizard.Email%2A> が見つかりません。 無効な型のある場合は無視されます。  
  
> [!NOTE]
>  メンバーシップ プロバイダーが指定されている場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> プロパティは、新しいユーザーの一意の電子メール アドレスを必要とは、設定する必要があります、 <xref:System.Web.UI.WebControls.CreateUserWizard.RequireEmail%2A> プロパティを `true` 電子メール アドレスを入力するための UI が表示されないようにします。 それ以外の場合、ユーザーに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRequiredErrorMessage%2A> が電子メール アドレスを入力することはありません。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> メソッドが呼び出された後に変更された状態を保存します。</summary>
        <returns>コントロールの現在のビュー ステートを格納するオブジェクト。このコントロールに関連付けられたビュー ステートがない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SendingMail">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MailMessageEventHandler SendingMail" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>確認の電子メール アカウントが作成されたことをユーザーに送信される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard> 新しい Web サイトのアカウントが作成されたこと時期を確認する電子メール メッセージを送信するクラス、 <xref:System.Web.UI.WebControls.CreateUserWizard.MailDefinition%2A> プロパティを送信する電子メール メッセージを定義します。  
  
 電子メール メッセージには、ユーザー名とパスワードのフィールドの自動置換フィールドのみがある、ためにを使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> を新しいユーザーに送信される前に、電子メール メッセージを変更するイベントです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Web.UI.WebControls.CreateUserWizard.SendingMail> 新しいユーザーに送信される電子メール メッセージを変更するイベントです。 この例では、次のテキストを含む MailFile.txt をという名前のテキスト ファイルが必要です。  
  
```csharp  
Your account was set up on our Web site with the following:  
  
    Username:   <%UserName%>  
  
To reset your password, you must answer the following question:  
  
    Password Question: <%PasswordQuestion%>    
    Password Answer:   <%PasswordAnswer%>    
  
Thank you for creating an account with our Web site.  
```  
  
 [!code-csharp[CreateUserWizardMailDefinition\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardMailDefinition/CS/createuserwizardmaildefinitioncs.aspx#1)]
 [!code-vb[CreateUserWizardMailDefinition\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardMailDefinition/VB/createuserwizardmaildefinitionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
      </Docs>
    </Member>
    <Member MemberName="SendMailError">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SendMailErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいユーザーに電子メールを送信する SMTP エラーがある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.SendMailError> イベントは、新しいユーザーが指定された電子メール アドレスに電子メールを送信する SMTP メール プロバイダーを使用して問題があると発生します。 このイベントが発生する最も一般的な理由の場合は、 `<smtpMail>` Web.config ファイルのセクションが正しくありません。  
  
 既定値 <xref:System.Web.UI.WebControls.CreateUserWizard.SendMailError> イベント ハンドラーはキャッチまたは電子メール システムから SMTP エラーを処理します。<xref:System.Web.UI.WebControls.CreateUserWizard.SendMailError> イベント ハンドラーを設定する必要があります、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトを `true` から Web サイトのユーザーに表示されるエラーを停止するのには。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例は、ハンドラーを <xref:System.Web.UI.WebControls.CreateUserWizard.SendMailError> 電子メール エラーをログに、サイト固有のプロシージャを呼び出すイベントです。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[CreateUserWizardSendMailError\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardSendMailError/CS/createuserwizardsendmailerrorcs.aspx#1)]
 [!code-vb[CreateUserWizardSendMailError\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardSendMailError/VB/createuserwizardsendmailerrorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">コントロールのデザイン時データを格納する <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>コントロールのデザイン時データを設定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public override string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサイドバーのコンテンツをスキップするスクリーン リーダーに通知する代替テキストをレンダリングするために使用する値を設定します。</summary>
        <value>ある文字列、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> スクリーン リーダーにヒントとして、非表示のイメージの代替テキストとして表示されます。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.SkipLinkText%2A> サイド バー領域のコンテンツをスキップすることができるスクリーン リーダーによって読み取られたプロパティを非表示イメージの代替テキストを指定します。 指定したテキストは、コントロールをより使いやすくために使用する非表示イメージの説明を持つデバイスの支援技術を提供します。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.DisplaySideBar%2A> にプロパティが設定されている `false` \(既定\)、 <xref:System.Web.UI.WebControls.CreateUserWizard.SkipLinkText%2A> 代替テキストを持つプロパティが非表示イメージを作成できません。<xref:System.Web.UI.WebControls.CreateUserWizard.SkipLinkText%2A> プロパティは使用される場合にのみ、 <xref:System.Web.UI.WebControls.CreateUserWizard.DisplaySideBar%2A> プロパティは `true`です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト ボックス コントロールの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> テキスト ボックス コントロールの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A> プロパティ内のテキスト ボックス コントロールの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.Style> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `TextBoxStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `TextBoxStyle.ForeColor`\)。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A> プロパティは、次のテキスト ボックス コントロールの外観を定義します。  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> テキスト ボックスのフィールド  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.Password%2A> テキスト ボックスのフィールド  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPassword%2A> テキスト ボックスのフィールド  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.Question%2A> テキスト ボックスのフィールド  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.Answer%2A> テキスト ボックスのフィールド  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A> プロパティのプロパティに対応する設定のオーバーライド、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.TextBoxStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイトルの外観を定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> タイトルの外観を定義するプロパティを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A> プロパティ内のタイトルの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> から返されるオブジェクト。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.TableItemStyle> クラス \(たとえば、 `TitleTextStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `TitleTextStyle.ForeColor`\)。  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A> プロパティは、タイトルの外観を定義、 <xref:System.Web.UI.WebControls.CreateUserWizard.CreateUserStep%2A> 手順、および <xref:System.Web.UI.WebControls.CreateUserWizard.CompleteStep%2A> 手順です。  
  
 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A> プロパティのプロパティに対応する設定のオーバーライド、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.TitleTextStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CreateUserWizard.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのビューステートの一部としてコントロールに変更の追跡を開始する開始位置をマークします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UnknownErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnknownErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.UnknownErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメンバーシップ プロバイダーによって返されるエラーが定義されていない場合に表示されるエラー メッセージを設定します。</summary>
        <value>メンバーシップ プロバイダーから返されるときに表示されるエラー メッセージが定義されていません。 既定値は"自分のアカウント作成されませんでした。 もう一度やり直してください。" コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CreateUserWizard.OnCreateUserError(System.Web.UI.WebControls.CreateUserErrorEventArgs)" />
        <altmember cref="T:System.Web.Security.MembershipCreateStatus" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、ユーザーが入力したユーザー名を設定します。</summary>
        <value>ユーザーが入力したユーザー名。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定したメンバーシップ プロバイダーによってユーザー名が必要な場合、 <xref:System.Web.UI.WebControls.CreateUserWizard.MembershipProvider%2A> にプロパティには、\[ユーザー名\] テキスト ボックスが表示されます、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 各テキスト ボックスに表示される、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールが、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> オブジェクトが関連付けられています。  
  
   
  
## 例  
 次のコード例、 <xref:System.Web.UI.WebControls.CreateUserWizard.UserName%2A> プロパティのすべての小文字のアルファベット文字を <xref:System.Web.UI.WebControls.CreateUserWizard.CreatingUser> イベントです。  
  
 [!code-csharp[CreateUserWizardLoggingIn\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CreateUserWizardLoggingIn/CS/createuserwizardloggingincs.aspx#1)]
 [!code-vb[CreateUserWizardLoggingIn\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CreateUserWizardLoggingIn/VB/createuserwizardlogginginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー名\] ボックスのラベルのテキストを設定します。</summary>
        <value>ユーザー名\] ボックスのラベルのテキストです。 既定値は"ユーザー名:"です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.UserName" />
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー名\] テキスト ボックスは空白のまま表示されるエラー メッセージを設定します。</summary>
        <value>ユーザー名\] テキスト ボックスは空白のまま表示されるエラー メッセージ。 既定値は「ユーザー名が必要」です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づくローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.Style" /> エラー メッセージの検証の外観を設定できるようにするオブジェクト。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> コントロールに対する検証エラー メッセージの外観を定義するスタイル プロパティを格納します。 既定値は null です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A> に対して表示されるメッセージの外観を変更するプロパティは、検証エラーを入力します。 既定では、 <xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A> が赤で、次のメッセージを表示に設定します。  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.QuestionRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.AnswerRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.ConfirmPasswordRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.PasswordRegularExpressionErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.UserNameRequiredErrorMessage%2A>  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard.EmailRegularExpressionErrorMessage%2A>  
  
 <xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.Style> オブジェクトが返されます。 形式で宣言によってこれらのプロパティを設定することができます `Property-Subproperty`, ここで、 `Subproperty` のプロパティを表す、 <xref:System.Web.UI.WebControls.Style> クラス \(たとえば、 `ValidatorTextStyle-ForeColor`\)。 プロパティをプログラムで設定するには、フォームで `Property.Subproperty` \(たとえば、 `ValidatorTextStyle.ForeColor`\)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A> プロパティは、のスタイルの設定とマージ、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 設定、 <xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A> プロパティがプロパティの対応する設定を上書き、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。  
  
 次 <xref:System.Web.UI.WebControls.CreateUserWizard> でスタイル プロパティが上書きされる <xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A> 設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 外観を定義するテンプレートを使用する場合、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロール、 <xref:System.Web.UI.WebControls.CreateUserWizard.ValidatorTextStyle%2A> プロパティには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardSteps">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WizardStepCollection WizardSteps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepCollection WizardSteps" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CreateUserWizard.WizardSteps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてを含むコレクションへの参照を取得、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトのコントロールを定義します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> すべてを表す、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> に対して定義されたオブジェクト、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.CreateUserWizard.WizardSteps%2A> プロパティのコレクションを返します <xref:System.Web.UI.WebControls.WizardStepBase> を構成するオブジェクト、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 使用することができます、 <xref:System.Web.UI.WebControls.CreateUserWizard.WizardSteps%2A> プログラムでアクセスするコレクション、 <xref:System.Web.UI.WebControls.WizardStepBase> に含まれるオブジェクト、 <xref:System.Web.UI.WebControls.CreateUserWizard> コントロールです。 使用して、 <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>, 、<xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>, 、<xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A>, 、および <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A> をプログラムで操作するメソッド、 <xref:System.Web.UI.WebControls.WizardStepBase> コレクション内のオブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepCollection" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
      </Docs>
    </Member>
  </Members>
</Type>