<Type Name="XmlBuilder" FullName="System.Web.UI.WebControls.XmlBuilder">
  <TypeSignature Language="C#" Value="public class XmlBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.XmlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>作成するパーサーの対話、 <see cref="T:System.Web.UI.WebControls.Xml" /> コントロールです。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Web.UI.WebControls.Xml" />
    <altmember cref="T:System.Web.UI.ControlBuilderAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.XmlBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendLiteralString">
      <MemberSignature Language="C#" Value="public override void AppendLiteralString (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AppendLiteralString(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.AppendLiteralString(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">コントロールに追加するリテラルの内容。</param>
        <summary>リテラルの内容をコントロールに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.XmlBuilder.AppendLiteralString%2A> のメソッド、 <xref:System.Web.UI.WebControls.XmlBuilder> クラスのオーバーライド、 <xref:System.Web.UI.ControlBuilder.AppendLiteralString%2A> のメソッド、 <xref:System.Web.UI.ControlBuilder> クラスの基本クラスのメソッドには影響を及ぼしません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.AppendLiteralString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetChildControlType">
      <MemberSignature Language="C#" Value="public override Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetChildControlType(string tagName, class System.Collections.IDictionary attribs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
        <Parameter Name="attribs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="tagName">子コントロールのタグ名。</param>
        <param name="attribs">子コントロールに含まれる属性の配列。</param>
        <summary>取得、 <see cref="T:System.Type" /> の <see cref="T:System.Web.UI.WebControls.Xml" /> コントロールで子コントロールが指定しました。</summary>
        <returns>
          <see cref="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" /> メソッドをオーバーライドして、いつでも <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.XmlBuilder.GetChildControlType%2A> のメソッド、 <xref:System.Web.UI.WebControls.XmlBuilder> クラスのオーバーライド、 <xref:System.Web.UI.ControlBuilder.GetChildControlType%2A> のメソッド、 <xref:System.Web.UI.ControlBuilder> クラスです。 この実装の <xref:System.Web.UI.WebControls.XmlBuilder.GetChildControlType%2A> メソッドは常に返します `null`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="NeedsTagInnerText">
      <MemberSignature Language="C#" Value="public override bool NeedsTagInnerText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NeedsTagInnerText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.NeedsTagInnerText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定するかどうか、 <see cref="T:System.Web.UI.WebControls.Xml" /> コントロールがその内部のテキストを取得する必要があります。</summary>
        <returns>
          <see cref="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" /> メソッドをオーバーライドして、いつでも <see langword="true" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.XmlBuilder.NeedsTagInnerText%2A> のメソッド、 <xref:System.Web.UI.WebControls.XmlBuilder> クラスのオーバーライド、 <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> のメソッド、 <xref:System.Web.UI.ControlBuilder> クラスは、常に返す `true`します。  
  
 内部のテキストは、開始タグと終了タグのコントロールの間のテキストです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.NeedsTagInnerText" />
      </Docs>
    </Member>
    <Member MemberName="SetTagInnerText">
      <MemberSignature Language="C#" Value="public override void SetTagInnerText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetTagInnerText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlBuilder.SetTagInnerText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">内部のテキストとして挿入する値。</param>
        <summary>セット、 <see cref="T:System.Web.UI.WebControls.Xml" /> コントロールの内部テキ ストです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは読み込みます、 <xref:System.String> 整形式かどうかを確認する、XML ドキュメントに渡されました。 かどうかは、コードの呼び出し、 <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> のメソッド、 <xref:System.Web.UI.ControlBuilder> クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <see cref="T:System.String" /> で渡されるオブジェクトが適切な形式は XML です。</exception>
        <altmember cref="M:System.Web.UI.ControlBuilder.SetTagInnerText(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>