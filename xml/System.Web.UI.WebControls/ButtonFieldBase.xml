<Type Name="ButtonFieldBase" FullName="System.Web.UI.WebControls.ButtonFieldBase">
  <TypeSignature Language="C#" Value="public abstract class ButtonFieldBase : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ButtonFieldBase extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.ButtonField" /> や <see cref="T:System.Web.UI.WebControls.CommandField" /> クラスなど、ボタン フィールドの抽象基底クラスとして使用できます。<see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> クラスは、すべてのボタン フィールドに共通するメソッドとプロパティを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ButtonFieldBase> クラスは抽象基本クラス\] ボタンのフィールドし、メソッドとボタンのすべてのフィールドに共通するプロパティが含まれています。 このクラスは抽象であるため、そのインスタンスを直接作成することはできません。 代わりに、継承された非抽象クラスのインスタンスを作成する必要があります、 <xref:System.Web.UI.WebControls.ButtonFieldBase> クラスなど、 <xref:System.Web.UI.WebControls.ButtonField> または <xref:System.Web.UI.WebControls.CommandField> クラスです。  
  
 派生したオブジェクト、  <xref:System.Web.UI.WebControls.ButtonFieldBase> データ バインド コントロールが使用 \(など、 <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView> コントロール\) に表示されるレコードごとに 1 つまたは複数のボタンを表示します。 ボタン フィールドが使用されているデータ バインド コントロールによっては異なる方法で表示されます。 たとえば、 <xref:System.Web.UI.WebControls.GridView> コントロールが表示されますが、ボタンのフィールドを列として、 <xref:System.Web.UI.WebControls.DetailsView> コントロールが、行として表示します。  
  
 ボタン フィールドのボタンをクリックするには、親データ バインド コントロールの command イベントを発生させます。 Command イベントのイベント ハンドラーを提供することで、ボタンがクリックされたときに実行するカスタム ルーチンを指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> 昇給を制御、 <xref:System.Web.UI.WebControls.GridView.RowCommand> イベント、一方、 <xref:System.Web.UI.WebControls.DetailsView> 制御を発生させる、 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> イベントです。  
  
 表示されるボタンの種類を指定するには、使用、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> プロパティです。 ヘッダー セクションを非表示、 <xref:System.Web.UI.WebControls.ButtonFieldBase> オブジェクト、設定、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> プロパティです。  
  
> [!NOTE]
>  一部のデータ バインド コントロール \(など、 <xref:System.Web.UI.WebControls.GridView> コントロール\) を表示またはコントロールのすべてのヘッダー セクションのみを非表示にできます。 これらのデータ バインド コントロールをサポートしていない、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> プロパティ フィールドでは個々 のボタンをクリックします。 表示するか \(該当する場合\)、データ バインド コントロールのすべてのヘッダー セクションが非表示を使用して、 `ShowHeader` コントロールのプロパティです。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When you inherit from the <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> class, you must override the following member: <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonFieldBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonFieldBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Because the <xref:System.Web.UI.WebControls.ButtonFieldBase> class is an abstract class, you cannot create a <xref:System.Web.UI.WebControls.ButtonFieldBase> object directly.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
      </Docs>
    </Member>
    <Member MemberName="ButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはボタンのフィールドに表示するボタンの種類を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか。 既定値は、<see langword="ButtonType.Link" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> ボタン フィールドの表示ボタンの種類を指定するプロパティです。 次の表は、使用可能なボタンの種類を一覧表示します。  
  
|ボタンの種類の値|として表示されます。|  
|--------------|----------------|  
|<xref:System.Web.UI.WebControls.ButtonType.Button>|ボタン コントロールです。|  
|<xref:System.Web.UI.WebControls.ButtonType.Image>|イメージのボタンをクリックします。|  
|<xref:System.Web.UI.WebControls.ButtonType.Link>|リンクです。|  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> にボタンが表示されることを指定するプロパティ、 <xref:System.Web.UI.WebControls.ButtonField> のオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[ButtonFieldBaseButtonType\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseButtonType/CS/buttonfieldbasebuttontypecs.aspx#1)]
 [!code-vb[ButtonFieldBaseButtonType\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseButtonType/VB/buttonfieldbasebuttontypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値、 <see cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" /> プロパティは、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定時のボタンに検証を実行するかどうかを示す値、 <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> オブジェクトをクリックします。</summary>
        <value>
          <see langword="true" /> 検証時のボタンを実行する、 <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> がクリックされた場合、それ以外の場合 <see langword="false" />します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループとは無関係に検証できます。 使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> の検証グループの名前を指定するプロパティ、 <xref:System.Web.UI.WebControls.ButtonFieldBase> オブジェクトは、サーバーへのポストバック時に検証を実行します。  
  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> プロパティは、有効される場合にのみの値、 <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A> にプロパティが設定されている `true`します。 値を指定すると、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> プロパティには、指定したグループの一部である検証コントロールだけは、検証、 <xref:System.Web.UI.WebControls.ButtonFieldBase> 投稿がサーバーにバックアップします。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> プロパティおよび <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A> にプロパティが設定されている `true`, 、検証グループに割り当てられていないページ上のすべての検証コントロールが検証されるときに、 <xref:System.Web.UI.WebControls.ButtonFieldBase> 投稿をサーバーにします。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A> プロパティで、ボタンがクリックされたときに検証を実行する、 <xref:System.Web.UI.WebControls.ButtonField> のオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[ButtonFieldBaseCausesValidation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/CS/buttonfieldbasecausesvalidationcs.aspx#1)]
 [!code-vb[ButtonFieldBaseCausesValidation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/VB/buttonfieldbasecausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> を現在のプロパティをコピーする <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" />です。</param>
        <summary>派生したオブジェクトを現在のプロパティのコピー、 <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> を指定したクラス <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName> にから派生した現在のオブジェクトのプロパティをコピーする方法、 <xref:System.Web.UI.WebControls.ButtonFieldBase> クラスを <xref:System.Web.UI.WebControls.DataControlField> で渡されるオブジェクト、 `newField` パラメーター。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Control developers should override the <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method to copy any properties that are added to the custom control. When overriding the <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method for the base class so that the base class properties are copied.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public override bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはヘッダー セクションに表示するかどうかを示す値を設定、 <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> オブジェクトです。</summary>
        <value>
          <see langword="true" /> ヘッダー セクションを表示するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> のヘッダー セクションを非表示のプロパティ、 <xref:System.Web.UI.WebControls.ButtonFieldBase> オブジェクトです。 ヘッダー セクションを表示するには、設定、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> プロパティを `true`します。  
  
> [!NOTE]
>  一部のデータ バインド コントロール \(など、 <xref:System.Web.UI.WebControls.GridView> コントロール\) を表示またはコントロールのすべてのヘッダー セクションのみを非表示にできます。 これらのデータ バインド コントロールをサポートしていない、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> プロパティ フィールドでは個々 のボタンをクリックします。 表示するか \(該当する場合\)、データ バインド コントロールのすべてのヘッダー セクションが非表示を使用して、 `ShowHeader` コントロールのプロパティです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> のヘッダー セクションを表示するプロパティを <xref:System.Web.UI.WebControls.ButtonField> 内のオブジェクト、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。  
  
 [!code-csharp[ButtonFieldBaseShowHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseShowHeader/CS/buttonfieldbaseshowheadercs.aspx#1)]
 [!code-vb[ButtonFieldBaseShowHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseShowHeader/VB/buttonfieldbaseshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定時のボタンを検証する検証コントロールのグループの名前、 <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> オブジェクトをクリックします。</summary>
        <value>内のボタンのときに検証する検証グループの名前、 <see cref="T:System.Web.UI.WebControls.ButtonFieldBase" /> をクリックします。 既定値は空の文字列 \(""\)、ことを示します、 <see cref="P:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup" /> プロパティが設定されていません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> 時のボタンを検証する検証のグループを指定するプロパティ、 <xref:System.Web.UI.WebControls.ButtonFieldBase> オブジェクトをクリックします。 指定した検証グループで、検証コントロールのみが検証されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation%2A> にプロパティを設定する必要があります `true` の <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> が影響するプロパティです。  
  
 検証グループの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.BaseValidator.ValidationGroup%2A?displayProperty=fullName>します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup%2A> でボタンをクリックすると、検証コントロールの特定のグループのみが検証されるかを指定するプロパティ、 <xref:System.Web.UI.WebControls.ButtonField> のオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[ButtonFieldBaseCausesValidation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/CS/buttonfieldbasecausesvalidationcs.aspx#1)]
 [!code-vb[ButtonFieldBaseCausesValidation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldBaseCausesValidation/VB/buttonfieldbasecausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.CausesValidation" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ValidationGroup" />
      </Docs>
    </Member>
  </Members>
</Type>