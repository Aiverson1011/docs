<Type Name="ImageButton" FullName="System.Web.UI.WebControls.ImageButton">
  <TypeSignature Language="C#" Value="public class ImageButton : System.Web.UI.WebControls.Image, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageButton extends System.Web.UI.WebControls.Image implements class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ImageButton" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Image</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>画像を表示し、画像の上でのマウス クリックに応答するコントロール。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [ユーザーがクリックされたか判断](#DeterminingWhereTheUserClicked)  
  
-   [ImageButton コントロールと検証](#ButtonControlsAndValidation)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言構文](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## はじめに  
 使用して、 <xref:System.Web.UI.WebControls.ImageButton> マウスのクリックに応答するイメージを表示するコントロール。  
  
 両方の <xref:System.Web.UI.WebControls.ImageButton.Click> と <xref:System.Web.UI.WebControls.ImageButton.Command> イベントが発生するときに、 <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。  
  
 使用することができます、 <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> させるイベント ハンドラー、 <xref:System.Web.UI.WebControls.ImageButton> コマンド ボタンのような動作を制御します。 コマンド名に関連付けることにより、コントロールを使用して、 <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> プロパティです。 これにより、複数 <xref:System.Web.UI.WebControls.ImageButton> 、同じ Web ページに表示するコントロール。 値、 <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> 内プロパティをプログラムで発見し、 <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> 時に適切なアクションを決定するイベント ハンドラーそれぞれ <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。<xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> プロパティは、昇順を指定するなどのコマンドに関する追加情報を渡すも使用できます。  
  
 使用して、 <xref:System.Web.UI.WebControls.ImageButton> コントロールは、ASP.NET を使用してのような <xref:System.Web.UI.WebControls.Button> コントロールです。 詳細については、「[Button Web Server Controls Overview](http://msdn.microsoft.com/ja-jp/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf)」を参照してください。 クラスの概要と、 <xref:System.Web.UI.WebControls.Button> コントロールです。  
  
<a name="DeterminingWhereTheUserClicked"></a>   
## ユーザーがクリックされたか判断  
 使用して、 <xref:System.Web.UI.WebControls.ImageButton.OnClick%2A> イベント ハンドラーで、イメージがクリックされた座標プログラムで判定できます。 座標の値に基づいて、応答し、コード化できます。 原点 \(0, 0\) が、イメージの左上隅にあることに注意してください。  
  
<a name="ButtonControlsAndValidation"></a>   
## ImageButton コントロールと検証  
 既定では、ページの検証が実行されるときに、 <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。 ページの検証では、入力コントロールが検証コントロールで指定された検証規則に準拠のすべてのページ上の検証コントロールに関連付けられているかどうかを決定します。 ページの検証の発生を防ぐためには、設定、 <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> プロパティを `false`します。  
  
<a name="accessibility"></a>   
## ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) と [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="DeclarativeSyntax"></a>   
## 宣言構文  
  
```  
<asp:ImageButton  
    AccessKey="string"  
    AlternateText="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    DescriptionUrl="uri"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageAlign="NotSet|Left|Right|Baseline|Top|Middle|Bottom|  
        AbsBottom|AbsMiddle|TextTop"  
    ImageUrl="uri"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## 例  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=192874)します。  
  
 次のコード例では、作成、 <xref:System.Web.UI.WebControls.ImageButton> イメージがクリックされた座標を表示するコントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Classic ImageButton.Click Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.Click Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic ImageButton.Click Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.Click Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.Image" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ImageButton" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.ImageButton> クラスです。  
  
   
  
## 例  
 次の例では、作成しの新しいインスタンスを初期化する方法、 <xref:System.Web.UI.WebControls.ImageButton> クラスです。  
  
 [!code-csharp[Classic ImageButton.ImageButton Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.ImageButton Example/CS/source.cs#1)]
 [!code-vb[Classic ImageButton.ImageButton Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.ImageButton Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントで表示する出力ストリーム。</param>
        <summary>属性を追加、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> クライアントに表示する出力ストリームにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.OnPreRender%2A> からカスタム クラスを派生させる際に、主にコントロールの開発者によってメソッドが使用される、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.ImageButton.AddAttributesToRender%2A> カスタム サーバー コントロールのメソッドできるように、 <xref:System.Web.UI.WebControls.ImageButton> 細い罫線とテキストが常に表示されます。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルの最初の部分は、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 2 番目の部分は、コード ファイル \(.cs は c\#\) または .vb は Visual Basic のいずれかとして保存する必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[CustomImageButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/CS/custom_imagebutton_addattributestorendercs.aspx#1)]
 [!code-vb[CustomImageButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/VB/custom_imagebutton_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomImageButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/CS/custom_imagebutton_addattributestorender.cs#2)]
[!code-vb[CustomImageButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonAddAttributesToRender/VB/custom_imagebutton_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証を実行するかどうかを示す値を設定するときに、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールがクリックされました。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールがクリックされたときに検証を実行する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、ページの検証が実行されるときに、 <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。 ページの検証では、入力コントロールが検証コントロールで指定された検証規則に準拠のすべてのページ上の検証コントロールに関連付けられているかどうかを決定します。  
  
 指定したり、クライアントとサーバーの両方で検証を実行するかどうかを決定するときに、 <xref:System.Web.UI.WebControls.ImageButton> を使用してコントロールがクリックされた、 <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> プロパティです。 検証が実行されているを防ぐためには、設定、 <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> プロパティを `false`します。  
  
 通常、このプロパティに設定 `false` の検証が、ボタンがクリックされたときに実行されるようにするには、リセットまたはクリア\] ボタンをクリックします。  
  
 ときの値、 <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> にプロパティが設定されている `true`, 、使用することも、 <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> の検証グループの名前を指定するプロパティ、 <xref:System.Web.UI.WebControls.ImageButton> コントロールが原因で検証します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> ページ検証の発生を防ぐためにプロパティです。 通知方法、 <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> メソッドをアクティブにない各検証コントロール個別にします。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[ImageButtonCausesValidation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButtonCausesValidation/CS/imagebuttoncausesvalidationcs.aspx#1)]
 [!code-vb[ImageButtonCausesValidation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButtonCausesValidation/VB/imagebuttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Web.UI.ImageClickEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.ImageClickEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ImageButton.Click" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ImageClickEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ImageButton" /> がクリックされた時点で発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.ImageButton.Click> event is raised when the <xref:System.Web.UI.WebControls.ImageButton> control is clicked.  
  
> [!NOTE]
>  This event causes the page to be posted back to the server.  
  
 For more information about handling events, see [How to: Consume Events in a Web Forms Application](http://msdn.microsoft.com/ja-jp/73bf8638-c4ec-4069-b0bb-a1dc79b92e32).  
  
   
  
## 例  
 The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.ImageButton.Click> event to display the coordinates at which the user clicks the image.  
  
> [!NOTE]
>  The following code sample uses the single\-file code model and may not work correctly if copied directly into a code\-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-csharp[Classic ImageButton.Click Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.Click Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic ImageButton.Click Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.Click Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" />
        <altmember cref="T:System.Web.UI.ImageClickEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ImageButton.Command" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ImageButton" /> がクリックされた時点で発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.ImageButton.Command> event is raised when an <xref:System.Web.UI.WebControls.ImageButton> control is clicked.  
  
> [!NOTE]
>  The <xref:System.Web.UI.WebControls.ImageButton.Command> event is raised through the control hierarchy in the form of the **languageKeyword tag is not supported!!!!**  
> .  
  
> [!NOTE]
>  This event causes the page to post back to the server.  
  
 For more information about handling events, see [How to: Consume Events in a Web Forms Application](http://msdn.microsoft.com/ja-jp/73bf8638-c4ec-4069-b0bb-a1dc79b92e32).  
  
   
  
## 例  
 The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.ImageButton.Command> event to determine which <xref:System.Web.UI.WebControls.ImageButton> control is clicked.  
  
> [!NOTE]
>  The following code sample uses the single\-file code model and may not work correctly if copied directly into a code\-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-csharp[Classic ImageButton.CommandArgument Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic ImageButton.CommandArgument Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に関する追加情報を提供する省略可能な引数、 <see cref="P:System.Web.UI.WebControls.ImageButton.CommandName" /> プロパティです。</summary>
        <value>補完する、省略可能な引数、 <see cref="P:System.Web.UI.WebControls.ImageButton.CommandName" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合によっては、複数 <xref:System.Web.UI.WebControls.ImageButton> コントロールを選択して関連の同じ値を共有、 <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> プロパティなど `Sort`します。 このプロパティを補足するために使用して、 <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> などを実行するコマンドに関する追加情報を持つプロパティ `Ascending`します。 値、 <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> と <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> プロパティがで通常使用される、 <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> 時にアクションを決定するイベント ハンドラー、 <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> とコマンド引数を関連付けるプロパティ、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Classic ImageButton.CommandArgument Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic ImageButton.CommandArgument Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <altmember cref="T:System.Web.UI.WebControls.Image" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に関連付けられているコマンド名、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールです。</summary>
        <value>コマンド名に関連付けられている、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールです。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、コマンドを実行するときに、 <xref:System.Web.UI.WebControls.ImageButton> など、コントロールがクリックされた `Sort`, 、`Cancel`, 、または `Edit`です。 これにより、複数 <xref:System.Web.UI.WebControls.ImageButton> 、同じ Web ページに表示するコントロール。 このプロパティの値、プログラムで識別できます、 <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> 時に適切なアクションを決定するイベント ハンドラーそれぞれ <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。  
  
 使用して、昇順の並べ替え順序を指定するなどのコマンドについての補足情報を含めることのできる、 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> プロパティです。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> でコマンド名に関連付けるプロパティ、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Classic ImageButton.CommandName Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandName Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic ImageButton.CommandName Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandName Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public override bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> サーバーへのポストバックを実行するときにクリックします。</summary>
        <value>
          <see langword="true" /> コントロールが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> プロパティを指定するかどうか、 <xref:System.Web.UI.WebControls.ImageButton> サーバーへのポストバックを実行するときにクリックします。 このプロパティを設定する場合は、 `false`, 、コントロールのサイズ、ページ上の表示が、ポストバック イベントをクリックしたときに発生しません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> プロパティです。 ページには 2 つ <xref:System.Web.UI.WebControls.ImageButton> コントロールです。<xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> にプロパティが設定されている `true` の `EnabledImageButton` イメージ ボタンをクリックしたときに、サーバーへのポストバックが増大します。<xref:System.Web.UI.WebControls.ImageButton.Enabled%2A> にプロパティが設定されている `false` の `NotEnabledImageButton` イメージ ボタンをクリックすると、サーバーに送信しません\] ページをレンダリングすることです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[ImageButton.Enabled\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.Enabled/CS/imagebutton.enabledcs.aspx#1)]
 [!code-vb[ImageButton.Enabled\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.Enabled/VB/imagebutton.enabledvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateEmptyAlternateText">
      <MemberSignature Language="C#" Value="public override bool GenerateEmptyAlternateText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateEmptyAlternateText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールが空の文字列値の代替テキスト属性を生成するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="false" />, 、ことを示す、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールは代替テキストを生成していない属性の場合、 <see cref="P:System.Web.UI.WebControls.Image.AlternateText" /> プロパティが空です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Web.UI.WebControls.ImageButton> での表示を制御、 <xref:System.Web.UI.WebControls.Image.AlternateText%2A> プロパティを使用して、 `alt` 属性です。 ときに、 <xref:System.Web.UI.WebControls.Image.AlternateText%2A> プロパティが設定されていない、 <xref:System.Web.UI.WebControls.ImageButton> コントロールは含まれません、 `alt` 属性でコントロールの描画の代替テキストを指定します。  
  
 XHTML ドキュメント型定義、 `alt` イメージ コントロールの属性です。 ただし、ユーザー補助のベスト プラクティスを勧め image コントロールを Web ページのコンテキストに関する情報を伝達しないが指定する必要があります、 `alt` 属性です。 設定して XHTML とアクセシビリティの両方の要件を満たし、 <xref:System.Web.UI.WebControls.Image.AlternateText%2A> プロパティを `true`します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">このプロパティを設定しようとしました。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Image.AlternateText" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.GetPostBackOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Web.UI.PostBackOptions" /> を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールのポストバック動作します。</summary>
        <returns>A <see cref="T:System.Web.UI.PostBackOptions" /> を表す、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールのポストバック動作します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.GetPostBackOptions%2A> メソッドは、作成、 <xref:System.Web.UI.PostBackOptions> を表すオブジェクト、 <xref:System.Web.UI.WebControls.ImageButton> コントロールのポストバック動作します。<xref:System.Web.UI.PostBackOptions> オブジェクトが通常に渡されます、 <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> 取得に使用されるクライアント側\-スクリプト関数への参照を呼び出されたときに、メソッドにより、サーバーのページにポストバックをします。  
  
 拡張する場合、このメソッドは、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.ImageButton> クラスです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can override the <see cref="M:System.Web.UI.WebControls.ImageButton.GetPostBackOptions" /> method in your derived class to modify the postback options for the button control, or to call client-side script when the button is clicked. Be sure to call the base class's <see cref="M:System.Web.UI.WebControls.ImageButton.GetPostBackOptions" /> method so that the standard postback options are set.</para>
        </block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コレクション内のエントリのインデックス指定に使用するキー値。</param>
        <param name="postCollection">ポスト情報を格納する <see cref="T:System.Collections.Specialized.NameValueCollection" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールのポストされたデータを処理します。</summary>
        <returns>返します。 <see langword="false" /> すべてのケースのです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.LoadPostData%2A> からカスタム クラスを派生させる際に、主にコントロールの開発者によってメンバーが使用される、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
 <xref:System.Web.UI.WebControls.ImageButton> かどうかをチェック、x と y の値がアップロードされたイメージが、ユーザーがクリックしてされたことを示します。<xref:System.Web.UI.WebControls.ImageButton> 、イベント処理フェーズ中にイベントが発生するページに登録します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.ImageClickEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.ImageClickEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.ImageClickEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.ImageClickEventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ImageButton.Click" /> イベントを処理することができ、 <see cref="E:System.Web.UI.WebControls.ImageButton.Click" /> イベントを直接します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.Click> イベントが発生したときに、 <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。 使用して、 <xref:System.Web.UI.WebControls.ImageButton.OnClick%2A> イベント ハンドラーで、イメージがクリックされた座標プログラムで判定できます。 これらの座標の値に基づいて、応答し、コード化できます。 原点 \(0, 0\) が、イメージの左上隅にあることに注意してください。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[How to: Consume Events in a Web Forms Application](http://msdn.microsoft.com/ja-jp/73bf8638-c4ec-4069-b0bb-a1dc79b92e32)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ImageButton.OnClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次の例には、 <xref:System.Web.UI.WebControls.ImageButton.Click> 、ユーザーが画像をクリックした座標を表示するイベントです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Classic ImageButton.Click Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.Click Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic ImageButton.Click Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.Click Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Click" />
        <altmember cref="T:System.Web.UI.ImageClickEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定する際に実行するクライアント側スクリプト、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールの <see cref="E:System.Web.UI.WebControls.ImageButton.Click" /> イベントが発生します。</summary>
        <value>ときに実行されるクライアント側スクリプト、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールの <see cref="E:System.Web.UI.WebControls.ImageButton.Click" /> イベントが発生します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ImageButton.OnClientClick%2A> ときに実行されるその他のクライアント側スクリプトを指定するプロパティ、 <xref:System.Web.UI.WebControls.ImageButton> コントロールの <xref:System.Web.UI.WebControls.ImageButton.Click> イベントが発生します。 このプロパティが表示されるを指定するスクリプト、 <xref:System.Web.UI.WebControls.ImageButton> コントロールの `OnClick` だけでなく、コントロールの属性は、クライアント側スクリプトをあらかじめ定義されています。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ImageButton.Command" /> イベントを処理することができ、 <see cref="E:System.Web.UI.WebControls.ImageButton.Command" /> イベントを直接します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.Command> イベントが発生したときに、 <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。<xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> イベント ハンドラーを使用する、 <xref:System.Web.UI.WebControls.ImageButton> コマンド ボタンのような動作を制御します。 コマンド名に関連付けることにより、コントロールを使用して、 <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> プロパティです。 これにより、複数 <xref:System.Web.UI.WebControls.ImageButton> Web ページに表示するコントロール。 このプロパティの値、プログラムで識別できます、 <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> 時に適切なアクションを決定するイベント ハンドラーそれぞれ <xref:System.Web.UI.WebControls.ImageButton> コントロールがクリックされました。<xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> プロパティは、昇順を指定するなどのコマンドに関する追加情報を渡すも使用できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ImageButton.Command> のフォームでコントロールの階層をイベントは、 `BubbleEvent`です。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[How to: Consume Events in a Web Forms Application](http://msdn.microsoft.com/ja-jp/73bf8638-c4ec-4069-b0bb-a1dc79b92e32)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次の例には、 <xref:System.Web.UI.WebControls.ImageButton.Command> 決定するためのイベント <xref:System.Web.UI.WebControls.ImageButton> コントロールをクリックします。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Classic ImageButton.CommandArgument Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic ImageButton.CommandArgument Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic ImageButton.CommandArgument Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>クライアントに表示する前に、イメージがクリックしてされたかどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.OnPreRender%2A> からカスタム クラスを派生させる際に、主にコントロールの開発者によってメソッドが使用される、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.ImageButton.OnPreRender%2A> メソッドことは常に、カスタムの細い枠を表示できるように <xref:System.Web.UI.WebControls.ImageButton> サーバー コントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 コード サンプルの最初の部分は、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 2 番目の部分は、.cs ファイル \(C\# の場合\) か、.vb ファイル \(Visual Basic\) でなければなりません。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[CustomImageButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonOnPreRender/CS/custom_imagebutton_onprerendercs.aspx#1)]
 [!code-vb[CustomImageButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonOnPreRender/VB/custom_imagebutton_onprerendervb.aspx#1)]  
[!code-csharp[CustomImageButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonOnPreRender/CS/custom_imagebutton_onprerender.cs#2)]
[!code-vb[CustomImageButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonOnPreRender/VB/custom_imagebutton_onprerender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.PostBackUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を現在のページの場合にポストするページの URL、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールをクリックします。</summary>
        <value>現在のページの場合にポストする Web ページの URL、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールをクリックします。 既定値は空の文字列 \(""\)、それが原因で、ページをポスト バックするためです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> プロパティでは、post を使用してクロス ページを実行することができます、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。 設定、 <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> プロパティを投稿するときに、Web ページの URL を <xref:System.Web.UI.WebControls.ImageButton> コントロールをクリックします。 などを指定する `Page2.aspx` を含むページにより、 <xref:System.Web.UI.WebControls.ImageButton> コントロールへの投稿を `Page2.aspx`します。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> プロパティには、ページ自身にポストします。  
  
> [!IMPORTANT]
>  サーバー側の検証コントロールとクロスページ ポストバックを実行するときに、ことを確認する必要があります、ページの <xref:System.Web.UI.Page.IsValid%2A> プロパティは `true` ポストバックを処理する前にします。 クロスページ ポストバックの場合は、確認するためのページは、PreviousPage です。 次の Visual Basic コードでは、これを行う方法を示しています。  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 ページ間ポスティング方法の詳細については、次を参照してください。 [Cross\-Page Posting in an ASP.NET Web Page](http://msdn.microsoft.com/ja-jp/fedf234e-b7c4-4644-a9e8-c1c0870b043b)します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> クロスページ post を実行するプロパティです。 ユーザーがクリックしたとき、 <xref:System.Web.UI.WebControls.ImageButton> コントロール、ページがポストで指定された対象のページにテキスト ボックスに入力された値、 <xref:System.Web.UI.WebControls.ImageButton.PostBackUrl%2A> プロパティです。 このサンプルを実行するには、このコード例と同じディレクトリにターゲット ページのファイルを作成する必要があります。 移動先のページのコードは、次の例で示されています。  
  
 [!code-csharp[ImageButton.PostBackUrlProperty\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.PostBackUrlProperty/CS/imagebutton.postbackurlpropertycs.aspx#1)]
 [!code-vb[ImageButton.PostBackUrlProperty\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.PostBackUrlProperty/VB/imagebutton.postbackurlpropertyvb.aspx#1)]  
  
 次のコード例では、使用して、 <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> から別のページを使用して送信された値にアクセスするプロパティ、 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> プロパティです。 このページでは、ユーザーに表示されますが、前のページから投稿された文字列を取得します。 このコード例を直接実行しようとする場合はエラーが表示ための値、 `Text` するフィールドは `null`です。 代わりに、対象ページを作成し、前の例のコードと同じディレクトリにファイルを配置するこのコードを使用します。 ファイルの名前が指定された値に対応する必要があります、 <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> 前の例ではプロパティです。 前の例のコードを実行するとこのページは自動的に実行クロスページ post が発生しました。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[ImageButton.PostBackUrlPage2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.PostBackUrlPage2/CS/imagebutton.postbackurlpage2cs.aspx#1)]
 [!code-vb[ImageButton.PostBackUrlPage2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.PostBackUrlPage2/VB/imagebutton.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールのイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.RaisePostBackEvent%2A> からカスタム クラスを派生させる際に、主にコントロールの開発者によってメンバーが使用される、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
 このメソッドがによって内部的に使用される、 <xref:System.Web.UI.WebControls.ImageButton> させる、クリックしてされたときのコントロール、 <xref:System.Web.UI.WebControls.ImageButton.Click> イベントと、定義されている場合、 <xref:System.Web.UI.WebControls.ImageButton.Command> イベントです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
        <altmember cref="E:System.Web.UI.WebControls.ImageButton.Click" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールの状態が変化したことを ASP.NET アプリケーションに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent%2A> からカスタム クラスを派生させる際に、主にコントロールの開発者によってメンバーが使用される、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
 このメソッドをオーバーライドして、変更のイベントを発生させる派生クラスで、 <xref:System.Web.UI.WebControls.ImageButton> サーバーへのポストバックとを制御します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> プロパティが <see langword="false" /> の場合、レンダリングされた HTML 要素の <see langword="disabled" /> 属性を "無効" に設定するかどうかを示す値を取得します。</summary>
        <value>
          <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> プロパティが <c>4.0</c> より低い ASP.NET のバージョンを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、コントロールが無効になっているときに ASP.NET がそのコントロールの HTML をどのように描画するかを示します。 場合は、このプロパティは `true`, 、ASP.NET では、 `disabled` 属性のコントロールが無効にするとします。 場合は、このプロパティは `false`, 、ASP.NET では、 `class` 属性のコントロールが無効にするとします。 詳細については、「<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">
          <c>postCollection</c> をインデックス化するために使用される、コントロールのキー識別子。</param>
        <param name="postCollection">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> コントロール id によってインデックス付けされた値の情報を含むコレクション。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />」を参照してください。</summary>
        <returns>ポストバックの結果、サーバー コントロールの状態が変化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName> メソッドは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ImageButton> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName> メソッドは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ImageButton> のインスタンスが <xref:System.Web.UI.IPostBackDataHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName> メソッドは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ImageButton> のインスタンスが <xref:System.Web.UI.IPostBackEventHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IButtonControl.Text">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IButtonControl.Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IButtonControl.Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IButtonControl.Text" />」を参照してください。</summary>
        <value>ボタンに表示されるテキスト キャプション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.IButtonControl.Text%2A> メンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ImageButton> のインスタンスが <xref:System.Web.UI.WebControls.IButtonControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> に対応する値、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.TagKey%2A> からカスタム クラスを派生させる際に、主にコントロールの開発者によってプロパティが使用される、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。  
  
 使用して、 <xref:System.Web.UI.WebControls.ImageButton.TagKey%2A> を決定するプロパティ、 <xref:System.Web.UI.HtmlTextWriterTag> に関連付けられた値、 <xref:System.Web.UI.WebControls.ImageButton> コントロールです。 このプロパティは、常に基本実装をオーバーライド `HtmlTextWriterTag.Input`します。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.ImageButton.TagKey%2A> カスタム メソッド <xref:System.Web.UI.WebControls.ImageButton> Input タグを常に返されるようにを制御します。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 コード サンプルの最初の部分は、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 2 番目の部分は、.cs ファイル \(C\# の場合\) か、.vb ファイル \(Visual Basic\) でなければなりません。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[CustomImageButtonTagKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonTagKey/CS/custom_imagebutton_tagkeycs.aspx#1)]
 [!code-vb[CustomImageButtonTagKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonTagKey/VB/custom_imagebutton_tagkeyvb.aspx#1)]  
[!code-csharp[CustomImageButtonTagKey#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomImageButtonTagKey/CS/custom_imagebutton_tagkey.cs#2)]
[!code-vb[CustomImageButtonTagKey#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomImageButtonTagKey/VB/custom_imagebutton_tagkey.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="protected virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールの <see cref="P:System.Web.UI.WebControls.Image.AlternateText" /> プロパティです。</summary>
        <value>値、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> コントロールの <see cref="P:System.Web.UI.WebControls.Image.AlternateText" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ImageButton.Text%2A> プロパティは、コードから直接呼び出されるものではありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Image.AlternateText" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ImageButton.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのグループを設定する、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> 時に、サーバーへのポストバックします。</summary>
        <value>なるコントロールのグループ、 <see cref="T:System.Web.UI.WebControls.ImageButton" /> 時に、サーバーへのポストバックします。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各検証グループは、ページ上の他の検証グループとは無関係に検証できます。 使用して、 <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> の検証グループの名前を指定するプロパティ、 <xref:System.Web.UI.WebControls.ImageButton> 時に、サーバーへのポストバックします。 このプロパティは、有効される場合にのみの値、 <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> にプロパティが設定されている `true`します。 値を指定すると、 <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> プロパティには、指定したグループの一部である検証コントロールだけは、検証、 <xref:System.Web.UI.WebControls.ImageButton> コントロールは、サーバーにポストバックします。 このプロパティの値を指定しないかどうか、 <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> にプロパティが設定されている `true`, 、検証グループに割り当てられていないページ上のすべての検証コントロールは、サーバーへのコントロールのポストバック時に検証されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> プロパティを検証するためにコントロールを指定する、 <xref:System.Web.UI.WebControls.ImageButton> コントロールは、サーバーにポストバックします。 ページには、ユーザーからのデータをキャプチャする 3 つのテキスト ボックス、3 つが含まれています。 <xref:System.Web.UI.WebControls.RequiredFieldValidator> こと、ユーザーは空白でないテキスト ボックスをように制御します。<xref:System.Web.UI.WebControls.RequiredFieldValidator> についてでは、最初の 2 つのテキスト ボックスの制御、 `PersonalInfoGroup` 検証グループおよび <xref:System.Web.UI.WebControls.RequiredFieldValidator> 、3 つ目のテキスト ボックスが制御、 `LocationInfoGroup` 検証グループです。`ImageButton1` がクリックすると、検証グループ内のコントロールのみ `PersonalInfoGroup` 検証されます。`ImageButton2` がクリックすると、検証グループ内のコントロールのみ `LocationInfoGroup` を検証します。  
  
 [!code-csharp[ImageButton.ValidationGroup\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ImageButton.ValidationGroup/CS/imagebutton.validationgroupcs.aspx#1)]
 [!code-vb[ImageButton.ValidationGroup\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ImageButton.ValidationGroup/VB/imagebutton.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>