<Type Name="GridView" FullName="System.Web.UI.WebControls.GridView">
  <TypeSignature Language="C#" Value="public class GridView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IDataKeysControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.ICallbackContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IFieldControl, System.Web.UI.WebControls.IPersistedSelector, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GridView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IDataKeysControl, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.ICallbackContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IFieldControl, class System.Web.UI.WebControls.IPersistedSelector, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.GridView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICallbackContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IFieldControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.GridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>各列がフィールドを表し、各行がレコードを表す表にデータ ソースの値を表示します。<see cref="T:System.Web.UI.WebControls.GridView" /> コントロールを使用すれば、これらの項目の選択、並べ替え、編集ができます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [列フィールド](#column_fields)  
  
-   [データへのバインド](#binding_to_data)  
  
-   [データ操作](#data_operations)  
  
-   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.GridView> コントロールを使用して、テーブルのデータ ソースの値を表示します。 レコードが各行中に、各列は、フィールドを表します。<xref:System.Web.UI.WebControls.GridView> コントロールは、次の機能をサポートします。  
  
-   などのデータ ソース コントロールにバインド <xref:System.Web.UI.WebControls.SqlDataSource>します。  
  
-   組み込みの並べ替え機能します。  
  
-   組み込みは、更新および機能を削除します。  
  
-   ページング機能が組み込まれています。  
  
-   組み込みの行の選択機能。  
  
-   プログラムでアクセス、 <xref:System.Web.UI.WebControls.GridView> オブジェクト モデルを動的にプロパティを設定、イベントを処理します。  
  
-   複数のキー フィールドです。  
  
-   ハイパーリンク列の複数のデータ フィールド。  
  
-   テーマとスタイルを使用したカスタマイズ可能な外観です。  
  
-   ASP.NET で使用できるその他のデータ バインド コントロールの概要については、次を参照してください。 [ASP.NET Data\-Bound Web Server Controls Overview](http://msdn.microsoft.com/ja-jp/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96)します。  
  
> [!NOTE]
>  慣れている場合、 <xref:System.Web.UI.WebControls.DataGrid> から .NET Framework version 1.0 では、コントロール、 <xref:System.Web.UI.WebControls.GridView> コントロールが、後継、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
<a name="column_fields"></a>   
## 列フィールド  
 内の各列、 <xref:System.Web.UI.WebControls.GridView> コントロールがによって表される、 <xref:System.Web.UI.WebControls.DataControlField> オブジェクトです。 既定では、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> にプロパティが設定されている `true`, を作成する、 <xref:System.Web.UI.WebControls.AutoGeneratedField> データ ソース内の各フィールドのオブジェクト。 各フィールドが列として表示し、 <xref:System.Web.UI.WebControls.GridView> 各フィールドがデータ ソースに表示される順序で制御します。  
  
 手動でフィールドに表示する列を制御することができます、 <xref:System.Web.UI.WebControls.GridView> コントロールを設定して、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> プロパティを `false` と列のフィールド コレクションを定義します。 別の列フィールドの種類は、コントロールの列の動作を決定します。 次の表は、使用できる別の列フィールドの種類を一覧表示します。  
  
|列フィールドの種類|説明|  
|---------------|--------|  
|<xref:System.Web.UI.WebControls.BoundField>|データ ソースのフィールドの値を表示します。 これは、既定の列の型、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.ButtonField>|内の各項目のコマンド ボタンを表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 これにより、追加または削除\] ボタンなどのカスタム ボタン コントロールの列を作成することができます。|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|内の各項目のチェック ボックスを表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 この種類の列フィールドはブール値を持つフィールドを表示します。|  
|<xref:System.Web.UI.WebControls.CommandField>|定義済みの選択\] を実行するコマンド ボタンの表示、編集または削除操作。|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|データ ソースのフィールドの値をハイパーリンクとして表示します。 この列のフィールド型では、2 番目のフィールドをハイパーリンクの URL にバインドすることができます。|  
|<xref:System.Web.UI.WebControls.ImageField>|内の各項目のイメージを表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.TemplateField>|各項目に対してユーザー定義の内容を表示する、 <xref:System.Web.UI.WebControls.GridView> 、指定したテンプレートに応じてコントロールです。 この列のフィールド型では、カスタムの列フィールドを作成することができます。|  
  
 列のフィールド コレクションを宣言で定義するには、最初に追加の開閉 `<Columns>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 次に、開始タグと終了の間に挿入する列フィールドをリスト `<Columns>` タグ。 指定された列を追加、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 順序でコレクションが一覧表示します。<xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションは、列のコントロールのフィールドし、列のフィールドをプログラムで管理することができますすべてを保存、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 明示的に宣言された列のフィールドは、自動的に生成された列のフィールドと組み合わせて表示できます。 両方を使用する場合に最初に明示的に宣言された列のフィールドがレンダリング後に自動的に生成される列フィールドがされます。  
  
> [!NOTE]
>  自動的に生成される列フィールドに追加されない、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションです。  
  
<a name="binding_to_data"></a>   
## データへのバインド  
 <xref:System.Web.UI.WebControls.GridView> コントロールをデータ ソース コントロールにバインドできる \(など、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールまたは <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール\) またはを実装する任意のデータ ソースのコレクションに、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイスよう <xref:System.Data.DataView?displayProperty=fullName>, 、<xref:System.Collections.ArrayList?displayProperty=fullName>, 、<xref:System.Collections.Generic.List%601?displayProperty=fullName>, 、またはその他のコレクション型。 次のメソッドのいずれかを使用してバインド、 <xref:System.Web.UI.WebControls.GridView> 適切なデータ ソースの種類を制御します。  
  
-   データ ソース コントロールにバインドする、 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridView> への制御、 <xref:System.Web.UI.Control.ID%2A> データ ソース コントロールの値。<xref:System.Web.UI.WebControls.GridView> コントロールは自動的に指定されたデータ ソース コントロールにバインドし、活用できるデータ ソースを並べ替え、更新、削除、およびページングを実行するコントロールの機能です。 これは、優先データにバインドする方法です。  
  
-   実装するデータ ソースにバインドする、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイスをプログラムで設定、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridView> データ ソースを制御し、呼び出す、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドです。 このメソッドを使用する場合、 <xref:System.Web.UI.WebControls.GridView> コントロールでは組み込みの並べ替え、update、delete、およびページング機能を提供しません。 適切なイベントを使用してこの機能を提供する必要があります。  
  
 データ バインディングの詳細については、次を参照してください。 [ASP.NET データ アクセス コンテンツ マップ](http://msdn.microsoft.com/ja-jp/f9219396-a0fa-481f-894d-e3d9c67d64f2)します。  
  
> [!NOTE]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 可能であれば、強くお勧めの値が HTML エンコードする前に、このコントロールに表示されます \(、 <xref:System.Web.UI.WebControls.BoundField> を HTML エンコード値を既定ではクラス\)。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、「[Introduction to the Validation Controls](http://msdn.microsoft.com/ja-jp/3c0e7514-cff2-4bed-936d-ee3f7b740190)」を参照してください。  
  
<a name="data_operations"></a>   
## データ操作  
 <xref:System.Web.UI.WebControls.GridView> コントロールには、並べ替え、更新、削除、選択、およびコントロール内の項目を複数のページにユーザーをできるようにする多くの組み込み機能が用意されています。 ときに、 <xref:System.Web.UI.WebControls.GridView> コントロールがデータ ソース コントロールにバインドされている、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソース コントロールの機能を活用し、自動を提供を並べ替える、更新、および機能を削除します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> コントロールの並べ替え、更新、およびその他の種類のデータ ソースと削除のサポートを提供します。 ただし、これらの操作の実装に適切なイベント ハンドラーを提供する必要があります。  
  
 ユーザーで項目を並べ替えるには、並べ替え、 <xref:System.Web.UI.WebControls.GridView> に関して特定の列、列のヘッダーをクリックしてコントロールします。 並べ替えを有効にするには設定、 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> プロパティを `true`します。  
  
 ときにボタン、自動更新、削除、および選択機能を有効にする <xref:System.Web.UI.WebControls.ButtonField> または <xref:System.Web.UI.WebControls.TemplateField> 「編集」、「削除」、"Select"のコマンド名で、列のフィールドが、それぞれをクリックします。<xref:System.Web.UI.WebControls.GridView> 自動的にコントロールを追加、 <xref:System.Web.UI.WebControls.CommandField> 場合に、編集、削除、または \[選択\] ボタンを列フィールド、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>, 、<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>, 、または <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> にプロパティが設定されている `true`, 、それぞれします。  
  
> [!NOTE]
>  レコードを挿入するデータ ソースに直接でサポートされていない、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ただしを使用してレコードを挿入することは、 <xref:System.Web.UI.WebControls.GridView> コントロールと組み合わせて、 `DetailsView` または `FormView` コントロールです。 詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.DetailsView> または <xref:System.Web.UI.WebControls.FormView>, 、それぞれします。  
  
 同時にデータ ソース内のすべてのレコードを表示する代わりに、 <xref:System.Web.UI.WebControls.GridView> コントロールは複数のページをレコードを自動的に分割できます。 ページングを有効にするには設定、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> コントロールがポストバックに格納されている情報に基づいてで再作成される <xref:System.Web.UI.PageStatePersister.ViewState%2A>します。 場合、 <xref:System.Web.UI.WebControls.GridView> コントロールには、 <xref:System.Web.UI.WebControls.TemplateField> または <xref:System.Web.UI.WebControls.CommandField> で、 <xref:System.Web.UI.WebControls.CommandField.CausesValidation%2A> プロパティに設定 `true`, 、 <xref:System.Web.UI.Page.EnableViewState%2A> プロパティ設定することも必要があります。 `true` 同時データ更新、削除などの操作は、該当する行に適用されます。 します。  
  
<a name="customizing_the_user_interface"></a>   
## ユーザー インターフェイスのカスタマイズ  
 外観をカスタマイズすることができます、 <xref:System.Web.UI.WebControls.GridView> コントロールのさまざまな部分のスタイルのプロパティを設定して制御します。 次の表は、さまざまなスタイル プロパティを一覧表示します。  
  
|スタイル プロパティ|説明|  
|----------------|--------|  
|<xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A>|代替のデータ行のスタイル設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 間で切り替えると、データ行を表示するこのプロパティが設定されている場合、 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 設定、および <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 設定します。|  
|<xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A>|編集されている行のスタイルの設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A>|表示される空のデータ行のスタイルの設定、 <xref:System.Web.UI.WebControls.GridView> データ ソースにいくつかのレコードが含まれていない場合を制御します。|  
|<xref:System.Web.UI.WebControls.GridView.FooterStyle%2A>|フッター行のスタイルの設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>|ヘッダー行のスタイルの設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.GridView.PagerStyle%2A>|ページの行のスタイルの設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.GridView.RowStyle%2A>|内のデータ行のスタイルの設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ときに、 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> プロパティが設定され、データ行が交互に表示されます、 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 設定、および <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 設定します。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A>|選択した行のスタイル設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle%2A>|データ列のデータを並べ替えてのスタイル設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このスタイルが設定されている場合、データを昇順で並べ替えるときに、スタイル \(たとえば、強調表示されている列\) がセルに適用されます。|  
|<xref:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle%2A>|データ列のデータを並べ替えてのスタイル設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ヘッダーに、データの並べ替えが昇順を示す矢印を配置するこのスタイルが設定されている場合、 <xref:System.Web.UI.WebControls.GridView> 昇順でデータを並べ替えるときを制御します。|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle%2A>|データ列のデータを並べ替えてのスタイル設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このスタイルが設定されている場合、データが降順で並べ替えられた場合、スタイル \(たとえば、強調表示されている列\) がセルに適用されます。|  
|<xref:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle%2A>|データ列のデータを並べ替えてのスタイル設定、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このスタイルが設定されている場合、矢印下に配置のヘッダー、 <xref:System.Web.UI.WebControls.GridView> ときに、データが降順で並べ替えられます。|  
  
 表示またはコントロールのさまざまな部分を非表示にもできます。 次の表は、どの部分を表示または非表示を制御するプロパティを一覧表示します。  
  
|プロパティ|説明|  
|-----------|--------|  
|<xref:System.Web.UI.WebControls.GridView.ShowFooter%2A>|表示と非のフッター セクションの表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>|表示またはのヘッダー セクションを非表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
  
<a name="events"></a>   
## イベント  
 <xref:System.Web.UI.WebControls.GridView> コントロールには、プログラム可能ないくつかのイベントが用意されています。 これにより、イベントが発生するたびに、カスタムのルーチンを実行できます。 次の表に、イベントでサポートされている、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|ページャー ボタンのいずれかをクリックすると、後に発生する、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 このイベントは通常、ユーザーがコントロール内の別のページに移動した後にタスクを実行する必要がある場合に使用します。|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|ページャー ボタンのいずれかをクリックすると、その前に発生する、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 このイベントは、ページング操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|前に行の \[キャンセル\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> 編集モードを終了します。 コントロールです。 このイベントは、キャンセル操作を停止するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowCommand>|ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このイベントは、コントロールのボタンがクリックされたときにタスクを実行するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowCreated>|新しい行が作成されると発生、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このイベントは、行が作成されたときに、行の内容を変更するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDataBound>|データ行がデータにバインドされると発生、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このイベントは、行がデータにバインドされている場合は、行の内容を変更するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|後で、行の削除\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソースからレコードを削除します。 このイベントは、削除操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|前に行の削除\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソースからレコードを削除します。 このイベントは削除操作をキャンセルによく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|前に行の編集\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> 制御が編集モードを開始します。 このイベントは、編集操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|後で、行の更新\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 このイベントは、更新操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|前に行の更新\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 このイベントは、更新操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|後で、行の選択\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 このイベントは、コントロールで行を選択した後にタスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|前に行の選択\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 このイベントは、選択範囲の操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|後は、列の並べ替えにハイパーリンクをクリックしたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 このイベントは通常、ユーザーが列を並べ替えるへのハイパーリンクをクリックした後にタスクを実行する使用します。|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|前に列を並べ替えるへのハイパーリンクがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 このイベントは、並べ替え操作を取り消すまたはカスタムの並べ替えルーチンを実行するによく使用されます。|  
  
<a name="accessibility"></a>   
## ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) と [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:GridView  
    AccessKey="string"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    AutoGenerateDeleteButton="True|False"  
    AutoGenerateEditButton="True|False"  
    AutoGenerateSelectButton="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableSortingAndPagingCallbacks="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnRowCancelingEdit="RowCancelingEdit event handler"  
    OnRowCommand="RowCommand event handler"  
    OnRowCreated="RowCreated event handler"  
    OnRowDataBound="RowDataBound event handler"  
    OnRowDeleted="RowDeleted event handler"  
    OnRowDeleting="RowDeleting event handler"  
    OnRowEditing="RowEditing event handler"  
    OnRowUpdated="RowUpdated event handler"  
    OnRowUpdating="RowUpdating event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    PageSize="integer"  
    RowHeaderColumn="string"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingRowStyle />  
        <Columns>  
                <asp:BoundField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundField>  
                <asp:ButtonField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ImageUrl="uri"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonField>  
                <asp:CheckBoxField  
                    AccessibleHeaderText="string"  
                    DataField="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CheckBoxField>  
                <asp:CommandField  
                    AccessibleHeaderText="string"  
                    ButtonType="Button|Image|Link"  
                    CancelImageUrl="uri"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    DeleteImageUrl="uri"  
                    DeleteText="string"  
                    EditImageUrl="uri"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertImageUrl="uri"  
                    InsertText="string"  
                    InsertVisible="True|False"  
                    NewImageUrl="uri"  
                    NewText="string"  
                    SelectImageUrl="uri"  
                    SelectText="string"  
                    ShowCancelButton="True|False"  
                    ShowDeleteButton="True|False"  
                    ShowEditButton="True|False"  
                    ShowHeader="True|False"  
                    ShowInsertButton="True|False"  
                    ShowSelectButton="True|False"  
                    SortExpression="string"  
                    UpdateImageUrl="uri"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:CommandField>  
                <asp:DynamicField  
                    AccessibleHeaderText="string"  
                    ApplyFormatInEditMode="True|False"  
                    ConvertEmptyStringToNull="True|False"  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    HtmlEncode="True|False"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    ShowHeader="True|False"  
                    UIHint="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:DynamicField>  
                <asp:HyperLinkField  
                    AccessibleHeaderText="string"  
                    DataNavigateUrlFields="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NavigateUrl="uri"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkField>  
                <asp:ImageField  
                    AccessibleHeaderText="string"  
                    AlternateText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DataAlternateTextField="string"  
                    DataAlternateTextFormatString="string"  
                    DataImageUrlField="string"  
                    DataImageUrlFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    NullDisplayText="string"  
                    NullImageUrl="uri"  
                    ReadOnly="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <ControlStyle />  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ImageField>  
                <asp:TemplateField  
                    AccessibleHeaderText="string"  
                    ConvertEmptyStringToNull="True|False"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    InsertVisible="True|False"  
                    ShowHeader="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <ControlStyle />  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <AlternatingItemTemplate>  
                            <!-- child controls -->  
                        </AlternatingItemTemplate>  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <InsertItemTemplate>  
                            <!-- child controls -->  
                        </InsertItemTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateField>  
        </Columns>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <HeaderStyle />  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
        <SelectedRowStyle />  
</asp:GridView>  
```  
  
   
  
## 例  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=191882)します。  
  
 次の例で使用方法、 <xref:System.Web.UI.WebControls.GridView> Microsoft SQL Server で、AdventureWorksLT サンプル データベースの Customers テーブルから値を表示するコントロール。 使用して、値が取得、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールです。  
  
 [!code-csharp[GridViewSimple\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-vb[GridViewSimple\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView> コントロールと <xref:System.Web.UI.WebControls.LinqDataSource> を制御できるため、レコードを編集することができます。  
  
 [!code-csharp[GridViewEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-vb[GridViewEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 セルの値にアクセスする方法を示す例では、次を参照してください。 <xref:System.Web.UI.WebControls.GridViewRow>します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.ImageField" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GridView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.GridView> クラスです。 動的に追加する、 <xref:System.Web.UI.WebControls.GridView> コントロールをページ、\[新しい <xref:System.Web.UI.WebControls.GridView> オブジェクト、そのプロパティを設定し、追加するに、 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> などのコンテナーのコレクションが制御 <xref:System.Web.UI.WebControls.PlaceHolder>します。  
  
   
  
## 例  
 次の例では、コンス トラクターを使用して動的に追加する方法、 <xref:System.Web.UI.WebControls.GridView> ページにコントロールです。  
  
 [!code-csharp[GridViewCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCtor/CS/gridviewctorcs.aspx#1)]
 [!code-vb[GridViewCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCtor/VB/gridviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタム ページングが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> カスタム ページングが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページングを使用するの内容を表示、 <xref:System.Web.UI.WebControls.GridView> チャンク単位で制御します。 ページ上の項目の数がによって決まりますが、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティです。 データ ソース内のすべての行はすべて時刻の読み取り、通常、 <xref:System.Web.UI.WebControls.GridView> コントロールが別のページに移動します。 これにより、データ ソース内の項目の合計数が非常に大きい場合に、多くのリソースが消費することができます。 カスタム ページングを使用すると、データ ソースから単一のページに必要な項目だけを読み取ることができます。  
  
 カスタム ページングを有効にするには、両方を設定、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> と <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> プロパティ `true`します。 ハンドラーで、 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> イベント、設定、 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> プロパティを新しいページのインデックス値の設定、 <xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> プロパティのデータ ソース内の項目の合計数を現在のページと呼び出しに必要な行だけを返すデータ ソースの設定、 <xref:System.Web.UI.WebControls.GridView.DataBind%2A> メソッドです。<xref:System.Web.UI.WebControls.GridView.VirtualItemCount%2A> プロパティ ページの合計数を決定する制御を有効には、すべての項目を読み取ることによってこの値が自動的に通常決定されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページング機能が有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ページング機能が有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 同時にデータ ソース内のすべてのレコードを表示する代わりに、 <xref:System.Web.UI.WebControls.GridView> コントロールは複数のページをレコードを自動的に分割できます。 データ ソースは、ページング機能をサポートしている場合、 <xref:System.Web.UI.WebControls.GridView> コントロールはその利用でき、組み込みのページング機能を提供します。 ページング機能がサポートするデータ ソース オブジェクトと併用して、 <xref:System.Collections.ICollection?displayProperty=fullName> インターフェイスまたはページング機能をサポートするデータ ソース。  
  
 ページング機能を有効にするには設定、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`します。 既定では、 <xref:System.Web.UI.WebControls.GridView> コントロールがページで、一度に 10 個のレコードを表示します。 設定して、ページに表示されるレコードの数を変更することができます、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティです。 データ ソースの内容を表示するために必要なページの合計数を確認するのには、使用、 <xref:System.Web.UI.WebControls.GridView.PageCount%2A> プロパティです。 使用して、現在表示されているページのインデックスを指定できます、 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> プロパティです。  
  
 ポケットベル行と呼ばれる追加の行が自動的に表示されますページングが有効にすると、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ページの行には、ユーザーがその他のページに移動できるコントロールが含まれています。 使用して、ページャー \(ページャー表示モードで、時刻、および、ページャー コントロールのテキスト ラベルに表示するページのリンクの数\) などの設定を制御することができます、 <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> プロパティです。 ポケットベル行に設定して上部、下部、または両方の上部と下部コントロールの表示できる、 <xref:System.Web.UI.WebControls.PagerSettings.Position%2A> プロパティです。 設定して 4 つの組み込みのページャー表示モードのいずれかから選択することもできる、 <xref:System.Web.UI.WebControls.PagerSettings.Mode%2A> プロパティです。 次の表では、組み込みの表示モードについて説明します。  
  
|モード|説明|  
|---------|--------|  
|`PagerButton.NextPrevious`|一連の改ページ調整コントロールの前または次のボタンで構成されます。|  
|`PagerButton.NextPreviousFirstLast`|次に、最初と最後のボタンの前で構成される改ページ調整コントロール、A が設定されます。|  
|`PagerButton.Numeric`|アクセスのページへのリンク ボタンは直接の番号付きで構成される改ページ調整コントロールのセット。 これは、既定のモードです。|  
|`PagerButton.NumericFirstLast`|番号付き、先頭と末尾のリンク ボタンで構成される改ページ調整コントロールのセット。|  
  
 \(背景色、フォントの色、位置など\)、ページャーの外観を制御する、 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> プロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> コントロールに自動的を非表示にページの行のデータ ソースには、レコードの 1 つだけのページが含まれている場合。  
  
 <xref:System.Web.UI.WebControls.GridView> コントロールでは、ページャー用のカスタム テンプレートを定義することもできます。 カスタム ページ行テンプレートの作成の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A>します。  
  
 <xref:System.Web.UI.WebControls.GridView> コントロールには、ページングが発生するときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanged>|ページャー ボタンのいずれかをクリックすると、後に発生する、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 このイベントは通常、ユーザーがコントロール内の別のページに移動した後にタスクを実行する必要がある場合に使用します。|  
|<xref:System.Web.UI.WebControls.GridView.PageIndexChanging>|ページャー ボタンのいずれかをクリックすると、その前に発生する、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 このイベントは、ページング操作を取り消すよく使用されます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを宣言的でページング機能を有効にする、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewAllowPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-vb[GridViewAllowPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または並べ替え機能が有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 並べ替え機能が有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 並べ替えをサポートするデータ ソース コントロールをバインドするときに、 <xref:System.Web.UI.WebControls.GridView> コントロール、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソース コントロールの機能を活用し、自動並べ替え機能を提供します。 ときに、 <xref:System.Web.UI.WebControls.GridView> 設定によってコントロールがデータ ソースにバインドされている、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> プロパティ、プログラムで入力してください並べ替え機能を使用して、 <xref:System.Web.UI.WebControls.GridView.Sorting> イベントです。  
  
> [!NOTE]
>  さまざまなデータ ソースには、並べ替え機能を有効にするための異なる要件があります。 要件は、特定のデータ ソースのマニュアルを参照してください。  
  
 並べ替えを有効にするには設定、 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> プロパティを `true`します。 並べ替えを有効にすると、各列のフィールドの見出しのテキスト、 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> プロパティ セットはリンク ボタンとして表示されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> 自動的に生成される列フィールドのプロパティが自動的に設定されます。 を通じて、独自の列を定義する場合、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 設定する必要があります、コレクション、 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> ; の各列のプロパティそれ以外の場合、列を表示しませんリンク ボタン ヘッダー。  
  
 列と内の項目のリンク ボタンをクリックすると、 <xref:System.Web.UI.WebControls.GridView> 並べ替えコントロールが並べ替え式に基づいています。 通常、これにより、列に表示されるフィールドの名前だけでは、並べ替え式、 <xref:System.Web.UI.WebControls.GridView> その列にします。 複数のフィールドを並べ替えるには、フィールド名のコンマ区切りの一覧を含む並べ替え式を使用します。 並べ替え式を指定できますが、 <xref:System.Web.UI.WebControls.GridView> を使用して制御を適用する、 <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> プロパティです。 繰り返し列のリンク ボタンをクリックすると、昇順と降順の並べ替え方向が切り替わります。 現在の並べ替え方向を確認するのには、使用、 <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.GridView> コントロールには、並べ替えを行うときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.GridView.Sorted>|後は、列の並べ替えにハイパーリンクをクリックしたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 このイベントは通常、ユーザーが列を並べ替えるへのハイパーリンクをクリックした後にタスクを実行する使用します。|  
|<xref:System.Web.UI.WebControls.GridView.Sorting>|前に列を並べ替えるへのハイパーリンクがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 このイベントは、並べ替え操作を取り消すまたはカスタムの並べ替えルーチンを実行するによく使用されます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> プロパティで並べ替えを有効に、 <xref:System.Web.UI.WebControls.GridView> 自動的に生成された列を使用する場合を制御します。  
  
 [!code-csharp[GridViewAllowSorting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSorting/CS/gridviewallowsortingcs.aspx#1)]
 [!code-vb[GridViewAllowSorting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSorting/VB/gridviewallowsortingvb.aspx#1)]  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> プロパティで並べ替えを有効に、 <xref:System.Web.UI.WebControls.GridView> タイミングを制御、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションを定義します。 イメージは、並べ替えの方向を示すために並べ替えられる列のヘッダーにもプログラムで追加されます。 このサンプルを機能させるため、独自のイメージを指定する必要があります。  
  
 [!code-csharp[GridViewAllowSortingColumns\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-vb[GridViewAllowSortingColumns\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクト内のデータ行を交互の外観を設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 内のデータ行を交互のスタイルを表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 内のデータ行を代替の外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 間で切り替えると、データ行を表示するこのプロパティが設定されている場合、 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 設定、および <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 設定します。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `AlternatingRowStyle-ForeColor`\)。  
  
-   入れ子、 `<AlternatingRowStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `AlternatingRowStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 宣言内のデータ行を交互にスタイルを定義するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewRowStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-vb[GridViewRowStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはバインドされたフィールドがデータ ソース内の各フィールドに対して自動的に作成するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> データ ソース内の各フィールドにバインドされたフィールドを自動的に作成するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.AutoGeneratedField> オブジェクトは、データ ソース内の各フィールドが自動的に作成します。 各フィールド内の列として表示されます、 <xref:System.Web.UI.WebControls.GridView> データ ソースのフィールドの順序で制御します。 このオプションは、データ ソース内のすべてのフィールドを表示する便利な方法ただし、自動的に生成される列フィールドの表示や動作の制御が制限されています。  
  
 させず、 <xref:System.Web.UI.WebControls.GridView> コントロールでは、列のフィールドに自動的に生成される、手動で設定して列フィールドを定義することができます、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> プロパティを `false` 作成し、カスタム `Columns` コレクションです。 バインドされた列のフィールドだけでなくするもボタン列フィールド、または表示できます\] チェック ボックス列フィールド、コマンド フィールド、ハイパーリンク列フィールド、画像フィールドでは、独自のカスタム定義のテンプレートに基づく列フィールドです。  
  
 自動的に生成される列フィールドを含むフィールドを明示的に宣言された列を組み合わせることもできます。 両方を使用する場合に最初に明示的に宣言された列のフィールドがレンダリング後に自動的に生成される列フィールドがされます。 バインドされた列が自動的に生成されたフィールドに追加されない、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションです。 詳細については、「<xref:System.Web.UI.WebControls.GridView.Columns%2A>」を参照してください。  
  
 このプロパティを設定する場合 `true` し、設定、 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> プロパティ、モデルの種類を <xref:System.Web.DynamicData.DynamicField> コントロールが生成されます。 設定しない場合、 <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> プロパティには、 <xref:System.Web.UI.WebControls.BoundField> コントロールを生成します。 たくない場合 <xref:System.Web.DynamicData.DynamicField> コントロールでは、次のオプションがあります。  
  
-   設定、 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> プロパティを `null` で、 `Page_Load` イベント ハンドラーです。 その場合は、 <xref:System.Web.UI.WebControls.BoundField> コントロールを生成します。  
  
-   自動的に作成して割り当てる方法、独自のフィールドを生成するカスタム コードを記述 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> クラスとコントロールに、そのインスタンスを割り当てることです。  
  
-   <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> を `false` に設定します。 その場合は、フィールドは生成されず、およびフィールドなどのコントロールを使用して手動で指定する必要があります <xref:System.Web.UI.WebControls.BoundField> または <xref:System.Web.UI.WebControls.ImageField>です。  
  
-   <xref:System.Web.UI.WebControls.DataBoundControl.ItemType%2A> プロパティを設定しないでください。 その場合は、 <xref:System.Web.UI.WebControls.BoundField> コントロールを生成します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> 自動的にバインドされるフィールドの列を作成するプロパティ、 <xref:System.Web.UI.WebControls.GridView> データ ソース内の各フィールドのコントロールです。  
  
 [!code-csharp[GridViewSimple\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSimple/CS/displaycustomers.aspx#1)]
 [!code-vb[GridViewSimple\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSimple/VB/displaycustomers.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDeleteButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateDeleteButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDeleteButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.CommandField" /> に各データ行の削除\] ボタンと \[フィールド\] 列が自動的に追加、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 自動的に追加する、 <see cref="T:System.Web.UI.WebControls.CommandField" /> フィールドの列。 各データ行の削除\] ボタンとそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サポートしているデータ ソース コントロールがバインドされている場合、 <xref:System.Web.UI.WebControls.GridView> コントロール、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソース コントロールの機能を活用し、削除機能を提供します。  
  
> [!NOTE]
>  データ ソース コントロールがデータを削除するには、データの削除を構成する必要があります。 レコードを削除するデータ ソース コントロールを構成するのには、特定のデータ ソース コントロールのドキュメントを参照してください。  
  
 ときに、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、列 \(によって表される、 <xref:System.Web.UI.WebControls.CommandField> オブジェクト\) 各データの削除\] ボタンで行が自動的に追加、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 永続的に、行の削除\] ボタンをクリックすると、データ ソースからそのレコードを削除します。  
  
> [!NOTE]
>  設定する必要も、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> キー フィールドまたは自動削除機能が動作するデータ ソースのフィールドを識別するプロパティです。  
  
 <xref:System.Web.UI.WebControls.GridView> コントロールに行が削除されるときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleted>|後で、行の削除\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソースからレコードを削除します。 このイベントは、削除操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowDeleting>|前に行の削除\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソースからレコードを削除します。 このイベントは削除操作をキャンセルによく使用されます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> の自動削除機能を有効にするプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-vb[GridViewEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateEditButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateEditButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateEditButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.CommandField" /> に各データ行の編集\] ボタンと \[フィールド\] 列が自動的に追加、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 自動的に追加する、 <see cref="T:System.Web.UI.WebControls.CommandField" /> フィールドの列。 各データ行の編集\] ボタンとそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 更新をサポートするデータ ソース コントロールをバインドするときに、 <xref:System.Web.UI.WebControls.GridView> コントロール、 <xref:System.Web.UI.WebControls.GridView> コントロールは、データ ソース コントロールの機能を活用し、自動更新機能を提供します。  
  
> [!NOTE]
>  データ ソース コントロールがデータを更新するには、データの更新を構成する必要があります。 レコードを更新するデータ ソース コントロールを構成するのには、特定のデータ ソース コントロールのドキュメントを参照してください。  
  
 ときに、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> にプロパティが設定されている `true`, 、列 \(によって表される、 <xref:System.Web.UI.WebControls.CommandField> オブジェクト\) 各データの編集\] ボタンで行が自動的に追加、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 行の編集\] ボタンをクリックするとは、その行を編集モードにします。 読み取り専用ではない行の場合は、各列フィールドがなど、適切な入力コントロールを表示する行が編集モードのときは、 <xref:System.Web.UI.WebControls.TextBox> フィールドのデータ型のコントロールです。 これにより、ユーザーがフィールドの値を変更できます。  
  
 クリックすると、\[編集\] ボタンも更新\] ボタンと \[キャンセル\] ボタンに置き換えられます。 \[更新\] ボタンをクリックすると、変更された値で、データ ソースの行を更新し、モードを表示する行を返します。 \[キャンセル\] ボタンをクリックすると、値の変更を破棄し、モードを表示する行を返します。  
  
> [!NOTE]
>  設定して、編集モードでの行を配置できるプログラムを使用して、 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> 行のインデックスを持つプロパティです。 プログラムで編集モードを終了するには、設定、 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> プロパティを\-1 にします。  
  
 設定する必要があります組み込みの更新機能を使用する場合、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 主キー フィールドまたはデータ ソースのフィールドを識別するフィールドのコンマ区切りのリストを持つプロパティの名前。 それ以外の場合、組み込みの更新機能では、適切なレコードを更新できません。 します。 自動的に使用するフィールドの列を生成する \(設定して、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> プロパティを `true`\)、 <xref:System.Web.UI.WebControls.GridView> コントロールに自動的に確実に、フィールドで指定されたフィールドに対応するフィールドが自動的に生成された列、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティは読み取り専用です。  
  
 使用して編集モードになっている行の外観を制御する、 <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> プロパティです。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
 <xref:System.Web.UI.WebControls.GridView> コントロールに行が更新されたときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit>|前に行の \[キャンセル\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールが編集モードを終了をキャンセルします。 このイベントは、キャンセル操作を停止するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowEditing>|前に行の編集\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> 制御が編集モードを開始します。 このイベントは、編集操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdated>|後で、行の更新\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 このイベントは、更新操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.GridView.RowUpdating>|前に行の更新\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 このイベントは、更新操作を取り消すよく使用されます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> の自動編集機能を有効にするプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-vb[GridViewEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateSelectButton">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateSelectButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateSelectButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.CommandField" /> に各データ行の選択\] ボタンと \[フィールド\] 列が自動的に追加、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 自動的に追加する、 <see cref="T:System.Web.UI.WebControls.CommandField" /> フィールドの列。 各データ行の選択\] ボタンとそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> にプロパティが設定されている `true`, 、列 \(によって表される、 <xref:System.Web.UI.WebControls.CommandField> オブジェクト\) 各データの選択\] ボタンで行が自動的に追加、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 行は、コントロール内の該当する行を選択するには、\[選択\] ボタンをクリックすると、設定、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> プロパティを行のインデックス。 取得する、 <xref:System.Web.UI.WebControls.GridViewRow> を使用して、選択した行を表すオブジェクト、 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> プロパティです。 使用して、選択したレコードの主キーの値を取得することもできます、 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> プロパティです。<xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> プロパティで指定されたキー フィールドの値を格納する、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティです。  
  
> [!NOTE]
>  プログラムで設定して行を選択することができます、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> プロパティです。 行の選択を取り消す場合に、設定、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> プロパティを\-1 にします。  
  
 選択した行の外観を制御するにを使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> プロパティです。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
 <xref:System.Web.UI.WebControls.GridView> コントロールには、行が選択されているときに、カスタム アクションを実行するのに使用できるいくつかのイベントが用意されています。 次の表には、使用可能なイベントが一覧表示します。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|後で、行の選択\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 このイベントは、コントロールで行を選択した後にタスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging>|前に行の選択\] ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 このイベントは、選択して操作を取り消すよく使用されます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton%2A> の自動選択機能を有効にするプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-vb[GridViewSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>背景に表示するイメージへの URL の設定を取得または、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>背景に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A> の背景に表示するイメージの URL を指定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  指定したイメージがより小さい場合、 <xref:System.Web.UI.WebControls.GridView> 背景を埋めるためにコントロール、イメージを並べて表示します。 イメージが、コントロールよりも大きい場合は、画像がトリミングされます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.BackImageUrl%2A> のバック グラウンドでのカスタム イメージを表示するプロパティを <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewBackImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewBackImageUrl/CS/gridviewbackimageurlcs.aspx#1)]
 [!code-vb[GridViewBackImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewBackImageUrl/VB/gridviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> の下部にあるページの行を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> コントロールの下部にあるページの行を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページングが有効な場合 \(設定して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`\)、ページ行と呼ばれる追加の行に自動的に表示されます、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ページの行には、ユーザーが他のページに移動できるようにし、上部、下部にある、または上部との両方で、コントロールの下部に表示できるコントロールが含まれています。 使用して、 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> にプログラムでアクセス プロパティ、 <xref:System.Web.UI.WebControls.GridViewRow> の下部にあるページの行を表すオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> プロパティは後でのみ使用可能な <xref:System.Web.UI.WebControls.GridView> コントロールの下部にあるページの行の作成、 <xref:System.Web.UI.WebControls.GridView.RowCreated> イベントです。  
  
 このプロパティは通常、カスタム コンテンツを追加する場合などの下部にあるページャーをプログラムで操作する必要がある場合に使用します。 変更を加える、 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> プロパティは後に実行しなければならない、 <xref:System.Web.UI.WebControls.GridView> レンダリングされた以外の場合、コントロールが表示された、 <xref:System.Web.UI.WebControls.GridView> コントロール変更は上書きされます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> の下部にあるページの行にアクセスするプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。<xref:System.Web.UI.WebControls.GridView.BottomPagerRow%2A> プロパティを使用して、取得、 <xref:System.Web.UI.WebControls.DropDownList> 、ページャー コントロールです。  
  
 [!code-csharp[GridViewPagerTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-vb[GridViewPagerTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の HTML キャプション要素に表示されるテキスト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。</summary>
        <value>HTML キャプション要素に表示するテキストを表す文字列、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.Caption%2A> の HTML キャプション要素に表示されるテキストを指定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 指定したテキストは、コントロールをより使いやすくために使用するテーブルの説明を持つデバイスの支援技術を提供します。 使用して HTML caption 要素を表示する位置を指定することも、 <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> プロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.Caption%2A> のキャプションを指定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewCaption\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-vb[GridViewCaption\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平または垂直方向の位置の HTML キャプション要素の取得または設定、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 値のいずれか。 既定値は <see langword="TableCaptionAlign.NotSet" />, 、ブラウザーの既定の設定を使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> の HTML キャプション要素の水平方向または垂直方向の位置を指定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。  
  
 このプロパティのいずれかを使用して、 <xref:System.Web.UI.WebControls.TableCaptionAlign> 列挙値。 次の表では、指定できる値を示します。  
  
|値|説明|  
|-------|--------|  
|`TableCaptionAlign.Bottom`|Caption 要素は、テーブルの下に揃えられます。|  
|`TableCaptionAlign.Left`|Caption 要素は、テーブルの左側に揃えられます。|  
|`TableCaptionAlign.NotSet`|キャプション要素の配置が設定されていません。|  
|`TableCaptionAlign.Right`|Caption 要素は、テーブルの右側に揃えられます。|  
|`TableCaptionAlign.Top`|Caption 要素は、テーブルの上部に揃えられます。|  
  
> [!NOTE]
>  このプロパティに設定すると `TableCaptionAlign.NotSet`, 、ブラウザーの既定値が使用されます。  
  
 キャプションの HTML 要素のテキストを指定するには、使用、 <xref:System.Web.UI.WebControls.GridView.Caption%2A> プロパティです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.CaptionAlign%2A> ことを指定するプロパティの caption 要素、 <xref:System.Web.UI.WebControls.GridView> コントロールがコントロールの上部に揃えて配置します。  
  
 [!code-csharp[GridViewCaption\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCaption/CS/gridviewcaptioncs.aspx#1)]
 [!code-vb[GridViewCaption\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCaption/VB/gridviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値がのない、 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 列挙値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容とセルの境界線間の間隔を設定します。</summary>
        <value>セルの内容とセルの境界線の間のピクセル単位での領域の量。 既定値は、\-1 で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.CellPadding%2A> セルの内容とセルの境界線間の間隔を制御するプロパティです。 指定した間隔は、セルの 4 つすべての側面に追加されます。  
  
 同じ列のすべてのセル、 <xref:System.Web.UI.WebControls.GridView> コントロールを持つ同一の幅。 余白の量が最大幅のセルに適用され、このセルの幅を列内のすべてのセルがあります。 同様に、同じ行のすべてのセルには、同じ高さがあります。 間隔は、行の行内のセルに適用され、行内の他のすべてのセルがあるこのセルの高さ。 個々 のセルのサイズを指定することはできません。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.CellPadding%2A> プロパティを宣言して、セルの内容とセルの境界線間の間隔を設定します。  
  
 [!code-csharp[GridViewCellPadding\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-vb[GridViewCellPadding\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセル間の領域のサイズを設定します。</summary>
        <value>セルの間隔をピクセル単位で指定します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.CellSpacing%2A> の隣接するセルの間隔を制御するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 この間隔は、垂直方向と水平方向の両方に適用されます。 セルの間隔は、コントロール全体の統一されています。 行または列の個別のセルの間隔を指定することはできません。  
  
> [!NOTE]
>  0 より大きい値にこのプロパティを設定し、設定します、 <xref:System.Web.UI.WebControls.GridView.GridLines%2A> プロパティ セルの境界線が表示される値にギャップが隣接するセルの境界線間表示されます。 このような状況で、 <xref:System.Web.UI.WebControls.Table.CellSpacing%2A> プロパティは、ギャップのサイズを制御します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.CellSpacing%2A> プロパティのセルの間の領域の量を宣言して設定を <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewCellPadding\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewCellPadding/CS/gridviewcellpaddingcs.aspx#1)]
 [!code-vb[GridViewCellPadding\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewCellPadding/VB/gridviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値を持つに追加されます。 データ フィールドの名前、 <see cref="P:System.Web.UI.Control.ClientID" /> プロパティの値を、データ バインド コントロールの各インスタンスを一意に識別します。</summary>
        <value>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別する値が使用されるデータ フィールドの名前、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 防ぐためにコントロールの複数のインスタンスが複数の行に表示されるときに名前付けの競合、 <xref:System.Web.UI.WebControls.GridView> コントロール、ASP.NET は生成一意 <xref:System.Web.UI.Control.ClientID%2A> の各インスタンスの値。 指定する方法、 <xref:System.Web.UI.Control.ClientID%2A> 値が設定によって生成された、 <xref:System.Web.UI.Control.ClientIDMode%2A> プロパティです。 設定した場合、 <xref:System.Web.UI.Control.ClientIDMode%2A> プロパティを <xref:System.Web.UI.ClientIDMode.Predictable>, 、ASP.NET が生成、 <xref:System.Web.UI.Control.ClientID%2A> またはで指定されている複数のデータ フィールドから派生したサフィックスを付加した <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>します。 場合 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A> サフィックスは、連続する番号が設定されています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値を取得、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</summary>
        <value>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataControlFieldCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataControlFieldCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.DataControlField" /> で列フィールドを表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" /> 内のすべての列フィールドを含む、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 列フィールド内の列を表す、 <xref:System.Web.UI.WebControls.GridView> コントロールです。<xref:System.Web.UI.WebControls.GridView.Columns%2A> で描画されたすべての列を明示的に宣言されたフィールドを格納するプロパティ \(コレクション\) が使用される、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 使用することも、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> プログラムで列フィールドのコレクションを管理するコレクション。  
  
> [!NOTE]
>  明示的に宣言された列のフィールドは、自動的に生成された列のフィールドと組み合わせて使用できます。 両方を使用する場合に最初に明示的に宣言された列のフィールドがレンダリング後に自動的に生成される列フィールドがされます。 自動的に生成される列フィールドに追加されない、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションです。  
  
 表示される列フィールド、 <xref:System.Web.UI.WebControls.GridView> コントロールに列フィールドが表示される順序で、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションです。 次の表は、別の列から派生するクラスのフィールド、 <xref:System.Web.UI.WebControls.DataControlField> クラスし、で使用できる、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションです。  
  
|列フィールドの種類|説明|  
|---------------|--------|  
|<xref:System.Web.UI.WebControls.BoundField>|データ ソースのフィールドの値を表示します。 これは、既定の列の型、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.ButtonField>|内の各項目のコマンド ボタンを表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 これにより、追加または削除\] ボタンなどのカスタム ボタン コントロールの列を作成することができます。|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|内の各項目のチェック ボックスを表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 この種類の列フィールドはブール値を持つフィールドを表示します。|  
|<xref:System.Web.UI.WebControls.CommandField>|定義済みの選択\] を実行するコマンド ボタンの表示、編集または削除操作。|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|データ ソースのフィールドの値をハイパーリンクとして表示します。 この列のフィールド型では、2 番目のフィールドをハイパーリンクの URL にバインドすることができます。|  
|<xref:System.Web.UI.WebControls.ImageField>|内の各項目のイメージを表示、 <xref:System.Web.UI.WebControls.GridView> コントロールです。|  
|<xref:System.Web.UI.WebControls.TemplateField>|各項目に対してユーザー定義の内容を表示する、 <xref:System.Web.UI.WebControls.GridView> に応じて、指定したテンプレートのコントロールです。 この列のフィールド型では、カスタムの列フィールドを作成することができます。|  
  
 列フィールドを追加できますが、プログラムを使用して、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションする方が簡単で、宣言によって列フィールドを一覧表示、 <xref:System.Web.UI.WebControls.GridView> を制御し、使用して、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> と列の各フィールドを非表示には、各列フィールドのプロパティです。  
  
 場合、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> に列フィールドのプロパティが設定されている `false`, に列が表示されない、 <xref:System.Web.UI.WebControls.GridView> コントロールと列のデータは、ラウンド トリップに加えないでクライアントです。 ラウンド トリップさせる表示になっている列のデータを表示する場合は、フィールド名を追加、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティです。  
  
   
  
## 例  
 次の例では、設定する方法について、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクション宣言します。  
  
 [!code-csharp[GridViewColumnFields\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewColumnFields/CS/gridviewcolumnfieldscs.aspx#1)]
 [!code-vb[GridViewColumnFields\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewColumnFields/VB/gridviewcolumnfieldsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlFieldCollection" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.ImageField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      </Docs>
    </Member>
    <Member MemberName="ColumnsGenerator">
      <MemberSignature Language="C#" Value="public System.Web.UI.IAutoFieldGenerator ColumnsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator ColumnsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ColumnsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の列が自動的に生成するコントロール、 <see cref="T:System.Web.UI.WebControls.GridView" /> ASP.NET Dynamic Data 機能を使用するコントロール。</summary>
        <value>コントロールの列が自動的に生成される、 <see cref="T:System.Web.UI.WebControls.GridView" /> ASP.NET Dynamic Data 機能を使用するコントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページで ASP.NET Dynamic Data 機能を使用するために追加する必要があります、 <xref:System.Web.DynamicData.DynamicDataManager> コントロールをページです。 これは、ページ内のデータ バインド コントロールを ASP.NET Dynamic Data 機能などにより <xref:System.Web.UI.WebControls.GridView> コントロールです。 個人を有効にする <xref:System.Web.UI.WebControls.GridView> Dynamic Data 機能を使用するコントロールをそれを関連付ける必要があります、 <xref:System.Web.DynamicData.DynamicDataManager> コントロールを呼び出して、 <xref:System.Web.DynamicData.DynamicDataManager.RegisterControl%2A?displayProperty=fullName> メソッド中に、 `Page_Init` イベントです。 このメソッドが自動的に設定、 <xref:System.Web.UI.WebControls.GridView.ColumnsGenerator%2A> プロパティを <xref:System.Web.DynamicData.DynamicDataManager> オブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAutoGeneratedColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn (System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.AutoGeneratedField CreateAutoGeneratedColumn(class System.Web.UI.WebControls.AutoGeneratedFieldProperties fieldProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn(System.Web.UI.WebControls.AutoGeneratedFieldProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This is kept for backward compatibility - this API is no more used")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.AutoGeneratedField</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldProperties" Type="System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
      </Parameters>
      <Docs>
        <param name="fieldProperties">
          <see cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" /> を作成する列が自動的に生成されたフィールドのプロパティを表します。</param>
        <summary>自動的に生成される列フィールドを作成します。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.AutoGeneratedField" /> で指定された列が自動的に生成されたフィールドを表す、 <paramref name="fieldProperties" /> パラメーター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.CreateAutoGeneratedColumn%2A> メソッドを使用して自動的に生成された列を作成する場合はフィールド、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> にプロパティが設定されている `true`します。 を通じて自動的に生成される列フィールドのプロパティが指定されている、 <xref:System.Web.UI.WebControls.AutoGeneratedFieldProperties> オブジェクトに含まれている、 `fieldProperties` パラメーター。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.AutoGeneratedFieldProperties" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Collections.IEnumerable" /> のデータ ソースを含む、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</param>
        <param name="dataBinding">
          <see langword="true" /> 子コントロールがデータにバインドされていることを示すためにそれ以外の場合、 <see langword="false" />です。</param>
        <summary>レンダリングに使用されるコントロールの階層構造を作成、 <see cref="T:System.Web.UI.WebControls.GridView" /> 指定したデータ ソースを使用して制御します。</summary>
        <returns>作成される行の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.CreateChildControls%2A> のコントロールの階層構造を作成するメソッドが使用される、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="dataSource" /> null 値を返します <see cref="T:System.Web.UI.DataSourceView" />します。  
  
 または  
  
 <paramref name="dataSource" /> 実装していない、 <see cref="T:System.Collections.ICollection" /> インターフェイスを返すことができない、 <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />です。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.GridView.AllowPaging" /> <see langword="true" /> と <paramref name="dataSource" /> が実装していない、 <see cref="T:System.Collections.ICollection" /> インターフェイスし、データ ソースのページングを実行することはできません。  
  
 または  
  
 <paramref name="dataSource" /> 実装していない、 <see cref="T:System.Collections.ICollection" /> インターフェイスと <paramref name="dataBinding" /> に設定されている <see langword="false" />します。</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateChildTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateChildTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateChildTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しい子テーブルを作成します。</summary>
        <returns>新しいは常に返します <see cref="T:System.Web.UI.WebControls.Table" /> 子テーブルを表します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.CreateChildTable%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.GridView> 子テーブルを作成するコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CreateColumns">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection CreateColumns (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection CreateColumns(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateColumns(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">A <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> データ ソースを表します。</param>
        <param name="useDataSource">
          <see langword="true" /> 指定されたデータ ソースを使用する、 <c>dataSource</c> パラメーター。 そうしないと、 <see langword="false" />です。</param>
        <summary>コントロールの階層を構築するために使用する列フィールドのセットを作成します。</summary>
        <returns>A <see cref="T:System.Collections.ICollection" /> コントロール階層の構築に使用されるフィールドを格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> にプロパティが設定されている `true`, 、バインドされた列のフィールドは、データ ソース内の各フィールドが自動的に作成します。 内の行としてバインドされた列の各フィールドが表示されます、 <xref:System.Web.UI.WebControls.GridView> データ ソースのフィールドの順序で制御します。<xref:System.Web.UI.WebControls.GridView.CreateColumns%2A> メソッドの使用を自動的に生成される列フィールドを作成します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの既定のスタイルを作成します。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> コントロールのスタイルを表します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.CreateControlStyle%2A> メソッドの使用をコントロールの既定のスタイルを作成します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> で処理するため、データ ソースに渡された引数を格納するオブジェクト。</summary>
        <returns>A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> データ ソースに渡された引数を格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.CreateDataSourceSelectArguments%2A> メソッドによって呼び出されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.GridView> コントロールを作成する、 <xref:System.Web.UI.DataSourceSelectArguments> データ ソースに渡される引数を格納するオブジェクト。 この実装では、 <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトには、ページング操作の引数が含まれています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When extending the <see cref="T:System.Web.UI.WebControls.GridView" /> class, you can override this method to specify your own values that are passed to the data source.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.GridViewRow CreateRow (int rowIndex, int dataSourceIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.GridViewRow CreateRow(int32 rowIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.CreateRow(System.Int32,System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="rowIndex">作成する行のインデックス。</param>
        <param name="dataSourceIndex">データのインデックスは、行のバインド先の項目をソースです。</param>
        <param name="rowType">
          <see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 値のいずれか。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか。</param>
        <summary>内の行を作成、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 、指定されたパラメーターを使用して作成します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.CreateRow%2A> で行を作成するメソッドが使用される、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。 データ バインド <xref:System.Web.UI.WebControls.GridView> コントロールは、ターゲット データを表示するために必要な行を自動的に生成されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースを <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールにバインドします。 このメソッドは継承できません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.GridView.DataBind> method to bind data from a data source to the <xref:System.Web.UI.WebControls.GridView> control. This method resolves all data\-binding expressions in the active template of the control.  
  
 The <xref:System.Web.UI.WebControls.GridView.DataBind%2A> method is called automatically if the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the <xref:System.Web.UI.WebControls.GridView> control refers to a valid data source control.  
  
 Instead of manually calling the <xref:System.Web.UI.WebControls.GridView.DataBind%2A> method, you can use model binding with your <xref:System.Web.UI.WebControls.GridView.DataBind%2A> control by setting the <xref:System.Web.UI.WebControls.DataBoundControl.SelectMethod%2A> property to the name of a method that returns data for the <xref:System.Web.UI.WebControls.GridView>. The <xref:System.Web.UI.WebControls.GridView> is then automatically populated with the data that is returned from the select method. Model binding can simplify your code for working with data. For more information, see [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117).  
  
   
  
## 例  
 The following example demonstrates how to use the <xref:System.Web.UI.WebControls.GridView.DataBind> method to bind a data source to a <xref:System.Web.UI.WebControls.GridView> control.  
  
 [!code-csharp[GridViewDataBind\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataBind/CS/gridviewdatabindcs.aspx#1)]
 [!code-vb[GridViewDataBind\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataBind/VB/gridviewdatabindvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示される項目の主キー フィールドの名前を格納する配列、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>表示される項目のフィールドの主キーの名前を含む配列、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティをデータ ソースの主キーを表すフィールドを指定します。 このプロパティは、各行を一意に識別するために必要なフィールドにのみ設定する必要があります。たとえば、整数値を一意に場合は、ID 列は、各行を識別します。 設定する必要があります、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> 自動のためにプロパティが更新およびの機能を削除、 <xref:System.Web.UI.WebControls.GridView> コントロールを動作します。 これらのキー フィールドの値は、行を更新または削除を指定するために、データ ソース コントロールに渡されます。  
  
 データがキーの値を更新するときか、行の削除を使用して取得する必要がある場合、 `Keys` いずれかのプロパティ、 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> または <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> クラスです。 たとえば、 `e.Keys[0]` 内の最初のデータ キーの値を保持する、 <xref:System.Web.UI.WebControls.GridView.RowUpdating> または <xref:System.Web.UI.WebControls.GridView.RowDeleting> イベント ハンドラーです。  
  
 使用して行を選択すると、データのキー値を取得する必要がある場合、 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> プロパティです。  
  
 ときに、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティを設定すると、 <xref:System.Web.UI.WebControls.GridView> コントロールを自動的に入力、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> をそれぞれの行の主キーにアクセスする便利な方法で指定したフィールドまたはフィールドから値を持つコレクション。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> コントロールがコントロールの状態にこれらのキー フィールドの値を格納します。 これらの値に機密情報が含まれている場合を設定して、ビュー ステートの暗号化を有効にすることを強くお勧めします <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> プロパティを `ViewStateEncryptionMode.Always`します。  
  
 フィールドの列を使用すると自動的に生成された \(設定して、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> プロパティを `true`\)、 <xref:System.Web.UI.WebControls.GridView> コントロールを使用するのに複数のフィールドに対応する列が指定されていることを確認して、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティは読み取り専用です。  
  
 場合、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> に列フィールドのプロパティが設定されている `false`, に列が表示されない、 <xref:System.Web.UI.WebControls.GridView> コントロールと列のデータは、ラウンド トリップに加えないでクライアントです。 クライアントで使用する表示になっている列のデータを表示する場合は、フィールド名を追加、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティをデータ ソースのキー フィールドを指定します。 この例で、 `DataKeyNames` の属性、 `GridView` マークアップ内の要素が名前を区切るコンマを使用して 2 つのキー フィールドを指定します。 この例を実行するには、次のある Web サイトを作成します。  
  
-   AdventureWorksLT サンプル データベースとの名前は、接続文字列への接続を `AdventureWorksLTConnectionString`します。 AdventureWorksLT サンプル データベースを設定する方法については、次を参照してください。 [Walkthrough: Setting up an AdventureWorksLT Sample Database for ASP.NET Development](http://msdn.microsoft.com/ja-jp/2baad633-9d63-49cc-a6b2-917cafd35356)します。  
  
-   LINQ の SQL データ コンテキスト クラスという `AdventureWorksLTDataClassesDataContext`します。 データ コンテキストには、SalesOrderDetails テーブルのクラスが必要です。 LINQ\-SQL クラスを作成する方法については、次を参照してください。 [LINQ to SQL](http://msdn.microsoft.com/ja-jp/73d13345-eece-471a-af40-4cc7a2f11655)します。  
  
 [!code-csharp[GridViewEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEdit/CS/editorders.aspx#1)]
 [!code-vb[GridViewEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEdit/VB/editorders.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.DataKey" /> 、データを表すオブジェクトのキー内の各行の値、 <see cref="T:System.Web.UI.WebControls.GridView" /> 制御します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataKeyArray" /> の各行のデータのキーを格納する、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティが設定されて、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に作成、 <xref:System.Web.UI.WebControls.DataKey> コントロール内の各行のオブジェクト。<xref:System.Web.UI.WebControls.DataKey> オブジェクトで指定されたフィールドの値が格納、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティです。<xref:System.Web.UI.WebControls.DataKey> オブジェクトは、コントロールに追加し、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> コレクションです。 使用して、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> 取得するプロパティを <xref:System.Web.UI.WebControls.DataKey> オブジェクト内の特定のデータ行に対して、 <xref:System.Web.UI.WebControls.GridView> 制御します。  
  
> [!NOTE]
>  使用することができます、 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> 取得するプロパティを <xref:System.Web.UI.WebControls.DataKey> 現在選択されている行のオブジェクト。 使用することも、 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 現在選択されている行のデータのキー値を直接取得するプロパティです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> で選択した行のデータのキー値を決定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewDataKeys\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDataKeys/CS/gridviewdatakeyscs.aspx#1)]
 [!code-vb[GridViewDataKeys\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDataKeys/VB/gridviewdatakeysvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを削除するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、データ バインド メソッドとして使用するモデルのバインディングとします。  
  
 Web フォームでモデルのバインディングの使用に関するチュートリアル シリーズは、次を参照してください。 [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRow">
      <MemberSignature Language="C#" Value="public virtual void DeleteRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">削除する行のインデックス。</param>
        <summary>データ ソースから指定したインデックスにあるレコードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.DeleteRow%2A> プログラムを使用して、データ ソースから指定したインデックスにあるレコードを削除する方法です。 外部からのレコードを削除する必要がある場合、このメソッドは通常使用、 <xref:System.Web.UI.WebControls.GridView> \] ページで別の管理からなどを制御します。 またを発生させるでこのメソッドを呼び出して、 <xref:System.Web.UI.WebControls.GridView.RowDeleted> と <xref:System.Web.UI.WebControls.GridView.RowDeleting> イベントです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.DeleteRow%2A> メソッドでレコードをプログラムで削除する、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewDeleteRow\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewDeleteRow/CS/GridViewDeleteRowcs.aspx#1)]
 [!code-vb[GridViewDeleteRow\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewDeleteRow/VB/GridViewDeleteRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールがデータ ソース コントロールにバインドされていません。</exception>
        <exception cref="T:System.NotSupportedException">データ ソースを制御する、 <see cref="T:System.Web.UI.WebControls.GridView" /> 、削除操作をサポートしていませんコントロールがバインドされているか、削除コマンドが、データ ソースの定義はありません。</exception>
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を編集する行のインデックス。</summary>
        <value>編集する行の 0 から始まるインデックス。 既定では\-1 で、行が編集されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 行インデックスは 0 から始まる \(最初の行は行 0\)。  
  
 このプロパティは通常、特定のイベント ハンドラーに関係する次のシナリオでのみ使用されます。  
  
-   たい、 <xref:System.Web.UI.WebControls.GridView> コントロールを特定の行の編集モードで開くには初めてのページが表示されます。 これを行うには、設定することができます、 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> イベントのハンドラーのプロパティ、 <xref:System.Web.UI.Control.Load> のイベント、 <xref:System.Web.UI.Page> クラスや、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
-   行が更新された後に編集された行を確認するには。 これを行うから行のインデックスを取得できます、 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> プロパティに、 <xref:System.Web.UI.WebControls.GridView.RowUpdated> イベント ハンドラーです。  
  
-   バインドして、 <xref:System.Web.UI.WebControls.GridView> コントロールを設定してデータ ソース、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> プロパティ プログラムを使用しています。 ここで設定する必要があります、 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> プロパティに、 <xref:System.Web.UI.WebControls.GridView.RowEditing> と <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> イベント ハンドラーです。  
  
 設定した場合、 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> プロパティは、ポストバック後に、または発生するイベントのハンドラーでよりも後の <xref:System.Web.UI.Control.Load> 、イベント、 <xref:System.Web.UI.WebControls.GridView> コントロールには、指定された行の編集モードは入力可能性があります。 他のイベント ハンドラーで、このプロパティの値を読み取る場合、インデックスは編集されている行を反映するためには保証されません。  
  
 ユーザーが行を確認するのにはクリックすると、 **編集** ボタンまたはハイパーリンクをする前に、 <xref:System.Web.UI.WebControls.GridView> コントロールが編集モードに入るから行のインデックスを取得することができます、 <xref:System.Web.UI.WebControls.GridViewEditEventArgs.NewEditIndex%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewEditEventArgs> 内のオブジェクト、 <xref:System.Web.UI.WebControls.GridView.RowEditing> イベント ハンドラーです。  
  
 防ぐために、 <xref:System.Web.UI.WebControls.GridView> に入るをコントロールの編集モード、ユーザーがクリックした後、 **編集** ボタンやハイパーリンク、セット、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewEditEventArgs> オブジェクトを `true` で、 <xref:System.Web.UI.WebControls.GridView.RowEditing> イベント ハンドラーです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.EditIndex%2A> で編集した後は、どの行が更新されたプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 更新プログラムが成功したことを示すためにメッセージを表示します。  
  
 [!code-csharp[GridViewRows\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-vb[GridViewRows\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したインデックスは、\-1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトで編集するために選択した行の外観を設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> で編集されている行のスタイルを表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> で編集されている行の外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `EditRowStyle-ForeColor`\)。  
  
-   入れ子、 `<EditRowStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `EditRowStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.EditRowStyle%2A> で編集されている行のカスタム スタイルを定義するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewEditRowStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewEditRowStyle/CS/gridvieweditrowstylecs.aspx#1)]
 [!code-vb[GridViewEditRowStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewEditRowStyle/VB/gridvieweditrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトの空のデータ行の外観を設定することができますがレンダリングされるときに、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールがいくつかのレコードが含まれていないデータ ソースにバインドします。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> null の行の外観を設定することができます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> プロパティで null の行の外観を制御する、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 コントロールにバインドされているデータ ソースにはいくつかのレコードが含まれていない場合は、null の行が表示されます。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `EmptyDataRowStyle-ForeColor`\)。  
  
-   入れ子、 `<EmptyDataRowStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `EmptyDataRowStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、設定、 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> 明るい青色の背景と null の行に赤いフォントを指定するには、宣言によってプロパティです。  
  
 [!code-csharp[GridViewNullRowTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-vb[GridViewNullRowTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または空のデータ行がレンダリングされるときに、ユーザー定義の内容を設定、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールがいくつかのレコードが含まれていないデータ ソースにバインドします。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> のカスタム コンテンツを空のデータ行を格納しています。 既定値は <see langword="null" />, 、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 空のデータ行を表示、 <xref:System.Web.UI.WebControls.GridView> コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御します。 空のデータ行の独自のカスタム ユーザー インターフェイス \(UI\) を定義するにを使用して、 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> プロパティです。  
  
 空のデータ行のカスタム テンプレートを指定するには、最初に `<EmptyDataTemplate>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、 `<EmptyDataTemplate>` タグ。 空のデータ行のスタイルを制御する、 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> プロパティです。 設定して、空のデータ行の組み込みの UI を使用することができます、 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> このプロパティではなくプロパティです。  
  
 空のデータ テンプレートで宣言されたコントロールをプログラムでアクセスする方法については、次を参照してください。 [How to: Access Server Controls by ID](http://msdn.microsoft.com/ja-jp/59964ef8-72ef-4159-9f1a-5b230ff46fb3)します。  
  
> [!NOTE]
>  どちらの場合、 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> と <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> のプロパティを設定、 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> プロパティが優先されます。  
  
   
  
## 例  
 次の例では、空のデータ行には、場合に表示されるは、カスタム テンプレートを定義する方法、 <xref:System.Web.UI.WebControls.GridView> コントロールがいくつかのレコードが含まれていないデータ ソースにバインドします。  
  
 [!code-csharp[GridViewNullRowTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewNullRowTemplate/CS/gridviewnullrowtemplatecs.aspx#1)]
 [!code-vb[GridViewNullRowTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewNullRowTemplate/VB/gridviewnullrowtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定が、空のデータ行に表示されるテキストを表示、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールがいくつかのレコードが含まれていないデータ ソースにバインドします。</summary>
        <value>空のデータ行に表示するテキストです。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 空のデータ行を表示、 <xref:System.Web.UI.WebControls.GridView> コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御します。 使用して、 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> プロパティを空のデータ行に表示するテキストを指定します。 空のデータ行のスタイルを制御する、 <xref:System.Web.UI.WebControls.GridView.EmptyDataRowStyle%2A> プロパティです。 代わりに、空のデータ行の独自のカスタム ユーザー インターフェイス \(UI\) を定義するには、 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> このプロパティではなくプロパティです。  
  
> [!NOTE]
>  どちらの場合、 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> と <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> のプロパティを設定、 <xref:System.Web.UI.WebControls.GridView.EmptyDataTemplate%2A> プロパティが優先されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.EmptyDataText%2A> プロパティを空のデータ行に表示するテキストを指定します。  
  
 [!code-csharp[GridViewEmptyDataText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewemptydatatext/CS/gridviewemptydatatextcs.aspx#1)]
 [!code-vb[GridViewEmptyDataText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewemptydatatext/VB/gridviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証コントロールがまたは操作の更新挿入時に発生する例外を処理するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 検証コントロールは、または操作の更新挿入時に発生する例外を処理する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはインデックスまたはデータ キーの値に、行の選択をに基づいてかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 行の選択はデータ キーの値に基づいている場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、する場合 `false` 、行が選択されていると、新しいページがある別のデータを持っていて、新しいページが表示されるときに、同じ行が選択されています。 このプロパティを設定する場合 `true`, 別のデータを持つページを表示するときに、行が選択されていません。 返す場合は、行が選択されたページに、その行が選択されたままです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSortingAndPagingCallbacks">
      <MemberSignature Language="C#" Value="public virtual bool EnableSortingAndPagingCallbacks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSortingAndPagingCallbacks" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または並べ替えとページング操作のクライアント側のコールバックを使用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 並べ替えとページング操作はクライアント側のコールバックを使用するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、並べ替えやページング操作が実行されるときに、 <xref:System.Web.UI.WebControls.GridView> 操作を実行するサーバーへのポストバックを制御します。 ときに、 <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> にプロパティが設定されている `true`, サービスは、並べ替えを実行するクライアントで呼び出される、およびページング操作は、投稿する必要があるが、サーバーにバックアップします。  
  
> [!NOTE]
>  すべてのブラウザーでは、この機能をサポートします。 ブラウザーがこの機能をサポートしているかどうかを確認するのには、使用、 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> プロパティです。  
  
 すべての列、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションは、この機能を使用するためのコールバックをサポートする必要があります。 場合、 <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションには、コールバック関数がなど、サポートされていない列が含まれています。 <xref:System.Web.UI.WebControls.TemplateField>, 、 <xref:System.NotSupportedException> 例外が発生します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> プロパティの並べ替えとページング操作のクライアント側のコールバックを有効にします。  
  
 [!code-csharp[GridViewEnableSortingAndPagingCallbacks\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/CS/gridviewenablesortingandpagingcallbackscs.aspx#1)]
 [!code-vb[GridViewEnableSortingAndPagingCallbacks\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewenablesortingandpagingcallbacks/VB/gridviewenablesortingandpagingcallbacksvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.GridView.Columns" /> コレクションには、コールバック関数がなど、サポートされていない列が含まれています。 <see cref="T:System.Web.UI.WebControls.TemplateField" />します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, class System.Web.UI.WebControls.GridViewRow row, bool includeReadOnlyFields, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.GridViewRow,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="includeReadOnlyFields" Type="System.Boolean" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> フィールド値を格納するために使用します。</param>
        <param name="row">
          <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 元となると、フィールド値を取得します。</param>
        <param name="includeReadOnlyFields">
          <see langword="true" /> 読み取り専用のフィールドを含めるそれ以外の場合、 <see langword="false" />です。</param>
        <param name="includePrimaryKey">
          <see langword="true" /> 主キー フィールドまたはフィールドを含めるそれ以外の場合、 <see langword="false" />です。</param>
        <summary>指定した行の中で宣言された各フィールドの値を取得し、指定した保存 <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> メソッドによって呼び出されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.GridView> で指定された行の中で宣言された各フィールドの値を取得するコントロール、 `row` パラメーター。 抽出された値を使用して、読み取り専用のフィールドとキー フィールドを含めるかどうかを指定することができます、 `includeReadOnlyFields` と `includePrimaryKey` パラメーターをそれぞれします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When extending the <see cref="T:System.Web.UI.WebControls.GridView" /> class, you can override this method to create your own routine to retrieve the field values.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> にフッター行を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> にフッター行を表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> にプログラムでアクセス プロパティ、 <xref:System.Web.UI.WebControls.GridViewRow> にフッター行を表すオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> プロパティは後でのみ使用可能な <xref:System.Web.UI.WebControls.GridView> コントロールにフッター行の作成、 <xref:System.Web.UI.WebControls.GridView.RowCreated> イベントです。  
  
 たとえば、カスタム コンテンツを追加するときに、フッター行をプログラムで操作する必要がある場合は、このプロパティは使用一般的です。 変更を加える、 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> プロパティは後に実行しなければならない、 <xref:System.Web.UI.WebControls.GridView> レンダリングされた以外の場合、コントロールが表示された、 <xref:System.Web.UI.WebControls.GridView> コントロール変更は上書きされます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.FooterRow%2A> フッター行の並べ替えの方向を表示するプロパティです。  
  
 [!code-csharp[GridViewFooterRow\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-vb[GridViewFooterRow\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowFooter" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクト内のフッター行の外観を設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> にフッター行のスタイルを表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> のフッター行の外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `FooterStyle-ForeColor`\)。  
  
-   入れ子、 `<FooterStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `FooterStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> にフッター行にカスタム スタイルを定義するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewShowHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-vb[GridViewShowHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView> 実装するコントロール、 <xref:System.Web.UI.ICallbackEventHandler> インターフェイスと使用、 <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> データを非同期的に取得して、 <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> コントロールに対して、取得したデータを返すメソッド。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCallbackScript">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">コールバック スクリプトを作成する対象のボタン コントロールです。</param>
        <param name="argument">コールバック スクリプトに渡す引数。</param>
        <summary>並べ替え操作を実行するボタンのコールバック スクリプトを作成します。</summary>
        <returns>並べ替え操作を実行するボタンのコールバック スクリプトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.GetCallbackScript%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.GridView> 並べ替え操作を実行するボタンのコールバック スクリプトを作成するコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の枠線のスタイル、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridLines" /> 値のいずれか。 既定値は、<see langword="GridLines.Both" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.GridLines%2A> の枠線のスタイルを指定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 次の表は、使用可能なスタイルを示します。  
  
|スタイル|説明|  
|----------|--------|  
|`GridLines.None`|グリッド線は表示されません。|  
|`GridLines.Horizontal`|水平のグリッド線のみが表示されます。|  
|`GridLines.Vertical`|垂直のグリッド線のみが表示されます。|  
|`GridLines.Both`|水平および垂直のグリッドの線が表示されます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.GridLines%2A> プロパティのグリッド線を非表示にする、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewGridLines\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewGridLines/CS/gridviewgridlinescs.aspx#1)]
 [!code-vb[GridViewGridLines\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewGridLines/VB/gridviewgridlinesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> ヘッダー行を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> にヘッダー行を表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> にプログラムでアクセス プロパティ、 <xref:System.Web.UI.WebControls.GridViewRow> ヘッダー行を表すオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> プロパティは後でのみ使用可能な <xref:System.Web.UI.WebControls.GridView> コントロールはヘッダー行を作成、 <xref:System.Web.UI.WebControls.GridView.RowCreated> イベントです。  
  
 このプロパティは通常、カスタム コンテンツを追加するときに、ヘッダー行をプログラムで操作する必要がある場合に使用します。 変更を加える、 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> プロパティは後に実行しなければならない、 <xref:System.Web.UI.WebControls.GridView> レンダリングされた以外の場合、コントロールが表示された、 <xref:System.Web.UI.WebControls.GridView> コントロール変更は上書きされます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.HeaderRow%2A> プログラムでヘッダー行のフォントの色を変更するプロパティは、並べ替えの方向に基づいています。  
  
 [!code-csharp[GridViewFooterRow\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-vb[GridViewFooterRow\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトのヘッダー行の外観を設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> ヘッダー行のスタイルを表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> ヘッダー行の外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `HeaderStyle-ForeColor`\)。  
  
-   入れ子、 `<HeaderStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `HeaderStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> ヘッダー行のカスタム スタイルを定義するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewShowHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-vb[GridViewShowHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の横方向の配置、 <see cref="T:System.Web.UI.WebControls.GridView" /> ページ上のコントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 値のいずれか。 既定値は、<see langword="HorizontalAlign.NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A> の水平方向の配置を指定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> ページ内のコントロールです。 次の表は、さまざまな水平方向の配置のスタイルを示します。  
  
|アラインメント値。|説明|  
|---------------|--------|  
|`HorizontalAlign.NotSet`|水平方向の配置、 <xref:System.Web.UI.WebControls.GridView> コントロールが設定されていません。|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.GridView> コントロールは、ページの左側に配置します。|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.GridView> コントロールがページの中央に配置します。|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.GridView> コントロールは、ページの右側に配置します。|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.GridView> コントロールは、ページの左と右の余白に揃えられます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.HorizontalAlign%2A> プロパティに合わせて、 <xref:System.Web.UI.WebControls.GridView> ページの右側にあるコントロール。  
  
 [!code-csharp[GridViewHorizontalAlign\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewHorizontalAlign/CS/gridviewhorizontalaligncs.aspx#1)]
 [!code-vb[GridViewHorizontalAlign\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewHorizontalAlign/VB/gridviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.GridViewRow row, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.GridViewRow row, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializePager(System.Web.UI.WebControls.GridViewRow,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> を表す、ページャーを初期化します。</param>
        <param name="columnSpan">ページの行に使用する列の数。</param>
        <param name="pagedDataSource">A <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> データ ソースを表します。</param>
        <summary>ページング機能が有効にすると表示されるページの行を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.InitializePager%2A> ページング機能が有効にすると表示されるページの行を初期化するメソッドを使用します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.GridViewRow row, System.Web.UI.WebControls.DataControlField[] fields);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.GridViewRow row, class System.Web.UI.WebControls.DataControlField[] fields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.InitializeRow(System.Web.UI.WebControls.GridViewRow,System.Web.UI.WebControls.DataControlField[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.GridViewRow" />
        <Parameter Name="fields" Type="System.Web.UI.WebControls.DataControlField[]" />
      </Parameters>
      <Docs>
        <param name="row">A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> を初期化する行を表します。</param>
        <param name="fields">配列 <see cref="T:System.Web.UI.WebControls.DataControlField" /> で列フィールドを表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</param>
        <summary>内の行を初期化、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.InitializeRow%2A> 内の行を初期化するメソッドが使用される、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.IsBindableType(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">A <see cref="T:System.Type" /> をテストするデータ型を表します。</param>
        <summary>指定されたデータ型を内の列にバインドすることができるかどうかを決定する <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <returns>
          <see langword="true" /> 指定したデータ型内の列に連結することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロール。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.IsBindableType%2A> メソッドはプログラムで指定されたデータ型を内の列にバインドすることができるかどうかを確認する一般コントロールの開発者によって使用されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 次のデータ型の列にバインドできる、 <xref:System.Web.UI.WebControls.GridView> コントロール。  
  
-   <xref:System.Boolean?displayProperty=fullName>  
  
-   <xref:System.Byte?displayProperty=fullName>  
  
-   <xref:System.Char?displayProperty=fullName>  
  
-   <xref:System.DateTime?displayProperty=fullName>  
  
-   <xref:System.Decimal?displayProperty=fullName>  
  
-   <xref:System.Double?displayProperty=fullName>  
  
-   <xref:System.Guid?displayProperty=fullName>  
  
-   <xref:System.Int16?displayProperty=fullName>  
  
-   <xref:System.Int32?displayProperty=fullName>  
  
-   <xref:System.Int64?displayProperty=fullName>  
  
-   <xref:System.SByte?displayProperty=fullName>  
  
-   <xref:System.Single?displayProperty=fullName>  
  
-   <xref:System.String?displayProperty=fullName>  
  
-   <xref:System.UInt16?displayProperty=fullName>  
  
-   <xref:System.UInt32?displayProperty=fullName>  
  
-   <xref:System.UInt64?displayProperty=fullName>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> コントロールの保存されているコントロールの状態の値を格納しています。</param>
        <summary>内のプロパティの状態を読み込みます、 <see cref="T:System.Web.UI.WebControls.GridView" /> 場合でも、その永続化する必要があるコントロール、 <see cref="P:System.Web.UI.Control.EnableViewState" /> にプロパティが設定されている <see langword="false" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはプロパティの状態を読み込むために使用、 <xref:System.Web.UI.WebControls.GridView> 場合でも、その永続化する必要があるコントロール、 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> にプロパティが設定されている `false`します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>Web サーバー コントロールのイベントをページのユーザー インターフェイス \(UI\) サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.OnBubbleEvent%2A> メソッドを実装して、 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> ページの階層構造を子コントロールからイベントを渡すメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnBubbleEvent(System.Object,System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataPropertyChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>再バインド、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールをデータの後に、 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />, 、<see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />, 、または <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> プロパティを変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.OnDataPropertyChanged%2A> メソッドで使用されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.GridView> コントロールの後にそのデータを再バインドするコントロール、 <xref:System.Web.UI.WebControls.DataBoundControl.DataMember%2A>, 、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>, 、または <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> プロパティを変更します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When extending the <see cref="T:System.Web.UI.WebControls.GridView" /> class, you can override this method to create your own routine to rebind the data.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnDataPropertyChanged" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected override void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> メソッドは、通知、 <xref:System.Web.UI.WebControls.GridView> コントロールの基になるデータ ソースが変更されたこと、およびコントロールを再バインドする必要があります。 通常、 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> データ ソース ビューのプロパティが変更されたときに、メソッドが呼び出されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnDataSourceViewChanged(System.Object,System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されたら、Web サーバー コントロールは、インスタンスを作成および設定に必要な初期化の手順を実行する必要があります。 サーバー コントロールのライフ サイクルのこの段階で、コントロールのビュー ステートを設定する必要があります。 さらに、子またはこのコントロールの親であるかどうかにかかわらず、このメソッドが呼び出されたときにその他のサーバー コントロールにアクセスすることはできません。 他のサーバー コントロールでは、作成されたアクセスできる状態に限りません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> ページャー ボタンのいずれかをクリックすると、後でイベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 これにより、このイベントが発生するたびに、カスタムのページング操作などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.GridViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.GridViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> ページャー ボタンのいずれかをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 これにより、このイベントが発生するたびに、ページング操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPageIndexChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePreLoad">
      <MemberSignature Language="C#" Value="protected override void OnPagePreLoad (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPagePreLoad(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPagePreLoad(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>コントロールが読み込まれる前に、データ バインド コントロールの初期化状態を設定します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、ビュー ステートや内容の表示を保存する前に、必要なプリレンダ リング手順を実行するサーバー コントロールに通知します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnPreRender(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCancelingEdit">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCancelingEdit (System.Web.UI.WebControls.GridViewCancelEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCancelingEdit(class System.Web.UI.WebControls.GridViewCancelEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 編集モードでの行の \[キャンセル\] ボタンがクリックされたときにイベントが発生しますが、行が終了する前に編集モード。 これにより、なりそうな場合、行、望ましい状態でこのイベントが発生するたびに取り消し操作を停止するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCancelingEdit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCommand (System.Web.UI.WebControls.GridViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCommand(class System.Web.UI.WebControls.GridViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowCommand> でボタンをクリックすると、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=191882)します。  
  
 次の例は、イベント処理メソッドを提供する方法、 <xref:System.Web.UI.WebControls.GridView.RowCommand> イベントです。 特定の行の追加\] ボタンがクリックされたとき、 <xref:System.Web.UI.WebControls.GridView> コントロール、選択した顧客の名前、 <xref:System.Web.UI.WebControls.ListBox> コントロールです。  
  
 [!code-csharp[GridViewRowCommmand\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-vb[GridViewRowCommmand\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
      </Docs>
    </Member>
    <Member MemberName="OnRowCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowCreated (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowCreated(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.GridView> コントロールを表示できる、 <xref:System.Web.UI.WebControls.GridViewRow> コントロール内の各行に対してオブジェクトを作成する必要があります。<xref:System.Web.UI.WebControls.GridView.RowCreated> イベントが発生した各行、 <xref:System.Web.UI.WebControls.GridView> コントロールを作成します。 これにより、このイベントが発生するたびに、カスタム コンテンツを行を追加するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次の例は、イベント処理メソッドを提供する方法、 <xref:System.Web.UI.WebControls.GridView.RowCreated> イベントです。 インデックスが格納されている行が作成されるときに、 <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> のプロパティ、 <xref:System.Web.UI.WebControls.LinkButton> 新しい行に含まれているコントロール。 これにより、ユーザーがコマンド ボタンをクリックすると、行のインデックスを確認できます。  
  
 [!code-csharp[GridViewRowCreated\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-vb[GridViewRowCreated\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDataBound (System.Web.UI.WebControls.GridViewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDataBound(class System.Web.UI.WebControls.GridViewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.GridView> コントロールを表示できる、コントロール内の各行は、データ ソース内のレコードにバインドする必要があります。<xref:System.Web.UI.WebControls.GridView.RowDataBound> イベントは、データ行 \(によって表される、 <xref:System.Web.UI.WebControls.GridViewRow> オブジェクト\) データには、バインド、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 これにより、このイベントが発生するたびに、行にバインドされたデータの値を変更するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=191882)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Web.UI.WebControls.GridViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Web.UI.WebControls.GridViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowDeleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 例外が発生した後、行の削除\] ボタンがクリックされたときに、 <xref:System.Web.UI.WebControls.GridView> コントロールは、該当する行を削除します。 これにより、このイベントが発生するたびに、削除操作の結果の確認などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Web.UI.WebControls.GridViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Web.UI.WebControls.GridViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 行の削除\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールは、該当する行を削除します。 これにより、このイベントが発生するたびに、削除操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.GridView.RowDeleting" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnRowEditing (System.Web.UI.WebControls.GridViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowEditing(class System.Web.UI.WebControls.GridViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowEditing> 行の編集\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> 制御が編集モードを開始します。 これにより、このイベントが発生するたびに、編集操作をキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowEditing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.GridView.RowEditing" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Web.UI.WebControls.GridViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Web.UI.WebControls.GridViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowUpdated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 例外が発生した後、行の更新\] ボタンがクリックされたときに、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作の結果の確認などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Web.UI.WebControls.GridViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Web.UI.WebControls.GridViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 行の更新\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnRowUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.GridView.RowUpdating" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 例外が発生した後、行の選択\] ボタンがクリックされたときに、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 これにより、このイベントが発生するたびに、現在選択されている行で状態ラベルを更新するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次の例のイベント ハンドラーを作成する方法、 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> イベントです。 この例では、選択した行はビュー ステートに永続化されます。 並べ替え、ページング操作後もその行のみが選択されます。  
  
 [!code-csharp[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/CS/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.GridView.OnSelectedIndexChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.GridView.OnSelectedIndexChanged/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.GridViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.GridViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 行の選択\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 これにより、このイベントが発生するたびに、選択操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.Sorted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.Sorted> 例外が発生した後、列を並べ替えるへのハイパーリンクがクリックされると、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに、カスタムの並べ替えなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSorted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.GridViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.GridViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.GridViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.Sorting> 前に列を並べ替えるへのハイパーリンクがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに並べ替え操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.GridView.OnSorting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.GridView.Sorting" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[データ ソースのレコードを表示するのに必要なページの数を取得、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>ページ数、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページング機能が有効にすると \(設定して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`\) を使用して、 <xref:System.Web.UI.WebControls.GridView.PageCount%2A> プロパティをデータ ソース内のレコードを表示するために必要なページの合計数を決定します。 この値は、ページに表示されるレコードの数によって、データ ソース内のレコードの合計数を割って計算 \(で指定されたとおり、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティ\) と丸め処理をします。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.PageCount%2A> で表示されるページの合計数を決定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewPagerTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-vb[GridViewPagerTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示されている現在のページのインデックスを設定します。</summary>
        <value>現在表示されているページの 0 から始まるインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページング機能が有効な場合 \(設定して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`\) を使用して、 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> プロパティを現在表示されているページのインデックスを確認します。 プログラムを使用して、表示されるページを変更するのにこのプロパティを使用することもできます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> に現在表示されているページのインデックスを特定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 示していますが、どのように <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> ページ行から値を選択した後に表示されるページを指定するプロパティを使用することができます。  
  
 [!code-csharp[GridViewPagerTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-vb[GridViewPagerTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.PageIndex" /> プロパティは、0 未満の値が設定されています。</exception>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページャー ボタンのいずれかをクリックすると、後に発生する、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールはページング操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> ページャー ボタンのいずれかをクリックすると、後でイベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 これにより、このイベントが発生するたびに、カスタムのページング操作などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 ユーザーが選択したページのインデックスを特定するには、使用、 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> ページ行からユーザーが選択したページ数を表示するイベントです。  
  
 [!code-csharp[GridViewPageIndexChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanged/CS/gridviewpageindexchangedcs.aspx#1)]
 [!code-vb[GridViewPageIndexChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanged/VB/gridviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページャー ボタンのいずれかをクリックすると、その前に発生する、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールはページング操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> ページャー ボタンのいずれかをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールはページング操作を処理します。 これにより、このイベントが発生するたびに、ページング操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、 <xref:System.Web.UI.WebControls.GridView.PageIndex%2A> プロパティです。  
  
 A <xref:System.Web.UI.WebControls.GridViewPageEventArgs> オブジェクトが使用するユーザーが選択したページのインデックスを特定し、ページング操作が取り消されることを示すためにイベント処理メソッドに渡されます。 ページング操作をキャンセルするには、設定、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewPageEventArgs> オブジェクトを `true`します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> 場合は、ユーザーが別に移動しようとした場合は、ページング操作をキャンセルするイベント ページの場合、 <xref:System.Web.UI.WebControls.GridView> コントロールが編集モード。  
  
 [!code-csharp[GridViewPageIndexChanging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageIndexChanging/CS/gridviewpageindexchangingcs.aspx#1)]
 [!code-vb[GridViewPageIndexChanging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageIndexChanging/VB/gridviewpageindexchangingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewPageEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanging(System.Web.UI.WebControls.GridViewPageEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.PagerSettings" /> オブジェクトにページャー ボタンのプロパティを設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.PagerSettings" /> にページャー ボタンのプロパティを設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> プロパティのページの行の設定を制御する、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ページング機能が有効にすると、ページ行が表示されます \(設定して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`\) により、ユーザー コントロール内の別のページに移動するコントロールが含まれています。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.PagerSettings> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.PagerSettings> オブジェクト \(たとえば、 `PagerSettings-Mode`\)。  
  
-   入れ子、 `<PagerSettings>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `PagerStyle.Mode`\)。 通常、一般的な設定には、ページ行の表示モードとカスタム テキストまたはナビゲーション コントロールのイメージが含まれます。  
  
   
  
## 例  
 次の例では、設定、 <xref:System.Web.UI.WebControls.GridView.PagerSettings%2A> プロパティ宣言します。 青および薄青色のフォントとページの行の背景を設定します。  
  
 [!code-csharp[GridViewAllowPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-vb[GridViewAllowPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトのページの行の外観を設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> のページの行のスタイルを表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> のページの行の外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ページング機能が有効にすると、ページ行が表示されます \(設定して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`\) により、ユーザー コントロール内の別のページに移動するコントロールが含まれています。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `PagerStyle-ForeColor`\)。  
  
-   入れ子、 `<PagerStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `PagerStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、設定、 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> プロパティ宣言します。 青および薄青色のフォントとページの行の背景を設定します。  
  
 [!code-csharp[GridViewAllowPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowPaging/CS/gridviewallowpagingcs.aspx#1)]
 [!code-vb[GridViewAllowPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowPaging/VB/gridviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageSize" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.GridViewRow))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツのページの行を <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> のカスタム コンテンツ ページの行を格納しています。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページの行が表示されます、 <xref:System.Web.UI.WebControls.GridView> 制御ページング機能が有効にすると \(ときに、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティが設定を true に\)。 ページの行には、ユーザーがコントロールの別のページに移動できるようにするコントロールが含まれています。 使用して、独自の UI を定義する組み込みのページャー行のユーザー インターフェイス \(UI\) を使用する代わりに、 <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A> プロパティです。  
  
> [!NOTE]
>  ときに、 <xref:System.Web.UI.WebControls.GridView.PagerTemplate%2A> プロパティが設定されており、組み込みのページャー UI よりも優先されます。  
  
 ページの行のカスタム テンプレートを指定するには、最初に `<PagerTemplate>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、 `<PagerTemplate>` タグ。 ページの行の外観を制御する、 <xref:System.Web.UI.WebControls.GridView.PagerStyle%2A> プロパティです。  
  
 通常、ボタン コントロールは、ページング操作を実行するページ テンプレートに追加されます。<xref:System.Web.UI.WebControls.GridView> コントロールとボタン コントロールのページング操作の実行、 `CommandName` 「ページ」に設定するプロパティをクリックします。 ボタンの `CommandArgument` プロパティを実行するページング操作の種類を決定します。 次の表でサポートされているコマンドの引数の値、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
|`CommandArgument` の値|説明|  
|--------------------------|--------|  
|\[次へ\]|次のページに移動します。|  
|「前」|前のページに移動します。|  
|"First"|最初のページに移動します。|  
|「最後の」|最後のページに移動します。|  
|整数値|指定したページ番号に移動します。|  
  
   
  
## 例  
 次の例では、間を移動するユーザーを許可するカスタム ページ テンプレートを作成する方法、 <xref:System.Web.UI.WebControls.GridView> 制御を使用して、 <xref:System.Web.UI.WebControls.DropDownList> コントロールです。  
  
 [!code-csharp[GridViewPagerTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPagerTemplate/CS/gridviewpagertemplatecs.aspx#1)]
 [!code-vb[GridViewPagerTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPagerTemplate/VB/gridviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定\] ページで表示するレコードの数、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>1 つのページに表示するレコードの数。 既定値は 10 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページング機能が有効な場合 \(設定して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`\) を使用して、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> プロパティを 1 つのページに表示するレコードの数を指定します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A> で一度に 15 レコードを表示するプロパティを <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewPageSize\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewPageSize/CS/gridviewpagesizecs.aspx#1)]
 [!code-vb[GridViewPageSize\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewPageSize/VB/gridviewpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.PageSize" /> プロパティが 1 より小さい値に設定します。</exception>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IEnumerable" /> データ ソースを格納しています。</param>
        <summary>指定されたデータ ソース バインド、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.PerformDataBinding%2A> メソッドによって呼び出されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.GridView> コントロールの指定したデータ ソースをコントロールにバインドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Because the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method is sealed, you should override this method if you need to perform any additional tasks when binding data.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.PrepareControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの階層構造を確立します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはコントロール階層構造を確立するために使用、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡す引数。</param>
        <summary>コールバック ハンドラーの引数を作成、 <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RaiseCallbackEvent%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.GridView> のコールバック ハンドラーの引数を作成するコントロール、 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">作成するためのイベント引数、 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> イベントの発生するイベントです。</param>
        <summary>適切なイベントを発生させる、 <see cref="T:System.Web.UI.WebControls.GridView" /> サーバーへのポストバックとを制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページの呼び出し、 <xref:System.Web.UI.Page.RaisePostBackEvent%2A> ポストバック イベントが発生した場合は、メソッドの適切なイベントを発生させる、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 この呼び出しは、読み込みおよび変更通知が完了したら後、は、事前に行われる前に、ページのライフ サイクルで発生します。 作成するこのメソッドが実装されて、 <xref:System.Web.UI.WebControls.CommandEventArgs> 発生するイベントのオブジェクト。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> クライアントのブラウザーでサーバー コントロールの内容を表示するために使用します。</param>
        <summary>Web サーバー コントロールの内容を指定してクライアントのブラウザーのレンダリング <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.Render%2A> メソッドを使用して、サーバー コントロールの内容を指定してクライアントのブラウザーのレンダリング <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> オブジェクトです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RowCancelingEdit">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCancelEditEventHandler RowCancelingEdit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCancelEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードでの行の \[キャンセル\] ボタンがクリックされたときに、行が編集モードを終了する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 編集モードでの行の \[キャンセル\] ボタンがクリックされたときにイベントが発生しますが、行が終了する前に編集モード。 これにより、なりそうな場合、行、望ましい状態でこのイベントが発生するたびに取り消し操作を停止するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> オブジェクトが使用する現在の行のインデックスを特定し、取り消し操作を停止するかを示すためにイベント処理メソッドに渡されます。 取り消し操作を停止する、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewCancelEditEventArgs> オブジェクトを `true`します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> 、ユーザーの更新操作をキャンセルしたときに取り消しのメッセージを表示するイベント、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewRowCancellingEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCancellingEdit/CS/gridviewrowcancellingeditcs.aspx#1)]
 [!code-vb[GridViewRowCancellingEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCancellingEdit/VB/gridviewrowcancellingeditvb.aspx#1)]  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> データ ソースをプログラムで設定されている場合は、更新操作を取り消すにはイベントです。  
  
 [!code-csharp[GridViewRowEditing\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-vb[GridViewRowEditing\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCancelEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewCommandEventHandler RowCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンがクリックされたときに発生する <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowCommand> でボタンをクリックすると、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 内のボタン、 <xref:System.Web.UI.WebControls.GridView> コントロールは、コントロールの組み込み機能の一部を呼び出すもことができます。 これらの操作のいずれかを実行するのには、設定、 `CommandName` の次の表に示した値のいずれかのボタンのプロパティです。  
  
|`CommandName` の値|説明|  
|----------------------|--------|  
|\[キャンセル\]|編集操作をキャンセルし、返します、 <xref:System.Web.UI.WebControls.GridView> 読み取り専用モードを制御します。<xref:System.Web.UI.WebControls.GridView.RowCancelingEdit> イベントを発生させます。|  
|"削除"|現在のレコードを削除します。 発生させる、 <xref:System.Web.UI.WebControls.GridView.RowDeleting> と <xref:System.Web.UI.WebControls.GridView.RowDeleted> イベントです。|  
|\[編集\]|現在のレコードを編集モードにします。<xref:System.Web.UI.WebControls.GridView.RowEditing> イベントを発生させます。|  
|「ページ」|ページング操作を実行します。 セット、 `CommandArgument` のプロパティを実行する"First「、"末尾」へのボタン、\[次へ\]、「前」、またはページング操作の種類を指定するページ番号です。 発生させる、 <xref:System.Web.UI.WebControls.GridView.PageIndexChanging> と <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> イベントです。|  
|"Select"|現在のレコードを選択します。 発生させる、 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> と <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> イベントです。|  
|「並べ替え」|並べ替え、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 発生させる、 <xref:System.Web.UI.WebControls.GridView.Sorting> と <xref:System.Web.UI.WebControls.GridView.Sorted> イベントです。|  
|「更新」|データ ソースの現在のレコードを更新します。 発生させる、 <xref:System.Web.UI.WebControls.GridView.RowUpdating> と <xref:System.Web.UI.WebControls.GridView.RowUpdated> イベントです。|  
  
 ただし、 <xref:System.Web.UI.WebControls.GridView.RowCommand> イベントは、前の表に示されているボタンがクリックされると、操作の表に示したイベントを使用することをお勧めします。  
  
 A <xref:System.Web.UI.WebControls.GridViewCommandEventArgs> オブジェクトがクリックされたボタンのコマンドの引数とコマンドの名前を決定することによりイベント処理メソッドに渡されます。  
  
> [!NOTE]
>  イベントを発生させた行のインデックスを確認するのには、使用、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> イベントに渡されるイベント引数のプロパティです。<xref:System.Web.UI.WebControls.ButtonField> クラスが自動的に作成、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> 適切なインデックス値を持つプロパティです。 その他のコマンド ボタンを設定する必要が手動で、 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> コマンド ボタンのプロパティです。 たとえば、設定、 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> に `<%# Container.DataItemIndex %>` ときに、 <xref:System.Web.UI.WebControls.GridView> コントロールにページングを有効になっているがありません。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=191882)します。  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowCommand> から顧客の名前を追加するイベント、 <xref:System.Web.UI.WebControls.GridView> への制御、 <xref:System.Web.UI.WebControls.ListBox> 行の追加\] ボタンがクリックされたときを制御します。  
  
 [!code-csharp[GridViewRowCommmand\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommandcs.aspx#1)]
 [!code-vb[GridViewRowCommmand\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommandvb.aspx#1)]  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowCommand> 行のボタンがクリックされたときに、製品の価格を更新するイベントです。 この例は、ページング機能を有効になって、 <xref:System.Web.UI.WebControls.GridView> コントロールとセット、 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Button> コントロールを適切な行インデックス。  
  
 [!code-csharp[GridViewRowCommmand\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCommmand/CS/gridviewrowcommand2cs.aspx#2)]
 [!code-vb[GridViewRowCommmand\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCommmand/VB/gridviewrowcommand2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewCommandEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCommand(System.Web.UI.WebControls.GridViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行が作成されたときに発生する <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.GridView> コントロールを表示できる、 <xref:System.Web.UI.WebControls.GridViewRow> コントロール内の各行に対してオブジェクトを作成する必要があります。<xref:System.Web.UI.WebControls.GridView.RowCreated> イベントが発生した各行、 <xref:System.Web.UI.WebControls.GridView> コントロールを作成します。 これにより、このイベントが発生するたびに、カスタム コンテンツを行を追加するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> オブジェクトが作成されている行のプロパティにアクセスすることにより、イベント処理メソッドに渡されます。 行の特定のセルにアクセスするには、使用、 <xref:System.Web.UI.WebControls.TableRow.Cells%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewRowEventArgs> オブジェクトです。 使用して作成されている \(ヘッダー行やデータの行\) は、どの行型を指定できます、 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowCreated> イベントで作成されている行のインデックスを格納する、 <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> のプロパティ、 <xref:System.Web.UI.WebControls.LinkButton> 、行内に含まれるコントロール。 含む行のインデックスを特定できます、 <xref:System.Web.UI.WebControls.LinkButton> ユーザーがボタンをクリックしたときを制御します。  
  
 [!code-csharp[GridViewRowCreated\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowCreated/CS/gridviewrowcreatedcs.aspx#1)]
 [!code-vb[GridViewRowCreated\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowCreated/VB/gridviewrowcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDataBound" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewRowEventHandler RowDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ行がデータにバインドされているときに発生する <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.GridView> コントロールを表示できる、コントロール内の各行は、データ ソース内のレコードにバインドする必要があります。<xref:System.Web.UI.WebControls.GridView.RowDataBound> イベントは、データ行 \(によって表される、 <xref:System.Web.UI.WebControls.GridViewRow> オブジェクト\) データには、バインド、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 これにより、このイベントが発生するたびに、行にバインドされたデータの値を変更するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewRowEventArgs> オブジェクトがバインドされている行のプロパティにアクセスすることにより、イベント処理メソッドに渡されます。 行の特定のセルにアクセスするには、使用、 <xref:System.Web.UI.WebControls.TableRow.Cells%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewRow> オブジェクトに含まれている、 <xref:System.Web.UI.WebControls.GridViewRowEventArgs.Row%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewRowEventArgs> オブジェクトです。 使用している行の種類 \(ヘッダー行やデータの行\) のバインドを指定できます、 <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=191882)します。  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowDataBound> で表示されるまで、データ ソース内のフィールドの値を変更するイベント、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewRowDataBound\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDataBound/CS/gridviewrowdataboundcs.aspx#1)]
 [!code-vb[GridViewRowDataBound\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDataBound/VB/gridviewrowdataboundvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDataBound(System.Web.UI.WebControls.GridViewRowEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCreated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeletedEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後で、行の削除\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールは、該当する行を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 例外が発生した後、行の削除\] ボタンがクリックされたときに、 <xref:System.Web.UI.WebControls.GridView> コントロールは、該当する行を削除します。 これにより、このイベントが発生するたびに、削除操作の結果の確認などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> とが発生する例外の影響を受けた行の数を特定することにより、イベント処理メソッドに渡されるオブジェクト。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、 <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs.ExceptionHandled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewDeletedEventArgs> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowDeleted> 削除操作の結果をチェックするイベントです。 ユーザーに、操作が成功したかどうかを示すためにメッセージを表示します。  
  
 [!code-csharp[GridViewRowDeleted\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleted/CS/gridviewrowdeletedcs.aspx#1)]
 [!code-vb[GridViewRowDeleted\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleted/VB/gridviewrowdeletedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeletedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewDeleteEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowDeleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に行の削除\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールは、該当する行を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 行の削除\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールは、該当する行を削除します。 これにより、このイベントが発生するたびに、削除操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> オブジェクトが使用する現在の行のインデックスを特定し、削除操作が取り消されることを示すためにイベント処理メソッドに渡されます。 削除操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> オブジェクトを `true`します。 操作することも、 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Keys%2A> と <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.Values%2A> コレクション、必要に応じて、データ ソースに値が渡される前にします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowDeleting> 削除操作を取り消すにはイベントです。 このページには、 <xref:System.Web.UI.WebControls.GridView> AdventureWorksLT データベースの顧客の名前と住所の一覧を表示するコントロール。 ユーザーがクリックしたとき、 **削除** のハンドラーは、行へのリンク、 <xref:System.Web.UI.WebControls.GridView.RowDeleting> イベントは、ユーザーが削除しようとした行に表示される担当者の姓をチェックします。 姓が"Beaver"の場合は、削除操作は取り消され、エラー メッセージが表示されます。 その他の任意の名前の削除操作は続行され、行が削除されます。  
  
 イベント ハンドラーを使用して、 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs.RowIndex%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewDeleteEventArgs> 、ユーザーが削除しようとしている行を検索するオブジェクト。 この例のコンテンツを調べ、 <xref:System.Web.UI.WebControls.GridView.Rows%2A> コレクションです。 比較対象のキーの値は、値する場合を調べる、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> コレクション代わりにします。  
  
 行は、例では、単純に保つために、Customer テーブルではなく、CustomerAddress テーブルから削除されます。<xref:System.Web.UI.WebControls.GridView> コントロールは、次の 3 つのテーブルを結合する結果を表示します。 顧客、アドレス、および顧客住所。 ときに、対応する行が削除されると、CustomerAddress <xref:System.Web.UI.WebControls.GridView> 行は表示されなくなります。 参照整合性制約は、実際にはより複雑な Customer テーブルから行を削除する例については、コードになります。  
  
 AdventureWorksLT データベースを設定する方法については、次を参照してください。 [How to: Set up an AdventureWorksLT Sample Database for ASP.NET Development](http://msdn.microsoft.com/ja-jp/2baad633-9d63-49cc-a6b2-917cafd35356)します。  
  
 [!code-csharp[GridViewRowDeleting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowDeleting/CS/gridviewrowdeleting.aspx#1)]
 [!code-vb[GridViewRowDeleting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowDeleting/VB/gridviewrowdeleting.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewDeleteEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowEditing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewEditEventHandler RowEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewEditEventHandler RowEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowEditing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewEditEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に行の編集\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> 制御が編集モードを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowEditing> 行の編集\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> 制御が編集モードを開始します。 これにより、このイベントが発生するたびに、編集操作をキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewEditEventArgs> オブジェクトが使用する現在の行のインデックスを特定し、編集操作をキャンセルする必要があることを示すためにイベント処理メソッドに渡されます。 編集操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewEditEventArgs> オブジェクトを `true`します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowEditing> イベントをデータ ソースをプログラムで設定されている場合は、行を編集モードにします。  
  
 [!code-csharp[GridViewRowEditing\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-vb[GridViewRowEditing\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowEditing> 場合は、ユーザーが、米国の会社のレコードを編集しようとしています。 編集操作を取り消すにはイベントです。  
  
 [!code-csharp[GridViewRowEditing\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/gridviewroweditingcs.aspx#1)]
 [!code-vb[GridViewRowEditing\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/gridviewroweditingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewEditEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowHeaderColumn">
      <MemberSignature Language="C#" Value="public virtual string RowHeaderColumn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowHeaderColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataColumnSelectionConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の列ヘッダーとして使用する列の名前、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。</summary>
        <value>列ヘッダーとして使用する列の名前。 既定値は空の文字列 \(""\) です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 HTML では、テーブルのヘッダーは、行または列に関連付けすることはできます。 設定して指定した方向、 `scope` の属性、 `<th>` 要素。<xref:System.Web.UI.WebControls.GridView> コントロールに設定して表示可能な組み込みのヘッダー行がある、 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> プロパティを `true`します。 必要に応じて、ヘッダーの列を指定することができます \(通常、最初と最後の列、 <xref:System.Web.UI.WebControls.GridView> コントロール\) をこのプロパティを設定します。 このプロパティを設定すると、指定したフィールド名に対応する列のすべてのセルとしてレンダリングされます `<th scope="row">` 要素。  
  
> [!NOTE]
>  指定された列は、ヘッダーのように処理されますが、 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A>, 、<xref:System.Web.UI.WebControls.GridView.ShowHeader%2A>, 、および <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> プロパティは、ヘッダーの列には適用されません。  
  
 既定のレンダリング、 `<th>` 要素を保持すると、水平方向に太字と中央揃えのテキストを表示します。 開発者の動作、 `<th>` カスケードを使用して要素のスタイル シートを設定します。  
  
> [!NOTE]
>  このプロパティは、バインドされたフィールドでのみ機能します。 テンプレートのフィールドを持つことはおはされていません。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> にヘッダー列を表示するプロパティを <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewRowHeaderColumn\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewrowheadercolumn/CS/GridViewRowHeaderColumncs.aspx#1)]
 [!code-vb[GridViewRowHeaderColumn\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewrowheadercolumn/VB/GridViewRowHeaderColumnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 内のデータ行を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.GridViewRowCollection" /> 内のすべてのデータ行を格納している、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.Rows%2A> 内のデータ行を格納するプロパティ \(コレクション\) が使用される、 <xref:System.Web.UI.WebControls.GridView> コントロールです。<xref:System.Web.UI.WebControls.GridView> コントロールを自動的に入力、 <xref:System.Web.UI.WebControls.GridView.Rows%2A> コレクションを作成することで、 <xref:System.Web.UI.WebControls.GridViewRow> オブジェクトのデータ ソース内の各レコードと、各オブジェクトをコレクションに追加します。 このプロパティは、コントロール内の特定の行にアクセスする、または行のコレクション全体を反復処理する場合によく使用されます。  
  
> [!NOTE]
>  持つ行だけが <xref:System.Web.UI.WebControls.GridViewRow.RowType%2A> プロパティに設定 `DataControlRowType.DataRow` に格納されて、 <xref:System.Web.UI.WebControls.GridView.Rows%2A> コレクションです。<xref:System.Web.UI.WebControls.GridViewRow> ヘッダー、フッター、およびポケットベルの行を表すオブジェクトは、コレクションには含まれません。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.Rows%2A> で編集されている行にアクセスするコレクション、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 行が更新された後は、更新プログラムが成功したことを示すために、メッセージが表示されます。  
  
 [!code-csharp[GridViewRows\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRows/CS/gridviewrowscs.aspx#1)]
 [!code-vb[GridViewRows\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRows/VB/gridviewrowsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewRowCollection" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクト内のデータ行の外観を設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 内のデータ行のスタイルを表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 内のデータ行の外観を制御するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ときに、 <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> プロパティが設定され、データ行が交互に表示されます、 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 設定、および <xref:System.Web.UI.WebControls.GridView.AlternatingRowStyle%2A> 設定します。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `RowStyle-ForeColor`\)。  
  
-   入れ子、 `<RowStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `RowStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowStyle%2A> 宣言内の項目の行のスタイルを定義するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewRowStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowStyle/CS/gridviewrowstylecs.aspx#1)]
 [!code-vb[GridViewRowStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowStyle/VB/gridviewrowstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="RowUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdatedEventHandler RowUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後で、行の更新\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールは、行を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 例外が発生した後、行の更新\] ボタンがクリックされたときに、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作の結果の確認などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> とが発生する例外の影響を受けた行の数を特定することにより、イベント処理メソッドに渡されるオブジェクト。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs.ExceptionHandled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewUpdatedEventArgs> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowUpdated> 更新操作の結果をチェックするイベントです。 ユーザーに、操作が成功したかどうかを示すためにメッセージを表示します。  
  
 [!code-csharp[GridViewRowUpdated\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowUpdated/CS/gridviewrowupdatedcs.aspx#1)]
 [!code-vb[GridViewRowUpdated\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowUpdated/VB/gridviewrowupdatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdatedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleted(System.Web.UI.WebControls.GridViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowDeleting(System.Web.UI.WebControls.GridViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RowUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewUpdateEventHandler RowUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.RowUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に行の更新\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールは、行を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.RowUpdating> 行の更新\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールは、行を更新します。 これにより、このイベントが発生するたびに、更新操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> オブジェクトが使用する現在の行のインデックスを特定し、更新操作が取り消されることを示すためにイベント処理メソッドに渡されます。 更新操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs> オブジェクトを `true`します。 操作することも、 <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, 、<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A>, 、および <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> コレクション、必要に応じて、データ ソースに値が渡される前にします。 これらのコレクションを使用する一般的な方法では、データ ソースに格納する前に、ユーザーによって指定された値に HTML エンコードです。 これは、スクリプト インジェクション攻撃を防ぐのに役立ちます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.Keys%2A>, 、<xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.OldValues%2A> と <xref:System.Web.UI.WebControls.GridViewUpdateEventArgs.NewValues%2A> コレクションが自動的に設定される場合にのみ、 <xref:System.Web.UI.WebControls.GridView> コントロールにバインドするデータを使用して、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.RowUpdating> データ ソースをプログラムで設定されている場合は、データ ソース オブジェクトの値を更新するイベントです。  
  
 [!code-csharp[GridViewRowEditing\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewRowEditing/CS/GridViewRowEditing2CS.aspx#2)]
 [!code-vb[GridViewRowEditing\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewRowEditing/VB/GridViewRowEditing2VB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewUpdateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdating(System.Web.UI.WebControls.GridViewUpdateEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowCancelingEdit" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowCancelingEdit(System.Web.UI.WebControls.GridViewCancelEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowEditing" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowEditing(System.Web.UI.WebControls.GridViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnRowUpdated(System.Web.UI.WebControls.GridViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のプロパティの状態を保存、 <see cref="T:System.Web.UI.WebControls.GridView" /> 場合でも、その永続化する必要があるコントロール、 <see cref="P:System.Web.UI.Control.EnableViewState" /> にプロパティが設定されている <see langword="false" />します。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはプロパティの状態の保存に使用、 <xref:System.Web.UI.WebControls.GridView> 場合でも、その永続化する必要があるコントロール、 <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> にプロパティが設定されている `false`します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールのビュー ステートを読み込みます。</summary>
        <returns>A <see cref="T:System.Object" /> コントロールの保存されているビュー ステートの値を格納しています。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.DataKey" /> オブジェクトで選択した行のデータのキー値を含む、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataKey" /> で選択した行の <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 既定値は <see langword="null" />, 、行は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティが設定されて、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に作成、 <xref:System.Web.UI.WebControls.DataKey> 値または指定したフィールドまたはフィールドの値を使用してコントロールの各行のオブジェクト。<xref:System.Web.UI.WebControls.DataKey> オブジェクトは、コントロールに追加し、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> コレクションです。 通常、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> プロパティを使用して、取得、 <xref:System.Web.UI.WebControls.DataKey> オブジェクト内の特定のデータ行に対して、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ただし、取得した場合必要、 <xref:System.Web.UI.WebControls.DataKey> オブジェクトの現在選択されている行を使用すると、 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> ショートカット プロパティです。  
  
> [!NOTE]
>  これは取得と同じ、 <xref:System.Web.UI.WebControls.DataKey> で指定されたインデックス位置にオブジェクト、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> プロパティから、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> コレクションです。 使用することも、 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> 現在選択されている行のデータのキー値を直接取得するプロパティです。  
  
 作成する場合、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトし、ファイルを指定する 1 つ目のフィールド以外のキー フィールドにアクセス、インデックス付き <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> プロパティに、 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトです。 例は、次のとおりです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> で選択した行のデータのキー値を決定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewSelectedDataKey\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKey/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-vb[GridViewSelectedDataKey\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKey/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 次の例では、マスター\/詳細シナリオではパラメーターとして 2 つ目のキー フィールドを使用する方法を示します。 A <xref:System.Web.UI.WebControls.GridView> コントロールを使用して、Northwind データベースの Order Details テーブルからレコードを表示します。 レコードが選択した場合、 <xref:System.Web.UI.WebControls.GridView> コントロール、Products テーブルから製品の詳細に表示されます、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。 ProductID が 2 番目のキー名で、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 2 番目のキーでは、GridView1.SelectedDataKey\[1 の値にアクセス\] として使用される、 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> の <xref:System.Web.UI.WebControls.ControlParameter> のオブジェクト、 <xref:System.Web.UI.WebControls.SqlDataSource> の制御、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。  
  
 [!code-csharp[GridViewSelectedDataKeyIndex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/CS/gridviewselecteddatakeycs.aspx#1)]
 [!code-vb[GridViewSelectedDataKeyIndex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedDataKeyIndex/VB/gridviewselecteddatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">データのキーが指定されていない、 <see cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" /> プロパティです。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で選択した行のインデックス、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>選択されている行の 0 から始まるインデックス、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 既定では\-1 で、行は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> で現在選択されている行のインデックスを特定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このプロパティを使用するプログラムを使用して、コントロールの行を選択します。 行の選択をクリアするには、\-1 にこのプロパティを設定します。 使用して、現在選択されている行の外観をカスタマイズすることができます、 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> プロパティです。 現在選択されている行にアクセスするには、使用、 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> プロパティです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> で 2 番目の行を選択するプロパティを <xref:System.Web.UI.WebControls.GridView> コントロールが最初に表示される場合を制御します。  
  
 [!code-csharp[GridViewSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-vb[GridViewSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" /> プロパティが\-1 未満の値に設定します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後で、行の選択\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールが選択操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> 例外が発生した後、行の選択\] ボタンがクリックされたときに、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 これにより、このイベントが発生するたびに、現在選択されている行で状態ラベルを更新するなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> の選択した行に顧客の名前を表示するイベント、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-vb[GridViewSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSelectEventHandler SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.SelectedIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSelectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に行の選択\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールが選択操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 行の選択\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールが選択操作を処理します。 これにより、このイベントが発生するたびに、選択操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> プロパティです。  
  
 A <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> オブジェクトが使用するユーザーが選択されている行のインデックスを特定し、選択操作をキャンセルするかを示すためにイベント処理メソッドに渡されます。 選択操作をキャンセルするには設定、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewSelectEventArgs> オブジェクトを `true`します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanging> 選択操作を取り消すにはイベントです。  
  
 [!code-csharp[GridViewSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-vb[GridViewSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridViewSelectEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateSelectButton" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanging(System.Web.UI.WebControls.GridViewSelectEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedPersistedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ キー値で永続化された選択した項目を取得または設定、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>永続化された選択項目のキー、データ、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。 既定値は <see langword="null" />, 、項目は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow SelectedRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow SelectedRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> コントロールで選択した行を表すオブジェクト。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> コントロールで選択した行を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内の行を選択すると、 <xref:System.Web.UI.WebControls.GridView> コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> 取得するプロパティを <xref:System.Web.UI.WebControls.GridViewRow> をその行を表すオブジェクト。  
  
> [!NOTE]
>  これは取得と同じ、 <xref:System.Web.UI.WebControls.GridViewRow> で指定されたインデックス位置にオブジェクト、 <xref:System.Web.UI.WebControls.GridView.SelectedIndex%2A> プロパティから、 <xref:System.Web.UI.WebControls.GridView.Rows%2A> コレクションです。  
  
 このオブジェクトは、選択した行のプロパティにアクセスし、使用できます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedRow%2A> のプロパティにアクセスするプロパティ、 <xref:System.Web.UI.WebControls.GridViewRow> で選択した行を表すオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-vb[GridViewSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedValue" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SelectedRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトで選択した行の外観を設定することができます、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> で選択した行のスタイルを表す、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> プロパティで選択した行の外観を制御する、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクトが返されます。 プロパティは、宣言によって次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.GridView> 、フォームのコントロール `Property-Subproperty`, ここで、 `Subproperty` のプロパティである、 <xref:System.Web.UI.WebControls.TableItemStyle> オブジェクト \(たとえば、 `SelectedRowStyle-ForeColor`\)。  
  
-   入れ子、 `<SelectedRowStyle>` 要素開始タグと終了タグの間、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 プロパティも設定できますプログラムを使用して、フォームで `Property.Subproperty` \(たとえば、 `SelectedRowStyle.ForeColor`\)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedRowStyle%2A> で選択した行のカスタム スタイルを定義するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewSelect\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelect/CS/gridviewselectcs.aspx#1)]
 [!code-vb[GridViewSelect\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelect/VB/gridviewselectvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AlternatingRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した行のデータのキー値を取得、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>データが選択されている行の値をキー、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> プロパティは、データ ソースの主キーを表すフィールド名のコンマ区切りの一覧、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に作成、 <xref:System.Web.UI.WebControls.DataKey> 値または指定したフィールドまたはフィールドの値を使用してコントロールの各行のオブジェクト。<xref:System.Web.UI.WebControls.DataKey> オブジェクトは、コントロールに追加し、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> コレクションです。 通常、 <xref:System.Web.UI.WebControls.GridView.DataKeys%2A> プロパティを使用して、取得、 <xref:System.Web.UI.WebControls.DataKey> オブジェクト内の特定のデータ行に対して、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ただし、取得した場合必要、 <xref:System.Web.UI.WebControls.DataKey> オブジェクトの現在選択されている行を使用すると、 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> ショートカット プロパティです。 さらに簡単な方法として直接指定できます、選択した行の最初のキー フィールドのデータ キーの値を使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> プロパティです。  
  
 作成する場合、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトを使用して最初のフィールド以外のキー フィールドにアクセスする、 <xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A> プロパティです。 例については、「<xref:System.Web.UI.WebControls.GridView.SelectedDataKey%2A>」を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SelectedValue%2A> で選択した行のデータのキー値を決定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewSelectedValue\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSelectedValue/CS/gridviewselectedvaluecs.aspx#1)]
 [!code-vb[GridViewSelectedValue\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSelectedValue/VB/gridviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SelectedDataKey" />
      </Docs>
    </Member>
    <Member MemberName="SelectRow">
      <MemberSignature Language="C#" Value="public void SelectRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SelectRow(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集する行のインデックス。</param>
        <summary>編集する行を選択、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged> イベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEditRow">
      <MemberSignature Language="C#" Value="public void SetEditRow (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditRow(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetEditRow(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集する行のインデックス。</param>
        <summary>行を編集モードでは、 <see cref="T:System.Web.UI.WebControls.GridView" /> 指定した行のインデックスを使用して制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.GridView.RowEditing> イベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.SetPageIndex(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集するには、ページ上の行のインデックス。</param>
        <summary>ページのインデックスを設定、 <see cref="T:System.Web.UI.WebControls.GridView" /> 行のインデックスを使用して制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.GridView.PageIndexChanged> イベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にフッター行を表示するかどうかを示す値、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> フッター行を表示するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> プロパティを指定するかどうか、 <xref:System.Web.UI.WebControls.GridView> コントロールにフッター行が表示されます。 フッター行の外観を制御する、 <xref:System.Web.UI.WebControls.GridView.FooterStyle%2A> プロパティです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> にフッター行を表示するプロパティを <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewShowHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-vb[GridViewShowHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にヘッダー行を表示するかどうかを示す値、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> ヘッダー行を表示するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> プロパティを指定するかどうか、 <xref:System.Web.UI.WebControls.GridView> コントロールには、ヘッダー行が表示されます。 ヘッダー行の外観を制御する、 <xref:System.Web.UI.WebControls.GridView.HeaderStyle%2A> プロパティです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.ShowHeader%2A> ヘッダー行を表示するプロパティを <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewShowHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewShowHeader/CS/gridviewshowheadercs.aspx#1)]
 [!code-vb[GridViewShowHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewShowHeader/VB/gridviewshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.ShowFooter" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeaderWhenEmpty">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeaderWhenEmpty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeaderWhenEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.ShowHeaderWhenEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかの列の見出し、 <see cref="T:System.Web.UI.WebControls.GridView" /> 列にデータがあるないときは、コントロールを表示します。</summary>
        <value>
          <see langword="true" /> ヘッダーを表示する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">並べ替えに使用すると、並べ替え式、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</param>
        <param name="sortDirection">
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。</param>
        <summary>並べ替え、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールが、指定された並べ替え式および方向に基づいています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.Sort%2A> をプログラムで並べ替える方法、 <xref:System.Web.UI.WebControls.GridView> 指定された並べ替え式と方向を使用して制御します。 並べ替え式は、列または並べ替えに使用する列を指定します。 複数の列を並べ替えるには、するには、フィールド名のコンマ区切りの一覧を含む並べ替え式を作成します。 並べ替えの方向は、昇順または降順で並べ替えを実行するかどうかを示します。 並べ替える必要がある場合、このメソッドは通常使用、 <xref:System.Web.UI.WebControls.GridView> ページの別のコントロールなど、コントロールの外部でから制御します。 このメソッドはプログラムでの既定の並べ替え順序を設定する、 <xref:System.Web.UI.WebControls.GridView> 最初の描画するタイミングを制御します。 またを発生させるでこのメソッドを呼び出して、 <xref:System.Web.UI.WebControls.GridView.Sorted> と <xref:System.Web.UI.WebControls.GridView.Sorting> イベントです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.Sort%2A> をプログラムで並べ替える方法、 <xref:System.Web.UI.WebControls.GridView> 複数の列で制御します。  
  
 [!code-csharp[GridViewSort\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSort/CS/GridViewSortcs.aspx#1)]
 [!code-vb[GridViewSort\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSort/VB/GridViewSortvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールがデータ ソース コントロールにバインドされているが、 <see cref="T:System.Web.UI.DataSourceView" /> 関連付けられているデータ ソースは <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えられる列の並べ替えの方向を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。 既定値は、<see langword="SortDirection.Ascending" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> プロパティを昇順または降順で並べ替えられる列を並べ替えるかどうかを判断します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> コントロールが組み込みの並べ替え機能が自動的にこのプロパティを設定します。 並べ替えの方向またはに独自のカスタムの並べ替え機能を追加するときにプログラムで確認する必要がある場合にのみ、このプロパティは通常使用、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SortDirection%2A> プログラムでの並べ替えの方向を決定するプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewFooterRow\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/gridviewfooterrow/CS/gridviewfooterrowcs.aspx#1)]
 [!code-vb[GridViewFooterRow\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/gridviewfooterrow/VB/gridviewfooterrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後は、列の並べ替えにハイパーリンクをクリックしたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.Sorted> 例外が発生した後、列を並べ替えるへのハイパーリンクがクリックされると、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに、カスタムの並べ替えなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.Sorted> 並べ替えられる列の名前を表示するイベントです。  
  
 [!code-csharp[GridViewSorting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-vb[GridViewSorting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CSS スタイルの取得または設定、 <see cref="T:System.Web.UI.WebControls.GridView" /> 列、列を昇順で並べ替えるとします。</summary>
        <value>
          <see langword="true" /> スタイルが適用されている場合、 <see cref="T:System.Web.UI.WebControls.GridView" /> 列が昇順で並べ替えられた、それ以外の場合を制御 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに設定すると `true`, 、データが昇順で並べ替えられた場合は、列内のセルにスタイルが適用されます。 たとえば、並べ替えの種類が昇順の場合は、列を特定の色で強調できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedAscendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedAscendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedAscendingHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に適用する CSS スタイル、 <see cref="T:System.Web.UI.WebControls.GridView" /> 列見出し、列を昇順で並べ替えるとします。</summary>
        <value>
          <see langword="true" /> スタイルが適用されている場合、 <see cref="T:System.Web.UI.WebControls.GridView" /> が昇順で並べ替えられている、それ以外の場合、列の見出し <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに設定すると `true`, 、列見出しの並べ替え方向を示す矢印が表示されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingCellStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingCellStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingCellStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のスタイル、 <see cref="T:System.Web.UI.WebControls.GridView" /> 列、列を降順で並べ替えるとします。</summary>
        <value>
          <see langword="true" /> スタイルが適用されている場合、 <see cref="T:System.Web.UI.WebControls.GridView" /> 列が降順で並べ替えられているそれ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに設定すると `true`, 、データが降順で並べ替えられた場合は、列内のセルにスタイルが適用されます。 たとえば、並べ替えの種類を降下するときは、列を特定の色で強調できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortedDescendingHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SortedDescendingHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortedDescendingHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に適用するスタイル、 <see cref="T:System.Web.UI.WebControls.GridView" /> 列見出し、列を降順で並べ替えるとします。</summary>
        <value>
          <see langword="true" /> スタイルが適用されている場合、 <see cref="T:System.Web.UI.WebControls.GridView" /> が降順で並べ替えられている、それ以外の場合、列の見出し <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに設定すると `true`, 、列見出しの並べ替え方向を示す矢印が表示されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列または並べ替えられている列に関連付けられている並べ替え式を取得します。</summary>
        <value>列または並べ替えられている列に関連付けられている並べ替え式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> プロパティまたは並べ替えられている複数の列に関連付けられている並べ替え式が決定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> コントロールが組み込みの並べ替え機能が自動的にこのプロパティを設定します。 列または並べ替えられている列をプログラムで確認する必要がある場合にのみ、このプロパティは通常使用またはに独自のカスタムの並べ替え機能を追加するとき、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 複数の列を並べ替えると、このプロパティには、並べ替えに使用するフィールドのコンマ区切りの一覧が含まれています。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.SortExpression%2A> プロパティを並べ替えられる列の名前を確認します。  
  
 [!code-csharp[GridViewAllowSortingColumns\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewAllowSortingColumns/CS/GridViewAllowSortingColumnscs.aspx#1)]
 [!code-vb[GridViewAllowSortingColumns\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewAllowSortingColumns/VB/GridViewAllowSortingColumnsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.SortDirection" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.GridViewSortEventHandler Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.GridViewSortEventHandler Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.GridView.Sorting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewSortEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に列を並べ替えるへのハイパーリンクがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.Sorting> 前に列を並べ替えるへのハイパーリンクがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.GridView> コントロールは、並べ替え操作を処理します。 これにより、このイベントが発生するたびに並べ替え操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.GridViewSortEventArgs> オブジェクトが使用する列の並べ替え式を確認し、選択操作をキャンセルするかを示すためにイベント処理メソッドに渡されます。 選択操作をキャンセルするには設定、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridViewSortEventArgs> オブジェクトを `true`します。  
  
 プログラムを使用して並べ替え操作を開始する方法については、次を参照してください。、 <xref:System.Web.UI.WebControls.GridView.Sort%2A> メソッドです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、使用、 <xref:System.Web.UI.WebControls.GridView.Sorting> 並べ替え機能を実行するときに、 <xref:System.Web.UI.WebControls.GridView> コントロールにバインドする、 <xref:System.Data.DataTable> オブジェクトを設定して、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[GridViewSorting\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsorting2cs.aspx#2)]
 [!code-vb[GridViewSorting\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsorting2vb.aspx#2)]  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.Sorting> 並べ替え操作を取り消すにはイベントです。  
  
 [!code-csharp[GridViewSorting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewSorting/CS/gridviewsortingcs.aspx#1)]
 [!code-vb[GridViewSorting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewSorting/VB/gridviewsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
        <altmember cref="T:System.Web.UI.WebControls.GridViewSortEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowSorting" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorting(System.Web.UI.WebControls.GridViewSortEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView> 実装するコントロール、 <xref:System.Web.UI.ICallbackEventHandler> インターフェイスと使用、 <xref:System.Web.UI.WebControls.GridView.RaisePostBackEvent%2A> データを非同期的に取得して、 <xref:System.Web.UI.WebControls.GridView.GetCallbackResult%2A> コントロールに対して、取得したデータを返すメソッド。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡す引数。</param>
        <summary>コールバック ハンドラーの引数を作成、 <see cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> 使用されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.GridView> のコールバック ハンドラーの引数を作成するコントロール、 <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値を取得、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</summary>
        <value>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.IDataKeysControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">作成するためのイベント引数、 <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> イベントの発生するイベントです。</param>
        <summary>適切なイベントを発生させる、 <see cref="T:System.Web.UI.WebControls.GridView" /> サーバーへのポストバックとを制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページの呼び出し、 <xref:System.Web.UI.Page.RaisePostBackEvent%2A> メソッドの適切なイベントを発生させるポストバック イベントが発生したとき、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 この呼び出しは、読み込みおよび変更通知が完了したら後、は、事前に行われる前に、ページのライフ サイクルで発生します。 作成するこのメソッドが実装されて、 <xref:System.Web.UI.WebControls.CommandEventArgs> イベントまたは発生するイベントのオブジェクト。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって拡張するための <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript">
      <MemberSignature Language="C#" Value="string ICallbackContainer.GetCallbackScript (System.Web.UI.WebControls.IButtonControl buttonControl, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(class System.Web.UI.WebControls.IButtonControl buttonControl, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#ICallbackContainer#GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buttonControl">コールバック スクリプトを作成する対象のボタン コントロールです。</param>
        <param name="argument">コールバック スクリプトに渡す引数。</param>
        <summary>並べ替え操作を実行するボタンのコールバック スクリプトを作成します。</summary>
        <returns>並べ替え操作を実行するボタンのコールバック スクリプトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.System%23Web%23UI%23WebControls%23ICallbackContainer%23GetCallbackScript%2A> 使用されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.GridView> 並べ替え操作を実行するボタンのコールバック スクリプトを作成するコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICallbackContainer.GetCallbackScript(System.Web.UI.WebControls.IButtonControl,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または主キー フィールドのデータ バインド コントロールに表示される項目の名前を設定します。</summary>
        <value>表示されるアイテムの主キー フィールドの名前を格納する配列、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 このプロパティへのアクセスを提供する、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> のプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 を介して公開される、 <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスです。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールにバインドするデータ ソース コントロールによって公開されているテーブルを設定します。</summary>
        <value>データ バインド コントロールにバインドするデータ ソース コントロールによって公開されているテーブル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 データ ソースに複数のデータ ソースが含まれている場合は、このプロパティを使用して、特定のデータ テーブル、コレクション、または他のコントロールをバインドするデータを設定します。 たとえば、データ ソースが、 <xref:System.Data.DataSet> インスタンスを複数のテーブルを含むこのプロパティを使用してコントロールをバインドするテーブルを指定することができます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース オブジェクト。</summary>
        <value>データ バインド コントロールを使用するデータ ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソースの ID。</summary>
        <value>データ バインド コントロールのデータ項目の取得元となるデータ ソースの ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース オブジェクト。</summary>
        <value>データ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース オブジェクト</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の値を持つに追加されます。 データ フィールドの名前、 <see cref="P:System.Web.UI.Control.ClientID" /> プロパティの値を、データ バインド コントロールの各インスタンスを一意に識別します。</summary>
        <value>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別する値が使用されるデータ フィールドの名前、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表すオブジェクトのコレクションを取得、<see cref="P:System.Web.UI.WebControls.GridView.DataKeys" />データ バインド コントロール内の値。</summary>
        <value>データ バインド コントロール内の各行のデータ キーを格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはインデックスまたはデータ キーの値に、行の選択をに基づいてかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 行の選択はデータ キーの値に基づいている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロールで選択した行のデータのキー値を含むオブジェクトを取得します。</summary>
        <value>選択した行のデータ キーの値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、データ バインド コントロールで選択した行のインデックスを設定します。</summary>
        <value>データ バインド コントロールで選択した行のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IFieldControl.FieldsGenerator">
      <MemberSignature Language="C#" Value="System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IAutoFieldGenerator System.Web.UI.WebControls.IFieldControl.FieldsGenerator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IFieldControl#FieldsGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IAutoFieldGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を自動的に ASP.NET Dynamic Data で使用するためのデータ バインド コントロールの列を生成するコントロール。</summary>
        <value>このコントロールは、データ バインド コントロールの列が自動的に生成されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.GridView> のインスタンスが <xref:System.Web.UI.WebControls.IFieldControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ASP.NET 動的データには、このプロパティがサポートしています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IPersistedSelector.DataKey" />」を参照してください。</summary>
        <value>データ バインド コントロールの永続化された、選択したレコードのデータ キーの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 選択した行を指定するときに永続化、 <xref:System.Web.UI.WebControls.GridView> コントロールがページング モードです。 既定では、行の選択を行のインデックスに基づきます。 各ページでは、同じ行 \(たとえば、3 番目の行\) を選択します。 また、選択した行のデータ キーに基づいて永続化を有効にできます。 その場合は、1 ページ目の 3 行目を選択すると、2 ページ目に移動する、行が選択されていない 2 ページ目にします。 1 ページ目に戻す場合は、3 行が選択されたままです。 この機能を有効にするにこのプロパティを設定します。 `true`します。  
  
> [!NOTE]
>  バージョン 2.0、3.0、および asp.net 3.5 では、行の選択は、行のインデックスにのみ基づいていました。 既定では、ASP.NET 4 での行の選択を旧バージョンとの互換性のためのインデックスに基づきます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">コールバック スクリプトを作成する対象のボタン コントロールです。</param>
        <summary>作成、 <see cref="T:System.Web.UI.PostBackOptions" /> を指定したボタン コントロールのポストバックの動作を表すオブジェクト。</summary>
        <returns>A <see cref="T:System.Web.UI.PostBackOptions" /> を表す、指定されたボタン コントロールのポストバック動作します。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buttonControl" /> パラメーターが含まれる <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="buttonControl" /> 検証を実行しようとしてを検証して同じコンテナーへのポストバックします。</exception>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.GridView.TagKey%2A> プロパティでは、適切な HTML マークアップを記述する出力ストリーム、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ときに、 <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> にプロパティが設定されている `true`, 、このプロパティを返します `HtmlTextWriterTag.Div`。 そうしないと、このプロパティを返します `HtmlTextWriterTag.Table`します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can override this property to specify which <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value to use for your derived control.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.GridViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.GridViewRow" /> 上部のページの行を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.GridViewRow" /> コントロールの上部のページの行を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページングが有効な場合 \(設定して、 <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> プロパティを `true`\)、ページ行と呼ばれる追加の行に自動的に表示されます、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ページの行には、ユーザーが他のページに移動できるようにし、上部、下部にある、または上部との両方で、コントロールの下部に表示できるコントロールが含まれています。 使用して、 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> にプログラムでアクセス プロパティ、 <xref:System.Web.UI.WebControls.GridViewRow> 上部のページの行を表すオブジェクト、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> プロパティは後でのみ使用可能な <xref:System.Web.UI.WebControls.GridView> コントロールは、上部のページの行を作成、 <xref:System.Web.UI.WebControls.GridView.RowCreated> イベントです。  
  
 このプロパティは通常、プログラムで、上部のページの行に、カスタム コンテンツを追加する場合などを操作する必要がある場合に使用します。 変更を加える、 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> プロパティは後に実行しなければならない、 <xref:System.Web.UI.WebControls.GridView> レンダリングされた以外の場合、コントロールが表示された、 <xref:System.Web.UI.WebControls.GridView> コントロール変更は上書きされます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> 上部のページの行にアクセスするプロパティ、 <xref:System.Web.UI.WebControls.GridView> コントロールです。<xref:System.Web.UI.WebControls.GridView.TopPagerRow%2A> プロパティを使用して、取得、 <xref:System.Web.UI.WebControls.DropDownList> 、ページャー コントロールです。  
  
 [!code-csharp[GridViewTopPagerRow\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewTopPagerRow/CS/gridviewtoppagerrowcs.aspx#1)]
 [!code-vb[GridViewTopPagerRow\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewTopPagerRow/VB/gridviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Rows" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールに対するビューステートの変更を追跡し、コントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに保存できるようにします。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドをオーバーライドして、コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する位置を示す開始点をマークします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを更新するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、データ バインド メソッドとして使用するモデルのバインディングとします。  
  
 Web フォームでモデルのバインディングの使用に関するチュートリアル シリーズは、次を参照してください。 [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateRow">
      <MemberSignature Language="C#" Value="public virtual void UpdateRow (int rowIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateRow(int32 rowIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.GridView.UpdateRow(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rowIndex">更新する行のインデックス。</param>
        <param name="causesValidation">
          <see langword="true" /> このメソッドが呼び出されたときに、ページの検証を実行するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>行のフィールドの値を使用して、指定された行インデックスにあるレコードを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.UpdateRow%2A> メソッドをプログラムでデータ ソース内の指定したインデックスにあるレコードを更新します。 外部からのレコードを更新する必要がある場合、このメソッドは通常使用、 <xref:System.Web.UI.WebControls.GridView> \] ページで別の管理からなどを制御します。  
  
> [!NOTE]
>  このメソッドは、編集モードになっている行に対してのみ呼び出すことができるまたは双方向データ バインド入力コントロールを含んでいる行。 双方向のバインド式の詳細については、次を参照してください。 [データベースへのバインド](http://msdn.microsoft.com/ja-jp/ab7b2846-975b-4057-a948-45527497c742)します。  
  
 更新操作の前にページの検証を実行するかどうかを指定するには、使用、 `causesValidation` パラメーター。 またを発生させるでこのメソッドを呼び出して、 <xref:System.Web.UI.WebControls.GridView.RowUpdated> と <xref:System.Web.UI.WebControls.GridView.RowUpdating> イベントです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.UpdateRow%2A> メソッドでレコードをプログラムによって更新を <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[GridViewUpdateRow\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUpdateRow/CS/GridViewUpdateRowcs.aspx#1)]
 [!code-vb[GridViewUpdateRow\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUpdateRow/VB/GridViewUpdateRowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールがデータ ソース コントロールにバインドされているが、 <see cref="T:System.Web.UI.DataSourceView" /> 関連付けられているデータ ソースは <see langword="null" />です。</exception>
        <altmember cref="M:System.Web.UI.WebControls.GridView.DeleteRow(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      </Docs>
    </Member>
    <Member MemberName="UseAccessibleHeader">
      <MemberSignature Language="C#" Value="public virtual bool UseAccessibleHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAccessibleHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.UseAccessibleHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールは、アクセス可能な形式でのヘッダーを表示します。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロール レンダリングのヘッダーでアクセス可能な形式では、それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> プロパティを指定するかどうか、 <xref:System.Web.UI.WebControls.GridView> コントロールは、アクセス可能な形式では、そのヘッダー行を表示します。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。 このプロパティの値は、既定では、 `true` を使用して、コントロールのヘッダーが描画および `<th>` テーブルのヘッダー セルのタグ。 さらに、 `scope="col"` 属性が、ヘッダーが、列内のすべてのセルに適用されることを指定するテーブルのヘッダーに追加します。 既定のレンダリング、 `<th>` 要素を保持すると、水平方向に太字と中央揃えのテキストを表示します。 開発者のスタイル、 `<th>` カスケードを使用して要素のスタイル シートを設定します。  
  
 このプロパティの値の場合 `false`, を使用して、コントロールのヘッダーが描画 `<td>` 表のセルのタグ。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.GridView.UseAccessibleHeader%2A> プロパティをアクセス可能なヘッダーを無効にします。  
  
 [!code-csharp[GridViewUseAccessibleHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/GridViewUseAccessibleHeader/CS/gridviewuseaccessibleheadercs.aspx#1)]
 [!code-vb[GridViewUseAccessibleHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/GridViewUseAccessibleHeader/VB/gridviewuseaccessibleheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.Caption" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.CaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.RowHeaderColumn" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.GridView.VirtualItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースの仮想項目数を設定、 <see cref="T:System.Web.UI.WebControls.GridView" /> カスタム ページングを使用する場合に、コントロールにバインドします。</summary>
        <value>ソースの仮想データ内の項目数、 <see cref="T:System.Web.UI.WebControls.GridView" /> カスタム ページングを使用する場合に、コントロールにバインドします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは使用される場合にのみの値、 <xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> プロパティは `true`です。 詳細については、<xref:System.Web.UI.WebControls.GridView.AllowCustomPaging%2A> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>