<Type Name="FormViewUpdateEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdateEventArgs">
  <TypeSignature Language="C#" Value="public class FormViewUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.FormView> 昇給を制御、 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 更新ボタンをクリックしたときにイベント \(でボタン、 `CommandName` プロパティを「更新」に設定\) コントロール内でクリックすると、その前に、 <xref:System.Web.UI.WebControls.FormView> コントロールは、レコードを更新します。 これにより、HTML エンコーディングや、このイベントが発生するたびに、データ ソースで更新する前に、レコードの値の検証などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> オブジェクトが、省略可能なコマンドに渡す引数の値を確認することができます、イベント処理メソッドに渡される、 <xref:System.Web.UI.WebControls.FormView> を制御し、指定するかどうか、更新操作をキャンセルするか。 コマンドの引数の値を確認するのには、使用、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> プロパティです。 更新操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`します。 使用して更新されるレコードの元のキー フィールドの値にアクセスする必要がある場合、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティです。 元のキー以外のフィールド値を使用してアクセスできる、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> プロパティです。 更新された値 \(いたキー フィールドを編集するユーザーを許可する場合は、更新されたキー フィールドの値を含む\) を使用してアクセス、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> プロパティです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.%23ctor%2A> コンストラクターに関するトピックを参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> オブジェクトのイベント処理メソッドに渡される、 <xref:System.Web.UI.WebControls.FormView.ItemUpdating> 、ユーザーが入力した値を検証するイベントです。  
  
 [!code-csharp[FormViewUpdateEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-vb[FormViewUpdateEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
    <altmember cref="T:System.ComponentModel.CancelEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
    <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdateEventArgs (object commandArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdateEventArgs.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandArgument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandArgument">渡される省略可能なコマンド引数、 <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールです。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> クラスです。  
  
 次の表のインスタンスの初期プロパティ値、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> クラスです。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>|`commandArgument` パラメーターの値。|  
  
> [!NOTE]
>  イベント発生時に、このコンス トラクターは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>渡された更新操作は、コマンドの引数を取得、 <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールです。</summary>
        <value>渡される更新操作のコマンド引数、 <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のテンプレートのいずれかの更新\] ボタンを作成する場合、 <xref:System.Web.UI.WebControls.FormView> コントロールを使用して、ボタンのコマンド引数を指定できます、 <xref:System.Web.UI.WebControls.IButtonControl.CommandArgument%2A?displayProperty=fullName> プロパティです。 通常、コマンドの引数には、キー フィールドの値など、更新コマンドと一緒に送信するオプションの情報が含まれます。<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> プロパティは、更新ボタンのコマンドの引数の値を決定する便利な方法として提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新するレコードの元のキー フィールドの名前と値のペアを格納しているディクショナリを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> を更新するレコードの元のキー フィールドの名前と値のペアのディクショナリが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティにはで示されているキー フィールドの元の値が含まれています、 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> のプロパティ、 <xref:System.Web.UI.WebControls.FormView> コントロールです。 使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティを更新するレコードのキー フィールドの元の値にアクセスします。 たとえば、更新されたレコードのログを保持するのにこれらの値を使用できます。  
  
> [!NOTE]
>  キー フィールドの値を更新するユーザーを許可する場合、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティには、元のキー フィールドの値が含まれています。 更新された値が格納されている、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティを返します。、 <xref:System.Collections.Specialized.OrderedDictionary> を実装するオブジェクト、 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> インターフェイスです。<xref:System.Collections.Specialized.OrderedDictionary> オブジェクトを含む <xref:System.Collections.DictionaryEntry?displayProperty=fullName> 更新されたレコードのフィールドを表すオブジェクト。 フィールド名にアクセスするには、使用、 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> のプロパティ、 <xref:System.Collections.Specialized.OrderedDictionary> オブジェクトです。 同様を使用してフィールドの値にアクセスすることができます、 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> プロパティです。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.OrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。 データ ソース フィールドの順序に依存するコントロール \(よう <xref:System.Web.UI.WebControls.AccessDataSource>\) フィールドの値にインデックスによってのみアクセスできます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> 更新されるレコードのキー フィールドの値にアクセスするプロパティです。  
  
 [!code-csharp[FormViewUpdateEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-vb[FormViewUpdateEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新するレコードの新規のフィールドの名前と値のペアを格納しているディクショナリを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> を更新するレコードの新規のフィールドの名前と値のペアのディクショナリが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> プロパティを更新するレコードの新しいフィールド値にアクセスします。 たとえば、更新されたレコードのログを保持するのにこれらの値を使用できます。  
  
> [!NOTE]
>  キー フィールドの値を更新するユーザーを許可する場合、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティには、元のキー フィールドの値が含まれています。 更新された値が格納されている、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> プロパティを返します。、 <xref:System.Collections.Specialized.OrderedDictionary> を実装するオブジェクト、 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> インターフェイスです。<xref:System.Collections.Specialized.OrderedDictionary> オブジェクトを含む <xref:System.Collections.DictionaryEntry?displayProperty=fullName> 更新されたレコードのフィールドを表すオブジェクト。 フィールド名にアクセスするには、使用、 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> のプロパティ、 <xref:System.Collections.Specialized.OrderedDictionary> オブジェクトです。 同様を使用してフィールドの値にアクセスすることができます、 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> プロパティです。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.OrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。 データ ソース フィールドの順序に依存するコントロール \(よう <xref:System.Web.UI.WebControls.AccessDataSource>\) フィールドの値にインデックスによってのみアクセスできます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> 更新されるレコードの非キー フィールドについて、ユーザーが入力した新しい値にアクセスするプロパティです。  
  
 [!code-csharp[FormViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-vb[FormViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新するレコードの元のキー以外のフィールドの名前と値のペアを格納しているディクショナリを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> を更新するレコードの元のキー以外のフィールドの名前と値のペアのディクショナリが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 更新されたレコードの元のキー以外のフィールド値にアクセスするプロパティです。 たとえば、更新されたレコードのログを保持するのにこれらの値を使用できます。 などのいくつかのデータ ソース コントロールを <xref:System.Web.UI.WebControls.SqlDataSource> と <xref:System.Web.UI.WebControls.ObjectDataSource> \(オプティミスティック同時実行制御チェック\) のサポートの競合の検出を制御します。 ときに、 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> にこれらのコントロールのいずれかのプロパティが設定されている `ConflictOptions.CompareAllValues`, 、更新操作が実行される前に、データ ソースの値と照らしてレコードの元の値を比較します。 別のユーザーによってレコードが同時に変更された場合、レコードは更新されません。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> プロパティにはキー フィールドが含まれていません。 元のキー フィールドの値が格納されているキーのフィールドの値を更新するユーザーを許可する場合、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> プロパティです。 更新された値が格納されている、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> プロパティを返します。、 <xref:System.Collections.Specialized.OrderedDictionary> を実装するオブジェクト、 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> インターフェイスです。<xref:System.Collections.Specialized.OrderedDictionary> オブジェクトを含む <xref:System.Collections.DictionaryEntry?displayProperty=fullName> 更新されたレコードのフィールドを表すオブジェクト。 フィールド名にアクセスするには、使用、 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> のプロパティ、 <xref:System.Collections.Specialized.OrderedDictionary> オブジェクトです。 同様を使用してフィールドの値にアクセスすることができます、 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> プロパティです。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.OrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。 データ ソース フィールドの順序に依存するコントロール \(よう <xref:System.Web.UI.WebControls.AccessDataSource>\) フィールドの値にインデックスによってのみアクセスできます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> 更新されるレコードの非キー フィールドの元の値にアクセスするプロパティです。  
  
 [!code-csharp[FormViewUpdateEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-vb[FormViewUpdateEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
  </Members>
</Type>