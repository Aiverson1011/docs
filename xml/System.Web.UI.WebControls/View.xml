<Type Name="View" FullName="System.Web.UI.WebControls.View">
  <TypeSignature Language="C#" Value="public class View : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit View extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:View runat="server"&gt;&lt;/{0}:View&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロール内のコントロールのグループのコンテナとして機能するコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.View> コントロールは、コントロールのグループのコンテナーです。 A <xref:System.Web.UI.WebControls.View> 内でコントロールを含めることが常に必要があります、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 1 つだけ <xref:System.Web.UI.WebControls.View> 内でアクティブなビューとして定義できるコントロールを時、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。  
  
 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティの指定、アクティブな <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView.Views%2A> のコレクション、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 アクティブなビュー コントロールを格納している限り、クライアントに表示 <xref:System.Web.UI.WebControls.MultiView> コントロールを表示します。 使用して、 <xref:System.Web.UI.WebControls.View.Visible%2A> を確認するにするかどうか、 <xref:System.Web.UI.WebControls.View> コントロールとその子コントロールは、ページ上に表示レンダリングされたクライアントにします。  
  
 A <xref:System.Web.UI.WebControls.View> コントロールは、その他を含む任意の型のコントロールを含めることができます <xref:System.Web.UI.WebControls.MultiView> コントロールです。 A <xref:System.Web.UI.WebControls.View> コントロールがスタイル プロパティをサポートしていません。 スタイルを設定し、 <xref:System.Web.UI.WebControls.View> コントロールを 1 つ以上追加 <xref:System.Web.UI.WebControls.Panel> コントロールを <xref:System.Web.UI.WebControls.View> コントロールです。  
  
 <xref:System.Web.UI.WebControls.View> クラスには、 <xref:System.Web.UI.WebControls.View.Activate> と <xref:System.Web.UI.WebControls.View.Deactivate> イベントです。<xref:System.Web.UI.WebControls.View.Activate> イベントが発生したときに、現在 <xref:System.Web.UI.WebControls.View> コントロールがアクティブなビューになります。 これが発生したときの値、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティが変更された、または <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> 異なるを指定するメソッドが呼び出された <xref:System.Web.UI.WebControls.View> コントロールです。 たとえば場合、 `View1` 内でアクティブなビューは、 <xref:System.Web.UI.WebControls.MultiView> コントロールときに、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> を指定するプロパティが変更された `View2`, 、 <xref:System.Web.UI.WebControls.View.Activate> に対してイベントが生成 `View2` と <xref:System.Web.UI.WebControls.View.Deactivate> に対してイベントが生成 `View1`します。  
  
 複数の間を移動できるようにする <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> コントロールを追加できます、 <xref:System.Web.UI.WebControls.LinkButton> または <xref:System.Web.UI.WebControls.Button> コントロールをそれぞれ <xref:System.Web.UI.WebControls.View> コントロールです。 設定、 <xref:System.Web.UI.WebControls.LinkButton> または <xref:System.Web.UI.WebControls.Button> コントロールの `CommandName` プロパティの ID を <xref:System.Web.UI.WebControls.View> に移動するコントロール。 コード例については、「<xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged>」を参照してください。  
  
 操作の詳細については <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> 制御を参照してください、 <xref:System.Web.UI.WebControls.MultiView> トピックです。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:View  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnActivate="Activate event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeactivate="Deactivate event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## 例  
 次のコード例では、作成、 <xref:System.Web.UI.WebControls.MultiView> 3 種類を含むコントロール <xref:System.Web.UI.WebControls.View> コントロールです。 初めてページが読み込まれる `DefaultView` アクティブなビューに設定されています。 各 <xref:System.Web.UI.WebControls.View> コントロールには、さまざまなビューに移動するユーザーを許可するようにリンク ボタンが含まれています。<xref:System.Web.UI.WebControls.View> コントロールに含まれる、 <xref:System.Web.UI.WebControls.Panel> 適用されるスタイルを許可するように制御します。  
  
 [!code-vb[MultiView Class Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.MultiView" />
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public View ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.View.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.View" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public event EventHandler Activate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.View.Activate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、現在 <see cref="T:System.Web.UI.WebControls.View" /> コントロールがアクティブなビューになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.View.Activate> イベントが発生したときに、現在 <xref:System.Web.UI.WebControls.View> コントロールがアクティブなビューになります。 これが発生したときの値、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティが変更された、または <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> 異なるを指定するメソッドが呼び出された <xref:System.Web.UI.WebControls.View> コントロールです。 たとえば場合、 `View1` 内でアクティブなビューは、 <xref:System.Web.UI.WebControls.MultiView> コントロールときに、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> を指定するプロパティが変更された `View2`, 、 <xref:System.Web.UI.WebControls.View.Activate> に対してイベントが生成 `View2` と <xref:System.Web.UI.WebControls.View.Deactivate> に対してイベントが生成 `View1`します。  
  
   
  
## 例  
 指定して、コードのイベント ハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.View.Activate> のイベント、 <xref:System.Web.UI.WebControls.View> コントロールです。 アクティブな変更を表示するメッセージがユーザーに指定することに表示されます。、 <xref:System.Web.UI.WebControls.View> を発生させたコントロール、 <xref:System.Web.UI.WebControls.View.Activate> イベントおよび <xref:System.Web.UI.WebControls.View> 制御を発生させた、 <xref:System.Web.UI.WebControls.View.Deactivate> イベントです。  
  
 [!code-csharp[View.Activate Event Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/View.Activate Event Example/cs/viewactivateeventcs.aspx#1)]
 [!code-vb[View.Activate Event Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/View.Activate Event Example/VB/viewactivateeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Deactivate" />
        <altmember cref="T:System.Web.UI.WebControls.MultiView" />
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.View.Deactivate" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、現在アクティブな <see cref="T:System.Web.UI.WebControls.View" /> コントロールが非アクティブになります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.View.Deactivate> イベントが発生したときに、現在アクティブな <xref:System.Web.UI.WebControls.View> コントロールが非アクティブになります。 A <xref:System.Web.UI.WebControls.View> コントロールがアクティブでない場合の値、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティの変更、または <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> メソッドを呼び出して異なるを指定する <xref:System.Web.UI.WebControls.View> コントロールです。 たとえば場合、 `View1` 内でアクティブなビューは、 <xref:System.Web.UI.WebControls.MultiView> コントロールときに、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> を指定するプロパティが変更された `View2`, 、 <xref:System.Web.UI.WebControls.View.Deactivate> に対してイベントが生成 `View1` と <xref:System.Web.UI.WebControls.View.Activate> に対してイベントが生成 `View2`します。  
  
   
  
## 例  
 指定して、コードのイベント ハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.View.Deactivate> のイベント、 <xref:System.Web.UI.WebControls.View> コントロールです。 アクティブな変更を表示するメッセージがユーザーに指定することに表示されます。、 <xref:System.Web.UI.WebControls.View> を発生させたコントロール、 <xref:System.Web.UI.WebControls.View.Activate> イベントおよび <xref:System.Web.UI.WebControls.View> 制御を発生させた、 <xref:System.Web.UI.WebControls.View.Deactivate> イベントです。  
  
 [!code-csharp[View.Activate Event Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/View.Activate Event Example/cs/viewactivateeventcs.aspx#1)]
 [!code-vb[View.Activate Event Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/View.Activate Event Example/VB/viewactivateeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Activate" />
        <altmember cref="T:System.Web.UI.WebControls.MultiView" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.View.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのコントロールにテーマを適用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> テーマを使用するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.View.EnableTheming%2A> プロパティは、テーマが有効になっているかどうかを示す、 <xref:System.Web.UI.WebControls.View> コントロールです。<xref:System.Web.UI.WebControls.View.EnableTheming%2A> プロパティに含まれるコントロールのテーマが有効になっているかどうかにも影響、 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> コレクションです。 ときに、 <xref:System.Web.UI.WebControls.View.EnableTheming%2A> プロパティは、 `true`, 、コントロール スキンを適用するテーマのアプリケーションのディレクトリが検索されます。 テーマ ディレクトリに特定のコントロールのスキンが存在しない場合、スキンは適用されません。 ときに、 <xref:System.Web.UI.WebControls.View.EnableTheming%2A> プロパティは、 `false`, 、テーマ ディレクトリは検索されませんおよびの内容、 <xref:System.Web.UI.Control.SkinID%2A> プロパティは使用されません。  
  
 オーバーライド、 <xref:System.Web.UI.WebControls.View.EnableTheming%2A> 値、親コントロールまたはコントロールを含むページのセットです。 たとえば場合、 <xref:System.Web.UI.WebControls.View> コントロールが <xref:System.Web.UI.WebControls.View.EnableTheming%2A> に設定 `false`, 、内に含まれる子コントロールにテーマを選択的に適用できます、 <xref:System.Web.UI.WebControls.View> コントロールを設定して、 <xref:System.Web.UI.Control.EnableTheming%2A> プロパティを `true` 個々 の子コントロールにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="OnActivate">
      <MemberSignature Language="C#" Value="protected virtual void OnActivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnActivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.View.OnActivate(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.View.Activate" /> のイベント、 <see cref="T:System.Web.UI.WebControls.View" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.View.Activate> イベントが発生したときに、現在 <xref:System.Web.UI.WebControls.View> コントロールがアクティブなビューになります。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Activate" />
      </Docs>
    </Member>
    <Member MemberName="OnDeactivate">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivate (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDeactivate(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.View.Deactivate" /> のイベント、 <see cref="T:System.Web.UI.WebControls.View" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.View.Deactivate> イベントが発生したときに、現在アクティブな <xref:System.Web.UI.WebControls.View> コントロールが非アクティブになります。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.View.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.View.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Web.UI.WebControls.View" /> コントロールを表示します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.View" /> コントロールが表示されているそれ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用、 <xref:System.Web.UI.WebControls.View.Visible%2A> を確認するにするかどうか、現在 <xref:System.Web.UI.WebControls.View> クライアントにコントロールが表示され、レンダリングされました。<xref:System.Web.UI.WebControls.View> 、レンダリングされたページに表示するコントロールをアクティブなビューでそれを含んでいる必要があります <xref:System.Web.UI.WebControls.MultiView> 制御、および格納している <xref:System.Web.UI.WebControls.MultiView> コントロールを表示する必要があります。 場合を含む <xref:System.Web.UI.WebControls.MultiView> コントロールは、ページに表示されていない場合は、 <xref:System.Web.UI.WebControls.View> コントロールがアクティブなビューではない、 <xref:System.Web.UI.WebControls.View> コントロールとその子コントロールはレンダリングされません。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.View.Visible%2A> プロパティは、可視性とコンテナーの親コントロールのアクティブなビューに基づいて内部的に設定されます。 実行時に、このプロパティを設定する場合、 <xref:System.InvalidOperationException> 例外がスローされます。 設定した場合、 <xref:System.Web.UI.WebControls.View.Visible%2A> プロパティの変更、デザイン時にプロパティが無視されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">実行時にこのプロパティを設定しようとしています。</exception>
        <altmember cref="T:System.Web.UI.WebControls.MultiView" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      </Docs>
    </Member>
  </Members>
</Type>