<Type Name="Literal" FullName="System.Web.UI.WebControls.Literal">
  <TypeSignature Language="C#" Value="public class Literal : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Literal extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Literal" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LiteralDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LiteralControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>スタティック テキストを表示する Web ページ上の場所を予約します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 使用して、 <xref:System.Web.UI.WebControls.Literal?displayProperty=fullName> にテキストを表示する Web ページ上の場所を予約するコントロール。<xref:System.Web.UI.WebControls.Literal> コントロールに似ていますが、 <xref:System.Web.UI.WebControls.Label> コントロールを除く、 <xref:System.Web.UI.WebControls.Literal> コントロールが表示されているテキストにスタイルを適用を許可していません。 設定して、コントロールに表示されるテキストをプログラムで制御できる、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティです。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。  
  
 セキュリティの詳細については、次を参照してください。 [Securing Standard Controls](http://msdn.microsoft.com/ja-jp/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), 、[How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](http://msdn.microsoft.com/ja-jp/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), 、および [Introduction to Validating User Input in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)です。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:Literal  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    Mode="Transform|PassThrough|Encode"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Text="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Literal> 静的テキストを表示するコントロール。  
  
> [!NOTE]
>  次の例では、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード例は、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Literal\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Literal/CS/literalcs.aspx#1)]
 [!code-vb[Literal\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal/VB/literalvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Label" />
    <altmember cref="P:System.Web.UI.WebControls.Literal.Text" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Literal" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.AddParsedSubObject(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">解析された要素を表す <see cref="T:System.Object" />。</param>
        <summary>XML または HTML 要素が解析されたことを <see cref="T:System.Web.UI.WebControls.Literal" /> コントロールに通知し、その要素をコントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Literal.AddParsedSubObject%2A> method in a custom server control so that it always sets the <xref:System.Web.UI.WebControls.Literal.Text%2A> property to the parsed object's **languageKeyword tag is not supported!!!!**  
 property, if the parsed object is a <xref:System.Web.UI.WebControls.Literal>, and to an empty **languageKeyword tag is not supported!!!!**  
 otherwise.  
  
 [!code-csharp[CustomLiteralAddParsedSubObject\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/CS/custom_literal_addparsedsubobjectcs.aspx#1)]
 [!code-vb[CustomLiteralAddParsedSubObject\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/VB/custom_literal_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomLiteralAddParsedSubObject\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/CS/custom_literal_addparsedsubobject.cs#2)]
 [!code-vb[CustomLiteralAddParsedSubObject\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/VB/custom_literal_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="obj" /> が <see cref="T:System.Web.UI.LiteralControl" /> 型ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Literal" /> コントロールの現在のインスタンスの <see cref="T:System.Web.UI.EmptyControlCollection" /> オブジェクトを作成します。</summary>
        <returns>現在のサーバー コントロールの子サーバー コントロールを格納する <see cref="T:System.Web.UI.ControlCollection" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Literal.CreateControlCollection%2A> method in a custom server control so that it always returns an instance of the <xref:System.Web.UI.EmptyControlCollection> class for the <xref:System.Web.UI.WebControls.Literal> object.  
  
 [!code-csharp[CustomLiteralCreateControlCollection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/CS/custom_literal_createcontrolcollectioncs.aspx#1)]
 [!code-vb[CustomLiteralCreateControlCollection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/VB/custom_literal_createcontrolcollectionvb.aspx#1)]  
  
 [!code-csharp[CustomLiteralCreateControlCollection\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/CS/custom_literal_createcontrolcollection.cs#2)]
 [!code-vb[CustomLiteralCreateControlCollection\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/VB/custom_literal_createcontrolcollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.Focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールに入力フォーカスを設定します。 <see cref="M:System.Web.UI.WebControls.Literal.Focus" /> の基本コントロール方式がサポートされていません、 <see cref="T:System.Web.UI.WebControls.Literal" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Literal> のオーバーライドを制御、 <xref:System.Web.UI.Control.Focus%2A> 基本クラスのメソッドです。<xref:System.Web.UI.WebControls.Literal.Focus%2A> のメソッド、 <xref:System.Web.UI.WebControls.Literal> コントロールが常にあることを示す例外をスロー、 <xref:System.Web.UI.WebControls.Literal.Focus%2A> メソッドがでサポートされていない、 <xref:System.Web.UI.WebControls.Literal> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.WebControls.Literal.Focus" /> で呼び出されましたが、 <see cref="T:System.Web.UI.WebControls.Literal" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LiteralMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LiteralMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Literal.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LiteralMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を指定する列挙値方法でコンテンツ、 <see cref="T:System.Web.UI.WebControls.Literal" /> コントロールを表示します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.LiteralMode" /> 列挙値のいずれか。 既定値は、<see langword="Transform" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Literal.Mode%2A> プロパティを指定する方法の内容、 <xref:System.Web.UI.WebControls.Literal> コントロールを表示する必要があります。 このプロパティのいずれかを使用して、 <xref:System.Web.UI.WebControls.LiteralMode> 列挙値。 次の表では、指定できる値を示します。  
  
|値|説明|  
|-------|--------|  
|`PassThrough`|コントロールの内容は変更されません。|  
|`Encode`|コントロールの内容は、HTML でエンコードされた文字列に変換されます。|  
|`Transform`|サポートされていないマークアップ言語要素は、コントロールの内容から削除されます。 場合、 <xref:System.Web.UI.WebControls.Literal> コントロールが HTML または XHTML をサポートするブラウザーにレンダリングされる、コントロールの内容は変更されません。|  
  
 指定した場合 `PassThrough`, の内容全体、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティが変更を加えずに、デバイスまたはブラウザーに渡されます。 たとえば場合、 <xref:System.Web.UI.WebControls.Literal.Text%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Literal> コントロールに含まれる、 `<hr>` タグに送信されるすべてのデバイスおよびブラウザーがサポートされるかどうか。  
  
 指定した場合 `Encode`, の内容、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティは、レンダリングする前に、HTML でエンコードされた文字列に変換します。 などの場合、 <xref:System.Web.UI.WebControls.Literal.Text%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Literal> コントロールに含まれる、 `<hr>` タグに変換されます `&lt;Hr&gt;` され、デバイスやブラウザーに送信します。  
  
 指定した場合 `Transform`, のレンダリング動作、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティは、表示されているマークアップの種類によって異なります。 ときに、 <xref:System.Web.UI.WebControls.Literal> コントロールは、デバイスや HTML または XHTML をサポートするブラウザーの表示を指定する <xref:System.Web.UI.WebControls.LiteralMode.Transform> 指定すると同じ動作が生成される <xref:System.Web.UI.WebControls.LiteralMode.PassThrough>します。 すべてのマークアップ タグと要素の <xref:System.Web.UI.WebControls.Literal.Text%2A> 要求元のブラウザーのプロパティが表示されます。  
  
 ときに、 <xref:System.Web.UI.WebControls.Literal> 使用すると、HTML または XHTML、WML など cHTML 以外のマークアップ言語にコントロールを表示、 <xref:System.Web.UI.WebControls.LiteralMode.Transform> サポートされていないマークアップ要素を削除する値。 この場合、すべてのマークアップ言語要素の <xref:System.Web.UI.WebControls.Literal.Text%2A> 対象となるマークアップ言語でサポートされていないプロパティは、コントロールのレンダリングされません。 たとえば場合、 <xref:System.Web.UI.WebControls.Literal.Text%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Literal> コントロールに含まれる、 `<hr>` WML デバイスにコンテンツを送信する前に、タグ、タグを削除します。 サポートされていないタグにコンテンツが含まれている場合は、タグのみが削除され、コンテンツは、デバイスまたはブラウザーに送信します。 たとえば場合、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティには、コンテンツが含まれています。 `<XYZ>Test</XYZ>`, 、 `<XYZ>` と `</XYZ>` タグが削除されると、テキスト"Test"のデバイスまたはブラウザーに送信します。  
  
   
  
## 例  
 次のコード例では、設定、 <xref:System.Web.UI.WebControls.Literal> コントロールの <xref:System.Web.UI.WebControls.Literal.Mode%2A> プロパティです。<xref:System.Web.UI.WebControls.Literal.Mode%2A> プロパティの初期設定は `Encode` コントロールの宣言型の構文で使用します。 ユーザーを設定するボタンをクリックして、ページが読み込まれた後、 <xref:System.Web.UI.WebControls.Literal.Mode%2A> プロパティを `PassThrough`します。 これが原因での内容、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティを表示形式が異なります。  
  
> [!NOTE]
>  次の例では、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード例は、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-vb[Literal.Mode\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal.Mode/VB/literal.modevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した型が、 <see cref="T:System.Web.UI.WebControls.LiteralMode" /> 列挙値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.LiteralMode" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">サーバー コントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary>提供されたクライアントに表示される内容を書き込む <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに、サーバー コントロールの内容を送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Literal.Render%2A> method in a custom server control so that specific text is always displayed before the <xref:System.Web.UI.WebControls.Literal>.  
  
 [!code-csharp[CustomLiteralRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralRender/CS/custom_literal_rendercs.aspx#1)]
 [!code-vb[CustomLiteralRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralRender/VB/custom_literal_rendervb.aspx#1)]  
[!code-csharp[CustomLiteralRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralRender/CS/custom_literal_render.cs#2)]
[!code-vb[CustomLiteralRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralRender/VB/custom_literal_render.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Literal.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されるキャプション、 <see cref="T:System.Web.UI.WebControls.Literal" /> コントロールです。</summary>
        <value>表示されるキャプション、 <see cref="T:System.Web.UI.WebControls.Literal" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティを指定または確認で表示されるキャプション、 <xref:System.Web.UI.WebControls.Literal> コントロールです。 これにより、プログラムを使用して実行時に、キャプションを変更できます。  
  
 キャプションは、このプロパティに値を割り当てる方法によって HTML デコードします。 属性を使用して、値を割り当てた場合、 <xref:System.Web.UI.WebControls.Literal> 制御値は、HTML が表示されるまでにデコードします。 たとえば、 `<asp:Literal id="DisplayLiteral" Text="A&nbsp;B"/>` はブラウザーの"A B"として表示されます。 ただし、プログラムから、または、開始タグと終了タグのコントロールの間のテキストを配置することで、このプロパティを設定する場合に、キャプションできませんデコードされた HTML です。 たとえば、 `<asp:Literal id="DisplayLiteral"> A&nbsp;B </asp:Literal>` は"A & nbsp; として表示されますB"です。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Literal.Text%2A> プロパティに表示されるキャプションをプログラムで変更を <xref:System.Web.UI.WebControls.Literal> コントロールです。  
  
> [!NOTE]
>  次の例では、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード例は、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Literal\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Literal/CS/literalcs.aspx#1)]
 [!code-vb[Literal\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal/VB/literalvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>