<Type Name="DataGrid" FullName="System.Web.UI.WebControls.DataGrid">
  <TypeSignature Language="C#" Value="public class DataGrid : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGrid extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataGrid" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataGridDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>テーブルのデータ ソースから取得した項目を表示するデータ連結リスト コントロール。<see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールではこれらの項目の選択、並べ替え、および編集を行えます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 In this topic:  
  
-   [Introduction](#Introduction)  
  
-   [Accessibility](#Accessibility)  
  
-   [Declarative Syntax](#DeclarativeSyntax)  
  
    > [!NOTE]
    >  Before you use the <xref:System.Web.UI.WebControls.DataGrid> control, consider using the <xref:System.Web.UI.WebControls.GridView> control instead. The <xref:System.Web.UI.WebControls.GridView> control, which was introduced in the .NET Framework version 2.0, is the successor to the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
<a name="Introduction"></a>   
## Introduction  
 Use the <xref:System.Web.UI.WebControls.DataGrid> control to display the fields of a data source as columns in a table. Each row in the <xref:System.Web.UI.WebControls.DataGrid> control represents a record in the data source. The <xref:System.Web.UI.WebControls.DataGrid> control supports selection, editing, deleting, paging, and sorting.  
  
> [!CAUTION]
>  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
 Different column types determine the behavior of the columns in the control. The following table lists the different column types that can be used.  
  
|Column Type|Description|  
|-----------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|Displays a column bound to a field in a data source. It displays each item in the field as text. This is the default column type of the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|Displays a command button for each item in the column. This allows you to create a column of custom button controls, such as **languageKeyword tag is not supported!!!!**<br /> or **languageKeyword tag is not supported!!!!**<br /> buttons.|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|Displays a column that contains editing commands for each item in the column.|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|Displays the contents of each item in the column as a hyperlink. The contents of the column can be bound to a field in a data source or static text.|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|Displays each item in the column following a specified template. This allows you to provide custom controls in the column.|  
  
 By default, the <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> property is set to **languageKeyword tag is not supported!!!!**  
, which creates a <xref:System.Web.UI.WebControls.BoundColumn> object for each field in the data source. Each field is then rendered as a column in the <xref:System.Web.UI.WebControls.DataGrid> control in the order that each field appears in the data source.  
  
 You can also manually control which columns appear in the <xref:System.Web.UI.WebControls.DataGrid> control by setting the <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> property to **languageKeyword tag is not supported!!!!**  
 and then listing the columns that you want to include between the opening and closing **languageKeyword tag is not supported!!!!**  
 tags. The columns specified are added to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection in the order listed. This allows you to programmatically control the columns in the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
> [!NOTE]
>  The order that the columns are displayed in the <xref:System.Web.UI.WebControls.DataGrid> control is controlled by the order that the columns appear in the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection. Although you can programmatically change the order of the columns by manipulating the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection, it is easier to list the columns in the desired display order.  
  
 Explicitly declared columns can be displayed in conjunction with automatically generated columns. When using both, explicitly declared columns will be rendered first, followed by the automatically generated columns.  
  
> [!NOTE]
>  Automatically generated columns are not added to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  
  
 The appearance of the <xref:System.Web.UI.WebControls.DataGrid> control may be customized by setting the style properties for the different parts of the control. The following table lists the different style properties.  
  
|Style Property|Description|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|Specifies the style for alternating items in the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|Specifies the style for the item being edited in the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A>|Specifies the style for the footer section in the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A>|Specifies the style for the header section in the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|Specifies the style for the items in the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A>|Specifies the style for the page selection section of the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|Specifies the style for the selected item in the <xref:System.Web.UI.WebControls.DataGrid> control.|  
  
 You can also show or hide different parts of the control. The following table lists the properties that control which parts are shown or hidden.  
  
|Property|Description|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A>|Shows or hides the footer section of the <xref:System.Web.UI.WebControls.DataGrid> control.|  
|<xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A>|Shows or hides the header section of the <xref:System.Web.UI.WebControls.DataGrid> control.|  
  
 You can control the appearance of the <xref:System.Web.UI.WebControls.DataGrid> control by programmatically adding attributes to the **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 tags rendered by the control on the browser. Attributes can be programmatically added by providing code in the event handler for the <xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> or <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> event.  
  
 To add an attribute to the **languageKeyword tag is not supported!!!!**  
 tag, first get the <xref:System.Web.UI.WebControls.TableCell> object that represents the cell in the <xref:System.Web.UI.WebControls.DataGrid> control you want to add the attribute to. The <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> collection for the <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> property of the <xref:System.Web.UI.WebControls.DataGridItemEventArgs> object passed into the event handler can be used to get the desired <xref:System.Web.UI.WebControls.TableCell> object. You can then use the <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=fullName> method of the <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> collection for the <xref:System.Web.UI.WebControls.TableCell> object to add attributes to the **languageKeyword tag is not supported!!!!**  
 tag.  
  
 To add an attribute to the **languageKeyword tag is not supported!!!!**  
 tag, first get the <xref:System.Web.UI.WebControls.DataGridItem> object that represents the row in the <xref:System.Web.UI.WebControls.DataGrid> control you want to add the attribute to. The <xref:System.Web.UI.WebControls.DataGridItemEventArgs.Item%2A> property of the <xref:System.Web.UI.WebControls.DataGridItemEventArgs> object passed into the event handler can be used to get the desired <xref:System.Web.UI.WebControls.DataGridItem> object. You can then use the <xref:System.Web.UI.AttributeCollection.Add%2A?displayProperty=fullName> method of the <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> collection for the <xref:System.Web.UI.WebControls.DataGridItem> object to add attributes to the **languageKeyword tag is not supported!!!!**  
 tag.  
  
<a name="Accessibility"></a>   
## Accessibility  
 For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## Declarative Syntax  
  
```  
<asp:DataGrid  
    AccessKey="string"  
    AllowCustomPaging="True|False"  
    AllowPaging="True|False"  
    AllowSorting="True|False"  
    AutoGenerateColumns="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSortCommand="SortCommand event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    PageSize="integer"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <Columns>  
                <asp:BoundColumn  
                    DataField="string"  
                    DataFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    ReadOnly="True|False"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:BoundColumn>  
                <asp:ButtonColumn  
                    ButtonType="LinkButton|PushButton"  
                    CausesValidation="True|False"  
                    CommandName="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Text="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:ButtonColumn>  
                <asp:EditCommandColumn  
                    ButtonType="LinkButton|PushButton"  
                    CancelText="string"  
                    CausesValidation="True|False"  
                    EditText="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    UpdateText="string"  
                    ValidationGroup="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:EditCommandColumn>  
                <asp:HyperLinkColumn  
                    DataNavigateUrlField="string"  
                    DataNavigateUrlFormatString="string"  
                    DataTextField="string"  
                    DataTextFormatString="string"  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    NavigateUrl="uri"  
                    SortExpression="string"  
                    Target="string|_blank|_parent|_search|_self|_top"  
                    Text="string"  
                    Visible="True|False"  
>  
                        <FooterStyle />  
                        <HeaderStyle />  
                        <ItemStyle />  
                </asp:HyperLinkColumn>  
                <asp:TemplateColumn  
                    FooterText="string"  
                    HeaderImageUrl="uri"  
                    HeaderText="string"  
                    SortExpression="string"  
                    Visible="True|False"  
>  
                            <FooterStyle />  
                            <HeaderStyle />  
                            <ItemStyle />  
                        <EditItemTemplate>  
                            <!-- child controls -->  
                        </EditItemTemplate>  
                        <FooterTemplate>  
                            <!-- child controls -->  
                        </FooterTemplate>  
                        <HeaderTemplate>  
                            <!-- child controls -->  
                        </HeaderTemplate>  
                        <ItemTemplate>  
                            <!-- child controls -->  
                        </ItemTemplate>  
                </asp:TemplateColumn>  
        </Columns>  
        <EditItemStyle />  
        <FooterStyle />  
        <HeaderStyle />  
        <ItemStyle />  
        <PagerStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalAlign="NotSet|Left|Center|Right|Justify"  
            Mode="NextPrev|NumericPages"  
            NextPageText="string"  
            OnDisposed="Disposed event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PrevPageText="string"  
            VerticalAlign="NotSet|Top|Middle|Bottom"  
            Visible="True|False"  
            Width="size"  
            Wrap="True|False"  
        />  
        <SelectedItemStyle />  
</asp:DataGrid>  
```  
  
   
  
## 例  
 A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=11217).  
  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DataGrid> control to display the items in the data source.  
  
 [!code-csharp[Classic DataGrid Example 2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid Example 2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/sourcevb.aspx#1)]  
  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DataGrid> control for a simple shopping cart.  
  
 [!code-csharp[Classic DataGrid Example 2\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid Example 2/CS/source2cs.aspx#2)]
 [!code-vb[Classic DataGrid Example 2\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid Example 2/VB/source2vb.aspx#2)]  
  
 The following code example demonstrates how to dynamically add attributes to the **languageKeyword tag is not supported!!!!**  
 and **languageKeyword tag is not supported!!!!**  
 tags generated by the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
 [!code-csharp[DataGridTrTdTags\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridTrTdTags/CS/datagridtdtrtagcs.aspx#1)]
 [!code-vb[DataGridTrTdTags\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridTrTdTags/VB/datagridtdtrtagvb.aspx#1)]  
  
 [!code-csharp[DataGridExample\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridExample/CS/datagridcs.aspx#1)]
 [!code-vb[DataGridExample\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridExample/VB/datagridvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
    <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGrid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGrid" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.DataGrid> class.  
  
   
  
## 例  
 The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.DataGrid> class.  
  
 [!code-csharp[DataGridCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-vb[DataGridCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタム ページングが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> カスタム ページングが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページングを使用するの内容を表示、 <xref:System.Web.UI.WebControls.DataGrid> ページ セグメント内のコントロールです。 ページ上の項目の数がによって決まりますが、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティです。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.DataGrid> ページに 10 個の項目を表示します。  
  
 通常のすべての行を含むデータ ソース、 <xref:System.Web.UI.WebControls.DataGrid> コントロールが読み込まれるたびに、 <xref:System.Web.UI.WebControls.DataGrid> コントロールが別のページに移動します。 これにより、データ ソースが非常に大きい場合、多くのリソースが消費することができます。 カスタム ページングを使用すると、1 つのページを表示するために必要なデータのセグメントだけを読み込むことができます。  
  
 カスタム ページングを有効にするには、両方を設定、 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> と <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティ `true`します。 処理するコードを次に、提供、 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントです。  
  
 一般的なロジック、 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベント ハンドラーが最初に設定が、 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティを表示するページのインデックス。  
  
> [!NOTE]
>  イベント ハンドラーは、 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> オブジェクトをパラメーターとして。 使用することができます、 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> のページの選択範囲の要素からユーザーが選択したページのインデックスを確認するには、このパラメーターのプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 次に、1 つのページを表示し、使用してデータを含むデータ ソースを作成、 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> にデータをバインドするメソッド、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!NOTE]
>  設定する必要があります、データの一部のみが読み込まれるため、 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> プロパティ内の項目の合計数を <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 これにより、ページの合計数のすべてのアイテムを表示するために必要なのかを制御、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このプロパティは通常プログラムで 1 回設定内の項目の合計数、 <xref:System.Web.UI.WebControls.DataGrid> コントロールが決定されます。  
  
 ページングが有効な場合、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> にプロパティが設定されている `false`, 、 <xref:System.Web.UI.WebControls.DataGrid> コントロールでは、データ ソースに表示されるすべての項目が含まれていると想定しています。<xref:System.Web.UI.WebControls.DataGrid> コントロールで指定された、ページのインデックスを基に表示されるページで項目のインデックスを計算する、 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティ、およびページで指定された項目の数、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティです。  
  
 ときに、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.DataGrid> コントロールでは、データ ソースにによって決定される項目にはのみが含まれていると想定しています、 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> プロパティです。 すべての項目で指定された項目の数に達するまで、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティが表示されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> カスタム ページングを有効にするプロパティです。  
  
 [!code-csharp[DataGridCustomPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-vb[DataGridCustomPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページングが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ページングが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページングを使用するの内容を表示、 <xref:System.Web.UI.WebControls.DataGrid> ページ セグメント内のコントロールです。 ページ上の項目の数がによって決まりますが、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティです。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールは、ページに 10 個の項目を表示します。  
  
 既定では、ページングは無効です。 ページングを有効にするにこのプロパティを設定します。 `true` を処理するコードを提供する、 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントです。  
  
 一般的なロジック、 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントを設定するのには、 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティを表示し、使用するページのインデックスを <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> にデータをバインドするメソッド、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!NOTE]
>  イベント ハンドラーは、 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> オブジェクトをパラメーターとして。 使用することができます、 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> のページの選択範囲の要素からユーザーが選択したページのインデックスを確認するには、このパラメーターのプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 標準のページングを使用した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールでは、データ ソースに表示されるすべての項目が含まれていると想定しています。<xref:System.Web.UI.WebControls.DataGrid> コントロールで指定された、ページのインデックスを基に表示されるページで項目のインデックスを計算する、 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティ、および項目で指定された、ページ上の項目の数、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティです。  
  
 通常、表示するすべての項目を含むデータ ソース追加されるたびに、 <xref:System.Web.UI.WebControls.DataGrid> コントロールをページです。 これにより、データ ソースが非常に大きい場合、多くのリソースが消費することができます。 カスタム ページングを使用すると、1 つのページを表示するために必要なデータのセグメントだけを読み込むことができます。 カスタム ページングの追加については、次を参照してください。、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> ページングを有効にするプロパティです。  
  
 [!code-csharp[Classic DataGrid.AllowPaging Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.AllowPaging Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowPaging Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridAllowPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-vb[DataGridAllowPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      </Docs>
    </Member>
    <Member MemberName="AllowSorting">
      <MemberSignature Language="C#" Value="public virtual bool AllowSorting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowSorting" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AllowSorting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または並べ替えを有効にするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 並べ替えが有効な場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 並べ替えを有効にすると、 <xref:System.Web.UI.WebControls.LinkButton> コントロールは、各列のヘッダー セクションに表示されます、 <xref:System.Web.UI.WebControls.DataGridColumn.SortExpression%2A> プロパティを設定します。 これら <xref:System.Web.UI.WebControls.LinkButton> コントロールを使用すると、並べ替え、 <xref:System.Web.UI.WebControls.DataGrid> コントロールを選択した列です。 使用する場合は、例外、 <xref:System.Web.UI.WebControls.TemplateColumn> 列の型を <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> プロパティ セット。 この場合は、指定する必要があります、 <xref:System.Web.UI.WebControls.Button> の制御、 <xref:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate%2A> 列のです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントは 1 つの <xref:System.Web.UI.WebControls.LinkButton> コントロールをクリックします。 イベント ハンドラーのコードを作成の責任です。 ハンドラーの一般的なロジックは並べ替えのデータをバインドし、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.AllowSorting%2A> プロパティ並べ替えを有効にします。  
  
 [!code-csharp[Classic DataGrid.AllowSorting Example 2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.AllowSorting Example 2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AllowSorting Example 2/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridAllowSorting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-vb[DataGridAllowSorting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
        <altmember cref="P:System.Web.UI.WebControls.TemplateColumn.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>代替のアイテムのスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 交互のスタイルのプロパティを表すオブジェクトの項目を <see cref="T:System.Web.UI.WebControls.DataGrid" />です。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> の項目を交互にカスタム スタイルを提供するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 調整可能な共通のスタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置が含まれます。 外観を強化するさまざまなスタイルを提供する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 アイテムのスタイル プロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールは、階層から別のスタイル プロパティの 1 つの項目から継承されます。 階層内を低く設定項目のスタイル プロパティは、スタイルのプロパティの階層の上位の項目に継承されます。 赤いフォントを指定する場合など、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティ、すべての他の項目のスタイルのプロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールには、赤いフォントがあります。 これにより、1 つの項目のスタイル プロパティを設定して、コントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位層にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 青のフォントを指定するなど、 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> で指定された赤いフォントをオーバーライドするプロパティ、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティです。 次の表は、最上位から最下位までの階層の順序を示します。  
  
|優先順位|スタイル プロパティ|  
|----------|----------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 交互の項目にカスタム スタイルを指定するには、配置、 `<AlternatingItemStyle>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 スタイル属性を一覧表示できますし、 `<AlternatingItemStyle>` タグ。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> 内の項目を交互に異なる背景色を指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridAlternatingItemStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAlternatingItemStyle/CS/datagridalternatingitemstylecs.aspx#1)]
 [!code-vb[DataGridAlternatingItemStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAlternatingItemStyle/VB/datagridalternatingitemstylevb.aspx#1)]  
  
 [!code-csharp[DataGridItemStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-vb[DataGridItemStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateColumns">
      <MemberSignature Language="C#" Value="public virtual bool AutoGenerateColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか <see cref="T:System.Web.UI.WebControls.BoundColumn" /> オブジェクトが自動的に作成されに表示される、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> データ ソース内の各フィールドのコントロールです。</summary>
        <value>
          <see langword="true" /> 場合 <see cref="T:System.Web.UI.WebControls.BoundColumn" /> オブジェクトが自動的に作成し、表示されているそれ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して自動的に作成する、 <xref:System.Web.UI.WebControls.BoundColumn> データ ソース内の各フィールドのオブジェクト。 各フィールドが列として表示し、 <xref:System.Web.UI.WebControls.DataGrid> データ ソースのフィールドの順序で制御します。  
  
 すべてのデータ型にバインドできる、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 フィールドに、サポートされていないデータ型が含まれている場合、そのフィールドの列は作成されません。 データ ソースがのみサポートされていないデータ型の 1 つの列が含まれる場合、例外がスローされます。 次の表は、コントロールにバインドできるデータ型を示します。  
  
|データ型|説明|  
|----------|--------|  
|プリミティブ|プリミティブ データ型など、 <xref:System.Int32?displayProperty=fullName>, 、<xref:System.Char>, 、<xref:System.Double>, 、という具合です。 完全な一覧については、「<xref:System.Type.IsPrimitive%2A?displayProperty=fullName>」を参照してください。|  
|String|<xref:System.String?displayProperty=fullName> オブジェクト。|  
|DateTime|<xref:System.DateTime?displayProperty=fullName> オブジェクト。|  
|Decimal \(10 進数型\)|<xref:System.Decimal?displayProperty=fullName> オブジェクト。|  
  
> [!NOTE]
>  明示的に宣言された列は、自動生成された列と組み合わせて使用可能性があります。 明示的に宣言された列の両方を使用して、最初に表示されときに、自動生成された列に続きます。 自動生成された列は追加されません、 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns%2A> 自動的に作成するプロパティ、 <xref:System.Web.UI.WebControls.BoundColumn> オブジェクト データ ソース内の各フィールドです。  
  
 [!code-csharp[Classic DataGrid.AutoGenerateColumns Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.AutoGenerateColumns Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.AutoGenerateColumns Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>背景に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> の背景に表示するイメージを指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!NOTE]
>  指定したイメージがより小さい場合、 <xref:System.Web.UI.WebControls.DataGrid> コントロール、イメージをコントロールの背景を埋めるために並べて表示されます。  
  
   
  
## 例  
 次のコード例を示す方法を使用して、 <xref:System.Web.UI.WebControls.DataGrid.BackImageUrl%2A> の背景画像を指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.BackImageUrl Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.BackImageUrl Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.BackImageUrl Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridBackImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridBackImageUrl/CS/datagridbackimageurlcs.aspx#1)]
 [!code-vb[DataGridBackImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridBackImageUrl/VB/datagridbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see langword="Cancel" /> 内のアイテムをクリックした、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントが発生したときに、 `Cancel` 内のアイテムをクリックした、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 一般的なハンドラー、 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントに設定、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを `-1` \(アイテムの選択を解除\) するデータを再バインドと、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 コントロールの値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 内の項目に加えられた編集をキャンセルするイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、 <see langword="Cancel" /> コマンド名です。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.CancelCommandName> を表すフィールド、 `Cancel` コマンド名です。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列を表すオブジェクトのコレクションを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataGridColumnCollection" /> の列を表すオブジェクトのコレクションを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、コレクション内の列をプログラムで制御する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。<xref:System.Web.UI.WebControls.DataGrid.Columns%2A> で描画を明示的に宣言された列がコレクションに含まれる、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!NOTE]
>  明示的に宣言された列は、自動的に生成された列と組み合わせて使用可能性があります。 明示的に宣言された列の両方を使用して、最初に表示されときに、自動的に生成された列に続きます。 自動的に生成された列を追加できません、 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションです。  
  
 列に表示される順序、 <xref:System.Web.UI.WebControls.DataGrid> コントロールは、列が表示される順序によって制御、 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションです。  
  
 次の表に、別の列のクラスから派生する、 <xref:System.Web.UI.WebControls.DataGridColumn> クラスし、で使用できる、 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションです。  
  
|列の型|説明|  
|---------|--------|  
|<xref:System.Web.UI.WebControls.BoundColumn>|データ ソースのフィールドにバインドされた列が表示されます。 テキストとして、各項目をフィールドに表示します。 これは、既定の列の型、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。|  
|<xref:System.Web.UI.WebControls.ButtonColumn>|列の各項目のコマンド ボタンを表示します。 などのカスタム ボタン コントロールの列を作成できます、 `Add` または `Remove` \] ボタンをクリックします。|  
|<xref:System.Web.UI.WebControls.EditCommandColumn>|列内の各項目の編集コマンドを含む列を表示します。|  
|<xref:System.Web.UI.WebControls.HyperLinkColumn>|ハイパーリンクとして、列の各項目の内容を表示します。 列の内容は、データ ソースまたは静的テキストのフィールドにバインドできます。|  
|<xref:System.Web.UI.WebControls.TemplateColumn>|指定したテンプレートを次の列の各項目を表示します。 これにより、列でカスタム コントロールを提供することができます。|  
  
> [!NOTE]
>  プログラムで列を追加することができますが、 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクション、静的に列を一覧表示し、使用して簡単には、 <xref:System.Web.UI.WebControls.DataGridColumn.Visible%2A> プロパティまたは列を非表示にします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> に列を動的に追加するコレクション、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.Columns Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Columns Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.Columns Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Columns Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridColumnVisible\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-vb[DataGridColumnVisible\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
        <altmember cref="T:System.Web.UI.WebControls.BoundColumn" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonColumn" />
        <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkColumn" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateColumn" />
      </Docs>
    </Member>
    <Member MemberName="CreateColumnSet">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ArrayList CreateColumnSet (System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ArrayList CreateColumnSet(class System.Web.UI.WebControls.PagedDataSource dataSource, bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateColumnSet(System.Web.UI.WebControls.PagedDataSource,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">コントロールの階層構造の作成に使用されているデータ ソース</param>
        <param name="useDataSource">列を自動的に生成するか、または保存済みの状態を使用するデータ ソースを使用するかどうか。</param>
        <summary>コントロールの階層構造の構築に使用する列のセットを作成します。<see cref="P:System.Web.UI.WebControls.DataGrid.AutoGenerateColumns" /> が true の場合、列がデータ ソースと一致するために作成されで定義された列のセットに追加されます、 <see cref="P:System.Web.UI.WebControls.DataGrid.Columns" /> コレクションです。</summary>
        <returns>
          <see cref="T:System.Collections.ArrayList" /> 正しい順序で列の有効なセットを格納します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlHierarchy(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">列を自動的に生成するか、または保存済みの状態を使用するデータ ソースを使用するかどうか。</param>
        <summary>表示に使用されるコントロールの階層を作成、 <see cref="T:System.Web.UI.WebControls.DataGrid" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装では、コントロールのコレクション内のすべての子が既にクリアされたことを前提としています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="useDataSource" /> <see langword="true" />, の値 <see cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" /> が設定されていない、選択したデータ ソースが実装されていない、 <see cref="T:System.Collections.ICollection" /> インターフェイスです。  
  
 または  
  
 <paramref name="useDataSource" /> <see langword="true" /> データ ソースであり、無効な <see cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しいコントロールのスタイルを作成します。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> を表す新しいスタイル。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.DataGrid.CreateControlStyle%2A> カスタム サーバー内のメソッドを制御できるため、常に表示されます、 <xref:System.Web.UI.WebControls.BaseDataList.GridLines%2A> なしで <xref:System.Web.UI.WebControls.BaseDataList.CellSpacing%2A> で、 <xref:System.Web.UI.WebControls.DataGrid>です。  
  
 [!code-csharp[CustomDataGridCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstylecs.aspx#1)]
 [!code-vb[CustomDataGridCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataGridCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/CS/custom_datagrid_createcontrolstyle.cs#2)]
[!code-vb[CustomDataGridCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataGridCreateControlStyle/VB/custom_datagrid_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataGridItem CreateItem (int itemIndex, int dataSourceIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataGridItem CreateItem(int32 itemIndex, int32 dataSourceIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.CreateItem(System.Int32,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="dataSourceIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">インデックス、 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトです。</param>
        <param name="dataSourceIndex">データ ソースからデータ項目のインデックス。</param>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListItemType" /> 値のいずれか。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトを作成します。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.CreateItem%2A> で使用されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.DataGrid> を作成するクラス、 <xref:System.Web.UI.WebControls.DataGridItem> オブジェクトです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示されている現在のページのインデックスを設定します。</summary>
        <value>現在表示されているページの 0 から始まるインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティに現在表示されているページを使用して、 <xref:System.Web.UI.WebControls.DataGrid> ページングが有効な場合を制御します。 このプロパティは表示されるページをプログラムで制御するも使用します。  
  
 ページング コントロールに組み込まれた非表示にし、カスタム コントロールを作成できます。 特定のページを表示するには、このプロパティを設定を表示するデータをバインドし、たいページのインデックス、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> に表示するページをプログラムで制御するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.CurrentPageIndex Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.CurrentPageIndex Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.CurrentPageIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridAllowPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-vb[DataGridAllowPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したページのインデックスは、負の値です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のアイテムを削除\] ボタンがクリックされたときに発生する、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> のアイテムの削除\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 一般的なハンドラーを <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントのデータ ソースから選択した項目を削除および再バインドするデータ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> からアイテムを削除するイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除コマンドの名前を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommandName> Delete コマンド名を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のアイテムの編集\] ボタンがクリックされたときに発生する、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> のアイテムの編集\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 一般的なハンドラー、 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントのセット、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを選択した行にデータをバインドし、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 コントロールの値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例を指定して、ハンドラーをコードの方法を示します、 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 内の項目を編集するイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集コマンドの名前を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.EditCommandName> 編集コマンド名を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インデックス内の項目の取得または設定、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> を編集するコントロール。</summary>
        <value>内の項目のインデックス、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> を編集するコントロール。 既定値は\-1 であることを示す、アイテムではありません、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールが編集されています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティと、 <xref:System.Web.UI.WebControls.DataGrid> コントロールに含まれる、 <xref:System.Web.UI.WebControls.EditCommandColumn> で選択した項目のインデックスを確認する、 <xref:System.Web.UI.WebControls.DataGrid> を編集するコントロール。  
  
 このプロパティは編集されている項目をプログラムで制御するも使用します。 このプロパティ内の項目のインデックスを設定、 <xref:System.Web.UI.WebControls.DataGrid> コントロールでは、そのアイテムの編集コントロールが有効になります、 <xref:System.Web.UI.WebControls.EditCommandColumn>です。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティは、0 から始まります。  
  
 プログラムを使用して編集をキャンセルするには、このプロパティを\-1 を設定します。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 コントロールの値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> 編集用に選択した項目を決定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.EditItemIndex Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.EditItemIndex Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したインデックスは、\-1 未満です。</exception>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
        <altmember cref="T:System.Web.UI.WebControls.EditCommandColumn" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集用に選択した項目のスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 編集用に選択した項目のスタイル プロパティを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> 編集用に選択した項目のカスタム スタイルを指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 調整可能な共通のスタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置が含まれます。 外観を強化するさまざまなスタイルを提供する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 アイテムのスタイル プロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールは、階層から別のスタイル プロパティの 1 つの項目から継承されます。 階層内を低く設定項目のスタイル プロパティは、スタイルのプロパティの階層の上位の項目に継承されます。 赤いフォントを指定する場合など、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティ、すべての他の項目のスタイルのプロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールには、赤いフォントがあります。 これにより、1 つの項目のスタイル プロパティを設定して、コントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位層にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 青のフォントを指定するなど、 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> で指定された赤いフォントをオーバーライドするプロパティ、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティです。 次の表は、最上位から最下位までの階層の順序を示します。  
  
|優先順位|スタイル プロパティ|  
|----------|----------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 編集用に選択アイテムのカスタム スタイルを指定するには、配置、 `<EditItemStyle>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 スタイル属性を一覧表示できますし、 `<EditItemStyle>` タグ。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A> プロパティを黄色に編集用に選択アイテムの背景色を設定します。  
  
 [!code-csharp[Classic DataGrid.EditItemStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.EditItemStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.EditItemStyle Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[フッター\] セクションのスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> のフッター セクションのスタイル プロパティを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティのフッターのカスタム スタイルを使用して、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 調整可能な共通のスタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置が含まれます。 外観を強化するさまざまなスタイルを提供する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> のプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールのスタイル設定を継承する、 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティです。 赤いフォントを指定する場合など、 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティには、赤いフォントがあります。 これにより、単一のスタイル プロパティを設定して、コントロールの一般的な外観を指定することができます。 継承されたスタイル設定を上書きするには設定して、 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティです。 青のフォントを指定するなど、 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> で指定された赤いフォントをオーバーライドするプロパティ、 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティです。  
  
 フッター セクションのカスタム スタイルを指定するには、配置、 `<FooterStyle>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 スタイル属性を一覧表示できますし、 `<FooterStyle>` タグ。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> にプロパティを設定する必要があります `true` を表示するには、このプロパティのです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> フッター セクションの背景色を設定するプロパティです。  
  
 [!code-csharp[classic datagrid.footerstyle example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[classic datagrid.footerstyle example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridFooterStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-vb[DataGridFooterStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>見出しのセクションのスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> に見出しセクションのスタイル プロパティを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティのヘッダー セクションのカスタム スタイルを使用して、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 調整可能な共通のスタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置が含まれます。 外観を強化するさまざまなスタイルを提供する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> のプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールのスタイル設定を継承する、 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティです。 赤いフォントを指定する場合など、 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティには、赤いフォントがあります。 これにより、単一のスタイル プロパティを設定して、コントロールの一般的な外観を指定することができます。 継承されたスタイル設定を上書きするには設定して、 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティです。 青のフォントを指定するなど、 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> で指定された赤いフォントをオーバーライドするプロパティ、 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> プロパティです。  
  
 見出しのセクションのカスタム スタイルを指定するには、配置、 `<HeaderStyle>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 スタイル属性を一覧表示できますし、 `<HeaderStyle>` タグ。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> にプロパティを設定する必要があります `true` を表示するには、このプロパティのです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> 見出しのセクションの背景色を設定するプロパティです。  
  
 [!code-csharp[classic datagrid.footerstyle example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[classic datagrid.footerstyle example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.FooterStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridFooterStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridFooterStyle/CS/datagridfooterstylecs.aspx#1)]
 [!code-vb[DataGridFooterStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridFooterStyle/VB/datagridfooterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataGridItem item, System.Web.UI.WebControls.DataGridColumn[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataGridItem item, class System.Web.UI.WebControls.DataGridColumn[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializeItem(System.Web.UI.WebControls.DataGridItem,System.Web.UI.WebControls.DataGridColumn[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columns" Type="System.Web.UI.WebControls.DataGridColumn[]" />
      </Parameters>
      <Docs>
        <param name="item">初期化する <see cref="T:System.Web.UI.WebControls.DataGridItem" />。</param>
        <param name="columns">配列 <see cref="T:System.Web.UI.WebControls.DataGridColumn" /> この列に含まれるオブジェクト <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</param>
        <summary>指定された初期化 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.InitializeItem%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.DataGrid> クラスを指定された初期化 <xref:System.Web.UI.WebControls.DataGridItem> オブジェクトです。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridColumn" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.DataGridItem item, int columnSpan, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.DataGridItem item, int32 columnSpan, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.InitializePager(System.Web.UI.WebControls.DataGridItem,System.Int32,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataGridItem" />
        <Parameter Name="columnSpan" Type="System.Int32" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="item">
          <see cref="T:System.Web.UI.WebControls.DataGridItem" /> ポケットベルを格納しています。</param>
        <param name="columnSpan">ポケットベルをまたがる列の数。</param>
        <param name="pagedDataSource">A <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> ポケットベルのプロパティを格納します。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> ページング UI を含むオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページング UI とは、ナビゲーション バーは、1 つに組み込まれる <xref:System.Web.UI.WebControls.TableCell> のすべての列にまたがる、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。<xref:System.Web.UI.WebControls.DataGrid.InitializePager%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.DataGrid> ページの行を作成するクラス。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>いずれかのボタンがクリックされたときに発生する、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> のいずれかのボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このイベントは通常で、\[追加などのカスタム CommandName 値を持つボタン コントロールの処理に使用、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントを追加またはショッピング カートからアイテムを削除します。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー内の項目で発生した、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントは内の項目、 <xref:System.Web.UI.WebControls.DataGrid> コントロールが作成されると、データがコントロールにバインドされるラウンド トリップ時と時にします。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 内の行の外観と内容を制御するイベントは通常使用、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> に項目が作成される順序を表示するイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.ItemCreated Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.ItemCreated Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridItemCreated\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-vb[DataGridItemCreated\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-csharp[DataGridItemCreated2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-vb[DataGridItemCreated2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目がデータにバインドされた後に発生、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 項目にバインドされたデータは、後にイベントが発生、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このイベントは、クライアントで表示されるようにするデータ項目にアクセスする最後の機会を提供します。 このイベントが発生した後、データ項目が null になり、もう取り扱っていません。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 内のアイテムの順序を表示するイベント、 <xref:System.Web.UI.WebControls.DataGrid> は区切られたデータです。  
  
 [!code-csharp[Classic DataGrid.ItemDataBound Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.ItemDataBound Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridItemDataBound\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-vb[DataGridItemDataBound\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-csharp[DataGridItemDataBound2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-vb[DataGridItemDataBound2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> 内の各項目を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataGridItemCollection" /> のコレクションを含む <see cref="T:System.Web.UI.WebControls.DataGridItem" /> 内の各項目を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.Items%2A> コレクション内の項目をプログラムで制御する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。<xref:System.Web.UI.WebControls.DataGrid.Items%2A> コレクションが項目をコレクションに追加または削除するメソッドを提供していません。 ただし、項目の内容を制御のハンドラーを提供することにより、 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントです。  
  
> [!NOTE]
>  データ ソースにバインドされている項目のみが含まれている、 <xref:System.Web.UI.WebControls.DataGrid.Items%2A> コレクションです。 ヘッダー、フッター、および区切り記号は、コレクションに含まれません。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.Items%2A> 内の各項目の内容を表示するコレクション、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.Items Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.Items Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.Items Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.Items Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridColumnVisible\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridColumnVisible/CS/datagridcolumnvisiblecs.aspx#1)]
 [!code-vb[DataGridColumnVisible\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridColumnVisible/VB/datagridcolumnvisiblevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemCollection" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の項目のスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> 内の項目のスタイル プロパティを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 項目にカスタム スタイルを提供するこのプロパティを使用して、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 調整可能な共通のスタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置が含まれます。 外観を強化するさまざまなスタイルを提供する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 アイテムのスタイル プロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールは、階層から別のスタイル プロパティの 1 つの項目から継承されます。 階層内を低く設定項目のスタイル プロパティは、スタイルのプロパティの階層の上位の項目に継承されます。 赤いフォントを指定する場合など、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティ、すべての他の項目のスタイルのプロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールには、赤いフォントがあります。 これにより、1 つの項目のスタイル プロパティを設定して、コントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位層にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 青のフォントを指定するなど、 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> で指定された赤いフォントをオーバーライドするプロパティ、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティです。 次の表は、最上位から最下位までの階層の順序を示します。  
  
|優先順位|スタイル プロパティ|  
|----------|----------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 アイテムのカスタム スタイルを指定する、 <xref:System.Web.UI.WebControls.DataGrid> 管理、配置、 `<ItemStyle>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 スタイル属性を一覧表示できますし、 `<ItemStyle>` タグ。  
  
 使用することも、 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> の項目を交互に別の外観を提供するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> 内の項目の背景色を設定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> 黄色にします。  
  
 [!code-csharp[Classic DataGrid.ItemStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.ItemStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridItemStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemStyle/CS/datagriditemstylecs.aspx#1)]
 [!code-vb[DataGridItemStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemStyle/VB/datagriditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">保存済みの状態、 <see cref="T:System.Web.UI.WebControls.DataGrid" />です。</param>
        <summary>保存済みの状態を読み込み、 <see cref="T:System.Web.UI.WebControls.DataGrid" />です。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string NextPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NextPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>次のコマンド引数を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument> を次のコマンド引数を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ページの UI サーバー コントロールの階層構造のコンテナー内のコントロールによって発生するイベントを渡します。</summary>
        <returns>
          <see langword="true" /> このメソッドが、ページの UI サーバー コントロールの階層構造はコンテナー内のコントロールによって発生するイベントを渡すことを示すためにそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnBubbleEvent%2A> メソッドは、ページの UI サーバー コントロールの階層構造のコンテナー内のコントロールによって発生するイベントを成功します。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnCancelCommand%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 内のアイテムを \[キャンセル\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 一般的なハンドラー、 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> イベントに設定、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを `-1` \(アイテムの選択を解除\) するデータを再バインドと、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 コントロールの値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> 内の項目に加えられた編集をキャンセルするイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnCancelCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.CancelCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnDeleteCommand%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> のアイテムの削除\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 一般的なハンドラーを <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> イベントのデータ ソースから選択した項目を削除および再バインドするデータ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.DeleteCommand> からアイテムを削除するイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnDeleteCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.DeleteCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnEditCommand%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> のアイテムの編集\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 一般的なハンドラー、 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> イベントのセット、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを選択した行にデータをバインドし、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 コントロールの値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
   
  
## 例  
 次のコード例を指定して、ハンドラーをコードの方法を示します、 <xref:System.Web.UI.WebControls.DataGrid.EditCommand> 内の項目を編集するイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnEditCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.EditCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnItemCommand%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> のいずれかのボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このイベントは通常で、\[追加などのカスタム CommandName 値を持つボタン コントロールの処理に使用、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> イベントを追加またはショッピング カートからアイテムを削除します。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.ItemCreated" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnItemCreated%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> イベントは内の項目、 <xref:System.Web.UI.WebControls.DataGrid> コントロールが作成されると、データがコントロールにバインドされるラウンド トリップ時と時にします。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> 内の行の外観と内容を制御するイベントは通常使用、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.ItemCreated> に項目が作成される順序を表示するイベント、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.ItemCreated Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.ItemCreated Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridItemCreated\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated/CS/datagriditemcreatedcs.aspx#1)]
 [!code-vb[DataGridItemCreated\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated/VB/datagriditemcreatedvb.aspx#1)]  
  
 [!code-csharp[DataGridItemCreated2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemCreated2/CS/datagriditemcreated2cs.aspx#1)]
 [!code-vb[DataGridItemCreated2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemCreated2/VB/datagriditemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemCreated(System.Web.UI.WebControls.DataGridItemEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataGridItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataGridItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnItemDataBound%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 項目にバインドされたデータは、後にイベントが発生、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このイベントは、クライアントで表示されるようにするデータ項目にアクセスする最後の機会を提供します。 このイベントが発生した後、データ項目が null になり、もう取り扱っていません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.ItemDataBound> 内のアイテムの順序を表示するイベント、 <xref:System.Web.UI.WebControls.DataGrid> は区切られたデータです。  
  
 [!code-csharp[Classic DataGrid.ItemDataBound Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.ItemDataBound Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridItemDataBound\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound/CS/datagriditemdataboundcs.aspx#1)]
 [!code-vb[DataGridItemDataBound\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound/VB/datagriditemdataboundvb.aspx#1)]  
  
 [!code-csharp[DataGridItemDataBound2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridItemDataBound2/CS/datagriditemdatabound2cs.aspx#1)]
 [!code-vb[DataGridItemDataBound2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridItemDataBound2/VB/datagriditemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnItemDataBound(System.Web.UI.WebControls.DataGridItemEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (System.Web.UI.WebControls.DataGridPageChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.Web.UI.WebControls.DataGridPageChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントは、ページの選択範囲の要素の 1 つがクリックされたときに発生します。  
  
 一般的なハンドラーを <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントのセット、 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティのページを表示して、用途のインデックスを <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> にデータをバインドするメソッド、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!NOTE]
>  イベント ハンドラーは、 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs> オブジェクトをパラメーターとして。 使用することができます、 <xref:System.Web.UI.WebControls.DataGridPageChangedEventArgs.NewPageIndex%2A> のページの選択範囲の要素からユーザーが選択したページのインデックスを確認するには、このパラメーターのプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントです。 上のページを表示、 <xref:System.Web.UI.WebControls.DataGrid> 10 項目単位で制御します。  
  
 [!code-csharp[DataGridAllowPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-vb[DataGridAllowPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-csharp[PageIndexChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-vb[PageIndexChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnSortCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnSortCommand (System.Web.UI.WebControls.DataGridSortCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSortCommand(class System.Web.UI.WebControls.DataGridSortCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnSortCommand%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベント列を並べ替えるときに発生します。  
  
 一般的なハンドラーを <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントは、リストを並べ替えますにデータを再バインド、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントを並べ替える、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridAllowSorting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-vb[DataGridAllowSorting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-csharp[DataGridSortCommand\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-vb[DataGridSortCommand\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" /> method.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataGridCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataGridCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataGridCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" /> イベントを発生させます。 これにより、イベントのカスタム ハンドラーを作成できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> のカスタム ハンドラーを提供するメソッド、 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントです。  
  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> アイテムの更新\] ボタンがクリックされたときにイベントが発生します。  
  
 一般的なハンドラー、 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントは、データのセットを更新、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> \(アイテムの選択を解除\) を\-1 にプロパティにデータをバインドし、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 コントロールの値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.DataGrid.OnUpdateCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 内の項目の値を更新するイベント、 <xref:System.Web.UI.WebControls.DataGrid> 、ユーザーが指定した新しい値を制御します。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PageCommandName">
      <MemberSignature Language="C#" Value="public const string PageCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PageCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページのコマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.PageCommandName> ページ コマンド名を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の項目を表示するのに必要なページの総数を取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>内の項目を表示するために必要なページの合計数、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プログラムでの項目を表示するために必要なページ数を特定するこのプロパティを使用して、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このプロパティは、使用する場合にのみ、 <xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> にプロパティが設定されている `true`します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.PageCount%2A> で項目を表示するのに必要なページの数を決定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.PageCount Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.PageCount Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridPageChangedEventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPageChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの選択範囲の要素の 1 つがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントは、ページの選択範囲の要素の 1 つがクリックされたときに発生します。  
  
 一般的なハンドラーを <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントのセット、 <xref:System.Web.UI.WebControls.DataGrid.CurrentPageIndex%2A> プロパティのページを表示して、用途のインデックスを <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> にデータをバインドするメソッド、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.PageIndexChanged> イベントです。 上のページを表示、 <xref:System.Web.UI.WebControls.DataGrid> 10 項目単位で制御します。  
  
 [!code-csharp[DataGridAllowPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowPaging/CS/datagridallowpagingcs.aspx#1)]
 [!code-vb[DataGridAllowPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowPaging/VB/datagridallowpagingvb.aspx#1)]  
  
 [!code-csharp[PageIndexChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageIndexChanged/CS/datagridpageindexchangedcs.aspx#1)]
 [!code-vb[PageIndexChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageIndexChanged/VB/datagridpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnPageIndexChanged(System.Web.UI.WebControls.DataGridPageChangedEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridPageChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridPagerStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridPagerStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridPagerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページングのスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> のページングのスタイル プロパティを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は空 <see cref="T:System.Web.UI.WebControls.DataGridPagerStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティのページングのセクションのカスタム スタイルを使用して、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 調整可能な共通のスタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置が含まれます。 外観を強化するさまざまなスタイルを提供する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 ページング セクションにカスタム スタイルを指定するには、配置、 `<PagerStyle>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 スタイル属性を一覧表示できますし、 `<PagerStyle>` タグ。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.PagerStyle%2A> のページの選択範囲の要素のカスタム スタイルを指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.PagerStyle Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.PagerStyle Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PagerStyle Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridPagerStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPagerStyle/CS/datagridpagerstylecs.aspx#1)]
 [!code-vb[DataGridPagerStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPagerStyle/VB/datagridpagerstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridPagerStyle" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public virtual int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の 1 つのページに表示する項目の数、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>1 つのページに表示する項目の数、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は 10 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、1 つのページに表示する項目の数を指定する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。<xref:System.Web.UI.WebControls.DataGrid.AllowPaging%2A> にプロパティを設定する必要があります `true` このプロパティの影響があります。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティを 5 つの項目が 1 つのページに表示することを指定する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.PageCount Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.PageCount Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.PageCount Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridPageSize\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridPageSize/CS/datagridpagesizecs.aspx#1)]
 [!code-vb[DataGridPageSize\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridPageSize/VB/datagridpagesizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したページ サイズを 1 より小さい値です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="E:System.Web.UI.WebControls.DataGrid.PageIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコントロールの階層構造を設定 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.PrepareControlHierarchy%2A> メソッドによって呼び出されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.DataGrid> でコントロールの階層構造を設定するコントロール、 <xref:System.Web.UI.WebControls.DataGrid> コントロールがレンダリングされる前に制御します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevPageCommandArgument">
      <MemberSignature Language="C#" Value="public const string PrevPageCommandArgument;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PrevPageCommandArgument" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前のコマンド引数を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument> を前のコマンド引数を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の状態を保存、 <see cref="T:System.Web.UI.WebControls.DataGrid" />です。</summary>
        <returns>保存された状態、 <see cref="T:System.Web.UI.WebControls.DataGrid" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Select コマンドの名前を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.SelectCommandName> Select コマンド名を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロール内の選択された項目のインデックスを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロール内の選択された項目のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> でユーザーが選択した項目のインデックスを特定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このプロパティを使用してプログラムで選択されている項目を指定する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 内のアイテムの選択を解除する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールをこのプロパティを\-1 に設定します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.SelectedIndex%2A> で選択した項目のインデックスの数を決定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 またを選択し、プログラムを使用して項目の選択を解除する方法も示します。  
  
 [!code-csharp[Classic DataGrid.SelectedIndex Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.SelectedIndex Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したインデックスは、\-1 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataGridItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataGridItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.DataGridItem" /> で選択した項目を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.DataGridItem" /> で選択した項目を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.SelectedItem%2A> を取得するプロパティ、 <xref:System.Web.UI.WebControls.DataGridItem> で選択した項目を表すオブジェクト、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 このオブジェクトは、選択された項目のプロパティにアクセスし、使用できます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> で選択した項目のプロパティにアクセスするプロパティ、 <xref:System.Web.UI.WebControls.DataList> コントロールです。  
  
 [!code-csharp[Classic DataGrid.SelectedIndex Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.SelectedIndex Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[BaseDataListSelectedIndexChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/CS/basedatalistselectedindexchangedcs.aspx#1)]
 [!code-vb[BaseDataListSelectedIndexChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseDataListSelectedIndexChanged/VB/basedatalistselectedindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataGridItem" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在選択されている項目のスタイル プロパティを取得、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> で現在選択されている項目のスタイル プロパティを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。 既定値は空 <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> で選択した項目のカスタム スタイルを指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 調整可能な共通のスタイル属性には、前景色、背景色、フォント、およびセル内のコンテンツの配置が含まれます。 外観を強化するさまざまなスタイルを提供する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 アイテムのスタイル プロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールは、階層から別のスタイル プロパティの 1 つの項目から継承されます。 階層内を低く設定項目のスタイル プロパティは、スタイルのプロパティの階層の上位の項目に継承されます。 赤いフォントを指定する場合など、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティ、すべての他の項目のスタイルのプロパティで、 <xref:System.Web.UI.WebControls.DataGrid> コントロールには、赤いフォントがあります。 これにより、1 つの項目のスタイル プロパティを設定して、コントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位層にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 青のフォントを指定するなど、 <xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A> で指定された赤いフォントをオーバーライドするプロパティ、 <xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A> プロパティです。 次の表は、最上位から最下位までの階層の順序を示します。  
  
|優先順位|スタイル プロパティ|  
|----------|----------------|  
|1|<xref:System.Web.UI.WebControls.DataGrid.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataGrid.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataGrid.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 選択したアイテムのカスタム スタイルを指定するには、配置、 `<SelectedItemStyle>` 開始タグと終了タグの間のタグ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 スタイル属性を一覧表示できますし、 `<SelectedItemStyle>` タグ。  
  
   
  
## 例  
 次のコード例では、使用して <xref:System.Web.UI.WebControls.DataGrid.SelectedItemStyle%2A> で選択した項目の背景色を設定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> 黄色に制御します。  
  
 [!code-csharp[Classic DataGrid.SelectedIndex Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.SelectedIndex Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.SelectedIndex Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridSelectedItemStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSelectedItemStyle/CS/datagridselecteditemstylecs.aspx#1)]
 [!code-vb[DataGridSelectedItemStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSelectedItemStyle/VB/datagridselecteditemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のフッターを表示するかどうかを示す値、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>
          <see langword="true" /> は、フッターを表示するにはそれ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定 `true` のフッターを表示する、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 使用してフッターの外観を制御、 <xref:System.Web.UI.WebControls.DataGrid.FooterStyle%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.ShowFooter%2A> のフッターを表示するプロパティを <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.ShowFooter Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.ShowFooter Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowFooter Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridShowHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-vb[DataGridShowHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.FooterStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にヘッダーを表示するかどうかを示す値、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 表示します。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定 `true` でヘッダーを表示する、 <xref:System.Web.UI.WebControls.DataGrid>です。 使用して、ヘッダーの外観を制御、 <xref:System.Web.UI.WebControls.DataGrid.HeaderStyle%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.ShowHeader%2A> にヘッダーを非表示にするプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[Classic DataGrid.ShowHeader Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic DataGrid.ShowHeader Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataGrid.ShowHeader Example/VB/sourcevb.aspx#1)]  
  
 [!code-csharp[DataGridShowHeader\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridShowHeader/CS/datagridshowheadercs.aspx#1)]
 [!code-vb[DataGridShowHeader\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridShowHeader/VB/datagridshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="SortCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridSortCommandEventHandler SortCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.SortCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridSortCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列を並べ替えるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベント列を並べ替えるときに発生します。  
  
 一般的なハンドラーを <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントは、リストを並べ替えますにデータを再バインド、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.SortCommand> イベントを並べ替える、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 [!code-csharp[DataGridAllowSorting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridAllowSorting/CS/datagridallowsortingcs.aspx#1)]
 [!code-vb[DataGridAllowSorting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridAllowSorting/VB/datagridallowsortingvb.aspx#1)]  
  
 [!code-csharp[DataGridSortCommand\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridSortCommand/CS/datagridsortcommandcs.aspx#1)]
 [!code-vb[DataGridSortCommand\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridSortCommand/VB/datagridsortcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnSortCommand(System.Web.UI.WebControls.DataGridSortCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridSortCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="SortCommandName">
      <MemberSignature Language="C#" Value="public const string SortCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SortCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えコマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.SortCommandName> 並べ替えコマンド名を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。</summary>
        <value>常に <see langword="HtmlTextWriterTag.Table" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.TagKey%2A> プロパティでは、適切な HTML マークアップを記述する出力ストリーム、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataGrid.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始位置をマークします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataGridCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataGrid.UpdateCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataGridCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のアイテムを更新\] ボタンがクリックされたときに発生する、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> アイテムの更新\] ボタンがクリックされたときにイベントが発生します。  
  
 一般的なハンドラー、 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> イベントは、データのセットを更新、 <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> プロパティを `-1` \(アイテムの選択を解除\) する、データを再バインドと、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 コントロールの値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> 内の項目の値を更新するイベント、 <xref:System.Web.UI.WebControls.DataGrid> 、ユーザーが指定した新しい値を制御します。  
  
 [!code-csharp[DataGridEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit/CS/datagrideditcs.aspx#1)]
 [!code-vb[DataGridEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit/VB/datagrideditvb.aspx#1)]  
  
 [!code-csharp[DataGridEdit2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridEdit2/CS/datagridedit2cs.aspx#1)]
 [!code-vb[DataGridEdit2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridEdit2/VB/datagridedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataGrid.OnUpdateCommand(System.Web.UI.WebControls.DataGridCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.DataGridCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataGrid.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新プログラムのコマンド名を表します。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataGrid.UpdateCommandName> 更新コマンド名を表すフィールドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SortCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.CancelCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PageCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.NextPageCommandArgument" />
        <altmember cref="F:System.Web.UI.WebControls.DataGrid.PrevPageCommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="VirtualItemCount">
      <MemberSignature Language="C#" Value="public virtual int VirtualItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の項目数の仮想、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> カスタム ページングを使用する場合を制御します。</summary>
        <value>仮想の項目数、 <see cref="T:System.Web.UI.WebControls.DataGrid" /> カスタム ページングを使用する場合を制御します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して仮想内の項目数を指定する、 <xref:System.Web.UI.WebControls.DataGrid> カスタム ページングを使用する場合を制御します。 このプロパティは、使用する場合にのみ、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> にプロパティが設定されている `true`します。  
  
 場合、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> にプロパティが設定されている `true`, 、内の各アイテムを表示するために必要なページ数、 <xref:System.Web.UI.WebControls.DataGrid> コントロールの値に基づいて計算、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> と <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> プロパティです。  
  
 場合、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A> プロパティに設定されて `false`, に表示されるページ数、 <xref:System.Web.UI.WebControls.DataGrid> コントロールの値に基づいて計算、 <xref:System.Web.UI.WebControls.DataGrid.PageSize%2A> プロパティとデータ ソース内の項目の合計数。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A> 内の項目の合計数を指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> カスタム ページングを使用する場合を制御します。  
  
 [!code-csharp[DataGridCustomPaging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCustomPaging/CS/datagridcustompagingcs.aspx#1)]
 [!code-vb[DataGridCustomPaging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCustomPaging/VB/datagridcustompagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値は、負の数です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.PageSize" />
      </Docs>
    </Member>
  </Members>
</Type>