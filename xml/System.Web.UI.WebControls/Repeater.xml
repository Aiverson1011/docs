<Type Name="Repeater" FullName="System.Web.UI.WebControls.Repeater">
  <TypeSignature Language="C#" Value="public class Repeater : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Repeater extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Repeater" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ItemCommand")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.RepeaterDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>一覧として表示する各アイテムに指定したテンプレートを繰り返すことによりカスタム レイアウトを作成できる、データにバインドされたリスト コントロール。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [データ バインディング](#data_binding)  
  
-   [テンプレート](#templates)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.Repeater> コントロールは、基本的なテンプレート化されたデータにバインドされたリストです。 組み込みのレイアウトやスタイルがないため、すべてのレイアウト、書式、およびコントロールのテンプレート内のスタイルのタグを明示的に宣言する必要があります。  
  
 <xref:System.Web.UI.WebControls.Repeater> コントロールでは、マークアップ タグをテンプレート間で分割することができます。  テンプレートを使用してテーブルを作成するには、begin の table タグを含める \(`<table>`\) で、 <xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>, 、1 つのテーブルの行タグ \(`<tr>`\) で、 <xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>, 、およびエンド テーブル タグ \(`</table>`\) で、 <xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>です。  
  
 <xref:System.Web.UI.WebControls.Repeater> コントロールには、組み込みの選択機能や編集のサポートがありません。 使用することができます、 <xref:System.Web.UI.WebControls.Repeater.ItemCommand> コントロールに、テンプレートから生成されるコントロール イベントを処理するイベントです。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
<a name="data_binding"></a>   
## データ バインディング  
 <xref:System.Web.UI.WebControls.Repeater> コントロールにデータ バインディングをサポートするために 2 つのプロパティが用意されています。 実装する任意のコレクションにデータをバインドする、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイス \(など、 <xref:System.Data.DataView?displayProperty=fullName>, 、 <xref:System.Collections.ArrayList?displayProperty=fullName>, 、または配列\)、または <xref:System.ComponentModel.IListSource> インターフェイスを使用して、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティをデータ ソースを指定します。 設定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティには、データ バインドを実行するコードを手動で記述する必要があります。 自動的にバインドする、 <xref:System.Web.UI.WebControls.Repeater> コントロールをデータ ソース コントロールで表されるデータ ソースを設定、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティを <xref:System.Web.UI.Control.ID%2A> を使用するデータ ソース コントロールのです。 設定すると、 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Repeater> コントロールは、最初の要求で指定されたデータ ソース コントロールに自動的にバインドします。 そのため、明示的に呼び出す必要はありません、 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> メソッドのデータ関連のプロパティを変更していない限り、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。  
  
 A <xref:System.Web.UI.WebControls.Repeater> バインドを制御、 <xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A> と <xref:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate%2A> いずれかのデータにモデルが宣言されているし、によって参照される、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティまたはデータ ソースで指定されたコントロールの <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティです。<xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>, 、<xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>, 、および <xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A> はデータにバインドされていません。  
  
 場合、 <xref:System.Web.UI.WebControls.Repeater> 設定されているコントロールのデータ ソース、データは返されませんが、コントロールを表示、 <xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A> と <xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A> 項目のないです。 データ ソースが場合 `null`, 、 <xref:System.Web.UI.WebControls.Repeater> はレンダリングされません。  
  
<a name="templates"></a>   
## テンプレート  
 少なくともすべて <xref:System.Web.UI.WebControls.Repeater> コントロールを定義する必要があります、 <xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>です。 ただし、次の表で説明されているその他の省略可能なテンプレートを使用して、リストの外観をカスタマイズすることができます。  
  
|テンプレート名|説明|  
|-------------|--------|  
|<xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>|リスト内の項目のレイアウトと内容を定義します。 このテンプレートが必要です。|  
|<xref:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate%2A>|定義の内容と代替のレイアウトを決定 \(0 から始まる奇数のインデックスのアイテムです。 定義されていない場合 <xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A> を使用します。|  
|<xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A>|定義されている場合は、項目 \(および交互の項目\) の間でレンダリングされます。 定義されていない場合、区切り記号はレンダリングされません。|  
|<xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>|定義されている場合は、リストのヘッダーのレイアウトと内容を決定します。 定義されていない場合、ヘッダーは表示されません。|  
|<xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>|定義されている場合は、リストのフッターのレイアウトと内容を決定します。 定義されていない場合は、フッターはレンダリングされません。|  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:Repeater  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    Visible="True|False"  
>  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:Repeater>  
```  
  
   
  
## 例  
 ソース コードの Visual Studio の Web サイト プロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=192873)します。  
  
 次のコード例では、2 つの単純なを使用して <xref:System.Web.UI.WebControls.Repeater> ページ上のコントロールです。<xref:System.Web.UI.WebControls.Repeater.DataSource%2A> のデータ ソースを指定するプロパティが使用される、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 最初の <xref:System.Web.UI.WebControls.Repeater> ; テーブルの項目を表示する、2 つ目 <xref:System.Web.UI.WebControls.Repeater> コンマ区切りの一覧でその項目が表示されます。  
  
 [!code-csharp[Classic Repeater Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater Example/VB/sourcevb.aspx#1)]  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> のデータ ソースを指定するプロパティ、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティに設定されて、 <xref:System.Web.UI.Control.ID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールのデータを取得するために使用します。 ページが読み込まれるときに、 <xref:System.Web.UI.WebControls.Repeater> で指定されたデータ ソースに自動的にバインドするコントロール、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールとデータがユーザーに表示されます。  
  
 [!code-csharp[Repeater.DataSourceID\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Repeater.DataSourceID/CS/repeater.datasourceidcs.aspx#1)]
 [!code-vb[Repeater.DataSourceID\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Repeater.DataSourceID/VB/repeater.datasourceidvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Repeater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定オブジェクトを実装して、 <see cref="T:System.Web.UI.ITemplate" /> コントロールの項目に交互の方法を定義するが表示されます。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> 方法交互の項目を定義するが表示されます。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内の項目を交互に別の外観を提供するこのプロパティを使用して、 <xref:System.Web.UI.WebControls.Repeater> で指定されたものと制御、 <xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>です。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate%2A> の交互の項目を表示する、 <xref:System.Web.UI.WebControls.Repeater> 太字のフォントと明るい青のセル内のコントロールです。  
  
 [!code-csharp[Classic Repeater.AlternatingItemTemplate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.AlternatingItemTemplate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.AlternatingItemTemplate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.AlternatingItemTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CallingDataMethods">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.CallingDataMethods" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CallingDataMethodsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データのメソッドが呼び出されるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The purpose of this event is to give you an opportunity to specify that the data methods to be called are on a different object than the <xref:System.Web.UI.Page> object.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlCollection" /> コントロールの子コントロールを格納している <see cref="T:System.Web.UI.WebControls.Repeater" /> を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.ControlCollection" /> の子コントロールを含む、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Repeater.Controls%2A> の子プロセスを管理するコレクションを制御、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 一般的に子コントロールをコレクションから取得に使用されます。 追加また子コントロールをコレクションから削除します。  
  
> [!NOTE]
>  内の子コントロールにアクセスする、 <xref:System.Web.UI.WebControls.Repeater> を反復処理する、制御を <xref:System.Web.UI.WebControls.Repeater> コントロールの <xref:System.Web.UI.WebControls.Repeater.Items%2A> を取得して、 <xref:System.Web.UI.WebControls.RepeaterItem> 指定されたインデックスのです。 まず、 **Repeater** 項目の継承 <xref:System.Web.UI.Control.FindControl%2A> 、特定の ID を持つコントロールを取得します  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ASP.NET ページ フレームワークによって呼び出され、ポストバックまたはレンダリングの準備として、合成ベースの実装を使うサーバー コントロールに対し、それらのコントロールに含まれる子コントロールを作成するように通知します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateControlHierarchy(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">指定したデータ ソースを使用するかどうかを示します。</param>
        <summary>指定したデータ ソースの有無は、コントロールの階層構造を作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" /> 値。</summary>
        <returns>
          <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最初の呼び出し、 <xref:System.Web.UI.WebControls.Repeater.SelectArguments%2A> プロパティの呼び出し、 <xref:System.Web.UI.WebControls.Repeater.CreateDataSourceSelectArguments%2A> を返すメソッドを <xref:System.Web.UI.DataSourceSelectArguments.Empty%2A> 値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.RepeaterItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.RepeaterItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">内の指定位置、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールを作成した項目を配置します。</param>
        <param name="itemType">A <see cref="T:System.Web.UI.WebControls.ListItemType" /> の指定された型を表す、 <see cref="T:System.Web.UI.WebControls.Repeater" /> を作成する項目。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> 内の場所と指定した項目の種類のオブジェクト、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールです。</summary>
        <returns>新しい <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Repeater.CreateItem%2A> カスタム サーバー内のメソッドは、常に新しいを返すようにを制御 <xref:System.Web.UI.WebControls.RepeaterItem> と対応するインデックスおよびカスタム型 <xref:System.Web.UI.WebControls.Repeater> サーバー コントロール。  
  
 [!code-csharp[CustomRepeaterCreateItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterCreateItem/CS/custom_repeater_createitemcs.aspx#1)]
 [!code-vb[CustomRepeaterCreateItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterCreateItem/VB/custom_repeater_createitemvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterCreateItem\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterCreateItem/CS/custom_repeater_createitem.cs#2)]
 [!code-vb[CustomRepeaterCreateItem\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterCreateItem/VB/custom_repeater_createitem.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatingModelDataSource">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.CreatingModelDataSource" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CreatingModelDataSourceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Web.UI.WebControls.ModelDataSource" /> オブジェクトを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントの目的は、変更する機会を提供する、 <xref:System.Web.UI.WebControls.ModelDataSourceView> インスタンスから派生するカスタム クラスを使用する場合のシナリオで、 <xref:System.Web.UI.WebControls.ModelDataSourceView> クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインド、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールと指定したデータ ソースへのすべての子コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> によって指定されたデータ ソースにバインドするメソッド、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティを <xref:System.Web.UI.WebControls.Repeater> コントロールです。 データ ソースをバインドすると、 <xref:System.Web.UI.WebControls.Repeater> コントロールにコントロールをデータ ソース内の情報を表示します。  
  
 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A> メソッドは、データ ソースとデータ ソース内の情報を更新した後、リスト コントロール データを同期にも幅広く使われています。 これにより、リスト コントロールのデータも更新するデータ ソースを変更できます。  
  
 データ ソースの場合、 <xref:System.Web.UI.WebControls.Repeater> によって指定されたコントロール、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティには、必要はありませんを明示的に呼び出す、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> メソッドです。 ASP.NET に指定されたデータ ソース コントロールにバインドするには、自動的にこのメソッドを呼び出し、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> カスタム サーバー内のメソッドを制御できるため、常に、カスタムのデータ バインディング イベントを発生させます <xref:System.Web.UI.WebControls.Repeater> サーバー コントロール。  
  
 [!code-csharp[CustomRepeaterDataBind\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterDataBind/CS/custom_repeater_databindcs.aspx#1)]
 [!code-vb[CustomRepeaterDataBind\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterDataBind/VB/custom_repeater_databindvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterDataBind\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterDataBind/CS/custom_repeater_databind.cs#2)]
 [!code-vb[CustomRepeaterDataBind\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterDataBind/VB/custom_repeater_databind.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public virtual string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または特定のテーブルを設定、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> をコントロールにバインドします。</summary>
        <value>内のテーブルを指定する文字列、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって、データ ソースが指定されている場合、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティを含む複数のデータ ソースを使用して、 <xref:System.Web.UI.WebControls.Repeater.DataMember%2A> プロパティをコントロールにバインドするのには、特定のソースを指定します。 たとえば、ある、 <xref:System.Data.DataSet?displayProperty=fullName> を複数のテーブルには、コントロールにバインドするテーブルを指定する必要があります。 使用して、データ ソースを指定したら、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> データ ソースをコントロールにバインドするメソッドです。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Repeater.DataMember%2A> 内のテーブルを指定するプロパティ、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> にバインドする、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。  
  
 [!code-csharp[Classic Repeater.DataMember Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.DataMember Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.DataMember Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.DataMember Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはリストのデータを提供するデータ ソースを設定します。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" /> または <see cref="T:System.ComponentModel.IListSource" /> このコントロールにデータを提供するために使用する値のコレクションを格納するオブジェクト。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して作成するデータのソースを指定する、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。<xref:System.Web.UI.WebControls.Repeater.DataSource%2A> いずれかになります <xref:System.Collections.IEnumerable?displayProperty=fullName> など、コレクション、 <xref:System.Data.DataView?displayProperty=fullName> 、データベースにアクセスするため、 <xref:System.Collections.ArrayList?displayProperty=fullName>, 、配列、または、 <xref:System.ComponentModel.IListSource> オブジェクトです。 設定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティ データ ソースにバインドするコードを手動で記述する必要があります。  
  
 によって、データ ソースが指定されている場合、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティを含む複数のデータ ソースを使用して、 <xref:System.Web.UI.WebControls.Repeater.DataMember%2A> プロパティをコントロールにバインドするのには、特定のソースを指定します。 たとえば、ある、 <xref:System.Data.DataSet?displayProperty=fullName> を複数のテーブルには、コントロールにバインドするテーブルを指定する必要があります。 使用して、データ ソースを指定したら、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> データ ソースをコントロールにバインドするメソッドです。  
  
 また、使用することができます、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティを自動的にデータ ソース コントロールで表されるデータ ソースにバインドします。 設定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Repeater> コントロールが自動的に指定されたデータ ソース コントロールにバインドします。 明示的に呼び出しのコードを記述する必要はありません、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> メソッドのプロパティを動的に変更しない限り、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。  
  
 両方の値が指定されている場合、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティおよび <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティには、ASP.NET がデータ ソースを解決できないと <xref:System.Web.HttpException?displayProperty=fullName> がスローされます。  
  
   
  
## 例  
 次の例では、指定する方法、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> の <xref:System.Web.UI.WebControls.Repeater> ページが読み込まれるときに制御します。  
  
 [!code-csharp[Classic Repeater.DataSource Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.DataSource Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.DataSource Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.DataSource Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> 指定されたオブジェクトがサポート対象のデータ ソースではない、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールです。</exception>
        <exception cref="T:System.Web.HttpException">両方の値が指定されているために、データ ソースが解決できない、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> プロパティおよび <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティです。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.DataSourceControl))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="P:System.Web.UI.Control.ID" /> データ ソースのプロパティを制御する、 <see cref="T:System.Web.UI.WebControls.Repeater" /> 、データ ソースを取得するコントロールを使用する必要があります。</summary>
        <value>
          <see langword="ID" /> データ ソース コントロールのプロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティにアクセスする、 <xref:System.Web.UI.Control.ID%2A> データ ソースのプロパティを制御する、 <xref:System.Web.UI.WebControls.Repeater> 、データ ソースを取得するコントロールを使用しています。 データ ソースによって参照されているコントロール、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティを実装する任意のコントロールを使用できます、 <xref:System.Web.UI.IDataSource> インターフェイスです。 データ ソース コントロールと同じ名前付けコンテナーのいずれかに存在する必要があります、 <xref:System.Web.UI.WebControls.Repeater> それを参照するコントロールの親コントロールで、または、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 値を指定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.Repeater> コントロールを指定したデータ ソース コントロールにバインドします。 明示的に呼び出しのコードを記述する必要はありません、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> メソッドです。  
  
 また、使用することができます、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティにバインドする値のソースを指定する、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 データ ソースを実装するコレクションである必要があります、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイス \(など、 <xref:System.Data.DataView?displayProperty=fullName> または <xref:System.Collections.ArrayList?displayProperty=fullName> オブジェクト\) または <xref:System.ComponentModel.IListSource> インターフェイスです。 設定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティには、データ バインドを実行するコードを記述する必要があります。  
  
 両方の値が指定されている場合、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> と <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティ、ASP.NET は、データ ソースを解決するのにはできませんと <xref:System.Web.HttpException?displayProperty=fullName> 例外がスローされます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次のコード例では、設定、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティを <xref:System.Web.UI.Control.ID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールです。 ページが読み込まれるときに、 <xref:System.Web.UI.WebControls.Repeater> で指定されているデータ ソースにコントロールのバインド、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールとデータがユーザーに表示されます。  
  
 [!code-csharp[Repeater.DataSourceID\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Repeater.DataSourceID/CS/repeater.datasourceidcs.aspx#1)]
 [!code-vb[Repeater.DataSourceID\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Repeater.DataSourceID/VB/repeater.datasourceidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">次の理由の 1 つのデータ ソースを解決できません。  
  
-   両方の値が指定されている、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> と <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティです。  
  
-   によって指定されたデータ ソース、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティが、ページ上に見つかりません。  
  
-   によって指定されたデータ ソース、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティは実装しない <see cref="T:System.Web.UI.IDataSource" />します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはテーマがこのコントロールに適用されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> テーマを使用するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater.EnableTheming%2A> プロパティは、テーマが有効になっているかどうかを示します。 ときに、 <xref:System.Web.UI.WebControls.Repeater.EnableTheming%2A> プロパティは、 `true`, 、コントロール スキンを適用するアプリケーションのテーマのディレクトリが検索されます。 特定のコントロールのスキンがテーマ ディレクトリに存在しない場合、スキンは適用されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.EnsureDataBound" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>あることを確認、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールがデータ バインドを必要とし、有効なデータ ソース コントロールを呼び出す前に指定されている、 <see cref="M:System.Web.UI.WebControls.Repeater.DataBind" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値を指定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティが、ASP.NET は自動的にバインドされて、 <xref:System.Web.UI.WebControls.Repeater> 、指定したデータ ソース コントロールを制御します。 ASP.NET でのデータ バインディングを実行する場合、 <xref:System.Web.UI.WebControls.Repeater> コントロールに最初に呼び出した、 <xref:System.Web.UI.WebControls.Repeater.EnsureDataBound%2A> コントロールがまだデータ バインドされていませんし、有効なデータ ソースを制御することを実装することを確認するメソッド、 <xref:System.Web.UI.IDataSource> のインターフェイスが指定されているその <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティです。<xref:System.Web.UI.WebControls.Repeater.EnsureDataBound%2A> メソッドを呼び出します、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
        <altmember cref="M:System.Web.UI.WebControls.Repeater.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.ITemplate" /> を定義する方法のフッター セクション、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールが表示されます。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> を定義する方法のフッター セクション、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールが表示されます。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して制御するテンプレートを作成する方法のフッター セクション、 <xref:System.Web.UI.WebControls.Repeater> コントロールが表示されます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A> のフッターの外観を制御する、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 注意して、 <xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A> テーブルの終了タグが含まれています \(`</table>`\)。  
  
 [!code-csharp[Classic Repeater.FooterTemplate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.FooterTemplate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.GetData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.Collections.IEnumerable" /> データ ソースからのインターフェイスです。</summary>
        <returns>実装するオブジェクト <see cref="T:System.Collections.IEnumerable" /> データ ソースからデータを表します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ ソースを指定するか、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A> プロパティまたは、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> と <xref:System.Web.UI.WebControls.Repeater.SelectArguments%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.ITemplate" /> を定義する方法のヘッダー セクション、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールが表示されます。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> を定義する方法のヘッダー セクション、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールが表示されます。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して制御するテンプレートを作成する方法のヘッダー セクション、 <xref:System.Web.UI.WebControls.Repeater> コントロールが表示されます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A> のヘッダーの外観を制御する、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 注意して、 <xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A> テーブルの開始タグが含まれています \(`<table>`\)。  
  
 [!code-csharp[Classic Repeater.FooterTemplate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.FooterTemplate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="protected bool Initialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Initialized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.Initialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが初期化されたかどうかを示す値を返します。</summary>
        <value>
          <see langword="true" />, 、コントロールが初期化されている場合、それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater.Initialized%2A> プロパティは、ヘルパー プロパティかどうかをデータ バインド必要なときに使用される、 <xref:System.Web.UI.WebControls.Repeater.DataMember%2A>, 、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>, 、または <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティを変更します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.RepeaterItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.RepeaterItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.InitializeItem(System.Web.UI.WebControls.RepeaterItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.RepeaterItem" />
      </Parameters>
      <Docs>
        <param name="item">インライン テンプレートから初期化するコントロール。</param>
        <summary>指定された繰り返し設定 <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> 子コントロールのサブ階層にします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.IsBoundUsingDataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティを設定します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティが空の文字列以外の値に設定されている \(""\) です。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater.IsBoundUsingDataSourceID%2A> プロパティは、コントロールがなど、ASP.NET 2.0 データ ソース コントロールにバインドされるかどうかを決定するヘルパー プロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSource> または <xref:System.Web.UI.WebControls.SqlDataSource> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBindingAutomatic">
      <MemberSignature Language="C#" Value="protected bool IsDataBindingAutomatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataBindingAutomatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.IsDataBindingAutomatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインドが自動かどうか示す値を取得します。</summary>
        <value>データ バインディングが自動の場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ バインディングは、自動場合、 <xref:System.Web.UI.WebControls.Repeater> コントロールがデータ ソース コントロールにバインドまたはかどうかモデル バインダーを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.RepeaterCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.RepeaterCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは発生時のボタン、 <xref:System.Web.UI.WebControls.Repeater> コントロールがクリックされました。  
  
 このイベントが発生するクライアントからラウンドト リップが発生します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次の例には、 <xref:System.Web.UI.WebControls.Repeater.ItemCommand> のイベント、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 ボタンについての情報が表示されるときに、 <xref:System.Web.UI.WebControls.Button> 内で制御、 <xref:System.Web.UI.WebControls.Repeater> コントロールがクリックされました。  
  
 [!code-csharp[Classic Repeater.ItemCommand Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.ItemCommand Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.RepeaterItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.RepeaterItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目が作成されるときに発生、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 項目が作成されると、このイベントが生成、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次の例には、 <xref:System.Web.UI.WebControls.Repeater.ItemCreated> のイベント、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 項目の種類を示すテキストの新しい行が表示されますされるたびに、 <xref:System.Web.UI.WebControls.Repeater> 項目を作成します。  
  
 [!code-csharp[Classic Repeater.ItemCreated Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.ItemCreated Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.RepeaterItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.RepeaterItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.ItemDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のアイテムの後に発生、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールはデータ バインドですが、前に、ページにレンダリングします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントは内の項目、 <xref:System.Web.UI.WebControls.Repeater> コントロールがデータ バインドされています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 指定して、コードのハンドラーを次の例には、 <xref:System.Web.UI.WebControls.Repeater.ItemDataBound> のイベント、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 内の項目にバインドした後に、データが変更された、 <xref:System.Web.UI.WebControls.Repeater> 制御しますが、ページにレンダリングする前にします。  
  
 [!code-csharp[Classic Repeater.ItemDataBound Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.ItemDataBound Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeaterItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RepeaterItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> 内のオブジェクト、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> オブジェクトのコレクション。 既定値は空の <see cref="T:System.Web.UI.WebControls.RepeaterItemCollection" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater> コントロールを作成、 <xref:System.Web.UI.WebControls.Repeater.Items%2A> コレクションのすべてのオブジェクトを列挙することによって、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A>です。<xref:System.Web.UI.WebControls.Repeater.Items%2A> コレクションを使用して、 <xref:System.Web.UI.WebControls.Repeater> コントロール内の各項目を表示するコントロール。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Repeater.Items%2A> で選択された項目のインデックスを特定するプロパティ、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。  
  
 [!code-csharp[Classic Repeater.Items Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.Items Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.Items Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.ITemplate" /> を定義する方法 \[項目を <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールが表示されます。</summary>
        <value>A <see cref="T:System.Web.UI.ITemplate" /> を定義する方法 \[項目を <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールが表示されます。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して制御するテンプレートを作成する方法 \[項目を <xref:System.Web.UI.WebControls.Repeater> コントロールが表示されます。  
  
> [!CAUTION]
>  このコントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
   
  
## 例  
 次の例は、単純なを使用する方法を示しています。 <xref:System.Web.UI.WebControls.Repeater> 項目のテーブルを表示するコントロール。 使用して、 <xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A> データ ソースに各項目が表示されます。  
  
 [!code-csharp[Classic Repeater.ItemTemplate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemTemplate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.ItemTemplate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public virtual string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>厳密に型指定データ バインドをモデルの型の名前。</summary>
        <value>モデルの種類の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定して使用する場合、 <xref:System.Web.UI.WebControls.Repeater.SelectMethod%2A> プロパティには、選択メソッドによって返される型はこのプロパティで指定された型でなければなりませんまたは、このプロパティで指定された型にキャストされることができる必要があります。  
  
 自動的にこのプロパティを設定すると、動的データ機能ができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表すオブジェクト。</param>
        <summary>使用して保存された前のページ要求からビューステート情報を復元する、 <see cref="M:System.Web.UI.WebControls.Repeater.SaveViewState" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" /> イベント場合、 <paramref name="EventArgs" /> パラメーターのインスタンスは、 <see cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" />です。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" /> それ以外の場合、生成された <see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 オーバーライドする方法を次のコード例に示します、 <xref:System.Web.UI.WebControls.Repeater.OnDataBinding%2A> いる場合、イベント引数は、カスタム サーバー コントロールのメソッド コマンドの種類、 <xref:System.Web.UI.WebControls.Repeater> 制御呼び出しでは常に、 <xref:System.Web.UI.WebControls.Repeater.OnItemCommand%2A> と、イベントをさかのぼってまたは取得 `false` 、イベントをキャンセルするとします。  
  
 [!code-csharp[CustomRepeaterOnBubbleEvent\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/CS/custom_repeater_onbubbleeventcs.aspx#1)]
 [!code-vb[CustomRepeaterOnBubbleEvent\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/VB/custom_repeater_onbubbleeventvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterOnBubbleEvent\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/CS/custom_repeater_onbubbleevent.cs#2)]
 [!code-vb[CustomRepeaterOnBubbleEvent\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/VB/custom_repeater_onbubbleevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreatingModelDataSource">
      <MemberSignature Language="C#" Value="protected virtual void OnCreatingModelDataSource (System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreatingModelDataSource(class System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CreatingModelDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">アクセスを提供するオブジェクト、 <see cref="T:System.Web.UI.WebControls.ModelDataSource" /> が作成されるオブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.CreatingModelDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnDataBinding(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see langword="DataBinding" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 オーバーライドする次のコード例を取り上げます、 <xref:System.Web.UI.WebControls.Repeater.OnDataBinding%2A> いる場合、イベント引数は、カスタム サーバー コントロールのメソッド コマンドの種類、 <xref:System.Web.UI.WebControls.Repeater> 制御呼び出しでは常に、 <xref:System.Web.UI.WebControls.Repeater.OnItemCommand%2A> と、イベントをさかのぼってまたは取得 `false` 、イベントをキャンセルするとします。  
  
 [!code-csharp[CustomRepeaterOnDataBinding\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/CS/custom_repeater_ondatabindingcs.aspx#1)]
 [!code-vb[CustomRepeaterOnDataBinding\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/VB/custom_repeater_ondatabindingvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterOnDataBinding\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/CS/custom_repeater_ondatabinding.cs#2)]
 [!code-vb[CustomRepeaterOnDataBinding\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/VB/custom_repeater_ondatabinding.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnDataPropertyChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ バインディングが必要かどうかを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater.OnDataPropertyChanged%2A> メソッドは時に呼び出されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.Repeater.DataMember%2A>, 、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>, 、または <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> プロパティを変更します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="M:System.Web.UI.WebControls.Repeater.OnDataPropertyChanged" /> コントロールのデータ バインディング フェーズ中に呼び出されます。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Repeater.RequiresDataBinding" /> プロパティを <see langword="true" /> に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater.OnDataSourceViewChanged%2A> メソッドは、データ バインド プロセスに参加するヘルパー メソッドです。 このメソッドが呼び出されます、 <xref:System.Web.UI.DataSourceView> 関連付けられているデータ ソース コントロールであるオブジェクトをその <xref:System.Web.UI.DataSourceView.DataSourceViewChanged> イベントです。 このイベントにより、 <xref:System.Web.UI.WebControls.Repeater> コントロールのデータを更新されたデータにバインドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.RepeaterCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.RepeaterCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.RepeaterCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、処理する方法、 <xref:System.Web.UI.WebControls.Repeater.ItemCommand> のイベント、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 ボタンについての情報が表示されるたびに、 <xref:System.Web.UI.WebControls.Button> 内で制御、 <xref:System.Web.UI.WebControls.Repeater> コントロールがクリックされました。  
  
 [!code-csharp[Classic Repeater.ItemCommand Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.ItemCommand Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" /> method.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.RepeaterItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.RepeaterItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.RepeaterItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.ItemCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、処理する方法、 <xref:System.Web.UI.WebControls.Repeater.ItemCreated> のイベント、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 項目の種類を示すテキストの新しい行が表示されますされるたびに、 <xref:System.Web.UI.WebControls.Repeater> 項目を作成します。  
  
 [!code-csharp[Classic Repeater.ItemCreated Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.ItemCreated Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" /> method.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Repeater.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.RepeaterItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.RepeaterItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.RepeaterItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.ItemDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、処理する方法、 <xref:System.Web.UI.WebControls.Repeater.ItemDataBound> のイベント、 <xref:System.Web.UI.WebControls.Repeater> コントロールです。 内の項目にバインドした後に、データが変更された、 <xref:System.Web.UI.WebControls.Repeater> 制御しますが、ページにレンダリングする前にします。  
  
 [!code-csharp[Classic Repeater.ItemDataBound Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.ItemDataBound Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" /> method.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Repeater.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnLoad(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.Control.Load" /> イベントおよびその他の初期化を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater.OnLoad%2A> メソッドは、通知、 <xref:System.Web.UI.WebControls.Repeater> コントロールに関連付けられている、データベース クエリの設定など、ページの各 HTTP 要求に共通している処理を実行する必要があります。 ページのライフ サイクルのこの段階では、階層内のサーバー コントロールの作成および初期化さ、ビュー ステートが復元され、フォーム コントロールは、クライアント側のデータを反映します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> オブジェクトには、イベント データが含まれています。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Control.PreRender> サーバー コントロールがページにレンダリングされるは、出力の前に、更新プログラムを実行するイベントを使用します。 このイベント中には、サーバー コントロールのビュー ステートの変更を保存できます。 レンダリング フェーズで行われた変更は保存されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.RequiresDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールは、指定されたデータ ソースにバインドする必要があります。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールがデータ ソースにバインドする必要がある場合は、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Repeater> コントロール、 <xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A> コントロールを呼び出す必要があるかどうかを決定するプロパティ、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> の指定されたデータ ソースにバインドするメソッドです。  
  
 どちらの set アクセサーが呼び出されるたびに、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A>, 、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>, 、または <xref:System.Web.UI.WebControls.Repeater.DataMember%2A> 後データ ソースを変更するプロパティ、 <xref:System.Web.UI.WebControls.Repeater.OnInit%2A> メソッドが既に呼び出されて、ASP.NET の値を設定する、 <xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A> プロパティを `true`します。 値、 <xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A> プロパティに設定されても `true` ときに、 <xref:System.Web.UI.WebControls.Repeater.OnDataSourceViewChanged%2A> メソッドが呼び出されます。  
  
 ASP.NET の値を設定する、 <xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A> プロパティを `false` の直後に、 <xref:System.Web.UI.WebControls.Repeater.DataBind%2A> メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポストされた時間以降に発生した任意のビュー状態の変更を保存します。</summary>
        <returns>コントロールの現在のビュー ステート。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectArguments">
      <MemberSignature Language="C#" Value="protected System.Web.UI.DataSourceSelectArguments SelectArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataSourceSelectArguments SelectArguments" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.SelectArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクトを <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールがデータ ソース コントロールからデータを取得するときに使用します。</summary>
        <value>A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクト データを取得するために使用します。 既定値は、 <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最初の呼び出し、 <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトの呼び出し、 <xref:System.Web.UI.WebControls.Repeater.CreateDataSourceSelectArguments%2A> を作成する方法、 <xref:System.Web.UI.DataSourceSelectArguments.Empty%2A> オブジェクトです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public virtual string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データを読み取るために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、データのバインド方法として使用するモデルのバインディングとします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.ITemplate" /> 項目間の区切り記号を表示する方法を定義するインターフェイスです。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> 項目間の区切り記号を表示する方法を定義します。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A> 項目間の区切り記号を表示する方法を制御するテンプレートを作成するプロパティです。  
  
> [!CAUTION]
>  使用することができます、 <xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A> 悪質なクライアント スクリプトなどを含むユーザー入力を表示するプロパティです。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 ASP.NET には、入力要求の検証機能があり、ユーザー入力の中のブロックのスクリプトと HTML が用意されています。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。 [検証サーバー コントロール構文](http://msdn.microsoft.com/ja-jp/96d2c59e-693c-4079-9b53-b3ff0d9e9133)します。  
  
   
  
## 例  
 次のコード例では、項目間の区切り記号を表示する方法を制御するテンプレートを作成する方法を示します。  
  
 [!code-csharp[Classic Repeater.SeparatorTemplate Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.SeparatorTemplate Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Repeater.SeparatorTemplate Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.SeparatorTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの保存できるように、コントロールにビュー ステートの変更の追跡をにより <see cref="T:System.Web.UI.StateBag" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>