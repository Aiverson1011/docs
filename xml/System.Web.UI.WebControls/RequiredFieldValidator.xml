<Type Name="RequiredFieldValidator" FullName="System.Web.UI.WebControls.RequiredFieldValidator">
  <TypeSignature Language="C#" Value="public class RequiredFieldValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequiredFieldValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:RequiredFieldValidator runat="server" ErrorMessage="RequiredFieldValidator"&gt;&lt;/{0}:RequiredFieldValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>関連する入力コントロールを必須フィールドにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコントロールを使用して、必要なフィールドに入力コントロールを作成します。 入力コントロールからその値が変更されない場合は検証に失敗、 <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A> フォーカスを失うときです。  
  
 複数の検証コントロールは、同じ入力コントロールに関連付けることができます。 たとえば、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> を同時に、コントロールへの入力を確認するために使用できる、 <xref:System.Web.UI.WebControls.RangeValidator> 、入力が指定されたデータの範囲内であることを確認するために使用できます。  
  
> [!NOTE]
>  使用すると、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 内の制御、 <xref:System.Web.UI.UpdatePanel> コントロール、検証コントロールとに関連付けられたコントロールが同じパネル存在するかどうかを確認します。 使用の詳細については、 <xref:System.Web.UI.UpdatePanel> 部分ページ更新用に制御を参照してください [Partial\-Page Rendering Overview](http://msdn.microsoft.com/ja-jp/5c12736d-d9e9-464a-9388-3fe0f9f49e49)します。  
  
 検証コントロールの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.BaseValidator>します。  
  
## ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) と [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> コントロールをユーザーがテキスト ボックスに値を入力するかどうかを確認します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[Classic RequiredFieldValidator Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RequiredFieldValidator Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic RequiredFieldValidator Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RequiredFieldValidator Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic RequiredFieldValidator Example\#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic RequiredFieldValidator Example/Common/source.xml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="P:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequiredFieldValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RequiredFieldValidator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.RequiredFieldValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> クラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
        <altmember cref="P:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RequiredFieldValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>HTML 属性およびスタイルを指定したコントロールの描画に使用する必要がある追加 <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.RequiredFieldValidator.AddAttributesToRender%2A> カスタム サーバー コントロールのメソッドできるように、 <xref:System.Web.UI.WebControls.RequiredFieldValidator> エラー メッセージが常に太字で表示されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。 [スクリプトによる攻略概要](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)します。  
  
 [!code-csharp[CustomRequiredFieldValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/CS/custom_requiredfieldvalidator_addattributestorendercs.aspx#1)]
 [!code-vb[CustomRequiredFieldValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/VB/custom_requiredfieldvalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomRequiredFieldValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/CS/custom_requiredfieldvalidator_addattributestorender.cs#2)]
[!code-vb[CustomRequiredFieldValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorAddAttributesToRender/VB/custom_requiredfieldvalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.RequiredFieldValidator.EvaluateIsValid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ASP.NET が Web フォームを処理するときに検証段階で呼び出されます。</summary>
        <returns>入力コントロールの値が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.RequiredFieldValidator.EvaluateIsValid%2A> method in a custom server control so that it always returns **languageKeyword tag is not supported!!!!**  
 if the value of the <xref:System.Web.UI.WebControls.RequiredFieldValidator> is null or empty, and always returns **languageKeyword tag is not supported!!!!**  
 otherwise.  
  
 [!code-csharp[CustomRequiredFieldValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/CS/custom_requiredfieldvalidator_evaluateisvalidcs.aspx#1)]
 [!code-vb[CustomRequiredFieldValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/VB/custom_requiredfieldvalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomRequiredFieldValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/CS/custom_requiredfieldvalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomRequiredFieldValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRequiredFieldValidatorEvaluateIsValid/VB/custom_requiredfieldvalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialValue">
      <MemberSignature Language="C#" Value="public string InitialValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または関連付けられた入力コントロールの初期値を設定します。</summary>
        <value>関連付けられた入力コントロールの初期値を指定する文字列。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、入力コントロールの初期値を指定します。  
  
 関連付けられた入力コントロールの値には、これと一致する場合にのみ検証が失敗した <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A> フォーカスを失うことにします。  
  
> [!NOTE]
>  両方の文字列、 <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A> プロパティおよび入力コントロールが検証を実行する前に、文字列の前後に余分なスペースを削除するのに切り捨てられます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、次を参照してください。 <xref:System.Web.UI.ThemeableAttribute> と [ASP.NET のテーマとスキン](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A> プロパティをユーザーがテキスト ボックスに値を入力することを確認します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。 [スクリプトによる攻略概要](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)します。  
  
 [!code-csharp[Classic RequiredFieldValidator.InitialValue Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic RequiredFieldValidator.InitialValue Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/VB/sourcevb.aspx#1)]  
  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.RequiredFieldValidator.InitialValue%2A> プロパティをユーザーがリスト ボックスから項目を選択することを確認します。  
  
 [!code-csharp[Classic RequiredFieldValidator.InitialValue Example\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/CS/source2cs.aspx#2)]
 [!code-vb[Classic RequiredFieldValidator.InitialValue Example\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic RequiredFieldValidator.InitialValue Example/VB/source2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>