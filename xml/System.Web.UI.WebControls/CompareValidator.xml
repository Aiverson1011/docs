<Type Name="CompareValidator" FullName="System.Web.UI.WebControls.CompareValidator">
  <TypeSignature Language="C#" Value="public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompareValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat="server" ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーが入力コントロール内に入力した値を、別の入力コントロールに入力された値か、定数値と比較します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.CompareValidator> control to compare the value entered by the user in an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, with the value entered in another input control or a constant value. The <xref:System.Web.UI.WebControls.CompareValidator> control passes validation if the value of the input control matches the criteria specified by the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>, <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>, and\/or <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> properties.  
  
 You can also use the <xref:System.Web.UI.WebControls.CompareValidator> control to indicate whether the value entered in an input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property.  
  
 Specify the input control to validate by setting the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property. If you want to compare a specific input control with another input control, set the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property to specify the control to compare with.  
  
> [!NOTE]
>  If the value entered in the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, but the value entered in the input control specified by the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property can be converted, the input control being validated is considered valid. Therefore, you should also place a <xref:System.Web.UI.WebControls.CompareValidator> or <xref:System.Web.UI.WebControls.RangeValidator> control on the input control specified by the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property.  
  
 Instead of comparing the value of an input control with another input control, you can compare the value of an input control to a constant value. Specify the constant value to compare with by setting the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property.  
  
> [!NOTE]
>  If the value specified by the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property cannot be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property, an exception is thrown. Be sure to check the data type of a value before programmatically assigning it to the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property.  
  
> [!NOTE]
>  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence.  
  
 Use the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to specify the type of comparison to perform, such as greater than, equal to, and so on. If you set the <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> property to **languageKeyword tag is not supported!!!!**  
, the <xref:System.Web.UI.WebControls.CompareValidator> control ignores the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> properties and simply indicates whether the value entered in the input control can be converted to the data type specified by the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property.  
  
 The <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> property is used to specify the data type of both comparison values. Both values are automatically converted to this data type before the comparison operation is performed.  
  
> [!IMPORTANT]
>  When the <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> property is set to <xref:System.Web.UI.WebControls.ValidationDataType.Date> and the current calendar type is non\-Gregorian, the validator performs server\-side validation only. The validator client script supports only Gregorian calendars.  
  
 The following table lists the various data types that can be compared.  
  
|Data type|Description|  
|---------------|-----------------|  
|`String`|A string data type.|  
|`Integer`|A 32\-bit signed integer data type.|  
|`Double`|A double\-precision floating\-point number data type.|  
|`Date`|A date data type.|  
|`Currency`|A decimal data type. It cannot contain currency symbols.|  
  
> [!NOTE]
>  If the input control is empty, no validation functions are called and validation succeeds. Use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to require the user to enter data in the input control.  
  
> [!NOTE]
>  When you use the <xref:System.Web.UI.WebControls.CompareValidator> control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel. For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial\-page updates, see [Partial\-Page Rendering Overview](http://msdn.microsoft.com/ja-jp/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 For more information about validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## Accessibility  
 For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio 2010 and ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## 例  
 The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.CompareValidator> control to compare the values in two <xref:System.Web.UI.WebControls.TextBox> controls.  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Classic CompareValidator Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CompareValidator Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.TextBox" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.Operator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.CompareValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンストラクターは、フィールドを既定値に初期化します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに表示する出力ストリームを格納する <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>このコントロールの属性を、クライアントに表示する出力ストリームに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を上書きする方法を示しています、 <xref:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender%2A> カスタム サーバー コントロールできるように、 <xref:System.Web.UI.WebControls.CompareValidator> エラー メッセージが常に太字で表示されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。 [スクリプトによる攻略概要](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)します。  
  
 [!code-csharp[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorendercs.aspx#1)]
 [!code-vb[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorender.cs#2)]
[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールのプロパティで値が有効かどうかを確認します。</summary>
        <returns>コントロールのプロパティが有効な場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid%2A> カスタム サーバー内のメソッドは制御と同じくらい visible プロパティの値を常に返されるように、 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> のプロパティ、 <xref:System.Web.UI.WebControls.CompareValidator> コントロールがページに表示し、検証プロパティが含まれています。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。 [スクリプトによる攻略概要](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)します。  
  
 [!code-csharp[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-vb[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalid.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ターゲット プロパティの値を希望の <see cref="T:System.Type" /> に変換することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlToCompare">
      <MemberSignature Language="C#" Value="public string ControlToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証対象の入力コントロールと比較する入力コントロールを取得または設定します。</summary>
        <value>検証対象の入力コントロールと比較する入力コントロール。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property to specify an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control, to compare with the input control being validated. If the input control specified by this property is not a control on the page, an exception is thrown.  
  
> [!NOTE]
>  Do not set both the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> and the <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> property at the same time. You can either compare the value of an input control to another input control, or to a constant value. If both properties are set, the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property takes precedence.  
  
 For more information, see <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=fullName>.  
  
> [!IMPORTANT]
>  If the control to compare is hidden or is inside a container \(such as a <xref:System.Web.UI.WebControls.Panel> control\) that is not visible, the validator performs server\-side validation only. The validator client script supports only visible controls.  
  
 This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> property to specify the control to compare with the control being validated.  
  
> [!IMPORTANT]
>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[Classic CompareValidator Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CompareValidator Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
        <altmember cref="T:System.Web.UI.WebControls.TextBox" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラス内でオーバーライドされた場合、このメソッドには、入力コントロールの値が有効かどうかを判断するコードが含まれます。</summary>
        <returns>入力コントロールの値が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を上書きする方法を示しています、 <xref:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid%2A> カスタム サーバー内のメソッドを制御できるため、常に返します `true` の 2 つの指定したコントロールの値が同じかどうか、 `false` それ以外の場合。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。 [スクリプトによる攻略概要](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)します。  
  
 [!code-csharp[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalidcs.aspx#1)]
 [!code-vb[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationCompareOperator Operator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationCompareOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行する比較演算を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 値のいずれか。 既定値は <see langword="Equal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> プロパティを実行する比較演算を指定します。 次の表は、可能な比較操作を一覧表示します。  
  
|操作|説明|  
|--------|--------|  
|`Equal`|検証する入力コントロール、別のコントロールの値または定数値間の等値比較します。|  
|`NotEqual`|検証する入力コントロールと、他のコントロールの値または定数値の間の非等値比較します。|  
|`GreaterThan`|検証する入力コントロールと、他のコントロールの値または定数値の間を超えるに関する比較します。|  
|`GreaterThanEqual`|以上を検証する入力コントロール、別のコントロールの値または定数値の間で比較します。|  
|`LessThan`|検証する入力コントロール、別のコントロールの値または定数値の間でより小さいを比較します。|  
|`LessThanEqual`|以下を検証する入力コントロール、別のコントロールの値または定数値の間で比較します。|  
|`DataTypeCheck`|検証する入力コントロールに入力された値と指定されたデータ型のデータ型の比較、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> プロパティです。 値は、指定されたデータ型に変換できない場合、検証が失敗します。 **Note:**  <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> と <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> この演算子を使用すると、プロパティは無視されます。|  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、次を参照してください。 <xref:System.Web.UI.ThemeableAttribute> と [ASP.NET のテーマとスキン](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 比較操作を指定するプロパティです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。 [スクリプトによる攻略概要](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)します。  
  
 [!code-csharp[Classic CompareValidator Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CompareValidator Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された比較演算子は、<see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 値のいずれでもありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
      </Docs>
    </Member>
    <Member MemberName="ValueToCompare">
      <MemberSignature Language="C#" Value="public string ValueToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証対象の入力コントロールにユーザーが入力した値と比較する定数値を取得または設定します。</summary>
        <value>検証対象の入力コントロールにユーザーが入力した値と比較する定数値。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> プロパティを検証する入力コントロールにユーザーが入力した値と比較する定数値を指定します。 このプロパティで指定された定数値で指定されたデータ型に変換が失敗した場合、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=fullName> プロパティには、例外がスローされます。  
  
> [!NOTE]
>  両方を設定しないで、 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> と <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 同時プロパティです。 か、別の入力コントロール、または定数値の入力コントロールの値を比較できます。 両方のプロパティが設定されている場合、 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> プロパティが優先されます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、次を参照してください。 <xref:System.Web.UI.ThemeableAttribute> と [ASP.NET のテーマとスキン](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> でユーザーが入力した値と比較するプロパティ、 <xref:System.Web.UI.WebControls.TextBox> 定数値を持つコントロールです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、次を参照してください。 [スクリプトによる攻略概要](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)します。  
  
 [!code-csharp[Classic CompareValidator.ValueToCompare Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CompareValidator.ValueToCompare Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>