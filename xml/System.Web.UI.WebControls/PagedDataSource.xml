<Type Name="PagedDataSource" FullName="System.Web.UI.WebControls.PagedDataSource">
  <TypeSignature Language="C#" Value="public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PagedDataSource extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.ComponentModel.ITypedList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.PagedDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ITypedList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>データ バインド コントロールのページングに関連するプロパティをカプセル化 \(よう <see cref="T:System.Web.UI.WebControls.DataGrid" />, 、<see cref="T:System.Web.UI.WebControls.GridView" />, 、<see cref="T:System.Web.UI.WebControls.DetailsView" />, 、および <see cref="T:System.Web.UI.WebControls.FormView" />\) ページングを実行することができます。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.PagedDataSource> クラスなど、データ ソース コントロールを許可するプロパティをカプセル化、 <xref:System.Web.UI.WebControls.DataGrid>, 、<xref:System.Web.UI.WebControls.GridView>, 、<xref:System.Web.UI.WebControls.DetailsView>, 、および <xref:System.Web.UI.WebControls.FormView>, 、ページングを実行します。 カスタム データ バインド コントロールにページング サポートを提供するときに、このクラスはコントロールの開発者によって使用されます。  
  
 このクラスでは、使用可能な最適なメソッドを使用して、現在のページに属するデータを列挙します。 基になるデータ ソースは、インデックス付きのアクセスをサポートしている場合 \(よう <xref:System.Array?displayProperty=fullName> と <xref:System.Collections.IList?displayProperty=fullName>\)、このクラスは、これを使用します。 によって作成された列挙子を使用して、それ以外の場合、 <xref:System.Collections.IEnumerable.GetEnumerator%2A> メソッドです。  
  
 インスタンスの初期プロパティ値の一覧については <xref:System.Web.UI.WebControls.PagedDataSource>, を参照してください、 <xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> コンス トラクターです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Collections.ICollection" />
    <altmember cref="T:System.Array" />
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.IEnumerable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PagedDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.PagedDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.PagedDataSource> クラスです。  
  
 次の表は、のインスタンスの初期プロパティ値を示しています。 <xref:System.Web.UI.WebControls.PagedDataSource>します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>|`false`|  
|<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|  
|<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|10|  
|<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowCustomPaging">
      <MemberSignature Language="C#" Value="public bool AllowCustomPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowCustomPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールにカスタム ページングが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> カスタム ページングが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> カスタム ページングが有効になっているかどうかを示すプロパティです。 カスタム ページングは、省略可能な型によって明示的に提供されるページングの <xref:System.Web.UI.WebControls.DataGrid> コントロールです。 ASP.NET version 2.0 のデータ バインド コントロール \(よう <xref:System.Web.UI.WebControls.GridView>, 、<xref:System.Web.UI.WebControls.DetailsView>, 、および <xref:System.Web.UI.WebControls.FormView>\) サーバー側のページングを使用して、カスタム ページングをサポートしていません。 カスタム ページングとサーバー側のページングは、相互に排他的です。 設定した場合 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> に `true`, ことを確認、 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> に設定されている `false`します。  
  
 カスタム ページングの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、データ バインド コントロールでページングが有効かどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ページングが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> プロパティをデータ バインド コントロールにページングを有効になっているがあるかどうかを指定します。 ASP.NET version 2.0 のデータ バインド コントロール \(よう <xref:System.Web.UI.WebControls.GridView>, 、<xref:System.Web.UI.WebControls.DetailsView>, 、および <xref:System.Web.UI.WebControls.FormView>\) もサーバー側のページングを使用して、自動ページング機能を提供します。 サーバー側のページングの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>します。 使用する場合、 <xref:System.Web.UI.WebControls.DataGrid> コントロールを独自のカスタム ページング ロジックも提供できます。 カスタム ページングの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName> と <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName>です。  
  
 データ バインド コントロールのページングのサポートの詳細については、次を参照してください。、 `AllowPaging` データ バインド コントロールのプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.AllowPaging" />
      </Docs>
    </Member>
    <Member MemberName="AllowServerPaging">
      <MemberSignature Language="C#" Value="public bool AllowServerPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowServerPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサーバー側のページングが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> サーバー側のページングが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET version 2.0 のデータ バインド コントロール \(よう <xref:System.Web.UI.WebControls.GridView>, 、<xref:System.Web.UI.WebControls.DetailsView>, 、および <xref:System.Web.UI.WebControls.FormView>\) を通じてサーバー側のページングの自動ページング機能を提供します。 ASP.NET 2.0 のデータ バインド コントロールを使用する場合は、このプロパティを設定 `true`です。  
  
> [!NOTE]
>  サーバー側のページングとカスタム ページングは、相互に排他的です。 設定した場合 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> に `true`, ことを確認、 <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> に設定されている `false`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">0 から始まる <see cref="T:System.Array" /> データ ソースからコピーされた項目を受信します。</param>
        <param name="index">指定した最初の位置 <see cref="T:System.Array" /> 内容のコピーを受信します。</param>
        <summary>指定したデータ ソースからすべての項目をコピー <see cref="T:System.Array" />, を開始で指定されたインデックス位置として、 <see cref="T:System.Array" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、指定されたデータ ソースの内容をコピー <xref:System.Array?displayProperty=fullName>, 、指定したインデックスから始まります。<xref:System.Array?displayProperty=fullName> 多くの場合に、データ ソース内の項目を反復処理するために使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースから使用する項目の数を取得します。</summary>
        <value>データ ソースから使用する項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.Count%2A> プロパティをデータ ソースから使用する項目の数を決定します。 返される値は、ページングが有効になっているかどうかと、カスタム ページングを使用するかどうかによって異なります。  
  
-   ページングが無効になっている場合 \(設定して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティを `false`\) の値、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティが返されます。  
  
-   ページングが有効になっている場合 \(設定して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティを `true`\) カスタム ページングが有効になっていると \(設定して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> プロパティに設定 `true`\) の値、 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティが返されます。  
  
-   ページングが有効になっている場合 \(設定して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティを `true`\) および <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> にプロパティが設定されている `false`, の値、 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティが返されます。  
  
-   ページングが有効になっている場合 \(設定して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> プロパティを `true`\)、カスタム ページングが無効になっています \(設定して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> プロパティ `false`\)、および <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> プロパティに設定されて `true`, の値、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティは、の値から減算されます、 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> プロパティに返されます。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティを含む `null`, 、0 が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPageIndex">
      <MemberSignature Language="C#" Value="public int CurrentPageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のページのインデックスを設定します。</summary>
        <value>現在のページのインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A> プロパティを指定するか、現在のページのインデックスを確認します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースを設定します。</summary>
        <value>A <see cref="T:System.Collections.IEnumerable" /> データ ソースを表すオブジェクトを実装します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティを指定またはページングされるデータ ソースを確認します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceCount">
      <MemberSignature Language="C#" Value="public int DataSourceCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSourceCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内の項目の数を取得します。</summary>
        <value>データ ソース内の項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティをデータ ソース内の項目の数を決定します。 カスタム ページングまたはサーバー側のページングを使用する場合の値、 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> プロパティが返されます。 それ以外の場合、データ ソース内の項目の合計数が返されます。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティを含む `null`, 、0 が返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">データ ソースが、 <see cref="T:System.Collections.ICollection" /> オブジェクトを実装します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
      </Docs>
    </Member>
    <Member MemberName="FirstIndexInPage">
      <MemberSignature Language="C#" Value="public int FirstIndexInPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FirstIndexInPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最初のページに表示されるレコードのインデックスを取得します。</summary>
        <value>ページに表示される最初のレコードのインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A> プロパティを現在のページの最初の項目のインデックスを確認します。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> にプロパティが設定されている `false`, 、または <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> または <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> プロパティに設定されて `true`, 、または <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティが含まれています `null`, 、0 が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetEnumerator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.Collections.IEnumerator" /> データ ソース内のすべての項目を含むオブジェクトを実装します。</summary>
        <returns>A <see cref="T:System.Collections.IEnumerator" /> データ ソース内のすべての項目を含むオブジェクトを実装します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、作成、 <xref:System.Collections.IEnumerator?displayProperty=fullName> データ ソース内の各項目を取得する反復することができます。 列挙子の現在位置にあるアイテムにアクセスするには、 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> プロパティです。 使用して、 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> コレクション内の次の項目に移動します。 列挙子を初期位置に移動するには、使用、 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> メソッドです。  
  
> [!NOTE]
>  すると最初、列挙子を取得またはを使用して、 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> 、列挙子をコレクション内の最初の項目に移動するメソッドを呼び出す必要があります、 <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> メソッドです。 によって表される項目のそれ以外の場合、 <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> プロパティが定義されています。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="GetItemProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetItemProperties(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">配列 <see cref="T:System.ComponentModel.PropertyDescriptor" /> リスト名を含むオブジェクトが返されます。 これは、 <see langword="null" />です。</param>
        <summary>返します。、 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> データ バインドに使用される各項目のプロパティを表します。</summary>
        <returns>
          <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> データ バインドに使用される各項目のプロパティを表します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> を作成する方法、 <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> データ バインドに使用される各項目のプロパティを表します。 場合、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティは `null` か、 <xref:System.ComponentModel.ITypedList?displayProperty=fullName> オブジェクトを実装する `null` が返されます。 詳細については、 <xref:System.Web.UI.WebControls.PagedDataSource.GetItemProperties%2A> メソッドを参照してください <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetItemProperties(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="GetListName">
      <MemberSignature Language="C#" Value="public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetListName(class System.ComponentModel.PropertyDescriptor[] listAccessors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listAccessors" Type="System.ComponentModel.PropertyDescriptor[]" />
      </Parameters>
      <Docs>
        <param name="listAccessors">配列 <see cref="T:System.ComponentModel.PropertyDescriptor" /> リスト名を含むオブジェクトが返されます。 これは、 <see langword="null" />です。</param>
        <summary>リストの名前を返します。 このメソッドは、このクラスには適用されません。</summary>
        <returns>
          <see cref="F:System.String.Empty" /> すべての場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの継承元 <xref:System.ComponentModel.ITypedList?displayProperty=fullName> し、このクラスには適用できません。 返す実装されたら <xref:System.String.Empty?displayProperty=fullName> すべてのケースのです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypedList" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="M:System.ComponentModel.ITypedList.GetListName(System.ComponentModel.PropertyDescriptor[])" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsCustomPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム ページングが有効になっているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> カスタム ページングが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A> プロパティをカスタム ページングが有効であるかどうかを確認します。  
  
> [!NOTE]
>  両方の <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> と <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A> プロパティである必要があります `true` を返すには、このプロパティの `true`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstPage">
      <MemberSignature Language="C#" Value="public bool IsFirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のページが最初のページかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 現在のページが最初のページの場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsFirstPage%2A> プロパティを現在のページが最初のページであるかどうかを確認します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      </Docs>
    </Member>
    <Member MemberName="IsLastPage">
      <MemberSignature Language="C#" Value="public bool IsLastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLastPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsLastPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のページが最後のページかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 現在のページが最後のページの場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A> プロパティを現在のページが最後のページであるかどうかを確認します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.IsFirstPage" />
      </Docs>
    </Member>
    <Member MemberName="IsPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページングが有効になっているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ページングが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> ページングが有効になっているかどうかを決定するプロパティです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> プロパティである必要があります `true` と <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティを返すには、このプロパティの 0 に設定することはできません `true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースが読み取り専用かどうかを示す値を取得します。</summary>
        <value>
          <see langword="false" /> すべての場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは常に返す実装 `false`, 、常に、データ ソースを変更できることを示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServerPagingEnabled">
      <MemberSignature Language="C#" Value="public bool IsServerPagingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServerPagingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー側のページングのサポートが有効になっているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ページングが有効になっておりを使用して、サーバー側のページングが示される場合、 <see cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" /> プロパティ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サーバー側のページングが有効になっているときに、 <xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A> と <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A> プロパティに設定されて `true`, 、データ ソースによって取得されるデータの量は、単一のページに表示できません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\(スレッド セーフな\) データ ソースへのアクセスが同期されているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="false" /> すべての場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティから派生した、 <xref:System.Collections.ICollection?displayProperty=fullName> クラスし、常にオーバーライド `false` をこのクラスはスレッド セーフではありません。  
  
 詳細については、 <xref:System.Web.UI.WebControls.PagedDataSource.IsSynchronized%2A> プロパティを参照してください、 <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> のプロパティ、 <xref:System.Collections.ICollection?displayProperty=fullName> インターフェイスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のすべての項目を表示するために必要なページの合計数を取得します。</summary>
        <value>データ ソース内のすべての項目を表示するために必要なページ数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.PageCount%2A> プロパティをデータ ソース内のすべての項目を表示するために必要なページの数を決定します。  
  
> [!NOTE]
>  場合、 <xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A> プロパティは、 `null`, 、0 が返されます。 場合、 <xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A> にプロパティが設定されている `false` または <xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A> プロパティが 0 を以下に、1 が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または 1 つのページに表示する項目の数を設定します。</summary>
        <value>1 つのページに表示する項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A> プロパティを指定するか、1 つのページに表示する項目の数を決定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.Count" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.DataSourceCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value>コレクションへのアクセスを同期するために使用できるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装で返されるオブジェクトは、 <xref:System.Web.UI.WebControls.PagedDataSource> オブジェクト自体です。  
  
 詳細については、 <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A> プロパティを参照してください、 <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> のプロパティ、 <xref:System.Collections.ICollection?displayProperty=fullName> インターフェイスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="VirtualCount">
      <MemberSignature Language="C#" Value="public int VirtualCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VirtualCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.PagedDataSource.VirtualCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタム ページングを使用する場合に、データ ソースの仮想項目数を設定します。</summary>
        <value>仮想カスタム ページングを使用する場合は、データ ソース内の項目数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> プロパティ カスタム ページングまたはサーバー側のページングを使用して、データ ソース内のアイテムの仮想の数を決定します。 詳細については、 <xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> プロパティを参照してください <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.VirtualItemCount" />
      </Docs>
    </Member>
  </Members>
</Type>