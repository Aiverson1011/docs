<Type Name="ObjectDataSourceObjectEventHandler" FullName="System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler">
  <TypeSignature Language="C#" Value="public delegate void ObjectDataSourceObjectEventHandler(object sender, ObjectDataSourceEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ObjectDataSourceObjectEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベントのソース。</param>
    <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />。</param>
    <summary>処理するメソッドを表す、 <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" /> と <see cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" /> のイベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler> デリゲートを作成する場合は、イベントを処理するメソッドを指定します。 イベントをイベント ハンドラーに関連付けるには、デリゲートのインスタンスをイベントに追加します。 デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。 イベント ハンドラー デリゲートの詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> コントロールを取得し、情報を表示します。 この例では、多くの現実のシナリオと同様に、ことも不可能であるか、またはビジネス オブジェクトの既定のインスタンスを使用する適切な <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。 この例では、 <xref:System.Web.UI.WebControls.ObjectDataSource> は例外をスローするために、既定のコンス トラクターを正常に呼び出すことはできません。 場合によっては、既定のコンス トラクターは、保護ともあれば、目的の状態にビジネス オブジェクトを初期化して可能性がありますできません。 理由はともかく、ビジネスをインスタンス化できます自分でオブジェクトし、に、インスタンスを設定、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> ハンドラーに渡されるオブジェクト。 これは、ビジネス オブジェクトをインスタンス化する、 <xref:System.Web.UI.WebControls.ObjectDataSource> 自体の作業の実行に使用します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_15\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/objds15cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_15\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/objds15vb.aspx#1)]  
  
 次のコード例では、前の例で使用される基本的なビジネス オブジェクトの例を示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_15\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/CS/northwindemployee15.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_15\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_15/VB/northwindemployee15.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
  </Docs>
</Type>