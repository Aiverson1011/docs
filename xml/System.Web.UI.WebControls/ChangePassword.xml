<Type Name="ChangePassword" FullName="System.Web.UI.WebControls.ChangePassword">
  <TypeSignature Language="C#" Value="public class ChangePassword : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChangePassword extends System.Web.UI.WebControls.CompositeControl implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ChangePassword" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ChangedPassword")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ChangePasswordDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web サイトのパスワードを変更するためのユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 In this topic:  
  
-   [Introduction](#Introduction)  
  
-   [Sending E\-mail Messages](#sending_email_messages)  
  
-   [Views](#views)  
  
-   [Styles and Templates](#styles_and_templates)  
  
-   [Validation Groupings](#validation_groupings)  
  
-   [Access Keys and Tab Indexes](#access_keys_and_tab_indexes)  
  
-   [Accessibility](#accessibility)  
  
-   [Accessing Controls During Page\_Load and Page\_Init](#accessing_controls_during_page_load_and_page_init)  
  
-   [Applying CSS Styles](#applying_styles)  
  
-   [Declarative Syntax\#](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## Introduction  
 Use the <xref:System.Web.UI.WebControls.ChangePassword> control on a page to enable your Web site users to change the passwords they use to log on to your Web site.  
  
> [!NOTE]
>  If you are not familiar with the set of login controls available in ASP.NET, read [ASP.NET Login Controls Overview](http://msdn.microsoft.com/ja-jp/ac032230-6469-4b03-b68d-03ef2643a24d) before continuing. For a list of other topics related to login controls and membership, see [Managing Users By Using Membership](http://msdn.microsoft.com/ja-jp/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  Transmitting passwords over HTTP is a potential security threat. HTTP transmissions can be viewed or compromised by malicious users. To improve security when using login controls, you should use HTTPS protocol with secure sockets layer \(SSL\) encryption to ensure that the user's password cannot be read during postback. For more information, see [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
 The <xref:System.Web.UI.WebControls.ChangePassword> control uses the membership provider defined in the <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> property to change the password stored in the membership provider data store for the Web site. If you do not assign a membership provider, the <xref:System.Web.UI.WebControls.ChangePassword> control uses the default membership provider defined in the  section of the Web.config file. The <xref:System.Web.UI.WebControls.ChangePassword> control enables users to perform the following actions:  
  
-   Change their password if they are logged on.  
  
-   Change their password if they are not logged on, as long as the page that contains the <xref:System.Web.UI.WebControls.ChangePassword> control allows anonymous access and the <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> property is **languageKeyword tag is not supported!!!!**  
    .  
  
-   Change the password for a user account, even if they are logged on as a different user. This requires the <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> property to be **languageKeyword tag is not supported!!!!**  
    .  
  
 Setting the <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> property to **languageKeyword tag is not supported!!!!**  
 displays the User Name text box, which allows the user to type in a user name. If the user is logged on, the <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> control is populated with the name of the logged\-on user. After the password for the given user name is changed, the user is logged on to the account associated with the changed password, even if the user was not logged on to that account previously.  
  
> [!IMPORTANT]
>  Accepting user input is a potential security threat. Malicious users can send data that is intended to expose vulnerabilities or run programs that try generated passwords. To improve security when working with user input, you should use the validation features of your control and secure any data providers that are configured for your control. For more information, see [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c), [Basic Security Practices for Web Applications](http://msdn.microsoft.com/ja-jp/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad), and [Securing Membership](http://msdn.microsoft.com/ja-jp/2dab2012-c278-426a-bb0d-93b260c428a7).  
  
<a name="sending_email_messages"></a>   
## Sending E\-mail Messages  
 The <xref:System.Web.UI.WebControls.ChangePassword> control can be configured to use e\-mail services to send the new password to the user. To send e\-mail messages to users from any of ASP.NET Web server controls, you must configure an e\-mail server in the Web.config file for your application. For more information, see [NIB: How to: Install and Configure SMTP Virtual Servers in IIS 6.0](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8).  
  
 E\-mail messages are configured using the <xref:System.Web.UI.WebControls.MailDefinition> class. You must set the <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> property to instruct ASP.NET to send e\-mail.  
  
> [!IMPORTANT]
>  Sending user account names or passwords in e\-mail is a potential security threat. E\-mail messages are typically sent in plain text and can be read by special network "sniffing" applications. To improve security, use the mitigations that are described in [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c).  
  
> [!NOTE]
>  It is not possible to guarantee that a user will receive or view an e\-mail message. To verify that a user has received a message, provide a confirmation link in the e\-mail message that lets the user confirm that the notification was received.  
  
<a name="views"></a>   
## Views  
 The <xref:System.Web.UI.WebControls.ChangePassword> control has two states, or views:  
  
-   Change Password view   Requests the current password, and requires the user to type the new password twice for confirmation. If you allow users who are not logged on to change their passwords, set the <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> property to **languageKeyword tag is not supported!!!!**  
     to display the <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> control in Change Password view. The <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> control allows the user to provide their registered user name. If there is an error when changing the password, an error message is displayed in the Change Password view, allowing the user to try again.  
  
-   Success view   Provides confirmation that the password has been changed.  
  
    > [!IMPORTANT]
    >  The functionality for changing passwords and for continue and cancel is attached to any button that has the correct command name, regardless of which view the button is placed on. For example, a button with the value `commandname=changepassword` in the Success view will attempt to change the password and result in an exception.  
  
<a name="styles_and_templates"></a>   
## Styles and Templates  
 You can use an extensive set of style properties to customize the appearance of the <xref:System.Web.UI.WebControls.ChangePassword> control. Alternatively, you can apply custom templates to the two views if you need complete control over the appearance of the <xref:System.Web.UI.WebControls.ChangePassword> control. If you define a template for a view, the <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> properties are applied. For a list of the controls that you must set in the view templates, see the <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A> and <xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A> properties. The <xref:System.Web.UI.WebControls.ChangePassword> control examines the content in the template and throws an exception if a required control is not found, is not named correctly, or is of the wrong type. For example, if you use the content in the template and set the <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> property to **languageKeyword tag is not supported!!!!**  
, the <xref:System.Web.UI.WebControls.ChangePassword> will throw an exception if a <xref:System.Web.UI.WebControls.TextBox> or some other <xref:System.Web.UI.IEditableTextControl> control is not found for the user name.  
  
 The following table lists the <xref:System.Web.UI.WebControls.ChangePassword> control style properties and describes which UI element they affect. For a list of the properties to which each style applies, see the individual style property.  
  
|<xref:System.Web.UI.WebControls.ChangePassword> style property|UI element|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------|  
|<xref:System.Web.UI.WebControls.ChangePassword.CancelButtonStyle%2A>|Cancel button on the Change Password view.|  
|<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonStyle%2A>|Change Password button on the Change Password view.|  
|<xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonStyle%2A>|Continue button on the Success view.|  
|<xref:System.Web.UI.WebControls.ChangePassword.FailureTextStyle%2A>|Error text displayed to the user.|  
|<xref:System.Web.UI.WebControls.ChangePassword.HyperLinkStyle%2A>|Hyperlinks to other pages.|  
|<xref:System.Web.UI.WebControls.ChangePassword.InstructionTextStyle%2A>|Instructional text on the page that describes how to use the <xref:System.Web.UI.WebControls.ChangePassword> control.|  
|<xref:System.Web.UI.WebControls.ChangePassword.LabelStyle%2A>|Labels for all input fields, such as text boxes.|  
|<xref:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle%2A>|Hints for providing an acceptable password for the Web site.|  
|<xref:System.Web.UI.WebControls.ChangePassword.SuccessTextStyle%2A>|Text displayed to the user when the password has been successfully changed.|  
|<xref:System.Web.UI.WebControls.ChangePassword.TextBoxStyle%2A>|Text entry input fields.|  
|<xref:System.Web.UI.WebControls.ChangePassword.TitleTextStyle%2A>|Titles for the Change Password and Success views.|  
  
<a name="applying_styles"></a>   
## Applying CSS Styles  
 The <xref:System.Web.UI.WebControls.ChangePassword> control lets you specify CSS style rules in markup. If you use templates to customize the appearance of the <xref:System.Web.UI.WebControls.ChangePassword> control, you can specify CSS styles in the markup in the templates. In that case, no extra outer table is required. You can prevent the table from being rendered by setting the <xref:System.Web.UI.WebControls.ChangePassword.RenderOuterTable%2A> property to **languageKeyword tag is not supported!!!!**  
.  
  
<a name="validation_groupings"></a>   
## Validation Groupings  
 The <xref:System.Web.UI.WebControls.ChangePassword> control uses a validation group so that other fields on the same page as the <xref:System.Web.UI.WebControls.ChangePassword> control can be validated separately. By default, the <xref:System.Web.UI.Control.ID%2A> property of the <xref:System.Web.UI.WebControls.ChangePassword> control is used as the name of the validation group. For example, a <xref:System.Web.UI.WebControls.ChangePassword> control with the ID `"ChangePassword1"` will use a validation group name of `ChangePassword1` as well. To set the validation group that the <xref:System.Web.UI.WebControls.ChangePassword> control is part of, you must create a template with the control, and then change the validation group name.  
  
 To show error messages if a user leaves a <xref:System.Web.UI.WebControls.TextBox> control empty, add a <xref:System.Web.UI.WebControls.ValidationSummary> control to the page. Set the <xref:System.Web.UI.WebControls.ValidationSummary.ValidationGroup%2A> property of the <xref:System.Web.UI.WebControls.ValidationSummary> control to the <xref:System.Web.UI.Control.ID%2A> property of the <xref:System.Web.UI.WebControls.ChangePassword> control.  
  
<a name="access_keys_and_tab_indexes"></a>   
## Access Keys and Tab Indexes  
 For information about how to use the <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> property and the <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> property of a <xref:System.Web.UI.WebControls.ChangePassword> control, see [ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="accessibility"></a>   
## Accessibility  
 For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [ASP.NET 4](http://msdn.microsoft.com/ja-jp/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="accessing_controls_during_page_load_and_page_init"></a>   
## Accessing Controls During Page\_Load and Page\_Init  
 <xref:System.Web.UI.WebControls.ChangePassword> control properties represented by text boxes, such as <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> and <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A>, are accessible during all phases of the page life cycle. In particular, during the Page\_Init and Page\_Load phases, these properties have the same value they had when the <xref:System.Web.UI.WebControls.ChangePassword> control was rendered. If the user changes the value of the <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> property by modifying the <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> text box, the new value will be available when the changed event is raised, which occurs after the Page\_Load phase. Therefore, if you set the value of the <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> property in the Page\_Init phase or Page\_Load phase and provide a custom handler for a <xref:System.Web.UI.WebControls.ChangePassword> event, any change that the user makes in the <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> text box overrides the value set in the Page\_Init or Page\_Load phase.  
  
<a name="DeclarativeSyntax"></a>   
## Declarative Syntax  
  
```  
<asp:ChangePassword  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderPadding="integer"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CancelButtonImageUrl="uri"  
    CancelButtonText="string"  
    CancelButtonType="Button|Image|Link"  
    CancelDestinationPageUrl="uri"  
    ChangePasswordButtonImageUrl="uri"  
    ChangePasswordButtonText="string"  
    ChangePasswordButtonType="Button|Image|Link"  
    ChangePasswordFailureText="string"  
    ChangePasswordTitleText="string"  
    ConfirmNewPasswordLabelText="string"  
    ConfirmPasswordCompareErrorMessage="string"  
    ConfirmPasswordRequiredErrorMessage="string"  
    ContinueButtonImageUrl="uri"  
    ContinueButtonText="string"  
    ContinueButtonType="Button|Image|Link"  
    ContinueDestinationPageUrl="uri"  
    CreateUserIconUrl="uri"  
    CreateUserText="string"  
    CreateUserUrl="uri"  
    CssClass="string"  
    DisplayUserName="True|False"  
    EditProfileIconUrl="uri"  
    EditProfileText="string"  
    EditProfileUrl="uri"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    HelpPageIconUrl="uri"  
    HelpPageText="string"  
    HelpPageUrl="uri"  
    ID="string"  
    InstructionText="string"  
    MailDefinition-BodyFileName="uri"  
    MailDefinition-CC="string"  
    MailDefinition-From="string"  
    MailDefinition-IsBodyHtml="True|False"  
    MailDefinition-Priority="Normal|Low|High"  
    MailDefinition-Subject="string"  
    MembershipProvider="string"  
    NewPasswordLabelText="string"  
    NewPasswordRegularExpression="string"  
    NewPasswordRegularExpressionErrorMessage="string"  
    NewPasswordRequiredErrorMessage="string"  
    OnCancelButtonClick="CancelButtonClick event handler"  
    OnChangedPassword="ChangedPassword event handler"  
    OnChangePasswordError="ChangePasswordError event handler"  
    OnChangingPassword="ChangingPassword event handler"  
    OnContinueButtonClick="ContinueButtonClick event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSendingMail="SendingMail event handler"  
    OnSendMailError="SendMailError event handler"  
    OnUnload="Unload event handler"  
    PasswordHintText="string"  
    PasswordLabelText="string"  
    PasswordRecoveryIconUrl="uri"  
    PasswordRecoveryText="string"  
    PasswordRecoveryUrl="uri"  
    PasswordRequiredErrorMessage="string"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    SuccessPageUrl="uri"  
    SuccessText="string"  
    SuccessTitleText="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UserName="string"  
    UserNameLabelText="string"  
    UserNameRequiredErrorMessage="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CancelButtonStyle/>  
        <ChangePasswordButtonStyle/>  
        <ChangePasswordTemplate>  
            <!-- child controls -->  
        </ChangePasswordTemplate>  
        <ContinueButtonStyle/>  
        <FailureTextStyle/>  
        <HyperLinkStyle/>  
        <InstructionTextStyle/>  
        <LabelStyle/>  
        <MailDefinition  
            BodyFileName="uri"  
            CC="string"  
            From="string"  
            IsBodyHtml="True|False"  
            Priority="Normal|Low|High"  
            Subject="string"  
>  
                <EmbeddedObjects>  
                        <asp:EmbeddedMailObject  
                            Name="string"  
                            Path="uri"  
                        />  
                </EmbeddedObjects>  
        </MailDefinition>  
        <PasswordHintStyle/>  
        <SuccessTemplate>  
            <!-- child controls -->  
        </SuccessTemplate>  
        <SuccessTextStyle/>  
        <TextBoxStyle/>  
        <TitleTextStyle/>  
        <ValidatorTextStyle/>  
</asp:ChangePassword>  
```  
  
   
  
## 例  
 The following code example shows how to set the <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> property to define a regular expression that checks passwords to ensure that they meet the following criteria:  
  
-   Are greater than six characters.  
  
-   Contain at least one digit.  
  
-   Contain at least one special \(non\-alphanumeric\) character.  
  
 The password requirements contained in the <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> property are displayed to the user.  
  
 If the password entered by the user does not meet the requirements of the <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> property, the text contained in the <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> property is displayed to the user. If a new password is not entered, the text contained in the <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A> property is displayed to the user.  
  
> [!NOTE]
>  The new password must meet the minimum requirements set by the  in the <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, <xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, and <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> properties. If the password does not meet these requirements, the <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> event is raised.  
  
 [!code-csharp[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-vb[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.CurrentPassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="T:System.Web.UI.WebControls.Login" />
    <altmember cref="M:System.Web.Security.Membership.DeleteUser(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChangePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ChangePassword" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> パスワードに、次の条件を満たすことを確認する正規表現を定義するプロパティ。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字が含まれてください。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれてください。  
  
 含まれているパスワードの要件、 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが条件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。  新しいパスワードを入力しない場合、テキストが含まれている、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
 [!code-csharp[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-vb[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
        <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
        <altmember cref="T:System.Web.UI.WebControls.Login" />
        <altmember cref="M:System.Web.Security.Membership.DeleteUser(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BorderPadding">
      <MemberSignature Language="C#" Value="public virtual int BorderPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.BorderPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の余白、枠線と指定した領域の内側のピクセル、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>内容間の領域のピクセル数、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールと <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールの境界線。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Web.UI.WebControls.ChangePassword.BorderPadding%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値、 <see cref="P:System.Web.UI.WebControls.ChangePassword.BorderPadding" /> プロパティは、\-1 より小さくします。</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler CancelButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CancelButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.CancelButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがパスワードの変更をキャンセルするキャンセル ボタンをクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.OnCancelButtonClick(System.EventArgs)" />
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string CancelButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CancelButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、 <see langword="CommandName" /> \[キャンセル\] ボタンの値。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName> を表すフィールド、 `CommandName` \[キャンセル\] ボタンの値。 いずれかのボタンの \[キャンセル\] ボタンの機能を模倣するために構成するときに便利ですが、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
 \[キャンセル\] 機能をいずれかに割り当てるに <xref:System.Web.UI.WebControls.Button> 内に含まれるコントロール、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールを <xref:System.Web.UI.WebControls.Button.CommandName%2A> に含まれている文字列をボタンのプロパティ、 <xref:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName> フィールドです。  
  
 \[キャンセル\] ボタンは、パスワードの変更をテンプレートまたは成功した場合のテンプレートを表示できます。 成功した場合のテンプレートに \[キャンセル\] ボタンをクリックすると、パスワードの変更は取り消されませんこれにより、テキスト ボックスがクリアされます。 イベント ハンドラーの作成に \[キャンセル\] ボタンをカスタム機能を追加する、 <xref:System.Web.UI.WebControls.ChangePassword.CancelButtonClick> イベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.CancelButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または \[キャンセル\] ボタンが構成されている場合は、\[キャンセル\] ボタンに表示するイメージの URL を設定、 <see cref="P:System.Web.UI.WebControls.ChangePassword.CancelButtonType" /> イメージ ボタンのようにプロパティです。</summary>
        <value>\[キャンセル\] ボタンを表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CancelButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CancelButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> に \[キャンセル\] ボタンの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> \[キャンセル\] ボタンの外観を定義するオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.CancelButtonStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|\[キャンセル\] ボタンの色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|\[キャンセル\] ボタンを囲む境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|\[キャンセル\] ボタンを囲む境界線のスタイル。  The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しない場合を除き、 `BorderWidth` 設定が 2 より大きい。|  
|`BorderWidth`|\[キャンセル\] ボタンを囲む境界線の幅。|  
|`CssClass`|\[キャンセル\] ボタンの表示に使用されるカスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示されるには、\[キャンセル\] ボタンのテキストを表示します。|  
|`Font-Italic`|`true` キャンセル ボタンのテキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` 上線と \[キャンセル\] ボタンのテキストを表示します。|  
|`Font-Size`|\[キャンセル\] ボタンのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しは、\[キャンセル\] ボタンのテキストを表示します。|  
|`Font-Underline`|`true` \[キャンセル\] ボタンのテキストに下線を表示します。|  
|`ForeColor`|\[キャンセル\] ボタンのテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonText">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または \[キャンセル\] ボタンに表示されるテキストを設定します。</summary>
        <value>\[キャンセル\] ボタンを表示するテキスト。 既定では、\[キャンセル\] です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値、 <xref:System.Web.UI.WebControls.ChangePassword.CancelButtonText%2A> プロパティは、\[キャンセル\] です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CancelButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を表示するときに、\[キャンセル\] ボタンを使用するボタンの種類、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> に \[キャンセル\] ボタンを表示するボタンの種類を定義するオブジェクト。 プロパティの値は、3 つのいずれかを指定できます <see cref="T:System.Web.UI.WebControls.ButtonType" /> 列挙値: <see langword="Button" />, 、<see langword="Image" />, 、または <see langword="Link" />です。 既定値は、<see langword="Button" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.CancelButtonType%2A> プロパティを取得または設定の種類 \(`Button`, 、`Image`, 、または `Link)` の \[キャンセル\] ボタンを表示するときに使用する、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した <see cref="T:System.Web.UI.WebControls.ButtonType" /> のいずれかではない、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
      </Docs>
    </Member>
    <Member MemberName="CancelDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CancelDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に \[キャンセル\] ボタンをクリックすると、ユーザーが表示されるページの URL、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>ユーザー ページの URL は、\[キャンセル\] ボタンをクリックした後にリダイレクトされます。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangedPassword">
      <MemberSignature Language="C#" Value="public event EventHandler ChangedPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ChangedPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ChangedPassword" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー アカウントのパスワードが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword> で指定したメンバーシップ プロバイダーによって、パスワードが変更された後にイベントが発生した、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> プロパティです。 後に、 <xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword> イベントを発生すると、次のようにします。  
  
-   場合、 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> プロパティが設定されて、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールは、ユーザーに電子メール メッセージを送信しようとしています。  
  
-   ユーザーがで指定された Web サイトにリダイレクトするか、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A> プロパティまたはコントロール テンプレートで指定された、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A> プロパティが表示されます。  
  
 後に、ユーザーの新しい認証トークンを設定、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> イベント前に、 <xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword> イベントです。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.OnChangedPassword(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string ChangePasswordButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ChangePasswordButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、 <see langword="CommandName" /> パスワードの変更\] ボタンの値。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName> を表すフィールド、 `CommandName` パスワードの変更\] ボタンの値。 いずれかのボタンの \[パスワードの変更\] ボタンの機能を模倣するために構成するときに便利ですが、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。 パスワードの変更\] ボタンの最後の手順が完了すると、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
 いずれかにパスワードの変更機能を割り当てる <xref:System.Web.UI.WebControls.Button> 内に含まれるコントロール、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールを <xref:System.Web.UI.WebControls.Button.CommandName%2A> に含まれている文字列をボタンのプロパティ、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName> フィールドです。  
  
 パスワードの変更\] ボタンは、パスワードの変更をテンプレートまたは成功した場合のテンプレートを表示できます。 どちらの場合も、パスワードの変更\] ボタンをクリックすると、パスワードを変更するメンバーシップ プロバイダーを呼び出します。 にパスワードの変更\] ボタンをカスタム機能を追加する、イベント ハンドラーを作成、 <xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword> イベントです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.ChangingPassword" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.ChangedPassword" />
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にパスワードの変更ボタンの横に表示されるイメージの URL、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> でパスワードの変更\] ボタンが構成されている場合は、制御、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonType" /> イメージ ボタンのようにプロパティです。</summary>
        <value>パスワードの変更ボタンの横に表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ChangePasswordButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ChangePasswordButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> にパスワードの変更\] ボタンの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> パスワードの変更\] ボタンの外観を定義するオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|パスワードの変更\] ボタンの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|パスワードの変更\] ボタンを囲む境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|パスワードの変更\] ボタンを囲む境界線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|パスワードの変更\] ボタンを囲む境界線の幅。|  
|`CssClass`|パスワードの変更\] ボタンを表示するために使用カスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示されるパスワードの変更\] ボタンのテキストを表示します。|  
|`Font-Italic`|`true` パスワードの変更\] ボタンのテキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` 上線でパスワードの変更ボタンのテキストを表示します。|  
|`Font-Size`|\[パスワードの変更\] ボタンのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しは、パスワードの変更\] ボタンのテキストを表示します。|  
|`Font-Underline`|`true` パスワードの変更\] ボタンのテキストに下線を表示します。|  
|`ForeColor`|パスワードの変更\] ボタンのテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> パスワードの変更\] ボタンの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> パスワードの変更\] ボタンの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonText">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの変更\] ボタンに表示されるテキストを設定します。</summary>
        <value>\[パスワードの変更\] ボタンを表示するテキストです。 既定値は、「パスワードの変更」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ChangePasswordButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ChangePasswordButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の \[パスワードの変更\] ボタンを表示するときに使用されるボタンの種類、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> にパスワードの変更\] ボタンを表示するボタンの種類を定義するオブジェクト。 プロパティの値は、3 つのいずれかを指定できます <see cref="T:System.Web.UI.WebControls.ButtonType" /> 列挙値: <see langword="Button" />, 、<see langword="Image" />, 、または <see langword="Link" />です。 既定値は、<see langword="Button" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonType%2A> プロパティを取得または設定の種類 \(`Button`, 、`Image`, 、または `Link)` のレンダリング時に使用するパスワードの変更\] ボタン、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した <see cref="T:System.Web.UI.WebControls.ButtonType" /> のいずれかではない、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordError">
      <MemberSignature Language="C#" Value="public event EventHandler ChangePasswordError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ChangePasswordError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ChangePasswordError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー アカウントのパスワードの変更時にエラーがある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> で指定したメンバーシップ プロバイダーとイベントが発生した、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> プロパティには、ユーザー アカウントのパスワードを変更中にエラーが発生しました。 これは、正しくない現在のパスワードまたは無効な新しいパスワードを入力した場合に発生します。 指定した <xref:System.Web.Security.MembershipProvider> オブジェクトには、パスワードの変更が失敗した理由、だけは示しません。 パスワードが変更されていないことです。  
  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> パスワードが変更されていない場合は、カスタム アクションを実行するイベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordFailureText">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordFailureText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordFailureText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordFailureText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーのパスワードが変更されていない場合に表示されるメッセージを設定します。</summary>
        <value>ユーザーのパスワード変更がうまくいかないときに表示されるエラー メッセージ。 既定値は"パスワードを変更しようとするは、失敗しました。 もう一度やり直してください。"</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordFailureText%2A> メンバーシップ プロバイダーが、ユーザーが入力したパスワードを却下した場合、プロパティが表示されます。  
  
 <xref:System.Web.Security.MembershipProvider> オブジェクトは、新しいパスワードを拒否した理由を返しません。 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベント \(たとえば、強力なパスワードを提供する必要があるかを示す\) の使用可能なパスワードを入力する方法に関するヒントをユーザーに提供する場合に拒否されたパスワードを確認します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ChangePasswordTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ChangePasswordTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ChangePassword))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.ITemplate" /> のパスワードの変更を表示するために使用するオブジェクト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> オブジェクトを表示するためのテンプレートが含まれる、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> パスワードの変更\] ビューでコントロールされます。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A> プロパティを指定、 <xref:System.Web.UI.ITemplate> によって使用されるオブジェクト、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。 詳細については、「[Creating Web Server Control Templates Dynamically](http://msdn.microsoft.com/ja-jp/8d7aef0c-d9e3-444b-b3f7-ca0c157eb8b4)」を参照してください。  
  
 テンプレートは、HTML 要素とコントロールの特定の部分のレイアウトを構成するコントロールのセットです。 スタイルとテンプレートは異なります。  
  
-   テンプレートは、コントロールのセクションの内容を定義します。  
  
-   スタイルは、コントロール内の要素の外観を指定します。  
  
 詳細については、[ASP.NET Web Server Controls Templates](http://msdn.microsoft.com/ja-jp/f769d290-fd04-4084-85fc-4ea30dd2e8ae) および [Introduction to ASP.NET Themes](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 次の表は、テンプレートと、対応するコントロールのビューでサポートされている、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
|テンプレート名|コントロール ビュー|  
|-------------|----------------|  
|<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A>|パスワードの変更|  
|<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>|成功|  
  
 作成または .aspx ファイルでコントロールのテンプレートを変更することができます。 詳細については、[How to: Create Web Server Control Templates Using ASP.NET Syntax](http://msdn.microsoft.com/ja-jp/4977e1d5-c53a-4908-83be-bba0ad37357a) および [Creating Web Server Control Templates Dynamically](http://msdn.microsoft.com/ja-jp/8d7aef0c-d9e3-444b-b3f7-ca0c157eb8b4) を参照してください。 これらのトピックの手順の構成は不要、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A> プロパティです。 テンプレートを構成する場合、次の表は、テンプレートの必須およびオプションのコントロールを説明します。  
  
|コントロール ID|コントロールの種類|必須\/オプション|  
|---------------|---------------|---------------|  
|`Cancel`|コントロールと、イベントのバブリング \(サーバー コントロールの階層構造のイベントを渡す\) などはすべて、 <xref:System.Web.UI.WebControls.Button>, 、<xref:System.Web.UI.WebControls.LinkButton>, 、および <xref:System.Web.UI.WebControls.ImageButton> コントロールです。 ボタンのコマンド名は、コントロールの ID に設定する必要があります。|省略可能|  
|`ChangePassword`|コントロールと、イベントのバブリング \(サーバー コントロールの階層構造のイベントを渡す\) などはすべて、 <xref:System.Web.UI.WebControls.Button>, 、<xref:System.Web.UI.WebControls.LinkButton>, 、および <xref:System.Web.UI.WebControls.ImageButton> コントロールです。 ボタンのコマンド名は、コントロールの ID に設定する必要があります。|省略可能|  
|`ConfirmNewPassword`|サポートする任意の型、 <xref:System.Web.UI.IEditableTextControl> インターフェイスなど、 <xref:System.Web.UI.WebControls.TextBox> クラスです。|省略可能|  
|`Continue`|コントロールと、イベントのバブリング \(サーバー コントロールの階層構造のイベントを渡す\) などはすべて、 <xref:System.Web.UI.WebControls.Button>, 、<xref:System.Web.UI.WebControls.LinkButton>, 、および <xref:System.Web.UI.WebControls.ImageButton> コントロールです。 ボタンのコマンド名は、コントロールの ID に設定する必要があります。 このコントロールは、正常に完了テンプレートが表示されます。|省略可能|  
|`CurrentPassword`|サポートする任意の型、 <xref:System.Web.UI.IEditableTextControl> インターフェイスなど、 <xref:System.Web.UI.WebControls.TextBox> クラスです。|必須|  
|`FailureText`|サポートする任意の型、 <xref:System.Web.UI.ITextControl> インターフェイスです。|省略可能|  
|`NewPassword`|サポートする任意の型、 <xref:System.Web.UI.IEditableTextControl> インターフェイスなど、 <xref:System.Web.UI.WebControls.TextBox> クラスです。|必須|  
|`UserName`|サポートする任意の型、 <xref:System.Web.UI.IEditableTextControl> インターフェイスです。|必要な場合 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> は `true`です。 省略する必要があります <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> は `false`です。|  
  
 <xref:System.Web.UI.WebControls.ChangePassword> スローを制御、 <xref:System.Web.HttpException> テンプレートには、必要なコントロールが含まれていない場合は例外です。 無効な型のコントロールにオプションのコントロール ID を指定する場合に例外がスローされません。ただし、コントロールは、後で無視されますが、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.Login" />
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ChangePasswordTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ChangePasswordTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナーを取得、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> のインスタンスを作成するコントロールを使用して、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" /> テンプレートです。 これは、子コントロールにプログラムでアクセスを提供します。</summary>
        <value>
          <see cref="T:System.Web.UI.Control" /> を格納している <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordTitleText">
      <MemberSignature Language="C#" Value="public virtual string ChangePasswordTitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChangePasswordTitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の上部に表示されるテキスト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> パスワードの変更\] ビューでコントロールされます。</summary>
        <value>上部に表示されるテキストを <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、「パスワードの変更」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangingPassword">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.LoginCancelEventHandler ChangingPassword;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.LoginCancelEventHandler ChangingPassword" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ChangingPassword" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LoginCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーによってユーザー アカウントのパスワードを変更するまでに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> で指定したメンバーシップ プロバイダーの前にイベントが発生した、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> ユーザー アカウントのパスワードを変更するプロパティが呼び出されます。  
  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> よくあるパスワードの一覧で必要になることを確認する新しいパスワードの確認などのパスワードを変更する前に処理を実行するイベントは使用されません。 後に、ユーザーの新しい認証トークンを設定、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> イベント前に、 <xref:System.Web.UI.WebControls.ChangePassword.ChangedPassword> イベントです。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> を設定してイベントを取り消すことができます、 <xref:System.Web.UI.WebControls.LoginCancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.LoginCancelEventArgs> オブジェクトを `true` 場合は、イベント ハンドラーは、メンバーシップ プロバイダーを呼び出していないことを決定します。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword> を制御して、ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> という名前のイベント `ChangingPassword`です。 イベント ハンドラーのコードに格納されている古いパスワードを比較し、 <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A> プロパティに格納されている新しいパスワードを <xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>します。 2 つのパスワードが同じで、パスワードの変更が失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロール セット、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを `true` 、ユーザー名を入力できるようにします。 これは、ページを表示するにログオンするユーザーがいないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmNewPassword">
      <MemberSignature Language="C#" Value="public virtual string ConfirmNewPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmNewPassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力したパスワードを取得します。</summary>
        <value>重複する新しいパスワード文字列、ユーザー入力を要求します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword%2A> プロパティには、ユーザーが入力した重複する新しいパスワードが含まれています。  
  
 使用することができます、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティを新しいパスワードの要件を定義します。 この正規表現を使用して、クライアント側でパスワード規則を強制します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> データ ストア レベルで構成し、サーバー側で適用するパスワードの強制は関係ありません。 パスワードは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
> [!IMPORTANT]
>  潜在的なセキュリティ脅威は、HTTP 経由でのパスワードを送信します。 HTTP 伝送を閲覧または悪意のあるユーザーによって悪用されたことができます。 ログイン コントロールを使用する場合にセキュリティを強化するを使用して、HTTPS プロトコルの secure socket layer \(SSL\) 暗号化ポストバック中に、ユーザーのパスワードを読み取ることができません。 詳細については、「[Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)」を参照してください。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmNewPasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string ConfirmNewPasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmNewPasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のラベルのテキスト、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" /> テキスト ボックスです。</summary>
        <value>表示するテキスト、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" /> テキスト ボックスです。 既定値は"新しいパスワードの確認入力:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordCompareErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordCompareErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordCompareErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmPasswordCompareErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいパスワードとユーザーが入力したパスワードが同一でないときに表示されるメッセージを設定します。</summary>
        <value>新しいパスワードと確認のパスワードが同じでない場合に表示されるエラー メッセージ。 既定値は「新しいパスワードの確認入力は、新しいパスワードの入力を一致する必要があります」</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロールには、新しいパスワードを 2 回入力するユーザーが必要なように、ユーザーの入力、画面にパスワードの文字がマスクされるためです。 ユーザーは新しいパスワード\] テキスト ボックスと新しいパスワードの確認のテキスト ボックス内のメッセージの両方で同じパスワードを入力しないかどうか、 <xref:System.Web.UI.WebControls.ChangePassword.ConfirmPasswordCompareErrorMessage%2A> プロパティが表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmPasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ConfirmPasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfirmPasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ConfirmPasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードの確認入力\] テキスト ボックスは空のままにしているときに表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーに新しいパスワードを入力せずにパスワードの変更を試みたときに表示されるエラー メッセージ、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" /> 入力ボックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler ContinueButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContinueButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" /> イベント、ユーザーが \[続行\] ボタンをクリックします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.OnContinueButtonClick(System.EventArgs)" />
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName" />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonCommandName">
      <MemberSignature Language="C#" Value="public static readonly string ContinueButtonCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ContinueButtonCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す <see langword="CommandName" /> 続行\] ボタンの値。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName> を表すフィールド、 `CommandName` 続行\] ボタンの値。 いずれかのボタンの \[続行\] ボタンの機能を模倣するために構成するときに便利ですが、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
 割り当てがいずれかの機能を引き続き <xref:System.Web.UI.WebControls.Button> 内に含まれるコントロール、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールを <xref:System.Web.UI.WebControls.Button.CommandName%2A> に含まれている文字列をボタンのプロパティ、 <xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonCommandName> フィールドです。  
  
 \[続行\] ボタンは、パスワードの変更をテンプレートまたは成功した場合のテンプレートを表示できます。 格納されている URL にユーザーをリダイレクト \[続行\] ボタンをクリックすると、 <xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A> プロパティです。 に \[続行\] ボタンをカスタム機能を追加する、イベント ハンドラーを作成、 <xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick> イベントです。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.CancelButtonCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.ChangePassword.ChangePasswordButtonCommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の成功ビューの \[続行\] ボタンを使用するイメージの URL、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> で続行\] ボタンが構成されている場合は、制御、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonType" /> イメージ ボタンのようにプロパティです。</summary>
        <value>\[続行\] ボタンに表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ContinueButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ContinueButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> の成功すると、\[続行\] ボタンの外観を定義するプロパティを表示、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 続行\] ボタンの外観を定義するオブジェクト。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|\[続行\] ボタンの色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|\[続行\] ボタンを囲む境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|\[続行\] ボタンを囲む境界線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`.  既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|\[続行\] ボタンを囲む境界線の幅。|  
|`CssClass`|\[続行\] ボタンをレンダリングするために使用カスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示される続行ボタンのテキストを表示します。|  
|`Font-Italic`|`true` 続行ボタンのテキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` 上線で続行ボタンのテキストを表示します。|  
|`Font-Size`|として \[続行\] ボタンのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消し続行ボタンのテキストを表示します。|  
|`Font-Underline`|`true` \[続行\] ボタンのテキストに下線を表示します。|  
|`ForeColor`|\[続行\] ボタンのテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> 続行\] ボタンの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> 続行\] ボタンの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonText">
      <MemberSignature Language="C#" Value="public virtual string ContinueButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の成功ビューの \[続行\] ボタンに表示されるテキスト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>\[続行\] ボタンを表示するテキストです。 既定値は、"Continue"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContinueButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType ContinueButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType ContinueButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の続行\] ボタンを表示するときに使用されるボタンの種類、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> に \[続行\] ボタンを表示するボタンの種類を定義するオブジェクト。 プロパティの値は、3 つのいずれかを指定できます <see cref="T:System.Web.UI.WebControls.ButtonType" /> 列挙値: <see langword="Button" />, 、<see langword="Image" />, 、または <see langword="Link" />です。 既定値は、<see langword="Button" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ContinueButtonType%2A> プロパティを取得または設定の種類 \(`Button`, 、`Image`, 、または `Link)` の変更のパスワード\] ボタンを表示するときに使用する、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した <see cref="T:System.Web.UI.WebControls.ButtonType" /> のいずれかではない、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
      </Docs>
    </Member>
    <Member MemberName="ContinueDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string ContinueDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContinueDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または正常に完了ビューの \[続行\] ボタンをクリックすると、ユーザーに表示されるページの URL を設定します。</summary>
        <value>ユーザー ページの URL は、\[続行\] ボタンをクリックした後にリダイレクトされます。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A> プロパティには、ユーザーが自分のパスワードを正常に変更した後に表示される Web ページの URL が含まれています。 設定して、 <xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A>, 、ユーザーが自分のパスワードを変更した後に表示される最初のページを制御することができます。  
  
 場合、 <xref:System.Web.UI.WebControls.ChangePassword.ContinueDestinationPageUrl%2A> プロパティが、既定値、 <xref:System.String.Empty> フィールドに、ユーザーが \[続行\] ボタンをクリックすると、ページが更新される、されフォーム上の任意の値がオフになっています。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>構成する個々 のコントロールを作成、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> ポストバックまたは表示の準備で制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.CreateChildControls%2A> メソッドを構成するコントロールのインスタンスを作成する、 <xref:System.Web.UI.WebControls.ChangePassword> を制御し、既定のイベントのイベント ハンドラーを作成します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.ChangePassword.DisplayUserName" /> プロパティに設定されて <see langword="false" />, 、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" /> を実装するコントロールを含む、 <see cref="T:System.Web.UI.IEditableTextControl" /> インターフェイス、および <see cref="P:System.Web.UI.Control.ID" /> コントロールのプロパティが"UserName"に設定します。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.ChangePassword.DisplayUserName" /> にプロパティが設定されている <see langword="true" />, 、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" /> を実装するコントロールが含まれていない、 <see cref="T:System.Web.UI.IEditableTextControl" /> インターフェイス、および <see cref="P:System.Web.UI.Control.ID" /> コントロールのプロパティが"UserName"に設定します。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" /> を実装するコントロールが含まれていない、 <see cref="T:System.Web.UI.IEditableTextControl" /> インターフェイス、および <see cref="P:System.Web.UI.Control.ID" /> コントロールのプロパティが"CurrentPassword"に設定します。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" /> を実装するコントロールが含まれていない、 <see cref="T:System.Web.UI.IEditableTextControl" /> インターフェイス、および <see cref="P:System.Web.UI.Control.ID" /> コントロールのプロパティが"NewPassword"に設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUserIconUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CreateUserIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページへのリンクの横に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。</summary>
        <value>含む Web ページへのリンクの横に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserText">
      <MemberSignature Language="C#" Value="public virtual string CreateUserText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CreateUserText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のリンクのテキストを含む Web ページ、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。</summary>
        <value>含む Web ページへのリンクの横に表示されるテキストを <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUserUrl">
      <MemberSignature Language="C#" Value="public virtual string CreateUserUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CreateUserUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CreateUserUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。</summary>
        <value>含む Web ページの URL、 <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web サイトのコントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.CreateUserIconUrl" />
      </Docs>
    </Member>
    <Member MemberName="CurrentPassword">
      <MemberSignature Language="C#" Value="public virtual string CurrentPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentPassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.CurrentPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの現在のパスワードを取得します。</summary>
        <value>ユーザーが入力した現在のパスワード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A> プロパティには、ユーザーが入力した現在のパスワードが含まれています。  
  
> [!IMPORTANT]
>  潜在的なセキュリティ脅威は、HTTP 経由でのパスワードを送信します。 HTTP 伝送を閲覧または悪意のあるユーザーによって悪用されたことができます。 ログイン コントロールを使用する場合にセキュリティを強化するのにには、ポストバック中に、ユーザーのパスワードを読み取ることができないことを確認するのに secure socket layer \(SSL\) 暗号化で HTTPS プロトコルを使用してください。 詳細については、「[Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)」を参照してください。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword> を制御して、ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> という名前のイベント `ChangingPassword`です。 内のコード、 `ChangingPassword` ハンドラーに格納されている古いパスワードを比較し、 <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A> プロパティに格納されている新しいパスワードを <xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>します。 2 つのパスワードが同じで、パスワードの変更が失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロール セット、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを `true` 、ユーザー名を入力できるようにします。 これは、ページを表示するにログオンするユーザーがいないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
      </Docs>
    </Member>
    <Member MemberName="DisplayUserName">
      <MemberSignature Language="C#" Value="public virtual bool DisplayUserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayUserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.DisplayUserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> を表示する、 <see cref="P:System.Web.UI.WebControls.ChangePassword.UserName" /> ラベル。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールを表示する必要があります、 <see cref="P:System.Web.UI.WebControls.ChangePassword.UserName" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 自分のパスワードを変更するのには、メンバーシップ プロバイダーによってユーザーを認証する必要があります。 使用する、パスワードの変更、別のユーザー アカウントを使用してメンバーシップ プロバイダーによって認証され、そのアカウントのパスワードを変更し、ログオンしていないユーザーに、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールで表示できる、 <xref:System.Web.UI.WebControls.TextBox> ユーザー名をそのまま使用するコントロール。  
  
 設定する必要があります、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを `true` 場合、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールがログオンしていないユーザーに表示されます。 それ以外の場合、ユーザーでは、ユーザー名を指定できません。 します。  
  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを表示、 <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> Web サイトにログオンしていないユーザーに制御します。  
  
 [!code-csharp[ChangePasswordDisplayUserName\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordDisplayUserName/CS/changepassworddisplayusernamecs.aspx#1)]
 [!code-vb[ChangePasswordDisplayUserName\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordDisplayUserName/VB/changepassworddisplayusernamevb.aspx#1)]  
  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword> を制御して、ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> という名前のイベント `ChangingPassword`です。 内のコード、 `ChangingPassword` ハンドラーに格納されている古いパスワードを比較し、 <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A> プロパティに格納されている新しいパスワードを <xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>します。 2 つのパスワードが同じで、パスワードの変更が失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロール セット、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを `true` 、ユーザー名を入力するユーザーを有効にします。 これは、ページを表示するにログオンするユーザーがいないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditProfileIconUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.EditProfileIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのページを編集するユーザー プロファイルへのリンクの横に表示するイメージの URL を設定します。</summary>
        <value>Web サイトのページを編集するユーザー プロファイルへのリンクに表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.EditProfileUrl" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.EditProfileText" />
      </Docs>
    </Member>
    <Member MemberName="EditProfileText">
      <MemberSignature Language="C#" Value="public virtual string EditProfileText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.EditProfileText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはリンクのテキストを Web サイトのページを編集するユーザー プロファイルに設定します。</summary>
        <value>Web サイトのページを編集するユーザー プロファイルへのリンクを表示するテキスト。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.EditProfileIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.EditProfileUrl" />
      </Docs>
    </Member>
    <Member MemberName="EditProfileUrl">
      <MemberSignature Language="C#" Value="public virtual string EditProfileUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EditProfileUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.EditProfileUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのページを編集するユーザー プロファイルの URL を設定します。</summary>
        <value>Web サイトのページを編集するユーザー プロファイルの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.EditProfileIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.EditProfileText" />
      </Docs>
    </Member>
    <Member MemberName="FailureTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FailureTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FailureTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.FailureTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> のエラー メッセージの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトを含む、 <see cref="T:System.Web.UI.WebControls.Style" /> のエラー メッセージの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.FailureTextStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|エラー メッセージ テキストの背後に表示される色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|エラー メッセージ テキストを囲む境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|エラー メッセージのテキストを囲む罫線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`.  既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|エラー メッセージのテキストを囲む罫線の幅。|  
|`CssClass`|エラー メッセージ テキストのレンダリングに使用されるカスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示されるエラー メッセージ テキストを表示します。|  
|`Font-Italic`|`true` エラー メッセージ テキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` 上線とエラー メッセージ テキストを表示します。|  
|`Font-Size`|エラー メッセージ内のテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しは、エラー メッセージ テキストを表示します。|  
|`Font-Underline`|`true` エラー メッセージ テキストに下線を表示します。|  
|`ForeColor`|エラー メッセージのテキスト内のテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> エラー メッセージ テキストの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> エラー メッセージ テキストの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPageIconUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HelpPageIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードの変更のヘルプ ページの横に表示するイメージの URL を設定します。</summary>
        <value>Web サイトのパスワードの変更のヘルプ ページの横に表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.HelpPageText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.HelpPageUrl" />
      </Docs>
    </Member>
    <Member MemberName="HelpPageText">
      <MemberSignature Language="C#" Value="public virtual string HelpPageText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HelpPageText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードの変更のヘルプ ページへのリンクのテキストを設定します。</summary>
        <value>Web サイトのパスワードの変更のヘルプ ページへのリンクを表示するテキストです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.HelpPageUrl" />
      </Docs>
    </Member>
    <Member MemberName="HelpPageUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HelpPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードの変更のヘルプ ページの URL を設定します。</summary>
        <value>パスワードの変更の URL には、Web サイトのページが役立ちます。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.HelpPageIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.HelpPageText" />
      </Docs>
    </Member>
    <Member MemberName="HyperLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HyperLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HyperLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.HyperLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> にハイパーリンクの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトを含む、 <see cref="T:System.Web.UI.WebControls.Style" /> にハイパーリンクの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.HyperLinkStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|ハイパーリンク テキストの背景色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|ハイパーリンクの境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|ハイパーリンクの境界線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|ハイパーリンクの境界線の幅。|  
|`CssClass`|ハイパーリンクの表示に使用されるカスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示されるハイパーリンクのテキストを表示します。|  
|`Font-Italic`|`true` ハイパーリンクのテキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` ハイパーリンクのテキストに上線を表示します。|  
|`Font-Size`|ハイパーリンクのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しは、ハイパーリンクのテキストを表示します。|  
|`Font-Underline`|`true` ハイパーリンク テキストに下線を表示します。|  
|`ForeColor`|ハイパーリンクのテキストの色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> のハイパーリンクの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> のハイパーリンクの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public virtual string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示される情報のテキスト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 間の制御、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTitleText" /> および入力のボックスです。</summary>
        <value>表示される情報のテキスト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 間の制御、 <see cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTitleText" /> および入力のボックスです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.InstructionText%2A> プロパティを取得または設定に表示される情報のテキスト、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。 既定値は、<xref:System.String.Empty> です。  
  
 このプロパティを使用すると、コントロールに関する一般的な情報を表示できます。 使用することも、 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> かメンバーシップ プロバイダーで指定されているパスワードの要件に関する指示を表示するプロパティを <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstructionTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InstructionTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InstructionTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.InstructionTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> の説明のテキストの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトを含む、 <see cref="T:System.Web.UI.WebControls.Style" /> に含まれている説明のテキストの外観を定義するプロパティ、 <see cref="P:System.Web.UI.WebControls.ChangePassword.InstructionText" /> プロパティです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.InstructionTextStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|説明のテキストの背景色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|説明のテキストを囲む境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|説明のテキストを囲む罫線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|説明のテキストを囲む罫線の幅。|  
|`CssClass`|説明のテキストのレンダリングに使用されるカスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示される説明のテキストを表示します。|  
|`Font-Italic`|`true` 説明のテキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` 説明のテキストに上線を表示します。|  
|`Font-Size`|説明のテキストとしてのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しは、説明のテキストを表示します。|  
|`Font-Underline`|`true` 説明のテキストに下線を表示します。|  
|`ForeColor`|説明のテキスト内のテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> 説明のテキストの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> 説明のテキストの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle LabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle LabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.LabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> テキストの外観を定義するオブジェクトでは、ラベルをボックスに、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトを含む、 <see cref="T:System.Web.UI.WebControls.Style" /> テキストの外観を定義するプロパティでは、ラベルをボックスに、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.LabelStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|テキスト ボックスのラベルの背景色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|テキスト ボックスのラベルの境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|テキスト ボックスのラベルの境界線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|テキスト ボックスのラベルの境界線の幅。|  
|`CssClass`|テキスト ボックスのラベルの表示に使用されるカスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` テキスト ボックスを表示するには、太字で示されるラベルのテキストを実行します。|  
|`Font-Italic`|`true` テキスト ボックスのラベル テキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` テキスト ボックスのラベル テキストに上線を表示します。|  
|`Font-Size`|テキスト ボックスのラベルとしてのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` テキスト ボックスを表示するラベルのテキストに取り消しできます。|  
|`Font-Underline`|`true` テキスト ボックスのラベル テキストに下線を表示します。|  
|`ForeColor`|テキスト ボックスのラベルのテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> テキスト ボックスのラベルの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> テキスト ボックスのラベルの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> を表すコントロールの状態を復元します。</param>
        <summary>コントロールによって保存された前のページ要求からの状態情報を復元、 <see cref="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバーライド、 <xref:System.Web.UI.WebControls.ChangePassword.LoadControlState%2A> メソッドと、カスタム サーバー コントロールがコントロールの状態を復元する方法を指定する必要があります。 詳細については、「[Server Control Custom State Management](http://msdn.microsoft.com/ja-jp/96f79173-9d1a-4bde-bf34-1032ebbbe5a9)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" />
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> を表すコントロールの状態を復元します。</param>
        <summary>復元の前のページ要求によって保存された状態情報の表示、 <see cref="M:System.Web.UI.WebControls.ChangePassword.SaveViewState" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバーライド、 <xref:System.Web.UI.WebControls.ChangePassword.LoadViewState%2A> メソッドは、カスタム サーバー コントロールがそのビューステートを復元する方法を指定する必要があるとします。 詳細については、「[Server Control Custom State Management](http://msdn.microsoft.com/ja-jp/96f79173-9d1a-4bde-bf34-1032ebbbe5a9)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> パラメーターは、有効なに解決できない <see cref="P:System.Web.UI.Control.ViewState" />します。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" />
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="MailDefinition">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.MailDefinition MailDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.MailDefinition MailDefinition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailDefinition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>自分のパスワードを変更した後は、ユーザーに送信される電子メール メッセージを定義するプロパティのコレクションへの参照を取得します。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> 電子メール メッセージを定義するオブジェクトは、新しいユーザーに送信します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> プロパティは、自分のパスワードを変更した後、ユーザーに送信される電子メール メッセージの内容と形式を定義するために使用するプロパティのグループの参照を返します。 一般的な設定には、件名、および送信者のリターン アドレスが含まれます。 プロパティの全一覧については、<xref:System.Web.UI.WebControls.MailDefinition> を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> ただしのプロパティを設定できるプロパティは読み取り専用は、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトが返されます。 これらのプロパティを設定するには、フォームで *プロパティ*`-`*サブプロパティ*, ここで、 *サブプロパティ* のプロパティを表します、 <xref:System.Web.UI.WebControls.MailDefinition> クラス \(たとえば、 `MailDefinition-Subject`\)。 プログラムでは、フォームにもプロパティを設定することができます *プロパティ*`.`*サブプロパティ* \(たとえば、`MailDefinition.Subject`\)。  
  
 ユーザーがメンバーシップ プロバイダーに登録されている電子メール アドレスを持つ場合にのみ、電子メール メッセージが送信される場合は、 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> プロパティが有効なファイルを指しています。 場合、 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> プロパティが設定されて、 <xref:System.Web.UI.WebControls.MailDefinition.From%2A> プロパティは、電子メール アドレスに設定する必要がそれ以外の場合、 <xref:System.Web.HttpException> 例外がスローされます。  
  
 電子メール メッセージを作成する場合、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトに、次の表に示すように置換が行われます。 置換テキストは大文字です。  
  
|置換テキスト|置き換えられます|  
|------------|--------------|  
|**\<%** `UserName` **%\>**|ユーザーの Web サイトのユーザー名。|  
|**\<%** *パスワード* **%\>**|ユーザーの新しいパスワード。|  
  
 場合、 <xref:System.Web.UI.WebControls.MailDefinition.IsBodyHtml%2A> のプロパティ、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトが `true`, 、HTML エンコードされたメッセージの受信者のクロスサイト スクリプティングのセキュリティ脆弱性から保護するメール メッセージの内容になります。  
  
 使用することができます、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> を変更するイベント、 <xref:System.Net.Mail.MailMessage> によって作成されるオブジェクト、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトです。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> のパスワードを変更するユーザーに送信される電子メール メッセージを定義するプロパティです。 これはという名前のファイルがあることを前提としています `MailFile.txt` を送信する電子メール メッセージのテキストを格納しています。  
  
 ユーザーに電子メール メッセージを送信できるようにするには、アプリケーションの Web.config ファイルで電子メール サーバーを構成する必要があります。 詳細については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。  
  
 [!code-csharp[ChangePasswordMailDefinition\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordMailDefinition/CS/changepasswordmaildefinitioncs.aspx#1)]
 [!code-vb[ChangePasswordMailDefinition\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordMailDefinition/VB/changepasswordmaildefinitionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.MailDefinition.From" /> プロパティは、電子メール アドレスに設定されていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public virtual string MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメンバー情報の管理に使用するメンバーシップ プロバイダーを設定します。</summary>
        <value>名前、 <see cref="T:System.Web.Security.MembershipProvider" /> の <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定では、アプリケーションのメンバーシップ プロバイダーです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> プロパティを取得またはメンバーの情報を検索するために使用するメンバーシップ プロバイダーを設定します。 場合、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> プロパティは `null` または空で、既定のメンバーシップ プロバイダー `AspNetSqlMembershipProvider`, を使用します。 ASP.NET アプリケーションで使用できるメンバーシップ プロバイダーの詳細については、次を参照してください。 [Membership Providers](http://msdn.microsoft.com/ja-jp/d2c90ff6-aa86-4001-b2c5-e5c99cb7f68f)します。  
  
 新しいパスワードは、メンバーシップ プロバイダーの設定の最小要件を満たす必要があります、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Security.MembershipProvider" />
      </Docs>
    </Member>
    <Member MemberName="NewPassword">
      <MemberSignature Language="C#" Value="public virtual string NewPassword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPassword" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが入力した新しいパスワードを取得します。</summary>
        <value>ユーザーが入力した新しいパスワードです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A> プロパティには、ユーザーが入力した新しいパスワードが含まれています。  
  
 使用することができます、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティを新しいパスワードの要件を定義します。 この正規表現を使用して、クライアント側でパスワード規則を強制します。<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> データ ストア レベルで構成可能なパスワードの強制は関係ありません。 パスワードは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
> [!IMPORTANT]
>  潜在的なセキュリティ脅威は、HTTP 経由でのパスワードを送信します。 HTTP 伝送を閲覧または悪意のあるユーザーによって悪用されたことができます。 ログイン コントロールを使用する場合にセキュリティを強化するのにには、ポストバック中に、ユーザーのパスワードを読み取ることができないことを確認するのに secure socket layer \(SSL\) 暗号化で HTTPS プロトコルを使用してください。 詳細については、「[Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)」を参照してください。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword> を制御して、ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> という名前のイベント `ChangingPassword`です。`ChangingPassword` 格納されている古いパスワードを比較し、 <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A> プロパティに格納されている新しいパスワードを <xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>します。 同一になっているパスワードの変更が失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロール セット、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを `true` 、ユーザー名を入力するユーザーを有効にします。 これは、ページを表示するにログオンするユーザーがいないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.ConfirmNewPassword" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.CurrentPassword" />
      </Docs>
    </Member>
    <Member MemberName="NewPasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または新しいパスワード\] テキスト ボックスのラベル テキストを設定します。</summary>
        <value>新しいパスワード\] テキスト ボックスの横に表示するテキスト。 既定値は"新しいパスワード:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="NewPasswordRegularExpression">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordRegularExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、ユーザーが指定したパスワードの検証に使用される正規表現。</summary>
        <value>正規表現文字列は、ユーザーが指定した新しいパスワードを検証するために使用します。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティを Web サイトでユーザー アカウントの検証に使用されているパスワードの要件を定義します。 この正規表現を使用して、クライアント側でパスワード規則を強制します。<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> データ ストア レベルで構成可能なパスワードの強制は関係ありません。 パスワードは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
 要件をユーザーに表示する設定、 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> プロパティです。  
  
 入力したパスワードに格納されている正規表現を渡さないかどうか、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティ、内のテキスト、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
 テキストが含まれているメンバーシップ プロバイダーによって、パスワードが拒否された場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordFailureText%2A> プロパティが表示されます。  
  
 パスワードの標準の一般的な用途は、ユーザーに強力なパスワードを選択します。 ベスト プラクティスとして、メンバーシップ プロバイダーのデータ レベルでのパスワード規則を適用します。<xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティでは、クライアント側でパスワードの確認のための便利なが、繰り返されるようにするユーザーをロックしないはログオンするには。 セキュリティを強化するには、ユーザーがログオンする実行の試行数を制限する、メンバーシップ プロバイダーを構成します。  詳細については、「[Securing Membership](http://msdn.microsoft.com/ja-jp/2dab2012-c278-426a-bb0d-93b260c428a7)」を参照してください。  
  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> パスワードに、次の条件を満たすことを確認する正規表現を定義するプロパティ。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字が含まれてください。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれてください。  
  
 含まれているパスワードの要件、 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが条件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。 新しいパスワードを入力しない場合、テキストが含まれている、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードでは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
 [!code-csharp[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-vb[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordHintText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="NewPasswordRegularExpressionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordRegularExpressionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordRegularExpressionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に入力したパスワードがで定義されている正規表現の条件を満たさなかったいないときに表示されるエラー メッセージ、 <see cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" /> プロパティです。</summary>
        <value>入力したパスワードがで定義されている正規表現をやり取りしないときに表示されるエラー メッセージ、 <see cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> プロパティに入力したパスワードがで定義されている正規表現を渡さないことをユーザーに通知する、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> データ ストア レベルで構成可能なパスワードの強制は関係ありません。 新しいパスワードは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> パスワードに、次の条件を満たすことを確認する正規表現を定義するプロパティ。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字が含まれてください。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれてください。  
  
 含まれているパスワードの要件、 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが条件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。  新しいパスワードを入力しない場合、テキストが含まれている、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードでは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
 [!code-csharp[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-vb[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="NewPasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string NewPasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewPasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが新しいパスワード\] テキスト ボックスを空のままときに表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーが新しいパスワード\] テキスト ボックスを空のままにした場合に表示するエラー メッセージ。 既定値は「新しいパスワードが必要」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> パスワードに、次の条件を満たすことを確認する正規表現を定義するプロパティ。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字が含まれてください。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれてください。  
  
 含まれているパスワードの要件、 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが条件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。 新しいパスワードを入力しない場合、テキストが含まれている、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードでは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
 [!code-csharp[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-vb[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPassword" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordLabelText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>決定するかどうかのイベント、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> ページの Web サーバー コントロールの階層構造に制御が渡されます。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロールには、パスワードの変更状況と成功状態ビューの子コントロールが含まれています。 各ボタンを個別にイベントを発生させるのではなく、入れ子になったコントロールからのイベントがバブル イベント \(つまりに送信される名前付けコンテナー\) です。 名前付けコンテナーは、一般的なイベントと呼ばれる順番を発生させます。 `ItemCommand` コントロールは、元のイベントを発生させたかを判断するためのパラメーター値を使用します。 この単一のイベントに応答して、個々 の子コントロールのイベント処理メソッドの記述を回避できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnCancelButtonClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.CancelButtonClick" /> イベント、ユーザーが \[キャンセル\] ボタンをクリックするとします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.CancelButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnChangedPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnChangedPassword (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangedPassword(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnChangedPassword(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.ChangedPassword" /> パスワードが変更された後にイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangedPassword%2A> メソッドで指定したメンバーシップ プロバイダーによって、パスワードが変更された後に呼び出されますが、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> プロパティです。 後に、 <xref:System.Web.UI.WebControls.ChangePassword.OnChangedPassword%2A> メソッドを呼び出して、次のようにします。  
  
-   場合、 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> プロパティが設定されて、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールは、ユーザーに電子メール メッセージを送信しようとしています。  
  
-   ユーザーがで指定された Web サイトにリダイレクトするか、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A> プロパティまたはコントロール テンプレートで指定された、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A> プロパティが表示されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangedPassword%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangedPassword(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangedPassword(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.ChangedPassword" />
      </Docs>
    </Member>
    <Member MemberName="OnChangePasswordError">
      <MemberSignature Language="C#" Value="protected virtual void OnChangePasswordError (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangePasswordError(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.ChangePasswordError" /> イベント、ユーザーのパスワードが変更されていない場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError%2A> でメンバーシップ プロバイダーが指定されたメソッドを呼び出して、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> プロパティには、ユーザーのパスワードを変更中にエラーが発生しました。 指定した <xref:System.Web.Security.MembershipProvider> オブジェクトには、パスワードの変更が失敗した理由、だけは示しません。 パスワードが変更されていないことです。  
  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError%2A> ユーザーのパスワードが変更されていないときに、カスタム アクションを実行するメソッドです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError(System.EventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangePasswordError(System.EventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.ChangePasswordError" />
      </Docs>
    </Member>
    <Member MemberName="OnChangingPassword">
      <MemberSignature Language="C#" Value="protected virtual void OnChangingPassword (System.Web.UI.WebControls.LoginCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangingPassword(class System.Web.UI.WebControls.LoginCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.LoginCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.ChangingPassword" /> メンバーシップ プロバイダーによって、ユーザーのパスワードを変更するまでのイベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A> で指定したメンバーシップ プロバイダーの前に呼び出されます、 <xref:System.Web.UI.WebControls.ChangePassword.MembershipProvider%2A> プロパティが、ユーザーのパスワードを変更すると呼ばれます。  
  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A> 必要になることを確認する新しいパスワードの確認などのパスワードを変更する前に処理を実行するメソッドはよくあるパスワードの一覧ではありません。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A> メソッドを取り消すことができます、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> イベントを設定して、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.ComponentModel.CancelEventArgs> として渡されるオブジェクト、 *e* パラメーターを `true`します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnChangingPassword%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを使用する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword> を制御して、ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.ChangingPassword> という名前のイベント `ChangingPassword`です。`ChangingPassword` 格納されている古いパスワードを比較し、 <xref:System.Web.UI.WebControls.ChangePassword.CurrentPassword%2A> プロパティに格納されている新しいパスワードを <xref:System.Web.UI.WebControls.ChangePassword.NewPassword%2A>します。 2 つのパスワードが同じで、パスワードの変更が失敗します。  
  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロール セット、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを `true` 、ユーザー名を入力するユーザーを有効にします。 これは、ページを表示するにログオンするユーザーがいないことを意味します。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword.OnChangingPassword\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword.OnChangingPassword/VB/changepassword_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnChangingPassword(System.Web.UI.WebControls.LoginCancelEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.ChangingPassword" />
      </Docs>
    </Member>
    <Member MemberName="OnContinueButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnContinueButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinueButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnContinueButtonClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" /> イベント、ユーザーが \[続行\] ボタンをクリックするとします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.ContinueButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>生成、 <see cref="E:System.Web.UI.Control.Init" /> イベントを <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールは、ページに登録するコントロールをできるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web サーバー コントロールには、インスタンスを作成および設定に必要な初期化の手順を実行する必要があります。 このイベント内のビュー状態情報を使用することはできません。値を返さないまだです。 中に別の Web サーバー コントロールをアクセスしないでください、 <xref:System.Web.UI.WebControls.ChangePassword.OnInit%2A> 子または親であるかどうかにかかわらず、メソッド、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。 その他の Web サーバー コントロールは、作成、アクセスの準備が完了するではありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSendingMail">
      <MemberSignature Language="C#" Value="protected virtual void OnSendingMail (System.Web.UI.WebControls.MailMessageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendingMail(class System.Web.UI.WebControls.MailMessageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.MailMessageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.MailMessageEventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" /> イベント処理のため、電子メール メッセージが SMTP サーバーに送信される前にします。 SMTP サーバーでは、ユーザーに電子メール メッセージを送ります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.OnSendingMail%2A> がパスワードを変更した後は、ユーザーに送信される電子メール メッセージを変更する方法です。<xref:System.Web.UI.WebControls.MailMessageEventArgs.Message%2A> のプロパティ、 <xref:System.Web.UI.WebControls.MailMessageEventArgs> オブジェクトは、処理のための SMTP サーバーに送信されます。 プロパティを変更、 <xref:System.Web.Mail.MailMessage> 電子メール メッセージを変更するオブジェクト。  
  
 電子メール メッセージが作成される場合にのみ、 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> のプロパティ、 <xref:System.Web.UI.WebControls.MailDefinition> で指定されたオブジェクト、 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> プロパティは有効なファイル名を指しています。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendingMail%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードは、変更の確認をユーザーに電子メール メッセージを送信する SMTP を使用しようとします。 これには、`SendingMail` イベント ハンドラーです。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
      </Docs>
    </Member>
    <Member MemberName="OnSendMailError">
      <MemberSignature Language="C#" Value="protected virtual void OnSendMailError (System.Web.UI.WebControls.SendMailErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSendMailError(class System.Web.UI.WebControls.SendMailErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" /> イベントをユーザーに電子メール メッセージを送信できない場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> SMTP メール システムをユーザーがパスワードを変更した後に、電子メール メッセージを送信しようとしています。 中に例外を発生させるメソッドが呼び出されます。  
  
 確認、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> として渡されるオブジェクト、 `e` 例外の実際の原因を特定のパラメーターです。 最も一般的な理由で構成エラーが、 `smtp` Web.config ファイルのセクションです。  
  
 設定する必要があります、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> として渡されるオブジェクトのプロパティ、 `e` パラメーターを `true` care の実行以外の場合に例外が発生しました、例外が再度スローされたことを通知するためです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードは、変更の確認をユーザーに電子メール メッセージを送信する SMTP を使用しようとします。 これには、`SendingMail` イベント ハンドラーです。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PasswordHintStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PasswordHintStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PasswordHintStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> に表示されるヒント テキストの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトを含む、 <see cref="T:System.Web.UI.WebControls.Style" /> に含まれているテキストの外観を定義するプロパティ、 <see cref="P:System.Web.UI.WebControls.ChangePassword.PasswordHintText" /> プロパティです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|ヒントのテキストの背景色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|ヒントのテキストを囲む境界線の色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|ヒントのテキストを囲む罫線のスタイル。 スタイルがあります"None"、「点線」、「破線」、「ソリッド」、"Double"、"Groove"、「ねじ山」、「埋め込み」または「最初」です。 既定値は、"NotSet"です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|ヒントのテキストを囲む罫線の幅。|  
|`CssClass`|ヒント テキストをレンダリングするために使用カスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示されるというヒント テキストを表示します。|  
|`Font-Italic`|`true` 斜体のヒント テキストを表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` ヒント テキストに上線を表示します。|  
|`Font-Size`|ヒント テキストとしてのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しのヒント テキストを表示します。|  
|`Font-Underline`|`true` ヒントのテキストに下線を表示します。|  
|`ForeColor`|ヒントのテキスト内のテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> というヒント テキストの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> というヒント テキストの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordHintText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordLabelText" />
      </Docs>
    </Member>
    <Member MemberName="PasswordHintText">
      <MemberSignature Language="C#" Value="public virtual string PasswordHintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordHintText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordHintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サイトのパスワードを作成するための要件についての情報のテキストを設定します。</summary>
        <value>新しいパスワードの基準について表示する情報のテキスト。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> プロパティを取得または Web サイトのパスワードを作成するための要件についての情報のテキストを設定します。 このプロパティを使用して、新しいパスワードで指定されている要件を記述、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> プロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression%2A> パスワードに、次の条件を満たすことを確認する正規表現を定義するプロパティ。  
  
-   6 文字よりも大きくなります。  
  
-   少なくとも 1 つの数字が含まれてください。  
  
-   少なくとも 1 つの特殊な \(英数字以外\) 文字が含まれてください。  
  
 含まれているパスワードの要件、 <xref:System.Web.UI.WebControls.ChangePassword.PasswordHintText%2A> プロパティは、ユーザーに表示されます。  
  
 テキストが含まれる、ユーザーが入力したパスワードが条件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpressionErrorMessage%2A> プロパティは、ユーザーに表示されます。 新しいパスワードを入力しない場合、テキストが含まれている、 <xref:System.Web.UI.WebControls.ChangePassword.NewPasswordRequiredErrorMessage%2A> プロパティは、ユーザーに表示されます。  
  
> [!NOTE]
>  新しいパスワードでは設定の最小要件を満たす必要がありますで、 <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>, 、<xref:System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters%2A>, 、および <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> プロパティです。 パスワードがこれらの要件を満たしていない場合、 <xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordError> イベントが発生します。  
  
 [!code-csharp[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/CS/changepasswordpasswordregexcs.aspx#1)]
 [!code-vb[ChangePasswordNewPasswordRegex\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ChangePasswordNewPasswordRegex/VB/changepasswordpasswordregexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.NewPasswordRegularExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordLabelText" />
      </Docs>
    </Member>
    <Member MemberName="PasswordLabelText">
      <MemberSignature Language="C#" Value="public virtual string PasswordLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のパスワードのテキスト ボックスのラベルのテキストを設定します。</summary>
        <value>現在のパスワードのテキスト ボックスの横に表示するテキスト。 既定値は"パスワード:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordHintStyle" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordHintText" />
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryIconUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryIconUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryIconUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryIconUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページへのリンクの横に表示するイメージの URL、 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> コントロールです。</summary>
        <value>Web サイトのパスワードの回復\] ページへのリンクの横に表示するイメージの URL。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryText" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryUrl" />
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryText">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のリンクのテキストを含む Web ページ、 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> コントロールです。</summary>
        <value>含む Web ページへのリンクを表示するテキスト、 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> コントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryUrl" />
      </Docs>
    </Member>
    <Member MemberName="PasswordRecoveryUrl">
      <MemberSignature Language="C#" Value="public virtual string PasswordRecoveryUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRecoveryUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を含む Web ページの URL、 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> コントロールです。</summary>
        <value>含む Web ページの URL、 <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> コントロールです。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryIconUrl" />
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.PasswordRecoveryText" />
      </Docs>
    </Member>
    <Member MemberName="PasswordRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string PasswordRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.PasswordRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが現在のパスワードのテキスト ボックスを空のままときに表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーが現在のパスワードのテキスト ボックスを空のままにした場合に表示するエラー メッセージ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.PasswordRequiredErrorMessage%2A> プロパティを取得またはユーザーが現在のパスワードのテキスト ボックスを空のままときに表示されるエラー メッセージを設定します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Web ページにコンテンツを書き込む出力ストリームを表すオブジェクトを使用します。</param>
        <summary>書き込み、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールの内容を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> クライアントに表示するためのオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールがレンダリングされた HTML を囲むかどうかを示す値を設定、 <see langword="table" /> インライン スタイルを適用するために要素。</summary>
        <value>
          <see langword="true" /> コントロールは、レンダリングされた HTML がの場合、 <see langword="table" /> 要素。 それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 など、インライン スタイル プロパティを作成するために <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> がコントロールに対して表示されるすべての html が当てはまる場合、ASP.NET で提供される HTML を囲む、 `table` 要素。 外側しないようにする場合は、 `table` レンダリングされる要素では、このプロパティを設定 `false`です。 その場合は、インライン コントロール全体に適用されるスタイル プロパティを設定しようとすると、例外がスローされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生したすべてのサーバー コントロール状態の変化を保存します。</summary>
        <returns>サーバー コントロールの現在の状態です。それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.SaveControlState%2A> の操作に必要な状態情報を保存する方法、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。 このコントロールの状態データがの状態データをビューから個別に格納されている、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
 コントロールの状態を使用してカスタム コントロールを呼び出す必要があります、 <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> メソッドを <xref:System.Web.UI.Control.Page%2A> コントロールの状態を保存する前にオブジェクトです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When control state is saved, a string object is returned to the client as a variable that is stored in an HTML <c>&lt;input type="hidden" /&gt;</c> element. Override the <see cref="M:System.Web.UI.WebControls.ChangePassword.SaveControlState" /> method to extract the state information to use in the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> control.  
  
 Control state is intended for small amounts of critical data, such as a page index or a keyword. Using control state for large amounts of data can adversely affect page performance.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>任意のサーバー コントロール、ページがサーバーにポストされた時間以降に発生したビュー ステートの変更を保存します。</summary>
        <returns>サーバー コントロールの現在のビューステート。それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビューステートのプロパティの値を累積したものとは、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。 これらの値に自動的に配置、 <xref:System.Web.UI.Control.ViewState%2A> プロパティを <xref:System.Web.UI.WebControls.ChangePassword> インスタンスであるコントロールの <xref:System.Web.UI.StateBag> クラスです。 値、 <xref:System.Web.UI.Control.ViewState%2A> 保存状態の段階の後に、プロパティが文字列オブジェクトに永続化し、 <xref:System.Web.UI.WebControls.ChangePassword> ライフ サイクルを制御します。 詳細については、「[Control Execution Lifecycle](http://msdn.microsoft.com/ja-jp/7949d756-1a79-464e-891f-904b1cfc7991)」を参照してください。  
  
 この文字列オブジェクトが、HTML に格納されている変数と、クライアントに返されるビューステートを保存すると `<input type="hidden" />` 要素。 カスタム サーバー コントロールを作成するときに、オーバーライドすることで効率を向上できます、 <xref:System.Web.UI.WebControls.ChangePassword.SaveViewState%2A> メソッドと変更、 <xref:System.Web.UI.Control.ViewState%2A> プロパティを <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SendingMail">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.MailMessageEventHandler SendingMail;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.MailMessageEventHandler SendingMail" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.MailMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが、パスワードが変更されている確認の電子メールを送信する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロールは、パスワードが変更されているときに確認する電子メール メッセージを送信、 <xref:System.Web.UI.WebControls.ChangePassword.MailDefinition%2A> プロパティを送信する電子メール メッセージを定義します。  
  
 電子メール メッセージには、ユーザー名とパスワードの自動置換フィールドが含まれています。 使用することができます、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> をユーザーに送信される前に、電子メール メッセージを変更するイベントです。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。 セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。  
  
 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードは、変更の確認をユーザーに電子メール メッセージを送信する SMTP を使用しようとします。 これには、`SendingMail` イベント ハンドラーです。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.OnSendingMail(System.Web.UI.WebControls.MailMessageEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
      </Docs>
    </Member>
    <Member MemberName="SendMailError">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SendMailErrorEventHandler SendMailError" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SendMailErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーに電子メール メッセージを送信する SMTP エラーがある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベントは、SMTP メール プロバイダーは、ユーザーが自分のパスワードを変更した後に、電子メール メッセージを送信しようとするときに例外をスローすると発生します。 このイベントが発生する最も一般的な理由は、 `smtp` Web.config ファイルのセクションが正しくありません。 詳細については、 `smtp` セクションを参照してください。  
  
 既定値 <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベント ハンドラーはキャッチまたはメール システムから SMTP エラーを処理します。<xref:System.Web.UI.WebControls.ChangePassword.SendMailError> イベント ハンドラーを設定する必要があります、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> オブジェクトを `true` 停止エラーをユーザーに表示されないようにするためにします。  
  
 イベント処理の詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードは、変更の確認をユーザーに電子メール メッセージを送信する SMTP を使用しようとします。 これには、`SendingMail` イベント ハンドラーです。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> コントロールのデザイン時データを格納します。</param>
        <summary>コントロールのデザイン時データを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessPageUrl">
      <MemberSignature Language="C#" Value="public virtual string SuccessPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または自分のパスワードを正常に変更した後に、ユーザーに表示されるページの URL を設定します。</summary>
        <value>パスワードが変更された後は、\[インストール先\] ページの URL です。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A> プロパティをユーザーが自分のパスワードを正常に変更した後、Web サイトの特定のページにリダイレクトされるようにする場合。 場合、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A> プロパティが設定されていない \(セットが既定値\)、ページを含む、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールが更新されると、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessText%2A> プロパティが表示されます。 場合、 <xref:System.Web.UI.WebControls.ChangePassword.SuccessPageUrl%2A> プロパティが設定されて、成功した場合のビューは表示されません。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.SuccessText" />
      </Docs>
    </Member>
    <Member MemberName="SuccessTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SuccessTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SuccessTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ChangePassword))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.ITemplate" /> の成功\] および \[パスワードの変更のビューを表示するために使用するオブジェクト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> の成功とパスワードの変更の表示を表示するためのテンプレートが含まれるオブジェクト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A> プロパティを指定、 <xref:System.Web.UI.ITemplate> オブジェクトによって使用される、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A> プロパティは、分離コード ファイルを使用する場合にのみアクセスできます。 詳細については、「[Creating Web Server Control Templates Dynamically](http://msdn.microsoft.com/ja-jp/8d7aef0c-d9e3-444b-b3f7-ca0c157eb8b4)」を参照してください。  
  
 テンプレートは、HTML 要素とコントロールの特定の部分のレイアウトを構成するコントロールのセットです。 スタイルとテンプレートは異なります。  
  
-   テンプレートは、コントロールのセクションの内容を定義します。  
  
-   スタイルは、コントロール内の要素の外観を指定します。  
  
 詳細については、[ASP.NET Web Server Controls Templates](http://msdn.microsoft.com/ja-jp/f769d290-fd04-4084-85fc-4ea30dd2e8ae) および [Introduction to ASP.NET Themes](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 <xref:System.Web.UI.WebControls.ChangePassword> コントロールは、対応するコントロールのビューに適用される次のテンプレートをサポートしています。  
  
|テンプレート名|コントロール ビュー|  
|-------------|----------------|  
|<xref:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate%2A>|パスワードの変更ビュー|  
|<xref:System.Web.UI.WebControls.ChangePassword.SuccessTemplate%2A>|正常に完了ビュー|  
  
 作成または .aspx ファイルでコントロールのテンプレートを変更することができます。 詳細については、「[How to: Create Web Server Control Templates Using ASP.NET Syntax](http://msdn.microsoft.com/ja-jp/4977e1d5-c53a-4908-83be-bba0ad37357a)」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.ChangePasswordTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SuccessTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control SuccessTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control SuccessTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplateContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテナーを取得、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> のインスタンスを作成するためのコントロール、 <see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" /> テンプレートです。 これは、子コントロールにプログラムでアクセスを提供します。</summary>
        <value>
          <see cref="T:System.Web.UI.Control" /> を格納している <see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessText">
      <MemberSignature Language="C#" Value="public virtual string SuccessText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の間で正常に完了ビューに表示されるテキスト、 <see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTitleText" /> し、\[続行\] ボタンをクリックします。</summary>
        <value>間で正常に完了ビューに表示されるテキスト、 <see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessTitleText" /> し、\[続行\] ボタンをクリックします。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.SuccessText%2A> プロパティを取得または正常に完了ビューに表示されるテキストを設定します。 既定値は、「パスワードが変更されました。」です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SuccessTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SuccessTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.Style" /> 正常に完了ビュー テキストの外観を定義するプロパティです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトを含む、 <see cref="T:System.Web.UI.WebControls.Style" /> に含まれているテキストの外観を定義するプロパティ、 <see cref="P:System.Web.UI.WebControls.ChangePassword.SuccessText" /> プロパティです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.SuccessTextStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|正常に完了ビュー テキストの背景色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|成功の表示テキストを囲む境界線の色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|成功の表示テキストを囲む罫線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|成功の表示テキストを囲む罫線の幅。|  
|`CssClass`|成功の表示テキストのレンダリングに使用されるカスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 正常に完了の表示テキストを太字で示される表示します。|  
|`Font-Italic`|`true` 斜体で正常に完了の表示テキストを表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` 成功ビューのテキストに上に線を表示します。|  
|`Font-Size`|成功した場合のビューでは、として文字列のサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しに成功した場合のテキストの表示を表示します。|  
|`Font-Underline`|`true` 成功の表示テキストに下線を表示します。|  
|`ForeColor`|成功した場合のテキストの表示のテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> 成功ビュー テキストの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> 成功ビュー テキストの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuccessTitleText">
      <MemberSignature Language="C#" Value="public virtual string SuccessTitleText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SuccessTitleText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.SuccessTitleText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または正常に完了ビューのタイトルを設定します。</summary>
        <value>正常に完了ビューのタイトルとして表示されるテキストを <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は「変更パスワードは完全な」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.SuccessTitleText%2A> プロパティを取得または正常に完了ビューのタイトルを設定します。 既定値は「変更パスワードは完全な」です。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.ChangePassword" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値。 常に返します <see langword="HtmlTextWriterTag.Table." /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ChangePassword.TagKey%2A> を決定するプロパティ、 <xref:System.Web.UI.HtmlTextWriterTag> に関連付けられている値、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
 <xref:System.Web.UI.WebControls.ChangePassword.TagKey%2A> プロパティでは、適切な HTML マークアップを記述する出力ストリーム、 <xref:System.Web.UI.WebControls.ChangePassword> コントロールです。  
  
 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can override this property to specify which <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value to use for your derived control.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TextBoxStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TextBoxStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TextBoxStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.TextBoxStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> テキストの外観を定義するプロパティでは、コントロールをボックスに、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> のテキスト ボックス コントロールの外観を定義するオブジェクト、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.TextBoxStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|テキスト ボックスの背景色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|テキスト ボックスの境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|テキスト ボックスの境界線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|テキスト ボックスの境界線の幅。|  
|`CssClass`|テキスト ボックスを表示するために使用カスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示されるテキスト ボックスのテキストを表示します。|  
|`Font-Italic`|`true` テキスト ボックスのテキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` テキスト ボックスのテキストに上線を表示します。|  
|`Font-Size`|としてテキスト ボックス内のテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しは、テキスト ボックスのテキストを表示します。|  
|`Font-Underline`|`true` テキスト ボックスのテキストに下線を表示します。|  
|`ForeColor`|テキスト ボックス内のテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> テキスト ボックスの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> テキスト ボックスの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle TitleTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle TitleTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.TitleTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> のタイトルの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> オブジェクトを含む、 <see cref="T:System.Web.UI.WebControls.Style" /> のエラー メッセージのタイトルの外観を定義するプロパティ、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.TitleTextStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|タイトルの背景色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|タイトルの境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|タイトルの境界線のスタイル。 The style can be `"None"`, `"Dotted"`, `"Dashed"`, `"Solid"`, `"Double"`, `"Groove"`, `"Ridge"`, `"Inset"`, or `"Outset"`. 既定値は、`"NotSet"` です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|タイトルの境界線の幅。|  
|`CssClass`|タイトルの表示に使用されるカスケード スタイル シート \(CSS\)。 その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示される、タイトルのテキストを表示します。|  
|`Font-Italic`|`true` タイトルのテキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` タイトルのテキストに上線を表示します。|  
|`Font-Size`|としてタイトルのテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` 取り消しは、タイトルのテキストを表示します。|  
|`Font-Underline`|`true` タイトルのテキストに下線を表示します。|  
|`ForeColor`|タイトルのテキストの色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> 、タイトルの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> 、タイトルの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ChangePassword.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>サーバー コントロールの保存できるように、サーバー コントロールにビュー ステートの変更の追跡と、 <see cref="T:System.Web.UI.StateBag" /> オブジェクトです。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public virtual string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパスワードを変更する対象の Web サイトのユーザー名を設定します。</summary>
        <value>パスワードを変更する対象のユーザー名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> プロパティは、パスワードを変更する対象の Web サイトのユーザー名を取得します。 使用することも、 <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> 内からユーザー名を取得するには、同じプロパティ、 <xref:System.Web.UI.WebControls.ChangePassword> パスワードを変更することがなく、管理します。 さらに、 <xref:System.Web.UI.WebControls.ChangePassword.UserName%2A> プロパティは、電子メールの送信に作成された電子メール メッセージ内から使用することができます、 <xref:System.Web.UI.WebControls.ChangePassword> 電子メール メッセージの本文に文字列「\< ユーザー名 % \>」を使用して制御します。  
  
 \[ユーザー名を入力するユーザーを許可するように設定、 <xref:System.Web.UI.WebControls.ChangePassword.DisplayUserName%2A> プロパティを `true`します。 ユーザーが既に認証されている場合かどうかはユーザー名を入力する必要ありません。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードは、変更の確認をユーザーに電子メール メッセージを送信する SMTP を使用しようとします。 これには、`SendingMail` イベント ハンドラーです。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、前のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameLabelText">
      <MemberSignature Language="C#" Value="public virtual string UserNameLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.UserNameLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザー名\] テキスト ボックスのラベルを設定します。</summary>
        <value>ユーザー名\] ボックスの横に表示するテキスト。 既定値は、"ユーザー名:"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.UserNameRequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="UserNameRequiredErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string UserNameRequiredErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserNameRequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.UserNameRequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがユーザー名\] テキスト ボックスを空のままときに表示されるエラー メッセージを設定します。</summary>
        <value>ユーザーがユーザー名\] テキスト ボックスを空のままにした場合に表示するエラー メッセージ。 既定値は、「ユーザー名が必要」です。 します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ChangePassword.UserNameLabelText" />
      </Docs>
    </Member>
    <Member MemberName="ValidatorTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ValidatorTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ValidatorTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ChangePassword.ValidatorTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照のコレクションを取得して <see cref="T:System.Web.UI.WebControls.Style" /> いずれかに関連付けられているエラー メッセージの外観を定義するプロパティの入力で使用される検証、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> いずれかに関連付けられているエラー メッセージの外観を定義するオブジェクトの入力で使用される検証、 <see cref="T:System.Web.UI.WebControls.ChangePassword" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表に、スタイル設定を使用したカスタマイズで利用可能な <xref:System.Web.UI.WebControls.ChangePassword.ValidatorTextStyle%2A> プロパティです。  
  
|設定|説明|  
|--------|--------|  
|`BackColor`|エラー メッセージは、背景色を指定します。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderColor`|エラー メッセージの境界線の色です。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`BorderStyle`|エラー メッセージの境界線のスタイル。 スタイルがあります"None"、「点線」、「破線」、「ソリッド」、"Double"、"Groove"、「ねじ山」、「埋め込み」または「最初」です。 既定値は、"NotSet"です。 一部のスタイルを明確に表示しないしない限り、 `BorderWidth` 値が 2 より大きい。|  
|`BorderWidth`|エラー メッセージの境界線の幅。|  
|`CssClass`|エラー メッセージの表示に使用されるカスケード スタイル シート \(CSS\)。  その他の設定を指定すると、スタイル シートの設定が上書きされます。|  
|`Font-Bold`|`true` 太字で示されるエラー メッセージ テキストを表示します。|  
|`Font-Italic`|`true` エラー メッセージ テキストを斜体で表示します。|  
|`Font-Names`|フォント フェイスの名前です。|  
|`Font-Overline`|`true` エラー メッセージ テキストに上線を表示します。|  
|`Font-Size`|エラー メッセージにテキストのサイズ、 <xref:System.Web.UI.WebControls.FontUnit> オブジェクトです。|  
|`Font-Strikeout`|`true` エラーを表示するテキストをメッセージに取り消しをします。|  
|`Font-Underline`|`true` エラー メッセージ テキストに下線を表示します。|  
|`ForeColor`|エラー メッセージのテキストの色。 色は、のいずれかを指定できます、 <xref:System.Drawing.Color> プロパティです。|  
|`Height`|A <xref:System.Web.UI.WebControls.Unit> エラー メッセージの高さを表します。|  
|`Width`|A <xref:System.Web.UI.WebControls.Unit> エラー メッセージの幅を表します。|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>