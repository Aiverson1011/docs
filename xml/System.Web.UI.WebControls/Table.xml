<Type Name="Table" FullName="System.Web.UI.WebControls.Table">
  <TypeSignature Language="C#" Value="public class Table : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Table extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Table" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Rows")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TableDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Rows")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web ページ上にテーブルを表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [Introduction](#introduction)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## Introduction  
 **font tag is not supported!!!!**  
  
 **font tag is not supported!!!!**  
  
> [!NOTE]
>  **font tag is not supported!!!!**  
  
 テーブルの行またはセルに対するプログラムによる追加または変更は、サーバーへのポスト後には持続しません。  これは、テーブルの行やセルは独自のコントロールであり、<xref:System.Web.UI.WebControls.Table> コントロールのプロパティではないためです。  テーブルへの変更を永続化するには、ポストバックを行うたびに行とセルを再構築する必要があります。  大幅な変更が予測される場合は、<xref:System.Web.UI.WebControls.Table> コントロールの代わりに <xref:System.Web.UI.WebControls.DataList>、<xref:System.Web.UI.WebControls.DataGrid>、または <xref:System.Web.UI.WebControls.GridView> コントロールを使用することをお勧めします。  その結果、<xref:System.Web.UI.WebControls.Table> クラスは、主にコントロールの開発者によって使用されることになります。  
  
> [!CAUTION]
>  このコントロールは、ユーザー入力を表示するために使用できます。ユーザー入力には悪意のあるクライアント スクリプトが含まれている可能性があります。  アプリケーションに表示する前に、クライアントから送信された実行スクリプト、SQL ステートメントなどのコードの情報はすべて検査してください。  検証コントロールを使用して、入力テキストをコントロールに表示する前にユーザー入力を検証できます。  ASP.NET には入力要求の検証機能があり、ユーザー入力の中のスクリプトと HTML をブロックできます。  詳細については、「[Securing Standard Controls](http://msdn.microsoft.com/ja-jp/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8)」、「[How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](http://msdn.microsoft.com/ja-jp/6f67973f-dda0-45a1-ba9d-e88532d7dc5b)」、および「[Validating User Input in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。  
  
<a name="accessibility"></a>   
## ユーザー補助  
 **font tag is not supported!!!!**  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:Table  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
            <asp:TableFooterRow  
                AccessKey="string"  
                BackColor="color name|#dddddd"  
                BorderColor="color name|#dddddd"  
                BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                    Groove|Ridge|Inset|Outset"  
                BorderWidth="size"  
                CssClass="string"  
                Enabled="True|False"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                Font-Bold="True|False"  
                Font-Italic="True|False"  
                Font-Names="string"  
                Font-Overline="True|False"  
                Font-Size="string|Smaller|Larger|XX-Small|X-Small|  
                    Small|Medium|Large|X-Large|XX-Large"  
                Font-Strikeout="True|False"  
                Font-Underline="True|False"  
                ForeColor="color name|#dddddd"  
                Height="size"  
                HorizontalAlign="NotSet|Left|Center|Right|Justify"  
                ID="string"  
                OnDataBinding="DataBinding event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                Style="string"  
                TabIndex="integer"  
                TableSection="TableHeader|TableBody|TableFooter"  
                ToolTip="string"  
                VerticalAlign="NotSet|Top|Middle|Bottom"  
                Visible="True|False"  
                Width="size"  
>  
                        <asp:TableCell  
                            AccessKey="string"  
                            AssociatedHeaderCellID="string"  
                            BackColor="color name|#dddddd"  
                            BorderColor="color name|#dddddd"  
                            BorderStyle="NotSet|None|Dotted|Dashed|  
                                Solid|Double|Groove|Ridge|Inset|  
                                Outset"  
                            BorderWidth="size"  
                            ColumnSpan="integer"  
                            CssClass="string"  
                            Enabled="True|False"  
                            EnableTheming="True|False"  
                            EnableViewState="True|False"  
                            Font-Bold="True|False"  
                            Font-Italic="True|False"  
                            Font-Names="string"  
                            Font-Overline="True|False"  
                            Font-Size="string|Smaller|Larger|  
                                XX-Small|X-Small|Small|Medium|Large|  
                                X-Large|XX-Large"  
                            Font-Strikeout="True|False"  
                            Font-Underline="True|False"  
                            ForeColor="color name|#dddddd"  
                            Height="size"  
                            HorizontalAlign="NotSet|Left|Center|  
                            Right|Justify"  
                            ID="string"  
                            OnDataBinding="DataBinding event handler"  
                            OnDisposed="Disposed event handler"  
                            OnInit="Init event handler"  
                            OnLoad="Load event handler"  
                            OnPreRender="PreRender event handler"  
                            OnUnload="Unload event handler"  
                            RowSpan="integer"  
                            runat="server"  
                            SkinID="string"  
                            Style="string"  
                            TabIndex="integer"  
                            Text="string"  
                            ToolTip="string"  
                            VerticalAlign="NotSet|Top|Middle|Bottom"  
                            Visible="True|False"  
                            Width="size"  
                            Wrap="True|False"  
                        />  
                        <asp:TableHeaderCell  
                            AbbreviatedText="string"  
                            AccessKey="string"  
                            AssociatedHeaderCellID="string"  
                            BackColor="color name|#dddddd"  
                            BorderColor="color name|#dddddd"  
                            BorderStyle="NotSet|None|Dotted|Dashed|  
                                Solid|Double|Groove|Ridge|Inset|  
                                Outset"  
                            BorderWidth="size"  
                            CategoryText="string"  
                            ColumnSpan="integer"  
                            CssClass="string"  
                            Enabled="True|False"  
                            EnableTheming="True|False"  
                            EnableViewState="True|False"  
                            Font-Bold="True|False"  
                            Font-Italic="True|False"  
                            Font-Names="string"  
                            Font-Overline="True|False"  
                            Font-Size="string|Smaller|Larger|  
                                XX-Small|X-Small|Small|Medium|Large|  
                                X-Large|XX-Large"  
                            Font-Strikeout="True|False"  
                            Font-Underline="True|False"  
                            ForeColor="color name|#dddddd"  
                            Height="size"  
                            HorizontalAlign="NotSet|Left|Center|  
                                Right|Justify"  
                            ID="string"  
                            OnDataBinding="DataBinding event handler"  
                            OnDisposed="Disposed event handler"  
                            OnInit="Init event handler"  
                            OnLoad="Load event handler"  
                            OnPreRender="PreRender event handler"  
                            OnUnload="Unload event handler"  
                            RowSpan="integer"  
                            runat="server"  
                            Scope="NotSet|Row|Column"  
                            SkinID="string"  
                            Style="string"  
                            TabIndex="integer"  
                            Text="string"  
                            ToolTip="string"  
                            VerticalAlign="NotSet|Top|Middle|Bottom"  
                            Visible="True|False"  
                            Width="size"  
                            Wrap="True|False"  
                        />  
            </asp:TableFooterRow>  
            <asp:TableHeaderRow  
                AccessKey="string"  
                BackColor="color name|#dddddd"  
                BorderColor="color name|#dddddd"  
                BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                    Groove|Ridge|Inset|Outset"  
                BorderWidth="size"  
                CssClass="string"  
                Enabled="True|False"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                Font-Bold="True|False"  
                Font-Italic="True|False"  
                Font-Names="string"  
                Font-Overline="True|False"  
                Font-Size="string|Smaller|Larger|XX-Small|X-Small|  
                    Small|Medium|Large|X-Large|XX-Large"  
                Font-Strikeout="True|False"  
                Font-Underline="True|False"  
                ForeColor="color name|#dddddd"  
                Height="size"  
                HorizontalAlign="NotSet|Left|Center|Right|Justify"  
                ID="string"  
                OnDataBinding="DataBinding event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                Style="string"  
                TabIndex="integer"  
                TableSection="TableHeader|TableBody|TableFooter"  
                ToolTip="string"  
                VerticalAlign="NotSet|Top|Middle|Bottom"  
                Visible="True|False"  
                Width="size"  
>  
                        <asp:TableCell  
                            AccessKey="string"  
                            AssociatedHeaderCellID="string"  
                            BackColor="color name|#dddddd"  
                            BorderColor="color name|#dddddd"  
                            BorderStyle="NotSet|None|Dotted|Dashed|  
                                Solid|Double|Groove|Ridge|Inset|  
                                Outset"  
                            BorderWidth="size"  
                            ColumnSpan="integer"  
                            CssClass="string"  
                            Enabled="True|False"  
                            EnableTheming="True|False"  
                            EnableViewState="True|False"  
                            Font-Bold="True|False"  
                            Font-Italic="True|False"  
                            Font-Names="string"  
                            Font-Overline="True|False"  
                            Font-Size="string|Smaller|Larger|  
                                XX-Small|X-Small|Small|Medium|Large|  
                                X-Large|XX-Large"  
                            Font-Strikeout="True|False"  
                            Font-Underline="True|False"  
                            ForeColor="color name|#dddddd"  
                            Height="size"  
                            HorizontalAlign="NotSet|Left|Center|  
                                Right|Justify"  
                            ID="string"  
                            OnDataBinding="DataBinding event handler"  
                            OnDisposed="Disposed event handler"  
                            OnInit="Init event handler"  
                            OnLoad="Load event handler"  
                            OnPreRender="PreRender event handler"  
                            OnUnload="Unload event handler"  
                            RowSpan="integer"  
                            runat="server"  
                            SkinID="string"  
                            Style="string"  
                            TabIndex="integer"  
                            Text="string"  
                            ToolTip="string"  
                            VerticalAlign="NotSet|Top|Middle|Bottom"  
                            Visible="True|False"  
                            Width="size"  
                            Wrap="True|False"  
                        />  
                        <asp:TableHeaderCell  
                            AbbreviatedText="string"  
                            AccessKey="string"  
                            AssociatedHeaderCellID="string"  
                            BackColor="color name|#dddddd"  
                            BorderColor="color name|#dddddd"  
                            BorderStyle="NotSet|None|Dotted|Dashed|  
                                Solid|Double|Groove|Ridge|Inset|  
                                Outset"  
                            BorderWidth="size"  
                            CategoryText="string"  
                            ColumnSpan="integer"  
                            CssClass="string"  
                            Enabled="True|False"  
                            EnableTheming="True|False"  
                            EnableViewState="True|False"  
                            Font-Bold="True|False"  
                            Font-Italic="True|False"  
                            Font-Names="string"  
                            Font-Overline="True|False"  
                            Font-Size="string|Smaller|Larger|  
                                XX-Small|X-Small|Small|Medium|Large|  
                                X-Large|XX-Large"  
                            Font-Strikeout="True|False"  
                            Font-Underline="True|False"  
                            ForeColor="color name|#dddddd"  
                            Height="size"  
                            HorizontalAlign="NotSet|Left|Center|  
                                Right|Justify"  
                            ID="string"  
                            OnDataBinding="DataBinding event handler"  
                            OnDisposed="Disposed event handler"  
                            OnInit="Init event handler"  
                            OnLoad="Load event handler"  
                            OnPreRender="PreRender event handler"  
                            OnUnload="Unload event handler"  
                            RowSpan="integer"  
                            runat="server"  
                            Scope="NotSet|Row|Column"  
                            SkinID="string"  
                            Style="string"  
                            TabIndex="integer"  
                            Text="string"  
                            ToolTip="string"  
                            VerticalAlign="NotSet|Top|Middle|Bottom"  
                            Visible="True|False"  
                            Width="size"  
                            Wrap="True|False"  
                        />  
            </asp:TableHeaderRow>  
            <asp:TableRow  
                AccessKey="string"  
                BackColor="color name|#dddddd"  
                BorderColor="color name|#dddddd"  
                BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                    Groove|Ridge|Inset|Outset"  
                BorderWidth="size"  
                CssClass="string"  
                Enabled="True|False"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                Font-Bold="True|False"  
                Font-Italic="True|False"  
                Font-Names="string"  
                Font-Overline="True|False"  
                Font-Size="string|Smaller|Larger|XX-Small|  
                    X-Small|Small|Medium|Large|X-Large|XX-Large"  
                Font-Strikeout="True|False"  
                Font-Underline="True|False"  
                ForeColor="color name|#dddddd"  
                Height="size"  
                HorizontalAlign="NotSet|Left|Center|Right|Justify"  
                ID="string"  
                OnDataBinding="DataBinding event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                Style="string"  
                TabIndex="integer"  
                TableSection="TableHeader|TableBody|TableFooter"  
                ToolTip="string"  
                VerticalAlign="NotSet|Top|Middle|Bottom"  
                Visible="True|False"  
                Width="size"  
>  
                        <asp:TableCell  
                            AccessKey="string"  
                            AssociatedHeaderCellID="string"  
                            BackColor="color name|#dddddd"  
                            BorderColor="color name|#dddddd"  
                            BorderStyle="NotSet|None|Dotted|Dashed|  
                                Solid|Double|Groove|Ridge|Inset|  
                                Outset"  
                            BorderWidth="size"  
                            ColumnSpan="integer"  
                            CssClass="string"  
                            Enabled="True|False"  
                            EnableTheming="True|False"  
                            EnableViewState="True|False"  
                            Font-Bold="True|False"  
                            Font-Italic="True|False"  
                            Font-Names="string"  
                            Font-Overline="True|False"  
                            Font-Size="string|Smaller|Larger|  
                                XX-Small|X-Small|Small|Medium|Large|  
                                X-Large|XX-Large"  
                            Font-Strikeout="True|False"  
                            Font-Underline="True|False"  
                            ForeColor="color name|#dddddd"  
                            Height="size"  
                            HorizontalAlign="NotSet|Left|Center|  
                                Right|Justify"  
                            ID="string"  
                            OnDataBinding="DataBinding event handler"  
                            OnDisposed="Disposed event handler"  
                            OnInit="Init event handler"  
                            OnLoad="Load event handler"  
                            OnPreRender="PreRender event handler"  
                            OnUnload="Unload event handler"  
                            RowSpan="integer"  
                            runat="server"  
                            SkinID="string"  
                            Style="string"  
                            TabIndex="integer"  
                            Text="string"  
                            ToolTip="string"  
                            VerticalAlign="NotSet|Top|Middle|Bottom"  
                            Visible="True|False"  
                            Width="size"  
                            Wrap="True|False"  
                        />  
                        <asp:TableHeaderCell  
                            AbbreviatedText="string"  
                            AccessKey="string"  
                            AssociatedHeaderCellID="string"  
                            BackColor="color name|#dddddd"  
                            BorderColor="color name|#dddddd"  
                            BorderStyle="NotSet|None|Dotted|Dashed|  
                                Solid|Double|Groove|Ridge|Inset|  
                                Outset"  
                            BorderWidth="size"  
                            CategoryText="string"  
                            ColumnSpan="integer"  
                            CssClass="string"  
                            Enabled="True|False"  
                            EnableTheming="True|False"  
                            EnableViewState="True|False"  
                            Font-Bold="True|False"  
                            Font-Italic="True|False"  
                            Font-Names="string"  
                            Font-Overline="True|False"  
                            Font-Size="string|Smaller|Larger|  
                                XX-Small|X-Small|Small|Medium|Large|  
                                X-Large|XX-Large"  
                            Font-Strikeout="True|False"  
                            Font-Underline="True|False"  
                            ForeColor="color name|#dddddd"  
                            Height="size"  
                            HorizontalAlign="NotSet|Left|Center|  
                                Right|Justify"  
                            ID="string"  
                            OnDataBinding="DataBinding event handler"  
                            OnDisposed="Disposed event handler"  
                            OnInit="Init event handler"  
                            OnLoad="Load event handler"  
                            OnPreRender="PreRender event handler"  
                            OnUnload="Unload event handler"  
                            RowSpan="integer"  
                            runat="server"  
                            Scope="NotSet|Row|Column"  
                            SkinID="string"  
                            Style="string"  
                            TabIndex="integer"  
                            Text="string"  
                            ToolTip="string"  
                            VerticalAlign="NotSet|Top|Middle|Bottom"  
                            Visible="True|False"  
                            Width="size"  
                            Wrap="True|False"  
                        />  
            </asp:TableRow>  
</asp:Table>  
```  
  
   
  
## 例  
 デザイン時にテーブルを作成する方法を次のコード例に示します。  テーブルは 2 行で、各行に 2 セルです。  
  
> [!NOTE]
>  次のコード サンプルはシングルファイル コード モデルを使用しており、分離コード ファイルに直接コピーされた場合は正常に動作しない可能性があります。  このコード例は、拡張子が .aspx の空のテキスト ファイルにコピーする必要があります。  Web フォームのコード モデルの詳細については、「[ASP.NET Web Forms Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)」を参照してください。  
  
 [!code-csharp[Classic Table Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Table Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Table Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Table Example/VB/sourcevb.aspx#1)]  
  
 テーブルをプログラムによって構築する方法のコード例を次に示します。  テーブルを動的に作成する手順は 3 段階に分かれています。  まず、行内のセルを表す <xref:System.Web.UI.WebControls.TableCell> オブジェクトを作成します。  セルの内容を追加するには、<xref:System.Web.UI.WebControls.TableCell.Text%2A> プロパティを設定するか、<xref:System.Web.UI.WebControls.TableCell> の <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> コレクションにコントロールを追加します。  次に、テーブル内の行を表す <xref:System.Web.UI.WebControls.TableRow> を作成します。  そして、作成済みの <xref:System.Web.UI.WebControls.TableCell> オブジェクトを、<xref:System.Web.UI.WebControls.TableRow> の <xref:System.Web.UI.WebControls.TableRow.Cells%2A> コレクションに追加します。  最後に、<xref:System.Web.UI.WebControls.Table> コントロールの <xref:System.Web.UI.WebControls.Table.Rows%2A> コレクションに、<xref:System.Web.UI.WebControls.TableRow> を追加します。  テーブル内の行ごとにこの手順を繰り返してください。  
  
 [!code-csharp[Classic Table Example\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Table Example/CS/source2cs.aspx#2)]
 [!code-vb[Classic Table Example\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Table Example/VB/source2vb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TableCell" />
    <altmember cref="T:System.Web.UI.WebControls.TableRow" />
    <altmember cref="T:System.Web.UI.WebControls.TableHeaderRow" />
    <altmember cref="T:System.Web.UI.WebControls.TableFooterRow" />
    <altmember cref="T:System.Web.UI.WebControls.TableCellCollection" />
    <altmember cref="T:System.Web.UI.WebControls.TableRowCollection" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Table ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Table" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.Table> クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML のコンテンツを表示する出力ストリーム。</param>
        <summary>HTML 属性およびスタイルをレンダリングする必要がある追加を指定した <see cref="T:System.Web.UI.HtmlTextWriter" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主にコントロールの開発者によって適切な属性を挿入するために使用しにスタイルを設定、 <xref:System.Web.UI.HtmlTextWriter> の出力ストリームは、 <xref:System.Web.UI.WebControls.Table> コントロールです。 このメソッドは <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=fullName>です。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Table.AddAttributesToRender%2A> 属性を追加するカスタム サーバー コントロールのメソッド、 <xref:System.Web.UI.WebControls.Table>です。  
  
 [!code-csharp[CustomTableAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableAddAttributesToRender/CS/custom_table_addattributestorendercs.aspx#1)]
 [!code-vb[CustomTableAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableAddAttributesToRender/VB/custom_table_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomTableAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableAddAttributesToRender/CS/custom_table_addattributestorender.cs#2)]
[!code-vb[CustomTableAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableAddAttributesToRender/VB/custom_table_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背後に表示する背景画像の URL、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</summary>
        <value>背景画像の URL、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Table.BackImageUrl%2A> の背景に表示するイメージの場所を指定するプロパティ、 <xref:System.Web.UI.WebControls.Table> コントロールです。 相対パスまたは絶対 URL を使用することができます。 相対 URL では、サーバーの完全なパスを指定せず、Web ページまたはユーザー コントロールの場所にイメージの場所が関連しています。 パスは Web ページの場所の相対パスです。 これにより、コード内でイメージへのパスを更新することがなく、サーバー上の別のディレクトリにサイト全体を移動しやすくします。 サイトを別のディレクトリに移動する場合は、コードを更新する必要がありますので、絶対 URL は、完全なパスを提供します。  
  
> [!NOTE]
>  イメージがより小さい場合、 <xref:System.Web.UI.WebControls.Table> コントロール、並べて表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の HTML キャプション要素に表示されるテキスト、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。</summary>
        <value>HTML キャプション要素に表示するテキストを表す文字列、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Table.Caption%2A> の HTML キャプション要素に表示されるテキストを指定するプロパティ、 <xref:System.Web.UI.WebControls.Table> コントロールです。 指定したテキストは、コントロールをより使いやすくために使用するテーブルの説明を持つデバイスの支援技術を提供します。  
  
 その他のユーザー補助サポート、 <xref:System.Web.UI.WebControls.Table> によってコントロールが提供される、 <xref:System.Web.UI.WebControls.Table.CaptionAlign%2A> プロパティです。 使用して、 <xref:System.Web.UI.WebControls.Table.CaptionAlign%2A> の HTML キャプション要素の配置を指定するプロパティ、 <xref:System.Web.UI.WebControls.Table> コントロールです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Table.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>水平または垂直方向の位置の HTML キャプション要素の取得または設定、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 列挙値のいずれか。 既定値は <see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Table.CaptionAlign%2A> の HTML キャプション要素の水平方向または垂直方向の位置を指定するプロパティ、 <xref:System.Web.UI.WebControls.Table> コントロールです。 このプロパティは、コントロールを支援技術デバイスのユーザーにとってより使いやすく提供されています。  
  
 このプロパティのいずれかを使用して、 <xref:System.Web.UI.WebControls.TableCaptionAlign> 列挙値。 次の表では、指定できる値を示します。  
  
|値|説明|  
|-------|--------|  
|`NotSet`|キャプション要素の配置が設定されていません。|  
|`Top`|Caption 要素は、テーブルの上部に揃えられます。|  
|`Bottom`|Caption 要素は、テーブルの下に揃えられます。|  
|`Left`|Caption 要素は、表の左側に揃えられます。|  
|`Right`|Caption 要素は、テーブルの右側に揃えられます。|  
  
 その他のユーザー補助サポート、 <xref:System.Web.UI.WebControls.Table> によってコントロールが提供される、 <xref:System.Web.UI.WebControls.Table.Caption%2A> プロパティです。 使用して、 <xref:System.Web.UI.WebControls.Table.Caption%2A> の HTML キャプション要素に表示されるテキストを指定するプロパティ、 <xref:System.Web.UI.WebControls.Table> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した型が、 <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 列挙値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Table.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルの内容とセルの境界線間の間隔を設定します。</summary>
        <value>セルの内容とセルの境界線の間のピクセル単位での領域の量。 既定値は、\-1 で、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Table.CellPadding%2A> セルの内容とセルの境界線間の間隔を制御するプロパティです。 指定した間隔は、セルの 4 つすべての側面に追加されます。  
  
 同じ列のすべてのセル、 <xref:System.Web.UI.WebControls.Table> コントロールを持つ同一の幅。 余白の量が最大幅のセルに適用され、このセルの幅を列内のすべてのセルがあります。  
  
 同様に、同じ行のすべてのセルには、同じ高さがあります。 間隔は、行の行内のセルに適用され、行内の他のすべてのセルがあるこのセルの高さ。 個々 のセルのサイズを指定することはできません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Table.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセル間の領域のサイズを設定します。</summary>
        <value>セルの間隔をピクセル単位で指定します。 既定値は、\-1 で、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Table.CellSpacing%2A> の隣接するセルの間隔を制御するプロパティ、 <xref:System.Web.UI.WebControls.Table> コントロールです。 この間隔は、垂直方向と水平方向の両方に適用されます。 セルの間隔は、テーブル全体で統一されています。 それぞれの行または列の個別のセルの間隔を指定することはできません。  
  
> [!NOTE]
>  このプロパティの値に 0 より大きく設定する場合、 <xref:System.Web.UI.WebControls.Table.GridLines%2A> プロパティ セルの境界線が表示される値にギャップが隣接するセルの境界線間表示されます。 このような状況で、 <xref:System.Web.UI.WebControls.Table.CellSpacing%2A> プロパティは、ギャップのサイズを制御します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Table.CellPadding" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新たに作成 <see cref="T:System.Web.UI.ControlCollection" /> を保持するオブジェクト、 <see cref="T:System.Web.UI.WebControls.TableRow" /> 、現在のコントロール <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> を格納するオブジェクト、 <see cref="T:System.Web.UI.WebControls.TableRow" /> 、現在のコントロール <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム クラスを派生している場合、このメソッドは、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.Table> コントロールです。  
  
 このメソッドは、 <xref:System.Web.UI.Control.CreateControlCollection%2A> ベースの実装 <xref:System.Web.UI.Control> クラスです。<xref:System.Web.UI.WebControls.Table> コントロール、 <xref:System.Web.UI.WebControls.Table.CreateControlCollection%2A> は常に返します、 <xref:System.Web.UI.ControlCollection> のみ持つことができる <xref:System.Web.UI.WebControls.TableRow> 、現在のコントロール <xref:System.Web.UI.WebControls.Table> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Table.CreateControlCollection%2A> メソッドにカスタム サーバー コントロールの新しいインスタンスを常に返されるように、 <xref:System.Web.UI.EmptyControlCollection> のクラス、 <xref:System.Web.UI.WebControls.Table>です。  
  
 [!code-csharp[CustomTableCreateControlCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCreateControlCollection/CS/custom_table_createcontrolcollectioncs.aspx#1)]
 [!code-vb[CustomTableCreateControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCreateControlCollection/VB/custom_table_createcontrolcollectionvb.aspx#1)]  
[!code-csharp[CustomTableCreateControlCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCreateControlCollection/CS/custom_table_createcontrolcollection.cs#2)]
[!code-vb[CustomTableCreateControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCreateControlCollection/VB/custom_table_createcontrolcollection.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>外観を定義するプロパティのコレクションへの参照を取得、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</summary>
        <returns>参照、 <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトの外観を定義するプロパティを含む、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム コントロールを派生している場合、このメソッドは、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.Table> クラスです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Table.CreateControlStyle%2A> カスタム サーバー内のメソッドを制御できるため、これは常に空白を返します <xref:System.Web.UI.WebControls.TableStyle> の <xref:System.Web.UI.WebControls.Table>です。  
  
 [!code-csharp[CustomTableCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCreateControlStyle/CS/custom_table_createcontrolstylecs.aspx#1)]
 [!code-vb[CustomTableCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCreateControlStyle/VB/custom_table_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomTableCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableCreateControlStyle/CS/custom_table_createcontrolstyle.cs#2)]
[!code-vb[CustomTableCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableCreateControlStyle/VB/custom_table_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示するグリッド線のスタイル、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.GridLines" /> 列挙値のいずれか。 既定値は <see langword="None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Table.GridLines%2A> に表示するセルの罫線を指定するプロパティ、 <xref:System.Web.UI.WebControls.Table> コントロールです。 次の表は、別のグリッド線のスタイルを示します。  
  
|グリッド線の値|説明|  
|-------------|--------|  
|`None`|セルの罫線は表示されません。|  
|`Horizontal`|水平方向のセルの境界線のみが表示されます。|  
|`Vertical`|垂直方向のセルの境界線のみが表示されます。|  
|`Both`|水平および垂直方向のセル罫線が表示されます。|  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.Table.GridLines%2A> プロパティ グリッド線のスタイルを指定します。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Classic Table.GridLines Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Table.GridLines Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic Table.GridLines Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Table.GridLines Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の水平方向の配置、<see cref="T:System.Web.UI.WebControls.Table" />ページ上のコントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 列挙値のいずれか。 既定値は <see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、<xref:System.Web.UI.WebControls.Table.HorizontalAlign%2A>プロパティの水平方向の配置を指定する、<xref:System.Web.UI.WebControls.Table>ページ内のコントロールです。 次の表は、さまざまな水平方向の配置のスタイルを一覧表示します。  
  
|HorizontalAlign 値|説明|  
|-----------------------|--------|  
|`NotSet`|水平方向の配置、<xref:System.Web.UI.WebControls.Table>コントロールが設定されていません。|  
|`Left`|<xref:System.Web.UI.WebControls.Table> ページで左揃えコントロール。|  
|`Center`|<xref:System.Web.UI.WebControls.Table>コントロールがページの中央に配置します。|  
|`Right`|<xref:System.Web.UI.WebControls.Table>コントロールをページの右揃え。|  
|`Justify`|<xref:System.Web.UI.WebControls.Table>コントロールは、ページの左と右の余白に揃えられます。|  
  
   
  
## 例  
 [!code-csharp[CustomTableAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableAlign/CS/custom_table_aligncs.aspx#1)]
 [!code-vb[CustomTableAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableAlign/VB/custom_table_alignvb.aspx#1)]  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="argument">A <see cref="T:System.String" /> イベントの引数を表します。</param>
        <summary>フォームがサーバーにポストバックされるときに、<see cref="T:System.Web.UI.WebControls.Table" /> コントロールのイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値が渡されます、 `argument` パラメーターを <xref:System.Web.UI.WebControls.Table.RaisePostBackEvent%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>Html のタグを開始、 <see cref="T:System.Web.UI.WebControls.Table" /> 指定したライターにコントロールできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム クラスを派生している場合、このメソッドは、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.Table> コントロールです。  
  
 <xref:System.Web.UI.WebControls.Table.RenderBeginTag%2A> メソッドの開始タグの表示、 <xref:System.Web.UI.WebControls.Table> を制御して、必要に応じてテーブル キャプションや配置のタグを表示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.Table.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定されたライターにテーブル コントロール内の行を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタム クラスを派生している場合、このメソッドは、主にコントロールの開発者によって使用、 <xref:System.Web.UI.WebControls.Table> コントロールです。  
  
 <xref:System.Web.UI.WebControls.Table> 実装するコントロール、 <xref:System.Web.UI.WebControls.Table.RenderContents%2A> をレンダリングする、 <xref:System.Web.UI.WebControls.Table.Rows%2A> テーブルのです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.Table.RenderContents%2A> カスタム サーバー内のメソッドを制御できるため、ユーザー定義のヘッダー行を常に挿入します。 <xref:System.Web.UI.WebControls.Table> サーバー コントロール。  
  
 [!code-csharp[CustomTableRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableRenderContents/CS/custom_table_rendercontentscs.aspx#1)]
 [!code-vb[CustomTableRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableRenderContents/VB/custom_table_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomTableRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomTableRenderContents/CS/custom_table_rendercontents.cs#2)]
[!code-vb[CustomTableRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomTableRenderContents/VB/custom_table_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">テーブルのセクションでは順序が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.Rows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内の行のコレクションを取得、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableRowCollection" /> を含む、 <see cref="T:System.Web.UI.WebControls.TableRow" /> 内のオブジェクト、 <see cref="T:System.Web.UI.WebControls.Table" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Table.Rows%2A> プログラムを使用して管理するコレクション、 <xref:System.Web.UI.WebControls.TableRow> 内のオブジェクト、 <xref:System.Web.UI.WebControls.Table> コントロールです。 A <xref:System.Web.UI.WebControls.TableRow> テーブル内の行を示します。  
  
> [!NOTE]
>  プログラムを使用してテーブルを構築する場合だけ、このプロパティは使用通常。 宣言することで、デザイン時に設定されて <xref:System.Web.UI.WebControls.TableRow> 開始タグと終了タグの間のオブジェクト、 <xref:System.Web.UI.WebControls.Table> コントロールです。  
  
   
  
## 例  
 次の例で使用方法、 <xref:System.Web.UI.WebControls.Table.Rows%2A> プログラムを使用してテーブルを構築するコレクション。 テーブルを動的に作成するは、3 つの手順で構成されます。 最初に、作成 <xref:System.Web.UI.WebControls.TableCell> 行内のセルを表すオブジェクト。 設定するか、セルの内容を追加、 <xref:System.Web.UI.WebControls.TableCell.Text%2A> プロパティまたはコントロールを追加することで、 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> のコレクション、 <xref:System.Web.UI.WebControls.TableCell>です。 次に、作成、 <xref:System.Web.UI.WebControls.TableRow> をテーブル内の行を表します。 追加、 <xref:System.Web.UI.WebControls.TableCell> 前に作成されたオブジェクト、 <xref:System.Web.UI.WebControls.TableRow.Cells%2A> のコレクション、 <xref:System.Web.UI.WebControls.TableRow>です。 最後に、追加、 <xref:System.Web.UI.WebControls.TableRow> に、 <xref:System.Web.UI.WebControls.Table.Rows%2A> のコレクション、 <xref:System.Web.UI.WebControls.Table> コントロールです。 テーブルの各行に対してこの手順を繰り返します。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、コンピューター ストアの中の aspx の拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[Classic Table Example\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Table Example/CS/source2cs.aspx#2)]
 [!code-vb[Classic Table Example\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Table Example/VB/source2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableRowCollection" />
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Table.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> プロパティが <see langword="false" /> の場合、レンダリングされた HTML 要素の <see langword="disabled" /> 属性を "無効" に設定するかどうかを示す値を取得します。</summary>
        <value>
          <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> プロパティが <c>4.0</c> より低い ASP.NET のバージョンを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、コントロールが無効になっているときに ASP.NET がそのコントロールの HTML をどのように描画するかを示します。 場合は、このプロパティは `true`, 、ASP.NET では、 `disabled` 属性のコントロールが無効にするとします。 場合は、このプロパティは `false`, 、ASP.NET では、 `class` 属性のコントロールが無効にするとします。 詳細については、「<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Table.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常は、使用する必要があります、 <xref:System.Web.UI.WebControls.Table.RaisePostBackEvent%2A?displayProperty=fullName> のイベントを発生させる方法、 <xref:System.Web.UI.WebControls.Table> フォームがサーバーにポストバックされるときに制御します。  
  
 このメソッドは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Table> のインスタンスが <xref:System.Web.UI.IPostBackEventHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>To define a custom implementation for raising the event for a <see cref="T:System.Web.UI.WebControls.Table" /> object, override the <see cref="M:System.Web.UI.WebControls.Table.RaisePostBackEvent(System.String)" /> member. The explicit interface implementation calls the <see cref="M:System.Web.UI.WebControls.Table.RaisePostBackEvent(System.String)" /> method to raise the event when posted data has changed for the control.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>