<Type Name="EmbeddedMailObject" FullName="System.Web.UI.WebControls.EmbeddedMailObject">
  <TypeSignature Language="C#" Value="public sealed class EmbeddedMailObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmbeddedMailObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EmbeddedMailObject" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmbeddedMailObject/EmbeddedMailObjectTypeConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>使用して構築された電子メール メッセージに埋め込む項目を表す、 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject> メール メッセージに埋め込むのアイテムを表します。 これらの埋め込みアイテムには、会社のロゴなどのイメージ ファイルを指定できます。 埋め込みの各項目には、識別子とパスを指定します。  
  
 電子メール メッセージ ファイル内で、埋め込みオブジェクトが正しく表示されることを確認して、次の条件を満たす必要があります。  
  
-   メール メッセージは HTML 形式です。  
  
-   項目は、イメージ ファイル \(.jpg、.gif、.bmp など\) です。  
  
-   指定された本文の HTML 形式のファイル、 <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> プロパティには、次の構文を使用して、イメージ ファイルへの参照が含まれています。  
  
    ```  
    <img src="cid:identifier" alt="Alternate Text" />.  
    ```  
  
 場合、 <xref:System.Web.UI.WebControls.EmbeddedMailObject> メール メッセージに追加され、すべてが適合しない前に指定した要件はほとんどの場合表示されることがメール メッセージに添付します。 アイテムがメール メッセージの識別子によって参照されるが、埋め込みアイテムとして含まれていない場合、は、メールが表示されるときに破損した添付ファイルとして表示されます。  
  
 <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> のコレクションが格納 <xref:System.Web.UI.WebControls.EmbeddedMailObject> 1 通のメール メッセージのオブジェクト。<xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> によって使用される、 <xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A> のプロパティ、 <xref:System.Web.UI.WebControls.MailDefinition> メール メッセージを作成するオブジェクト。  
  
 埋め込みオブジェクトを許可するメッセージは、設定して、次の Web コントロール構成可能な <xref:System.Web.UI.WebControls.MailDefinition> プロパティ宣言。  
  
-   <xref:System.Web.UI.WebControls.CreateUserWizard>  
  
-   <xref:System.Web.UI.WebControls.ChangePassword>  
  
-   <xref:System.Web.UI.WebControls.PasswordRecovery>  
  
> [!NOTE]
>  値、 <xref:System.Web.UI.WebControls.EmbeddedMailObject> と <xref:System.Web.UI.WebControls.EmbeddedMailObjectsCollection> オブジェクトはビュー ステートに格納されません。 サーバーのパス情報を検出する悪意のあるユーザーが保護されます。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードで、 `SendingMail` イベント ハンドラーは、変更の確認をユーザーに電子メール メッセージを送信しようとしています。 SMTP は、このコード例を実行するために、サーバーで既に構成する必要があります。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、上記のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メールでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="P:System.Web.UI.WebControls.CreateUserWizard.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.ChangePassword" />
    <altmember cref="P:System.Web.UI.WebControls.ChangePassword.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendingMail" />
    <altmember cref="T:System.Web.UI.WebControls.PasswordRecovery" />
    <altmember cref="P:System.Web.UI.WebControls.PasswordRecovery.MailDefinition" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendingMail" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 To get or set the identifier of the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> property. To get or set the path to the embedded item, use the <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> property. Both properties must be set to successfully embed the item in the mail message.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmbeddedMailObject (string name, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EmbeddedMailObject.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">メール メッセージに埋め込むには、アイテムの識別子として使用する名前。 詳細については、「<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />」を参照してください。</param>
        <param name="path">メール メッセージに埋め込む項目を取得するために使用するパス。 詳細については、「<see cref="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />」を参照してください。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> クラスの指定した識別子の名前とパスを使用して、オブジェクトを取り込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例を使用する ASP.NET ページの分離コード例を示しています、 <xref:System.Web.UI.WebControls.ChangePassword> を制御して、イベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると想定しています。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードで、 `SendingMail` イベント ハンドラーは、変更の確認をユーザーに電子メール メッセージを送信しようとしています。 SMTP は、このコード例を実行するために、サーバーで既に構成する必要があります。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 次のコード例では、.aspx ページの使用方法を示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword_vb.aspx#1)]  
  
 次のコード例では、分離コード ファイルの使用方法を示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ChangePassword\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/CS/changepassword.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ChangePassword\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ChangePassword/VB/changepassword.vb#2)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、上記のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メール メッセージでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
        <altmember cref="T:System.Web.Mail.SmtpMail" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を使用して構築メール メッセージに埋め込まれるアイテムの識別子として使用される名前、 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> クラスです。</summary>
        <value>メール メッセージに埋め込む項目の識別子を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> プロパティを使用して宣言によって構築メール メッセージに埋め込む項目の識別子を指定する、 <xref:System.Web.UI.WebControls.MailDefinition> クラスです。 含まれている項目をマッピングする、id が使用、 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> プロパティで指定されたファイルの本文内の適切な場所を <xref:System.Web.UI.WebControls.MailDefinition.BodyFileName%2A> プロパティ、次の構文を使用します。  
  
```  
<img src="cid:identifier" alt="Alternate Text" />  
```  
  
 通常、項目は、イメージ ファイルです。 既定値、 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Name%2A> プロパティが空の文字列です。  
  
 ユーザー補助の設計、埋め込みイメージのメール メッセージに代替テキスト プロパティを設定することをお勧めします。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードで、 `SendingMail` イベント ハンドラーは、変更の確認をユーザーに電子メール メッセージを送信しようとしています。 SMTP は、このコード例を実行するために、サーバーで既に構成する必要があります。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、上記のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メール メッセージでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージでは、プレーン テキストで送信され、アプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EmbeddedMailObject.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.MailFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を使用して構築メール メッセージに埋め込む項目を取得するために使用するパス、 <see cref="T:System.Web.UI.WebControls.MailDefinition" /> クラスです。</summary>
        <value>メール メッセージに埋め込む項目へのパスを返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> プロパティを使用して宣言によって構築メール メッセージで埋め込み先アイテムへのパスを指定する、 <xref:System.Web.UI.WebControls.MailDefinition> オブジェクトです。 ファイルのパス <xref:System.Web.UI.WebControls.EmbeddedMailObject.Path%2A> C:\\MyServer\\Banner.gif などのパスにする必要があります。 通常、埋め込みアイテムは、イメージ ファイルです。 イメージ ファイルは、メール メッセージで、識別子によって参照されているが、メッセージに含まれていない、電子メール メッセージを表示したときに破損した添付ファイルとして画像が表示されます。  
  
 ユーザー補助の設計、埋め込みイメージのメール メッセージに代替テキスト プロパティを設定することをお勧めします。  
  
   
  
## 例  
 次のコード例を使用する ASP.NET ページを示しています、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロール、およびイベント ハンドラーが含まれています、 <xref:System.Web.UI.WebControls.ChangePassword.SendingMail> という名前のイベント `SendingMail`です。 このコード例では、ASP.NET メンバーシップとフォーム認証、および、名とパスワードがわかっているユーザーが作成されたを使用する ASP.NET Web サイトが構成済みであると仮定します。 詳細については、「[How to: Implement Simple Forms Authentication](http://msdn.microsoft.com/ja-jp/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)」を参照してください。  
  
 パスワードの変更が成功すると、コードで、 `SendingMail` イベント ハンドラーは、変更の確認をユーザーに電子メール メッセージを送信しようとしています。 SMTP は、このコード例を実行するために、サーバーで既に構成する必要があります。 SMTP サーバーを構成する方法については、次を参照してください。 [NIB: 方法: インストールと構成の SMTP 仮想サーバーの IIS 6.0 で](http://msdn.microsoft.com/ja-jp/ed204b58-24af-47d0-9687-60e5df5f17f8)します。 この例の目的で、必要はありません。 SMTP サーバーを構成するには電子メール メッセージを送信するエラーをテストする例が構築されます。  
  
 メール サーバーが正しく構成されていないまたはその他のエラーが発生して電子メール メッセージを送信できない場合、 `SendMailError` 関数が呼び出されます。 メッセージがユーザーに表示されます。 さらに、イベントはイベント ソース名は既に MySamplesSite が存在することを想定して Windows アプリケーション イベント ログに記録されます。 指定したイベント ソースを作成するのには、次のコード例を参照してください。 イベント ソースの作成の詳細については、次を参照してください。 [Server Event Handling in ASP.NET Web Pages](http://msdn.microsoft.com/ja-jp/765bfc89-33ee-4d0d-bbe6-3b172c06def9)します。<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> にオブジェクトが設定されている `true` をエラーが処理されたことを示します。  
  
 [!code-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SendMailErrorEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 アプリケーション ログに MySamplesSite をという名前のイベント ソースをプログラムで追加する必要がある場合は、次のコード例を使用します。 このイベント ソースは、最初のコード サンプルが正常に動作するために存在する必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 次のコード例は、上記のコード例の ChangePasswordMail.htm ファイルとして使用できます。  
  
> [!IMPORTANT]
>  ユーザー アカウント名またはパスワードを電子メール メッセージでは、潜在的なセキュリティの脅威を送信しています。 電子メール メッセージはプレーン テキストで送信された通常およびアプリケーションを「見つけ出す」特殊なネットワークで読み取ることができます。  セキュリティを強化するに記載されている緩和策を使用して [Securing Login Controls](http://msdn.microsoft.com/ja-jp/d85075bc-9c1a-4453-8a0c-539b10853c9c)します。  
  
```  
<html>  
<head><title></title></head>  
<body>  
<form>  
  
  <h1>Your password for the account named &quot;<%Username%>&quot; has changed.</h1>  
  
  <p>  
  If you did not initiate this change, please call 1-206-555-0100.  
  </p>  
  
  <p>  
  <a href="http://www.contoso.com/login.aspx">  
    <img src="cid:LoginGif" alt="Log In" />  
  </a>   
  </p>  
  
  <p>  
  Please read our attached Privacy Notice.  
  </p>  
  
</form>  
</body>  
</html>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.EmbeddedMailObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>