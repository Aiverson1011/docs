<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールの手順で必要な基本的な機能を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンスを直接作成することはできません、 <xref:System.Web.UI.WebControls.WizardStepBase> クラスです。 によってこのクラスを継承する代わりに、 <xref:System.Web.UI.WebControls.WizardStep> クラスおよび <xref:System.Web.UI.WebControls.TemplatedWizardStep> ウィザードとして機能するコントロールのステップは、基本的な機能を提供するクラス。  
  
 派生することができます、 <xref:System.Web.UI.WebControls.WizardStepBase> ウィザード コントロールの一意なステップを表すカスタム クラスを作成するクラス。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはそれ以降のステップから現在の手順に戻るにユーザーが許可されているかどうかを示す値を設定、 <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクションです。</summary>
        <value>
          <see langword="true" /> 現在のステップに戻るには、ユーザーが許可されている場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> で線形のナビゲーションを適用するプロパティを使用できる、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 各ステップがある場合、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティに設定 `false`, 、ユーザーがアクセスされた後の手順に戻ってできません。 この機能を使用する、1 つのシナリオは、しない場合は、ユーザーがそれぞれの手順としてデータベースにデータを永続化するため完了した後に、手順に戻るには完了です。 各手順の後にデータを保存し、ユーザーが、手順に戻って、保存した後に情報を変更できるように場合、保存したデータが破損する可能性があります。 設定して、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティを `false`, 、ユーザーは、ステップを左揃え後、かどうかはできませんに戻り、値を変更します。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティを決定する方法とタイミング、 **前** ボタンは表示されません。 次の表の **前** レンダリング動作のボタンをクリックします。  
  
|シナリオ|動作|  
|----------|--------|  
|線形: ステップ 1 が <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 設定 `false` し、ユーザーの操作は、ステップ 2 に進みます。|手順 2 が表示されない、 **前** \] ボタンをクリックします。|  
|ノンリニア: ステップ 1 が <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> 設定 `false` し、ユーザーの操作は、手順 3. に進みます。|手順 3. が表示されない、 **前** \] ボタンをクリックします。|  
|サイド バーのボタン: ステップ 2 は、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> に設定 `false` , 、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> に設定されている `true`, 、ユーザーがサイド バーのボタンをクリックするとします。|ないボタンは自動的に無効にサイドバー上と <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> に設定されている `false`します。 ユーザーには、ボタンがクリックすると、アクションは無視されます。|  
|線形と非線形カスタム テンプレートを使用して: が、カスタム ナビゲーション テンプレートです。|自動的に複製しない非表示\/表示する場合は、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> に設定されている `false` ナビゲーションのテンプレートを使用する場合。**前** ボタンは、テンプレートでは省略可能にする必要があります。|  
|Visual Studio デザイナーを使用し、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : コントロールに 5 つの手順がある、手順 4. で作業しているページを実行するとします。|手順 4 の場合は、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, 、 **前** \] ボタンを表示します。**前** のボタンが非表示のみ <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> 設定 <xref:System.Web.UI.WebControls.WizardStepType.Step> 履歴に前の手順がの場合、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> に設定 `false`します。 手順 4 が最初に表示され、履歴内の手順はありませんので、 **前** ボタンが非表示にします。|  
|ステップと非線形ナビゲーションを開始します。 手順 3. と手順 4. と手順 1 を持つユーザーが訪れます <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> に設定 <xref:System.Web.UI.WebControls.WizardStepType.Start>します。|ウィザードが追加されません、 **前** ボタン、 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> に設定されている <xref:System.Web.UI.WebControls.WizardStepType.Start> 、ユーザーがそのステップに移動する方法に関係なく。|  
|履歴に同じ手順: ユーザーが訪れます手順 3、 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> に設定されている <xref:System.Web.UI.WebControls.WizardStepType.Step> 、ユーザーがその操作をコミットしないとします。 手順 3 で \[戻る\] ボタンをクリックします。|"ウィザード"コントロールがチェックされます、 **前** 履歴にステップが、ユーザーが置かれている「同じ」ステップです。 ウィザード コントロールが「異なる」の前の手順を決定する履歴のバックアップ検索しの表示の基本ステップが同じ場合は、 **前** \] ボタンをクリックし、変換先、履歴に"異なる"ステップに基づいています。|  
  
> [!NOTE]
>  ときに、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> にプロパティが設定されている `false`, が、 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> の親コントロールのプロパティ <xref:System.Web.UI.WebControls.WizardStepBase> に設定されている `true`, 、サイド バー領域のボタンをクリックすると影響を与えません。 サイドバーの領域は通常非線形ナビゲーションを提供する表示を設定することが非線形ナビゲーションの機能を使用していない場合、 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> プロパティを `false`します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例を使用して、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> の手順に戻ってからユーザーを停止するプロパティ、 <xref:System.Web.UI.WebControls.Wizard> アクセスされた後に制御します。 例では、 `Step1` 作業は、その <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> プロパティに設定 `false`します。 ユーザー後が、 `Step1` の手順に戻る\] ボタンが表示されない、 `Step2` 手順です。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのコントロールにテーマを適用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> テーマを使用するにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティは、テーマが有効になっているかどうかを示す、 <xref:System.Web.UI.WebControls.WizardStepBase> コントロールです。<xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティは、その controls コレクションに含まれるコントロールのテーマが有効になっているかどうかにも影響します。 ときに、 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティは、 `true`, 、コントロール スキンを適用するテーマのアプリケーションのディレクトリが検索されます。 テーマ ディレクトリに特定のコントロールのスキンが存在しない場合、スキンは適用されません。 ときに、 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> プロパティは、 `false`, 、テーマ ディレクトリは検索されませんしの値、 <xref:System.Web.UI.Control.SkinID%2A> プロパティは使用されません。  
  
 オーバーライド、 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> 値、親コントロールまたはコントロールを含むページのセットです。 たとえば場合、 <xref:System.Web.UI.WebControls.WizardStepBase> コントロールが <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> に設定 `false`, 、選択的に設定して、ウィザードの手順に含まれる子コントロールにテーマを適用できます、 <xref:System.Web.UI.Control.EnableTheming%2A> プロパティを `true` 個々 の子コントロールにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサーバー コントロールに割り当てられたプログラム id を設定します。</summary>
        <value>コントロールに割り当てられているプログラム id。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> プロパティを識別し、Web フォーム ページで特定のウィザード手順コントロールを参照します。<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> 値\] ページで、コントロール インスタンスの名前になります。 これにより、そのページのコードで特定の段階に簡単にアクセスできます。 たとえば、設定した場合、 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.WizardStepBase> コントロール「ステップ 1」するには、ウィザードの手順としてそのページのコード内の子コントロールを参照することができます `Step1.Controls`します。  
  
 <xref:System.Web.UI.WebControls.WizardStepBase> コントロールにより内の各ステップを <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> 手順が追加またはデザイン時に変更されたときに、コントロールが有効な一意の識別子。 たとえば、設定、 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> デザイン時の手順でに含まれている別のステップの識別子が一致しない、 <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> コントロール、およびそれが一致することはできません、 <xref:System.Web.UI.Control.ID%2A> を含んでいるの <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> コントロールです。  
  
   
  
## 例  
 次のコード例を次の 3 つのウィザードの手順を定義する、 <xref:System.Web.UI.WebControls.Wizard> Web フォーム ページのコントロールです。 ウィザードの手順のインスタンスはコード ページについては、場合、その ID 値を指定し、としてコードに参照できる `WizardStep1`, 、`WizardStep2`, 、および `WizardStep3`です。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardActiveStep\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardActiveStep\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティは、デザイン時に無効な id 文字列に設定されました。  
  
 または  
  
 プロパティが含まれているのと同じ識別子に設定された <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> コントロールをデザイン時です。  
  
 または  
  
 プロパティを格納しているに別の手順と同じ識別子に設定された <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" /> コントロールをデザイン時です。</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary>
          <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> メソッドによって保存された前回のページ要求からビューステート情報を復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ウィザードとして機能するコントロールのステップに関連付けられている名前を取得します。</summary>
        <value>ウィザードとして機能するコントロールでの手順に関連付けられた名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティ ウィザード コントロールのステップを識別する文字列を返します。 値が指定されている場合、 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 、プロパティ、 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティは、その値を返します。 値が指定されていない場合、 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティには、 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティの値を返す、 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> プロパティです。 いずれかの値が指定されていない場合、 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> または <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> プロパティには、 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> プロパティを返します。 `null`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> イベント データを格納するオブジェクト。</param>
        <summary>
          <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>内容を出力、 <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コントロールの子コントロールを指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトをクライアントに表示される内容を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはのナビゲーション ユーザー インターフェイス \(UI\) をステップの表示の種類を示す、 <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 列挙値のいずれか。 既定値は <see langword="WizardStepType.Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> の手順を表示するナビゲーション ボタンの種類を指定するプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 このプロパティの値を指定する場合の手順としてマーク <xref:System.Web.UI.WebControls.WizardStepType.Complete> サイドバーに無効な状態が表示されます。  
  
 このプロパティの値を指定しない場合、既定値は `WizardStepType.Auto`です。  
  
 次の表に、使用できる設定の <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> プロパティと、ステップの結果の動作。  
  
 `WizardStepType.Auto`  
 ナビゲーション ステップに表示する UI は、ステップが宣言されている順序で決定されます。  
  
 `WizardStepType.Complete`  
 最後に表示される手順です。 ナビゲーション ボタンは表示されません。  
  
 `WizardStepType.Finish`  
 ステップは、最終的なデータ コレクションの手順です。 ナビゲーション用には、\[完了\] \[戻る\] ボタンを表示します。  
  
 `WizardStepType.Start`  
 最初に表示される手順です。 \[戻る\] ボタンは表示されません。  
  
 `WizardStepType.Step`  
 ステップは、開始と終了\] 手順のいずれかの手順です。 ナビゲーションは、前のトピック\] ボタンが表示されます。 このステップの種類をオーバーライドするのに便利ですが、 <xref:System.Web.UI.WebControls.WizardStepType.Auto> ステップの種類。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値は、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 列挙値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の手順で使用するタイトル、 <see cref="T:System.Web.UI.WebControls.Wizard" /> サイドバー機能が有効な場合を制御します。</summary>
        <value>手順で使用するタイトル、 <see cref="T:System.Web.UI.WebControls.Wizard" /> サイドバー機能が有効な場合を制御します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 、ステップのわかりやすいタイトルを表示するプロパティ、 <xref:System.Web.UI.WebControls.Wizard> サイドバー機能が有効な場合を制御します。 場合、 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティが設定されていないと、サイド バー機能を有効にするの値、 <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> サイド バー ボタンのプロパティが表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次の例を使用して、 <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> 、ステップのわかりやすいタイトルを表示するプロパティ、 <xref:System.Web.UI.WebControls.Wizard> コントロールです。 例では、 `Step1` がその <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> プロパティの設定に表示されるので、 <xref:System.Web.UI.WebControls.Wizard> "WizardStep1"と同様に制御します。`Step2`<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> "Step 2"として表示されるので、プロパティを設定します。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardStepBaseTitle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.WizardStepBaseTitle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.Wizard" /> から派生したオブジェクトの親であるコントロール <see cref="T:System.Web.UI.WebControls.WizardStepBase" />します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> から派生したオブジェクトの親であるコントロール <see cref="T:System.Web.UI.WebControls.WizardStepBase" />します。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>