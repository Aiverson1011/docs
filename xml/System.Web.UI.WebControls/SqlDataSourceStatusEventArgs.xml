<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>発生するイベント データを提供、 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> データ操作が完了した後に制御します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> でクラスを使用する、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, 、および <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> データによって実行された後、データベース操作に関する情報を渡すためのイベントのソース管理します。 この情報には、操作によって影響を受けた行の数、 <xref:System.Data.Common.DbCommand> オブジェクト データ ソース操作、および原因となった例外情報を実行するために使用します。 処理するイベント ハンドラー デリゲートを追加することで、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> または <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> イベントでは、このデータを確認し、必要なその他の投稿処理を実行することができます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールは、データの操作の実行中に、基になるデータ オブジェクトを使用するために利用できる多数のイベントを公開します。 次の表は、イベントの一覧し、関連付けられている <xref:System.EventArgs> や強化を使用してデータ操作のライフ サイクルに対応したさまざまなイベントを探すに、イベント ハンドラーのクラス、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールです。  
  
|イベント|EventArgs|EventHandler|  
|----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> データが取得される前に発生します。|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Updating>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting> update、または削除操作が実行される、挿入の前に発生します。|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 後にデータの取得、insert、update、または削除操作が完了するとします。|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> クラス、戻り値とを使用する場合に返される出力パラメーターの値を確認、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールを設定するストアド プロシージャに、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ストアド プロシージャに表示されるデータの選択、 <xref:System.Web.UI.WebControls.GridView>, 、また、整数の出力パラメーターと戻り値など、呼び出し元にその他の情報を渡しますが、します。 パラメーターを <xref:System.Web.UI.WebControls.SqlDataSource> ストアド プロシージャの使用方法に含まれる、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 、コレクションの情報をフォームに渡すパラメーターと同様に、ストアド プロシージャを Web フォームから情報を渡すパラメーターで構成されます。<xref:System.Web.UI.WebControls.Parameter.Direction%2A> にこれらのパラメーターのプロパティが設定されている <xref:System.Data.ParameterDirection.Output> と <xref:System.Data.ParameterDirection.ReturnValue>です。  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.Common.DbCommand" /> で、データベースにデータベース クエリ、コマンド、または送信されるストアド プロシージャを表す、 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールです。</param>
        <param name="affectedRows">該当する場合は、データベース操作によって影響を受けた行の数。</param>
        <param name="exception">
          <see cref="T:System.Exception" /> 該当する場合は、データベース操作によってスローされます。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> クラスの指定された出力パラメーターや戻り値は、データベース操作によって影響を受けた行の数を使用しています。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベース操作によって影響を受けた行の数を取得します。</summary>
        <value>データベース操作によって影響を受けた行の数。 既定値は \-1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべての操作では、操作によって影響を受けた行の数を返します。<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> プロパティの戻り値と同じ値には、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>, 、および <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> メソッドです。  
  
 ときに、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> メソッドが呼び出され、データ ソースに設定されている <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> モードでは、戻り値は常に 0 です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベースに送信されたデータベース コマンドを取得します。</summary>
        <value>
          <see cref="T:System.Data.Common.DbCommand" /> Database コマンドを表すオブジェクトをデータベースに送信します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理できる、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>, 、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, 、または <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> イベントのチェックおよび操作のプロパティを <xref:System.Data.Common.DbCommand> により送信された後、 <xref:System.Web.UI.WebControls.SqlDataSource> データベースへのコントロールです。<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> プロパティを使用すると、戻り値と、出力パラメーターの値にアクセスすると、を通じて、データベースの操作が実行された後、 <xref:System.Data.Common.DbCommand.Parameters%2A> プロパティには、だけでなく、 <xref:System.Data.Common.DbCommand.CommandText%2A> プロパティで、データベースに SQL クエリ、コマンド、または送信されたストアド プロシージャ名を表します。  
  
 すべての出力パラメーターはパラメーターが具体的には、  <xref:System.Data.ParameterDirection.InputOutput> または <xref:System.Data.ParameterDirection.Output> の値として、 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Parameter> オブジェクトです。 戻り値を持つパラメーターからでは、 <xref:System.Data.ParameterDirection.ReturnValue> 値。  
  
   
  
## 例  
 次のコード例を使用する場合は、出力パラメーターの値を調べ、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロール ストアド プロシージャを使用します。<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> コレクションにパラメーターが含まれていますが、 <xref:System.Web.UI.WebControls.SqlDataSource> ストアド プロシージャを使用し、情報をフォームに渡すパラメーターと同様に、ストアド プロシージャを Web フォームから情報を渡すパラメーターで構成されます。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ操作中に、データベースによって発生した例外のラッパーを取得します。</summary>
        <value>
          <see cref="T:System.Exception" /> のデータベースによってスローされた例外をラップする、 <see cref="P:System.Exception.InnerException" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Exception> プロパティには、実際にデータベースの操作によってスローされる例外は表しません。 スローされた例外を使用して、アクセスすることができます、 <xref:System.Exception.InnerException%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータベースによってスローされる例外が処理されたかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> データベースによってスローされる例外は、処理が行われ、スローしない場合、 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロール。 それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データベースは、例外をスローした場合、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> にプロパティが設定されている `false` で例外をラップし、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> プロパティです。 使用する場合、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>, 、確認すること、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> プロパティと、例外のハンドル。 例外を処理する場合は、設定、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> プロパティを `true` または <xref:System.Web.UI.WebControls.SqlDataSource> コントロールは例外をスローします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>