<Type Name="DataControlField" FullName="System.Web.UI.WebControls.DataControlField">
  <TypeSignature Language="C#" Value="public abstract class DataControlField : System.Web.UI.IDataSourceViewSchemaAccessor, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataControlField extends System.Object implements class System.Web.UI.IDataSourceViewSchemaAccessor, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSourceViewSchemaAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("HeaderText")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>すべてのデータ コントロールフィールド型の基底クラスとして機能します。これは、<see cref="T:System.Web.UI.WebControls.DetailsView" /> や <see cref="T:System.Web.UI.WebControls.GridView" /> など、表形式のデータ バインド コントロール内のデータ列を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.DataControlField> class serves as the base class for all data control field types. Data control fields are used by data\-bound controls to represent a field of data, similar to how a <xref:System.Web.UI.WebControls.DataGridColumn> object represents a type of column in the <xref:System.Web.UI.WebControls.DataGrid> control.  
  
 Use the classes that are derived from <xref:System.Web.UI.WebControls.DataControlField> to control how a field of data is displayed in a data\-bound control such as <xref:System.Web.UI.WebControls.DetailsView> or <xref:System.Web.UI.WebControls.GridView>. The following table lists the different data control field types provided by ASP.NET.  
  
|Column field type|Description|  
|-----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.BoundField>|Displays the value of a field in a data source as text.|  
|<xref:System.Web.UI.WebControls.ButtonField>|Displays a command button in a data\-bound control. Depending on the control, this allows you to display either a row or a column with a custom button control, such as an Add or a Remove button.|  
|<xref:System.Web.UI.WebControls.CheckBoxField>|Displays a check box in a data\-bound control. This data control field type is commonly used to display fields with a Boolean value.|  
|<xref:System.Web.UI.WebControls.CommandField>|Displays built\-in command buttons to perform edit, insert, or delete operations in a data\-bound control.|  
|<xref:System.Web.UI.WebControls.HyperLinkField>|Displays the value of a field in a data source as a hyperlink. This data control field type allows you to bind a second field to the hyperlink's URL.|  
|<xref:System.Web.UI.WebControls.ImageField>|Displays an image in a data\-bound control.|  
|<xref:System.Web.UI.WebControls.TemplateField>|Displays user\-defined content in a data\-bound control according to a specified template.|  
  
 You can also extend the <xref:System.Web.UI.WebControls.DataControlField> and <xref:System.Web.UI.WebControls.BoundField> classes to create your own data control field types.  
  
 The <xref:System.Web.UI.WebControls.DataControlField> class provides many properties that determine how user interface \(UI\) elements are presented in the data\-bound control. Not every control uses every available data control field property when rendering a UI. For example, the <xref:System.Web.UI.WebControls.DetailsView> control, which displays the data control fields as rows, includes a header item for each data control field, but no footer item. Therefore, the <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> and <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> properties are ignored by the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> control, however, uses the <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> and <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> properties if the <xref:System.Web.UI.WebControls.GridView.ShowFooter%2A> property is set to **languageKeyword tag is not supported!!!!**  
. Similarly, the data control field properties affect the presentation of UI elements depending on what the element is. The <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> property is always applied to the field. If the type derived from <xref:System.Web.UI.WebControls.DataControlField> contains a control, as in the <xref:System.Web.UI.WebControls.ButtonField> or <xref:System.Web.UI.WebControls.CheckBoxField> classes, the <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> property is applied to the field.  
  
   
  
## 例  
 The following code example demonstrates how to use <xref:System.Web.UI.WebControls.BoundField> and <xref:System.Web.UI.WebControls.ButtonField> objects, which are derived from <xref:System.Web.UI.WebControls.DataControlField>, to display rows in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.DetailsView> control has the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> property set to **languageKeyword tag is not supported!!!!**  
, which enables it to display a subset of the data returned by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property.  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_1/CS/datacontrolfield1cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_1/VB/datacontrolfield1vb.aspx#1)]  
  
 The following code example demonstrates how to extend the <xref:System.Web.UI.WebControls.BoundField> class to create a custom bound field that can be used in a <xref:System.Web.UI.WebControls.GridView> control. Similar to the <xref:System.Web.UI.WebControls.CheckBoxField> class, the `RadioButtonField` class represents a column of **languageKeyword tag is not supported!!!!**  
 or **languageKeyword tag is not supported!!!!**  
 data. However, although the data that the <xref:System.Web.UI.WebControls.CheckBoxField> class is bound to can be any set of **languageKeyword tag is not supported!!!!**  
 or **languageKeyword tag is not supported!!!!**  
 values, the set of data that the `RadioButtonField` class is bound to can have only one **languageKeyword tag is not supported!!!!**  
 value at any given time. This example demonstrates how to implement the <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> and <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> methods, two important methods of all classes derived from <xref:System.Web.UI.WebControls.DataControlField>.  
  
 [!code-csharp[Samples.AspNet.RadioButtonField\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.RadioButtonField/CS/radiobuttonfield.cs#1)]
 [!code-vb[Samples.AspNet.RadioButtonField\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.RadioButtonField/VB/radiobuttonfield.vb#1)]  
  
 The following code example demonstrates how to use the `RadioButtonField` class, which is provided in the previous example, in a <xref:System.Web.UI.WebControls.GridView> control. In this example, the <xref:System.Web.UI.WebControls.GridView> control displays data for a sports team. The player data is maintained in a data table that includes an ID column, columns for the player names, and a true or false column that identifies the captain of the team. The `RadioButtonField` class is used to display which team member is the current team captain. The <xref:System.Web.UI.WebControls.GridView> control can be edited to choose a new team captain or to change other player information.  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_4\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_4/CS/datacontrolfield4cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_4\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_4/VB/datacontrolfield4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.ImageField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataControlField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Because the <xref:System.Web.UI.WebControls.DataControlField> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.DataControlField> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.DataControlField> class.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
        <altmember cref="T:System.Web.UI.WebControls.CommandField" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
        <altmember cref="T:System.Web.UI.WebControls.ImageField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleHeaderText">
      <MemberSignature Language="C#" Value="public virtual string AccessibleHeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleHeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.AccessibleHeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定としてレンダリングされるテキスト、 <see langword="AbbreviatedText" /> 一部のコントロールでプロパティ値です。</summary>
        <value>スクリーン リーダーによって読み取られる省略形のテキストを表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> 状態変更イベントを生成するメソッドが呼び出されたときに、 <xref:System.Web.UI.WebControls.DataControlField.AccessibleHeaderText%2A> プロパティを設定します。  
  
 値、 <xref:System.Web.UI.WebControls.DataControlField.AccessibleHeaderText%2A> プロパティはビュー ステートに格納します。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneField">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.DataControlField CloneField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Web.UI.WebControls.DataControlField CloneField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.CloneField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の重複したコピーを作成する <see cref="T:System.Web.UI.WebControls.DataControlField" />\-派生オブジェクト。</summary>
        <returns>現在の複製コピー <see cref="T:System.Web.UI.WebControls.DataControlField" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.DataControlFieldCollection.CloneFields%2A> 、現在のコピーを作成するメソッド <xref:System.Web.UI.WebControls.DataControlField>\-派生オブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlFieldCollection.CloneFields" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ コントロールへの参照を取得、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> に関連付けられたオブジェクト。</summary>
        <value>所有するデータ コントロール、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.Control%2A> 参照を設定するときに、 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>含まれるすべての Web サーバー コントロールのスタイルを取得、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> フィールドに格納されている Web サーバー コントロールの外観を制御します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> プロパティから派生した型に含まれるすべての Web サーバー コントロールの外観を制御する <xref:System.Web.UI.WebControls.DataControlField>です。  
  
 このプロパティは、すべての派生型には影響しません。<xref:System.Web.UI.WebControls.BoundField> コントロールでは、通常のテキスト データが表示され、のみが含まれています <xref:System.Web.UI.WebControls.TextBox> コントロールで、影響のみを受ける、 <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> プロパティの場合に <xref:System.Web.UI.WebControls.DataControlRowState.Edit> 状態です。 Web サーバー コントロールをなど <xref:System.Web.UI.WebControls.ButtonField> と <xref:System.Web.UI.WebControls.CheckBoxField> の影響を受ける、 <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> フィールドに含まれるコントロール オブジェクトのインスタンスの構成によっては、プロパティです。 たとえば、 <xref:System.Web.UI.WebControls.ButtonField> としてコントロールを表示できる、 <xref:System.Web.UI.WebControls.LinkButton>, 、<xref:System.Web.UI.WebControls.ImageButton>, 、または <xref:System.Web.UI.WebControls.Button> オブジェクトです。 ですが、 <xref:System.Web.UI.WebControls.LinkButton> コントロールの影響を受ける `font` の指定した属性 <xref:System.Web.UI.WebControls.Style> オブジェクト、 <xref:System.Web.UI.WebControls.Button> コントロールはありません。  
  
   
  
## 例  
 次のコード例では、使用して <xref:System.Web.UI.WebControls.BoundField> と <xref:System.Web.UI.WebControls.ButtonField> から派生したオブジェクト <xref:System.Web.UI.WebControls.DataControlField>, 、内の行を表示する、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ButtonField> オブジェクトが設定されているし、管理する方法、 <xref:System.Web.UI.WebControls.LinkButton> \] フィールドに含まれるコントロールが表示されます。  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_2/CS/datacontrolfield2cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_2/VB/datacontrolfield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.ItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected virtual void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> を現在のプロパティをコピーする <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</param>
        <summary>現在のプロパティをコピー <see cref="T:System.Web.UI.WebControls.DataControlField" />\-を指定したオブジェクトを派生 <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.CopyProperties%2A> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> に現在のプロパティをコピーする方法 <xref:System.Web.UI.WebControls.DataControlField>\-派生オブジェクトを <xref:System.Web.UI.WebControls.DataControlField> メソッドによって作成されたオブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.CreateField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、空を作成 <see cref="T:System.Web.UI.WebControls.DataControlField" />\-派生オブジェクト。</summary>
        <returns>空 <see cref="T:System.Web.UI.WebControls.DataControlField" />\-派生オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.CreateField%2A> メソッドで使用されるヘルパー メソッドは、 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> 空を作成する方法 <xref:System.Web.UI.WebControls.DataControlField>\-派生オブジェクトの現在のプロパティのコピーを <xref:System.Web.UI.WebControls.DataControlField>\-にオブジェクトを派生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.DesignMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイン時環境で、データのコントロール フィールドを現在表示するかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> はデザイン時環境で表示されない場合は、現在 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.DesignMode%2A> プロパティを公開、 <xref:System.Web.UI.Control.DesignMode%2A?displayProperty=fullName> プロパティです。<xref:System.Web.UI.Control> に渡されるインスタンス、 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> メソッドを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public virtual void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</param>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> のコントロールまたはテキストを含む、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか。</param>
        <param name="includeReadOnly">
          <see langword="true" /> 読み取り専用のフィールドの値が含まれることを示すために、 <c>dictionary</c> コレクション以外の場合、 <see langword="false" />です。</param>
        <summary>現在のセルのデータ コントロールのフィールドの値を抽出しを指定した値を追加 <see cref="T:System.Collections.IDictionary" /> コレクションです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> メソッドはから派生した型によって実装 <xref:System.Web.UI.WebControls.DataControlField> に該当する場合、現在のフィールドを値に関連付けます。 フィールドと値のペアが格納されている、 `dictionary` メソッドに渡されるコレクション。<xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> メソッドは、 `ExtractRowValues` などのデータのコントロール <xref:System.Web.UI.WebControls.DetailsView> と <xref:System.Web.UI.WebControls.GridView>です。  
  
 カスタムのデータ バインドを記述するときは、このメソッドを制御する呼び出しを使用して <xref:System.Web.UI.WebControls.DataControlFieldCell> セルと関連付けられている値のセットを作成するオブジェクト。 派生するクラスを記述するときに、このメソッドを実装 <xref:System.Web.UI.WebControls.DataControlField> ユーザー データやデータ バインドされたデータを表示します。 すべての派生型の実装、 <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> メソッドでは、すべてのフィールドは、ユーザー データを表示するためです。 たとえば、 <xref:System.Web.UI.WebControls.ButtonField> コントロール ボタンを表示し、ユーザー データがありません。  
  
   
  
## 例  
 次のコード例を実装する方法を示しています、 <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> から派生したコントロールのメソッド、 <xref:System.Web.UI.WebControls.DataControlField> クラスです。`RadioButtonField` クラスのすべての行のデータ バインド オプション ボタンの描画、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 ときに、 <xref:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell%2A> メソッドが呼び出されると、このメソッドを決定を試むかどうかの現在の値、 <xref:System.Web.UI.WebControls.RadioButton> 、セルに含まれるオブジェクトが選択されているか、消去されに値を追加、 <xref:System.Collections.IDictionary> コレクションです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.DataControlField> クラスです。  
  
 [!code-csharp[Samples.AspNet.RadioButtonField\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.RadioButtonField/CS/radiobuttonfield.cs#2)]
 [!code-vb[Samples.AspNet.RadioButtonField\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.RadioButtonField/VB/radiobuttonfield.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのデータ フィールドのフッターのスタイルを設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> のフッター項目の外観を制御する、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> プロパティから派生した型のフッター項目に表示される任意のテキストの外観を制御する <xref:System.Web.UI.WebControls.DataControlField>です。  
  
> [!NOTE]
>  一部のデータ バインド コントロールでは、データ コントロールのフィールドのフッターのアイテムはレンダリングされません。 たとえば、 <xref:System.Web.UI.WebControls.DetailsView> コントロールは、行とそのデータのコントロール フィールドを表示します。 フッターのアイテムはレンダリングされませんこれらのデータ コントロールのフィールド。<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> これらのコントロールでプロパティは無視されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ コントロールのフィールドのフッター項目に表示されるテキストを設定します。</summary>
        <value>\[フッター\] 項目で表示される文字列、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> フィールドに関連するデータのコントロール フィールド、またはその他のデータのメモまたはコメントを追加するプロパティです。  
  
> [!NOTE]
>  一部のデータ バインド コントロールでは、データ コントロールのフィールドのフッターのアイテムはレンダリングされません。 たとえば、 <xref:System.Web.UI.WebControls.DetailsView> コントロールは、行とそのデータのコントロール フィールドを表示します。 フッターのアイテムはレンダリングされませんこれらのデータ コントロールのフィールド。<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> これらのコントロールでプロパティは無視されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.FooterStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderImageUrl">
      <MemberSignature Language="C#" Value="public virtual string HeaderImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.HeaderImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ コントロールのフィールドのヘッダー項目に表示されるイメージの URL を設定します。</summary>
        <value>ヘッダー項目に表示されるイメージへの完全修飾パスまたは相対 URL を表す文字列、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> プロパティ ヘッダー テキストの代わりにデータ コントロールのヘッダー項目に表示するイメージの場合。  
  
> [!NOTE]
>  両方の <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> と <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> のプロパティを設定、 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> プロパティは、優先順位。  
  
   
  
## 例  
 次のコード例では、宣言して設定、 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ButtonField> 列で、イメージを表示、 <xref:System.Web.UI.WebControls.GridView> ヘッダー テキストの代わりに、コントロールの列ヘッダーです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_3\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_3/CS/datacontrolfield3cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_3\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_3/VB/datacontrolfield3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのデータ フィールドのヘッダーのスタイルを設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> の外観を制御する、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> ヘッダー項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> プロパティから派生した型のヘッダー項目に表示される任意のテキストの外観を制御する <xref:System.Web.UI.WebControls.DataControlField>です。 最も一般的なアプリケーション、 <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> プロパティは、列ヘッダーのスタイルを変更するのには、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
   
  
## 例  
 次のコード例では、宣言して設定、 <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> のプロパティ、 <xref:System.Web.UI.WebControls.HyperLinkField> 内の列ヘッダーの黄色の背景色を表示する列、 <xref:System.Web.UI.WebControls.GridView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_3\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_3/CS/datacontrolfield3cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_3\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_3/VB/datacontrolfield3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ コントロールのフィールドのヘッダー項目に表示されるテキストを設定します。</summary>
        <value>ヘッダー項目に表示される文字列、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> フレンドリ名をデータ コントロール内のフィールドを識別するプロパティです。 最も一般的なアプリケーション、 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> プロパティがデータ バインドのフィールドの意味のある列の名前を指定するには、 <xref:System.Web.UI.WebControls.GridView> または <xref:System.Web.UI.WebControls.DetailsView> コントロールです。  
  
> [!NOTE]
>  両方の <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> と <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> のプロパティを設定、 <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> プロパティは、優先順位。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、宣言して設定、 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> のプロパティ <xref:System.Web.UI.WebControls.BoundField> の列のヘッダーにテキストを表示する列、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 このコード例は、マスター\/詳細シナリオを示して、 <xref:System.Web.UI.WebControls.GridView> コントロールを使用しているときにデータのサブセットを表示、 <xref:System.Web.UI.WebControls.DetailsView> コントロールを使用するさまざまなデータを表示し、新しいレコードを挿入します。 例を使用して 2 つ <xref:System.Web.UI.WebControls.SqlDataSource> コントロール: いずれかを設定する、 <xref:System.Web.UI.WebControls.GridView> コントロールと 1 つを設定する、 <xref:System.Web.UI.WebControls.DetailsView> を制御し、データを挿入します。  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource\_15sql\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource\_15sql\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">コントロールがデータの列の並べ替えをサポートしているかどうかを示す値です。</param>
        <param name="control">所有するデータ コントロール、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</param>
        <summary>データ コントロールのフィールドの基本的なインスタンスの初期化を実行します。</summary>
        <returns>常に <see langword="false" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールを <xref:System.Web.UI.WebControls.DataControlField> オブジェクトが呼び出しに関連付けられた、 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> 行のコレクションに追加される前に、フィールドを初期化します。 などのデータ コントロール <xref:System.Web.UI.WebControls.DetailsView> と <xref:System.Web.UI.WebControls.GridView> を呼び出す、 <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> メソッドにその `CreateChildControls` などその他のメソッド呼び出しの前にメソッド `CreateRow` データを特定の行を作成します。  
  
 カスタムのデータ バインドを記述するときは、このメソッドを制御する呼び出しを使用して <xref:System.Web.UI.WebControls.DataControlFieldCell> オブジェクトのいずれかの基本的な初期化を実行する <xref:System.Web.UI.WebControls.DataControlField> オブジェクトです。 派生型では、その設定の前に、オブジェクトの初期化が必要な場合は、このメソッドを実装 <xref:System.Web.UI.WebControls.DataControlFieldCell> データをオブジェクトまたはコントロールで、 <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public virtual void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> のコントロールまたはテキストを含む、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</param>
        <param name="cellType">
          <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値のいずれか。</param>
        <param name="rowState">いずれか、 <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> を含む行の状態を指定する値、 <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />です。</param>
        <param name="rowIndex">行のインデックスを <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> に含まれています。</param>
        <summary>セルの controls コレクションにテキストやコントロールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生した型 <xref:System.Web.UI.WebControls.DataControlField> 実装、 <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> テキストとコントロールを追加する方法、 <xref:System.Web.UI.WebControls.DataControlFieldCell> ユーザー インターフェイス \(UI\) を表示するテーブルを使用するデータ コントロールに属しているオブジェクト。 これらのデータ コントロール、完全なテーブル構造を作成 1 行ずつと、それぞれ `CreateChildControls` メソッドが呼び出されます。<xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> メソッドは、 `InitializeRow` などのデータのコントロール <xref:System.Web.UI.WebControls.DetailsView> と <xref:System.Web.UI.WebControls.GridView>です。  
  
 カスタムのデータ バインドを記述するときは、このメソッドを制御する呼び出しを使用して <xref:System.Web.UI.WebControls.DataControlFieldCell> データ、またはコントロールにテーブル構造のセルを初期化するためにします。 派生するクラスを記述するときに、このメソッドを実装 <xref:System.Web.UI.WebControls.DataControlField>します。  
  
   
  
## 例  
 次のコード例を実装する方法を示しています、 <xref:System.Web.UI.WebControls.DataControlField.InitializeCell%2A> から派生したコントロールのメソッド、 <xref:System.Web.UI.WebControls.DataControlField> クラスです。`RadioButtonField` クラスのすべての行のデータ バインド オプション ボタンの描画、 <xref:System.Web.UI.WebControls.GridView> コントロールです。 行がユーザーにデータが表示されると、編集モードではないときに、 <xref:System.Web.UI.WebControls.RadioButton> コントロールが無効にします。 行がたとえばの行を更新を選択すると、編集モードにすると、 <xref:System.Web.UI.WebControls.GridView> コントロール、 <xref:System.Web.UI.WebControls.RadioButton> を有効にすると、クリックする操作に応じてコントロールが表示されます。 この例は、行の状態は 1 つまたは複数の組み合わせで可能性があるためにビットごとの AND 演算子を使用して <xref:System.Web.UI.WebControls.DataControlRowState> 値。  
  
 [!code-csharp[Samples.AspNet.RadioButtonField\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.RadioButtonField/CS/radiobuttonfield.cs#3)]
 [!code-vb[Samples.AspNet.RadioButtonField\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.RadioButtonField/VB/radiobuttonfield.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertVisible">
      <MemberSignature Language="C#" Value="public virtual bool InsertVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InsertVisible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 挿入モードが、親データ バインド コントロールの場合は、オブジェクトを表示します。</summary>
        <value>
          <see langword="true" /> 親データ バインド コントロールをレンダリングした場合、フィールドが表示されている場合は挿入モードです。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ バインド コントロールは、現在の表示行の状態が挿入モードには <xref:System.Web.UI.WebControls.DataControlRowState.Insert?displayProperty=fullName>です。  
  
 <xref:System.Web.UI.WebControls.DetailsView> 一連のフィールドを表示する前に、コントロールがこのプロパティの値を確認します。 場合、 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> プロパティは、 `false`, 、 <xref:System.Web.UI.Control.Visible%2A> のプロパティ、 <xref:System.Web.UI.WebControls.DetailsViewRow> にオブジェクトが設定されている `false`します。  
  
 値、 <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトがビュー ステートへ変更を保存します。</summary>
        <value>
          <see langword="true" /> その状態を保存する場合は、データ ソース ビューがマークされています。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ コントロール フィールドによって表示される任意のテキスト ベースのコンテンツのスタイルを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> に表示されるテキストの外観を制御する、 <see cref="T:System.Web.UI.WebControls.DataControlField" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> プロパティから派生した型に表示される任意のテキスト データの外観を制御する <xref:System.Web.UI.WebControls.DataControlField>です。 たとえば、バインド、 <xref:System.Web.UI.WebControls.BoundField> コントロール テキスト データを使用することができます、 <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> 表示されるテキストの外観を変更するプロパティです。  
  
   
  
## 例  
 次のコード例では、宣言して設定、 <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> プロパティを <xref:System.Web.UI.WebControls.BoundField> 表示に使用されるオブジェクト `FirstName` と `LastName` 内のデータ、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。<xref:System.Web.UI.WebControls.DetailsView> コントロールが、 <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> プロパティに設定 `false`, 、によって返されるデータのサブセットを表示できるようにする、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> プロパティです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_1/CS/datacontrolfield1cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_1/VB/datacontrolfield1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.ControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 状態を復元します。</param>
        <summary>データ ソース ビューの以前保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 このメソッドのビュー状態情報を <xref:System.Web.UI.WebControls.DataControlField> によって保存された前のページ要求からのオブジェクト、 <xref:System.Web.UI.WebControls.DataControlField.SaveViewState%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnFieldChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFieldChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFieldChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see langword="FieldChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> メソッドという通知イベントを発生させる、 <xref:System.Web.UI.WebControls.DataControlField> オブジェクトの状態が変化します。 次のプロパティの変更を発生させるには、このイベントが発生: <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>, 、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>, 、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>, 、<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>, 、<xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A>, 、および <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>です。 派生型のプロパティは、状態が変化した場合、このイベントにも発生します。 Web サーバー コントロールをなど <xref:System.Web.UI.WebControls.DetailsView> と <xref:System.Web.UI.WebControls.GridView> 通常、 `DataBind` フィールドへの応答でメソッドがイベントを変更します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>加えられた変更を保存、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 、ページがサーバーにポストされた後の状態を表示します。</summary>
        <returns>変更内容を含むオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 状態を表示します。 このメソッドが戻るかどうかは、オブジェクトに関連付けられているビューステートがない、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ビュー ステートは、サーバー コントロールのプロパティの値を累積したものです。 これらの値が自動的に、サーバー コントロールの配置 <xref:System.Web.UI.Control.ViewState%2A> インスタンスであるプロパティの <xref:System.Web.UI.StateBag> クラスです。 このプロパティの値は、この保存状態のサーバー コントロールのライフ サイクルの段階後も、文字列オブジェクトを永続化します。  
  
 クライアントに HTML に格納されている変数と、文字列が返されますビューステートを保存すると、 `hidden` 要素。 カスタム サーバー コントロールを作成するときに、このメソッドをオーバーライドして、サーバー コントロールを変更する効率を向上できます <xref:System.Web.UI.Control.ViewState%2A> プロパティです。 詳細については、「[View State Overview](http://msdn.microsoft.com/ja-jp/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ コントロールのフィールドのヘッダー項目を表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合のヘッダー項目、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> がレンダリングされた以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> ヘッダー アイテムを表示するかどうかを指定するプロパティ、 <xref:System.Web.UI.WebControls.DataControlField> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソース コントロールでデータの並べ替えに使用される並べ替え式を設定します。</summary>
        <value>データ ソース コントロールでデータを並べ替えるために使用する並べ替え式。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> 状態変更イベントを生成するメソッドが呼び出されたときに、 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> プロパティを設定します。  
  
 値、 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> プロパティはビュー ステートに格納します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> データ コントロールのフィールドに並べ替え式を割り当てるためのプロパティです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_1/CS/datacontrolfield1cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_1/VB/datacontrolfield1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema">
      <MemberSignature Language="C#" Value="object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.IDataSourceViewSchemaAccessor.DataSourceViewSchema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトに関連付けられているスキーマを取得または設定します。</summary>
        <value>この <see cref="T:System.Web.UI.WebControls.DataControlField" /> に関連付けられているスキーマ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトがビュー ステートへ変更を保存します。</summary>
        <value>
          <see langword="true" /> あることを示す、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> が変更を保存するビュー状態以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</param>
        <summary>データ コントロールのフィールドに保存したビューステートを復元します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>加えられた変更を保存、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 、ページがサーバーにポストされた後の状態を表示します。</summary>
        <returns>保存したコントロールのビュー ステートの値を格納している <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 、コントロールの保存できるように、ビュー ステートへの変更を追跡するオブジェクト <see cref="P:System.Web.UI.WebControls.DataControlField.ViewState" /> プロパティと同じページにわたって永続化された要求。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これを表す文字列を返す <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトです。</summary>
        <returns>この <see cref="T:System.Web.UI.WebControls.DataControlField" /> を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは実装の値を返す、 <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> プロパティ、プロパティが設定されている場合。 それ以外の場合、このメソッドは、単にデータ コントロール フィールド \(たとえば、"BoundField"\) の型を表す文字列を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 、コントロールの保存できるように、ビュー ステートへの変更を追跡するオブジェクト <see cref="P:System.Web.UI.WebControls.DataControlField.ViewState" /> プロパティと同じページにわたって永続化された要求。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールがクライアントの入力を検証するかどうかを指定する値を設定します。</summary>
        <value>
          <see langword="true" /> コントロールがクライアントの入力を検証する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public virtual void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、コールバックのサポート フィールドに、コントロールが含まれていることを通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback%2A> メソッドは、ヘルパー メソッドにコントロールが含まれているかどうかを決定するため、 <xref:System.Web.UI.WebControls.DataControlField> サポート コールバック オブジェクトします。 このメソッドの基本実装を実装してスロー、 <xref:System.NotSupportedException> コールバックがサポートされていないことを示す例外です。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">既定のインスタンスのメソッドは、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> クラスです。</exception>
        <block subset="none" type="overrides">
          <para>Classes that derive from the <see cref="T:System.Web.UI.WebControls.DataControlField" /> class can override this method to indicate whether the controls contained by the field support callbacks. To indicate that callbacks are supported, implement this method as an empty method that does not throw an exception; otherwise, throw an exception with a useful message describing why callbacks are not supported.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.AutoGeneratedField.ValidateSupportsCallback" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
        <altmember cref="M:System.Web.UI.WebControls.CheckBoxField.ValidateSupportsCallback" />
        <altmember cref="M:System.Web.UI.WebControls.CommandField.ValidateSupportsCallback" />
        <altmember cref="M:System.Web.UI.WebControls.HyperLinkField.ValidateSupportsCallback" />
        <altmember cref="M:System.Web.UI.WebControls.ImageField.ValidateSupportsCallback" />
        <altmember cref="M:System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback" />
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態情報を保存およびのビューステートを復元できるようにするディクショナリを取得、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> 、同じページに対する複数の要求オブジェクトです。</summary>
        <value>インスタンス <see cref="T:System.Web.UI.StateBag" /> を含む、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> ビュー状態情報。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データは、フィールドの表示状態は、すべてのプロパティの値を累積したものを制御します。 HTTP 要求間でこれらの値を保持するために、ASP.NET サーバー コントロールがインスタンスでは、このプロパティを使用しての <xref:System.Web.UI.StateBag> クラスにプロパティ値を格納します。 値は、後続の要求が処理されるときに、変数として HTML の非表示入力要素に渡されます。 サーバー コントロールのビューステートを保存する方法の詳細については、次を参照してください。 [View State Overview](http://msdn.microsoft.com/ja-jp/19d2a6ed-9a77-4c7c-a7f5-74dd4b6c3818)します。  
  
 既定では、すべてのサーバー コントロールのビュー ステートが有効になっているな場合がありますを無効にします。 詳細については、「[Performance Overview](http://msdn.microsoft.com/ja-jp/f882bf1b-a009-4312-ac06-74370ffabc0b)」を参照してください。  
  
 ディクショナリとその使用方法の詳細については、次を参照してください。 [Grouping Data in Collections](http://msdn.microsoft.com/ja-jp/60cc581f-1db5-445b-ba04-a173396bf872)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataControlField.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataControlField.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータのコントロール フィールドを表示するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.DataControlField" /> がレンダリングされた以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> プロパティを表示または非表示に <xref:System.Web.UI.WebControls.DataControlField> データ バインド コントロール内のオブジェクト。  
  
 場合は、 <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> プロパティは、 `false`, 、データ値が表示されず、クライアントへのラウンド トリップがしないでください。 場合ラウンドト リップにデータが表示されていないフィールドに対して、追加、フィールド名を `DataKeyNames` データ バインド コントロールのプロパティです。  
  
   
  
## 例  
 次のコード例では、使用して <xref:System.Web.UI.WebControls.BoundField> と <xref:System.Web.UI.WebControls.ButtonField> から派生したオブジェクト <xref:System.Web.UI.WebControls.DataControlField>, 、内の行を表示する、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。<xref:System.Web.UI.WebControls.DataControlField.Visible%2A> のプロパティ、 <xref:System.Web.UI.WebControls.BoundField> を表示するオブジェクト、 `EmployeeID` に設定されている列 `false`, 、によって、列は表示されませんし、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataControlField\_2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_2/CS/datacontrolfield2cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataControlField\_2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataControlField_2/VB/datacontrolfield2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>