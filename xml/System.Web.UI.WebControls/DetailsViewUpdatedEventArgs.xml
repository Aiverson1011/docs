<Type Name="DetailsViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.DetailsViewUpdatedEventArgs">
  <TypeSignature Language="C#" Value="public class DetailsViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event when an Update button \(a button with its **languageKeyword tag is not supported!!!!**  
 property set to "Update"\) within the control is clicked, but after the <xref:System.Web.UI.WebControls.DetailsView> control updates the record. This allows you to provide an event handler that performs a custom routine, such as checking the results of an update operation, whenever this event occurs.  
  
 A <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> object is passed to the event handler, which allows you to determine the number of records affected and any exceptions that might have occurred. To determine the number of records affected by the update operation, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> property. Use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> property to determine whether any exceptions occurred. You can also indicate whether the exception was handled in the event handler by setting the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> property. If you need to access the key field values for the updated record, use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> property. The original and updated non\-key field values can be accessed using the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> and <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> properties, respectively.  
  
 By default, the <xref:System.Web.UI.WebControls.DetailsView> control returns to the mode specified by the <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> property after an update operation. To keep the <xref:System.Web.UI.WebControls.DetailsView> control in edit mode, set the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> property to **languageKeyword tag is not supported!!!!**  
.  
  
 For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> class, see the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.%23ctor%2A> constructor.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemUpdated> event to determine whether an exception occurred during an update operation.  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Update 操作によって影響を受けた行の数。</param>
        <param name="e">
          <see cref="T:System.Exception" /> を表す更新操作が実行されたときに発生する例外です。 例外が発生しなかった場合に使用して <see langword="null" /> このパラメーターにします。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> クラスです。  
  
 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs> クラスのインスタンスのプロパティの初期値を次の表に示します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A>|`affectedRows` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=fullName> オブジェクトに含まれている、 `e` パラメーター。|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A>|初期化 `false`します。|  
|<xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A>|初期化 `false`します。|  
  
> [!NOTE]
>  イベント発生時に、このコンス トラクターは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Update 操作によって影響を受けた行の数を取得します。</summary>
        <value>Update 操作によって影響を受けた行の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> update 操作によって影響を受けた行の数を決定するプロパティです。 この値は行の適切な数が更新されたことを確認するよく使用します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows%2A> プロパティを update 操作によって影響を受けた行の数を決定します。  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>例外を取得します \(存在する場合\) が更新操作中に発生しました。</summary>
        <value>
          <see cref="T:System.Exception" /> を表す更新操作中に発生した例外。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> プロパティ \(存在する場合\)、例外を更新操作中に発生しました。 このプロパティの取得のかどうかは例外が発生しなかった、 `null`です。  
  
> [!NOTE]
>  例外が発生しました、イベント ハンドラーで例外を処理する場合は、必ず設定して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを `true`。 そうしないと、処理のため呼び出し履歴上、例外が次のメソッドに渡されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> プロパティを更新操作中に例外が発生したかどうかを確認します。  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または更新操作中に発生した例外が、イベント ハンドラーで処理されたかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 例外が処理された場合、イベント ハンドラーです。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生すると、更新操作中を使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを例外が、イベント ハンドラーで処理されたかどうかを示します。 このプロパティに設定すると `true`, 、例外が処理され、呼び出しスタックの上位が渡されないと見なされます。 このプロパティ設定されている場合 `false`, 、渡された例外次のメソッドに呼び出し履歴上の処理です。 どの例外が発生したかを確認するを使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.ExceptionHandled%2A> プロパティを例外が、イベント ハンドラーで処理されたことを示します。  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.DetailsView" /> コントロールを更新操作の後の編集モードのままです。</summary>
        <value>
          <see langword="true" /> 更新操作の後に編集モードのままにするそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Web.UI.WebControls.DetailsView> で指定されたモードに制御が戻ります、 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> 更新操作の後のプロパティです。 使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> プロパティを指定するかどうか、 <xref:System.Web.UI.WebControls.DetailsView> コントロールが編集モードで維持する必要があります。 保持する、 <xref:System.Web.UI.WebControls.DetailsView> 編集モードでコントロールをこのプロパティを設定 `true`します。  
  
> [!NOTE]
>  特定の場合に、既定のモードを無効にする場合、このプロパティを使用する必要があります。 場合、 <xref:System.Web.UI.WebControls.DetailsView> コントロールが編集モードのままに既定では、設定する必要がある、 <xref:System.Web.UI.WebControls.DetailsView.DefaultMode%2A> プロパティ代わりにします。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.KeepInEditMode%2A> を保持するプロパティ、 <xref:System.Web.UI.WebControls.DetailsView> 更新操作の後の編集モードで制御します。  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新されたレコードのキー フィールドの名前\/値ペアを格納しているディクショナリを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> に更新されたレコードのキー フィールドの名前\/値ペアのディクショナリが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> プロパティを更新されたレコードのキー フィールドの値にアクセスします。 たとえば、更新されたレコードのログを保持するのにこれらの値を使用できます。  
  
 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> プロパティを実装するオブジェクトを返す、 <xref:System.Collections.Specialized.IOrderedDictionary> インターフェイスです。 オブジェクトに含まれる <xref:System.Collections.DictionaryEntry> 更新されたレコードのフィールドを表すオブジェクト。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.IOrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.Keys%2A> プロパティを更新されたレコードのキー フィールドの値にアクセスします。  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新されたレコードの新しいフィールドの名前\/値ペアを格納しているディクショナリを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> に更新されたレコードの新しいフィールドの名前\/値ペアのディクショナリが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> プロパティを更新されたレコードの新しいフィールド値にアクセスします。 たとえば、更新されたレコードのログを保持するのにこれらの値を使用できます。  
  
 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> プロパティを実装するオブジェクトを返す、 <xref:System.Collections.Specialized.IOrderedDictionary> インターフェイスです。 オブジェクトに含まれる <xref:System.Collections.DictionaryEntry> 更新されたレコードのフィールドを表すオブジェクト。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.IOrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.NewValues%2A> 更新されたレコードの非キー フィールドについて、ユーザーが入力した新しい値にアクセスするプロパティです。  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新されたレコードの元のフィールドの名前\/値ペアを格納しているディクショナリを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> に更新されたレコードの元のフィールドの名前\/値ペアのディクショナリが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> 更新されたレコードの元のフィールド値にアクセスするプロパティです。 たとえば、更新されたレコードのログを保持するのにこれらの値を使用できます。  
  
 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> プロパティを実装するオブジェクトを返す、 <xref:System.Collections.Specialized.IOrderedDictionary> インターフェイスです。 オブジェクトに含まれる <xref:System.Collections.DictionaryEntry> 更新されたレコードのフィールドを表すオブジェクト。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.IOrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DetailsViewUpdatedEventArgs.OldValues%2A> 更新されたレコードの非キー フィールドの元の値にアクセスするプロパティです。  
  
 [!code-csharp[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/CS/detailsviewupdatedeventargscs.aspx#1)]
 [!code-vb[DetailsViewUpdatedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewUpdatedEventArgs/VB/detailsviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>