<Type Name="ListItemControlBuilder" FullName="System.Web.UI.WebControls.ListItemControlBuilder">
  <TypeSignature Language="C#" Value="public class ListItemControlBuilder : System.Web.UI.ControlBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListItemControlBuilder extends System.Web.UI.ControlBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListItemControlBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ControlBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>作成するパーサーの対話、 <see cref="T:System.Web.UI.WebControls.ListItem" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、主にコントロールの開発者に使用されます。 カスタム コントロールのビルダーを作成する、 <xref:System.Web.UI.WebControls.ListItem> 派生コントロールでは、このクラスから継承する必要があります。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListItem" />
    <altmember cref="T:System.Web.UI.ControlBuilderAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListItemControlBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListItemControlBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListItemControlBuilder" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowWhitespaceLiterals">
      <MemberSignature Language="C#" Value="public override bool AllowWhitespaceLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AllowWhitespaceLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListItemControlBuilder.AllowWhitespaceLiterals" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキスト内の空白文字に関連付けられているかどうかを判断、 <see cref="T:System.Web.UI.WebControls.ListItem" /> によって表される <see cref="T:System.Web.UI.LiteralControl" /> オブジェクトです。</summary>
        <returns>
          <see langword="false" /> すべての場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの継承の実装をオーバーライドして、 <xref:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals%2A?displayProperty=fullName> を常に、テキスト内の空白文字に関連付けられていることを示す、 <xref:System.Web.UI.WebControls.ListItem> でコントロールは表されない <xref:System.Web.UI.LiteralControl?displayProperty=fullName> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecodeLiterals">
      <MemberSignature Language="C#" Value="public override bool HtmlDecodeLiterals ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HtmlDecodeLiterals() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListItemControlBuilder.HtmlDecodeLiterals" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>テキストに HTML エンティティに関連付けられているかどうかを判断、 <see cref="T:System.Web.UI.WebControls.ListItem" /> テキストの解析とそれらと同等の文字に変換されます。</summary>
        <returns>
          <see langword="true" /> すべての場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListItemControlBuilder.HtmlDecodeLiterals%2A> テキストに HTML エンティティに関連付けられているかどうかを判断するメソッドが使用される、 <xref:System.Web.UI.WebControls.ListItem> テキストの解析とそれらと同等の文字に変換されます。 このメソッドの継承の実装をオーバーライドして、 <xref:System.Web.UI.ControlBuilder.HtmlDecodeLiterals%2A?displayProperty=fullName> メソッドは、常に返す `true`します。 これは、テキストに HTML エンティティに関連付けられていることを示します、 <xref:System.Web.UI.WebControls.ListItem> コントロールは常に自動的に、それと同等のプレーン テキストの文字に変換します。  
  
> [!NOTE]
>  関連付けられたテキスト、 <xref:System.Web.UI.WebControls.ListItem> の属性としてレンダリングされますが、 `<option>` HTML 要素です。 属性がクライアントに表示されると、特殊文字は、対応する HTML エンティティを自動的に変換されます。 小なり \(\<\) 文字の変換など `&lt;`します。 属性が解析されたときに HTML エンティティが自動的に、それと同等のプレーン テキストの文字に変換されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.HtmlDecodeLiterals" />
      </Docs>
    </Member>
  </Members>
</Type>