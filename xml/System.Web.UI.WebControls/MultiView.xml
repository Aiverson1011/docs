<Type Name="MultiView" FullName="System.Web.UI.WebControls.MultiView">
  <TypeSignature Language="C#" Value="public class MultiView : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultiView extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.MultiView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ActiveViewChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.MultiViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.MultiViewControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(typeof(System.Web.UI.WebControls.View))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:MultiView runat="server"&gt;&lt;/{0}:MultiView&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.View" /> コントロールのグループのコンテナーの役割を果たすコントロールを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.MultiView> コントロールは、コンテナーのグループに対して <xref:System.Web.UI.WebControls.View> コントロールです。 グループを定義することができます <xref:System.Web.UI.WebControls.View> コントロール、ここで各 <xref:System.Web.UI.WebControls.View> コントロールに子コントロールが含まれています。 アプリケーションは、特定、レンダリング <xref:System.Web.UI.WebControls.View> クエリ文字列パラメーターで渡されるユーザー id、ユーザー設定、および情報などの条件に基づいて、クライアントに制御します。 使用することも、 <xref:System.Web.UI.WebControls.MultiView> ウィザードを作成するコントロール。 このシナリオで各 <xref:System.Web.UI.WebControls.View> 内に含まれるコントロール、 <xref:System.Web.UI.WebControls.MultiView> コントロールは、異なるステップまたはウィザードのページを表します。 このコントロールを使用して、モバイル デバイス用の複数画面アプリケーションを開発する必要があります。 このコントロールは、同じ ASP.NET モバイル機能を提供します。 <xref:System.Web.UI.MobileControls.Form> .NET Framework version 1.1 で制御します。  
  
 1 つだけ <xref:System.Web.UI.WebControls.View> 内でアクティブなビューとして定義できるコントロールを時、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 ときに、 <xref:System.Web.UI.WebControls.View> コントロールがアクティブなビューとして定義されている、それに含まれる子コントロールがクライアントに表示されます。 使用するか、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティまたは <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> をアクティブなビューを定義するためです。 場合、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティが空で、 <xref:System.Web.UI.WebControls.MultiView> コントロールがクライアントにコンテンツを表示できません。 アクティブなビューに設定されている場合、 <xref:System.Web.UI.WebControls.View> 内に存在しないこと、 <xref:System.Web.UI.WebControls.MultiView> コントロール、 <xref:System.ArgumentOutOfRangeException> が実行時に発生します。  
  
 宣言またはプログラムによっては、アクティブなビューを定義できます。 設定、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティ宣言を定義するとき、 <xref:System.Web.UI.WebControls.MultiView> 原因の制御、 <xref:System.Web.UI.WebControls.View> クライアント、初めてにレンダリングするアクティブなビューとして設定されているコントロール、 <xref:System.Web.UI.WebControls.MultiView> コントロールが呼び出されます。 次のコード例では、設定、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティ宣言します。  
  
```  
<asp:MultiView id="MultiView1" ActiveViewIndex=0 runat="Server">   
```  
  
 設定、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティ プログラムを使用して、またはを呼び出して、 <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> メソッドを決定するためのアプリケーションを使用して <xref:System.Web.UI.WebControls.View> ユーザーの個人情報や設定などの条件に基づいて実行時に、クライアントにレンダリングするコントロール。  
  
 間を移動できるようにする <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> コントロールを追加できます、 <xref:System.Web.UI.WebControls.LinkButton> または <xref:System.Web.UI.WebControls.Button> コントロールをそれぞれ <xref:System.Web.UI.WebControls.View> コントロールです。 活用するために、 <xref:System.Web.UI.WebControls.MultiView> 現在作業中の自動更新をコントロールの <xref:System.Web.UI.WebControls.View>, 、設定、 `CommandName` ボタンまたはリンク ボタンの目的のナビゲーションの動作に対応する次のコマンド名フィールドのいずれかの値のプロパティ: <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName>, 、<xref:System.Web.UI.WebControls.MultiView.NextViewCommandName>, 、<xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName>, 、または <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName>です。  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:MultiView  
    ActiveViewIndex="integer"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnActiveViewChanged="ActiveViewChanged event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
            <asp:TemplatedWizardStep  
                AllowReturn="True|False"  
                ContentTemplateContainer="string"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                StepType="Auto|Complete|Finish|Start|Step"  
                Title="string"  
                Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
            </asp:TemplatedWizardStep>  
            <asp:View  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                Visible="True|False"  
            />  
            <asp:WizardStep  
                AllowReturn="True|False"  
                EnableTheming="True|False"  
                EnableViewState="True|False"  
                ID="string"  
                OnActivate="Activate event handler"  
                OnDataBinding="DataBinding event handler"  
                OnDeactivate="Deactivate event handler"  
                OnDisposed="Disposed event handler"  
                OnInit="Init event handler"  
                OnLoad="Load event handler"  
                OnPreRender="PreRender event handler"  
                OnUnload="Unload event handler"  
                runat="server"  
                SkinID="string"  
                StepType="Auto|Complete|Finish|Start|Step"  
                Title="string"  
                Visible="True|False"  
            />  
</asp:MultiView>  
```  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.MultiView> 基本的なアンケートを作成するコントロール。 各 <xref:System.Web.UI.WebControls.View> コントロールが別のアンケート質問します。 ユーザーがクリックしたとき、 **前** \] ボタンをクリックして任意のページで、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティは、前に移動するデクリメント <xref:System.Web.UI.WebControls.View> コントロールです。 ユーザーがクリックしたとき、 **次** 、ページ上のボタン、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> を移動するプロパティがインクリメントされます <xref:System.Web.UI.WebControls.View> コントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用し、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.ActiveViewIndex Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/cs/multiviewactiveviewindexcs.aspx#1)]
 [!code-vb[MultiView.ActiveViewIndex Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/VB/multiviewactiveviewindexvb.aspx#1)]  
  
 次のコード例では、基本的な作成 <xref:System.Web.UI.WebControls.MultiView> 3 種類を含むコントロール <xref:System.Web.UI.WebControls.View> コントロールです。 ユーザーがリスト ボックスから選択したビューがアクティブなビューに設定され、ユーザーに表示されます。 より詳細な例については、 <xref:System.Web.UI.WebControls.MultiView> を制御し、このトピックで、他のコード例を参照してください。  
  
 [!code-vb[MultiView Class Example 2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example 2/VB/multiviewclass2vb.aspx#1)]  
  
 次のコード例では、作成、 <xref:System.Web.UI.WebControls.MultiView> 3 種類を含むコントロール <xref:System.Web.UI.WebControls.View> コントロールです。 A <xref:System.Web.UI.WebControls.View> コントロールにスタイル プロパティがありません。 そのため、各 <xref:System.Web.UI.WebControls.View> コントロールに含まれる、 <xref:System.Web.UI.WebControls.Panel> コントロールに設定するスタイルをできるように、 <xref:System.Web.UI.WebControls.View> コントロールです。 初めてページが読み込まれる、 `DefaultView` を使用して、アクティブなビューとして設定されている、 <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> メソッドです。 各 <xref:System.Web.UI.WebControls.View> コントロールには、さまざまなビューに移動するユーザーを許可するようにリンク ボタンが含まれています。  
  
 [!code-vb[MultiView Class Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.View" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.MultiView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.MultiView> クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ActiveViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ActiveViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、アクティブな <see cref="T:System.Web.UI.WebControls.View" /> の制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> サーバーへのポスト間での変更を制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> イベントが発生したときに、アクティブな <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> サーバーへのポスト間での変更を制御します。  
  
 イベント処理の詳細については、「[How to: Consume Events in a Web Forms Application](http://msdn.microsoft.com/ja-jp/73bf8638-c4ec-4069-b0bb-a1dc79b92e32)」を参照してください。  
  
   
  
## 例  
 指定して、コードのイベント ハンドラーを次の例には、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> のイベント、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 アクティブなビューの変更、メッセージが表示される場合に、 <xref:System.Web.UI.WebControls.Label> ページ上のコントロールです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.ActiveViewChanged Event Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-vb[MultiView.ActiveViewChanged Event Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveViewIndex">
      <MemberSignature Language="C#" Value="public virtual int ActiveViewIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveViewIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクティブなインデックス取得または設定 <see cref="T:System.Web.UI.WebControls.View" /> 内で制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <value>作業中の 0 から始まるインデックス <see cref="T:System.Web.UI.WebControls.View" /> 内で制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。 既定値は\-1 で、あるビューが設定されていないアクティブな状態で示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティを設定、 <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> はアクティブなビューと同様に制御します。 インデックスを返す、このプロパティを使用することもできます。、 <xref:System.Web.UI.WebControls.View> はアクティブなビューとして設定されているコントロール。 インデックス、 <xref:System.Web.UI.WebControls.View> コントロールはその内で宣言された順序によって決まる、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 たとえば、1 つ目 <xref:System.Web.UI.WebControls.View> 内で宣言されたコントロール、 <xref:System.Web.UI.WebControls.MultiView> コントロールが 0 のインデックス。  
  
 1 つだけ <xref:System.Web.UI.WebControls.View> 一度にコントロールは内でアクティブとして定義できる、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。<xref:System.Web.UI.WebControls.View> に設定されているコントロール、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティは、クライアントに表示されます。 場合、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティに設定されて、 <xref:System.Web.UI.WebControls.View> 内に存在しないこと、 <xref:System.Web.UI.WebControls.MultiView> コントロール、 <xref:System.ArgumentOutOfRangeException> が実行時に発生します。 プロパティが空である場合、 <xref:System.Web.UI.WebControls.MultiView> コントロールがクライアントにコンテンツを表示できません。  
  
 設定することができます、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティは開発時に宣言的、または実行時にプログラムを使用しています。 設定、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティ宣言を定義するとき、 <xref:System.Web.UI.WebControls.MultiView> 原因の制御、 <xref:System.Web.UI.WebControls.View> クライアント、初めてにレンダリングするアクティブなビューとして設定されているコントロール、 <xref:System.Web.UI.WebControls.MultiView> コントロールが呼び出されます。 設定、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティは、プログラムで判断するためにアプリケーションを許可 <xref:System.Web.UI.WebControls.View> ユーザーの個人情報や、設定などの条件に基づいて実行時に、クライアントにレンダリングするコントロール。  
  
 また、使用することができます、 <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> と <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> 内でアクティブなビューを取得または設定する方法、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.MultiView> 基本的なアンケートを作成するコントロール。 各 <xref:System.Web.UI.WebControls.View> コントロールが別のアンケート質問します。 ユーザーがクリックしたとき、 **前** \] ボタンをクリックして任意のページで、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティは、前に移動するデクリメント <xref:System.Web.UI.WebControls.View> コントロールです。 ユーザーがクリックしたとき、 **次** 、ページ上のボタン、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> を移動するプロパティがインクリメントされます <xref:System.Web.UI.WebControls.View> コントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.ActiveViewIndex Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/cs/multiviewactiveviewindexcs.aspx#1)]
 [!code-vb[MultiView.ActiveViewIndex Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewIndex Example/VB/multiviewactiveviewindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したインデックスでは、\-1 より小さくするかより大きい、あるいは項目の数を一覧に設定されました。</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.AddParsedSubObject(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> 解析された要素を表します。</param>
        <summary>通知、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールで、XML または HTML 要素が解析された要素を追加、 <see cref="T:System.Web.UI.WebControls.ViewCollection" /> のコレクション、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドだけに許可するように基本クラス実装をオーバーライドして <xref:System.Web.UI.WebControls.View> に追加するコントロール、 <xref:System.Web.UI.WebControls.ViewCollection>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">指定した <see cref="T:System.Object" /> は、 <see cref="T:System.Web.UI.WebControls.View" /> コントロールです。</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Web.UI.ControlCollection" /> のコントロールの子を保持する、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.ViewCollection" /> を格納する、 <see cref="T:System.Web.UI.WebControls.View" /> 、現在のコントロール <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、常に基本実装をオーバーライドする <xref:System.Web.UI.WebControls.ViewCollection> を格納する、 <xref:System.Web.UI.WebControls.View> 、現在のコントロール <xref:System.Web.UI.WebControls.MultiView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="T:System.Web.UI.WebControls.ViewCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にテーマを適用するかどうかを示す値、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <value>
          <see langword="true" /> テーマが使用する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> プロパティは、テーマが有効になっているかどうかを示す、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。<xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> プロパティに含まれるコントロールのテーマが有効になっているかどうかにも影響、 <xref:System.Web.UI.Control.Controls%2A> コレクションです。 ときに、 <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> プロパティは、 `true`, 、コントロール スキンを適用するテーマのアプリケーションのディレクトリが検索されます。 テーマ ディレクトリに特定のコントロールのスキンが存在しない場合、スキンは適用されません。 ときに、 <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> プロパティは、 `false`, 、テーマ ディレクトリは検索されませんおよびの内容、 <xref:System.Web.UI.Control.SkinID%2A> プロパティは使用されません。  
  
 オーバーライド、 <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> 値の親コントロールまたはコントロールを含むページで設定します。 などの場合、 <xref:System.Web.UI.WebControls.MultiView> コントロールが <xref:System.Web.UI.WebControls.MultiView.EnableTheming%2A> に設定 `false`, 、個別にテーマを選択的に適用できます <xref:System.Web.UI.WebControls.View> に含まれるコントロール、 <xref:System.Web.UI.WebControls.MultiView> コントロールを設定して、 <xref:System.Web.UI.Control.EnableTheming%2A> プロパティを `true` 個々 の子コントロールにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActiveView">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.View GetActiveView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.View GetActiveView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在アクティブなを返す <see cref="T:System.Web.UI.WebControls.View" /> 内で制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.View" /> 内でアクティブなビューを表すコントロール、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、 <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> はアクティブなビューとして設定されているコントロール。 このメソッドが戻る、 <xref:System.Web.UI.WebControls.View> を制御し、アクティブなビューのプロパティにアクセスするために使用できます。 たとえば、 `MultiView1.GetActiveView.ID` の値を返す、 <xref:System.Web.UI.Control.ID%2A> MultiView1 で現在アクティブなビューのプロパティです。  
  
 また、使用することができます、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティを取得または設定の現在のアクティブなビューの 0 から始まるインデックス、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 このプロパティは、宣言やプログラムによってアクセスできます。  
  
   
  
## 例  
 次の例では、作成、 <xref:System.Web.UI.WebControls.MultiView> 3 種類を含むコントロール <xref:System.Web.UI.WebControls.View> コントロールです。 ときに、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> イベントは、 <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> メソッドは、現在アクティブなビューを取得して表示で使用、 <xref:System.Web.UI.WebControls.Label> ページ上のコントロールです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.ActiveViewChanged Event Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-vb[MultiView.ActiveViewChanged Event Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <see cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" /> を有効なプロパティが設定されていない <see cref="T:System.Web.UI.WebControls.View" /> 内で制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</exception>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Object" /> の状態を表す、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</param>
        <summary>現在の状態を読み込み、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextViewCommandName">
      <MemberSignature Language="C#" Value="public static readonly string NextViewCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string NextViewCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>次に関連付けられているコマンドの名前を表す <see cref="T:System.Web.UI.WebControls.View" /> で表示するコントロール、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> "NextView"コマンド名を表すフィールドです。  
  
 このフィールドの値を使用するには活用するために、 <xref:System.Web.UI.WebControls.MultiView> 作業中の自動更新をコントロールの <xref:System.Web.UI.WebControls.View> コントロールです。 などの場合、 <xref:System.Web.UI.WebControls.View> コントロールに含まれる、 <xref:System.Web.UI.WebControls.Button> に、前に移動するコントロール <xref:System.Web.UI.WebControls.View>, 、設定することができます、 <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値を <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> "NextView"であるフィールドです。 これにより、 <xref:System.Web.UI.WebControls.MultiView> の値を自動的に下げるには、コントロール、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティ、ボタンがクリックされたとき。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.MultiView> 基本的なアンケートを作成するコントロール。 各 <xref:System.Web.UI.WebControls.View> コントロールが別のアンケート質問します。<xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> と <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> 前または次の間で自動ナビゲーションを提供に使用されるフィールド <xref:System.Web.UI.WebControls.View> 、アンケートのコントロールです。  
  
 [!code-csharp[MultiView.NextViewCommandName\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-vb[MultiView.NextViewCommandName\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="OnActiveViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" /> のイベント、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> イベントが発生したときに、アクティブな <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> コントロールが、サーバーへのポスト間で変更し、このイベントのカスタム ハンドラーを渡すことができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「[How to: Consume Events in a Web Forms Application](http://msdn.microsoft.com/ja-jp/73bf8638-c4ec-4069-b0bb-a1dc79b92e32)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.MultiView.OnActiveViewChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 指定して、コードのイベント ハンドラーを次の例には、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewChanged> のイベント、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 アクティブなビューの変更、メッセージが表示される場合に、 <xref:System.Web.UI.WebControls.Label> ページ上のコントロールです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.ActiveViewChanged Event Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/cs/multiviewactiveviewchangedeventcs.aspx#1)]
 [!code-vb[MultiView.ActiveViewChanged Event Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.ActiveViewChanged Event Example/VB/multiviewactiveviewchangedeventvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.MultiView.OnActiveViewChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.MultiView.ActiveViewChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>決定するかどうかのイベント、 <see cref="T:System.Web.UI.WebControls.MultiView" /> ページの UI のサーバー コントロールの階層に制御が渡されます。</summary>
        <returns>イベントがキャンセルされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.UI.WebControls.MultiView> コントロールに含まれる <xref:System.Web.UI.WebControls.View> イベントを発生させるコントロールです。 このメソッドの間のナビゲーションを処理する基本実装をオーバーライドして <xref:System.Web.UI.WebControls.View> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールを見つけられない、 <see cref="T:System.Web.UI.WebControls.View" /> で指定されている、 <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> の <paramref name="e" />です。</exception>
        <exception cref="T:System.FormatException">
          <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> の <paramref name="e" /> 整数として解析できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されたら、 <xref:System.Web.UI.WebControls.MultiView> コントロールを作成し、インスタンスを設定するために必要な初期化の手順を実行する必要があります。 サーバー コントロールのライフ サイクルのこの段階で、コントロールのビュー ステートを設定する必要があります。 このコントロールの親または子である場合でも、このメソッドが呼び出されると、別のサーバー コントロールをアクセスすることはできません。 その他のサーバー コントロールの作成、アクセスの準備が完了するではありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousViewCommandName">
      <MemberSignature Language="C#" Value="public static readonly string PreviousViewCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string PreviousViewCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以前に関連付けられているコマンドの名前を表す <see cref="T:System.Web.UI.WebControls.View" /> で表示するコントロール、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> "PrevView"コマンド名を表すフィールドです。  
  
 このフィールドの値を使用するには活用するために、 <xref:System.Web.UI.WebControls.MultiView> 作業中の自動更新をコントロールの <xref:System.Web.UI.WebControls.View> コントロールです。 たとえば場合、 <xref:System.Web.UI.WebControls.View> コントロールに含まれる、 <xref:System.Web.UI.WebControls.Button> へ移動する <xref:System.Web.UI.WebControls.View>, 、設定することができます、 <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値を <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> "PrevView"であるフィールドです。 これにより、 <xref:System.Web.UI.WebControls.MultiView> の値を自動的にインクリメントする制御、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティ ボタンをクリックするとします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.MultiView> 基本的なアンケートを作成するコントロール。 各 <xref:System.Web.UI.WebControls.View> コントロールが別のアンケート質問します。<xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> と <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> 前または次の間で自動ナビゲーションを提供に使用されるフィールド <xref:System.Web.UI.WebControls.View> 、アンケートのコントロールです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.NextViewCommandName\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-vb[MultiView.NextViewCommandName\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="RemovedControl">
      <MemberSignature Language="C#" Value="protected override void RemovedControl (System.Web.UI.Control ctl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RemovedControl(class System.Web.UI.Control ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.RemovedControl(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="ctl">
          <see cref="T:System.Web.UI.WebControls.View" /> が取り外されているコントロール。</param>
        <summary>後に呼び出される、 <see cref="T:System.Web.UI.WebControls.View" /> からコントロールが削除された、 <see cref="P:System.Web.UI.Control.Controls" /> のコレクション、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Control.RemovedControl%2A> 直後後にメソッドが呼び出される、 <xref:System.Web.UI.WebControls.View> からコントロールが削除された、 <xref:System.Web.UI.Control.Controls%2A> のコレクション、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>書き込み、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールの内容を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> クライアントに表示するためのオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.MultiView.Render%2A> からカスタム クラスを派生させる際に、主にコントロールの開発者によってメソッドが使用される、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。  
  
 <xref:System.Web.UI.WebControls.MultiView.Render%2A> メソッドは、指定されたを使用してクライアントをアクティブなビュー、レンダリングされたコンテンツを書き込みます <xref:System.Web.UI.HtmlTextWriter>します。 アクティブなビューを設定することができます、 <xref:System.Web.UI.WebControls.MultiView> 制御を使用して、 <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> メソッドまたは <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティです。 うち、どれを指定できます、 <xref:System.Web.UI.WebControls.View> コントロールで、 <xref:System.Web.UI.WebControls.MultiView.Views%2A> コレクションには、アクティブなビューがある場合、いずれかを使用して、 <xref:System.Web.UI.WebControls.MultiView.GetActiveView%2A> メソッドまたは <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティです。  
  
 アクティブなビューを設定した場合、 <xref:System.Web.UI.WebControls.MultiView> を制御する、アクティブな <xref:System.Web.UI.WebControls.View> コントロールを使用して、そのビューとその子コントロールのコンテンツを表示します。 アクティブなビューが設定されていない場合、 <xref:System.Web.UI.WebControls.MultiView> コントロール、コンテンツを表示なしに、 <xref:System.Web.UI.HtmlTextWriter>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の状態を保存、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <returns>
          <see cref="T:System.Object" /> の状態を表す、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。 関連付けられている状態がないかどうか、 <see cref="T:System.Web.UI.WebControls.MultiView" /> を制御するこのメソッドが戻る <see langword="null" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActiveView">
      <MemberSignature Language="C#" Value="public void SetActiveView (System.Web.UI.WebControls.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetActiveView(class System.Web.UI.WebControls.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.MultiView.SetActiveView(System.Web.UI.WebControls.View)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="System.Web.UI.WebControls.View" />
      </Parameters>
      <Docs>
        <param name="view">A <see cref="T:System.Web.UI.WebControls.View" /> 内でアクティブなビューとして設定するコントロール、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.WebControls.View" /> 内でアクティブなビューへのコントロール、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、設定、 <xref:System.Web.UI.WebControls.View> 内で制御、 <xref:System.Web.UI.WebControls.MultiView> はアクティブなビューと同様に制御します。 1 つだけ <xref:System.Web.UI.WebControls.View> 一度にコントロールは内でアクティブとして定義できる、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。<xref:System.Web.UI.WebControls.View> はアクティブなビューがクライアントにレンダリングされるように設定されているコントロール。 場合、 <xref:System.Web.UI.WebControls.View> 内に存在しないコントロール、 <xref:System.Web.UI.WebControls.MultiView> コントロールをアクティブとして設定されて、実行時に、例外が発生します。 ない場合 <xref:System.Web.UI.WebControls.View> コントロールがアクティブなビューとして設定されて、 <xref:System.Web.UI.WebControls.MultiView> コントロールがクライアントにコンテンツを表示できません。  
  
 使用して、 <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> プログラムではアクティブなビューを設定するメソッドを使用して、アプリケーションを決定する <xref:System.Web.UI.WebControls.View> ユーザーの id と基本設定などの条件に基づいて実行時に、クライアントにレンダリングするコントロール。  
  
 また、使用することができます、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティを取得または設定の現在のアクティブなビューの 0 から始まるインデックス、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。 このプロパティは、宣言やプログラムによってアクセスできます。  
  
   
  
## 例  
 次の例では、作成、 <xref:System.Web.UI.WebControls.MultiView> 3 種類を含むコントロール <xref:System.Web.UI.WebControls.View> コントロールです。 初めてページが読み込まれる、 `DefaultView` を使用して、アクティブなビューとして設定されている、 <xref:System.Web.UI.WebControls.MultiView.SetActiveView%2A> メソッドです。 各 <xref:System.Web.UI.WebControls.View> コントロールには、さまざまなビューに移動するユーザーを許可するようにリンク ボタンが含まれています。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-vb[MultiView Class Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView Class Example/VB/multiviewclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">指定した <paramref name="view" /> にパラメーター値が含まれていない、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</exception>
        <altmember cref="P:System.Web.UI.WebControls.MultiView.ActiveViewIndex" />
        <altmember cref="M:System.Web.UI.WebControls.MultiView.GetActiveView" />
        <altmember cref="T:System.Web.UI.WebControls.View" />
      </Docs>
    </Member>
    <Member MemberName="SwitchViewByIDCommandName">
      <MemberSignature Language="C#" Value="public static readonly string SwitchViewByIDCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SwitchViewByIDCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>作業中の変更に関連付けられているコマンドの名前を表す <see cref="T:System.Web.UI.WebControls.View" /> の制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> に基づいて、指定したコントロール <see cref="T:System.Web.UI.WebControls.View" /> id。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> "SwitchViewByID"コマンド名を表すフィールドです。  
  
 このフィールドの値を使用するには活用するために、 <xref:System.Web.UI.WebControls.MultiView> 作業中の自動更新をコントロールの <xref:System.Web.UI.WebControls.View> コントロールです。 などの場合、 <xref:System.Web.UI.WebControls.View> コントロールに含まれる、 <xref:System.Web.UI.WebControls.Button> が最初に移動するコントロール <xref:System.Web.UI.WebControls.View> クリックすると、設定できます、 <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値を <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> "SwitchViewByID"であるフィールドです。 設定、 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> プロパティ最初の ID を <xref:System.Web.UI.WebControls.View> で、 <xref:System.Web.UI.WebControls.MultiView> 「ページ 1」などのコントロールです。 これにより、 <xref:System.Web.UI.WebControls.MultiView> として、アクティブな「ページ 1」を自動的に設定するコントロール <xref:System.Web.UI.WebControls.View> ボタンがクリックされたとき。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.MultiView> 基本的なアンケートを作成するコントロール。 各 <xref:System.Web.UI.WebControls.View> コントロールが別のアンケート質問します。<xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> と <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> 前または次の間で自動ナビゲーションを提供に使用されるフィールド <xref:System.Web.UI.WebControls.View> 、アンケートのコントロールです。 ユーザーがクリックした場合、 **アンケートを再度作成** \] ボタンをクリックして、最後の <xref:System.Web.UI.WebControls.View> 、アンケートの <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName> フィールドは、最初に、ユーザーをリダイレクトに「ページ 1」のコマンド引数と共に使用 <xref:System.Web.UI.WebControls.View> の調査のです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.NextViewCommandName\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.NextViewCommandName/CS/multiview.nextviewcommandnamecs.aspx#1)]
 [!code-vb[MultiView.NextViewCommandName\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.NextViewCommandName/VB/multiview.nextviewcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SwitchViewByIndexCommandName">
      <MemberSignature Language="C#" Value="public static readonly string SwitchViewByIndexCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SwitchViewByIndexCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>作業中の変更に関連付けられているコマンドの名前を表す <see cref="T:System.Web.UI.WebControls.View" /> の制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールに基づいて、指定した <see cref="T:System.Web.UI.WebControls.View" /> インデックス。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> "SwitchViewByIndex"コマンド名を表すフィールドです。  
  
 このフィールドの値を使用するには活用するために、 <xref:System.Web.UI.WebControls.MultiView> 作業中の自動更新をコントロールの <xref:System.Web.UI.WebControls.View> コントロールです。 などの場合、 <xref:System.Web.UI.WebControls.View> コントロールに含まれる、 <xref:System.Web.UI.WebControls.Button> が最初に移動するコントロール <xref:System.Web.UI.WebControls.View> クリックすると、設定できます、 <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値を <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> "SwitchViewByIndex"であるフィールドです。 設定、 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> プロパティの先頭のインデックスを <xref:System.Web.UI.WebControls.View> で、 <xref:System.Web.UI.WebControls.MultiView> コントロールは 0 です。 これにより、 <xref:System.Web.UI.WebControls.MultiView> 自動的に設定するコントロール、 <xref:System.Web.UI.WebControls.MultiView.ActiveViewIndex%2A> プロパティを 0、ボタンがクリックされたときにします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.MultiView> 基本的なアンケートを作成するコントロール。 各 <xref:System.Web.UI.WebControls.View> コントロールが別のアンケート質問します。<xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName> と <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName> 前または次の間で自動ナビゲーションを提供に使用されるフィールド <xref:System.Web.UI.WebControls.View> 、アンケートのコントロールです。 ユーザーがクリックした場合、 **アンケートを再度作成** \] ボタンをクリックして、最後の <xref:System.Web.UI.WebControls.View> 、アンケートの <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName> フィールドと一緒に使用するとコマンドの引数は 0、最初に、ユーザーをリダイレクトする <xref:System.Web.UI.WebControls.View> の調査のです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[MultiView.SwitchViewByIndexCommandName\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MultiView.SwitchViewByIndexCommandName/CS/multiview.switchviewbyindexcommandnamecs.aspx#1)]
 [!code-vb[MultiView.SwitchViewByIndexCommandName\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.SwitchViewByIndexCommandName/VB/multiview.switchviewbyindexcommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.View" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.PreviousViewCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.MultiView.NextViewCommandName" />
      </Docs>
    </Member>
    <Member MemberName="Views">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ViewCollection Views { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ViewCollection Views" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.MultiView.Views" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ViewCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.View" /> コントロールで、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ViewCollection" /> のコレクションを表す <see cref="T:System.Web.UI.WebControls.View" /> 内で制御、 <see cref="T:System.Web.UI.WebControls.MultiView" /> コントロールです。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティをプログラムによって管理を使用して、 <xref:System.Web.UI.WebControls.View> コントロールで、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。  
  
   
  
## 例  
 次の例では、プログラムによって追加 <xref:System.Web.UI.WebControls.View> コントロールを <xref:System.Web.UI.WebControls.MultiView> コントロールです。 各後 <xref:System.Web.UI.WebControls.View> コントロールを作成すると、 `MultiView.Views.Add()` 構文を使用して、追加、 <xref:System.Web.UI.WebControls.View> への制御、 <xref:System.Web.UI.WebControls.ViewCollection> のコレクション、 <xref:System.Web.UI.WebControls.MultiView> コントロールです。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-vb[MultiView.Views Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MultiView.Views Example/VB/multiviewviewsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ViewCollection" />
      </Docs>
    </Member>
  </Members>
</Type>