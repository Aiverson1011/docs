<Type Name="ObjectDataSourceView" FullName="System.Web.UI.WebControls.ObjectDataSourceView">
  <TypeSignature Language="C#" Value="public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールをサポートし、ビジネス オブジェクトとデータ オブジェクトを使用したデータ操作を実行するためのデータ バインド コントロールのインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスは、主に、データ バインド コントロール、およびページのコードでプログラミング可能なオブジェクトとしてではなく使用されます。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスのデータ機能を実装する、 <xref:System.Web.UI.WebControls.ObjectDataSource> を制御するなど、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, 、および <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作、並べ替え、フィルター処理、および設定の管理状態を保持ビューに表示します。  
  
 A <xref:System.Web.UI.WebControls.ObjectDataSourceView> の各インスタンスにオブジェクトを作成、 <xref:System.Web.UI.WebControls.ObjectDataSource> 実行時にクラスです。 インスタンスのデータの操作を呼び出し、 <xref:System.Web.UI.WebControls.ObjectDataSource> クラスのインスタンスによって処理されますが、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトです。 ページの開発者のインスタンスにアクセスしない、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスを直接します。 コントロールの開発者は拡張してカスタム データ コントロールを作成することができます、 <xref:System.Web.UI.WebControls.ObjectDataSource> と <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスです。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスは、リフレクションを使用してビジネス データやデータのオブジェクトに対してメソッドを呼び出すことによってデータの操作を実行します。 実行時に、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールによって識別される型のインスタンスを作成、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> プロパティには、データ操作の適切なメソッドを呼び出します。 オブジェクトのインスタンスをメモリにキャッシュしない、 <xref:System.Web.UI.WebControls.ObjectDataSourceView>です。 オブジェクトが作成され、すべてのデータのメソッド呼び出しの破棄します。 メソッドの場合 `static` \(`Shared` Visual Basic で\)、インスタンスは作成されませんが、データの操作メソッドは呼び出されます。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によってページの開発者に直接公開されていない、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。 代わりに、プロパティとメソッドの <xref:System.Web.UI.WebControls.ObjectDataSourceView> 使用してアクセスされる、 <xref:System.Web.UI.WebControls.ObjectDataSource>です。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> の <xref:System.Web.UI.WebControls.ObjectDataSourceView> プロパティを設定して、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSource>です。  
  
## データの取得  
 データ ソース ビューを実行する最も基本的な操作は、基になるデータ ストレージを使用して、データの取得、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> を取得するメソッド、 <xref:System.Collections.IEnumerable> データ アイテムのコレクション。 によって次のデータ取得方法、プロパティ、およびイベントが実装される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトおよびによって直接公開される、 <xref:System.Web.UI.WebControls.ObjectDataSource> ページの開発者と他の呼び出し元を制御します。  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッド  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> イベント  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> イベント  
  
## データの更新  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトによって識別されるビジネス データやデータ オブジェクト メソッドを呼び出して、データの更新をサポートしている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティです。 更新プログラムを自動的に実行などのデータ バインド コントロール、 <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView> コントロールで、パラメーターを渡す、 <xref:System.Collections.Specialized.IOrderedDictionary> へのインターフェイス、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> ビュー オブジェクトが含まれているすべてのパラメーターでこれらのパラメーターをマージし、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> コレクションです。  
  
 によって次の更新メソッド、プロパティ、およびイベントが実装される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によって直接公開されると、 <xref:System.Web.UI.WebControls.ObjectDataSource> ページの開発者と他の呼び出し元を制御します。  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッド  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> イベント  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> イベント  
  
## データの挿入  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトによって識別されるビジネス データやデータ オブジェクト メソッドを呼び出すことにより新しいデータ行を挿入をサポートしている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティです。 自動的に挿入操作を実行などのデータ バインド コントロール、 <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView>, でそのパラメーターを渡す、 <xref:System.Collections.Specialized.IOrderedDictionary> へのインターフェイス、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> ビュー オブジェクトが含まれているすべてのパラメーターでこれらのパラメーターをマージし、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> コレクションです。  
  
 次は、メソッド、プロパティを挿入し、によってイベントが実装される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によって直接公開されると、 <xref:System.Web.UI.WebControls.ObjectDataSource> ページの開発者と他の呼び出し元を制御します。  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> メソッド  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> イベント  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> イベント  
  
## データの削除  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によって識別されるビジネス データやデータ オブジェクト メソッドを呼び出して、データの削除をサポートしています、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティです。 削除のように自動的に実行するデータ バインド コントロール、 <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView>, でそのパラメーターを渡す、 <xref:System.Collections.Specialized.IOrderedDictionary> へのインターフェイス、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> ビュー オブジェクトが含まれているすべてのパラメーターでこれらのパラメーターをマージし、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションです。 次は、メソッド、プロパティを削除し、によってイベントが実装される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によって直接公開されると、 <xref:System.Web.UI.WebControls.ObjectDataSource> ページの開発者と他の呼び出し元を制御します。  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッド  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベント  
  
-   <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベント  
  
## フィルター処理やデータの並べ替え  
 データを動的に表示するときに、データの取得はより強力なです。 のみサポートされてフィルタ リング、 <xref:System.Web.UI.WebControls.ObjectDataSource> 場合は、制御、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドが返される、 <xref:System.Data.DataTable> または <xref:System.Data.DataSet> オブジェクトです。 使用することができます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> と <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> データの取得を動的にフィルターを適用するプロパティです。 によってこれらのプロパティが実装される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトおよびによって直接公開される、 <xref:System.Web.UI.WebControls.ObjectDataSource> データ バインド コントロールと他の呼び出し元を制御します。  
  
 使用して取得データを並べ替えることができます、 <xref:System.Web.UI.WebControls.ObjectDataSource> が取得された後に、メモリ内のデータを並べ替えることで。 のみサポートされて並べ替え、 <xref:System.Web.UI.WebControls.ObjectDataSource> 場合は、制御、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドが返される、 <xref:System.Data.DataTable> または <xref:System.Data.DataSet>です。<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> プロパティは常に返します `true`, であるため、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によってどのような種類が返される判断できない、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドを呼び出すことがなくメソッドです。<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> プロパティ構文は、同じである、 <xref:System.Data.DataView.Sort%2A?displayProperty=fullName> プロパティです。  
  
## ビューステートの追跡  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> を実装して、 <xref:System.Web.UI.IStateManager> インターフェイスと使用法は、ページ要求間での状態を追跡するために状態を表示します。 実装、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, 、および <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> コントロールのビュー状態の追跡を有効にするメソッドが用意されています。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.ObjectDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.ObjectDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> が関連付けられる <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />。</param>
        <param name="name">それを所有するデータ ソース コントロールのスコープ内のデータ ソース ビューの一意の名前。</param>
        <param name="context">現在の <see cref="T:System.Web.HttpContext" /> です。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> コンス トラクターを呼び出す、 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> を指定したデータ ソース ビューの新しいインスタンスを返すメソッドを `viewName` パラメーター。<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが 1 つだけに関連付けられる <xref:System.Web.UI.WebControls.ObjectDataSourceView> いつでも常に、ビューの名前と `DefaultView`, によってこの名前付けの制限が課されることが、 <xref:System.Web.UI.WebControls.ObjectDataSource> 、制御、 <xref:System.Web.UI.WebControls.ObjectDataSourceView>です。 オーバーライドすることができます、 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> 異なる名前付け規約でビューをサポートします。  
  
 <xref:System.Web.HttpContext> によって渡されるオブジェクト `context` などで、パラメーター オブジェクトにアクセスするデータ ソース ビューによって使用される <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> と <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトに現在関連付けられている <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールは、削除操作をサポートします。</summary>
        <value>
          <see langword="true" />, 、、操作がサポートされている場合それ以外の場合、 <see langword="false" />です。 削除がサポートされない場合、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> プロパティが空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete%2A> プロパティを返します。 `true`, 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティを設定します。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合でも、削除操作は失敗する可能性ができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトに現在関連付けられている <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールは、挿入操作をサポートします。</summary>
        <value>
          <see langword="true" />, 、、操作がサポートされている場合それ以外の場合、 <see langword="false" />です。 カーソルはサポートされていない場合、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> プロパティが空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert%2A> プロパティを返します。 `true`, 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティを設定します。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合でも、挿入操作は失敗する可能性ができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトに現在関連付けられている <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールは、取得したデータのページングをサポートしています。</summary>
        <value>
          <see langword="true" />, 、場合、 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" /> に値が設定されている <see langword="true" />。 そうしないと、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanPage%2A> プロパティを示すかどうか、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは、ページングをサポートしています。 詳細についてはページングがサポートされている方法、 <xref:System.Web.UI.WebControls.ObjectDataSourceView>, を参照してください <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトに現在関連付けられている <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールは、データのセットに加えて、データ行の合計数の取得をサポートしています。</summary>
        <value>
          <see langword="true" />, 、、操作がサポートされている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> プロパティを返します。 `true`, 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> プロパティを設定します。 数を返すメソッドは、ページングされることが、ページ内の行の数ではなく行の合計数を返す必要があります。 データ バインド コントロールは、ページング コントロールをレンダリングする方法については、ポケットベルを受信できる行の合計数を使用します。 たとえば、\[数値ページャー\] ボタンの数で表示する、 <xref:System.Web.UI.WebControls.GridView> ポケットベルを制御します。 ページングのサポートの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> の呼び出し中にプロパティがオンになって、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> データ ソース コントロールであることを確認する方法は、さまざまな設定が要求したすべての機能をサポートしている <xref:System.Web.UI.DataSourceSelectArguments> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトで、基になるデータ ソースの並べ替え表示がサポートされるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSource>データの並べ替えをサポートのみを制御するときに、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドを返します。、 <xref:System.Data.DataSet>、 <xref:System.Data.DataView>、または<xref:System.Data.DataTable>オブジェクト、ビュー オブジェクトがまで並べ替えがサポートされているかどうかを判断することはできません、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドが呼び出され、を返します。 このため、<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>プロパティは常に返します`true`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトに現在関連付けられている <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールは、更新操作をサポートします。</summary>
        <value>
          <see langword="true" />, 、、操作がサポートされている場合それ以外の場合、 <see langword="false" />です。 更新はサポートされていません場合、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> プロパティが空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate%2A> プロパティを返します。 `true`, 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティを設定します。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合でも、更新操作は失敗する可能性ができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を決定する値方法 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールは、更新プログラムを実行して、操作の期間中に、基になるデータ ストレージ内の行にデータが変更されたときに削除されます。</summary>
        <value>
          <see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか。 既定値は、 <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティに新旧の値のパラメーターを適用するかどうかを決定する、 `Update` メソッドです。 たとえば、されている方法で指定された、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティを返します、 <xref:System.Data.DataTable> 、列を持つオブジェクト `Name` と `Number`, 、および <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティに設定されて、 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 値、パラメーターで作成されます `Name` と `Number` の `Update` メソッドです。 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティに設定されて、 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値、パラメーターは、名前で作成された `Name`, 、`Number`, 、`original_Name`, 、および `original_Name`です。 \(元の値に対するパラメーターの正確な名前によって異なる、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.\)<xref:System.Web.UI.WebControls.ObjectDataSourceView> しかどうかをメソッドをで指定された、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティと一致するパラメーターです。  
  
 同時実行制御は、データ ストアは、データが読み取られ、複数のクライアントがアクセスして、同じデータを操作するときに、ストアに変更する方法を制御するための手法です。 など 1 つのクライアントはデータを読み取るし、別のクライアントが同じデータを読み取り、別のユーザーに提示中に、ユーザーに提示します。 両方のユーザーは、データを更新し、データ ストレージに送信する、予期しない結果が生じるため、両方のクライアントは、同じデータに別の値を更新することです。 これは、競合と見なされます。 設定して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティを <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値、 `Update` メソッドを元のデータ ソースの競合を検出し、必要に応じて、処理するように、新旧の値を比較できます。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値は、のいずれかではない、 <see cref="T:System.Web.UI.ConflictOptions" /> 値。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか <see cref="T:System.Web.UI.WebControls.Parameter" /> update、insert、または削除操作に渡される値は自動的にから変換 <see langword="null" /> に、 <see cref="F:System.DBNull.Value" /> 値。</summary>
        <value>
          <see langword="true" />, 、場合 <see langword="null" /> で <see cref="T:System.Web.UI.WebControls.Parameter" /> に渡されたオブジェクト、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> に自動的に変換が、 <see cref="F:System.DBNull.Value" /> 値。 それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 変換せず `null` に、 <xref:System.DBNull.Value?displayProperty=fullName> 値、エラーが発生時に実行します。 使用して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull%2A> かを示すプロパティかどうか、 <xref:System.Web.UI.WebControls.Parameter> 、update、insert、または削除操作に渡される値は自動的にから変換 `null` に、 <xref:System.DBNull.Value?displayProperty=fullName> 値。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクラスの名前を設定、 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールが、データ操作でパラメーターを使用します。<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールの代わりに、指定したクラスを使用して、 <see cref="T:System.Web.UI.WebControls.Parameter" /> さまざまなパラメーターのコレクションに含まれるオブジェクト。</summary>
        <value>オブジェクトの種類を識別する部分的または完全修飾クラス名を <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> のパラメーターとして使用できる、 <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, 、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />, 、または <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 操作します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 渡されるいくつかのパラメーターを指定する代わりに、 `Select`, 、`Update`, 、`Insert`, 、および `Delete` メソッド、いくつかの項目を集計する 1 つのオブジェクトを作成することができます。 このオブジェクトは、いくつかのパラメーターではなく、メソッドに渡されます。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> 、キーの値を削除する項目を識別するために使用します。 これらのパラメーターを使用、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> プロパティを削除操作を実行します。 メソッドを使用して関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> を含む追加の非キー値をデータ ソース内の項目に一致するために使用します。 行の値が場合にのみ、メソッドに渡される、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> プロパティに設定されて、 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> フィールドです。</param>
        <summary>によって識別されるビジネス オブジェクトのメソッドを呼び出すことによって削除操作を実行、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> プロパティを指定して <paramref name="keys" /> と <paramref name="oldValues" /> コレクションです。</summary>
        <returns>削除された行数。数が不明の場合は \-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値は、\-1 で、不明な数の行が削除されたことを意味します。 別の値を返すには、設定、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> のオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベント ハンドラーです。 影響を受けた行の数が返される通常、 `Delete` ビジネス オブジェクトおよびその値をメソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> のパラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> イベント ハンドラーです。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> メソッドの呼び出し、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> を渡して、メソッド、 `keys` と `oldValues` コレクションです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 操作が完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> 戻り値の値を調べると、出力パラメーター、または後に例外がスローされたかどうかを判断するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 操作が完了します。 戻り値、出力パラメーター、および例外処理のプロパティから提供されて、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> イベントに関連付けられているオブジェクト。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> で指定されたメソッドを使用して操作を実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションです。 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出されます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> の前にイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 操作を実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 例外処理を実行する操作が完了します。 この例では場合、 `NorthwindDataException` がスローされると、このデリゲートによって処理されます。  
  
 実装を確認する、 `EmployeeLogic` このコード例を使用して、中間層ビジネス オブジェクトを参照してください <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメソッドまたは関数の名前を設定、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> データを削除するオブジェクトを呼び出します。</summary>
        <value>メソッドの名前を表す、または関数を文字列、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> を使用してデータを削除します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって識別されるメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティは、インスタンス メソッドであることができます、または `static` \(`Shared` Visual Basic で\) メソッドです。 ビジネス オブジェクトが作成され、毎回によって指定されたメソッドが破棄インスタンス メソッドである場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティが呼び出されます。 処理できる、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> で指定されたメソッドの前に、ビジネス オブジェクトを使用するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティが呼び出されます。 処理するには、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> によって指定されたメソッドの後に発生するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティが呼び出されます。 メソッドの場合、 `static` \(`Shared` Visual Basic で\)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。  
  
 ビジネス オブジェクトの場合、 <xref:System.Web.UI.WebControls.ObjectDataSource> 1 つ以上のメソッドまたは関数と同じ名前 \(メソッドのオーバー ロード\) すると、制御のしくみを実装すると、データ ソース コントロールがしいものでは、パラメーターなどの条件のセットに応じての呼び出しを試行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションです。 場合では、パラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションと一致しない場合の <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> メソッド シグネチャに、データ ソースは例外をスローします。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティはビュー ステートに格納します。  
  
 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>」を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> で指定されたメソッドを使用して操作を実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションです。 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出されます、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> の前にイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 操作を実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 例外処理を実行する操作が完了します。 この例では場合、 `NorthwindDataException` がスローされると、このデリゲートによって処理されます。  
  
 実装を確認する、 `EmployeeLogic` このコード例を使用して、中間層ビジネス オブジェクトを参照してください <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用されるパラメーターを含むパラメーターのコレクションを取得、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> メソッドです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> によって指定されたメソッドが使用するパラメーターを格納している、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名前と型のパラメーターに含まれている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> の名前と型によって指定されたメソッド内にあるパラメーターのコレクションに一致する必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティ シグネチャ。 パラメーター名が影響を受けました、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> プロパティとは大文字小文字を区別します。 などのパラメーターの指定のデータ バインド コントロールを使用するときに <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView>, 、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データ バインド コントロールによって提供されるこれらのパラメーターを使用して、コレクションに明示的に指定されているパラメーターを自動的にマージします。  
  
 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生する前に、 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> 操作します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> 、パラメーターの値を検証するか、前にパラメーター値を変更する、アプリケーションに固有である追加の初期化処理を実行するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 操作します。 パラメーターとして利用可能な <xref:System.Collections.IDictionary> によってアクセスされるコレクション、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> によって公開されるプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> で指定されたメソッドを使用して操作を実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションです。 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出されます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> の前にイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 操作を実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 例外処理を実行する操作が完了します。 この例では場合、 `NorthwindDataException` がスローされると、このデリゲートによって処理されます。  
  
 実装を確認する、 `EmployeeLogic` このコード例を使用して、中間層ビジネス オブジェクトを参照してください <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソース コントロールが取得したデータのセットのページングをサポートするかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />, で、データ ソース コントロールは、ページング データ、取得; をサポートしている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によってページング、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> 設定によってコントロールが処理される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, 、<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, 、および <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> を定義して、 `Select` 適切なパラメーターを使用して、ビジネス オブジェクトのメソッドです。 ときに、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> コレクションには、要求された最初の行および要求された行の数の 2 つのパラメーターが含まれています。 定義されているこれら 2 つのパラメーターの名前は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> と <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> プロパティです。`Select` メソッドは、指定したインデックス位置から開始する要求された行数を返す必要があります。 ページ サイズでは、データが均等に分割されない可能性があります、ため最後のページより少ない行が含まれます。 したがって、要求された行の数が返される行の最大数では実際には  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A> の呼び出し中にプロパティがオンになって、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> データ ソース コントロールであることを確認する方法は、さまざまな設定が要求したすべての機能をサポートしている <xref:System.Web.UI.DataSourceSelectArguments> プロパティです。  
  
 関連付けられたデータ バインド コントロールでページングが有効な場合、データ バインド コントロールは、 `Select` 開始インデックスと必要とされる行の数を持つメソッドです。 また場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> プロパティが設定されており、データ バインド コントロールは、ページャー コントロールを表示する前に、メソッドを呼び出します。 たとえば場合、 <xref:System.Web.UI.WebControls.GridView> コントロールがページ サイズが 5、有効になっているページングと <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> メソッド 20 をポケットベルに 4 つのページが表示されます。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> で使用されるパラメーターの <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> プロパティを削除操作を実行します。 メソッドを使用して関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> 場合にのみ評価される行の値を含む、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> プロパティに設定されて、  <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> フィールドです。</param>
        <summary>使用して削除操作を実行、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" /> メソッドと、指定した <paramref name="keys" /> と <paramref name="oldValues" /> コレクションです。</summary>
        <returns>削除された行数。数が不明の場合は \-1。 詳細については、「<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" />」を参照してください。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスを継承した実装 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> ビジネス オブジェクトを使用して基になるデータ ストアからデータを削除する方法です。 ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A> メソッド直接。 代わりに、使用して、パブリックに公開されている <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドです。  
  
 削除操作が実行される前に、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> イベントです。 パラメーターの値を確認し、前に処理を実行するには、このイベントを処理する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> メソッドが呼び出されます。  
  
 削除操作を実行する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によって識別されるメソッドを呼び出すためにリフレクションを使用して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティおよび関連するすべてのパラメーター、 `keys` と `oldValues` コレクションし、実行します。 操作の完了後、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> イベントです。 戻り値とエラー コードを分析し、後続の処理を実行する、このイベントを処理することができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete" /> プロパティを返します。 <see langword="false" />します。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> プロパティに設定されて、 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値、およびなしの値が渡された、 <paramref name="oldValues" /> コレクションです。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> で使用されるパラメーターの <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> プロパティを挿入操作を実行します。 メソッドを使用して関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <summary>によって識別されるビジネス オブジェクトのメソッドを呼び出すことによって、挿入操作を実行、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> プロパティを指定して <paramref name="values" /> コレクションです。</summary>
        <returns>挿入された行数。数が不明の場合は \-1。 詳細については、「<see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />」を参照してください。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスを継承した実装 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> ビジネス オブジェクトを使用して、基になるデータ ストアにデータを挿入します。 ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> メソッド直接。 代わりに、使用して、パブリックに公開されている <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> メソッドです。  
  
 挿入が実行される前に、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> イベントです。 パラメーターの値を確認し、前に処理を実行するには、このイベントを処理する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> メソッドが呼び出されます。  
  
 挿入操作を実行する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> コントロールでは、リフレクションを使用して、によって識別されるメソッドを呼び出して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティおよび関連するすべてのパラメーターに含まれる、 `values` コレクションし、実行します。 操作の完了後、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> イベントです。 戻り値、エラー コードを調べるには、このイベントを処理し、後処理を実行できます。  
  
 挿入された行の数を返す方法については、次を参照してください。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> プロパティを返します。 <see langword="false" />します。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="values" /> が <see langword="null" /> または空です。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 基本的なデータの取得を超えるデータで操作を要求するために使用します。</param>
        <summary>によって識別されるオブジェクトからデータを取得、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> メソッドを呼び出すことによってプロパティがで識別される、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> プロパティを任意の値を渡すこと、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> コレクションです。</summary>
        <returns>A <see cref="T:System.Collections.IEnumerable" /> データ行のリスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスを継承した実装 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> ビジネス オブジェクトを使用してデータを取得します。 ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> メソッド直接。 代わりに、使用して、パブリックに公開されている <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。  
  
 指定されたメソッドは使用できますが、メソッド シグネチャの型のいずれかを返す必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSource> 、正常に呼び出すには、次の表に記載されているコントロール。  
  
|戻り値の型|アクション|  
|-----------|-----------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> によって返される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
|<xref:System.Data.DataTable>|A <xref:System.Data.DataView> を使用して作成されて、 <xref:System.Data.DataTable> によって返されると、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
|<xref:System.Data.DataSet>|最初の <xref:System.Data.DataTable> の <xref:System.Data.DataSet> の抽出元と <xref:System.Data.DataView> が作成され、によって返される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
|<xref:System.Object>|オブジェクトが 1 つの要素でラップ <xref:System.Collections.IEnumerable> によって返されると、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
  
 データの取得を実行する前に、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> イベントです。 パラメーターの値を確認し、操作の前に処理を実行する、このイベントを処理することができます。  
  
 Select の操作を実行する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> コントロールでは、リフレクションを使用して、によって識別されるメソッドを呼び出して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティおよび関連するすべてのパラメーターに含まれる、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> コレクションし、実行します。 操作の完了後、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> イベントです。 戻り値とエラー コードを分析し、後続の処理を実行する、このイベントを処理することができます。  
  
 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドが返される、 <xref:System.Data.DataSet> オブジェクトとキャッシュ機能が有効になっている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> からデータを取得し、操作中に、キャッシュにデータを保存します。 キャッシュは作成と破棄、または更新の組み合わせで指定されているキャッシュの動作に基づいて、 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> と <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> プロパティです。  
  
 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドが返される、 <xref:System.Data.DataSet> オブジェクトと <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> プロパティが指定されている、指定されたいずれかと共に評価されます <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> プロパティとその結果のフィルターの適用中にデータの一覧に、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 操作します。  
  
 選択した行の数を返す方法の詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="arguments" /> に渡される、 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> メソッドは、データ ソースは、ページングや並べ替えを取得したデータを有効にするデータの取得中にいくつか追加の作業を実行する必要がありますが、データ ソース コントロールが要求された機能をサポートしていないことを指定します。  
  
 または  
  
 によって返されるオブジェクト、 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> メソッドではありません、 <see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" />, 、キャッシュが有効になっているとします。 のみ <see cref="T:System.Data.DataSet" /> と <see cref="T:System.Data.DataTable" /> ためのオブジェクトをキャッシュできる、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> コントロールです。  
  
 または  
  
 キャッシュとクライアントの偽装を有効にします。<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> クライアントの偽装が有効になっているときに、キャッシュをサポートしていません。</exception>
        <exception cref="T:System.InvalidOperationException">によって返されるオブジェクト、 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> メソッドは、 <see cref="T:System.Data.DataSet" />, 、表が含まれていませんが、その <see cref="P:System.Data.DataSet.Tables" /> コレクションです。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" /> にプロパティが設定されている <see langword="true" />, が、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" /> と <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" /> プロパティが設定されていません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> と共に使用するプライマリ キーの <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> プロパティをデータベースの更新操作を実行します。 メソッドを使用して関連付けられているキーがない場合は、渡す <see langword="null" />します。</param>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> と共に使用する値の <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> データベースの更新操作を実行します。 メソッドを使用して関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> を表す、基になるデータ ストア内の元の値。 クエリに関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <summary>によって識別されるメソッドを呼び出して、更新操作を実行、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> プロパティとに提供されているパラメーターを使用して、 <paramref name="keys" />, 、<paramref name="values" />, 、または <paramref name="oldValues" /> コレクションです。</summary>
        <returns>更新された; 行の数または数が不明の場合は\-1。 詳細については、「<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />」を参照してください。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> クラスを継承した実装 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> ビジネス オブジェクトを使用してデータを更新する方法です。 ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> メソッド直接。 代わりに、使用して、パブリックに公開されている <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> メソッドです。  
  
 含まれている値、 `keys` と `values` コレクションが評価され、結合に含まれる任意の値を持つ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> コレクションです。 場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティに設定されて、 <xref:System.Web.UI.ConflictOptions.CompareAllValues> に含まれている値、値、 `oldValues` コレクションの書式は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> プロパティともマージします。  
  
 更新操作を実行する前に、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> イベントです。 パラメーターの値を確認して、更新の前に処理を実行する、このイベントを処理することができます。 更新操作を実行する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によって識別されるメソッドを呼び出すためにリフレクションを使用して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティおよび関連するすべてのパラメーター、 `keys` コレクションし、実行します。 操作の完了後、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> させるメソッドが呼び出される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> イベントです。 戻り値、エラー コードを調べるには、このイベントを処理し、後処理を実行できます。  
  
 更新された行の数を返す方法については、次を参照してください。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> プロパティを返します。 <see langword="false" />します。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="oldValues" /> <see langword="null" /> または空と <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> に設定されている <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />します。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定される、ビジネス オブジェクトのメソッドに適用されるフィルター式で識別される、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> プロパティが呼び出されます。</summary>
        <value>識別されるビジネス オブジェクトのメソッドを使用してデータを取得するときに適用するフィルター式を表す文字列、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータのフィルター処理がサポートされる場合にのみ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドが返される、 <xref:System.Data.DataSet>, 、<xref:System.Data.DataView>, 、または <xref:System.Data.DataTable> オブジェクトです。  
  
 使用される構文、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティは、書式指定文字列スタイル式です。 フィルター式の構文は同じ構文で受け入れを <xref:System.Data.DataView.RowFilter%2A> プロパティにフィルター式が適用されるため、 <xref:System.Data.DataView.RowFilter%2A> のプロパティ、 <xref:System.Data.DataView> 実行から返されるオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドです。 \(詳細については、「<xref:System.Data.DataColumn.Expression%2A>」を参照してください\)。 パラメーターを追加する場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクション、書式文字列のプレース ホルダーを次に例を含めることも `"{0}"`, 、パラメーター値の代わりに式にします。 内のパラメーターのインデックスに従ってプレースは、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションです。  
  
 内のパラメーターを含めることができます、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>です。 パラメーターの型が文字列型または char 型の場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型である場合、引用符は不要です。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> コレクションのプレース ホルダーに評価されるパラメーターを格納して、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>です。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> プロパティはビュー ステートに格納します。  
  
> [!IMPORTANT]
>  クライアントから受信したすべてのフィルター パラメーターの値を検証することをお勧めします。 ランタイムは、単にフィルター式にパラメーター値を代入しにそれを適用、 <xref:System.Data.DataView> によって返されるオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドです。 使用している場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 、フィルターを使用する前に、パラメーター値を検証する必要があります、返される項目数を制限するセキュリティ対策としてのプロパティです。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用してフィルター選択されたデータを表示する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> 中間層ビジネス オブジェクトからデータを取得するコントロールと <xref:System.Web.UI.WebControls.GridView> 結果を表示するコントロール。 2 番目のコード例では、最初のコード例で使用される中間層ビジネス オブジェクトの例を示します。  
  
 次のコード例を使用してフィルター選択されたデータを表示する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> 中間層ビジネス オブジェクトからデータを取得するコントロールと <xref:System.Web.UI.WebControls.GridView> 結果を表示するコントロール。<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがデータを取得するメソッドとしてを取得する場合にのみにデータをフィルター処理、 <xref:System.Data.DataSet> オブジェクトです。 このため、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティとしてデータを取得するビジネス オブジェクトのメソッドを識別する、 <xref:System.Data.DataSet>です。  
  
 コード例は、 <xref:System.Web.UI.WebControls.TextBox>, 、 <xref:System.Web.UI.WebControls.GridView> コントロール、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、および **送信** \] ボタンをクリックします。 既定では、 <xref:System.Web.UI.WebControls.TextBox> Northwind traders 社の従業員のいずれかの名前が表示されます。<xref:System.Web.UI.WebControls.GridView> で名前によって識別される従業員に関する情報を表示、 <xref:System.Web.UI.WebControls.TextBox>です。 他の従業員のデータを取得する、 <xref:System.Web.UI.WebControls.TextBox>, 、従業員の完全な名前を入力し、クリックして、 **送信** \] ボタンをクリックします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> プロパティで取得されるデータをフィルター処理に使用される式を指定する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティです。 含まれるパラメーターに評価されるパラメーターのプレース ホルダーを使用して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> コレクションです。 この例では、パラメーターの型がスペースを含む可能性がある文字列型であるために、パラメーターのプレース ホルダーは単一引用符で制限されます。 パラメーターの型が数値または日付型の場合は、引用符は必要ありません。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_9\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_9\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 次のコード例では、上記のコード例では、中間層ビジネス オブジェクトの例を示します。 このコード例は、2 つの基本クラスで構成されます。  
  
-   `EmployeeLogic` ビジネス ロジックをカプセル化するクラスであるクラスです。  
  
-   `NorthwindEmployee` はモデル クラスを読み込んで、データ層からデータを永続化するために必要な基本的な機能のみを含むクラスです。  
  
 簡略化のため、 `EmployeeLogic` クラスは、静的なデータ層からデータを取得するのではなく、データ セットを作成します。 サンプルは、Northwind Traders の従業員をフィルター処理を示すための完全名を指定することに依存するためにもこの例では便利です。  
  
 稼働させるためには、コンパイルして、Web フォーム ページのコード例が提供すると、これらのクラスを使用する必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_9\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_9\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> プロパティが設定された、 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドは返しません、 <see cref="T:System.Data.DataSet" />です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィルター操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> フィルター パラメーターの値の検証操作を実行するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、フィルター操作を実行します。 取り消すことができます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 操作を設定して、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> オブジェクトを `true`します。 イベントが発生した場合にのみ、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> プロパティを設定します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
> [!IMPORTANT]
>  クライアントから受信したすべてのフィルター パラメーターの値を検証する必要があります。 ランタイムは、単にフィルター式にパラメーター値を代入しにそれを適用、 <xref:System.Data.DataView> によって返されるオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> メソッドです。 使用している場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> 、フィルターを使用する前に、パラメーター値を検証する必要があります、返される項目数を制限するセキュリティ対策としてのプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターのプレース ホルダー内にあるに関連付けられているパラメーターのコレクションを取得、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> 文字列。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> については、パラメーター プレース ホルダーに関連付けられているパラメーターのセットを含んでいる、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータのフィルター処理がサポートされる場合にのみ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドが返される、 <xref:System.Data.DataSet>, 、<xref:System.Data.DataTable>, 、または <xref:System.Data.DataView> オブジェクトです。  
  
 内のパラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> コレクションで指定されているすべてのパラメーターに割り当てられた、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> プロパティです。 指定されているパラメーターのプレース ホルダー、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> と一致するパラメーター オブジェクトのプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> でメソッドが指定された場合に、コレクション、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティが呼び出されます。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用してフィルター選択されたデータを表示する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> 中間層ビジネス オブジェクトからデータを取得するコントロールと <xref:System.Web.UI.WebControls.GridView> 結果を表示するコントロール。 2 番目のコード例では、最初のコード例で使用される中間層ビジネス オブジェクトの例を示します。  
  
 次のコード例を使用してフィルター選択されたデータを表示する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> 中間層ビジネス オブジェクトからデータを取得するコントロールと <xref:System.Web.UI.WebControls.GridView> 結果を表示するコントロール。<xref:System.Web.UI.WebControls.ObjectDataSource> コントロールがデータを取得するメソッドとしてを取得する場合にのみにデータをフィルター処理、 <xref:System.Data.DataSet> オブジェクトです。 このため、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティとしてデータを取得するビジネス オブジェクトのメソッドを識別する、 <xref:System.Data.DataSet>です。  
  
 コード例は、 <xref:System.Web.UI.WebControls.TextBox>, 、 <xref:System.Web.UI.WebControls.GridView> コントロール、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、および **送信** \] ボタンをクリックします。 既定では、 <xref:System.Web.UI.WebControls.TextBox> Northwind traders 社の従業員のいずれかの名前が表示されます。<xref:System.Web.UI.WebControls.GridView> で名前によって識別される従業員に関する情報を表示、 <xref:System.Web.UI.WebControls.TextBox>です。 他の従業員のデータを取得する、 <xref:System.Web.UI.WebControls.TextBox>, 、従業員の完全な名前を入力し、クリックして、 **送信** \] ボタンをクリックします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> プロパティによって指定されたメソッドで取得されるデータをフィルター処理に使用される式を指定する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティです。 含まれるパラメーターに評価されるパラメーターのプレース ホルダーを使用して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> コレクションです。 この例では、パラメーターの型がスペースを含む可能性がある文字列型であるために、パラメーターのプレース ホルダーは単一引用符で制限されます。 パラメーターの型が数値または日付型の場合は、引用符は必要ありません。<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> コレクションには、1 つのパラメーターが含まれています。、 <xref:System.Web.UI.WebControls.FormParameter> にバインドされた、 <xref:System.Web.UI.WebControls.TextBox> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_9\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_9\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 次のコード例では、上記のコード例では、中間層ビジネス オブジェクトの例を示します。 このコード例は、2 つの基本クラスで構成されます。  
  
-   `EmployeeLogic` ビジネス ロジックをカプセル化するクラスであるクラスです。  
  
-   `NorthwindEmployee` はモデル クラスを読み込んで、データ層からデータを永続化するために必要な基本的な機能のみを含むクラスです。  
  
 簡略化のため、 `EmployeeLogic` クラスは、静的なデータ層からデータを取得するのではなく、データ セットを作成します。 サンプルは、Northwind Traders の従業員をフィルター処理を示すための完全名を指定することに依存するためにもこの例では便利です。  
  
 稼働させるためには、コンパイルして、Web フォーム ページのコード例が提供すると、これらのクラスを使用する必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_9\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_9\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" /> プロパティが設定された、 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドは返しません、 <see cref="T:System.Data.DataSet" />です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> で使用されるパラメーターのコレクション、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> プロパティを挿入操作を実行します。 メソッドを使用して関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <summary>によって識別されるビジネス オブジェクトのメソッドを呼び出すことによって、挿入操作を実行、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> プロパティを指定して <paramref name="values" /> コレクションです。</summary>
        <returns>挿入された行数。数が不明の場合は \-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の戻り値は、\-1 で、不明な数の行が挿入されたことを意味します。 別の値を返すには、設定、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> のオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> イベントです。 影響を受けた行の数が返される通常、 `Insert` ビジネス オブジェクトおよびその値をメソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> のオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> イベントです。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> メソッドの呼び出し、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A> を渡して、メソッド、 `values` コレクションです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert" /> プロパティを返します。 <see langword="false" />します。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 操作が完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> 戻り値の値を調べると、出力パラメーター、または後に例外がスローされたかどうかを判断するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作が完了します。 戻り値、出力パラメーター、および例外処理のプロパティから提供されて、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> イベントに関連付けられているオブジェクト。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生する前に、 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" /> 操作します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> 、パラメーターの値を検証するか、前にパラメーター値を変更する、アプリケーションに固有である追加の初期化処理を実行するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作します。 パラメーターとして利用可能な <xref:System.Collections.IDictionary> によってアクセスされるコレクション、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> によって公開されるプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.DetailsView> データを挿入するコントロール。 2 番目のコード例では、最初のコード例で使用される中間層ビジネス オブジェクトの例を示します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.DetailsView> データを挿入するコントロール。<xref:System.Web.UI.WebControls.DetailsView> 最初に、新しい表示 `NorthwindEmployee` レコードを自動的に生成されたと共に **挿入** \] ボタンをクリックします。 フィールドにデータを入力したら、 <xref:System.Web.UI.WebControls.DetailsView> をクリックして、制御、 **挿入** \] ボタンをクリックします。<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティを識別するメソッドは、実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作します。  
  
 このコード例では、 `UpdateEmployeeInfo` メソッドが insert の実行に使用されます。 ただし必要な、 `NorthwindEmployee` データを挿入するパラメーターです。 コレクションではこのため、文字列を <xref:System.Web.UI.WebControls.DetailsView> コントロール パスに自動的には不十分です。`NorthwindEmployeeInserting` デリゲートは、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> を処理するオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> イベントの前に、入力パラメーターを操作して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作は次に進みます。`UpdateEmployeeInfo` メソッドが必要です、 `NorthwindEmployee` をパラメーターとしてオブジェクトのいずれかが、文字列のコレクションを使用して作成されに追加、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> パラメーター名を使用して、コレクション \(`ne`\) メソッドが必要とします。 利用するために設計されていないいるメソッドや型のデータ ソースとして既存の中間層オブジェクトを使用する場合は、上記のような手順を実行することがあります、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。  
  
 ときに、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作を実行すると、によって識別されるメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティが呼び出されます。 場合、 `Insert` オブジェクトのメソッドが、パラメーターを含むメソッド シグネチャを持つ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> コレクションのメソッド シグネチャのパラメーターに一致する名前を持つパラメーターを含める必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> メソッドを正常に完了します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_4\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_4\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 次のコード例では、上記のコード例では、中間層ビジネス オブジェクトの例を示します。 このコード例は、2 つの基本クラスで構成されます。  
  
-   `EmployeeLogic` ビジネス ロジックをカプセル化するステートレスなクラスであるクラスです。  
  
-   `NorthwindEmployee` はモデル クラスを読み込んで、データ層からデータを永続化するために必要な基本的な機能のみを含むクラスです。  
  
 追加 `NorthwindDataException` クラスは、便宜上指定します。  
  
 稼働させるためには、コンパイルして、これらのクラスを使用する必要があります。`UpdateEmployeeInfo` メソッドは完全に実装されていませんはないデータを挿入する Northwind Traders データベースにこの例を試すときようにします。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_4\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_4\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメソッドまたは関数の名前を設定、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> データを挿入するオブジェクトを呼び出します。</summary>
        <value>メソッドの名前を表す、または関数を文字列、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> を使用してデータを挿入します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって識別されるメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティは、インスタンス メソッドであることができます、または `static` \(`Shared` Visual Basic で\) メソッドです。 ビジネス オブジェクトが作成され、毎回によって指定されたメソッドが破棄インスタンス メソッドである場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティが呼び出されます。 処理できる、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> で指定されたメソッドの前に、ビジネス オブジェクトを使用するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティが呼び出されます。 処理するには、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> によって指定されたメソッドの後に発生するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティが呼び出されます。 \(`Dispose` と呼ばれる場合は、ビジネス オブジェクトを実装する場合にのみ、 <xref:System.IDisposable> インターフェイスです\)。 メソッドの場合、 `static` \(`Shared` Visual Basic で\)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。  
  
 ビジネス オブジェクトの場合、 <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトは、1 つ以上のメソッドまたは関数と同じ名前 \(メソッドのオーバー ロード\) を実装して、データ ソース コントロールがしいものでは、パラメーターなどの条件のセットに応じての呼び出しを試行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> コレクションです。 場合では、パラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> コレクションと一致しない場合指定されたメソッドの <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティ シグネチャ、データ ソースは例外をスローします。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティはビュー ステートに格納します。  
  
 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>」を参照してください。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用してフィルター選択されたデータを表示する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.DetailsView> データを挿入するコントロール。 2 番目のコード例では、最初のコード例で使用される中間層ビジネス オブジェクトの例を示します。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.DetailsView> データを挿入するコントロール。<xref:System.Web.UI.WebControls.DetailsView> 最初に、新しい表示 `NorthwindEmployee` レコードを自動的に生成されたと共に **挿入** \] ボタンをクリックします。 フィールドにデータを入力したら、 <xref:System.Web.UI.WebControls.DetailsView> をクリックして、制御、 **挿入** \] ボタンをクリックします。<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティを識別するメソッドは、実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作します。  
  
 このコード例では、 `UpdateEmployeeInfo` メソッドが、挿入を実行に使用されます。 ただし、必要な、 `NorthwindEmployee` データを挿入するパラメーターです。 コレクションではこのため、文字列を <xref:System.Web.UI.WebControls.DetailsView> コントロール パスに自動的には不十分です。`NorthwindEmployeeInserting` デリゲートは、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> を処理するオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> イベントの前に、入力パラメーターを操作して、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作は次に進みます。`UpdateEmployeeInfo` メソッドが必要です、 `NorthwindEmployee` をパラメーターとしてオブジェクトのいずれかの文字列のコレクションを使用して作成されに追加、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> パラメーター名を使用して、コレクション \(`ne`\) に、メソッドの入力が必要です。 利用するために設計されていないいるメソッドや型のデータ ソースとして既存の中間層オブジェクトを使用する場合は、上記のような手順を実行することがあります、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。  
  
 ときに、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作を実行すると、によって識別されるメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティが呼び出されます。 場合、 `Insert` オブジェクトのメソッドが、パラメーターを含むメソッド シグネチャを持つ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> コレクションのメソッド シグネチャのパラメーターに一致する名前を持つパラメーターを含める必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> メソッドを正常に完了します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_4\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_4\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 次のコード例では、上記のコード例を使用する中間層ビジネス オブジェクトの例を示します。 このコード例は、2 つの基本クラスおよびその他のクラスで構成されます。  
  
-   `EmployeeLogic` クラスは、ステートレスなクラスは、ビジネス ロジックをカプセル化します。  
  
-   `NorthwindEmployee` クラスは、モデル クラスを読み込んで、データ層からデータを永続化するために必要な基本的な機能のみが含まれています。  
  
-   追加 `NorthwindDataException` クラスは、便宜上指定します。  
  
 稼働させるためには、コンパイルして、これらのクラスを使用する必要があります。`UpdateEmployeeInfo` メソッドは完全に実装されていませんがないデータを挿入する Northwind Traders データベースにこのコード例を試すときようにします。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_4\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_4\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用されるパラメーターを含むパラメーターのコレクションを取得、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> メソッドです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> によって使用されるパラメーターを格納している、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名前と型のパラメーターに含まれている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> の名前と型によって指定されたメソッド内にあるパラメーターのコレクションに一致する必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティ シグネチャ。 などのパラメーターの指定のデータ バインド コントロールを使用するときに <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView>, 、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データ バインド コントロールによって提供されるこれらのパラメーターを使用して、コレクションに明示的に指定されているパラメーターを自動的にマージします。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>」を参照してください。  
  
   
  
## 例  
 このセクションでは、2 つのコード例を示します。 最初のコード例を使用してフィルター選択されたデータを表示する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.DetailsView> データを挿入するコントロール。 2 番目のコード例の実装例を提供する、 `Insert` 最初のコード例で使用されるメソッドです。  
  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.DetailsView> データを挿入するコントロール。<xref:System.Web.UI.WebControls.DetailsView> 最初に、新しい表示 `NorthwindEmployee` レコードを自動的に生成されたと共に **挿入** \] ボタンをクリックします。 フィールドにデータを入力したら、 <xref:System.Web.UI.WebControls.DetailsView> をクリックして、制御、 **挿入** \] ボタンをクリックします。<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティを識別するメソッドは、実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作します。  
  
 クリックすると、 **挿入** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> で指定されたメソッドを使用して操作を実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> コレクションです。 このコード例では、1 つのパラメーターがで指定された、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 管理者の ID に対応するコレクション ID を表示する場合でも、これは、 <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> のコレクション、 <xref:System.Web.UI.WebControls.DetailsView> と制御、 <xref:System.Web.UI.WebControls.BoundField> オブジェクトを文字列として渡されます、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールです。 明示的に追加することで、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> 使用して、コレクション、 <xref:System.Web.UI.WebControls.Parameter.Type%2A> に設定されているプロパティ、 <xref:System.TypeCode.Int32> 値、それが渡されますによって適切、 <xref:System.Web.UI.WebControls.ObjectDataSource> としてメソッドに、 `int`, 、としてではなく `string`です。  
  
 ときに、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> 操作を実行すると、によって識別されるメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> プロパティが呼び出されます。 場合、 `Insert` オブジェクトのメソッドが、パラメーターを含むメソッド シグネチャを持つ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> コレクションのメソッド シグネチャのパラメーターに一致する名前を持つパラメーターを含める必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> が正常に完了します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_8\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_8\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 次のコード例の実装例を提供する、 `Insert` 前のコード例を使用するメソッドです。`InsertNewEmployeeWrapper` メソッドが追加、 `EmployeeLogic` 中間層オブジェクトを使用するより簡単にオブジェクトを有効にする、 <xref:System.Web.UI.WebControls.ObjectDataSource> 実際のビジネス ロジックに大幅な書き直しなしの Web シナリオで制御します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_8\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_8\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトがビュー ステートへ変更を保存します。</summary>
        <value>
          <see langword="true" />, 、その状態を保存するデータ ソース ビューがマークされている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 状態を復元します。</param>
        <summary>データ ソース ビューの、以前保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。  ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> メソッドのビュー ステート情報を復元する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> によって保存された前のページ要求からのオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースのページング サポートを取得するレコードの数を示すために使用されるデータの取得メソッドのパラメーターの名前を設定します。</summary>
        <value>取得するレコードの数を示すために使用するメソッドのパラメーターの名前。 既定値は、<c>"maximumRows"</c> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> プロパティは、データ ソースのページングをサポートするために使用します。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>」を参照してください。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以降、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトによって識別される型のインスタンスを作成する、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> ビジネス オブジェクトのプロパティの設定でその他のメソッドを呼び出す場合、または前に、ビジネス オブジェクトに固有の他の初期化を実行するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource> の制御呼び出し、 `Data` ビジネス オブジェクトのメソッドです。 オブジェクトへの参照がによってアクセスされる、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> によって公開されるプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> オブジェクトです。  
  
 識別するデータの操作を実行する方法があるかどうかは `static` \(`Shared` Visual Basic で\)、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> と <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> イベントが発生することはありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生する前に、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトによって識別される型のインスタンスを作成する、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールが自動的に作成するビジネス オブジェクトとリフレクションを使用してそのインスタンスの既定のコンス トラクターを呼び出します。 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> イベントを明示的に別のコンス トラクターを呼び出すと、結果へのオブジェクトのインスタンスを設定する、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> 、関連するプロパティ <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 識別するデータの操作を実行する方法があるかどうかは `static` \(`Shared` Visual Basic で\)、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating> と <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> イベントが発生することはありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトが作成されるオブジェクトのインスタンスを破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 、ビジネス オブジェクトのインスタンスが破棄される前にイベントが発生します。 ビジネス オブジェクトを実装する場合、 <xref:System.IDisposable> インターフェイス、 <xref:System.IDisposable.Dispose%2A> メソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> イベントが発生します。  
  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> イベント オブジェクトの他のメソッドを呼び出すし、プロパティを設定またはクリーンアップ、オブジェクトが破棄される前に、オブジェクトに固有であるを実行します。 オブジェクトへの参照がによってアクセスされる、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> によって公開されるプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> オブジェクトです。  
  
 識別するデータの操作を実行する方法があるかどうかは `static` \(`Shared` Visual Basic で\)、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> イベントは生成されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または元の値に渡されるパラメーターの名前に適用する書式指定文字列の設定、 <see langword="Delete" /> または <see langword="Update" /> メソッドです。</summary>
        <value>いずれかの名前に適用される書式指定文字列を表す文字列 <paramref name="oldValues" /> に渡される、 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Delete" /> または <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> メソッドです。 既定値が必要な場合は、"{0}"、つまり、パラメーター名は、単純なフィールド名を使用しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> で識別されるものなどの主キーだけを書式指定文字列が適用された、 `DataKeyNames` プロパティ、または削除、データ バインド コントロールの更新シナリオ、および場所、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティに設定されて、 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値と対応するデータのメソッドに渡された元の値のセットです。  
  
 2 つの一般的なシナリオが変わることがあります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> プロパティは次のようにします。  
  
-   更新時に新旧の値を区別します。 ときに、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> プロパティに設定されて、 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 値の場合は、元と新しい値の両方に追加するためのパラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> コレクションです。 書式指定文字列の各データ フィールドに同じ名前の 2 つのパラメーターが作成されます。 元の値パラメーターの名前を変更すると、競合を検出して、キーの値を比較する元のデータ ソースにデータを比較できます。  
  
-   一部のビジュアル デザイナーでは、元の値とキーの特定の名前付けスキームを実装します。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> れるビュー ステートに保存します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" /> の後のイベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトの削除操作が完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> で指定されたメソッドを使用して操作を実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションです。 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出されます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> の前にイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 操作を実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 例外処理を実行する操作が完了します。 この例では場合、 `NorthwindDataException` がスローされると、このデリゲートによって処理されます。  
  
 実装を確認する、 `EmployeeLogic` このコード例を使用して、中間層ビジネス オブジェクトを参照してください <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" /> 前に、イベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトが削除操作を試行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource> ビジネス オブジェクトを持つコントロールと <xref:System.Web.UI.WebControls.GridView> データを削除するコントロール。<xref:System.Web.UI.WebControls.GridView> で指定されたメソッドを使用して、すべての従業員のセットは最初に表示、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> からデータを取得するプロパティを `EmployeeLogic` オブジェクトです。<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.GridView> コントロールが自動的に表示、 **削除** \] ボタンをクリックします。  
  
 クリックすると、 **削除** \] ボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> で指定されたメソッドを使用して操作を実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> プロパティおよびパラメーターで指定されている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> コレクションです。 このコード例ではいくつか前処理および後処理手順も実行されます。`NorthwindEmployeeDeleting` を処理するデリゲートが呼び出されます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> の前にイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 操作を実行すると、および `NorthwindEmployeeDeleted` を処理するデリゲートが呼び出され、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> の後のイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> 例外処理を実行する操作が完了します。 この例では場合、 `NorthwindDataException` がスローされると、このデリゲートによって処理されます。  
  
 実装を確認する、 `EmployeeLogic` このコード例を使用して、中間層ビジネス オブジェクトを参照してください <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_10\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Deleting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" /> 前に、イベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトは、フィルター操作を試行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" /> method in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Filtering" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> イベント データを格納します。</param>
        <summary>生成、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" /> の後のイベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトが挿入操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" /> 前に、イベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトが挿入操作を試行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> を識別するデータの操作を実行するメソッドがない場合のみ、メソッドが呼び出される `static` \(`Shared` Visual Basic で\)。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Inserting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreated(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" /> の後のイベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> によって識別されるオブジェクトのインスタンスを作成、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> を識別するデータの操作を実行するメソッドがない場合のみ、メソッドが呼び出される `static` \(`Shared` Visual Basic で\)。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>」を参照してください。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectCreating">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectCreating(class System.Web.UI.WebControls.ObjectDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceEventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" /> 前に、イベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトは、データの操作を実行するビジネス オブジェクトのインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectDisposing">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectDisposing(class System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs" /> イベント データを格納します。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" /> 前に、イベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトは、型のインスタンスを破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> データ操作を実行するために作成されたオブジェクトのインスタンスが破棄されたときに呼び出されます。`Dispose` メソッドが呼び出される場合にのみによって識別される型、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> プロパティを実装して、 <xref:System.IDisposable> インターフェイスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> イベント データを格納します。</param>
        <summary>生成、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" /> の後のイベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトがデータ取得操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" /> 前に、イベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトは、データ取得操作を試行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> イベント データを格納します。</param>
        <summary>生成、 <see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" /> の後のイベント、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> オブジェクトが更新操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs" />。</param>
        <summary>発生させる、<see cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />前に、イベント、<see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />オブジェクトが更新操作を試行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## 例  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.DropDownList>コントロール、<xref:System.Web.UI.WebControls.TextBox>コントロール、およびいくつか<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール データを更新します。<xref:System.Web.UI.WebControls.DropDownList>の名前を表示、`NorthwindEmployee`中、<xref:System.Web.UI.WebControls.TextBox>コントロールを使用して入力し、アドレス情報を更新します。<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>コレクションが含まれています、<xref:System.Web.UI.WebControls.ControlParameter>の選択した値にバインドされているオブジェクト、 <xref:System.Web.UI.WebControls.DropDownList>、トリガーするボタン、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>従業員が選択された後にのみ操作が有効にします。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_13\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_13\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" /> method for the base class so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、によって示された型のオブジェクトを作成するために、文字列の値を実際のプロパティの型に変換するときにどのようなカルチャ情報が使用されるかを示す値を設定または <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />です。</summary>
        <value>カルチャ情報。 既定値は <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートの変更を保存、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 、ページがサーバーにポストされた時刻以降のオブジェクト。</summary>
        <returns>変更内容を含むオブジェクト、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ビュー ステート <see langword="null" />, オブジェクトに関連付けられているビューステートがない場合は、です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> メソッドは、主にコントロールの開発者によって使用されます。  
  
 ビュー ステートは、サーバー コントロールのプロパティの値を累積したものです。 これらの値に自動的に配置、 <xref:System.Web.UI.Control.ViewState%2A> インスタンスであるサーバー コントロールのプロパティの <xref:System.Web.UI.StateBag> クラスです。<xref:System.Web.UI.Control.ViewState%2A> 値が文字列オブジェクトをサーバー コントロールのライフ サイクルの保存状態の段階の後に、永続化します。  
  
 ビュー ステートの内容は、クライアントに返さビューステートを保存すると、html 形式で格納されている変数として `Hidden` 要素。 カスタム サーバー コントロールを作成するときに、オーバーライドすることで効率を向上できます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> メソッドと変更、 `ViewState` サーバー コントロールのプロパティです。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> 基本的なデータの取得を超えるデータで操作を要求するために使用します。</param>
        <summary>によって識別されるオブジェクトからデータを取得、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" /> メソッドを呼び出すことによってプロパティがで識別される、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> プロパティを任意の値を渡すこと、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" /> コレクションです。</summary>
        <returns>
          <see cref="T:System.Collections.IEnumerable" /> データ行のリスト。 詳細については、「<see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />」を参照してください。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドの呼び出し、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> を渡す、 `arguments` パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="arguments" /> に渡される、 <see cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドは、データ ソースは、ページングや並べ替えを取得したデータを有効にするデータの取得中にいくつか追加の作業を実行する必要がありますが、データ ソース コントロールが要求された機能をサポートしていないことを指定します。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメソッドまたは関数の名前を設定、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> を行の数を取得します。</summary>
        <value>メソッドの名前を表す、または関数を文字列、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> を使用して行の数を取得します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> データ ソースのページングをサポートするために行の合計数を取得するために使用するビジネス オブジェクト メソッドを識別します。<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> プロパティが評価される場合にのみ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> にプロパティが設定されている `true`します。 詳細についてはページングがサポートされている方法、 <xref:System.Web.UI.WebControls.ObjectDataSourceView>, を参照してください <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>します。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ取得操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> イベントからの戻り値の値を確認し、出力パラメーターかデータ取得操作が完了した後に例外がスローされたかどうかを決定します。 戻り値、出力パラメーター、および例外処理のプロパティから提供されて、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> イベントに関連付けられているオブジェクト。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Selecting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データの取得操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> 、パラメーターの値を検証するか、前にパラメーター値を変更する、アプリケーションに固有である追加の初期化処理を実行するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールはデータ取得操作を実行します。 パラメーターとして利用可能な <xref:System.Collections.IDictionary> によってアクセスされるコレクション、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> によって公開されるプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメソッドまたは関数の名前を設定、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> コントロールがデータを取得するために呼び出します。</summary>
        <value>メソッドの名前を表す、または関数を文字列、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> を使用してデータを取得します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定されたメソッドはメソッド シグネチャを持つことができますが、いずれかのために次の表に示されている型を返す必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSource> ことを正常に呼び出すコントロール  
  
|戻り値の型|アクション|  
|-----------|-----------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> によって返される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
|<xref:System.Data.DataTable>|A <xref:System.Data.DataView> を使用して作成されて、 <xref:System.Data.DataTable> によって返されると、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
|<xref:System.Data.DataSet>|最初の <xref:System.Data.DataTable> の <xref:System.Data.DataSet> の抽出元と <xref:System.Data.DataView> が作成され、によって返される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
|<xref:System.Object>|オブジェクトが 1 つの要素でラップ <xref:System.Collections.IEnumerable> によって返されると、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> メソッドです。|  
  
 によって識別されるメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティは、インスタンス メソッドであることができます、または `static` \(`Shared` Visual Basic で\) メソッドです。 ビジネス オブジェクトが作成され、破棄するたびにインスタンス メソッドである場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> メソッドが呼び出されます。 処理できる、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> で指定されたメソッドの前に、ビジネス オブジェクトを使用するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティが呼び出されます。 処理するには、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> によって指定されたメソッドの後に発生するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティが呼び出されます。 \(`Dispose` ビジネス オブジェクトを実装する場合にのみ呼び出されますが、 <xref:System.IDisposable> インターフェイスです\)。 メソッドの場合、 `static` \(`Shared` Visual Basic で\)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。  
  
 ビジネス オブジェクトの場合、 <xref:System.Web.UI.WebControls.ObjectDataSource> 1 つ以上のメソッドまたは関数と同じ名前 \(メソッドのオーバー ロード\) すると、制御のしくみを実装すると、データ ソース コントロールがしいものでは、パラメーターなどの条件のセットに応じての呼び出しを試行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> コレクションです。 場合では、パラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> コレクションで指定されたメソッドのシグネチャの一致しない、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティには、データ ソースは例外をスローします。  
  
 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 次のコード例を示す方法、 <xref:System.Web.UI.WebControls.GridView> を使用してデータ コントロールで表示できる、 <xref:System.Web.UI.WebControls.ObjectDataSource> Web フォーム ページ上のコントロールです。<xref:System.Web.UI.WebControls.ObjectDataSource> に部分的または完全修飾クラス名を識別する、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> プロパティとデータを取得するために呼び出されるメソッドの <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティです。 実行時に、オブジェクトが作成され、リフレクションを使用して、メソッドが呼び出されます。<xref:System.Web.UI.WebControls.GridView> コントロールを列挙、 <xref:System.Collections.IEnumerable> によって返されるコレクション、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>, 、データを表示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用されるパラメーターを含むパラメーターのコレクションを取得、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" /> メソッドです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> によって指定されたメソッドが使用するパラメーターを格納している、 <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名前と型のパラメーターに含まれている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> の名前と型によって指定されたメソッド内にあるパラメーターのコレクションに一致する必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティ シグネチャ。 などのパラメーターの指定のデータ バインド コントロールを使用するときに <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView>, 、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データ バインド コントロールによって提供されるこれらのパラメーターを使用して、コレクションに明示的に指定されているパラメーターを自動的にマージします。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 次のコード例を使用して、1 つのデータ レコードを取得する方法を示しています、 <xref:System.Web.UI.WebControls.ObjectDataSource> を制御して、内のデータ レコードを表示、 <xref:System.Web.UI.WebControls.DetailsView> コントロールです。<xref:System.Web.UI.WebControls.ObjectDataSource> を呼び出して、特定の従業員レコードを取得、 `GetEmployee` のメソッド、 `EmployeeLogic` クラスです。`GetEmployee` メソッドには、従業員 ID パラメーターが必要です。<xref:System.Web.UI.WebControls.ObjectDataSource> コントロール、 <xref:System.Web.UI.WebControls.QueryStringParameter> でオブジェクトをその <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> の ID を渡すコレクション、 `GetEmployee` メソッドです。  
  
 実装例を表示する、 `EmployeeLogic` クラスおよび `GetEmployee` メソッドを参照してください <xref:System.Web.UI.WebControls.ObjectDataSource>します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_3\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_3\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または並べ替えをサポートするデータ ソースの並べ替え式を指定するためには、データ取得メソッドのパラメーターの名前を設定します。</summary>
        <value>この並べ替え式の値を受け取るパラメーターを示すために使用するメソッドのパラメーターの名前。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> プロパティは、データ ソースの並べ替えをサポートするために使用します。 ときに、 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> プロパティが設定されて、 <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトおよびに渡される、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> 、メソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> プロパティによって指定されたメソッドのパラメーター名を識別する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> 並べ替え式の値を受け入れるビジネス オブジェクトのプロパティです。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースのページングのサポートの結果セットから取得する最初のレコードの整数のインデックスを示すために使用されるデータの取得メソッドのパラメーターの名前を設定します。</summary>
        <value>取得する最初のレコードを示すために使用するビジネス オブジェクト メソッドのパラメーターの名前。 既定値は、「既定値」です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> ページングを有効にするプロパティを設定する必要があります。 詳細についてはページングがサポートされている方法、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトは、「 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>します。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> プロパティはビュー ステートに格納します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />」を参照してください。</summary>
        <value>
          <see langword="true" />, 、その状態を保存するデータ ソース ビューがマークされている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 使用できる場合にのみ、 <xref:System.Web.UI.WebControls.ObjectDataSourceView> にインスタンスをキャスト、 <xref:System.Web.UI.IStateManager> インターフェイスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> 状態を復元します。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ObjectDataSourceView> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.SaveViewState" />」を参照してください。</summary>
        <returns>変更内容を含むオブジェクト、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> ビュー ステートそれ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ObjectDataSourceView> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.TrackViewState" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ObjectDataSourceView> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> に変更を保存できるように、ビュー ステートへの変更を追跡するオブジェクト、 <see cref="P:System.Web.UI.Control.ViewState" /> 制御と、同じページに対する要求を間で永続化されたオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクラスの名前を設定、 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールを表します。</summary>
        <value>オブジェクトの種類を識別する部分的または完全修飾クラス名を <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> を表します。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オブジェクトのインスタンスを作成、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールのバインド先、コントロールでは、リフレクションを使用して、実行時に型の名前で識別される型をロードします。 そのための値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> プロパティは、Bin ディレクトリまたは App\_Code ディレクトリに配置されているコードの部分修飾型またはグローバル アセンブリ キャッシュに登録されているコードの完全修飾型名を指定できます。 グローバル アセンブリ キャッシュを使用する場合は、適切な参照を追加する必要があります、 `assemblies` Machine.config または Web.config 構成ファイルのセクションです。  
  
   
  
## 例  
 次のコード例を示す方法、 <xref:System.Web.UI.WebControls.GridView> を使用してデータ コントロールで表示できる、 <xref:System.Web.UI.WebControls.ObjectDataSource> Web フォーム ページ上のコントロールです。<xref:System.Web.UI.WebControls.ObjectDataSource> に部分的または完全修飾クラス名を識別する、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> プロパティとデータを取得するために呼び出されるメソッドの <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> プロパティです。 実行時に、オブジェクトが作成され、リフレクションを使用して、メソッドが呼び出されます。<xref:System.Web.UI.WebControls.GridView> コントロールを列挙、 <xref:System.Collections.IEnumerable> によって返されるコレクション、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> しデータを表示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_1\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_1\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">A <see cref="T:System.Collections.IDictionary" /> 、キーの値を更新する項目を識別するために使用します。 指定されたメソッドを使用してこれらのパラメーターが使用される、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> プロパティを更新操作を実行します。 メソッドを使用して関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <param name="values">A <see cref="T:System.Collections.IDictionary" /> のデータ ソースに適用する新しい値。 指定されたメソッドを使用してこれらのパラメーターが使用される、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> プロパティをデータベースの更新操作を実行します。 メソッドを使用して関連付けられているパラメーターがない場合は、渡す <see langword="null" />します。</param>
        <param name="oldValues">A <see cref="T:System.Collections.IDictionary" /> を含む追加の非キー値をデータ ソース内の項目に一致するために使用します。 場合にのみ、行の値は、delete メソッドに渡される、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" /> プロパティに設定されて、 <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> フィールドです。</param>
        <summary>によって識別されるメソッドを呼び出して、更新操作を実行、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> プロパティとに提供されているパラメーターを使用して、 <paramref name="keys" />, 、<paramref name="values" />, 、または <paramref name="oldValues" /> コレクションです。</summary>
        <returns>更新された; 行の数数が不明の場合は\-1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の戻り値は、\-1 で、不明な数の行が更新されたことを意味します。 別の値を返すには、設定、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> のオブジェクト、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> イベントです。 影響を受けた行の数が返される通常、 `Update` ビジネス オブジェクトおよびその値をメソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> のパラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> イベントです。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> メソッドの呼び出し、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> を渡して、メソッド、 `keys`, 、`values`, 、および `oldValues` パラメーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 操作が完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> 戻り値の値を調べると、出力パラメーター、または後に例外がスローされたかどうかを判断するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 操作が完了します。 戻り値、出力パラメーター、および例外処理のプロパティから提供されて、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> イベントに関連付けられているオブジェクト。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメソッドまたは関数の名前を設定、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> データを更新するためです。</summary>
        <value>メソッドの名前を表す、または関数を文字列、 <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> を使用してデータを更新します。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView> オブジェクトがあると見なさによって識別されるメソッド、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> バッチではなく、一度にプロパティが 1 つの更新プログラムを実行します。  
  
 メソッドは、インスタンス メソッドまたは `static` \(`Shared` Visual Basic で\) メソッドです。 ビジネス オブジェクトが作成され、毎回によって指定されたメソッドが破棄インスタンス メソッドである場合、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティが呼び出されます。 処理できる、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> で指定されたメソッドの前に、ビジネス オブジェクトを使用するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティが呼び出されます。 処理するには、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> 後に発生するイベントを <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> メソッドが呼び出されます。 \(`Dispose` と呼ばれる場合は、ビジネス オブジェクトを実装する場合にのみ、 <xref:System.IDisposable> インターフェイスです\)。 メソッドの場合、 `static` \(`Shared` Visual Basic で\)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。  
  
 ビジネス オブジェクトの場合、 <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトは、1 つ以上のメソッドまたは関数と同じ名前 \(メソッドのオーバー ロード\) を実装するには機能、データ ソース コントロールがしいものでは、パラメーターなどの条件のセットに応じての呼び出しを試行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> コレクションです。 場合では、パラメーター、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> コレクションで指定されたメソッドのシグネチャの一致しない、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティには、データ ソースは例外をスローします。  
  
 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>」を参照してください。  
  
 値、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティはビュー ステートに格納します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DropDownList> コントロール、 <xref:System.Web.UI.WebControls.TextBox> コントロール、およびいくつか <xref:System.Web.UI.WebControls.ObjectDataSource> データを更新するコントロール。<xref:System.Web.UI.WebControls.DropDownList> の名前を表示、 `NorthwindEmployee`, 、中に、 <xref:System.Web.UI.WebControls.TextBox> コントロールを使用して入力し、アドレス情報を更新します。<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> コレクションに含まれる、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトの選択した値にバインドされている、 <xref:System.Web.UI.WebControls.DropDownList>, をトリガーするボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 従業員が選択した後にのみ操作が有効にします。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_12\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_12\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用されるパラメーターを含むパラメーターのコレクションを取得、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> メソッドです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> によって使用されるパラメーターを格納している、 <see cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名前と型のパラメーターに含まれている、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> の名前と型によって指定されたメソッド内にあるパラメーターのコレクションに一致する必要があります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> プロパティ シグネチャ。 パラメーター名が影響を受けました、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> プロパティとは大文字小文字を区別します。 などのパラメーターの指定のデータ バインド コントロールを使用するときに <xref:System.Web.UI.WebControls.GridView> と <xref:System.Web.UI.WebControls.DetailsView>, 、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、データ バインド コントロールによって提供されるこれらのパラメーターを使用して、コレクションに明示的に指定されているパラメーターを自動的にマージします。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DropDownList> コントロール、 <xref:System.Web.UI.WebControls.TextBox> コントロール、およびいくつか <xref:System.Web.UI.WebControls.ObjectDataSource> データを更新するコントロール。<xref:System.Web.UI.WebControls.DropDownList> の名前を表示、 `NorthwindEmployee`, 、中に、 <xref:System.Web.UI.WebControls.TextBox> コントロールを使用して入力し、アドレス情報を更新します。<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> コレクションに含まれる、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトの選択した値にバインドされている、 <xref:System.Web.UI.WebControls.DropDownList>, をトリガーするボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 従業員が選択した後にのみ操作が有効にします。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_12\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_12\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSourceView.Updating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生する前に、 <see cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" /> 操作します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> 、パラメーターの値を検証するか、前にパラメーター値を変更する、アプリケーションに固有である追加の初期化処理を実行するイベント、 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロールは、実行、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 操作します。 パラメーターとして利用可能な <xref:System.Collections.IDictionary> によってアクセスされるコレクション、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> によって公開されるプロパティ、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> オブジェクトです。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DropDownList> コントロール、 <xref:System.Web.UI.WebControls.TextBox> コントロール、およびいくつか <xref:System.Web.UI.WebControls.ObjectDataSource> データを更新するコントロール。<xref:System.Web.UI.WebControls.DropDownList> の名前を表示、 `NorthwindEmployee`, 、中に、 <xref:System.Web.UI.WebControls.TextBox> コントロールを使用して入力し、アドレス情報を更新します。<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> コレクションに含まれる、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトの選択した値にバインドされている、 <xref:System.Web.UI.WebControls.DropDownList>, をトリガーするボタン、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> 従業員が選択した後にのみ操作が有効にします。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource\_13\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/CS/objds13cs.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource\_13\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_13/VB/objds13vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.ObjectDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>