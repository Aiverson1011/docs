<Type Name="LinqDataSourceDeleteEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
  <TypeSignature Language="C#" Value="public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDeleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> オブジェクトは、のいずれかのハンドラーに渡される、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> イベントです。<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> プロパティには、削除されるデータが含まれています。  
  
 データ ソースを表すオブジェクト、データを削除する前に検証例外がスローした場合、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> プロパティには、インスタンスが含まれる、 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> クラスです。 すべての検証例外を取得する、 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> プロパティです。 検証例外がスローされない場合、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> プロパティを含む `null`します。 検証の例外を処理して再スローされる例外を作成したくない場合は、設定、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> プロパティを `true`します。  
  
 イベント ハンドラーを作成する、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> データ クラスからの検証エラーを調べるか、削除操作をキャンセルは、データを検証するイベントです。 設定して、削除操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`します。  
  
 既定では、 <xref:System.Web.UI.WebControls.LinqDataSource> コントロール、元に値をデータ ソースから状態を格納ものを除き、Web ページにある <xref:System.Data.Linq.Mapping.ColumnAttribute> として属性がマークされている `UpdateCheck.Never`します。 LINQ to SQL は、自動的にデータを削除する前に、データの整合性をチェックします。 この機能を使用するには、ビュー ステートに格納されている元の値をデータ ソースの現在の値を比較します。 追加のデータ検証を実行するには、ハンドラーを作成して、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> イベントです。  
  
   
  
## 例  
 次の例のプロパティに基づいて削除操作をキャンセルする方法を示しています、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> プロパティと、Web ページからの値。 例では、ユーザーを選択する必要があります、 <xref:System.Web.UI.WebControls.CheckBox> と商品を削除することを確認するコントロールをレコードの `OnSale` にプロパティが設定されている `true`します。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (object originalObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">指定された型のオブジェクト、 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> を削除するデータを格納するプロパティです。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">削除するデータを検証するときに発生した例外。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> 指定された例外クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除操作の前に、データの検証中にスローされた例外を取得します。</summary>
        <value>エラーが発生した場合は、例外それ以外の場合、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 削除操作が実行される前に検証例外がスローされた場合、例外は、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> プロパティです。 イベントのイベント ハンドラーで、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> イベントでの例外を取得することができます、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または例外が処理されたかどうかがスローされないもう一度ことを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 例外が処理された場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント ハンドラーを作成する、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> 削除操作の前にスローされた検証例外を確認するイベントです。 例外の処理を再度スローすることは望ましくない場合は、設定、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> プロパティを `true`します。 設定しない場合、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> プロパティを `true`, 、コール スタック内の次のイベント ハンドラーに例外が伝達されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除するデータを表すオブジェクトを取得します。</summary>
        <value>指定された型のオブジェクト、 <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> を削除するデータを格納するプロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> が削除されるまで、データと対話するプロパティです。 データを検証するかを設定して、イベントを取り消すことができます、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`します。 内のオブジェクトの値を変更することでレコードが削除されたを変更することができます、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> プロパティです。  
  
   
  
## 例  
 次の例のプロパティに基づいて削除操作をキャンセルする方法を示しています、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> プロパティと、Web ページからの値。 例では、ユーザーを選択する必要があります、 <xref:System.Web.UI.WebControls.CheckBox> と商品を削除することを確認するコントロールをレコードの `OnSale` にプロパティが設定されている `true`します。  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>