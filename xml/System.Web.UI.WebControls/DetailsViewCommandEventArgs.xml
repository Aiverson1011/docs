<Type Name="DetailsViewCommandEventArgs" FullName="System.Web.UI.WebControls.DetailsViewCommandEventArgs">
  <TypeSignature Language="C#" Value="public class DetailsViewCommandEventArgs : System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DetailsViewCommandEventArgs extends System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CommandEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.DetailsView> control raises the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event when a button within a <xref:System.Web.UI.WebControls.ButtonField>, <xref:System.Web.UI.WebControls.CommandField>, or <xref:System.Web.UI.WebControls.TemplateField> row field is clicked. This allows you to provide an event handler that performs a custom routine whenever this event occurs.  
  
> [!NOTE]
>  The <xref:System.Web.UI.WebControls.DetailsView> control also raises other specialized events when certain buttons are clicked \(buttons with the **languageKeyword tag is not supported!!!!**  
>  property set to "Delete", "Insert", "Page", or "Update"\). When using one of these buttons, you should consider using one of the specialized events provided by the control \(such as <xref:System.Web.UI.WebControls.DetailsView.ItemDeleted> or <xref:System.Web.UI.WebControls.DetailsView.ItemDeleting>\).  
  
 A <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> object is passed to the event handler. If the button that raised the event has a command name or command argument value, you can use the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> object to determine these values. To determine the command name and command argument of the button clicked, use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> and <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> properties, respectively. You can also access the <xref:System.Web.UI.WebControls.DetailsView> control that raised the event by using the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> property.  
  
 For a list of initial property values for an instance of the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> class, see the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.%23ctor%2A> constructor.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> object passed to the event handler for the <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> event to determine the command name of the button clicked by the user. This example uses the single\-file coding model.  
  
 [!code-csharp[DetailsViewCommandEventArgsCodeInline\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/CS/detailsviewcommandeventargscs.aspx#1)]
 [!code-vb[DetailsViewCommandEventArgsCodeInline\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeInline/VB/detailsviewcommandeventargsvb.aspx#1)]  
  
 The following code example shows a code\-behind coding model version of the previous example. For this example to work, you must copy the code below into the associated code\-behind file.  
  
 [!code-csharp[DetailsViewCommandEventArgsCodeBehind2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx#1)]
 [!code-vb[DetailsViewCommandEventArgsCodeBehind2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx#1)]  
  
 The following code example shows the code\-behind file for the previous example.  
  
 [!code-csharp[DetailsViewCommandEventArgsCodeBehind2\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/CS/Default.aspx.cs#2)]
 [!code-vb[DetailsViewCommandEventArgsCodeBehind2\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCodeBehind2/VB/DefaultVB.aspx.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsViewCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DetailsViewCommandEventArgs (object commandSource, System.Web.UI.WebControls.CommandEventArgs originalArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object commandSource, class System.Web.UI.WebControls.CommandEventArgs originalArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DetailsViewCommandEventArgs.#ctor(System.Object,System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandSource" Type="System.Object" />
        <Parameter Name="originalArgs" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="commandSource">コマンドのソースです。</param>
        <param name="originalArgs">A <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> イベント データを格納します。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DetailsViewCommandEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> クラスです。  
  
 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>|値、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> のプロパティ、 <xref:System.Web.UI.WebControls.CommandEventArgs> に含まれている、 `originalArgs` パラメーター。|  
|<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>|値、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> のプロパティ、 <xref:System.Web.UI.WebControls.CommandEventArgs> オブジェクトに含まれている、 `originalArgs` パラメーター。|  
|<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>|含まれているオブジェクト、 `commandSource` パラメーター。|  
  
> [!NOTE]
>  イベント発生時に、このコンス トラクターは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.OnItemCommand(System.Web.UI.WebControls.DetailsViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CommandSource">
      <MemberSignature Language="C#" Value="public object CommandSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドのソースを取得します。</summary>
        <value>インスタンス、 <see cref="T:System.Object" /> コマンドのソースを表すクラスです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> コマンドのソースを表すオブジェクトのプロパティにアクセスするプロパティです。 場合によっては、対象になります、 <xref:System.Web.UI.WebControls.DetailsView> コントロール自体には、それ以外の場合があります。 そして、 <xref:System.Web.UI.WebControls.Button> がクリックされたコントロール。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> プロパティを 2 つのどちらかを <xref:System.Web.UI.WebControls.DetailsView> 発生コントロール、 <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> イベントです。  
  
 [!code-csharp[DetailsViewCommandEventArgsCommandSource\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/CS/detailsviewcommandeventargscommandsourcecs.aspx#1)]
 [!code-vb[DetailsViewCommandEventArgsCommandSource\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DetailsViewCommandEventArgsCommandSource/VB/detailsviewcommandeventargscommandsourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DetailsViewCommandEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールがイベントを処理するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> データ バインド イベントのコードがスキップされましたまたは; 実行が完了した場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定 `true` ことを指定するイベント ハンドラーで、 <xref:System.Web.UI.WebControls.DetailsView> 、コードで処理しているために、コントロールはイベントを処理しない必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>