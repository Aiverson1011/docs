<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.FormView> 制御を発生させます、 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 挿入ボタンをクリックしたときにイベント \(でボタンの `CommandName` プロパティが"Insert"に設定\) コントロール内でクリックすると、後で、 <xref:System.Web.UI.WebControls.FormView> コントロールは、レコードを挿入します。 これにより、このイベントが発生するたびに、挿入操作の結果の確認などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> オブジェクトはイベント処理メソッドとが発生する例外の影響を受けたレコードの数を特定することができます。 挿入操作によって影響を受けたレコードの数を確認するのには、使用、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> プロパティです。 使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> プロパティを任意の例外が発生したかどうかを判断します。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> プロパティです。 挿入されたレコードの値にアクセスする必要がある場合、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> プロパティです。  
  
 既定では、 <xref:System.Web.UI.WebControls.FormView> で指定されたモードに制御が戻ります、 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 挿入操作の後のプロパティです。 挿入操作中に例外が発生する場合は、維持、 <xref:System.Web.UI.WebControls.FormView> コントロールを設定して挿入モードで、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> プロパティを `true`します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> コンストラクターに関するトピックを参照してください。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> オブジェクトのイベント処理メソッドに渡される、 <xref:System.Web.UI.WebControls.FormView.ItemInserted> 挿入操作中に例外が発生したかどうかを決定するイベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[FormViewInsertedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-vb[FormViewInsertedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">挿入操作の影響を受ける行の数。</param>
        <param name="e">
          <see cref="T:System.Exception" /> 挿入操作が実行されたときに発生する例外を表します。 例外が発生しなかった場合は使用 <see langword="null" /> このパラメーターにします。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> クラスです。  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|初期値|  
|-----------|---------|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|`affectedRows` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=fullName> オブジェクトに含まれている、 `e` パラメーター。|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|初期化 `false`します。|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|初期化 `false`します。|  
  
> [!NOTE]
>  イベント発生時に、このコンス トラクターは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作の影響を受ける行の数を取得します。</summary>
        <value>挿入操作の影響を受ける行の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> プロパティを挿入操作によって影響を受けたレコードの数を決定します。 このプロパティは通常、次の状況で正しい数のレコードが挿入されたことを確認する使用します。  
  
-   1 つのレコードが挿入されたことを確認します。 不適切に記述された insert ステートメントは、複数のレコードを挿入することができます。  
  
-   例外を発生させない挿入操作中にエラーが発生したときに、レコードが挿入されたことを確認します。  
  
-   データ ソース コントロールなどの競合の検出 \(オプティミスティック同時実行\) をサポートするときに、レコードが挿入されたことを確認、 <xref:System.Web.UI.WebControls.SqlDataSource> と <xref:System.Web.UI.WebControls.ObjectDataSource> 制御は、その <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> プロパティに設定、 `ConflictOptions.CompareAllValues` 列挙値。 この設定では同時に別のユーザーがレコードと同じキー値のあるレコードは挿入されません。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> プロパティをレコードが挿入操作中に挿入されることを確認します。  
  
 [!code-csharp[FormViewInsertedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-vb[FormViewInsertedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>例外を取得します \(存在する場合\) が挿入操作中に発生しました。</summary>
        <value>
          <see cref="T:System.Exception" /> 挿入操作中に発生した例外を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> プロパティ \(存在する場合\)、例外を挿入操作中に発生しました。 このプロパティの取得のかどうかは例外が発生しなかった、 `null`です。  
  
> [!NOTE]
>  例外が発生しました、イベント ハンドラーで例外を処理する場合は、必ず設定して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> プロパティを `true`。 そうしないと、、 <xref:System.Web.UI.WebControls.FormView> コントロールでは、例外が再度スローします。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 挿入操作中に例外が発生したかどうかを決定するプロパティです。  
  
 [!code-csharp[FormViewInsertedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-vb[FormViewInsertedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または挿入操作中に発生した例外が、イベント ハンドラーで処理されたかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 例外が処理された場合、イベント ハンドラーです。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 例外が発生すると、挿入操作中を使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> プロパティを例外が、イベント ハンドラーで処理されたかどうかを示します。 このプロパティに設定すると `true`, 、例外が処理され、再スローされないと見なされます。 このプロパティ設定されている場合 `false`, 、 <xref:System.Web.UI.WebControls.FormView> コントロールでは、例外が再度スローします。 どの例外が発生したかを確認するを使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> プロパティです。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> プロパティを例外が、イベント ハンドラーで処理されたことを示します。  
  
 [!code-csharp[FormViewInsertedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-vb[FormViewInsertedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールは、挿入操作の後挿入モードで維持する必要があります。</summary>
        <value>
          <see langword="true" /> 挿入操作の後に挿入モードのままにするそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Web.UI.WebControls.FormView> で指定されたモードに制御が戻ります、 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティです。 使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> プロパティを指定するかどうか、 <xref:System.Web.UI.WebControls.FormView> コントロールは、挿入操作の後挿入モードで維持する必要があります。 保持する、 <xref:System.Web.UI.WebControls.FormView> 挿入モードの制御、このプロパティを設定 `true`します。  
  
> [!NOTE]
>  状況が発生した \(例外が発生\) など、コントロールが通常とは異なる動作を必要とする場合にのみ、このプロパティを使用する必要があります。 場合、 <xref:System.Web.UI.WebControls.FormView> コントロールを挿入モードのままに既定では、設定する必要がある、 <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> プロパティ代わりにします。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> を保持するプロパティ、 <xref:System.Web.UI.WebControls.FormView> 挿入モード挿入操作中に例外が発生したときのコントロールです。  
  
 [!code-csharp[FormViewInsertedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-vb[FormViewInsertedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入したレコードのフィールドの名前と値のペアを格納しているディクショナリを取得します。</summary>
        <value>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> を挿入したレコードのキー フィールドの名前\/値ペアのディクショナリを含むオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> 挿入したレコードのフィールドの値にアクセスするプロパティです。 たとえば、挿入されたレコードのログを保持するのにこれらの値を使用できます。  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> プロパティを返します。、 <xref:System.Collections.Specialized.OrderedDictionary> を実装するオブジェクト、 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=fullName> インターフェイスです。<xref:System.Collections.Specialized.OrderedDictionary> オブジェクトを含む <xref:System.Collections.DictionaryEntry?displayProperty=fullName> 挿入されたレコードのフィールドを表すオブジェクト。 フィールド名にアクセスするには、使用、 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> のプロパティ、 <xref:System.Collections.Specialized.OrderedDictionary> オブジェクトです。 同様を使用してフィールドの値にアクセスすることができます、 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> プロパティです。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、 <xref:System.Collections.Specialized.OrderedDictionary> 値を直接フィールドにアクセスするオブジェクト。 インデクサーを使用するメリットは、フィールドの値が直接返されることです。 データ ソース フィールドの順序に依存するコントロール \(よう <xref:System.Web.UI.WebControls.AccessDataSource>\) フィールドの値にインデックスによってのみアクセスできます。  
  
   
  
## 例  
 次の例では、内の項目を反復処理する方法、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> コレクションです。  
  
 [!code-csharp[FormViewInsertedEventArgsValues\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]
 [!code-vb[FormViewInsertedEventArgsValues\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      </Docs>
    </Member>
  </Members>
</Type>