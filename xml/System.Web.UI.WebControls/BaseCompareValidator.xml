<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>型指定された比較を実行する検証コントロールのための、抽象基底クラスとして使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BaseCompareValidator> クラスはなど、値を比較検証コントロールによって継承、 <xref:System.Web.UI.WebControls.CompareValidator> と <xref:System.Web.UI.WebControls.RangeValidator> コントロールを共通の基本的な機能を提供します。  
  
 使用して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> データを指定するプロパティを入力する値を比較する前に変換されます。  
  
> [!NOTE]
>  検証する入力コントロールの値は、指定されたデータ型に変換できない、検証が失敗します。<xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> に検証コントロールのプロパティが設定されている `false`します。  
  
 <xref:System.Web.UI.WebControls.BaseCompareValidator> クラスは、いくつかの静的なプロパティと比較検証を実行するときに便利なメソッドにも含まれます。 使用して、特定のデータ型に文字列を変換できるかどうかを指定できます、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> メソッドです。 2 桁の年で表せる最大の年が含まれている、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> プロパティです。<xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> メソッドでは、2 桁の年を 4 桁の年に変換することができます。  
  
> [!NOTE]
>  派生した検証コントロールを使用すると、 <xref:System.Web.UI.WebControls.BaseCompareValidator> 内の制御、 <xref:System.Web.UI.UpdatePanel> コントロール、検証コントロールとに関連付けられたコントロールが同じパネル存在するかどうかを確認します。 使用の詳細については、 <xref:System.Web.UI.UpdatePanel> 部分ページ更新用に制御を参照してください [Partial\-Page Rendering Overview](http://msdn.microsoft.com/ja-jp/5c12736d-d9e9-464a-9388-3fe0f9f49e49)します。  
  
 検証コントロールの詳細については、次を参照してください。 <xref:System.Web.UI.WebControls.BaseValidator>します。  
  
## ユーザー補助  
 このコントロールの既定で表示されるマークアップは、Web コンテンツ Accessibility Guidelines 1.0 \(WCAG\) 優先度 1 のガイドラインなどのユーザー補助に関する標準に準拠していません可能性があります。 このコントロールのユーザー補助のサポートに関する詳細については、「 [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Because the <xref:System.Web.UI.WebControls.BaseCompareValidator> class is abstract, you cannot create a <xref:System.Web.UI.WebControls.BaseCompareValidator> object directly. This constructor is commonly called by the constructor of a derived class to initialize the properties defined in the <xref:System.Web.UI.WebControls.BaseCompareValidator> class.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>HTML 属性およびスタイルを指定したコントロールの描画に使用する必要がある追加 <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A> メソッドは、コントロールの HTML タグ内のコントロールの属性の表示に使用します。 このメソッドは通常、適切な属性を挿入する派生クラスで、コントロールの開発者によってオーバーライドされておりにスタイルが設定、 <xref:System.Web.UI.HtmlTextWriter> コントロールの出力ストリーム。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> method, be sure to call the corresponding method in the base class. Otherwise, the attributes contained in the base class will not be rendered.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">テストする文字列。</param>
        <param name="type">
          <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 値のいずれか。</param>
        <summary>指定したデータ型を指定した文字列を変換できるかどうかを決定します。 このオーバー ロードされたメソッドのテスト、通貨、二重のバージョンと、現在のカルチャで使用される形式を使用して日付の値。</summary>
        <returns>
          <see langword="true" /> 指定されたデータ文字列を指定されたデータ型に変換できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29> 、指定した文字列を指定したデータ型に変換できるかどうかを決定する方法です。 このメソッドは通常、文字列は、そのデータ型に依存する操作を実行する前に互換性のあるデータ型に変換できるかどうかをテストに使用します。  
  
 このバージョンのメソッドは、現在のカルチャで使用される形式を使用して値をテストします。 カルチャに依存しない形式を使用して値をテストするには、使用、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=fullName> バージョンのこのメソッドはオーバー ロードします。  
  
   
  
## 例  
 次の例を使用して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> メソッドを 2 つの整数値を比較し、2 番目の整数に変換できるかどうかを決定します。  
  
 [!code-csharp[BaseCompareValidatorCanConvert\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-vb[BaseCompareValidatorCanConvert\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">テストする文字列。</param>
        <param name="type">
          <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 列挙値のいずれか。</param>
        <param name="cultureInvariant">
          <see langword="true" /> カルチャに依存しない形式を使用して値をテストするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>指定したデータ型を指定した文字列を変換できるかどうかを決定します。 オーバー ロードされたメソッドのこのバージョンでは、カルチャに依存しない形式を使用して値をテストするかどうかを指定することができます。</summary>
        <returns>
          <see langword="true" /> 指定されたデータ文字列を指定されたデータ型に変換できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29> 、指定した文字列を指定したデータ型に変換できるかどうかを決定する方法です。 このメソッドは通常、文字列は、そのデータ型に依存する操作を実行する前に互換性のあるデータ型に変換できるかどうかをテストに使用します。 カルチャに依存しない形式を使用して値をテストすることを示すに `true` の `cultureInvariant` パラメーターです。 それ以外の場合で、現在のカルチャで使用される形式を使用して値がテストされます。 現在のカルチャで使用される形式を使用して値をテストする場合は、使用を検討して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> バージョンのこのメソッドはオーバー ロードします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">演算子の左側にある値。</param>
        <param name="rightText">演算子の右側にある値。</param>
        <param name="op">
          <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 値のいずれか。</param>
        <param name="type">
          <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 値のいずれか。</param>
        <summary>指定されたオペレーターおよびデータ型を使用して 2 つの文字列を比較します。 この二重、オーバー ロードされたメソッドの比較通貨では、バージョンと現在のカルチャで使用される形式を使用して日付の値。</summary>
        <returns>
          <see langword="true" /> 場合、 <paramref name="leftValue" /> に関連するパラメーター、 <paramref name="rightValue" /> パラメーターで指定された方法で、 <paramref name="op" /> パラメーター。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> をテストするメソッドを使用するかどうかの値、 `leftText` パラメーターの値に関連する、 `rightText` パラメーターで指定された方法で、 `op` パラメーター。`type` パラメーターと比較される値のデータ型を指定します。  
  
> [!NOTE]
>  場合、 `op` にパラメーターが設定されている `ValidationCompareOperator.DataTypeCheck`, 、このメソッドは、の値のみをテスト、 `leftText` で指定されたデータ型のパラメーター、 `type` パラメーター。`rightText` パラメーターは無視されます。  
  
 このバージョンのメソッドは、現在のカルチャで使用される形式を使用して値を比較します。 カルチャに依存しない形式を使用して値を比較する場合、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> バージョンのこのメソッドはオーバー ロードされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">演算子の左側にある値。</param>
        <param name="cultureInvariantLeftText">
          <see langword="true" /> 左側にある値をカルチャに依存しない形式に変換するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="rightText">演算子の右側にある値。</param>
        <param name="cultureInvariantRightText">
          <see langword="true" /> 右側にある値をカルチャに依存しない形式に変換するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="op">
          <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 値のいずれか。</param>
        <param name="type">
          <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 値のいずれか。</param>
        <summary>指定されたオペレーターおよび検証データ型を使用して 2 つの文字列を比較します。 このバージョンのオーバー ロードでは、カルチャに依存しない形式を使用して値を比較するかどうかを指定することができます。</summary>
        <returns>
          <see langword="true" /> 場合、 <paramref name="leftValue" /> に関連するパラメーター、 <paramref name="rightValue" /> パラメーターで指定された方法で、 <paramref name="op" /> パラメーター。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> をテストするメソッドを使用するかどうかの値、 `leftText` パラメーターの値に関連する、 `rightText` パラメーターで指定された方法で、 `op` パラメーター。`type` パラメーターと比較される値のデータ型を指定します。  
  
> [!NOTE]
>  場合、 `op` にパラメーターが設定されている `ValidationCompareOperator.DataTypeCheck`, 、このメソッドは、の値のみをテスト、 `leftText` で指定されたデータ型のパラメーター、 `type` パラメーター。`rightText` パラメーターは無視されます。  
  
 カルチャに依存しない形式を使用して値を比較することを示すに `true` の `cultureInvariantLeftText` と `cultureInvariantRightText` パラメーターです。 それ以外の場合、値が比較、現在のカルチャで使用される形式を使用します。 現在のカルチャで使用される形式を使用して値を比較するときに、使用を検討して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=fullName> バージョンのこのメソッドはオーバー ロードします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">変換するテキスト。</param>
        <param name="type">
          <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 値のいずれか。</param>
        <param name="value">このメソッドが戻るときに、変換結果を持つオブジェクトが含まれています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>指定したテキストを指定したデータ型のオブジェクトに変換します。 このオーバー ロードされたメソッドに変換、通貨、二重のバージョンと、現在のカルチャで使用される形式を使用して日付の値。</summary>
        <returns>
          <see langword="true" /> 変換が成功した場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29> メソッドを使用してテキストを指定されたデータ型のオブジェクトに変換します。 メソッドが返されます `true` または `false` で変換が成功するかどうかを示すときに、変換後の値が格納されている、 `value` `out` パラメーター。  
  
> [!NOTE]
>  変換が成功した場合、 `value` にパラメーターが設定されている `null`します。  
  
 このバージョンのメソッドでは、現在のカルチャで使用される形式を使用して値に変換します。 カルチャに依存しない形式を使用して値に変換する、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=fullName> バージョンのこのメソッドはオーバー ロードします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">変換するテキスト。</param>
        <param name="type">
          <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 値のいずれか。</param>
        <param name="cultureInvariant">
          <see langword="true" /> 値をカルチャに依存しない形式に変換するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="value">このメソッドが戻るときに、変換結果を持つオブジェクトが含まれています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>指定したテキストを指定したデータ型のオブジェクトに変換します。 オーバー ロードされたメソッドのこのバージョンでは、カルチャに依存しない形式を使用して値を変換するかどうかを指定することができます。</summary>
        <returns>
          <see langword="true" /> 変換が成功した場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29> メソッドを使用してテキストを指定されたデータ型のオブジェクトに変換します。 メソッドが返されます `true` または `false` で変換が成功するかどうかを示すときに、変換後の値が格納されている、 `value``out` パラメーター。  
  
> [!NOTE]
>  変換が成功した場合、 `value` にパラメーターが設定されている `null`します。  
  
 カルチャに依存しない形式を使用して値を変換することを示すに `true` の `cultureInvariant` パラメーターです。 それ以外の場合、値は変換され、現在のカルチャで使用される形式を使用します。 現在のカルチャで使用される形式を使用して値を変換するときに、使用を検討して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=fullName> バージョンのこのメソッドはオーバー ロードします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または比較する前に、値がカルチャに依存しない形式に変換するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 比較する前に、値をカルチャに依存しない形式に変換するにはそれ以外の場合、 <see langword="false" />です。既定値は <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> にプロパティが設定されている `true`, 、コントロールのプロパティを厳密に型指定されませんが、比較する前に、カルチャに依存しない形式に変換されます。 このプロパティに設定すると `false`, 、値が、現在のカルチャの形式に変換します。<xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> プロパティでは、Web ページ上のコントロールのユーザーによって入力された値には影響しません。  
  
 テーマまたはスタイル シートのテーマによって、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>年の 2 桁の年を表すことができる最大値を取得します。</summary>
        <value>2 桁の年を表すことができる最大年。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> プロパティを 100 年の範囲内の 2 桁の年で表せる最大の年を決定します。 例では、このプロパティに値が含まれている場合の `2029`, 、1930年から 2029 年を表すことができます、2 桁の年を使用します。 Two digit year 30 は 1930 と解釈され、29 は 2029年として解釈されます。 このプロパティの値を直接変更することはできません。ただし、設定して 2 桁で表すことが年の最大値を変更することができます、 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>検証コントロールを \(「上位レベル」\) の新しいブラウザーに表示できるかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> 検証コントロールを「アップレベル」ブラウザーに表示できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A> メソッドは、主にで使用されるヘルパー関数、 <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> プロパティをクライアントのブラウザーが「上位」の表示 \(新しいブラウザーに表示\) をサポートするかどうかを確認します。<xref:System.Web.UI.WebControls.BaseCompareValidator> クラスを返すには、このメソッドをオーバーライド `false` 、現在のカルチャは、グレゴリオ暦以外のカレンダーを使用している場合。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding the <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" /> method, be sure to call the corresponding method in the base class. Otherwise, conditions defined in the base class will be bypassed.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のカルチャの日付値に、月、日、および年が表示される順序が決まります。</summary>
        <returns>現在のカルチャの日付値に、月、日、および年が表示される順序を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 月、日、および日付の値の年は、現在のカルチャ設定によって異なる順序で表示できます。<xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A> メソッドを使用して、これらの値が表示される順序を決定します。 次の表は、このメソッドによって返される異なる値を示します。  
  
|データ要素の順序|戻り値|  
|--------------|---------|  
|日、月、年|"dmy"|  
|月、日、年|"mdy"|  
|年、月、日|"ymd"|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">2 桁の年。</param>
        <summary>指定した 2 桁の年の 4 桁の年表現を生成します。</summary>
        <returns>指定した 2 桁の年の 4 桁の年表現。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> 指定した 2 桁の年の 4 桁の年表現を生成します。 値に応じて異なります 4 桁の年表現、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> プロパティで、100 年の範囲内の 2 桁の年で表せる最大の年が含まれています。 たとえば場合、 <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> プロパティ値を格納 `2029`, 、 <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> メソッドは、1930年 ~ 2029年で年を返します。 Two digit year 30 は 1930 と解釈され、29 は 2029年として解釈されます。 設定して 2 桁で表すことが年の最大値を変更することができます、 <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName> プロパティです。  
  
> [!NOTE]
>  このメソッドはため `static`, 、\- たとえば、クラス名とメソッド名を修飾することにより、クラスのインスタンスを作成しなくても使用することができます `BaseCompareValidator.GetFullYear`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または比較が行われる前に、比較対象の値に変換されるデータ型を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 列挙値のいずれか。 既定値は <see langword="String" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> プロパティを比較に使用されるデータ型を指定します。<xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> プロパティは、さまざまな比較検証コントロールによって異なる方法で使用します。  
  
> [!IMPORTANT]
>  ときに、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.ValidationDataType.Date> と現在のカレンダーの種類は、グレゴリオ暦以外、検証コントロールがサーバー側の検証のみを実行します。 検証コントロールのクライアント スクリプトには、グレゴリオ暦だけがサポートしています。  
  
 たとえば、 <xref:System.Web.UI.WebControls.RangeValidator> 比較を実行する前に、コントロール、すべての値と比較される \(上限、下限の境界、および入力コントロールの値\) が指定されたデータ型に変換されます。 ただし、使用する場合、 <xref:System.Web.UI.WebControls.CompareValidator> を制御し、設定、 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> プロパティを `ValidationCompareOperator.DataTypeCheck`, 、入力コントロールの値のみが指定されたデータ型に変換します。  
  
> [!NOTE]
>  検証コントロールに関連付けられた入力コントロールの値は、指定されたデータ型に変換できない、検証が失敗します。<xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> に検証コントロールのプロパティが設定されている `false`します。  
  
 次の表に、使用できる値、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> プロパティです。  
  
|データ型|説明|  
|----------|--------|  
|`String`|文字列データ型を指定します。|  
|`Integer`|32 ビット符号付き整数データ型を指定します。|  
|`Double`|倍精度浮動小数点数値データ型を指定します。|  
|`Date`|Date データ型を指定します。|  
|`Currency`|通貨データ型を指定します。|  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次の例では、使用、 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> プロパティと比較される値が、比較が行われる前に変換されるデータ型を指定します。  
  
 [!code-csharp[Classic CompareValidator Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic CompareValidator Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したデータ型は、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.ValidationDataType" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したテキストを指定したデータ型のオブジェクトに変換します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したデータ型を指定した文字列を変換できるかどうかを決定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたオペレーターおよび検証データ型を使用して 2 つの文字列を比較します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>