<Type Name="ListView" FullName="System.Web.UI.WebControls.ListView">
  <TypeSignature Language="C#" Value="public class ListView : System.Web.UI.WebControls.DataBoundControl, System.Web.UI.IDataKeysControl, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IDataBoundListControl, System.Web.UI.WebControls.IPageableItemContainer, System.Web.UI.WebControls.IPersistedSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListView extends System.Web.UI.WebControls.DataBoundControl implements class System.Web.UI.IDataKeysControl, class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundListControl, class System.Web.UI.WebControls.IPageableItemContainer, class System.Web.UI.WebControls.IPersistedSelector" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListView" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataKeysControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundListControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPageableItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPersistedSelector</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedIndexChanged")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ListViewDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ListView), "ListView.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("SelectedPersistedDataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー定義のテンプレートを使用して、データ ソースの値を表示します。<see cref="T:System.Web.UI.WebControls.ListView" /> コントロールを使用すると、レコードの選択、並べ替え、削除、編集、および挿入を行うことができます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトピックの内容  
  
-   [はじめに](#introduction)  
  
-   [テンプレート](#templates)  
  
-   [データ ソースにバインドします。](#binding_to_a_data_source)  
  
-   [データ操作](#data_operations)  
  
-   [イベント](#Events)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## はじめに  
 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、データ ソースからの値を表示します。 次のように、 <xref:System.Web.UI.WebControls.GridView> 行フィールドではなくユーザー定義のテンプレートを使用してデータを表示する点を除いてを制御します。 独自のテンプレートを作成するより柔軟にデータの表示方法を制御するを提供します。  
  
 ソース コードの Visual Studio のプロジェクトはこのトピック用に使用可能な: [Download](http://go.microsoft.com/fwlink/?LinkId=199759)します。  
  
 <xref:System.Web.UI.WebControls.ListView> コントロールは、次の機能をサポートします。  
  
-   などのデータ ソース コントロールにバインドできる <xref:System.Web.UI.WebControls.SqlDataSource>, 、<xref:System.Web.UI.WebControls.LinqDataSource>, 、および <xref:System.Web.UI.WebControls.ObjectDataSource>です。  
  
-   ユーザー定義のテンプレートとスタイルを使用した外観のカスタマイズ。  
  
-   組み込みの並べ替え機能します。  
  
-   組み込みは、更新および機能を削除します。  
  
-   組み込みの機能を挿入します。  
  
-   使用してページング機能のサポート、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
-   組み込みの項目の選択機能。  
  
-   プログラムでアクセス、 <xref:System.Web.UI.WebControls.ListView> オブジェクト モデルを動的にプロパティを設定、イベントを処理します。  
  
-   複数のキー フィールドです。  
  
 ASP.NET で使用できるその他のデータ バインド コントロールの概要については、次を参照してください。 [ASP.NET Data\-Bound Web Server Controls Overview](http://msdn.microsoft.com/ja-jp/f9cf026e-d8b8-49f8-a3c4-64de2edbbb96)します。  
  
<a name="templates"></a>   
## テンプレート  
 ために、 <xref:System.Web.UI.WebControls.ListView> コンテンツを表示するコントロールをコントロールのさまざまな部分のテンプレートを作成する必要があります。<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> が必要です。 その他のすべてのテンプレートはオプションです。<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> プロパティは必要ありません。  
  
 ただし、コントロールが構成されているモード用のテンプレートを作成する必要があります。 たとえば、 <xref:System.Web.UI.WebControls.ListView> コントロールをサポートしているレコードを挿入する必要があります、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートに定義されています。 次の表に、テンプレートを作成できる、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
|テンプレートの種類|説明|  
|---------------|--------|  
|<xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A>|コンテナー オブジェクトをなどを定義するルート テンプレート、 `table`, 、`div`, 、または `span` で定義されているコンテンツを格納する要素、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> または <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> テンプレートです。 持つことも、 <xref:System.Web.UI.WebControls.DataPager> オブジェクトです。|  
|<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>|個々 のアイテムを表示するデータ バインドされたコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A>|個々 の項目間に表示するコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A>|テーブルの行などのコンテナー オブジェクトの定義 \(`tr`\)、 `div`, 、または `span` で定義されているコンテンツを格納する要素、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> と <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> テンプレートです。 グループに表示される項目の数が指定された、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティです。|  
|<xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A>|アイテムのグループ間に表示するコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A>|空に表示されるコンテンツを定義項目の場合、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> テンプレートを使用します。 たとえば場合、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティが 5 に設定され、データ ソースから返される項目の合計数が 8 に表示されるデータの最後のグループ、 <xref:System.Web.UI.WebControls.ListView> コントロールには、3 つの項目で指定したとおりに含まれる、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> テンプレート、および 2 つの項目で指定したとおり、 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> テンプレートです。|  
|<xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A>|データ ソースにデータが返されなかった場合に表示するコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>|その他の項目から選択したアイテムを区別するために、選択した項目に表示されるコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>|連続した項目を区別しやすくために交互の項目に表示されるコンテンツを定義します。|  
|<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>|項目を編集するときに表示するコンテンツを定義します。<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> の代わりにテンプレートを表示、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 編集されているデータ アイテム用のテンプレートです。|  
|<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>|表示項目を挿入するコンテンツを定義します。<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> の代わりにテンプレートを表示、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> テンプレートまたはによって表示される項目の終了時に、いずれかの開始時に、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 場所を指定できます、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> を使用してテンプレートを表示、 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。|  
  
 など、テンプレート内のフィールドの値を表示するため <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>, 、データ バインディング式を使用します。 データ バインド式の詳細については、次を参照してください。 [Data Binding Expression Syntax](http://msdn.microsoft.com/ja-jp/14cdd57d-0f82-4667-b503-73e1a96f136a)します。  
  
 入力コントロールをバインドする、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> と <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレート データ ソースのフィールドには、双方向のバインド式を使用することができます。 これにより、 <xref:System.Web.UI.WebControls.ListView> コントロールを自動的に更新プログラムの入力コントロールの値を取得または挿入操作。 双方向のバインド式には、入力コントロールにも有効にする、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> を自動的に元のフィールド値を表示します。 双方向のバインド式の詳細については、次を参照してください。 [データベースへのバインド](http://msdn.microsoft.com/ja-jp/ab7b2846-975b-4057-a948-45527497c742)します。  
  
<a name="binding_to_a_data_source"></a>   
## データ ソースにバインドします。  
 バインドすることができます、 <xref:System.Web.UI.WebControls.ListView> データ ソース コントロールにコントロール \(など、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールまたは <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール\) またはを実装する任意のデータ ソースのコレクションに、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイスよう <xref:System.Data.DataView?displayProperty=fullName>, 、<xref:System.Collections.ArrayList?displayProperty=fullName>, 、<xref:System.Collections.Generic.List%601?displayProperty=fullName>, 、またはその他のコレクション型。 次のメソッドのいずれかを使用してバインド、 <xref:System.Web.UI.WebControls.ListView> 適切なデータ ソースの種類を制御します。  
  
-   データ ソース コントロールにバインドする、 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListView> への制御、 <xref:System.Web.UI.Control.ID%2A> データ ソース コントロールの値。<xref:System.Web.UI.WebControls.ListView> コントロールは自動的に指定されたデータ ソース コントロールにバインドし、活用できるデータ ソースを並べ替え、挿入、更新、削除、およびページング機能を実行するコントロールの機能です。 これは、優先データにバインドする方法です。  
  
-   実装するデータ ソースにバインドする、 <xref:System.Collections.IEnumerable?displayProperty=fullName> インターフェイスをプログラムで設定、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListView> データ ソースを制御し、呼び出す、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> メソッドです。 この手法を使用すると、 <xref:System.Web.UI.WebControls.ListView> コントロールでは組み込みの並べ替え、更新、削除、およびページング機能を提供しません。 適切なイベントを使用して、この機能を提供する必要があります。  
  
 データ バインディングの詳細については、次を参照してください。 [ASP.NET データ アクセス コンテンツ マップ](http://msdn.microsoft.com/ja-jp/f9219396-a0fa-481f-894d-e3d9c67d64f2)します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、悪意のあるクライアント スクリプトなどを含むユーザー入力を表示します。 アプリケーションで表示する前に実行可能なスクリプトや SQL ステートメントのコードをクライアントから送信されるすべての情報を確認します。 値をこのコントロールに表示される前に可能な限り HTML エンコードすることを強くお勧めします。 ASP.NET には、ブロックのスクリプトと HTML のヘルプでは、ユーザー入力を使用する入力要求の検証機能が用意されています。 ユーザー入力をチェックするのに検証サーバー コントロールを使用することもできます。 詳細については、「[Introduction to the Validation Controls](http://msdn.microsoft.com/ja-jp/3c0e7514-cff2-4bed-936d-ee3f7b740190)」を参照してください。  
  
<a name="data_operations"></a>   
## データ操作  
 ときに、 <xref:System.Web.UI.WebControls.ListView> コントロールがデータ ソース コントロールにバインドされている、 <xref:System.Web.UI.WebControls.ListView> コントロール、データ ソース コントロールの機能を活用し、提供自動並べ替え、insert、update、したり機能を削除します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ListView> コントロールの並べ替え、挿入、更新、および他の種類のデータ ソースを削除するためのサポートを提供します。 ただし、これらの操作を実装するために、適切なイベント ハンドラーにコードを作成する必要があります。  
  
 <xref:System.Web.UI.WebControls.ListView> コントロール テンプレートを使用して、update、delete、insert、並べ替えを実行または操作の選択ボタンを自動的に生成する方法を行いません。 これらのボタンは、適切なテンプレートで手動で含める必要があります。<xref:System.Web.UI.WebControls.ListView> 特定ボタンが配置されているコントロールによって認識される <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが特定の値に設定します。 次の表に、ボタンを <xref:System.Web.UI.WebControls.ListView> コントロールによって認識されるとその機能します。  
  
|ボタン|CommandName 値|説明|  
|---------|-------------------|--------|  
|キャンセル|\[キャンセル\]|編集または挿入操作をキャンセルします。<xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベントを発生させます。|  
|削除|"削除"|データ ソースから現在のレコードを削除します。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> と <xref:System.Web.UI.WebControls.ListView.ItemDeleting> イベントです。|  
|選択|"Select"|セット、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> プロパティを <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> アイテムのプロパティの値。 レンダリング、 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> アイテム用のテンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> と <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> イベントです。|  
|編集|\[編集\]|編集モードでは、アイテムを配置します。 レンダリング、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> アイテム用のテンプレートです。<xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントを発生させます。|  
|挿入|"Insert"|バインドされた値を挿入、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> データ ソースにテンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemInserting> と <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。|  
|更新|「更新」|バインドされた値を使って、データ ソースの現在のレコードを更新、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> テンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> と <xref:System.Web.UI.WebControls.ListView.ItemUpdated> イベントです。|  
|並べ替え|「並べ替え」|示されている列の並べ替え、 `CommandArgument` ボタンのプロパティです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.Sorting> と <xref:System.Web.UI.WebControls.ListView.Sorted> イベントです。|  
  
 \(これは、現在のデータ アイテムをすぐに削除するには\) 削除\] ボタンとは異なり、\[編集\] ボタンがクリックされたときに、 <xref:System.Web.UI.WebControls.ListView> コントロールが編集モードで現在の項目を表示します。 編集モードに含まれているコンテンツで、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 現在のデータ項目のプロパティが表示されます。 通常、項目テンプレートの編集では、\[編集\] ボタンは更新プログラムが、\[キャンセル\] ボタンに置き換えられます。 入力フィールドのデータ型に適したコントロール \(など、 <xref:System.Web.UI.WebControls.TextBox> または <xref:System.Web.UI.WebControls.CheckBox> コントロール\) また、通常ユーザーを変更するためにフィールドの値を表示します。 データ ソースのレコードを更新する更新\] ボタンをクリックし、\[キャンセル\] ボタンをクリックすると、編集操作をキャンセルします。  
  
 挿入機能が有効になっているときに、 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem> または <xref:System.Web.UI.WebControls.InsertItemPosition.LastItem>です。 このプロパティは、場所を定義、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> アイテムの挿入のテンプレートを表示します。 項目の挿入テンプレートには通常、挿入し、\[キャンセル\] ボタンが含まれていて、新しいレコードの値を入力するユーザーに対して空の入力コントロールが表示されます。 データ ソースのレコードを挿入します。 \[挿入\] ボタンをクリックし、\[キャンセル\] ボタンをクリックすると、すべてのフィールドをクリアします。  
  
### 並べ替え  
 <xref:System.Web.UI.WebControls.ListView> コントロールは、ユーザーが項目を並べ替える並べ替えボタンをクリックします。 並べ替え機能の定義に、 `CommandArgument` を並べ替える列を含むボタンのプロパティです。  
  
### ページング  
 同時に、データ ソースからのすべてのレコードを表示する代わりに、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、レコードをページに分割できます。 ページングを有効にするには関連付ける、 <xref:System.Web.UI.WebControls.DataPager> コントロールを <xref:System.Web.UI.WebControls.ListView> コントロールです。 挿入、 <xref:System.Web.UI.WebControls.DataPager> 内の制御、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> テンプレートです。 また場合、 <xref:System.Web.UI.WebControls.DataPager> コントロールが範囲外です、 <xref:System.Web.UI.WebControls.ListView> コントロールを <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティを <xref:System.Web.UI.Control.ID%2A> の <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
<a name="Events"></a>   
## イベント  
 次の表に、イベントでサポートされている、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
|イベント|説明|  
|----------|--------|  
|<xref:System.Web.UI.WebControls.ListView.ItemCanceling>|発生したときに \[キャンセル\] ボタン \(でボタン、 `CommandName` プロパティが「キャンセル」に設定\) は、クリックすると、その前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、挿入または編集操作をキャンセルします。 このイベントは、取り消し操作を停止するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemCommand>|ボタンがクリックされたときに発生、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このイベントは、コントロールのボタンがクリックされたときに、カスタム タスクを実行するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemCreated>|新しい項目が作成されるときに発生、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このイベントは、項目が作成されたときに、アイテムの内容を変更するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemDataBound>|データ項目がデータにバインドされると発生、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このイベントは、項目がデータにバインドされているときに、アイテムの内容を変更するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleted>|\[削除\] ボタンのときに発生 \(でボタンの `CommandName` プロパティが"Delete"に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、データ ソースからレコードを削除します。 このイベントは、削除操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemDeleting>|\[削除\] ボタンのときに発生 \(でボタンの `CommandName` プロパティが"Delete"に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、データ ソースからレコードを削除します。 このイベントは確定するか、削除操作をキャンセルによく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemEditing>|\[編集\] ボタンのときに発生 \(でボタンの `CommandName` プロパティが"Edit"に設定\) がクリックすると、その前に、 <xref:System.Web.UI.WebControls.ListView> コントロールが編集モードに入る。 このイベントは、編集操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserted>|挿入ボタンときに発生 \(でボタンの `CommandName` プロパティが"Insert"に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、データ ソースから、新しいレコードを挿入します。 します。 このイベントは、挿入操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemInserting>|挿入ボタンときに発生 \(でボタンの `CommandName` プロパティが"Insert"に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、レコードを挿入します。 このイベントは挿入操作を取り消すまたは変更、新しい項目の値の検証によく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdated>|更新ボタンのときに発生 \(でボタンの `CommandName` プロパティを「更新」に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、レコードを更新します。 このイベントは、更新操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.ItemUpdating>|更新ボタンのときに発生 \(でボタンの `CommandName` プロパティを「更新」に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、レコードを更新します。 このイベントは更新操作をキャンセルを変更したり、編集した項目の値の検証によく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.LayoutCreated>|発生したときに、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> でテンプレートを作成、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このイベントは、テンプレートを作成したら、タスクを実行するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged>|結局、ページのプロパティが変更されると発生、 <xref:System.Web.UI.WebControls.ListView> コントロールは、新しい値を設定します。|  
|<xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging>|前にデータ ページのプロパティが変更されると発生、 <xref:System.Web.UI.WebControls.ListView> コントロールは、新しい値を設定します。|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged>|\[選択\] ボタンのときに発生 \(でボタンの `CommandName` プロパティが"Select"に設定\) がクリックされた後、 <xref:System.Web.UI.WebControls.ListView> コントロールが選択操作を処理します。 このイベントは、コントロールの項目を選択した後に、カスタム タスクを実行するよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging>|\[選択\] ボタンのときに発生 \(でボタンの `CommandName` プロパティが"Select"に設定\) は、クリックすると、その前に、 <xref:System.Web.UI.WebControls.ListView> コントロールが選択操作を処理します。 このイベントは、select の操作を取り消すよく使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.Sorted>|並べ替えボタンときに発生 \(でボタンの `CommandName` プロパティが"Sort"に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.Sort%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、並べ替え操作を処理します。 このイベントは通常、並べ替えボタンをクリックし、データが並べ替えられているカスタム タスクを実行に使用されます。|  
|<xref:System.Web.UI.WebControls.ListView.Sorting>|並べ替えボタンときに発生 \(でボタンの `CommandName` プロパティが"Sort"に設定\) がクリックされたまたは <xref:System.Web.UI.WebControls.ListView.Sort%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、並べ替え操作を処理します。 このイベントは、並べ替え操作を取り消すまたはカスタムの並べ替えルーチンを実行するによく使用されます。|  
  
<a name="declarative_syntax"></a>   
## 宣言構文  
  
```  
<asp:ListView  
    ConvertEmptyStringToNull="True|False"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    GroupPlaceholderID="string"  
    GroupItemCount="integer"  
    ID="string"  
    InsertItemPosition="None|FirstItem|LastItem"  
    ItemPlaceholderID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCanceling="ItemCanceling event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemEditing="ItemEditing event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLayoutCreated="LayoutCreated event handler"  
    OnLoad="Load event handler"  
    OnPagePropertiesChanged="PagePropertiesChanged event handler"  
    OnPagePropertiesChanging="PagePropertiesChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnSelectedIndexChanging="SelectedIndexChanging event handler"  
    OnSorted="Sorted event handler"  
    OnSorting="Sorting event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SelectedIndex="integer"  
    SkinID="string"  
    Style="string"  
    Visible="True|False"  
>  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <EmptyItemTemplate>  
            <!-- child controls -->  
        </EmptyItemTemplate>  
        <GroupSeparatorTemplate>  
            <!-- child controls -->  
        </GroupSeparatorTemplate>  
        <GroupTemplate>  
            <!-- child controls -->  
        </GroupTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <ItemSeparatorTemplate>  
            <!-- child controls -->  
        </ItemSeparatorTemplate>  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <LayoutTemplate>  
                <!-- child controls -->  
        </LayoutTemplate>  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
</asp:ListView>  
```  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView> HTML テーブルを使用してデータベースからレコードを表示するコントロール。 使用して、値が取得、 <xref:System.Web.UI.WebControls.LinqDataSource> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView\_Simple\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/CS/ListViewSimpleCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView\_Simple\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Simple/VB/ListViewSimpleVB.aspx#1)]  
  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView> を使用して、フロー レイアウト内で値を表示するコントロール、 `div` 要素。 使用して、値が取得、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView\_FlowLayout\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/CS/ListViewFlowLayoutCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView\_FlowLayout\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_FlowLayout/VB/ListViewFlowLayoutVB.aspx#1)]  
  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView> コントロールを挿入、削除、およびレコードを更新します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView\_Edit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/CS/ListViewEditCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView\_Edit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView_Edit/VB/ListViewEditVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.LinqDataSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、 <xref:System.Web.UI.WebControls.ListView> クラスです。 動的に追加する、 <xref:System.Web.UI.WebControls.ListView> コントロールをページ、\[新しい <xref:System.Web.UI.WebControls.ListView> オブジェクトです。 そのプロパティを設定し、それを追加、 <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> コンテナーのコレクションを制御するなど、 <xref:System.Web.UI.WebControls.PlaceHolder> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public override string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.String.Empty" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.AccessKey%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.AccessKey" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddControlToContainer">
      <MemberSignature Language="C#" Value="protected virtual void AddControlToContainer (System.Web.UI.Control control, System.Web.UI.Control container, int addLocation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddControlToContainer(class System.Web.UI.Control control, class System.Web.UI.Control container, int32 addLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="addLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="control">コンテナーに追加するコントロールを格納するオブジェクト。</param>
        <param name="container">子コントロールを格納するために使用するコンテナー。</param>
        <param name="addLocation">コレクション内のコントロールに子コントロールを追加する場所です。</param>
        <summary>指定されたコンテナーに指定したコントロールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.AddControlToContainer%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> コントロールを指定されたコンテナーにコントロールを追加します。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツの代替のデータ項目を <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>カスタム コンテンツの代替のデータ項目を格納するオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> プロパティを代替のデータ項目のカスタム ユーザー インターフェイス \(UI\) を定義します。<xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> テンプレートには通常、同じコントロールととしての内容が含まれています、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> テンプレート、項目しますが、区別するためにさまざまな外観です。  
  
 カスタム テンプレートを宣言によって指定するには、追加、 `AlternatingItemTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 コントロールと、開始タグと終了の間でコンテンツを追加し、 `<AlternatingItemTemplate>` タグ。 データ ソースのフィールド値を表示するには、データ バインディング式を使用します。 詳細については、「[Data\-Binding Expression Syntax](http://msdn.microsoft.com/ja-jp/14cdd57d-0f82-4667-b503-73e1a96f136a)」を参照してください。  
  
 自動的に選択し、削除、および、操作を編集するボタンを作成するには、テンプレートにボタン コントロールを追加します。 設定の <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値のいずれかが次の表に一覧表示します。  
  
|\[ボタンの種類\]|CommandName 値|  
|----------------|-------------------|  
|削除|"削除"|  
|編集|\[編集\]|  
|選択|"Select"|  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> 代替のデータ アイテムのスタイルを定義するテンプレート、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.AlternatingItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/CS/ListViewAlternatingItemTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.AlternatingItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.AlternatingItemTemplate/VB/ListViewAlternatingItemTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BackColor%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.BackColor" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BorderColor%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.BorderColor" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BorderStyle%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, 、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.BorderWidth%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="public virtual string[] ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の各データ行を一意に識別する値が使用されるデータ フィールドの名前、 <see cref="T:System.Web.UI.WebControls.ListView" /> タイミングを制御、 <see cref="P:System.Web.UI.Control.ClientIDMode" /> にプロパティが設定されている <see cref="F:System.Web.UI.ClientIDMode.Predictable" />します。</summary>
        <value>各インスタンスを一意に識別する値が使用されるデータ フィールドの名前、 <see cref="T:System.Web.UI.WebControls.ListView" /> ASP.NET が生成するときの制御、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 防ぐために、コントロールの複数のインスタンスが複数の行に表示されるときに名前付けの競合、 <xref:System.Web.UI.WebControls.ListView> コントロール、ASP.NET は一意な生成 <xref:System.Web.UI.Control.ClientID%2A> コントロールの各インスタンスの値。 指定する方法、 <xref:System.Web.UI.Control.ClientID%2A> 値が設定によって生成された、 <xref:System.Web.UI.Control.ClientIDMode%2A> プロパティです。 設定した場合、 <xref:System.Web.UI.Control.ClientIDMode%2A> プロパティを <xref:System.Web.UI.ClientIDMode.Predictable>, 、ASP.NET によって生成される、 <xref:System.Web.UI.Control.ClientID%2A> で指定されたデータ フィールドから派生したサフィックスを付加した <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A>します。 場合 <xref:System.Web.UI.WebControls.GridView.ClientIDRowSuffix%2A> サフィックスは、連続する番号が設定されています。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値を取得、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</summary>
        <value>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別するために使用されるデータ値、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.ControlCollection" /> の子を表すオブジェクトを制御、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>子コントロールのコレクション、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.Controls%2A> プロパティは、基本実装をオーバーライドします。 これにより、プロパティの戻り値をすべての子コントロールが作成されている、 <xref:System.Web.UI.ControlCollection> オブジェクトです。  
  
 <xref:System.Web.UI.Control.Controls%2A> プロパティでは、プログラムでのインスタンスにアクセスすることができます、 <xref:System.Web.UI.ControlCollection> のクラス、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 コレクションにコントロールを追加、コントロールをコレクションから削除、またはコレクション内のサーバー コントロールを反復処理することができます。  
  
 特定の子コントロールにアクセスする、 <xref:System.Web.UI.WebControls.ListView> 使用する、コントロールを <xref:System.Web.UI.Control.FindControl%2A> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースのデータ フィールドを更新するときに、空の文字列値 \(""\) を null 値に自動的に変換するかどうかを示す値を取得または設定します。</summary>
        <value>空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.Parameter> object of the data source control that the <xref:System.Web.UI.WebControls.ListView> control is bound to also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>. This property performs the same function. Make sure that both properties are set appropriately.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示に使用されるコントロールの階層を作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> ビュー ステートに格納されている値に基づく制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls> メソッドは、ヘルパー メソッドで使用される、 <xref:System.Web.UI.WebControls.ListView> コントロールの階層構造を作成するクラス。 このメソッドのオーバー ロードでは、データ ソースから直接の代わりにビュー ステートの値に基づくコントロールの階層構造を作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected virtual int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソースを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</param>
        <param name="dataBinding">
          <see langword="true" /> 子コントロールがデータにバインドされていることを示すために <see langword="false" /> をポストバック時にコントロールが状態の表示から自身を再作成するかを示します。</param>
        <summary>表示に使用されるコントロールの階層を作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> 指定されたデータ ソースを使用して制御します。</summary>
        <returns>作成される項目の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateChildControls%2A> のコントロールの階層構造を作成するメソッドが使用される、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="dataSource" /> 返します <see langword="null" /> の <see cref="T:System.Web.UI.DataSourceView" />です。  
  
 または  
  
 <paramref name="dataSource" /> 実装していない、 <see cref="T:System.Collections.ICollection" /> インターフェイスを返すことができない、 <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" /> 値。  
  
 または  
  
 <paramref name="dataSource" /> 実装していない、 <see cref="T:System.Collections.ICollection" /> インターフェイスと <paramref name="dataBinding" /> に設定されている <see langword="false" />します。  
  
 または  
  
 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールには、指定されたグループのプレース ホルダーはありません。  
  
 または  
  
 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールには、指定した項目のプレース ホルダーはありません。</exception>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの既定のスタイルを作成します。</summary>
        <returns>線のスタイル、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 呼び出そうとする場合、 <xref:System.Web.UI.WebControls.ListView.CreateControlStyle%2A> 、メソッド、 <xref:System.NotSupportedException> 例外がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">起動しようとしましたが、 <see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" /> メソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDataItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewDataItem CreateDataItem (int dataItemIndex, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewDataItem CreateDataItem(int32 dataItemIndex, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewDataItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataItemIndex" Type="System.Int32" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dataItemIndex">ソース オブジェクトの基になるデータ内のデータ項目のインデックス。</param>
        <param name="displayIndex">内のデータ項目の表示インデックス、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</param>
        <summary>\[データ項目を作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <returns>指定したパラメーターを使用して作成されるデータ項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Web.UI.DataSourceSelectArguments" /> データ ソースに渡される引数を格納するオブジェクト。</summary>
        <returns>データ ソースに渡される引数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 この実装では、 <xref:System.Web.UI.DataSourceSelectArguments> オブジェクトには、ページング操作の引数が含まれています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you extend the <see cref="T:System.Web.UI.WebControls.ListView" /> class, you can override this method and specify custom values that are passed to the data source.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyDataItem">
      <MemberSignature Language="C#" Value="protected virtual void CreateEmptyDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateEmptyDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> 内のテンプレート、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyDataItem%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> コントロールを作成する、 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> テンプレートです。 データ ソースにレコードが返されない場合は、空のデータ テンプレートが表示されます。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      </Docs>
    </Member>
    <Member MemberName="CreateEmptyItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateEmptyItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateEmptyItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateEmptyItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>空の項目を作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <returns>作成された空の項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateEmptyItem%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> 空の項目を作成するコントロール。 空のアイテムを表示するときにデータのページの最後のグループ、 <xref:System.Web.UI.WebControls.ListView> コントロールには、多くのレコードの表示はありません。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInsertItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateInsertItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateInsertItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateInsertItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Insert のアイテムを作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <returns>作成された挿入項目です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateInsertItem%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> 挿入項目を作成するコントロール。 アイテムの挿入は、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクト <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> に等しい <xref:System.Web.UI.WebControls.ListViewItemType.InsertItem?displayProperty=fullName>します。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールがない、 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレートを指定します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.ListViewItem CreateItem (System.Web.UI.WebControls.ListViewItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.ListViewItem CreateItem(valuetype System.Web.UI.WebControls.ListViewItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListViewItemType" />
      </Parameters>
      <Docs>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> 値のいずれか。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.ListViewItem" /> オブジェクト型を指定しています。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.ListViewItem" /> 指定された型を持つオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateItem%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> コントロールを作成する、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクトです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
      </Docs>
    </Member>
    <Member MemberName="CreateItemsInGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsInGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソース。</param>
        <param name="dataBinding">
          <see langword="true" /> あることを示す、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールがデータにバインドされている以外の場合、 <see langword="false" />です。</param>
        <param name="insertPosition">
          <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 値のいずれか。</param>
        <param name="keyArray">配列内の各項目のデータ キーの値を表す、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> グループ内の階層を制御します。</summary>
        <returns>内のデータの現在のページのすべてのデータ項目を格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateItemsInGroups%2A> のコントロールの階層構造を作成するメソッドが使用される、 <xref:System.Web.UI.WebControls.ListView> グループ内のコントロールです。 このメソッドを使用して、 <xref:System.Web.UI.WebControls.ListView> 制御される場合にのみ、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> と <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティが定義されています。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールには、指定した項目のプレース ホルダーはありません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateItemsWithoutGroups">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, System.Web.UI.WebControls.InsertItemPosition insertPosition, System.Collections.ArrayList keyArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; CreateItemsWithoutGroups(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, bool dataBinding, valuetype System.Web.UI.WebControls.InsertItemPosition insertPosition, class System.Collections.ArrayList keyArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
        <Parameter Name="insertPosition" Type="System.Web.UI.WebControls.InsertItemPosition" />
        <Parameter Name="keyArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">データ ソース。</param>
        <param name="dataBinding">
          <see langword="true" /> あることを示す、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールがデータにバインドされている以外の場合、 <see langword="false" />です。</param>
        <param name="insertPosition">
          <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 値のいずれか。</param>
        <param name="keyArray">配列内の各項目のデータ キーの値を表す、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</param>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロール階層グループを使用しません。</summary>
        <returns>内のデータの現在のページのすべてのデータ項目を格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups%2A> のコントロールの階層構造を作成するメソッドが使用される、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このメソッドを使用して、 <xref:System.Web.UI.WebControls.ListView> 制御される場合にのみ、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> プロパティが定義されていません。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void CreateLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ルート コンテナーを作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.CreateLayoutTemplate%2A> でルート コンテナーを作成するために使用するヘルパー メソッドです、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 コンテナーの内容が定義されている、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> プロパティです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateSuffixArrayList">
      <MemberSignature Language="C#" Value="protected virtual void CreateSuffixArrayList (System.Web.UI.WebControls.ListViewPagedDataSource dataSource, System.Collections.ArrayList suffixArray);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateSuffixArrayList(class System.Web.UI.WebControls.ListViewPagedDataSource dataSource, class System.Collections.ArrayList suffixArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.CreateSuffixArrayList(System.Web.UI.WebControls.ListViewPagedDataSource,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Web.UI.WebControls.ListViewPagedDataSource" />
        <Parameter Name="suffixArray" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="dataSource">サフィックスの値を提供するデータ ソース。</param>
        <param name="suffixArray">サフィックスの配列。</param>
        <summary>生成されるときに使用する ASP.NET 用サフィックスの配列を作成、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public override string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.String.Empty" />, 、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.CssClass%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.CssClass" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示される項目の主キー フィールドの名前を格納する配列、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>表示される項目のフィールドの主キーの名前を含む配列、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティをデータ ソースの主キーを表すフィールドを指定します。 このプロパティを宣言によって設定するには、フィールド名のコンマ区切りのリストを使用します。  
  
 ときに、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティを設定すると、 <xref:System.Web.UI.WebControls.ListView> コントロールを自動的に入力、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 指定フィールドまたはフィールドから値を持つコレクション。 これは、各項目のプライマリ キーにアクセスする便利な手段を提供します。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.ListView> コントロールがコントロールの状態\] フィールドにキー フィールドの値を格納します。 設定して、ビュー ステートの暗号化を有効にすることをお勧めこれらの値に機密情報が含まれている場合、 <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> プロパティを `ViewStateEncryptionMode.Always`します。  
  
 設定する必要があります、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> 、自動更新および削除するための機能のプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールを動作します。 これらのキー フィールドの値は、更新または削除するアイテムと一致するために、データ ソース コントロールに渡されます。  
  
 データとして指定されているフィールドのキーを使用して、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティが更新中に、データ ソース コントロールに渡され、削除の各操作を使用して、 `Keys` コレクションです。 キー フィールドのデータは、テンプレート内のコントロールにバインドされていない場合でも、データ ソース コントロールに渡されます。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティをデータ ソースのキー フィールドを指定します。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewItemCommand\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListViewItemCommand\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
      </Docs>
    </Member>
    <Member MemberName="DataKeys">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKeyArray DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.DataKey" /> 内の各項目のデータ キーの値を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>内の各項目のデータのキーを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティが設定されて、 <xref:System.Web.UI.WebControls.ListView> コントロールが自動的に作成、 <xref:System.Web.UI.WebControls.DataKey> コントロール内の各項目のオブジェクト。<xref:System.Web.UI.WebControls.DataKey> オブジェクトで指定されているフィールドの値が格納、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティです。<xref:System.Web.UI.WebControls.DataKey> オブジェクトは、コントロールに追加し、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> コレクションです。  
  
 使用して、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 取得するプロパティを <xref:System.Web.UI.WebControls.DataKey> で特定のデータ項目のオブジェクト、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 使用することができます、 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> 取得するプロパティを <xref:System.Web.UI.WebControls.DataKey> 現在選択されている項目のオブジェクト。 使用することも、 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 現在選択されている項目のデータ キーの値を直接取得するプロパティです。  
  
 使用することができます、 <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A?displayProperty=fullName> 取得するプロパティを <xref:System.Web.UI.WebControls.DataKey> コマンド ボタンがクリックしてされた項目のオブジェクト。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> 内の項目のデータ キーの値を決定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 また、インデックスを使用する既定の動作ではなくデータ項目に基づいてユーザーによる選択内容を保持する方法も示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="T:System.Web.UI.WebControls.DataKeyArray" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem (int itemIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem(int32 itemIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemIndex">削除する項目のインデックス。</param>
        <summary>データ ソースから指定したインデックスにあるレコードを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> プログラムを使用して、データ ソースから指定したインデックスにあるレコードを削除する方法です。 このメソッドは、通常の外部からのレコードを削除する使用、 <xref:System.Web.UI.WebControls.ListView> \] ページで別の管理からなどを制御します。 このメソッドを生成、 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> と <xref:System.Web.UI.WebControls.ListView.ItemDeleting> イベントです。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> で選択した項目をプログラムで削除する方法、 <xref:System.Web.UI.WebControls.ListView> データ ソースからです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.DeleteItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.DeleteItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" /> が 0 未満です。  
  
 または  
  
 <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトに関連付けられている、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは <see langword="null" />です。</exception>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_DeleteMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを削除するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、データ バインド メソッドとして使用するモデルのバインディングとします。  
  
 Web フォームでモデルのバインディングの使用に関するチュートリアル シリーズは、次を参照してください。 [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditIndex">
      <MemberSignature Language="C#" Value="public virtual int EditIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または編集する項目のインデックスを設定します。</summary>
        <value>編集する項目の 0 から始まるインデックス。 既定では\-1 で、項目が編集されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> プログラムで指定または内の項目を決定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> を編集するコントロール。 このプロパティがコントロールの項目のインデックスに設定されている場合、その項目が編集モードで表示されます。 使用して編集モードで、アイテムが表示される、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> テンプレートの代わりに、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> テンプレートです。 設定したりする、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> データ バインド コントロールをユーザーが項目の値の変更を有効にするとします。 編集モードを表示\] モードを切り替えるには、\-1 にこのプロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> プロパティは、どの項目を編集する、またはカスタム編集機能を追加するときにプログラムで判定するときに通常使用、 <xref:System.Web.UI.WebControls.ListView> コントロールです。<xref:System.Web.UI.WebControls.ListView> コントロールが自動的には、項目を編集モード項目テンプレートにボタンを追加する場合、組み込みの編集機能が <xref:System.Web.UI.WebControls.Button.CommandName%2A> にプロパティが設定されている `Edit`します。  
  
   
  
## 例  
 使用する例を次に示します、 <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> アイテムが編集モードであるかどうかを決定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListViewDataItem> クラスです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewDataItem\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/CS/ListViewDataItemDataItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListViewDataItem\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDataItem/VB/ListViewDataItemDataItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.ListView.EditIndex" /> プロパティが\-1 未満の値に設定します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem EditItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem EditItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードでは、項目を取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>編集モードでは、項目、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロール、または <see langword="null" /> 項目が編集モードでない場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> で編集モードになっているアイテムにアクセスするプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 によって編集項目のコンテンツが定義されている、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> プロパティです。  
  
   
  
## 例  
 次の例を使用して編集モードになっている項目を取得する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> プロパティに含まれるコントロールへのアクセスを <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> テンプレートです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemEditing\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditIndex" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアイテムのカスタム コンテンツを編集モードに設定します。</summary>
        <value>内の項目のカスタム コンテンツを格納しているオブジェクトは編集モードです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> プロパティを編集モードの項目のカスタム ユーザー インターフェイス \(UI\) を定義します。<xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> 通常、テンプレートには既存のレコードの値を更新するユーザーの入力コントロールが含まれます。 また、通常、レコードを更新すると、更新操作をキャンセルするボタンが含まれています。  
  
 カスタム テンプレートを宣言によって指定するには、追加、 `EditItemTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 内容とするテンプレートのコントロールを追加、 `EditItemTemplate` 要素。 フィールドは、双方向のバインド式を使用して入力コントロールに関連付けることができます。 これにより、 <xref:System.Web.UI.WebControls.ListView> 編集モードの項目に関連付けられた入力コントロールに自動的に元のフィールドの値を表示するコントロール。 レコードが更新されたときに、 <xref:System.Web.UI.WebControls.ListView> コントロールは自動的に関連付けられた入力コントロールから更新されたフィールドの値を抽出します。 詳細については、「[Data\-Binding Expression Syntax](http://msdn.microsoft.com/ja-jp/14cdd57d-0f82-4667-b503-73e1a96f136a)」を参照してください。  
  
 組み込みのキャンセルや更新操作を実行するボタンを作成するには、テンプレートにボタン コントロールを追加します。 設定の <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値のいずれかが次の表に一覧表示します。  
  
|\[ボタンの種類\]|CommandName 値|  
|----------------|-------------------|  
|キャンセル|\[キャンセル\]|  
|更新|「更新」|  
  
   
  
## 例  
 次の例では、編集モードでアイテムのカスタム テンプレートを定義する方法を示します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.EditItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItem" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の表示が空のテンプレートのユーザー定義の内容、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールがいくつかのレコードが含まれていないデータ ソースにバインドします。</summary>
        <value>空のテンプレートのカスタム コンテンツを格納するオブジェクト。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 空のテンプレートが表示されます、 <xref:System.Web.UI.WebControls.ListView> コントロールにバインドされているデータ ソースにいくつかのレコードが含まれていない場合を制御し、 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=fullName>します。 代わりに、テンプレートを表示、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> テンプレートです。 場合、 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> プロパティが以外の値に設定されて <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=fullName>, 、 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> テンプレートはレンダリングされません。  
  
 空のテンプレートのカスタム ユーザー インターフェイス \(UI\) を定義するにを使用して、 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> プロパティです。 空のテンプレートの宣言でカスタム テンプレートを指定するには、追加し、 `EmptyDataTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `EmptyDataTemplate` 要素。  
  
   
  
## 例  
 次の例では、空のテンプレート用のカスタム テンプレートを定義する方法を示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.EmptyDataTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/CS/ListViewEmptyDataTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.EmptyDataTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyDataTemplate/VB/ListViewEmptyDataTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
      </Docs>
    </Member>
    <Member MemberName="EmptyItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に表示されている空の項目のユーザー定義の内容、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールに現在のデータ ページの最後の行を表示しないデータ項目があるとします。</summary>
        <value>空の項目のカスタム コンテンツを格納するオブジェクト。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 空のアイテムを表示、 <xref:System.Web.UI.WebControls.ListView> コントロールに現在のページの最後のグループを表示しないデータ項目がある場合。 場合にのみ発生する可能性がこの <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> が 1 より大きい値に設定します。 たとえば、 <xref:System.Web.UI.WebControls.ListView> コントロール、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティは、5 に設定することがあり、データ ソースから返される項目の合計数は 8 です。 その場合は、データの最終行にはによって定義された 3 つの項目、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> テンプレートとによって定義された 2 つの項目、 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> テンプレートです。  
  
 空の項目のカスタム ユーザー インターフェイス \(UI\) を定義するにを使用して、 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> プロパティです。 空の項目の宣言でカスタム テンプレートを指定するには、追加、 `EmptyItemTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `EmptyItemTemplate` 要素。  
  
   
  
## 例  
 次の例では、空の項目のカスタム テンプレートを定義する方法を示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.EmptyItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/CS/ListViewEmptyItemTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.EmptyItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EmptyItemTemplate/VB/ListViewEmptyItemTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または検証コントロールがまたは操作の更新挿入時に発生する例外を処理するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 検証コントロールは、または操作の更新挿入時に発生する例外を処理する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePersistedSelection">
      <MemberSignature Language="C#" Value="public virtual bool EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または行の選択が解決しない場合、データ バインド コントロール内のデータをユーザーのページかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 行の選択が解決しない場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 選択した行を指定するときに永続化、 <xref:System.Web.UI.WebControls.ListView> コントロールがページング モードです。 既定では、行の選択を行のインデックスに基づきます。 各ページでは、同じ行 \(たとえば、3 番目の行\) を選択します。 また、選択した行のデータ キーに基づいて永続化を有効にできます。 その場合は、1 ページ目の 3 行目を選択すると、2 ページ目に移動する、行が選択されていない 2 ページ目にします。 1 ページ目に戻す場合は、3 行が選択されたままです。 この機能を有効にするにこのプロパティを設定します。 `true`します。  
  
> [!NOTE]
>  バージョン 2.0、3.0、および asp.net 3.5 では、行の選択は、行のインデックスにのみ基づいていました。 既定では、ASP.NET 4 での行の選択を旧バージョンとの互換性のためのインデックスに基づきます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureLayoutTemplate">
      <MemberSignature Language="C#" Value="protected virtual void EnsureLayoutTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureLayoutTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>確実に、 <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> でコンテンツが正しく作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> ことを確認するコントロール、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> コンテンツを 1 回だけのコントロールに追加します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractItemValues">
      <MemberSignature Language="C#" Value="public virtual void ExtractItemValues (System.Collections.Specialized.IOrderedDictionary itemValues, System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExtractItemValues(class System.Collections.Specialized.IOrderedDictionary itemValues, class System.Web.UI.WebControls.ListViewItem item, bool includePrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="item" Type="System.Web.UI.WebControls.ListViewItem" />
        <Parameter Name="includePrimaryKey" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemValues">フィールド値を格納するために使用するディクショナリ オブジェクト。</param>
        <param name="item">
          <see cref="T:System.Web.UI.WebControls.ListViewItem" /> フィールドの値を取得する対象のオブジェクト。</param>
        <param name="includePrimaryKey">
          <see langword="true" /> 主キー フィールドまたはフィールドを含めるそれ以外の場合、 <see langword="false" />です。</param>
        <summary>指定された項目で宣言され、指定した格納する各フィールドの値を取得する <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ExtractItemValues%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> で宣言されている各フィールドの値を取得するコントロール `item`します。 使用して、抽出された値がキー フィールドを含めるかどうかを指定する、 `includePrimaryKey` パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="itemValues" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="item" /> は <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> オブジェクトではありません。</exception>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
      </Docs>
    </Member>
    <Member MemberName="FindPlaceholder">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control FindPlaceholder (string containerID, System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control FindPlaceholder(string containerID, class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containerID" Type="System.String" />
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="containerID">検索するコントロールの識別子。</param>
        <param name="container">検索するコンテナーです。</param>
        <summary>指定した識別子を持つコントロールの指定されたコンテナーを検索します。</summary>
        <returns>指定したコントロールまたは <see langword="null" /> 指定したコントロールが見つからない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.Font" /> プロパティです。 このプロパティでサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>このプロパティはサポートされていませんし、スロー、 <see cref="T:System.NotSupportedException" /> エラー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 アクセスしようとする場合、 <xref:System.Web.UI.WebControls.ListView.Font%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">アクセスしようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.Font" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.Drawing.Color.Empty" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.ForeColor%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。  プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.ForeColor" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="GroupItemCount">
      <MemberSignature Language="C#" Value="public virtual int GroupItemCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GroupItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のグループごとに表示する項目の数、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>内のグループごとに表示する項目の数、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は 1 であることを示す、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロール グループごとに 1 つの項目が表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> でグループ化する項目の数を指定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 \(つまり、指定コントロールのグループごとに表示する項目の数。\) グループごとに、 <xref:System.Web.UI.WebControls.ListView> コントロールの内容を表示する、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> テンプレートと項目のプレース ホルダーを実際の項目の内容に置き換えます。 によって定義された項目の数に応じて何度でもこれは、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティです。  
  
 使用する <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> で、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> でタイル化されたレイアウトを作成するテンプレート、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 タイル状のテーブルのレイアウトでは、行の横方向にアイテムが反復します。 項目が繰り返される回数が指定された、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティです。  
  
   
  
## 例  
 次の例でタイル化されたレイアウトを作成する方法を示しています、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティです。 また、このプロパティをプログラムで変更する方法も示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.GroupItemCount\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/CS/ListViewGroupItemCountCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.GroupItemCount\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupItemCount/VB/ListViewGroupItemCountVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" /> プロパティが 1 より小さい値に設定します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GroupPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string GroupPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("groupPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグループのプレース ホルダーの ID を設定、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>グループのプレース ホルダーの ID、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は、"groupPlaceholder"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> プロパティ グループのプレース ホルダーの ID を指定します。 グループのプレース ホルダーは、コントロールに追加する、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> テンプレートを表すグループを表示するグループを使用しているときにします。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> のグループのプレース ホルダーは別の ID を指定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemContainerID\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemContainerID\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された ID が <see langword="null" /> または空の文字列です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、ユーザー定義コンテンツ内のグループ間の区切り記号、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>桁区切り記号のカスタム コンテンツを格納するオブジェクト。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 区切り記号では、各グループの間のカスタム コンテンツを持つ要素を配置することができます。<xref:System.Web.UI.WebControls.ListView> コントロール、またはレンダリング、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> コンテンツと <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> コンテンツです。<xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> コンテンツは常に最終レンダリングします。  
  
 行全体のコンテンツを定義することを確認、 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> テンプレートのため、 <xref:System.Web.UI.WebControls.ListView> レンダリングを制御、 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> 内のコンテンツ、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> テンプレートです。 内のグループなど、 <xref:System.Web.UI.WebControls.ListView> テーブルの行を使用してコントロールを作成する場合があります \(`tr`\) 要素です。 場合、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティが 3 に設定されている、 `colspan` 属性は、3 に設定する必要があります、 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> テンプレートです。  
  
 区切り記号の宣言でテンプレートを指定するには、追加、 `GroupSeparatorTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `GroupSeparatorTemplate` 要素。  
  
   
  
## 例  
 次の例では、グループ区切り記号を作成する方法、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、 <xref:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate%2A> プロパティです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.GroupTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.GroupTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GroupTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate GroupTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate GroupTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグループのコンテナーのユーザー定義の内容を設定、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>グループのコンテナー用のカスタム コンテンツを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> でタイル化されたレイアウトを作成するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 タイル状のテーブルのレイアウトでは、行の横方向にアイテムが反復します。 項目が繰り返される回数が指定された、 <xref:System.Web.UI.WebControls.ListView.GroupItemCount%2A> プロパティです。  
  
 グループ コンテナーの宣言でテンプレートを指定するには、追加、 `GroupTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `GroupTemplate` 要素。  
  
 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> プロパティは、テーブル セルなど、データ項目のプレース ホルダーを含める必要があります \(`td`\)、 `div`, 、または `span` 要素。 このプレース ホルダーがあります、 `runat` 属性は、"server"に設定され、 `ID` 属性の値に設定、 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> プロパティです。 実行時に、 <xref:System.Web.UI.WebControls.ListView> コントロール内の各項目に対して定義されているコンテンツ プレース ホルダーに置き換えられます、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> と <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A> テンプレートです。  
  
   
  
## 例  
 次の例でタイル化されたレイアウトを作成する方法を示しています、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> プロパティです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.GroupTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.GroupTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.Height" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.Height%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.Height" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ListViewItem InsertItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ListViewItem InsertItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ListViewItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入項目を取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>アイテムの挿入を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> のアイテムの挿入にアクセスするプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 アイテムの挿入は、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクト <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> に等しい <xref:System.Web.UI.WebControls.ListViewItemType.InsertItem?displayProperty=fullName>します。 挿入項目の内容は、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> プロパティです。  
  
   
  
## 例  
 次の例では、アイテムの挿入を使用して行う方法、 <xref:System.Web.UI.WebControls.ListView.InsertItem%2A> プロパティに含まれるコントロールへのアクセスを <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.InsertItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/CS/ListViewInsertItemCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.InsertItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertItem/VB/ListViewInsertItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewItem.ItemType" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemType" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemPosition">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.InsertItemPosition InsertItemPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.InsertItemPosition InsertItemPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.InsertItemPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の場所、 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレートの一部として表示されるよう、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> 値のいずれか。 既定値は <see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />, 、ことを示します、 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> によってコンテンツが表示されない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表は、使用可能なアイテムの位置の値を一覧表示します。  
  
|行型|説明|  
|--------|--------|  
|<xref:System.Web.UI.WebControls.InsertItemPosition.FirstItem?displayProperty=fullName>|レンダリング、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートの最初の項目として、 <xref:System.Web.UI.WebControls.ListView> コントロールです。|  
|<xref:System.Web.UI.WebControls.InsertItemPosition.LastItem?displayProperty=fullName>|レンダリング、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートの最後の項目として、 <xref:System.Web.UI.WebControls.ListView> コントロールです。|  
|<xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=fullName>|表示がない、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートです。|  
  
   
  
## 例  
 次の例では、構成する方法、 <xref:System.Web.UI.WebControls.ListView> を表示するコントロール、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の項目の挿入用のカスタム コンテンツ、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>\[アイテムの挿入用のカスタム コンテンツを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> でアイテムの挿入のカスタム ユーザー インターフェイス \(UI\) を定義するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 開始時、または表示される項目の末尾には、この UI が表示されます。 UI を使用して出力する場所を指定する、 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 通常、テンプレートには、新しいレコードの値を入力するユーザーの入力コントロールが含まれます。 ボタンや、レコードを挿入すると、挿入操作をキャンセルするハイパーリンクも通常含まれています。  
  
 カスタム テンプレートを宣言によって指定するには、追加、 `InsertItemTemplate` 内の要素、 `ListView` 要素。 テンプレートの内容を追加することができますし、 `InsertItemTemplate` 要素。 フィールドは、双方向のバインド式を使用して入力コントロールに関連付けることができます。 レコードが挿入されたときに、 <xref:System.Web.UI.WebControls.ListView> コントロールでは、関連付けられた入力コントロールから、フィールドの値を自動的に抽出します。 詳細については、「[Data\-Binding Expression Syntax](http://msdn.microsoft.com/ja-jp/14cdd57d-0f82-4667-b503-73e1a96f136a)」を参照してください。  
  
 ボタンが組み込みのキャンセルを実行して、挿入操作を作成するには、テンプレートにボタン コントロールを追加します。 設定の <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値のいずれかが次の表に一覧表示します。  
  
|\[ボタンの種類\]|CommandName 値|  
|----------------|-------------------|  
|キャンセル|\[キャンセル\]|  
|挿入|"Insert"|  
  
 項目の挿入の位置を制御する、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> プロパティです。  
  
   
  
## 例  
 次の例のアイテムの挿入用のカスタム テンプレートを定義する方法を示しています、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_InsertMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを挿入するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、データ バインド メソッドとして使用するモデルのバインディングとします。  
  
 Web フォームでモデルのバインディングの使用に関するチュートリアル シリーズは、次を参照してください。 [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertNewItem">
      <MemberSignature Language="C#" Value="public virtual void InsertNewItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertNewItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> このメソッドが呼び出されたときに、ページの検証を実行するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>データ ソースには、現在のレコードを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> プログラムを使用してデータ ソースの項目を挿入します。 このメソッドは、通常の外部から項目を挿入する使用、 <xref:System.Web.UI.WebControls.ListView> \] ページで別の管理からなどを制御します。  
  
 使用する、 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> を定義する必要があります、メソッド、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 内のテンプレート、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定する必要も、 <xref:System.Web.UI.WebControls.ListView.InsertItemPosition%2A> プロパティ以外の値を <xref:System.Web.UI.WebControls.InsertItemPosition.None?displayProperty=fullName>します。 挿入操作の前にページの検証を実行するかどうかを指定するには、使用、 `causesValidation` パラメーター。  
  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> と <xref:System.Web.UI.WebControls.ListView.ItemInserting> イベントです。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> をプログラムでのアイテムの挿入の内容を挿入する方法、 <xref:System.Web.UI.WebControls.ListView> データ ソースにコントロールをします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.InsertNewItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/CS/ListViewInsertNewItemCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.InsertNewItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.InsertNewItem/VB/ListViewInsertNewItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールには、アイテムの挿入はありません。  
  
 または  
  
 <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトに関連付けられている、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは <see langword="null" />です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItem" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemPosition" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
        <altmember cref="T:System.Web.UI.WebControls.InsertItemPosition" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyDataTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyDataTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyDataTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用されるコンテナー コントロールで、 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> テンプレートです。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.Control" /> オブジェクトに含まれる子コントロールを使用して、 <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> テンプレートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、指定した設定を <xref:System.Web.UI.Control> オブジェクトに含まれる子コントロールを使用して、 <xref:System.Web.UI.WebControls.ListView.EmptyDataTemplate%2A> テンプレートです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateEmptyItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateEmptyItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateEmptyItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用されるコンテナー コントロールで、 <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> テンプレートです。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.Control" /> オブジェクトに含まれる子コントロールを使用して、 <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> テンプレートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して設定を <xref:System.Web.UI.Control> オブジェクトに含まれる子コントロールを使用して、 <xref:System.Web.UI.WebControls.ListView.EmptyItemTemplate%2A> テンプレートです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用されるコンテナー コントロールで、 <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> テンプレートです。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.Control" /> オブジェクトに含まれる子コントロールを使用して、 <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> テンプレートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateGroupTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateGroupTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateGroupTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用するコンテナー コントロールで、 <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> テンプレートです。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.Control" /> オブジェクトに含まれる子コントロールを使用して、 <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> テンプレートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateInsertItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateInsertItemTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateInsertItemTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用されるコンテナー コントロールで、 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレートです。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.Control" /> オブジェクトに含まれる子コントロールを使用して、 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemSeparatorTemplate (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemSeparatorTemplate(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">子の格納に使用されるコンテナー コントロールで、 <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> テンプレートです。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.Control" /> オブジェクトに含まれる子コントロールを使用して、 <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> テンプレートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="InstantiateItemTemplate">
      <MemberSignature Language="C#" Value="protected virtual void InstantiateItemTemplate (System.Web.UI.Control container, int displayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InstantiateItemTemplate(class System.Web.UI.Control container, int32 displayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
        <Parameter Name="displayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="container">子コントロールを格納するために使用するコンテナー。</param>
        <param name="displayIndex">インスタンス化されるアイテムの表示のインデックス。</param>
        <summary>指定した設定 <see cref="T:System.Web.UI.Control" /> オブジェクトのいずれかの子コントロールを使用して、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロール テンプレートです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドがインスタンス化されているアイテムのモードとの設定に応じて異なるテンプレートを使用して、 <xref:System.Web.UI.WebControls.ListView> コントロールです。<xref:System.Web.UI.WebControls.ListView.InstantiateItemTemplate%2A> メソッドを使用して、次のテンプレートのいずれかのコンテナーを作成します。  
  
-   <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.AlternatingItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>  
  
-   <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A>  
  
    > [!NOTE]
    >  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールがない、 <see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" /> テンプレートを指定します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="M:System.Web.UI.ITemplate.InstantiateIn(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="IsUsingModelBinders">
      <MemberSignature Language="C#" Value="protected override bool IsUsingModelBinders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsingModelBinders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.IsUsingModelBinders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>モデルのバインディングが使用中かどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> モデルのバインディングは、それ以外の場合、使用中の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCanceling">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCancelEventArgs&gt; ItemCanceling" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCancelEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に取り消し操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、挿入または編集操作をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView> 昇給の制御、 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> で \[キャンセル\] ボタンをクリックしたときにイベント、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> または <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> テンプレートは、クリックすると、その前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、挿入または編集操作をキャンセルします。 \(\[キャンセル\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが「キャンセル」に設定します\)。 これにより、アイテムが望ましくない状態になり場合は、取り消し操作を停止するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A <xref:System.Web.UI.WebControls.ListViewCancelEventArgs> オブジェクトが使用すると、項目のインデックスを特定のイベント ハンドラーに渡されます。 取り消し操作を停止するかを指定することもできます。 セットを操作を停止する、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewCancelEventArgs> オブジェクトを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベント ハンドラーです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemCanceling\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/CS/ListViewItemCancelingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemCanceling\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemCanceling/VB/ListViewItemCancelingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewCommandEventArgs&gt; ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCommand" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のボタンのときに発生する <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールがクリックされました。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand> イベントは、ボタン、 <xref:System.Web.UI.WebControls.ListView> コントロールがクリックされました。 これにより、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 ボタンで、 <xref:System.Web.UI.WebControls.ListView> コントロールがコントロールの組み込みの機能を呼び出すこともできます。 次の表で使用できる値の一覧、 <xref:System.Web.UI.WebControls.Button.CommandName%2A> 組み込みの機能を実行するためにボタンのプロパティです。  
  
|CommandName 値|説明|  
|-------------------|--------|  
|\[キャンセル\]|編集または挿入操作をキャンセルします。<xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベントを発生させます。|  
|"削除"|データ ソースから現在のレコードを削除します。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> と <xref:System.Web.UI.WebControls.ListView.ItemDeleting> イベントです。|  
|"Select"|セット、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> プロパティを <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> アイテムのプロパティの値。 レンダリング、 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> アイテム用のテンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> と <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> イベントです。|  
|\[編集\]|編集モードでは、アイテムを配置します。 レンダリング、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> アイテム用のテンプレートです。<xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントを発生させます。|  
|"Insert"|バインドされた値を挿入、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> データ ソースにテンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemInserting> と <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。|  
|「更新」|バインドされた値を使って、データ ソースの現在のレコードを更新、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> テンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> と <xref:System.Web.UI.WebControls.ListView.ItemUpdated> イベントです。|  
|「並べ替え」|示されている列の並べ替え、 `CommandArgument` ボタンのプロパティです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.Sorting> と <xref:System.Web.UI.WebControls.ListView.Sorted> イベントです。|  
  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand> イベントは、前の表に記載されているボタンがクリックされたときにも発生します。 ただし、表に示すイベントを使用することをお勧めします。<xref:System.Web.UI.WebControls.ListView.ItemCommand> イベントは、通常、カスタム操作を処理する使用します。  
  
 A <xref:System.Web.UI.WebControls.ListViewCommandEventArgs> オブジェクトがクリックしてされたボタンのコマンドの引数とコマンドの名前を決定することによりイベント ハンドラーに渡されます。 コマンド名を確認するのには、使用、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A?displayProperty=fullName> プロパティです。 コマンドの引数を確認するのには、使用、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A?displayProperty=fullName> プロパティです。 イベントを発生させたコントロールにアクセスするには、使用、 <xref:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource%2A?displayProperty=fullName> プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Web.UI.WebControls.ListView.ItemCommand> イベント ハンドラーです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewItemCommand\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/CS/ListViewItemCommandCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListViewItemCommand\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemCommand/VB/ListViewItemCommandVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目が作成されるときに発生する <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを表示できる、 <xref:System.Web.UI.WebControls.ListViewItem> コントロール内の各項目に対してオブジェクトを作成する必要があります。<xref:System.Web.UI.WebControls.ListView.ItemCreated> イベントが発生したときの各項目、 <xref:System.Web.UI.WebControls.ListView> コントロールを作成します。 これにより、カスタム コンテンツ項目を追加するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 A <xref:System.Web.UI.WebControls.ListViewItemEventArgs> オブジェクトが作成されている項目のプロパティにアクセスすることによりイベント ハンドラーに渡されます。 アイテム内の特定のコントロールにアクセスするには、使用、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクトに含まれている、 <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewItemEventArgs> オブジェクトです。 項目を確認することができます \(データ項目、アイテムの挿入、空の項目\) の種類を使用して作成されている、 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewItemEventArgs&gt; ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewItemEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目がデータにバインドされているときに発生する <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを表示できる、コントロール内の各項目は、データ ソース内のレコードにバインドする必要があります。<xref:System.Web.UI.WebControls.ListView.ItemDataBound> データ項目がデータにバインドされている場合、イベントが発生した、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 \(データ項目がによって表される <xref:System.Web.UI.WebControls.ListViewDataItem> オブジェクトです\)。 これにより、項目にバインドされているデータの値を変更するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewItemEventArgs> オブジェクトは、バインドされている項目のプロパティにアクセスすることによりイベント ハンドラーに渡されます。 アイテム内の特定のコントロールにアクセスするには、使用、 <xref:System.Web.UI.Control.FindControl%2A> のメソッド、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクトに含まれている、 <xref:System.Web.UI.WebControls.ListViewItemEventArgs.Item%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewItemEventArgs> オブジェクトです。 項目を確認することができます \(データ項目、アイテムの挿入、空の項目\) の種類のバインドを使用して、 <xref:System.Web.UI.WebControls.ListViewItem.ItemType%2A> プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 <xref:System.Web.UI.WebControls.ListView.ItemDataBound> イベントを使用する方法を次の例に示します。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemDataBound\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/CS/ListViewItemDataBoundCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemDataBound\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemDataBound/VB/ListViewItemDataBoundVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeletedEventArgs&gt; ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>結局、削除操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、アイテムを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> イベントは、アイテムの削除\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、アイテムを削除します。 \(\[削除\] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです\)。 これにより、削除操作の結果を確認するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs> オブジェクトが使用すると、データ ソースに影響を受けた行の数を特定のイベント ハンドラーに渡されます。 また、どのような例外が発生した可能性を判断することもできます。 示すかどうか、例外が処理されたイベント ハンドラーを設定して、 <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewDeletedEventArgs> オブジェクトを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを追加する方法、 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> イベントです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewDeletedEventArgs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/CS/ListViewDeletedEventArgsCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListViewDeletedEventArgs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewDeletedEventArgs/VB/ListViewDeletedEventArgsVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewDeleteEventArgs&gt; ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に削除操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、アイテムを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> イベントは、アイテムの削除\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、アイテムを削除します。 \(\[削除\] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです\)。 これにより、削除操作の取り消しなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs> オブジェクトは、現在の項目のインデックスを特定することによりイベント ハンドラーに渡されます。 削除操作が取り消されることを指定することもできます。 削除操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs> オブジェクトを `true`します。 使用することができます、 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A> と <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values%2A> 値は、データ ソースに渡される前に、のコレクション。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、宣言でのイベント ハンドラーを追加する方法、 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> イベントです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewItemDeleting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListViewItemDeleting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
      </Docs>
    </Member>
    <Member MemberName="ItemEditing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewEditEventArgs&gt; ItemEditing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemEditing" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewEditEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に編集操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> 項目が、編集モードにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemEditing> アイテムの編集\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.ListView> 項目が、編集モードにします。 \(\[編集\] ボタンは、<xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Edit" に設定されているボタン コントロールです\)。 これにより、編集操作の取り消しなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewEditEventArgs> オブジェクトは、現在の項目のインデックスを特定することによりイベント ハンドラーに渡されます。 編集操作をキャンセルする必要があることを指定することもできます。 編集操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewEditEventArgs> オブジェクトを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを追加する方法、 <xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemEditing\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertedEventArgs&gt; ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>結局、挿入操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、データ ソースの項目を挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView> 昇給を制御、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> したときに、\[挿入\] ボタンのイベント、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートをクリックしてまたは <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールがデータ ソース内の項目を挿入します。 \(挿入\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Insert"に設定します\)。 これにより、挿入操作の結果を確認するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> オブジェクトが使用すると、影響を受けたレコードの数を特定のイベント ハンドラーに渡されます。 また、どのような例外が発生した可能性を判断することもできます。 挿入操作の影響を受けたレコードの数を確認するのには、使用、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> プロパティです。 すべての例外が発生したかどうかを確認するのには、使用、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> プロパティです。 かどうか、例外によって処理されたイベント ハンドラーの設定を指定することも、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> プロパティです。 挿入されたレコードの値にアクセスする場合は、使用、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> プロパティです。  
  
 場合、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> プロパティは項目が挿入されていないに挿入値を再バインドできることを報告、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートを設定して、 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> プロパティを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを追加する方法、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewInsertEventArgs&gt; ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemInserting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に、挿入操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、挿入を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView> 昇給を制御、 <xref:System.Web.UI.WebControls.ListView.ItemInserting> ときに、\[挿入\] ボタンにイベント、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> テンプレートをクリックしてまたは <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、レコードを挿入します。 \(挿入\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Insert"に設定します\)。 これにより、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewInsertEventArgs> オブジェクトが、省略可能なコマンドに渡す引数の値を確認することによりイベント ハンドラーに渡される、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 挿入操作が取り消されることを指定することもできます。 挿入操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true`します。 読み取りまたはを使用して、新しいレコードのフィールド値の変更ができる、 <xref:System.Web.UI.WebControls.ListViewInsertEventArgs.Values%2A> プロパティです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを追加する方法、 <xref:System.Web.UI.WebControls.ListView.ItemInserting> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力をそのまま使用するコントロールが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/CS/ListViewItemInsertingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserting/VB/ListViewItemInsertingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
      </Docs>
    </Member>
    <Member MemberName="ItemPlaceholderID">
      <MemberSignature Language="C#" Value="public virtual string ItemPlaceholderID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemPlaceholderID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("itemPlaceholder")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 ID で項目のプレース ホルダー、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>ID で項目のプレース ホルダーを <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は、"itemPlaceholder"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> プロパティ項目のプレース ホルダーの ID を指定します。 項目のプレース ホルダーは、コントロールに追加する、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> テンプレート \(グループを使用しない\) 場合や、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> テンプレート \(グループを使用している\) 場合にアイテムの表示を表します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> の項目のプレース ホルダーの ID を指定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemContainerID\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/CS/ListViewItemContainerIDCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemContainerID\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemContainerID/VB/ListViewItemContainerIDVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された ID が <see langword="null" /> または空の文字列です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.UI.WebControls.ListViewDataItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.UI.WebControls.ListViewDataItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> 内のデータの現在のページのデータ項目を表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>内のデータの現在のページのすべてのデータ項目を格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.Items%2A> 内のデータ項目を格納するプロパティが使用される、 <xref:System.Web.UI.WebControls.ListView> コントロールです。<xref:System.Web.UI.WebControls.ListView> コントロールを自動的に入力、 <xref:System.Web.UI.WebControls.ListView.Items%2A> コレクションを 1 つ作成 <xref:System.Web.UI.WebControls.ListViewDataItem> データ ソース内のデータの現在のページ内の各レコード オブジェクト。 各オブジェクトをコレクションに追加します。 このプロパティは通常、コントロールの特定の項目にアクセスするか、項目の完全なコレクションを反復処理する場合に使用します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView.Items%2A> で編集されているアイテムにアクセスするコレクション、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemEditing\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/CS/ListViewItemEditingCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemEditing\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemEditing/VB/ListViewItemEditingVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDataItem" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItem" />
        <altmember cref="T:System.Web.UI.WebControls.DataPager" />
      </Docs>
    </Member>
    <Member MemberName="ItemSeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemSeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemSeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツ内の項目間の区切り記号、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>カスタム コンテンツの項目間の区切り記号を格納するオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> の 1 つの項目間の区切り記号の内容を定義するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。<xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> が最後の 1 つを除くすべてのアイテムの後に表示されます。  
  
 カスタム テンプレートを宣言によって指定するには、追加、 `ItemSeparatorTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `ItemSeparatorTemplate` 要素。  
  
   
  
## 例  
 次の例では、\[項目の区切り記号を作成する方法、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、 <xref:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate%2A> プロパティです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.GroupTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/CS/ListViewGroupTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.GroupTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.GroupTemplate/VB/ListViewGroupTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカスタム コンテンツ内のデータ項目を <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>内のデータ項目のカスタム コンテンツを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> データ項目を表示するカスタム ユーザー インターフェイス \(UI\) を定義するプロパティです。<xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> でテンプレートが必要な <xref:System.Web.UI.WebControls.ListView> コントロールです。 通常、レコードのフィールドの値を表示するコントロールが含まれています。 また、通常にボタンを追加するユーザーがデータを変更できるようにする場合、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> ユーザー レコードの選択、編集モードに切り替えるか、またはレコードを削除するのに便利なテンプレートです。  
  
 カスタム テンプレートを宣言によって指定するには、追加、 `ItemTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `ItemTemplate` 要素。 コントロールにバインドされているデータ ソースのフィールドの値を表示するには、データ バインディング式を使用します。 詳細については、「[Data\-Binding Expression Syntax](http://msdn.microsoft.com/ja-jp/14cdd57d-0f82-4667-b503-73e1a96f136a)」を参照してください。  
  
 組み込みの選択を実行するボタンを作成するには、削除、および編集操作は、テンプレートにボタン コントロールを追加します。 設定の <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値のいずれかが次の表に一覧表示します。  
  
|\[ボタンの種類\]|CommandName 値|  
|----------------|-------------------|  
|削除|"削除"|  
|編集|\[編集\]|  
|選択|"Select"|  
  
   
  
## 例  
 次の例で、データ項目のカスタム テンプレートを定義する方法を示しています、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.EditItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.Items" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt; ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後の更新操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールが項目を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> イベントは、アイテムの更新\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールが項目を更新します。 \(更新\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが「更新」に設定します\)。 これにより、更新操作の結果を確認するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> オブジェクトが使用すると、影響を受けた行の数を特定のイベント ハンドラーに渡されます。 また、どのような例外が発生した可能性を判断することもできます。 示すかどうか、例外が処理されたイベント ハンドラーを設定して、 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> オブジェクトです。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを追加する方法、 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewUpdateEventArgs&gt; ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に、更新操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールが項目を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> イベントは、アイテムの更新\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールが項目を更新します。 \(更新\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが「更新」に設定します\)。 これにより、更新操作のキャンセルなどのこのイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> オブジェクトは、現在の項目のインデックスを特定することによりイベント ハンドラーに渡されます。 更新操作が取り消されることを指定することもできます。 更新操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs> オブジェクトを `true`します。  
  
 使用する、 <xref:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys%2A>, 、<xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues%2A>, と <xref:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues%2A> コレクションの値は、データ ソースに渡される前にします。 これらのコレクションを使用する一般的な方法では、データ ソースに格納する前に、ユーザーによって指定された値に HTML エンコードです。 これにより、スクリプト インジェクション攻撃を防止できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを追加する方法、 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> イベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdating\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/CS/ListViewItemUpdatingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdating\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdating/VB/ListViewItemUpdatingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LayoutCreated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> でテンプレートを作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを表示できる、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> コントロールのルート コンテナーとして使用するテンプレートを作成する必要があります。<xref:System.Web.UI.WebControls.ListView.LayoutCreated> イベントが発生したときのレイアウト テンプレート、 <xref:System.Web.UI.WebControls.ListView> コントロールを作成します。 これにより、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはルート コンテナー内のカスタム コンテンツを設定、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>ルート コンテナー内のカスタム コンテンツを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> のルート コンテナーのカスタム ユーザー インターフェイス \(UI\) を定義するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 レイアウト テンプレートを指定するには、追加、 `LayoutTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `LayoutTemplate` 要素。  
  
 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> コンテンツは、テーブル行などのプレース ホルダー コントロールを含める必要があります \(`tr`\) で定義されている項目の要素、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> テンプレートで定義されているグループや、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> テンプレートです。 プレース ホルダー コントロールが必要です、 `runat` 属性は、"server"に設定され、 `ID` 属性の値に設定、 <xref:System.Web.UI.WebControls.ListView.ItemPlaceholderID%2A> または <xref:System.Web.UI.WebControls.ListView.GroupPlaceholderID%2A> かどうかによって、プロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールがグループを使用します。  
  
 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> でテンプレートが必要としない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 使用することができます、 <xref:System.Web.UI.WebControls.ListView> なく制御、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> と既知の ID に置き換えますプレース ホルダー サーバー コントロールにも使用しない場合。  
  
   
  
## 例  
 次の例では、ルート コンテナー内のカスタム テンプレートを定義する方法、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.EditItemTemplate\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/CS/ListViewEditItemTemplateCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.EditItemTemplate\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.EditItemTemplate/VB/ListViewEditItemTemplateVB.aspx#1)]  
  
 使用する例を次に示します、 <xref:System.Web.UI.WebControls.ListView> コントロールを定義することがなく、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> コントロールのテンプレートです。 既知の ID を持つサーバー コントロールも指定されていません。  
  
```  
<asp:ListView ID="ListView1" runat="server">  
  <ItemTemplate>  
    <% Eval("LastName")%>  
  </ItemTemplate>  
</asp:ListView>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">コントロールの保存されているコントロールの状態の値を格納するオブジェクト。</param>
        <summary>内のプロパティの状態を読み込みます、 <see cref="T:System.Web.UI.WebControls.ListView" /> 、永続化する必要がありますコントロール場合でも、 <see cref="P:System.Web.UI.Control.EnableViewState" /> にプロパティが設定されている <see langword="false" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">コントロールの保存されているビュー ステートの値を格納するオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは主に使用、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] インフラストラクチャ コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="protected virtual int MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>1 つのページに表示する項目の最大数を取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>1 つのページに表示する項目の最大数、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.DataPager> にオブジェクトが関連付けられている、 <xref:System.Web.UI.WebControls.ListView> コントロール、 <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> プロパティの値はによって制御されます、 <xref:System.Web.UI.WebControls.DataPager> オブジェクト、およびこれと同じ、 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> プロパティの値。 それ以外の場合、値は\-1 です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベントのデータ。</param>
        <summary>イベントをするかどうか、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールを処理する必要があります。</summary>
        <returns>
          <see langword="true" /> イベントを処理する場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.OnBubbleEvent%2A> メソッドを使用して、 <xref:System.Web.UI.WebControls.ListView> コントロールを必要に応じてイベントを処理するコントロールの階層構造渡されます。 プロパティを確認するには、イベントを処理するかどうかを決定して、 <xref:System.EventArgs> オブジェクトに含まれている、 `e` パラメーター。 イベントを処理する必要があります、メソッドは、適切な操作を実行します。 その他のイベントは無視され、コントロール階層の上方に渡されます。 このメソッドの戻り値は、イベントを処理するか、コントロールの階層構造のイベントを渡すかどうかを示します。  
  
 <xref:System.Web.UI.WebControls.ListView> コントロールがコントロールによって認識されるボタンのいずれかをクリックすると、適切な操作を実行するには、このメソッドの基本実装をオーバーライドします。 次の表に、ボタンを <xref:System.Web.UI.WebControls.ListView> コントロールによって認識されます。  
  
|CommandName 値|説明|  
|-------------------|--------|  
|\[キャンセル\]|編集または挿入操作をキャンセルします。<xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベントを発生させます。|  
|"削除"|データ ソースから現在のレコードを削除します。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> と <xref:System.Web.UI.WebControls.ListView.ItemDeleting> イベントです。|  
|"Select"|セット、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> プロパティを <xref:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex%2A> アイテムのプロパティの値。 レンダリング、 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> アイテム用のテンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> と <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> イベントです。|  
|\[編集\]|編集モードでは、アイテムを配置します。 レンダリング、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> アイテム用のテンプレートです。<xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントを発生させます。|  
|"Insert"|バインドされた値を挿入、 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> データ ソースにテンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemInserting> と <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。|  
|「更新」|バインドされた値を使って、データ ソースの現在のレコードを更新、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> テンプレートです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> と <xref:System.Web.UI.WebControls.ListView.ItemUpdated> イベントです。|  
|「並べ替え」|示されている列の並べ替え、 `CommandArgument` ボタンのプロパティです。 発生させる、 <xref:System.Web.UI.WebControls.ListView.Sorting> と <xref:System.Web.UI.WebControls.ListView.Sorted> イベントです。|  
  
 このバージョンのメソッドが返す `true` コントロールによって処理されるイベントを発生させるこれらのボタンのいずれかの場合。 イベント バブルの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/ja-jp/d98fd58b-fa4f-4598-8378-addf4355a115)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されたら、Web サーバー コントロールは、インスタンスを作成および設定に必要な初期化の手順を実行する必要があります。 サーバー コントロールのライフ サイクルのこの段階で、コントロールのビュー ステートがまだ設定されていません。 さらに、このコントロールの親または子であるかどうかにかかわらず、このメソッドが呼び出されたときにその他のサーバー コントロールにアクセスすることはできません。 他のサーバー コントロールでは、作成されたアクセスできる状態に限りません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnInit%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCanceling">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCanceling (System.Web.UI.WebControls.ListViewCancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCanceling(class System.Web.UI.WebControls.ListViewCancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView> 昇給の制御、 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> コントロールに \[キャンセル\] ボタンをクリックしたときにイベントをクリックするしますが、終了する前に挿入または編集モード。 \(\[キャンセル\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが「キャンセル」に設定します\)。 これにより、アイテムが望ましくない状態になり場合は、取り消し操作を停止するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A> メソッドは、 <xref:System.Web.UI.WebControls.ListView> させるコントロール、 <xref:System.Web.UI.WebControls.ListView.ItemCanceling> イベントです。 これは、通常使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.ListView> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCanceling%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.ListViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.ListViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemCommand> 項目テンプレート内のボタンがクリックされたときに、コマンドを実行する前にイベントが発生します。 指定されたへの応答でカスタムのルーチンを実行できます <xref:System.Web.UI.WebControls.Button.CommandName%2A> または <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> 値のこのイベントが発生するたびにします。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A> メソッドは、 <xref:System.Web.UI.WebControls.ListView> させるコントロール、 <xref:System.Web.UI.WebControls.ListView.ItemCommand> イベントです。 通常は使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.ListView> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCommand%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを表示できる、 <xref:System.Web.UI.WebControls.ListViewItem> コントロール内の各項目に対してオブジェクトを作成する必要があります。<xref:System.Web.UI.WebControls.ListView.ItemCreated> イベントが発生したときの各項目、 <xref:System.Web.UI.WebControls.ListView> コントロールを作成します。 これにより、コンテンツ項目を追加するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A> メソッドは、 <xref:System.Web.UI.WebControls.ListView> させるコントロール、 <xref:System.Web.UI.WebControls.ListView.ItemCreated> イベントです。 これは、通常使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.ListView> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemCreated%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.ListViewItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.ListViewItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを表示できる、コントロール内の各項目は、データ ソース内のレコードにバインドする必要があります。<xref:System.Web.UI.WebControls.ListView.ItemDataBound> イベントが発生したときに、 <xref:System.Web.UI.WebControls.ListViewItem> オブジェクトがデータ項目にバインドします。 これにより、バインディング プロセス中にデータ項目の値を変更するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDataBound%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> in a derived class, you must to call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.ListViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.ListViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleted> イベントは、アイテムの削除\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、アイテムを削除します。 \(\[削除\] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです\)。 これにより、削除操作の結果を確認するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDeleted%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.ListViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.ListViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemDeleting> イベントは、アイテムの削除\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、アイテムを削除します。 \(\[削除\] ボタンは <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Delete" に設定されているボタン コントロールです\)。 これにより、削除操作の取り消しなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemDeleting%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> を使用してデータ ソース コントロールにバインドされていないことをコントロール、 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemEditing">
      <MemberSignature Language="C#" Value="protected virtual void OnItemEditing (System.Web.UI.WebControls.ListViewEditEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemEditing(class System.Web.UI.WebControls.ListViewEditEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewEditEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemEditing> アイテムの編集\] ボタンをクリックすると、その前に、イベントが発生した、 <xref:System.Web.UI.WebControls.ListView> 制御が編集モードを開始します。 \(\[編集\] ボタンは、<xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが "Edit" に設定されているボタン コントロールです\)。 これにより、編集操作の取り消しなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemEditing%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> を使用してデータ ソース コントロールにバインドされていないことをコントロール、 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemEditing" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.ListViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.ListViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントは、アイテムの挿入\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールに項目を挿入します。 \(挿入\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Insert"に設定します\)。 これにより、挿入された項目をデータベースから自動生成された値を取得するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A> メソッドは、 <xref:System.Web.UI.WebControls.ListView> させるコントロール、 <xref:System.Web.UI.WebControls.ListView.ItemInserted> イベントです。 これは、通常使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.ListView> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserted%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.ListViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.ListViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView> 昇給を制御、 <xref:System.Web.UI.WebControls.ListView.ItemInserting> イベントと、コントロールの挿入\] ボタンがクリックされたまたは <xref:System.Web.UI.WebControls.ListView.InsertNewItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、レコードを挿入します。 \(挿入\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Insert"に設定します\)。 これにより、このイベントが発生したときに、カスタムのルーチンを実行することができます。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A> メソッドは、 <xref:System.Web.UI.WebControls.ListView> させるコントロール、 <xref:System.Web.UI.WebControls.ListView.ItemInserting> イベントです。 これは、通常使用コントロールの開発者によって拡張する場合に、 <xref:System.Web.UI.WebControls.ListView> クラスです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemInserting%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> を使用してデータ ソース コントロールにバインドされていないことをコントロール、 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.ListViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.ListViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> イベントは、アイテムの更新\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールが項目を更新します。 \(更新\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが「更新」に設定します\)。 これにより、更新操作の結果を確認するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemUpdated%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.ListViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.ListViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.ItemUpdating> イベントは、アイテムの更新\] ボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールが項目を更新します。 \(更新\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが「更新」に設定します\)。 これにより、更新操作のキャンセルなどのこのイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnItemUpdating%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> を使用してデータ ソース コントロールにバインドされていないことをコントロール、 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLayoutCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnLayoutCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayoutCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを表示できる、 <xref:System.Web.UI.WebControls.ListViewItem> コントロールのコンテナーとして機能するオブジェクトを作成する必要があります。<xref:System.Web.UI.WebControls.ListView.LayoutCreated> でレイアウト テンプレートの作成時にイベントが発生した、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 これにより、内のコントロールの表示\/非表示の変更など、このイベントが発生するたびに、カスタムのルーチンを実行する、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A> テンプレートです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnLayoutCreated%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged> イベントはページのプロパティを変更した後、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、新しい値を設定する、 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> メソッドです。 これにより、このイベントが発生するたびに、カスタムのページング操作などのカスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> in a derived class, call the base class’s <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPagePropertiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPagePropertiesChanging (System.Web.UI.WebControls.PagePropertiesChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPagePropertiesChanging(class System.Web.UI.WebControls.PagePropertiesChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PagePropertiesChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> イベントは、ページのプロパティを変更する前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、新しい値を設定する、 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> メソッドです。 消去など、このイベントが発生するたびに、カスタムのルーチンを実行できます、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> または <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> プロパティです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> in a derived class, call the base class’s <see cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 後なアイテムの選択\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.ListView> コントロールが選択操作を処理します。 \(\[選択\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Select"に設定します\)。 これにより、現在選択されている項目で状態ラベルを更新するなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedIndexChanging (System.Web.UI.WebControls.ListViewSelectEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedIndexChanging(class System.Web.UI.WebControls.ListViewSelectEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSelectEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 前に、項目の選択\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.ListView> コントロールが選択操作を処理します。 \(\[選択\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Select"に設定します\)。 これにより、選択操作のキャンセルなどのこのイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ハンドラーがない、 <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> イベントです。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorted">
      <MemberSignature Language="C#" Value="protected virtual void OnSorted (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorted(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.Sorted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.Sorted> イベントは、並べ替えボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、並べ替え操作を処理します。 \(並べ替えボタンはいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Sort"に設定します\)。 これにより、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSorted%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSorting">
      <MemberSignature Language="C#" Value="protected virtual void OnSorting (System.Web.UI.WebControls.ListViewSortEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSorting(class System.Web.UI.WebControls.ListViewSortEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.ListViewSortEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.Sorting> イベントは、並べ替えボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.Sort%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、並べ替え操作を処理します。 \(並べ替えボタンはいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Sort"に設定します\)。 これにより、並べ替え操作の取り消しなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnSorting%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> を使用してデータ ソース コントロールにバインドされていないことをコントロール、 <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" /> プロパティです。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTotalRowCountAvailable">
      <MemberSignature Language="C#" Value="protected virtual void OnTotalRowCountAvailable (System.Web.UI.WebControls.PageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTotalRowCountAvailable(class System.Web.UI.WebControls.PageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.PageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23TotalRowCountAvailable> イベント データを使用できるときに発生、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> in a derived class, call the base class's <see cref="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.PageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PagePropertiesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PagePropertiesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>結局、ページのプロパティが変更されると発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、新しい値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanged> イベントはページのプロパティを変更した後、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、新しい値を設定する、 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> メソッドです。 これにより、選択した項目をオフにすると、カスタム ページング操作を実行するなど、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagePropertiesChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt; PagePropertiesChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.PagePropertiesChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前にページのプロパティが変更されると発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、新しい値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> イベントは、ページのプロパティを変更する前に、 <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、新しい値を設定する、 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> メソッドです。 消去など、このイベントが発生するたびに、カスタムのルーチンを実行できます、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> または <xref:System.Web.UI.WebControls.ListView.EditIndex%2A> プロパティです。  
  
 A <xref:System.Web.UI.WebControls.PagePropertiesChangingEventArgs> オブジェクトは、ページに表示される最初のレコードのインデックスを特定することによりイベント ハンドラーに渡されます。 1 つのページに表示する項目の最大数を決定することもできます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例のイベント ハンドラーを作成する方法、 <xref:System.Web.UI.WebControls.ListView.PagePropertiesChanging> イベントです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.DeleteItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.DeleteItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">実装するオブジェクト、 <see cref="T:System.Collections.IEnumerable" /> インターフェイスとデータが含まれています。</param>
        <summary>バインド、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールを指定したデータ ソース。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> コントロールのコントロールを指定したデータ ソースにバインドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Because the <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> method is sealed, you must override the <see cref="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)" /> method if you want to perform any additional tasks when binding data.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PerformSelect">
      <MemberSignature Language="C#" Value="protected override void PerformSelect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformSelect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.PerformSelect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連するデータ ソースからデータを取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.PerformDataBinding%2A> データ バインド コントロールをデータにバインドするためにデータが取得された後にメソッドが呼び出されます。 詳細については、「<xref:System.Web.UI.WebControls.DataBoundControl.PerformSelect%2A?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.PerformSelect" />
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="protected virtual void RemoveItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.RemoveItems" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アイテムまたはグループのコンテナー内のすべての子コントロールを削除、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、すべての子コントロールのアイテムまたはグループのコンテナー内の削除、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 ある場合、 <xref:System.Web.UI.WebControls.ListView.GroupTemplate%2A> テンプレートで定義されている、 <xref:System.Web.UI.WebControls.ListView> コントロール、 <xref:System.Web.UI.WebControls.ListView.RemoveItems%2A> メソッドは、グループのすべての子コントロールを削除します。 それ以外の場合、項目コンテナーのすべての子コントロールが削除されます。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントのブラウザーでサーバー コントロールの内容の表示に使用するオブジェクト。</param>
        <summary>クライアントのブラウザーに Web サーバー コントロールの内容を表示に使用される、指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.Render%2A> メソッドを使用して、サーバー コントロールの内容をクライアントのブラウザーの表示を指定して操作を <xref:System.Web.UI.HtmlTextWriter> オブジェクトです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のプロパティの状態を保存、 <see cref="T:System.Web.UI.WebControls.ListView" /> 、永続化する必要がありますコントロール場合でも、 <see cref="P:System.Web.UI.Control.EnableViewState" /> にプロパティが設定されている <see langword="false" />します。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドはプロパティの状態の保存に使用、 <xref:System.Web.UI.WebControls.ListView> コントロール、永続化する必要がありますが場合でも、 <xref:System.Web.UI.Control.EnableViewState%2A> にプロパティが設定されている `false`します。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のビューステートの保存、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <returns>保存されたビュー ステートを格納しているオブジェクトの値を <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.SaveViewState%2A> メソッドは、ヘルパー メソッドによって呼び出される、 <xref:System.Web.UI.WebControls.ListView> コントロールの状態を保存するコントロール。 詳細については、「<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した項目のデータ キーの値を取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>選択した項目のキー、データ、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" />, 、項目は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティが設定されて、 <xref:System.Web.UI.WebControls.ListView> コントロールを作成、 <xref:System.Web.UI.WebControls.DataKey> 値または指定したフィールドまたはフィールドの値を使用してコントロールの各項目のオブジェクト。<xref:System.Web.UI.WebControls.DataKey> オブジェクトは、コントロールに追加し、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> コレクションです。 通常、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> プロパティを使用して、取得、 <xref:System.Web.UI.WebControls.DataKey> で特定のデータ項目のオブジェクト、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 ただし、のみを取得する場合、 <xref:System.Web.UI.WebControls.DataKey> オブジェクトの現在選択されている項目をで使用できる、 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> ショートカットとしてプロパティです。  
  
 使用して、 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> プロパティは、取得と同じ、 <xref:System.Web.UI.WebControls.DataKey> オブジェクトから、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> コレクション内で指定されたインデックス位置、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> プロパティです。 使用することも、 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> 現在選択されている項目のデータ キーの値を直接取得するプロパティです。  
  
 作成する場合、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクト ファイルを指定する 1 つ目のフィールド以外のキー フィールドにアクセス、インデックス付き <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> プロパティに、 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトです。  
  
   
  
## 例  
 次の例では、マスター\/詳細シナリオではパラメーターとして 2 つ目のキー フィールドを使用する方法を示します。 A <xref:System.Web.UI.WebControls.ListView> コントロールを使用して、AdventureWorks データベースの製品在庫テーブルからレコードを表示します。 項目を選択すると、 <xref:System.Web.UI.WebControls.ListView> コントロール、製品の詳細については別に表示される <xref:System.Web.UI.WebControls.ListView> コントロールです。 ProductID が最初の 2 番目のキー名 <xref:System.Web.UI.WebControls.ListView> コントロールです。 値を使用しているコードは、2 番目のキーにアクセスする `ProductInventoryListView.SelectedDataKey[1]` \(`ProductInventoryListView.SelectedDataKey(1)` Visual Basic で\) として、 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> の <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトです。 このパラメーター オブジェクトがによって使用され、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって、2 つ目 <xref:System.Web.UI.WebControls.ListView> コントロールにバインドします。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedDataKey\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/CS/ListViewSelectedDataKeyCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedDataKey\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedDataKey/VB/ListViewSelectedDataKeyVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">データのキーが指定されていない、 <see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" /> プロパティです。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定で選択した項目のインデックス、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>選択した項目の 0 から始まるインデックス、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定では\-1 で、項目は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> で現在選択されている項目のインデックスを特定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このプロパティを使用するプログラムを使用して、コントロールの項目を選択します。 \(ただし、手動でデータにバインドする場合、 <xref:System.Web.UI.WebControls.ListView> コントロール、読み取りまたはこのプロパティを手動で設定を処理する必要があります\)。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> の項目を選択するかどうかを決定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.ListView.DeleteItem%2A> メソッドです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.DeleteItem\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/CS/ListViewDeleteItemCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.DeleteItem\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.DeleteItem/VB/ListViewDeleteItemVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" /> プロパティが\-1 未満の値に設定します。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>後に、項目の選択\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールが選択操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> 後なアイテムの選択\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.ListView> コントロールが選択操作を処理します。 \(\[選択\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Select"に設定します\)。 これにより、現在選択されているアイテムに関する情報を状態ラベルの更新など、このイベントが発生するたびに、カスタム ルーチンを実行できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例のイベント ハンドラーを作成する方法、 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> イベントです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanged\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/CS/ListViewItemSelectedIndexChanged2CS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanged\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanged/VB/ListViewItemSelectedIndexChanged2VB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndexChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSelectEventArgs&gt; SelectedIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に、項目の選択\] ボタンがクリックされたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールが選択操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> 前に、項目の選択\] ボタンがクリックされたときにイベントが発生した、 <xref:System.Web.UI.WebControls.ListView> コントロールが選択操作を処理します。 \(\[選択\] ボタンがいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Select"に設定します\)。 これにより、選択操作の取り消しなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、 <xref:System.Web.UI.WebControls.ListView.SelectedIndex%2A> プロパティです。  
  
 A <xref:System.Web.UI.WebControls.ListViewSelectEventArgs> オブジェクトが使用すると、ユーザーが選択された項目のインデックスを特定のイベント ハンドラーに渡されます。 選択操作をキャンセルするかを指定することもできます。 選択操作をキャンセルするには設定、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewSelectEventArgs> オブジェクトを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例のイベント ハンドラーを作成する方法、 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanging> イベントです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedIndexChanging\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/CS/ListViewItemSelectedIndexChangingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedIndexChanging\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedIndexChanging/VB/ListViewItemSelectedIndexChangingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.ListViewDataItem), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の選択アイテムのカスタム コンテンツ、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>選択した項目のカスタム コンテンツを格納しているオブジェクト、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> で選択した項目のカスタム ユーザー インターフェイス \(UI\) を定義するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> は通常他の表示の項目から選択したアイテムを区別するために使用されます。<xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> 代わりに表示される、 <xref:System.Web.UI.WebControls.ListView.ItemTemplate%2A> 選択した項目のテンプレートです。  
  
 カスタム テンプレートを宣言によって指定するには、追加、 `SelectedItemTemplate` 内の要素、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 テンプレートの内容を追加することができますし、 `SelectedItemTemplate` 要素。 コントロールにバインドされているデータ ソースのフィールドの値を表示するには、データ バインディング式を使用します。 詳細については、「[Data\-Binding Expression Syntax](http://msdn.microsoft.com/ja-jp/14cdd57d-0f82-4667-b503-73e1a96f136a)」を参照してください。  
  
 ボタンを追加することも、 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A>です。 組み込みの削除を実行するか、操作を編集するボタンを作成するにテンプレートを設定し、ボタン コントロールを追加、 <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティの値のいずれかが次の表に一覧表示します。  
  
|\[ボタンの種類\]|CommandName 値|  
|----------------|-------------------|  
|削除|"削除"|  
|編集|\[編集\]|  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView.SelectedItemTemplate%2A> で選択した項目の内容を定義するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewItemDeleting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListViewItemDeleting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="SelectedPersistedDataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey SelectedPersistedDataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey SelectedPersistedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、データ バインド コントロールの永続化された選択した項目のデータ キーの値を設定します。</summary>
        <value>データ バインド コントロールに項目を選択して、永続化のデータのキー。 既定値は <see langword="null" />, 、項目は、現在選択されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択した項目のデータ キーの値を取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>選択した項目のデータ キーの値、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.DataKeyNames%2A> プロパティは、データ ソースの主キーを表すフィールド名のコンマ区切りの一覧に設定することができます。 設定されている場合、 <xref:System.Web.UI.WebControls.ListView> コントロールが自動的に作成、 <xref:System.Web.UI.WebControls.DataKey> 値または指定したフィールドまたはフィールドの値を使用してコントロールの各項目のオブジェクト。<xref:System.Web.UI.WebControls.DataKey> オブジェクトは、コントロールに追加し、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> コレクションです。  
  
 通常、 <xref:System.Web.UI.WebControls.ListView.DataKeys%2A> プロパティを使用して、取得、 <xref:System.Web.UI.WebControls.DataKey> で特定のデータ項目のオブジェクト、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 ただし、だけを取得する場合、 <xref:System.Web.UI.WebControls.DataKey> オブジェクトの現在選択されている項目をで使用できる、 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> ショートカットとしてプロパティです。 使用して、選択した項目の最初のキー フィールドのデータ キーの値を特定できますも直接、 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> プロパティです。  
  
 作成する場合、 <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトを使用して最初のフィールド以外のキー フィールドにアクセスする、 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> プロパティです。 例については、次を参照してください。、 <xref:System.Web.UI.WebControls.ListView.SelectedDataKey%2A> プロパティです。  
  
   
  
## 例  
 次の例では、マスター\/詳細シナリオではパラメーターとして最初のキー フィールドを使用する方法を示します。 項目を選択すると、 <xref:System.Web.UI.WebControls.ListView> コントロール、 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> プロパティとして使用、 <xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A> の <xref:System.Web.UI.WebControls.ControlParameter> オブジェクトです。 このパラメーター オブジェクトがによって使用され、 <xref:System.Web.UI.WebControls.SqlDataSource> コントロールによって、2 つ目 <xref:System.Web.UI.WebControls.ListView> コントロールにバインドします。  
  
 [!code-csharp[System.Web.UI.WebControls.ListViewItemDeleting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/CS/ListViewItemItemDeletingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListViewItemDeleting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListViewItemDeleting/VB/ListViewItemItemDeletingVB.aspx#1)]  
  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.ListView.SelectedValue%2A> キー フィールドの値を決定するプロパティです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SelectedValue\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/CS/ListViewSelectedValueCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.SelectedValue\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SelectedValue/VB/ListViewSelectedValueVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.DataKeys" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SelectedDataKey" />
      </Docs>
    </Member>
    <Member MemberName="SelectItem">
      <MemberSignature Language="C#" Value="public void SelectItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SelectItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集モードでは、項目のインデックス。</param>
        <summary>編集モードでは、項目を選択、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.ListView.SelectedIndexChanged> イベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">項目のインデックスが負の値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEditItem">
      <MemberSignature Language="C#" Value="public void SetEditItem (int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEditItem(int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetEditItem(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rowIndex">編集モードに設定する項目のインデックス。</param>
        <summary>編集モードに指定した項目を設定、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.EditItem%2A> 編集モードで配置されているアイテムにアクセスするプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 によって編集項目のコンテンツが定義されている、 <xref:System.Web.UI.WebControls.ListView.EditItemTemplate%2A> プロパティです。  
  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.ListView.ItemEditing> イベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPageProperties">
      <MemberSignature Language="C#" Value="protected virtual void SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">ページの最初のレコードのインデックス。</param>
        <param name="maximumRows">1 つのページ上の項目の最大数。</param>
        <param name="databind">
          <see langword="true" /> プロパティが設定されます。 後は、コントロールを再バインドするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>データのページのプロパティを設定、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maximumRows" /> 1 より小さいです。  
  
 または  
  
 <paramref name="startRowIndex" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (string sortExpression, System.Web.UI.WebControls.SortDirection sortDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(string sortExpression, valuetype System.Web.UI.WebControls.SortDirection sortDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortExpression" Type="System.String" />
        <Parameter Name="sortDirection" Type="System.Web.UI.WebControls.SortDirection" />
      </Parameters>
      <Docs>
        <param name="sortExpression">並べ替えに並べ替え式、 <see cref="T:System.Web.UI.WebControls.ListView" /> を制御します。</param>
        <param name="sortDirection">
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。</param>
        <summary>並べ替え、 <see cref="T:System.Web.UI.WebControls.ListView" /> によって指定された並べ替え式と方向のコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.Sort%2A> プログラムを使用してデータを並べ替えるに表示されているメソッド、 <xref:System.Web.UI.WebControls.ListView> 指定された並べ替え式と方向を使用して制御します。 並べ替え式は、列または並べ替えを行う列を指定します。 複数の列を並べ替えるには、するには、フィールド名のコンマ区切りの一覧を含む並べ替え式を作成します。 並べ替えの方向は、昇順または降順で並べ替えを実行するかどうかを示します。  
  
 内容を並べ替えるときに通常このメソッドを使用する、 <xref:System.Web.UI.WebControls.ListView> ページ上の別のコントロールからなど、支配の及ばないをから制御します。 このメソッドは、プログラムでの既定の並べ替え順序を設定するのには使用も、 <xref:System.Web.UI.WebControls.ListView> 最初の描画するタイミングを制御します。  
  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.ListView.Sorted> と <xref:System.Web.UI.WebControls.ListView.Sorting> イベントです。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.Sort%2A> をプログラムで並べ替える方法、 <xref:System.Web.UI.WebControls.ListView> を複数のデータ フィールドのコントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.Sort\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/CS/ListViewSortCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.Sort\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sort/VB/ListViewSortVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールがデータ ソース コントロールにバインドされているが、 <see cref="T:System.Web.UI.DataSourceView" /> データ ソースに関連付けられているオブジェクトが <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
      </Docs>
    </Member>
    <Member MemberName="SortDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.SortDirection SortDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection SortDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えられているフィールドの並べ替えの方向を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.SortDirection" /> 値のいずれか。 既定値は、<see langword="SortDirection.Ascending" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> または並べ替えられている複数のフィールドが昇順または降順で並べ替えるかどうかを決定するプロパティです。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.SortDirection%2A> プログラムでの並べ替えの方向を決定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SortDirection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.SortDirection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SortDirection" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="Sorted">
      <MemberSignature Language="C#" Value="public event EventHandler Sorted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Sorted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>結局、並べ替え操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.Sorted> イベントは、並べ替えボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.Sort%2A> 後メソッドが呼び出された、 <xref:System.Web.UI.WebControls.ListView> コントロールは、並べ替え操作を処理します。 \(並べ替えボタンはいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Sort"に設定します\)。 これにより、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorting" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public virtual string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>並べ替えられているフィールドに関連付けられている並べ替え式を取得します。</summary>
        <value>並べ替え式または並べ替えられている複数のフィールドに関連付けられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 複数の列を並べ替えると、このプロパティには、並べ替えを行うフィールドのコンマ区切りの一覧が含まれています。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.SortExpression%2A> で並べ替えられている列をプログラムで特定するプロパティ、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.SortDirection\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/CS/ListViewSortCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.SortDirection\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.SortDirection/VB/ListViewSortVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.SortDirection" />
      </Docs>
    </Member>
    <Member MemberName="Sorting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.ListViewSortEventArgs&gt; Sorting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ListView.Sorting" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.ListViewSortEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>前に並べ替え操作が要求されたときに発生、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは、並べ替え操作を処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.Sorting> イベントは、並べ替えボタンがクリックされたときに発生します。 または、 <xref:System.Web.UI.WebControls.ListView.Sort%2A> メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.ListView> コントロールは、並べ替え操作を処理します。 \(並べ替えボタンはいるボタン コントロール <xref:System.Web.UI.WebControls.Button.CommandName%2A> プロパティが"Sort"に設定します\)。 これにより、並べ替え式のカスタマイズなど、このイベントが発生するたびに、カスタムのルーチンを実行することができます。  
  
 A <xref:System.Web.UI.WebControls.ListViewSortEventArgs> を列の並べ替え式を使用すると、イベント ハンドラーに渡されるオブジェクト。 並べ替え操作をキャンセルする必要があることを指定することもできます。 並べ替え操作をキャンセルする、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> のプロパティ、 <xref:System.Web.UI.WebControls.ListViewSortEventArgs> オブジェクトを `true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/ja-jp/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## 例  
 次の例のイベント ハンドラーを作成する方法、 <xref:System.Web.UI.WebControls.ListView.Sorting> イベントです。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.Sorting\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/CS/ListViewSortingCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.Sorting\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.Sorting/VB/ListViewSortingVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.Sorted" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="protected virtual int StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内のデータのページに表示される最初のレコードのインデックスを取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>内のデータのページに表示される最初のレコードのインデックス、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.IDataKeysControl.ClientIDRowSuffixDataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET を生成するときに、データ バインド コントロールの各インスタンスを一意に識別するために使用するデータ値のコレクションを取得、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</summary>
        <value>データ フィールドの値のコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.IDataKeysControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールに表示されるアイテムの主キー フィールドの名前を格納する配列。</summary>
        <value>データ バインド コントロールに表示されるアイテムの主キー フィールドの名前を格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ソースには、1 つ以上の個別のデータ項目の一覧が含まれている場合に、データ バインド コントロールをバインドするデータのリストの名前を設定します。</summary>
        <value>データ バインド コントロールがバインドされるデータの一覧の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、データ バインド コントロールのデータ項目の一覧の取得元となるオブジェクト。</summary>
        <value>データ バインド コントロールを取得するデータの一覧を格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ バインド コントロールのデータ項目の一覧の取得元となるデータ ソース コントロールの ID を設定します。</summary>
        <value>データ バインド コントロールのデータの取得元となるデータ ソースを表すコントロールの ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実装するオブジェクトを取得、 <see cref="T:System.Web.UI.IDataSource" /> オブジェクトのデータ コンテンツへのアクセスを提供するインターフェイスです。</summary>
        <value>データ バインド コントロールを取得するデータ項目の一覧を含むデータ ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>場合は、各データ行を一意に識別する値が使用されるデータ フィールドの名前を取得、 <see cref="T:System.Web.UI.WebControls.ListView" /> タイミングを制御、 <see cref="P:System.Web.UI.Control.ClientIDMode" /> にプロパティが設定されている <see cref="F:System.Web.UI.ClientIDMode.Predictable" />します。</summary>
        <value>各インスタンスを一意に識別する値が使用されるデータ フィールドの名前、 <see cref="T:System.Web.UI.WebControls.ListView" /> ASP.NET が生成するときの制御、 <see cref="P:System.Web.UI.Control.ClientID" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.IDataKeysControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.DataKeys">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKeyArray System.Web.UI.WebControls.IDataBoundListControl.DataKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKeyArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロール内の各行を表すデータ キー値のコレクションを取得します。</summary>
        <value>データ バインド コントロール内の各行のデータ キーの値を格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IDataBoundListControl.EnablePersistedSelection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または選択した行には、ときに、データ バインド コントロール内のデータをユーザーのページが保持されるかどうかを指定する値を設定します。</summary>
        <value>
          <see langword="true" /> 選択範囲がデータのキーに基づいている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundListControl.SelectedDataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインド コントロールで選択した行のデータ キーの値を含むデータ キー オブジェクトを取得します。</summary>
        <value>データ バインド コントロールで選択した行のデータ キーの値を含むオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IDataBoundListControl.SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、データ バインド コントロールで選択した行のインデックスを設定します。</summary>
        <value>データ バインド コントロールで選択した行のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundListControl> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />」を参照してください。</summary>
        <value>1 つのページに表示する項目の最大数、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23MaximumRows%2A> プロパティの値を使用して、 <xref:System.Web.UI.WebControls.ListView.MaximumRows%2A> を 1 ページに表示する項目の最大数を取得するプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties">
      <MemberSignature Language="C#" Value="void IPageableItemContainer.SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">ページの最初のレコードのインデックス。</param>
        <param name="maximumRows">1 つのページ上の項目の最大数。</param>
        <param name="databind">
          <see langword="true" /> プロパティが設定されます。 後は、コントロールを再バインドするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23SetPageProperties%2A> メソッドを呼び出す、 <xref:System.Web.UI.WebControls.ListView.SetPageProperties%2A> のメソッド、 <xref:System.Web.UI.WebControls.ListView> ページのプロパティを設定するコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />」を参照してください。</summary>
        <value>内のデータのページに表示される最初のレコードのインデックス、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView.System%23Web%23UI%23WebControls%23IPageableItemContainer%23StartRowIndex%2A> プロパティの値を使用して、 <xref:System.Web.UI.WebControls.ListView.StartRowIndex%2A> 、ページに表示される最初のレコードのインデックスを取得するプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ListView.StartRowIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPersistedSelector.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IPersistedSelector.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、データ バインド コントロールで選択したレコードのデータ キーの値を設定します。</summary>
        <value>データ バインド コントロールで選択したレコードのデータ キーの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.ListView> のインスタンスが <xref:System.Web.UI.WebControls.IPersistedSelector> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public override short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see langword="0" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.TabIndex%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.TabIndex" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public override string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.String.Empty" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.ToolTip%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.ToolTip" /> プロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (int itemIndex, bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(int32 itemIndex, bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemIndex">更新する項目のインデックス。</param>
        <param name="causesValidation">
          <see langword="true" /> このメソッドが呼び出されたときに、ページの検証を実行するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>データ ソース内の指定したインデックスにあるレコードを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> メソッドをプログラムでデータ ソース内の指定したインデックスにあるレコードを更新します。 外部からのレコードを更新するときに通常、このメソッドが使用、 <xref:System.Web.UI.WebControls.ListView> \] ページで別の管理からなどを制御します。  
  
> [!NOTE]
>  このメソッドは、双方向データ バインド入力コントロールを含む項目に対してのみ呼び出すことができます。 双方向のバインド式の詳細については、次を参照してください。 [データベースへのバインド](http://msdn.microsoft.com/ja-jp/ab7b2846-975b-4057-a948-45527497c742)します。  
  
 更新操作の前にページの検証を実行するかどうかを指定するには、使用、 `causesValidation` パラメーター。  
  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.ListView.ItemUpdated> と <xref:System.Web.UI.WebControls.ListView.ItemUpdating> イベントです。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> にプログラムで更新する方法、 <xref:System.Web.UI.WebControls.ListView> データ ソースの項目。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.UpdateItem\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/CS/ListViewUpdateItemCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.ListView.UpdateItem\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.UpdateItem/VB/ListViewUpdateItemVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="itemIndex" /> が 0 未満です。  
  
 または  
  
 <see cref="T:System.Web.UI.DataSourceView" /> オブジェクトに関連付けられている、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールは <see langword="null" />です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ListView.EditItemTemplate" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("DataBoundControl_UpdateMethod")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定にデータを更新するために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定すると、データ バインド メソッドとして使用するモデルのバインディングとします。  
  
 Web フォームでモデルのバインディングの使用に関するチュートリアル シリーズは、次を参照してください。 [Model Binding and Web Forms](http://go.microsoft.com/fwlink/?LinkId=286117)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListView.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上書き、 <see cref="P:System.Web.UI.WebControls.WebControl.Width" /> プロパティです。 このプロパティの設定でサポートされていない、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
        <value>
          <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, 、、プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル プロパティでサポートされていない、 <xref:System.Web.UI.WebControls.ListView> コントロールです。 設定を試行した場合、 <xref:System.Web.UI.WebControls.ListView.Width%2A> 、プロパティ、 <xref:System.NotSupportedException> 例外がスローされます。 プロパティを取得する場合は、基本クラスの対応するプロパティの既定値を返します。  
  
 スタイル、 <xref:System.Web.UI.WebControls.ListView> コントロール内のコントロールをスタイルする必要があります、 <xref:System.Web.UI.WebControls.ListView> 連鎖を使用してテンプレート スタイル シート \(CSS\) クラスまたはインライン要素のスタイル。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">設定しようとしましたが、 <see cref="P:System.Web.UI.WebControls.ListView.Width" /> プロパティです。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateChildControls">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>表示に使用されるコントロールの階層を作成、 <see cref="T:System.Web.UI.WebControls.ListView" /> コントロールです。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>