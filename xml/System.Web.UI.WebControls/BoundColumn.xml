<Type Name="BoundColumn" FullName="System.Web.UI.WebControls.BoundColumn">
  <TypeSignature Language="C#" Value="public class BoundColumn : System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundColumn extends System.Web.UI.WebControls.DataGridColumn" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundColumn" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataGridColumn</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ ソースのフィールドにバインドされる <see cref="T:System.Web.UI.WebControls.DataGrid" /> コントロールの列の種類。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BoundColumn> の列の種類、 <xref:System.Web.UI.WebControls.DataGrid> コントロールにデータ ソースのフィールドの内容を表示します。 値は、1 つの列に表示されます。 フィールドにリンクされて、 <xref:System.Web.UI.WebControls.BoundColumn>, 、対応するセルのデータ ソース内の更新が反映されますので、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!NOTE]
>  この列の型の既定値は、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
 この列の外観を制御するには、スタイル プロパティを使用して、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。  
  
> [!CAUTION]
>  テキストは、HTML で表示されるまでのエンコードではありません、 <xref:System.Web.UI.WebControls.BoundColumn>です。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 この列の値は、ユーザー入力から送られてきた場合、は、セキュリティの脆弱性を軽減する値を検証することを確認します。  
  
   
  
## 例  
 次の例では、使用、 <xref:System.Web.UI.WebControls.BoundColumn> の列の種類、 <xref:System.Web.UI.WebControls.DataGrid> コントロールにデータ ソースのフィールドを表示します。  
  
 [!code-csharp[Classic BoundColumn Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BoundColumn Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic BoundColumn Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BoundColumn Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundColumn" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.BoundColumn> クラスです。  
  
   
  
## 例  
 次の例では、作成しの新しいインスタンスを初期化する方法、 <xref:System.Web.UI.WebControls.BoundColumn> し、クラスに追加、 <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> コレクションです。  
  
 [!code-csharp[DataGridCtor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataGridCtor/CS/datagridctorcs.aspx#1)]
 [!code-vb[DataGridCtor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataGridCtor/VB/datagridctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.Columns" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、フィールド名にバインドするデータ ソース、 <see cref="T:System.Web.UI.WebControls.BoundColumn" />です。</summary>
        <value>バインドするフィールドの名前、 <see cref="T:System.Web.UI.WebControls.BoundColumn" />です。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BoundColumn.DataField%2A> プロパティにバインドするフィールドを指定する、 <xref:System.Web.UI.WebControls.BoundColumn>です。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.BoundColumn.DataField%2A> にバインドするデータ ソースのフィールドの名前を指定するプロパティ、 <xref:System.Web.UI.WebControls.BoundColumn>です。  
  
 [!code-csharp[Classic BoundColumn Example\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic BoundColumn Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic BoundColumn Example\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic BoundColumn Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または列の項目の表示形式を指定する文字列を設定します。</summary>
        <value>列内のアイテムの表示形式を指定する書式指定文字列。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> プロパティを列内の項目に対するカスタムの書式を指定します。  
  
 データ形式の文字列形式で、コロンで区切られた 2 つの部分から成る { `A` : `Bxx` } します。 たとえば、{0: f2} 書式指定文字列は、小数点以下 2 桁の固定小数点数を表示します。  
  
> [!NOTE]
>  文字列全体は、書式指定文字列とリテラル文字列ではなくであることを示すために中かっこで囲む必要があります。 中かっこの外側のテキストはリテラル テキストとして表示されます。  
  
 コロンの前に値 \(`A` 一般的な例で\) パラメーターの 0 から始まるリストのパラメーター インデックスを指定します。  
  
> [!NOTE]
>  各セルに 1 つだけの価値があるために、この値を 0 に設定のみことができます。  
  
 コロンの後に文字 \(`B` 一般的な例では\)、値を表示する形式を指定します。 次の表は、一般的な形式を一覧表示します。  
  
|書式指定文字|説明|  
|------------|--------|  
|`C`|数値を通貨形式で表示します。|  
|`D`|10 進形式で数値を表示します。|  
|`E`|指数の指数書式で数値を表示します。|  
|`F`|固定形式で数値を表示します。|  
|`G`|数値を表示は一般に書式設定します。|  
|`N`|数値書式で数値を表示します。|  
|`X`|16 進形式で数値を表示します。|  
  
> [!NOTE]
>  書式指定文字が区別されない、除く `X`, 、16 進数の文字が、指定した場合に表示されます。  
  
 書式指定文字の後の値 \(`xx` 一般的な例で\) を表示する有効桁数または小数点以下の数を指定します。  
  
 書式指定文字列の詳細については、次を参照してください。 [&#91;\<topic:\/\/cpconformattingoverview\>&#93;](http://msdn.microsoft.com/ja-jp/0d1364da-5b30-4d42-8e6b-03378343343f)します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> 内の列のさまざまな形式を指定するプロパティ、 <xref:System.Web.UI.WebControls.DataGrid> コントロールです。`Qty` を整数として列を書式設定、 `Price` 列を通貨として書式設定、 `Weight` 列は 10 進数として書式設定、および `Expires` 列を短い形式の日付と時刻の文字列として書式設定します。  
  
 [!code-csharp[BoundColumnDataFormatString\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundColumnDataFormatString/cs/BoundColumnSampleCS.aspx#1)]
 [!code-vb[BoundColumnDataFormatString\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundColumnDataFormatString/vb/BoundColumnSampleVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.FormatDataValue(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataValue">書式設定する値。</param>
        <summary>指定した値で示される形式に変換、 <see cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" /> プロパティです。</summary>
        <returns>指定した値で示される形式に変換、 <see cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" /> プロパティです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BoundColumn.FormatDataValue%2A> で指定した値を形式に変換する方法が示される、 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> プロパティです。  
  
> [!NOTE]
>  このメソッドは、文字列を返しますと等価の値の場合、 <xref:System.Web.UI.WebControls.BoundColumn.DataFormatString%2A> プロパティが設定されていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リセット、 <see cref="T:System.Web.UI.WebControls.BoundColumn" /> を初期状態にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BoundColumn.Initialize%2A> 再設定する方法、 <xref:System.Web.UI.WebControls.BoundColumn> を初期状態にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.TableCell cell, int32 columnIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.TableCell" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="cell">A <see cref="T:System.Web.UI.WebControls.TableCell" /> をリセットするセルを表すオブジェクト。</param>
        <param name="columnIndex">セルが存在する列番号。</param>
        <param name="itemType">
          <see cref="T:System.Web.UI.WebControls.ListItemType" /> 値のいずれか。</param>
        <summary>指定されたセルをリセット、 <see cref="T:System.Web.UI.WebControls.BoundColumn" /> を初期状態にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.BoundColumn.InitializeCell%2A> メソッドで指定されたセルのリセット、 <xref:System.Web.UI.WebControls.BoundColumn> を初期状態にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundColumn.Initialize" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかの項目、 <see cref="T:System.Web.UI.WebControls.BoundColumn" /> 編集できます。</summary>
        <value>
          <see langword="true" /> 場合内の項目、 <see cref="T:System.Web.UI.WebControls.BoundColumn" /> 編集した以外にすることはできません <see langword="false" />します。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BoundColumn.ReadOnly%2A> プロパティを指定するかどうかの項目、 <xref:System.Web.UI.WebControls.BoundColumn> 編集できます。 このプロパティは、プログラムで、列は読み取り専用であるかどうかを確認することもできます。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Web.UI.WebControls.BoundColumn.ReadOnly%2A> ことを指定するプロパティ、 <xref:System.Web.UI.WebControls.BoundColumn> は読み取り専用です。 .Aspx ファイルでは、3 つの BoundColumn コントロールを定義し、項目の列を読み取り専用に設定します。  
  
 [!code-csharp[BoundColumnReadOnly\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundColumnReadOnly/CS/boundcolumnreadonlycs.aspx#1)]
 [!code-vb[BoundColumnReadOnly\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundColumnReadOnly/VB/boundcolumnreadonlyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="thisExpr">
      <MemberSignature Language="C#" Value="public static readonly string thisExpr;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string thisExpr" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundColumn.thisExpr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列を表す"\!"です。 このフィールドは読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.BoundColumn.thisExpr> を表すフィールド、"\!"の文字列です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>