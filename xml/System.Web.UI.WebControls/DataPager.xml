<Type Name="DataPager" FullName="System.Web.UI.WebControls.DataPager">
  <TypeSignature Language="C#" Value="public class DataPager : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.INamingContainer, System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataPager extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataPager" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICompositeControlDesignerAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataPagerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.DataPager), "DataPager.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> インターフェイスを実装するデータ バインド コントロール \(<see cref="T:System.Web.UI.WebControls.ListView" /> コントロールなど\) にページング機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 In this topic:  
  
-   [Introduction](#introduction)  
  
-   [Pager Fields](#pager_fields)  
  
-   [Page Properties](#page_properties)  
  
-   [Accessibility](#Accessibility)  
  
-   [Declarative Syntax](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## Introduction  
 The <xref:System.Web.UI.WebControls.DataPager> class is used to page data and to display navigation controls for data\-bound controls that implement the <xref:System.Web.UI.WebControls.IPageableItemContainer> interface. \(An example of a control that implements the interface is the <xref:System.Web.UI.WebControls.ListView> control.\)  
  
 You can associate the <xref:System.Web.UI.WebControls.DataPager> control with the data\-bound control by using the <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> property. Alternatively, you can put the <xref:System.Web.UI.WebControls.DataPager> control inside the data\-bound control hierarchy. For example, in the <xref:System.Web.UI.WebControls.ListView> control, you can put the <xref:System.Web.UI.WebControls.DataPager> control inside the <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A?displayProperty=fullName> template.  
  
 You can customize the number of items that are displayed for each page of data by changing the <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> property. You can also change the way a page is submitted to the server by setting the <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> property.  
  
<a name="pager_fields"></a>   
## Pager Fields  
 In order for the <xref:System.Web.UI.WebControls.DataPager> control to display navigation controls, you must add pager fields to the control. The pager fields derive from the <xref:System.Web.UI.WebControls.DataPagerField> class. The following table lists the pager field types that you can use.  
  
|Pager field type|Description|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.NextPreviousPagerField>|Enables users to navigate through pages one page at a time, or to jump to the first or last page.|  
|<xref:System.Web.UI.WebControls.NumericPagerField>|Enables users to select a page by page number.|  
|<xref:System.Web.UI.WebControls.TemplatePagerField>|Enables you to create a custom paging UI.|  
  
 To declaratively add pager fields to the <xref:System.Web.UI.WebControls.DataPager> control, add a **languageKeyword tag is not supported!!!!**  
 element to the <xref:System.Web.UI.WebControls.DataPager> control. You can then add the pager fields to the **languageKeyword tag is not supported!!!!**  
 element. The pager fields are added to the <xref:System.Web.UI.WebControls.DataPager.Fields%2A> collection in the order that they appear in the **languageKeyword tag is not supported!!!!**  
 element. The <xref:System.Web.UI.WebControls.DataPager.Fields%2A> collection enables you to programmatically manage the pager fields in the <xref:System.Web.UI.WebControls.DataPager> control.  
  
<a name="page_properties"></a>   
## Page Properties  
 The following table lists read\-only properties of the <xref:System.Web.UI.WebControls.DataPager> control that specify characteristics of the page of data. These properties are usually used for binding expressions in the <xref:System.Web.UI.WebControls.TemplatePagerField> object.  
  
|Property|Description|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataPager.MaximumRows%2A>|The maximum number of records that are displayed for each page of data.|  
|<xref:System.Web.UI.WebControls.DataPager.StartRowIndex%2A>|The index of the first record that is displayed on a page of data.|  
|<xref:System.Web.UI.WebControls.DataPager.TotalRowCount%2A>|The total number of records that are available in the underlying data source.|  
  
<a name="Accessibility"></a>   
## Accessibility  
 The default markup that is rendered default for this control might not comply with accessibility standards, such as the Web Content Accessibility Guidelines 1.0 \(WCAG\) priority 1 guidelines. For details about accessibility support for this control, see [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="DeclarativeSyntax"></a>   
## Declarative Syntax  
  
```  
<asp:DataPager  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PagedControlID="string"  
    PageSize="integer"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <Fields>  
            <asp:NextPreviousPagerField  
                ButtonCssClass="string"  
                ButtonType="Button|Image|Link"  
                FirstPageImageUrl="string"  
                FirstPageText="string"  
                LastPageImageUrl="string"  
                LastPageText="string"  
                NextPageImageUrl="string"  
                NextPageText="string"  
                PreviousPageImageUrl="string"  
                PreviousPageText="string"  
                RenderDisabledButtonsAsLabels="True|False"  
                RenderNonBreakingSpacesBetweenControls="True|False"  
                ShowFirstPageButton="True|False"  
                ShowLastPageButton="True|False"  
                ShowNextPageButton="True|False"  
                ShowPreviousPageButton="True|False"  
                Visible="True|False"  
            />  
            <asp:NumericPagerField  
                ButtonCount="integer"  
                ButtonType="Button|Image|Link"  
                CurrentPageLabelCssClass="string"  
                NextPageImageUrl="string"  
                NextPageText="string"  
                NextPreviousButtonCssClass="string"  
                NumericButtonCssClass="string"                 PreviousPageImageUrl="string"  
                PreviousPageText="string"  
                RenderNonBreakingSpacesBetweenControls="True|False"  
                Visible="True|False"  
            />  
            <asp:TemplatePagerField  
                OnPagerCommand="PagerCommand event handler"  
                Visible="True|False"  
            />  
        </Fields>  
</asp:DataPager>  
```  
  
   
  
## 例  
 The following example shows how to add paging functionality to a <xref:System.Web.UI.WebControls.ListView> control. This example contains two <xref:System.Web.UI.WebControls.DataPager> controls that are used to page through data of the same <xref:System.Web.UI.WebControls.ListView> control.  
  
 [!code-csharp[System.Web.UI.WebControls.DataPager\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager/CS/DataPagerCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataPager\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager/VB/DataPagerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataPagerField" />
    <altmember cref="T:System.Web.UI.WebControls.IPageableItemContainer" />
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="T:System.Web.UI.WebControls.NextPreviousPagerField" />
    <altmember cref="T:System.Web.UI.WebControls.NumericPagerField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplatePagerField" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataPager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.DataPager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 To dynamically add a <xref:System.Web.UI.WebControls.DataPager> control to a page, create a new <xref:System.Web.UI.WebControls.DataPager> object. Set its properties, and then add it to the <xref:System.Web.UI.Control.Controls%2A> collection of a container control, such as a <xref:System.Web.UI.WebControls.PlaceHolder> control.  
  
   
  
## 例  
 The following example shows how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.DataPager> control to a page.  
  
 [!code-csharp[System.Web.UI.WebControls.DataPager.Ctor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.Ctor/CS/DataPagerCtorCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataPager.Ctor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.Ctor/VB/DataPagerCtorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML ブラウザーにコンテンツを表示する出力ストリームを表すオブジェクト。</param>
        <summary>HTML 属性およびスタイルを指定したブラウザーにレンダリングされる <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.AddAttributesToRender%2A> メソッドは、追加の属性を挿入するコントロールの開発者によって、主に使用しでスタイルを設定、 <xref:System.Web.UI.HtmlTextWriter> の出力ストリームは、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataPager.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム属性の名前\/値ペアのコレクションを取得、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <value>カスタム属性の名前\/値ペアのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataPager.Attributes%2A> の開始タグ内で宣言された属性の名前\/値ペアを管理するコレクション、 <xref:System.Web.UI.WebControls.DataPager> コントロール、それらは直接サポートされていないクラスでします。 プログラムで、追加またはコレクションに属性を削除することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToEvents">
      <MemberSignature Language="C#" Value="protected virtual void ConnectToEvents (System.Web.UI.WebControls.IPageableItemContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConnectToEvents(class System.Web.UI.WebControls.IPageableItemContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.ConnectToEvents(System.Web.UI.WebControls.IPageableItemContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.WebControls.IPageableItemContainer" />
      </Parameters>
      <Docs>
        <param name="container">データ バインド コントロールを発生させる、 <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> イベントです。</param>
        <summary>内のイベント ハンドラー メソッドにイベントを接続する、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.ConnectToEvents%2A> メソッドは、指定、 <xref:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable%2A> メソッドのハンドラーとして、 <xref:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable?displayProperty=fullName> で指定したコントロールのイベント `container`です。`container` パラメーターを実装するデータ バインド コントロールを含める必要があります、 <xref:System.Web.UI.WebControls.IPageableItemContainer> インターフェイスなど、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.IPageableItemContainer" />
        <altmember cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable(System.Object,System.Web.UI.WebControls.PageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.ControlCollection" /> の子を表すオブジェクトを制御、 <see cref="T:System.Web.UI.WebControls.DataPager" /> UI 階層内のコントロールです。</summary>
        <value>子コントロールのコレクション、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コレクションにコントロールを追加、コントロールをコレクションから削除、またはコレクション内のサーバー コントロールを反復処理することができます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override the <see cref="P:System.Web.UI.WebControls.DataPager.Controls" /> property, make sure that you call the <see cref="M:System.Web.UI.Control.EnsureChildControls" /> method.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreatePagerFields">
      <MemberSignature Language="C#" Value="protected virtual void CreatePagerFields ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreatePagerFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.CreatePagerFields" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> オブジェクトに含まれる、 <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> のプロパティ、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.CreatePagerFields%2A> メソッドを使用して、 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> プロパティおよび、 <xref:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable%2A> を作成する方法、 <xref:System.Web.UI.WebControls.DataPagerField> オブジェクトに含まれる、 <xref:System.Web.UI.WebControls.DataPager.Fields%2A> プロパティです。 このメソッドは、 <xref:System.Web.UI.WebControls.DataPagerField.CreateDataPagers%2A?displayProperty=fullName> メソッドをユーザーにコレクション内の各フィールドのインターフェイス \(UI\) コントロールを作成します。  
  
 ページャー フィールドが作成された、 <xref:System.Web.UI.WebControls.DataPager> のページャー フィールドの順序での制御、 <xref:System.Web.UI.WebControls.DataPager.Fields%2A> コレクションです。 次の表は、ポケットベルから派生するクラスのフィールド、 <xref:System.Web.UI.WebControls.DataPagerField> で作成できるクラスと、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
|ページャー フィールドの種類|説明|  
|--------------------|--------|  
|<xref:System.Web.UI.WebControls.NextPreviousPagerField>|ユーザーが 1 ページずつの移動、データの最初と最後のページに直接移動したりできます。|  
|<xref:System.Web.UI.WebControls.NumericPagerField>|ページ番号でデータのページを選択することができます。|  
|<xref:System.Web.UI.WebControls.TemplatePagerField>|カスタム ページング UI を作成できます。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataPagerField" />
        <altmember cref="M:System.Web.UI.WebControls.DataPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="P:System.Web.UI.WebControls.DataPager.Fields" />
        <altmember cref="P:System.Web.UI.WebControls.DataPager.PageSize" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable(System.Object,System.Web.UI.WebControls.PageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインド、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールとデータ ソースへのすべての子コントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装の <xref:System.Web.UI.WebControls.DataPager.DataBind> メソッドが基本クラス実装をオーバーライドします。 オーバーライド メソッドでは、すべての子コントロールがデータ ソースにバインドする前に作成されたことを確認します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="M:System.Web.UI.Control.DataBindChildren" />
      </Docs>
    </Member>
    <Member MemberName="Fields">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataPagerFieldCollection Fields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataPagerFieldCollection Fields" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.Fields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Default")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataPagerFieldTypeEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataPagerFieldCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションを取得 <see cref="T:System.Web.UI.WebControls.DataPagerField" /> で指定されるページャー フィールドを表すオブジェクト、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <value>コレクション オブジェクトで指定されているすべてのページャー フィールドを含む、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示されるページャー フィールド、 <xref:System.Web.UI.WebControls.DataPager> のページャー フィールドの順序での制御、 <xref:System.Web.UI.WebControls.DataPager.Fields%2A> コレクションです。 次の表は、ポケットベルから派生するクラスのフィールド、 <xref:System.Web.UI.WebControls.DataPagerField> クラスで使用できます、 <xref:System.Web.UI.WebControls.DataPager.Fields%2A> コレクションです。  
  
|ページャー フィールドの種類|説明|  
|--------------------|--------|  
|<xref:System.Web.UI.WebControls.NextPreviousPagerField>|ユーザーが 1 ページずつの移動、データの最初と最後のページに直接移動したりできます。|  
|<xref:System.Web.UI.WebControls.NumericPagerField>|ページ番号でデータのページを選択することができます。|  
|<xref:System.Web.UI.WebControls.TemplatePagerField>|カスタム ページング UI を作成できます。|  
  
 ページャー フィールドを宣言によって指定する、 <xref:System.Web.UI.WebControls.DataPager> コントロールを配置、 `Fields` 内の要素、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。 開始タグと終了の間に挿入するページャー フィールドを一覧表示できますし、 `<Fields>` タグ。  
  
 プログラムでするページャー フィールドを追加することができます、 <xref:System.Web.UI.WebControls.DataPager.Fields%2A> コレクションです。 ただし、する方が簡単で、宣言によってページャー フィールドを一覧表示、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
   
  
## 例  
 次の例では、宣言するページャー フィールドを追加する方法、 <xref:System.Web.UI.WebControls.DataPager.Fields%2A> のコレクション、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataPagerField\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPagerField/CS/DataPagerFieldCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataPagerField\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPagerField/VB/DataPagerFieldVB.aspx#1)]  
  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.DataPager.Fields%2A> 動的に追加するプロパティ、 <xref:System.Web.UI.WebControls.NextPreviousPagerField> オブジェクトを <xref:System.Web.UI.WebControls.DataPager> コントロールです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.NextPreviousPagerField.%23ctor%2A> コンス トラクターです。  
  
 [!code-csharp[System.Web.UI.WebControls.NextPreviousPagerField.Ctor\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.NextPreviousPagerField.Ctor/CS/NextPreviousPagerFieldCtorCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.NextPreviousPagerField.Ctor\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.NextPreviousPagerField.Ctor/VB/NextPreviousPagerFieldCtorVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataPagerField" />
        <altmember cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" />
        <altmember cref="T:System.Web.UI.WebControls.NextPreviousPagerField" />
        <altmember cref="T:System.Web.UI.WebControls.NumericPagerField" />
        <altmember cref="T:System.Web.UI.WebControls.TemplatePagerField" />
      </Docs>
    </Member>
    <Member MemberName="FindPageableItemContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.IPageableItemContainer FindPageableItemContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.IPageableItemContainer FindPageableItemContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.FindPageableItemContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IPageableItemContainer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連付けられているデータ バインド コントロールを取得、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <returns>データ バインド コントロールに関連付けられている、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドによって取得されたデータ バインド コントロールがデータを含むデータ ソース オブジェクトを参照する、 <xref:System.Web.UI.WebControls.DataPager> ページを制御します。<xref:System.Web.UI.WebControls.DataPager> できるようにこのデータをページにコントロールをデータ バインド コントロールを実装する必要があります、 <xref:System.Web.UI.WebControls.IPageableItemContainer> インターフェイスです。  
  
 <xref:System.Web.UI.WebControls.DataPager.FindPageableItemContainer%2A> メソッド チェックするかどうか、 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティがデータ バインド コントロールの ID に設定します。 場合、 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティが設定されていない、 <xref:System.Web.UI.WebControls.DataPager.FindPageableItemContainer%2A> メソッドが名前付け、データ バインド コントロールを探すようにコンテナーのスタック上に移動します。 たとえば場合、 <xref:System.Web.UI.WebControls.DataPager> 内、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A?displayProperty=fullName> のテンプレート、 <xref:System.Web.UI.WebControls.ListView> コントロール、 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティを設定する必要はありません。 これは、 <xref:System.Web.UI.WebControls.DataPager.FindPageableItemContainer%2A> メソッドが自動的に検出、 <xref:System.Web.UI.WebControls.ListView> コントロール ツリーを調べることによって制御します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">実装するコントロール、 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> インターフェイスは、ページには見つかりませんでした。  
  
 または  
  
 指定されたコントロール、 <see cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" /> プロパティが実装していない、 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> インターフェイスです。  
  
 または  
  
 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールには、名前付けコンテナーはありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.IPageableItemContainer" />
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" />
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">オブジェクトの状態を表す、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</param>
        <summary>内のプロパティの状態情報を読み込みます、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロール、ポストバック間で保持する必要がありますが場合でも、 <see cref="P:System.Web.UI.Control.EnableViewState" /> にプロパティが設定されている <see langword="false" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連付けられているデータ バインド コントロールがない、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</exception>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.SaveControlState" />
        <altmember cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する状態を表すオブジェクト。</param>
        <summary>ビュー ステート情報を復元する、 <see cref="T:System.Web.UI.WebControls.DataPager" /> によって保存されたコントロール、 <see cref="M:System.Web.UI.WebControls.DataPager.SaveViewState" /> 前のページ要求中にメソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは主に使用、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] インフラストラクチャ コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataPager.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="MaximumRows">
      <MemberSignature Language="C#" Value="public int MaximumRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.MaximumRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データの各ページに表示されるレコードの最大数を取得します。</summary>
        <value>データの各ページに表示されるレコードの最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataPager.MaximumRows%2A> プロパティ ページのデータのサイズを取得します。<xref:System.Web.UI.WebControls.DataPager.MaximumRows%2A> プロパティと同じ値を含む、 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A>プロパティです。 このプロパティの値を変更するには設定して、 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataPager.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベントのデータ。</param>
        <summary>イベントをするかどうか、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールは、ページのユーザー インターフェイス \(UI\) サーバー コントロールの階層構造に渡されます。</summary>
        <returns>
          <see langword="true" /> 親コントロールにイベントが送信された場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されたら、Web サーバー コントロールは、インスタンスを作成および設定するために必要な初期化の手順を実行する必要があります。 サーバー コントロールのライフ サイクルのこの段階で、コントロールのビュー ステートがまだ設定されていません。 さらに、子またはこのコントロールの親であるかどうかにかかわらず、このメソッドが呼び出されたときにその他のサーバー コントロールにアクセスすることはできません。 他のサーバー コントロールでは、作成されたアクセスできる状態に限りません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.DataPager.OnInit%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.DataPager.OnInit(System.EventArgs)" /> in a derived class, make sure that you call the base class’s <see cref="M:System.Web.UI.WebControls.DataPager.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.OnLoad(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Load" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.OnLoad%2A> メソッドは、通知サーバー コントロールに関連付けられているページの各 HTTP 要求に共通しているアクションを実行する必要があります。 ページのライフ サイクルのこの段階では、階層内のサーバー コントロールの作成および初期化します。 ビューステートを復元し、フォームのコントロールがクライアントからアップロードされた値を反映します。 この実装を開始、 <xref:System.Web.UI.WebControls.DataPager.FindPageableItemContainer%2A> メソッドを実装するコンテナー コントロールを <xref:System.Web.UI.WebControls.IPageableItemContainer> インターフェイス、およびそのページのプロパティを初期化します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/ja-jp/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)します。  
  
 <xref:System.Web.UI.WebControls.DataPager.OnLoad%2A> メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">コンテナー コントロールを実装する、 <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> インターフェイスが見つかりませんでした。</exception>
        <block subset="none" type="overrides">
          <para>When you override <see cref="M:System.Web.UI.WebControls.DataPager.OnLoad(System.EventArgs)" /> in a derived class, make sure that you call the base class’s <see cref="M:System.Web.UI.WebControls.DataPager.OnLoad(System.EventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Load" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.FindPageableItemContainer" />
        <altmember cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnTotalRowCountAvailable">
      <MemberSignature Language="C#" Value="protected virtual void OnTotalRowCountAvailable (object sender, System.Web.UI.WebControls.PageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTotalRowCountAvailable(object sender, class System.Web.UI.WebControls.PageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable(System.Object,System.Web.UI.WebControls.PageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.PageEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベントのデータ。</param>
        <summary>処理、 <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.ListView> 昇給の制御、 <xref:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable?displayProperty=fullName> その基になるデータ ソース内のレコードの合計数が使用可能な場合、イベントです。<xref:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable%2A> はこのイベントのハンドラーをページに関連するプロパティを更新およびページャー フィールド オブジェクトを再作成を担当します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />
      </Docs>
    </Member>
    <Member MemberName="PagedControlID">
      <MemberSignature Language="C#" Value="public virtual string PagedControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PagedControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.PagedControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.WebControls.IPageableItemContainer))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Paging")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="P:System.Web.UI.Control.ID" /> で呼び出しがデータを含むコントロールの <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <value>
          <see cref="P:System.Web.UI.Control.ID" /> で呼び出しがデータを含むコントロールの <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。 既定値は、このプロパティが設定されていないことを示す空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティを指定する、 <xref:System.Web.UI.Control.ID%2A> で呼び出しがデータを含むコントロールの <xref:System.Web.UI.WebControls.DataPager> コントロールです。 指定したコントロールを実装する必要があります、 <xref:System.Web.UI.WebControls.IPageableItemContainer> インターフェイスし、同じ名前付けコンテナーを使用する必要があります、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。 指定したコントロールの例は、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 このプロパティが空の文字列である場合または `null`, 、 <xref:System.Web.UI.WebControls.DataPager> コントロールでは、そのコンテナー コントロールを実装しているかどうかを確認、 <xref:System.Web.UI.WebControls.IPageableItemContainer> インターフェイスです。 など、 <xref:System.Web.UI.WebControls.ListView> コントロール、 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティは配置する場合に設定する必要はありません、 <xref:System.Web.UI.WebControls.DataPager> 内の制御、 <xref:System.Web.UI.WebControls.ListView.LayoutTemplate%2A?displayProperty=fullName> テンプレートです。 これは、 <xref:System.Web.UI.WebControls.DataPager> コントロールが自動的に検出、 <xref:System.Web.UI.WebControls.ListView> コントロール ツリーを調べることによって制御します。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティを動的に関連付ける、 <xref:System.Web.UI.WebControls.ListView> コントロールを <xref:System.Web.UI.WebControls.DataPager> コントロールです。 このコード例が示されている例の一部は、 <xref:System.Web.UI.WebControls.DataPager.%23ctor%2A> コンス トラクターです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataPager.Ctor\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.Ctor/CS/DataPagerCtorCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.DataPager.Ctor\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.Ctor/VB/DataPagerCtorVB.aspx#2)]  
  
 次の例は、宣言によって設定する方法を示します、 <xref:System.Web.UI.WebControls.DataPager.PagedControlID%2A> プロパティに、 <xref:System.Web.UI.WebControls.DataPager> コントロールのデータをページするために、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataPager.PagedControlID\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.PagedControlID/CS/DataPagerPagedControlIDCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataPager.PagedControlID\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.PagedControlID/VB/DataPagerPagedControlIDVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IPageableItemContainer" />
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" />
        <altmember cref="P:System.Web.UI.Control.NamingContainer" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(10)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Paging")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータの各ページに表示されるレコードの数を設定します。</summary>
        <value>データの各ページに表示されるレコードの数。 既定値は 10 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> プロパティ ページのデータのサイズを指定します。  
  
 複数使用していれば <xref:System.Web.UI.WebControls.DataPager> コントロールに同じバインドされているページで <xref:System.Web.UI.WebControls.ListView> に設定して、制御、 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> 同じ値にこれらのコントロールのプロパティです。 場合、 <xref:System.Web.UI.WebControls.DataPager> コントロールが別のページ サイズ、最後に設定された <xref:System.Web.UI.WebControls.DataPager> 初期化するコントロールの実際のページ サイズを決定する、 <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
   
  
## 例  
 次の例では、宣言によって設定する方法、 <xref:System.Web.UI.WebControls.DataPager.PageSize%2A> プロパティに、 <xref:System.Web.UI.WebControls.DataPager> コントロールとその値を動的に変更する方法です。  
  
 [!code-csharp[System.Web.UI.WebControls.DataPager.PageSize\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.PageSize/CS/DataPagerPageSizeCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataPager.PageSize\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.PageSize/VB/DataPagerPageSizeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.DataPager.PageSize" /> プロパティが 1 より小さい値に設定します。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="QueryStringField">
      <MemberSignature Language="C#" Value="public string QueryStringField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueryStringField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.QueryStringField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebCategory("Paging")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクエリ文字列フィールドの名前を設定します。</summary>
        <value>クエリ文字列フィールドの名前。 既定値は空の文字列であることを示す、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールでは、HTTP POST コマンドを使用してページ間を移動するされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> ことを指定するプロパティ、 <xref:System.Web.UI.WebControls.DataPager> コントロールでは、HTTP GET コマンドを使用して、ページ間の移動をします。 GET 要求で名前\/値ペアで構成されるクエリ文字列フィールドが、ページの URL に追加されます。 使用して名前を設定、 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> プロパティです。 値は、対応するページ番号です。 場合 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> 空の文字列または `null`, 、コントロールでは、HTTP POST コマンドを使用して、ページ間の移動をします。  
  
 このプロパティを設定することは、検索エンジンによってインデックス付けされたデータのすべてのページがある場合に便利です。 これは、コントロールがデータの各ページの別の URL が生成されるために発生します。  
  
 設定すると、 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> プロパティには、次の条件は満たすことがあります。  
  
-   1 つ以上ある <xref:System.Web.UI.WebControls.DataPager> ページ、およびそれらの参照を同じデータ バインド コントロールを制御します。 その場合は、必ず、 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> これらのプロパティ <xref:System.Web.UI.WebControls.DataPager> コントロールが同じ値に設定します。  
  
-   1 つ以上ある <xref:System.Web.UI.WebControls.DataPager> ページ、およびそれらの参照にさまざまなデータ バインド コントロールを制御します。 その場合は、必ず、 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> これらのプロパティ <xref:System.Web.UI.WebControls.DataPager> コントロールが別の値に設定します。 設定した場合、 <xref:System.Web.UI.WebControls.DataPager> コントロール同じ値に関連付けられているデータ バインド コントロールが改ページ調整する同時に、同じクエリ文字列\] フィールドを使用しているためです。  
  
 以前のガイドラインに従わない場合、予期しないページング動作が発生することができます。 ただし、例外がスローされますないコントロールによってです。  
  
 場合 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> プロパティは、空の文字列または `null`, の値、 <xref:System.Web.UI.WebControls.NextPreviousPagerField.ButtonType%2A> プロパティの <xref:System.Web.UI.WebControls.NumericPagerField> または <xref:System.Web.UI.WebControls.NextPreviousPagerField> オブジェクトは無視されます。 その場合は、これらのオブジェクトを使用して、 <xref:System.Web.UI.WebControls.HyperLink> コントロール、ナビゲーション ボタンを作成します。  
  
   
  
## 例  
 次の例は、宣言によって設定する方法を示します、 <xref:System.Web.UI.WebControls.DataPager.QueryStringField%2A> プロパティに、 <xref:System.Web.UI.WebControls.DataPager> クエリ文字列を使用してページ間を移動するためにコントロールできます。 この例では、2 つ含まれています <xref:System.Web.UI.WebControls.DataPager> 使用されているコントロールによって表示されるデータをページングする <xref:System.Web.UI.WebControls.ListView> コントロールです。  
  
 [!code-csharp[System.Web.UI.WebControls.DataPager.QueryStringField\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.QueryStringField/CS/DataPagerQueryStringFieldCS.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.DataPager.QueryStringField\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.DataPager.QueryStringField/VB/DataPagerQueryStringFieldVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataPager.Fields" />
        <altmember cref="T:System.Web.UI.WebControls.NextPreviousPagerField" />
        <altmember cref="T:System.Web.UI.WebControls.NumericPagerField" />
      </Docs>
    </Member>
    <Member MemberName="RecreateChildControls">
      <MemberSignature Language="C#" Value="protected virtual void RecreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RecreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.RecreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子のコントロールを作成、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールをデザイン時です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.RecreateChildControls%2A> メソッドの実装は、 <xref:System.Web.UI.WebControls.DataPager.System%23Web%23UI%23WebControls%23ICompositeControlDesignerAccessor%23RecreateChildControls%2A> インターフェイス メソッドです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">オブジェクトを受け取る、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コンテンツを制御します。</param>
        <summary>送信、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールの内容を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトで、ブラウザーに表示される内容を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.Render%2A> メソッドの内容を書き込む、 <xref:System.Web.UI.WebControls.DataPager> コントロールとその子コントロールでは、指定を使用して、ブラウザーを <xref:System.Web.UI.HtmlTextWriter> オブジェクトです。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML ブラウザーにコンテンツを表示する出力ストリームを表すオブジェクト。</param>
        <summary>Html のタグを開始、 <see cref="T:System.Web.UI.WebControls.DataPager" /> 指定したライターにコントロールできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataPager.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML ブラウザーにコンテンツを表示する出力ストリームを表すオブジェクト。</param>
        <summary>内容を表示、 <see cref="T:System.Web.UI.WebControls.DataPager" /> 指定したライターにコントロールできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.RenderContents%2A> メソッドの呼び出し、 <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> メソッドをその内容を表示します。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のプロパティの状態を保存、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロール、ポストバック間で保持する必要がありますが場合でも、 <see cref="P:System.Web.UI.Control.EnableViewState" /> にプロパティが設定されている <see langword="false" />します。</summary>
        <returns>現在のビュー状態を返す、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>変更を保存、 <see cref="T:System.Web.UI.WebControls.DataPager" /> サーバーにポストバックされた時間以降、ページに発生したコントロールのビューステート。</summary>
        <returns>返します。、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールの現在のビュー ステート。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビュー ステートは、サーバー コントロールのプロパティの値を累積したものです。 これらの値が自動的に、サーバー コントロールの配置 <xref:System.Web.UI.Control.ViewState%2A> インスタンスであるプロパティの <xref:System.Web.UI.StateBag> クラスです。 このプロパティの値は、このサーバー コントロールのライフ サイクルの保存状態の段階の後も、文字列オブジェクトを永続化します。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 ビューステートを保存すると、この文字列オブジェクトは、ページ内の非表示の要素に格納されている変数としてブラウザーに送信されます。 カスタム サーバー コントロールを作成するときに、このメソッドをオーバーライドして、サーバー コントロールを変更する効率を向上できます `ViewState` プロパティです。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetPageProperties">
      <MemberSignature Language="C#" Value="public virtual void SetPageProperties (int startRowIndex, int maximumRows, bool databind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPageProperties(int32 startRowIndex, int32 maximumRows, bool databind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRowIndex" Type="System.Int32" />
        <Parameter Name="maximumRows" Type="System.Int32" />
        <Parameter Name="databind" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startRowIndex">データのページの最初のレコードのインデックス。</param>
        <param name="maximumRows">データの 1 つのページ上の項目の最大数。</param>
        <param name="databind">
          <see langword="true" /> プロパティが設定されます。 後は、コントロールを再バインドするにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>ページに関連するプロパティを設定、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.SetPageProperties%2A> メソッドの新しい値を設定する、 <xref:System.Web.UI.WebControls.DataPager.StartRowIndex%2A> と <xref:System.Web.UI.WebControls.DataPager.MaximumRows%2A> プロパティです。 また、 <xref:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties%2A?displayProperty=fullName> に関連付けられているデータ バインド コントロールでのページに関連するプロパティを更新する方法です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連付けられているデータ バインド コントロールがない、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataPager.MaximumRows" />
        <altmember cref="P:System.Web.UI.WebControls.DataPager.StartRowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" />
        <altmember cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndex">
      <MemberSignature Language="C#" Value="public int StartRowIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartRowIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.StartRowIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データのページに表示される最初のレコードのインデックスを取得します。</summary>
        <value>データのページに表示される最初のレコードのインデックス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性の名前。</param>
        <summary>指定した名前の付いた属性値を取得、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <returns>属性の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.DataPager> のインスタンスが <xref:System.Web.UI.IAttributeAccessor> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataPager.Attributes" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">設定する属性名です。</param>
        <param name="value">属性の値。</param>
        <summary>属性を設定、 <see cref="T:System.Web.UI.WebControls.DataPager" /> 指定した名前と値を持つコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.DataPager> のインスタンスが <xref:System.Web.UI.IAttributeAccessor> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataPager.Attributes" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls">
      <MemberSignature Language="C#" Value="void ICompositeControlDesignerAccessor.RecreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子のコントロールを作成、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールをデザイン時です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.System%23Web%23UI%23WebControls%23ICompositeControlDesignerAccessor%23RecreateChildControls%2A> メソッドをデザイナーを使用する、 <xref:System.Web.UI.WebControls.DataPager> コントロールをデザイン時にコントロールの子コントロールを再作成します。  
  
 <xref:System.Web.UI.WebControls.DataPager.System%23Web%23UI%23WebControls%23ICompositeControlDesignerAccessor%23RecreateChildControls%2A> インターフェイス メソッドを呼び出す、 <xref:System.Web.UI.WebControls.DataPager.RecreateChildControls%2A> メソッドで、実際の実装が含まれているされ、コントロールの開発者によって拡張することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.RecreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示に使用する HTML 要素を取得、 <see cref="T:System.Web.UI.WebControls.DataPager" /> コントロールです。</summary>
        <value>常に <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.TagKey%2A> によって使用される HTML 要素を返します、 <xref:System.Web.UI.WebControls.DataPager.RenderBeginTag%2A> 適切なマークアップを記述する方法、 <xref:System.Web.UI.WebControls.DataPager> コントロールです。 このプロパティは、常に基本実装をオーバーライド <xref:System.Web.UI.HtmlTextWriterTag.Span?displayProperty=fullName>します。  
  
> [!NOTE]
>  このプロパティは、拡張するコントロールの開発者、主にための <xref:System.Web.UI.WebControls.DataPager> コントロールです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can override this property to specify which <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value to use for a derived control.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataPager.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられたデータ バインド コントロールで参照されている基になるデータ ソース オブジェクトから取得されるレコードの合計数を取得します。</summary>
        <value>基になるデータ ソース オブジェクトから取得されるレコードの合計数。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataPager.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートの変更を追跡、 <see cref="T:System.Web.UI.WebControls.DataPager" /> 制御、コントロールの保存できるように <see cref="T:System.Web.UI.StateBag" /> オブジェクトです。 このオブジェクト経由でアクセスできる、 <see cref="P:System.Web.UI.Control.ViewState" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.DataPager.TrackViewState%2A> の最後にメソッドが自動的に呼び出されます、 <xref:System.Web.UI.Control.Init> 内のイベント、 <xref:System.Web.UI.WebControls.DataPager> コントロールのライフ サイクルです。 このメソッドは警告に変更を監視する ASP.NET、 <xref:System.Web.UI.WebControls.DataPager> サーバー コントロールのビュー ステート。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.DataPager.SaveViewState" />
      </Docs>
    </Member>
  </Members>
</Type>