<Type Name="Style" FullName="System.Web.UI.WebControls.Style">
  <TypeSignature Language="C#" Value="public class Style : System.ComponentModel.Component, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Style extends System.ComponentModel.Component implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Style" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web サーバー コントロールのスタイルを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Style> クラスは、Web サーバー コントロールの外観を制御し、共通する外観を指定する複数の Web サーバー コントロールに適用できるプロパティをカプセル化します。 コントロールのフォントの色と背景色を設定して指定できます、 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> と <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> プロパティそれぞれします。 罫線を表示できるコントロールに制御できます罫線の幅、罫線のスタイル、および境界線の色を設定して、 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, 、<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, 、および <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> プロパティです。 使用して、Web サーバー コントロールのサイズを指定することも、 <xref:System.Web.UI.WebControls.WebControl.Height%2A> と <xref:System.Web.UI.WebControls.WebControl.Width%2A> プロパティです。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web Page Code Model](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Style.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.Height" />
    <altmember cref="P:System.Web.UI.WebControls.Style.Width" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定値を使用して <see cref="T:System.Web.UI.WebControls.Style" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.Style> クラスです。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.#ctor(System.Web.UI.StateBag)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">A <see cref="T:System.Web.UI.StateBag" /> スタイル情報を格納するための状態バッグを表します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.Style" /> クラスを指定した状態バッグの情報を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Web.UI.WebControls.Style> クラスを使用して、 <xref:System.Web.UI.StateBag?displayProperty=fullName> によって指定された、 `bag` パラメーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="public void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>HTML 属性およびスタイルをレンダリングする必要がある追加を指定した <see cref="T:System.Web.UI.HtmlTextWriter" />します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアント上の Web サーバー コントロールの属性およびスタイルをレンダリングする通常を呼び出す、 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> と <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> それぞれを挿入するメソッドの属性し、スタイルに個別に、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> 出力ストリーム。 このメソッドをプロセスを簡略化するには、すべての呼び出しをカプセル化、 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> と <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> のすべての属性と、Web サーバー コントロールに関連付けられたスタイル。 すべての属性およびスタイルは挿入、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> 、単一メソッド呼び出しの出力ストリーム。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="public virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebControl owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebControl owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="owner" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="owner">A <see cref="T:System.Web.UI.WebControls.WebControl" /> または <see cref="T:System.Web.UI.WebControls.WebControl" /> を Web サーバー コントロールを表す派生オブジェクトに関連付けられている、 <see cref="T:System.Web.UI.WebControls.Style" />です。</param>
        <summary>HTML 属性およびスタイルをレンダリングする必要がある追加を指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> Web サーバー コントロールとします。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアント上の Web サーバー コントロールの属性およびスタイルをレンダリングする通常を呼び出す、 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> と <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> それぞれを挿入するメソッドの属性し、スタイルに個別に、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> 出力ストリーム。 このメソッドをプロセスを簡略化するには、すべての呼び出しをカプセル化、 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> と <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> のすべての属性と、Web サーバー コントロールに関連付けられたスタイル。 すべての属性およびスタイルは挿入、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> 、単一メソッド呼び出しの出力ストリーム。 このメソッドは通常、適切な属性を挿入する派生クラスで、コントロールの開発者によってオーバーライドされておりにスタイルが設定、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> クラスの出力ストリーム。  
  
   
  
## 例  
 次の例から派生したクラスを作成する方法、 <xref:System.Web.UI.WebControls.WebControl> クラスです。 基本実装、 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> メソッドをオーバーライドして、派生クラスに適切な属性を追加、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=fullName> 出力ストリーム。  
  
 [!code-csharp[WebControlAddAttributesToRender\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サーバー コントロールの背景色を設定します。</summary>
        <value>コントロールの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.BackColor%2A> プロパティを Web サーバー コントロールの背景色を指定します。 使用してこのプロパティを設定、 <xref:System.Drawing.Color?displayProperty=fullName> オブジェクトです。  
  
> [!NOTE]
>  このプロパティは、のみ特定のコントロールで表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>, 、<xref:System.Web.UI.WebControls.Panel>, 、<xref:System.Web.UI.WebControls.DataGrid>, 、<xref:System.Web.UI.WebControls.Calendar>, 、および <xref:System.Web.UI.WebControls.ValidationSummary> このプロパティを表示します。 でも機能は <xref:System.Web.UI.WebControls.CheckBoxList>, 、<xref:System.Web.UI.WebControls.RadioButtonList> と <xref:System.Web.UI.WebControls.DataList> 場合、 `RepeatLayout` プロパティは、 `RepeatLayout.Table`, 、および not `RepeatLayout.Flow`します。  
  
 一般に、その出力を制御するだけの `<table>` タグは、ほとんどのコントロールが HTML 4.0 でできる一方に、HTML 3.2 での背景色を表示できます。  
  
 としてレンダリングされるコントロールの `<span>` タグ \(を含む <xref:System.Web.UI.WebControls.Label>, すべて、検証コントロールおよびリスト コントロールと、その `RepeatLayout` プロパティに設定 `RepeatLayout.Flow`\)、Microsoft Internet Explorer 5 以降のバージョンでは、Microsoft Internet Explorer version 4 ではなく、このプロパティは機能します。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サーバー コントロールの境界線の色を設定します。</summary>
        <value>コントロールの境界線の色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.BorderColor%2A> プロパティを Web サーバー コントロールの境界線の色を指定します。 使用してこのプロパティを設定、 <xref:System.Drawing.Color?displayProperty=fullName> オブジェクトです。  
  
> [!NOTE]
>  このプロパティは、のみ特定のコントロールで表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>, 、<xref:System.Web.UI.WebControls.Panel>, 、<xref:System.Web.UI.WebControls.DataGrid>, 、<xref:System.Web.UI.WebControls.Calendar>, 、および <xref:System.Web.UI.WebControls.ValidationSummary> このプロパティを表示します。 でも機能は <xref:System.Web.UI.WebControls.CheckBoxList>, 、<xref:System.Web.UI.WebControls.RadioButtonList>, 、および <xref:System.Web.UI.WebControls.DataList> 場合、 `RepeatLayout` プロパティは、 `RepeatLayout.Table` および not `RepeatLayout.Flow`します。 ただし、これは、 `bordercolor` 属性には、すべてのブラウザーで動作しない可能性があります。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サーバー コントロールの境界線スタイルを設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.BorderStyle" /> 列挙値のいずれか。 既定値は、<see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.BorderStyle%2A> プロパティを Web サーバー コントロールの境界線のスタイルを指定します。 このプロパティのいずれかを使用して、 <xref:System.Web.UI.WebControls.BorderStyle> 列挙値。 次の表では、指定できる値を示します。  
  
|枠線の種類|説明|  
|-----------|--------|  
|`NotSet`|罫線のスタイルが設定されていません。|  
|`None`|境界線なし|  
|`Dotted`|点線の枠線。|  
|`Dashed`|破線の罫線。|  
|`Solid`|実線の境界線。|  
|`Double`|二重実線の境界線。|  
|`Groove`|浮き彫り罫線の外観のくぼんだ罫線。|  
|`Ridge`|浮き出し罫線の外観のための罫線。|  
|`Inset`|浮き彫りコントロールの外観の埋め込み罫線。|  
|`Outset`|発生したコントロールの外観の最初の境界線。|  
  
> [!NOTE]
>  一部のブラウザーでは、このプロパティは表示はされません。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値は、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.BorderStyle" /> 列挙値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サーバー コントロールの境界線の幅を設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Unit" /> Web サーバー コントロールの境界線の幅を表します。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, 、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.BorderWidth%2A> プロパティ コントロールの境界線の幅を指定します。  
  
> [!NOTE]
>  このプロパティは、すべての Web サーバー コントロールでは機能できません。 など、テーブルとして表示するコントロールにのみ適用される <xref:System.Web.UI.WebControls.Table> と <xref:System.Web.UI.WebControls.DataGrid>です。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.Unit> オブジェクトです。 場合、 <xref:System.Web.UI.WebControls.Unit.Value%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Unit> 、負の値を含む、例外がスローされます。  
  
> [!NOTE]
>  罫線の幅は、Microsoft Internet Explorer バージョン 5 より前のブラウザーのピクセル単位でのみ表現できます。 すべてのユニットの種類は、Microsoft Internet Explorer 5 以降のバージョンでサポートされます。 詳細については、特定のコントロールを参照してください。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された境界線の幅は、負の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.CopyFrom(System.Web.UI.WebControls.Style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> をコピーするスタイルを表します。</param>
        <summary>指定したスタイルのプロパティを複製 <see cref="T:System.Web.UI.WebControls.Style" /> のインスタンスに、 <see cref="T:System.Web.UI.WebControls.Style" /> からこのメソッドが呼び出されるクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.CopyFrom%2A> メソッドの指定したスタイルのプロパティを複製する <xref:System.Web.UI.WebControls.Style> のインスタンスに、 <xref:System.Web.UI.WebControls.Style> からこのメソッドが呼び出されるクラス。  
  
 使用して、スタイルが登録される <xref:System.Web.UI.IStyleSheet.RegisterStyle%2A>, を使用して、コピーおよび <xref:System.Web.UI.WebControls.Style.CopyFrom%28System.Web.UI.WebControls.Style%29?displayProperty=fullName>, だけ、 <xref:System.Web.UI.WebControls.Style.CssClass%2A> プロパティが個々 のすべてのプロパティのエクスポート先にコピーします。 これには、コピー先のスタイルのプロパティを点検しするか予期しない結果につながります可能性があります。 使用している場合など <xref:System.Web.UI.WebControls.FontInfo.CopyFrom%28System.Web.UI.WebControls.FontInfo%29?displayProperty=fullName> フォント情報のコピー、 <xref:System.Web.UI.WebControls.Style.Font%2A> のプロパティ、 <xref:System.Web.UI.WebControls.Style> 登録されている、スタイル、フォントの個々 の設定は得られません。  
  
> [!CAUTION]
>  現在のインスタンスに設定されているものも含め、すべてのプロパティ、 <xref:System.Web.UI.WebControls.Style> クラス、関連付けられているプロパティに置き換えられる、 <xref:System.Web.UI.WebControls.Style> によって指定された、 `s` パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" /> 設定されています。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Style.MergeWith(System.Web.UI.WebControls.Style)" />
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクライアントの Web サーバー コントロールによって表示されるカスケード スタイル シート \(CSS\) クラスを設定します。</summary>
        <value>CSS クラスは、クライアント上の Web サーバー コントロールによって表示されます。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.CssClass%2A> プロパティに対するクライアントの Web サーバー コントロールをレンダリングする CSS クラスを指定します。 このプロパティは、すべてのコントロールのブラウザーで表示されます。 常としてレンダリングされます、 `class` 、ブラウザーに関係なく、属性です。  
  
 たとえば、次の Web サーバー コントロール宣言があるとします。  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 Web サーバー コントロールの宣言は、以前のクライアントでは、次の HTML がレンダリングされます。  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
> [!NOTE]
>  CSS の設定をサポートしていないブラウザーで、 <xref:System.Web.UI.WebControls.Style.CssClass%2A> プロパティには効果はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillStyleAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FillStyleAttributes (System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FillStyleAttributes(class System.Web.UI.CssStyleCollection attributes, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.FillStyleAttributes(System.Web.UI.CssStyleCollection,System.Web.UI.IUrlResolutionService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Web.UI.CssStyleCollection" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="attributes">
          <see cref="T:System.Web.UI.CssStyleCollection" /> スタイルのプロパティを追加するオブジェクト。</param>
        <param name="urlResolver">A <see cref="T:System.Web.UI.IUrlResolutionService" /> \-現在の場所 \(URL\) のコンテキスト情報を含むオブジェクトを実装します。</param>
        <summary>指定されたオブジェクトのスタイル プロパティを追加、 <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.FillStyleAttributes%2A> を指定したオブジェクトのスタイル プロパティを追加するメソッドを <xref:System.Web.UI.CssStyleCollection?displayProperty=fullName> オブジェクトです。 実装する必要が指定したオブジェクト <xref:System.Web.UI.IUrlResolutionService?displayProperty=fullName>します。 すべてのクラスから派生した <xref:System.Web.UI.Control> 実装 <xref:System.Web.UI.IUrlResolutionService?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <altmember cref="T:System.Web.UI.IUrlResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールに関連付けられているフォントのプロパティを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.FontInfo" /> Web サーバー コントロールのフォントのプロパティを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.Font%2A> プロパティを Web サーバー コントロールのフォント プロパティを指定します。 このプロパティが含まれていますサブプロパティ アクセス可能なには宣言の形式で `Property-Subproperty` \(たとえば `Font-Bold`\) の形式でプログラムを使用して、または `Property.Subproperty` \(たとえば `Font.Bold`\)。  
  
 1 つを除くすべてのサブプロパティは、Microsoft Internet Explorer のすべてのコントロール、version 4 より前のブラウザーで表示されます。 : <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, 、<xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, 、<xref:System.Web.UI.WebControls.FontInfo.Name%2A>, 、<xref:System.Web.UI.WebControls.FontInfo.Names%2A>, 、<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, 、<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, 、および <xref:System.Web.UI.WebControls.FontInfo.Size%2A> \(フォント サイズはなど、名前付きのみが、 `Small`, 、`Smaller`, と続きますは動作\)。  
  
> [!NOTE]
>  これらサブプロパティは、Microsoft Internet Explorer version 4 より前のブラウザーでレンダリング、レンダリングされる HTML はブラウザーで違いは。 スタイル属性としてレンダリングでは、代わりにこれらのサブプロパティとしてレンダリングされます、HTML 要素など `<b>` と `<font>`です。  
  
 一部のブラウザーに表示されない 1 つのサブプロパティが <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>です。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サーバー コントロールの前景色 \(通常は、テキストの色\) を設定します。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> コントロールの前景色を表します。 既定値は、<see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.ForeColor%2A> プロパティを Web サーバー コントロールの前景色を指定します。 通常、前景色はテキストの色を表します。 このプロパティはブラウザーに表示 Microsoft Internet Explorer のすべてのコントロール、version 4 より前の手順を除く、 <xref:System.Web.UI.WebControls.Image>, 、<xref:System.Web.UI.WebControls.AdRotator>, 、<xref:System.Web.UI.WebControls.HyperLink> と <xref:System.Web.UI.WebControls.LinkButton>です。  
  
> [!NOTE]
>  スタイルをサポートしているブラウザーの場合は、このプロパティは、FONT 要素としてレンダリングされます。  
  
   
  
## 例  
 この例では、使用して、 <xref:System.Web.UI.WebControls.Style> 一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかのたびに、 <xref:System.Web.UI.WebControls.Style> プロパティの値を変更、各コントロールを呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> メソッドです。 含まれているすべてのコントロールがここに示すすべてのプロパティをサポートすることに注意してください。 コントロールが、特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/ja-jp/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleAttributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection GetStyleAttributes (System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.CssStyleCollection GetStyleAttributes(class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.GetStyleAttributes(System.Web.UI.IUrlResolutionService)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="urlResolver">A <see cref="T:System.Web.UI.IUrlResolutionService" />\-現在の場所 \(URL\) のコンテキスト情報を含むオブジェクトを実装します。</param>
        <summary>取得、 <see cref="T:System.Web.UI.CssStyleCollection" /> 、指定されたオブジェクト <see cref="T:System.Web.UI.IUrlResolutionService" />\-オブジェクトを実装します。</summary>
        <returns>
          <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.GetStyleAttributes%2A> を取得するメソッド、 <xref:System.Web.UI.CssStyleCollection?displayProperty=fullName> 、指定したオブジェクト <xref:System.Web.UI.IUrlResolutionService?displayProperty=fullName>\-オブジェクトを実装します。 すべてのクラスから派生した <xref:System.Web.UI.Control> 実装 <xref:System.Web.UI.IUrlResolutionService?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <altmember cref="T:System.Web.UI.IUrlResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web サーバー コントロールの高さを設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Unit" /> Web サーバー コントロールの高さを表します。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.Height%2A> プロパティを指定するか、Web サーバー コントロールの高さを決定します。 このプロパティは、 <xref:System.Web.UI.WebControls.Unit>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.Unit.Value" /> のプロパティ、 <see cref="T:System.Web.UI.WebControls.Unit" /> が負の値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保護対象のプロパティです。 任意のスタイル要素を状態バックに定義されているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 状態バッグに定義されている要素のスタイルがあるない場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>任意のスタイル要素を状態バックに定義されているかどうかを示す値を返します。</summary>
        <value>
          <see langword="true" /> 状態バッグで定義されているスタイルの要素がある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.IsTrackingViewState%2A> 状態バックに任意の要素のスタイルが定義されているかどうかを決定するプロパティです。 このプロパティは、主に、コントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">以前に保存された状態。</param>
        <summary>以前に保存された状態を読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWith">
      <MemberSignature Language="C#" Value="public virtual void MergeWith (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWith(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.MergeWith(System.Web.UI.WebControls.Style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">A <see cref="T:System.Web.UI.WebControls.Style" /> を結合するスタイルを表します。</param>
        <summary>指定したスタイルのプロパティを組み合わせて <see cref="T:System.Web.UI.WebControls.Style" /> のインスタンスと、 <see cref="T:System.Web.UI.WebControls.Style" /> からこのメソッドが呼び出されるクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.MergeWith%2A> メソッドの指定したスタイルのプロパティを結合する <xref:System.Web.UI.WebControls.Style> のインスタンスと、 <xref:System.Web.UI.WebControls.Style> からこのメソッドが呼び出されるクラス。  
  
> [!CAUTION]
>  対応するプロパティ、スタイル クラスの現在のインスタンスに既に設定されているものを除き、すべてのプロパティに置き換えられる、 <xref:System.Web.UI.WebControls.Style> によって指定された、 `s` パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" /> 設定されています。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Style.CopyFrom(System.Web.UI.WebControls.Style)" />
      </Docs>
    </Member>
    <Member MemberName="RegisteredCssClass">
      <MemberSignature Language="C#" Value="public string RegisteredCssClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegisteredCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.RegisteredCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに登録されているカスケード スタイル シート \(CSS\) のクラスを取得します。</summary>
        <value>使用する現在のインスタンスをページに登録された CSS クラス名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> プロパティをコントロールに登録されている CSS クラスを取得します。  
  
 スタイルが使用の現在のページに登録されている、 <xref:System.Web.UI.IStyleSheet.RegisterStyle%2A> メソッドで、検索、 `<head runat="server"``>` 要素によって表される、埋め込みスタイル シート内の現在のインスタンスのプロパティの配置場所\] ページで、 `<style>` に関連付けられたコントロール固有のクラス名の下の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態バッグから定義されたスタイル要素を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、状態バッグから定義されたスタイル要素を削除できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保護されたメソッド。 後に変更された状態を保存、 <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> メソッドが呼び出されました。</summary>
        <returns>保存済みの状態を表すオブジェクト。 既定値は、<see langword="null" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBit">
      <MemberSignature Language="C#" Value="protected virtual void SetBit (int bit);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetBit(int32 bit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SetBit(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit">ビットマスク値です。</param>
        <summary>保護された内部メソッド。 状態バックに保存されているスタイル プロパティを示す内部ビットマスク フィールドを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SetDirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マーク、 <see cref="T:System.Web.UI.WebControls.Style" /> 状態の状態がビューに記録できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.Style.SetDirty%2A> メソッドが直接呼び出される、 <xref:System.Web.UI.WebControls.StyleCollection.SetDirtyObject%2A> のメソッド、 <xref:System.Web.UI.WebControls.StyleCollection>, 、マークする、 <xref:System.Web.UI.WebControls.Style> オブジェクトの状態をビューステートに記録します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー コントロールがビュー ステートの変更を追跡しているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ビュー状態バッグで定義されているスタイルの要素がある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">以前に保存された状態。</param>
        <summary>以前に保存された状態を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態の変更を含むオブジェクトを返します。</summary>
        <returns>保存済みの状態を表すオブジェクト。 既定値は、<see langword="null" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態変化の追跡を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保護されたメソッド。 コントロールの状態の変更を追跡するための開始を示します。 追跡が開始されてから加えられた変更が追跡され、コントロールのビュー ステートの一部として保存します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイル要素を保持している状態バッグを取得します。</summary>
        <value>これで定義されているスタイル要素を保持する状態バッグです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 状態バッグのプライベート フィールド名は大文字小文字を区別します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの幅を取得または設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Unit" /> Web サーバー コントロールの幅を表します。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.Style.Width%2A> プロパティを指定するか、Web サーバー コントロールの幅を決定します。 このプロパティは、 <xref:System.Web.UI.WebControls.Unit>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.Unit.Value" /> のプロパティ、 <see cref="T:System.Web.UI.WebControls.Unit" /> が負の値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttributesToRender">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>HTML 属性およびスタイルをレンダリングする必要がある追加を指定した <see cref="T:System.Web.UI.HtmlTextWriter" />します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Style" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>