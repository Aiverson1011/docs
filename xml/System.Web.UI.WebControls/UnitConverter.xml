<Type Name="UnitConverter" FullName="System.Web.UI.WebControls.UnitConverter">
  <TypeSignature Language="C#" Value="public class UnitConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UnitConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.UnitConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>変換、 <see cref="T:System.Web.UI.WebControls.Unit" /> オブジェクトを別の型から別のデータ型のオブジェクトを <see cref="T:System.Web.UI.WebControls.Unit" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.UnitConverter> に変換するクラス、 <xref:System.Web.UI.WebControls.Unit> 別のデータ型のオブジェクトにします。 使用することも、 <xref:System.Web.UI.WebControls.UnitConverter> に別のデータ型のオブジェクトに変換するクラス、 <xref:System.Web.UI.WebControls.Unit>です。  
  
> [!NOTE]
>  このコンバーターは、文字列のみを変換できる <xref:System.Web.UI.WebControls.Unit> と <xref:System.Web.UI.WebControls.Unit> 文字列にします。  
  
> [!CAUTION]
>  型コンバーターを直接アクセスする必要があることはありません。 代わりに、適切なコンバーターを使用して <xref:System.ComponentModel.TypeDescriptor?displayProperty=fullName>します。 詳細については、例を参照してください、 <xref:System.ComponentModel.TypeConverter?displayProperty=fullName> 基本クラスです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Unit" />
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnitConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.UnitConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> インスタンスに変換するオブジェクトのコンテキストを指定します。</param>
        <param name="sourceType">ソースの種類。</param>
        <summary>単位コンバーターが、指定した型から変換できるかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> 場合は、ソース型に変換することができます。それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 変換対象のオブジェクトのコンテキストを示します。</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> に変換するデータ型を表します。</param>
        <summary>コンバーターが変換できるかどうかを示す値を返す、 <see cref="T:System.Web.UI.WebControls.Unit" /> オブジェクトを指定した型にします。</summary>
        <returns>
          <see langword="true" /> コンバーターが変換をサポートしているかどうか、 <see cref="T:System.Web.UI.WebControls.Unit" /> オブジェクトを移行先の型です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 変換対象のオブジェクトのコンテキストを示すインスタンスです。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> 言語やカレンダー システムなど、カルチャに関する情報を表すオブジェクト。 このパラメーターは、このメソッドでは使用されません。 このメソッドの将来のバージョン用に予約されています。 渡すことができます <see langword="null" /> このパラメーターにします。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <summary>指定したコンテキスト、オブジェクト、および引数のリストからの型変換を実行します。</summary>
        <returns>変換に起因するオブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 変換対象のオブジェクトのコンテキストを示すインスタンスです。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> 言語やカレンダー システムなど、カルチャに関する情報を表すオブジェクト。 このパラメーターは、このメソッドでは使用されません。 このメソッドの将来のバージョン用に予約されています。 渡すことができます <see langword="null" /> このパラメーターにします。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <param name="destinationType">変換後の型。</param>
        <summary>コンテキスト、オブジェクト、および引数リストを指定指定した型への型変換を実行します。</summary>
        <returns>変換に起因するオブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>