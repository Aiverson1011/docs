<Type Name="ExpressionsCollectionConverter" FullName="System.Web.UI.Design.ExpressionsCollectionConverter">
  <TypeSignature Language="C#" Value="public class ExpressionsCollectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionsCollectionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionsCollectionConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>式バインドのコレクションの型コンバーターを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ExpressionsCollectionConverter> クラスの変換、 <xref:System.Web.UI.ExpressionBindingCollection> デザイン時にグリッドのプロパティを編集して、文字列に常として表示される、空の文字列 \(""\) です。  
  
 デザイナー ホストなど [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], を使用して、 <xref:System.Web.Compilation.ExpressionBuilder> と <xref:System.Web.UI.Design.ExpressionEditor> クラスの実装、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor> と <xref:System.Web.UI.Design.ExpressionsCollectionConverter> クラスをデザイン時にコントロールのプロパティの式のバインドを設定して、 <xref:System.Web.UI.Design.ControlPersister> 実行時の式を永続化します。 式の文字列は、ローカライズ可能なリソース、アプリケーション設定、接続文字列、またはカスタム式の型を参照します。 式の文字列では、デザイン時にコントロール プロパティにバインドされ、プロパティの値を確認する実行時に使用されます。  
  
> [!NOTE]
>  型コンバーターを直接アクセスする必要があることはありません。 この実装の <xref:System.ComponentModel.TypeConverter> のみで使用するためのものでは、 <xref:System.Web.UI.ExpressionBindingCollection> デザイン時にオブジェクトです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionsCollectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  型コンバーターを直接アクセスする必要があることはありません。 この実装の <xref:System.ComponentModel.TypeConverter> のみで使用するためのものでは、 <xref:System.Web.UI.ExpressionBindingCollection> デザイン時にオブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> をコンポーネントやコントロールのコレクションをバインドする式を示すオブジェクトに属しています。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> 追加のカルチャ情報を提供するために使用できるオブジェクト。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <param name="destinationType">変換後の型。</param>
        <summary>式のバインディング コレクションを指定した型に変換します。</summary>
        <returns>場合 <paramref name="destinationType" /> の種類はありません <see cref="T:System.String" />, 、型の変換によって生成されたオブジェクトそれ以外の場合 <paramref name="destinationType" /> 文字列であり、空の文字列 \(""\) です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  型コンバーターを直接アクセスする必要があることはありません。 この実装の <xref:System.ComponentModel.TypeConverter> のみで使用するためのものでは、 <xref:System.Web.UI.ExpressionBindingCollection> デザイン時にオブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
      </Docs>
    </Member>
  </Members>
</Type>