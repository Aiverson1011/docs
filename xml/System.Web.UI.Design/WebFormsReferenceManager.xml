<Type Name="WebFormsReferenceManager" FullName="System.Web.UI.Design.WebFormsReferenceManager">
  <TypeSignature Language="C#" Value="public abstract class WebFormsReferenceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebFormsReferenceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.WebFormsReferenceManager" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>型、ディレクティブ、および現在の Web プロジェクトのドキュメント内のコントロールにアクセスするためには、基本クラスを提供します。 このクラスは継承する必要があります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebFormsReferenceManager> 基本クラスは、型、ディレクティブ、および Web プロジェクトのドキュメントで定義されるユーザー コントロールにアクセスできるようにするデザイナー ホストによって実装されます。 コントロール デザイナー クラスを使用して、 <xref:System.Web.UI.Design.WebFormsReferenceManager> 定義と、現在のドキュメントにアクセスし、現在のドキュメントに新しいタグ プレフィックスを追加します。  
  
 アクセスする、 <xref:System.Web.UI.Design.WebFormsReferenceManager> を通じてデザイナー ホストによって提供されるサービス、 <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> のプロパティ、 <xref:System.Web.UI.Design.WebFormsRootDesigner> 実装します。<xref:System.Web.UI.Design.WebFormsRootDesigner> 実装は、2 つの方法でアクセスできます。  
  
-   派生するクラス <xref:System.Web.UI.Design.ControlDesigner> 使える、 <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> にアクセスするプロパティ、 <xref:System.Web.UI.Design.WebFormsRootDesigner> デザイナー ホストによって提供される実装です。<xref:System.Web.UI.Design.WebFormsReferenceManager> を通じて実装が提供される、 <xref:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager%2A> の <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> プロパティです。  
  
-   その他のデザイナー クラスにアクセスできます、 <xref:System.Web.UI.Design.WebFormsRootDesigner> 最初に取得することによって実装、 <xref:System.ComponentModel.Design.IDesignerHost> デザイナー コンポーネントの実装をサービス <xref:System.ComponentModel.Component.Site%2A>, を呼び出すことと、 <xref:System.ComponentModel.Design.IDesignerHost.GetDesigner%2A> デザイナーのホストを使用して、メソッド <xref:System.ComponentModel.Design.IDesignerHost.RootComponent%2A> プロパティです。  
  
    > [!NOTE]
    >  <xref:System.Web.UI.Design.WebFormsReferenceManager> 廃止されたインターフェイスが置き換えられます <xref:System.Web.UI.Design.IWebFormReferenceManager>します。 以前のデザイナー ホストをサポートすることがあります、 <xref:System.Web.UI.Design.IWebFormReferenceManager> インターフェイスの実装です。 確認、 <xref:System.Web.UI.Design.WebFormsRootDesigner> と <xref:System.Web.UI.Design.WebFormsReferenceManager> デザイナー ホストによって提供される実装されない `null` を実装して、デザイナーのホスト、 <xref:System.Web.UI.Design.WebFormsRootDesigner> と <xref:System.Web.UI.Design.WebFormsReferenceManager> クラスです。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
    <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebFormsReferenceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebFormsReferenceManager> が抽象クラスのインスタンスを作成することはできません <xref:System.Web.UI.Design.WebFormsReferenceManager> コンス トラクターを直接使用します。  
  
 派生する場合、 <xref:System.Web.UI.Design.WebFormsReferenceManager> クラス、カスタムの初期化アクション参照マネージャーの実装の実装をコンス トラクターをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetRegisterDirectives">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection GetRegisterDirectives ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRegisterDirectives() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のプロジェクト ドキュメントの register ディレクティブを取得します。</summary>
        <returns>現在のドキュメントで定義されているレジスタ ディレクティブを表す文字列のコレクション。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string GetTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">オブジェクトの型。</param>
        <summary>指定したオブジェクトの種類のタグ プリフィックスを取得します。</summary>
        <returns>場合に、指定したオブジェクトの種類のタグ プリフィックスが見つかりました。それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public abstract Type GetType (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">取得する型のタグ プリフィックス。</param>
        <param name="tagName">取得する型のタグ名。</param>
        <summary>指定したタグ プレフィックスおよびタグ名を持つオブジェクトの種類を取得します。</summary>
        <returns>
          <see cref="T:System.Type" /> 、指定したタグ プレフィックスと名前が見つからない場合は、それ以外の場合に、オブジェクトの <see langword="null" />です。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetUserControlPath">
      <MemberSignature Language="C#" Value="public abstract string GetUserControlPath (string tagPrefix, string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetUserControlPath(string tagPrefix, string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagPrefix" Type="System.String" />
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagPrefix">取得するユーザー コントロールのタグ プリフィックス。</param>
        <param name="tagName">取得するユーザー コントロールのタグ名。</param>
        <summary>指定したタグ プレフィックスおよびタグ名を持つユーザー コントロールの相対 URL パスを取得します。</summary>
        <returns>見つかった場合は、指定されたユーザー コントロールの相対 URL パスを表す文字列それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath%2A> 現在のドキュメント内でユーザー コントロールの register ディレクティブを検索するタグ プレフィックスと名前を使用し、返します、 `src` register ディレクティブで定義された値の属性です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UserControl" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTagPrefix">
      <MemberSignature Language="C#" Value="public abstract string RegisterTagPrefix (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string RegisterTagPrefix(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType">現在のドキュメント内のタグ プレフィックスを追加する型。</param>
        <summary>指定した型のタグ プレフィックスを追加します。</summary>
        <returns>タグ プレフィックス文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 タグ プレフィックスが既に存在する場合は、新しい register ディレクティブは追加されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
        <altmember cref="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager" />
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
  </Members>
</Type>