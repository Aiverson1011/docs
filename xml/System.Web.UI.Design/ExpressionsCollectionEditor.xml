<Type Name="ExpressionsCollectionEditor" FullName="System.Web.UI.Design.ExpressionsCollectionEditor">
  <TypeSignature Language="C#" Value="public class ExpressionsCollectionEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExpressionsCollectionEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionsCollectionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>選択してデザイン時にコレクションをバインドする式を編集するには、ユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor> クラスは、 <xref:System.Drawing.Design.UITypeEditor> オブジェクトを選択して、式のバインディングのコレクションを編集、デザイン時に使用できるし、式をコントロール プロパティに割り当てるです。  
  
 デザイナー ホストなど [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], を使用して、 <xref:System.Web.Compilation.ExpressionBuilder> と <xref:System.Web.UI.Design.ExpressionEditor> クラスの実装、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor> と <xref:System.Web.UI.Design.ExpressionsCollectionConverter> クラスをデザイン時にコントロールのプロパティの式のバインドを設定して、 <xref:System.Web.UI.Design.ControlPersister> 実行時の式を永続化するクラス。 式の文字列は、ローカライズ可能なリソース、アプリケーション設定、接続文字列、またはカスタム式の型を参照します。 式の文字列では、デザイン時にコントロール プロパティにバインドされ、プロパティの値を確認する実行時に使用されます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Design.UITypeEditor" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.ComponentModel.EditorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionsCollectionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionEditor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.ExpressionsCollectionEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.ComponentModel.EditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 関連付けられたコントロールなどの追加のコンテキスト情報を取得するために使用するオブジェクト。</param>
        <param name="provider">使用される編集サービスできるを取得するサービス プロバイダー オブジェクト。</param>
        <param name="value">編集中のオブジェクトのインスタンス。</param>
        <summary>指定したサービス プロバイダーおよびコンテキストと指定したオブジェクトの値を編集します。</summary>
        <returns>
          <see cref="T:System.Web.UI.ExpressionBindingCollection" /> 、選択した式を含むオブジェクトそれ以外の場合、式が選択されていない場合、 <paramref name="value" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue%2A> メソッドは、ユーザー インターフェイスを編集するため、起動、 `value` オブジェクトです。 デザイナー ホストの呼び出し、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue%2A> このエディターに関連付けられているメソッド、プロパティの値を編集しようとします。 入力のサービス プロバイダーは、編集するすべてのサービス内での取得に使用される、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue%2A>です。  
  
 デザイナー ホストなど [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], を使用して、 <xref:System.Web.Compilation.ExpressionBuilder> と <xref:System.Web.UI.Design.ExpressionEditor> クラスの実装、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor> と <xref:System.Web.UI.Design.ExpressionsCollectionConverter> クラスをデザイン時にコントロールのプロパティの式のバインドを設定して、 <xref:System.Web.UI.Design.ControlPersister> 実行時の式を永続化するクラス。 式の文字列は、ローカライズ可能なリソース、アプリケーション設定、接続文字列、またはカスタム式の型を参照します。 式の文字列では、デザイン時にコントロール プロパティにバインドされ、プロパティの値を確認する実行時に使用されます。  
  
 ユーザーが、コレクションをバインドする式を変更することがなく、ユーザー インターフェイスを取り消した場合、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue%2A> メソッドは、入力を返す `value` パラメーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle" />
        <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
        <altmember cref="T:System.Web.UI.ExpressionBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 追加のコンテキスト情報を取得するために使用できるオブジェクト。</param>
        <summary>指定したコンテキストに対してこのエディターに関連付けられている編集スタイルを取得します。</summary>
        <returns>
          <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> 編集を示す列挙値の指定されたユーザー インターフェイスのスタイルを設定します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle%2A> メソッドが返される、 <xref:System.Drawing.Design.UITypeEditorEditStyle.Modal> 既定値です。  
  
 場合 <xref:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle%2A> は、指定したコンテキストではサポートされていません、 <xref:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle%2A> 返します <xref:System.Drawing.Design.UITypeEditorEditStyle.None>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue" />
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
      </Docs>
    </Member>
  </Members>
</Type>