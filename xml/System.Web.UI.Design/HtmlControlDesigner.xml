<Type Name="HtmlControlDesigner" FullName="System.Web.UI.Design.HtmlControlDesigner">
  <TypeSignature Language="C#" Value="public class HtmlControlDesigner : System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlControlDesigner extends System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.ComponentDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET サーバー コントロールのデザイン時の基本的な機能を提供します。</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner" />
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Behavior">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.IHtmlControlDesignerBehavior Behavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.IHtmlControlDesignerBehavior Behavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.HtmlControlDesigner.Behavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ControlDesigner.Tag. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IHtmlControlDesignerBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデザイナーに関連付けられている DHTML 動作を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> 、デザイナーに関連付けられています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.HtmlControlDesigner.Behavior%2A> は互換性のために残されています。 使用して、 <xref:System.Web.UI.Design.IControlDesignerTag.SetAttribute%2A> と <xref:System.Web.UI.Design.IControlDesignerTag.GetAttribute%2A> のメソッド、 <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> スタイルにプロパティをマップするプロパティです。 使用して、 <xref:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes%2A> メソッドを <xref:System.Web.UI.Design.ContainerControlDesigner> クラスをデザイン時に、コントロールのスタイルを設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
        <altmember cref="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes" />
        <altmember cref="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のコントロールのデータ バインディングのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.DataBindingCollection" /> 現在のコントロールのデータ バインディングを格納します。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElement">
      <MemberSignature Language="C#" Value="protected object DesignTimeElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DesignTimeElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Error: This property can no longer be referenced, and is included to support existing compiled applications. The design-time element may not always provide access to the element in the markup. There are alternate methods on WebFormsRootDesigner for handling client script and controls. http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているコントロールを表すデザイン時のオブジェクトを取得、 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> デザイン サーフェイス上のオブジェクト。</summary>
        <value>デザイン時のオブジェクトに関連付けられているコントロールを表す、 <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement%2A> プロパティが関連付けられているコントロールを表すデザイン時のオブジェクトを取得する、デザイナーによって使用、 <xref:System.Web.UI.Design.HtmlControlDesigner> デザイン サーフェイス上のオブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> オブジェクトによって使用されているアンマネージ リソースを解放します。オプションでマネージ リソースも解放できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the <xref:System.Object.Finalize%2A> method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. <xref:System.Object.Finalize%2A> invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is **languageKeyword tag is not supported!!!!**  
, this method releases all resources held by any managed objects that this <xref:System.Web.UI.Design.HtmlControlDesigner> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.ExpressionBindingCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ExpressionBindingCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ExpressionBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイン時に、現在のコントロールの式のバインドを取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.ExpressionBindingCollection" /> を含む式の文字列が現在のコントロールでのプロパティを設定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 デザイン ホストなど [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], を使用して、 <xref:System.Web.Compilation.ExpressionBuilder> クラスに、 <xref:System.Web.UI.Design.ExpressionEditor> クラスに、 <xref:System.Web.UI.Design.ExpressionEditorSheet> をデザイン時にコントロールのプロパティの式を設定します。 式の文字列は、ローカライズ可能なリソース、アプリケーション設定、接続文字列、またはカスタム式の型を参照します。  
  
 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> コレクションに含まれる、 <xref:System.Web.UI.ExpressionBinding> 各コントロールのプロパティを持つ、関連する式の文字列の要素。 各 <xref:System.Web.UI.ExpressionBinding.ExpressionPrefix%2A> 要素ごとにプロパティが関連付けられている式ビルダーの実装を示します。 式の文字列が解析され、それに関連する評価 <xref:System.Web.Compilation.ExpressionBuilder> を実行時にコントロールのプロパティ値を決定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ExpressionBindingCollection" />
        <altmember cref="T:System.Web.UI.ExpressionBinding" />
        <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">設計のためのコントロール要素。</param>
        <summary>デザイナーを初期化し、デザイン用のコンポーネントを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> メソッドは、デザイナーを初期化するために、デザイナー ホストによって呼び出される必要があります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>During initialization, use the <see cref="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)" /> and <see cref="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)" /> methods on the <see cref="P:System.Web.UI.Design.ControlDesigner.Tag" /> property to map properties to styles.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="OnBehaviorAttached">
      <MemberSignature Language="C#" Value="protected virtual void OnBehaviorAttached ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBehaviorAttached() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ControlDesigner.Tag. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>動作は、要素に関連付けられたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached%2A> メソッドは今後使用しません。 使用して、 <xref:System.Web.UI.Design.IControlDesignerTag.SetAttribute%2A> と <xref:System.Web.UI.Design.IControlDesignerTag.GetAttribute%2A> のメソッド、 <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> スタイルにプロパティをマップするプロパティです。 使用して、 <xref:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes%2A> メソッドを <xref:System.Web.UI.Design.ContainerControlDesigner> クラスをデザイン時に、コントロールのスタイルを設定します。 オーバーライド、 <xref:System.Web.UI.Design.HtmlControlDesigner.Initialize%2A> デザイン時に、コントロールの初期のスタイルを操作するメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached" /> method can be overridden and implemented to perform additional processing when a behavior is attached to the designer.</para>
        </block>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
        <altmember cref="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Behavior" />
        <altmember cref="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      </Docs>
    </Member>
    <Member MemberName="OnBehaviorDetaching">
      <MemberSignature Language="C#" Value="protected virtual void OnBehaviorDetaching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBehaviorDetaching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is ControlDesigner.Tag. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>動作の要素から関連付けを解除すると呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching%2A> メソッドは今後使用しません。 使用して、 <xref:System.Web.UI.Design.IControlDesignerTag.SetAttribute%2A> と <xref:System.Web.UI.Design.IControlDesignerTag.GetAttribute%2A> のメソッド、 <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> スタイルにプロパティをマップするプロパティです。 使用して、 <xref:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes%2A> メソッドを <xref:System.Web.UI.Design.ContainerControlDesigner> クラスをデザイン時に、コントロールのスタイルを設定します。 オーバーライド、 <xref:System.Web.UI.Design.HtmlControlDesigner.Dispose%2A> デザイナーのオブジェクトが解放される前に、アクションを実行するコントロールのデザイナーのメソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching method can be overridden and implemented to perform additional processing when a behavior is detached from the designer.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingsCollectionChanged (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingsCollectionChanged(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to handle the Changed event on the DataBindings collection. The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">変更されたプロパティの名前。</param>
        <summary>データ バインディングが変更されたときを示すために使用できるメソッドを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged%2A> コントロール デザイナーが、コントロールのデータ バインドに変更を行った後は、コントロール デザイナーがメソッドを呼び出す必要があります。  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged%2A> メソッドは今後使用しません。 使用して、 <xref:System.Web.UI.DataBindingCollection.Changed> でイベントを <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> コントロール デザイナーの機能のコレクション。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)" /> method can be overridden and implemented to perform additional processing when the data bindings collection for the control has changed.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetParent">
      <MemberSignature Language="C#" Value="public virtual void OnSetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>親コントロールに関連付けられているコントロールが関連付けられている場合は、追加処理を実行する方法を提供します。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent" /> method can be overridden and implemented to perform additional processing when the designer is attached to a parent control.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="T:System.ComponentModel.IComponent" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterEvents">
      <MemberSignature Language="C#" Value="protected override void PreFilterEvents (System.Collections.IDictionary events);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterEvents(class System.Collections.IDictionary events) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="events" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="events">
          <see cref="T:System.Collections.IDictionary" /> を公開するコンポーネントのイベントの名前を格納しています。</param>
        <summary>デザイン時に公開されているイベントの一覧を設定、 <see cref="T:System.ComponentModel.TypeDescriptor" /> コンポーネントのオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents%2A> メソッドは、項目を追加したり、デザイナーを通じて公開するイベントのディクショナリから項目を削除する方法を提供する <xref:System.ComponentModel.TypeDescriptor> オブジェクトです。  
  
 イベントのディクショナリのキーは、イベントの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly modify the dictionary that is accessible through <paramref name="events" /> or you can leave the dictionary unchanged. If you are overriding the <see cref="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)" /> method, call the base implementation before you perform your own filtering.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">コンポーネントのフィルターを適用するプロパティのセットです。</param>
        <summary>特定のプロパティのセットを公開するデザイナーが使用できる、 <see cref="T:System.ComponentModel.TypeDescriptor" /> デザイン時にオブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties%2A> メソッドは、項目を追加したり、デザイナーを通じて公開するプロパティのディクショナリから項目を削除する方法を提供する <xref:System.ComponentModel.TypeDescriptor> オブジェクトです。  
  
 プロパティのディクショナリのキーは、プロパティの名前です。 オブジェクトが次の種類の <xref:System.ComponentModel.PropertyDescriptor>です。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can directly modify the dictionary that is accessible through <paramref name="properties" /> or you can leave the dictionary unchanged. If you are overriding the <see cref="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> method, call the base implementation before you perform your own filtering.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="ShouldCodeSerialize">
      <MemberSignature Language="C#" Value="public virtual bool ShouldCodeSerialize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldCodeSerialize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this property is not recommended because code serialization is not supported. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはシリアル化中に、現在のデザイン ドキュメントの分離コード ファイルでコントロールのフィールド宣言を作成するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" />, 、、の宣言を作成する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>