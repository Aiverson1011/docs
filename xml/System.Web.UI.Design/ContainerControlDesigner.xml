<Type Name="ContainerControlDesigner" FullName="System.Web.UI.Design.ContainerControlDesigner">
  <TypeSignature Language="C#" Value="public class ContainerControlDesigner : System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerControlDesigner extends System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ContainerControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>デザイン時に変更できる子コントロールやプロパティが含まれるコントロールにデザイナー機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.Design.ContainerControlDesigner> class provides a base designer class for controls that can be modified on the design surface. This includes controls that contain child controls or editable inner properties. The <xref:System.Web.UI.Design.ContainerControlDesigner> provides a single framed region to represent the control, and automatically handles rendering the control at design time.  
  
 Apply the <xref:System.Web.UI.ParseChildrenAttribute> attribute on the associated control to determine the design\-time behavior of the <xref:System.Web.UI.Design.ContainerControlDesigner>. Apply the <xref:System.Web.UI.ParseChildrenAttribute> settings on the associated control as follows:  
  
-   `false` to indicate that the <xref:System.Web.UI.Design.ContainerControlDesigner> represents the contents of the editable design region as child controls.  
  
-   `true` to indicate that the <xref:System.Web.UI.Design.ContainerControlDesigner> represents the contents of the editable design region as editable inner properties of the control.  
  
 Control developers can derive and extend a custom designer from one of several base designers depending on the kind of control that is being developed, as defined in the following list:  
  
-   Controls that allow child controls to be added to it at design time can derive from the <xref:System.Web.UI.Design.ContainerControlDesigner> class. For example, the <xref:System.Web.UI.Design.WebControls.PanelContainerDesigner> class is derived from the <xref:System.Web.UI.Design.ContainerControlDesigner> class and represents a <xref:System.Web.UI.WebControls.Panel> control on the design surface.  
  
-   Controls that have one or more child controls, and might also have an editable designer region where controls can be added at design time, can derive from the <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner> class.  
  
-   Controls that require custom design\-time processing can derive from the base <xref:System.Web.UI.Design.ControlDesigner> class.  
  
> [!NOTE]
>  The <xref:System.Web.UI.Design.ContainerControlDesigner> class replaces the obsolete <xref:System.Web.UI.Design.ReadWriteControlDesigner> class.  
  
 Use the <xref:System.ComponentModel.DesignerAttribute> attribute to associate a custom designer class together with a custom control implementation. For detailed information about how to use control designers with custom controls, see [Walkthrough:  Creating a Basic Control Designer for a Web Server Control](http://msdn.microsoft.com/ja-jp/27e44af0-6e12-4b7d-b17f-db35f1b6a052).  
  
   
  
## 例  
 The following code example demonstrates how to derive a designer class from the <xref:System.Web.UI.Design.ContainerControlDesigner> class. The example defines a simple control that is derived from the <xref:System.Web.UI.WebControls.CompositeControl> class, and then defines an associated designer, which is derived from the <xref:System.Web.UI.Design.ContainerControlDesigner> class. The derived designer class overrides the <xref:System.Web.UI.Design.ContainerControlDesigner.FrameCaption%2A> and <xref:System.Web.UI.Design.ContainerControlDesigner.FrameStyle%2A> properties to customize the frame that is around the editable region of the control on the design surface.  
  
 [!code-csharp[SimpleContainerControlDesigner\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleContainerControlDesigner/CS/simplecontainercontrol.cs#1)]
 [!code-vb[SimpleContainerControlDesigner\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleContainerControlDesigner/VB/simplecontainercontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
    <altmember cref="T:System.Web.UI.WebControls.Panel" />
    <altmember cref="T:System.Web.UI.Design.WebControls.PanelContainerDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ContainerControlDesigner.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDesignTimeCssAttributes">
      <MemberSignature Language="C#" Value="protected virtual void AddDesignTimeCssAttributes (System.Collections.IDictionary styleAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddDesignTimeCssAttributes(class System.Collections.IDictionary styleAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleAttributes" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="styleAttributes">スタイル属性のキー付きコレクションです。</param>
        <summary>デザイン時にコントロールのスタイル属性を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes%2A> メソッドは、コントロールのデザイン時の表示にスタイル属性のセットを追加します。 スタイル属性の値に追加する、 `styleAttributes` スタイル属性名によってキー指定のコレクション。 高さの値として、コレクション内のアクセスなど `styleAttributes["height"]` C\# の場合、または `styleAttributes("height")` for Microsoft Visual Basic です。  
  
 関連付けられたコントロールがから派生していない場合、 <xref:System.Web.UI.WebControls.WebControl> クラス、 <xref:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes%2A> メソッドでは、属性値には追加されません、 `styleAttributes` コレクションです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public override bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイン時に、コントロールのサイズを変更できるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" />, 、コントロールのサイズを変更する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 基本実装、 <xref:System.Web.UI.Design.ContainerControlDesigner.AllowResize%2A> プロパティを返します。 `true`します。 これは、デザイナーがデザイン サーフェイス上のコントロールのサイズを変更をサポートしていることを示します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Classes that are derived from the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class can override the <see cref="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize" /> property to indicate that the designer does not support resizing of the control on the design surface.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FrameCaption">
      <MemberSignature Language="C#" Value="public virtual string FrameCaption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FrameCaption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのデザイン時に表示されるキャプションを取得します。</summary>
        <value>コントロールにデザイン時のキャプションがある場合に、コントロールのフレーム キャプションのデザイン時に使用される文字列それ以外の場合、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ContainerControlDesigner.FrameCaption%2A> 文字列は、デザイン サーフェイス上のコントロールの編集可能領域を囲むフレームに表示されるキャプション。  
  
 既定のキャプション、 <xref:System.Web.UI.Design.ContainerControlDesigner> フレームは、 <xref:System.Web.UI.Design.ControlDesigner.ID%2A> デザイナーのインスタンスのプロパティです。 これは、通常、実行時と同じ <xref:System.Web.UI.Control.ID%2A> コントロールのプロパティです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>You can set a different frame caption for a control designer by deriving a class from the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class, and then overriding the <see cref="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption" /> property.</para>
        </block>
        <altmember cref="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle" />
      </Docs>
    </Member>
    <Member MemberName="FrameStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Style FrameStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FrameStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デザイン時にコントロールのフレームに適用されるスタイルを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> デザイン時にコントロールの枠のです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ContainerControlDesigner.FrameStyle%2A> プロパティはデザイン サーフェイス上のコントロールの編集可能領域を囲むフレームのスタイル プロパティを示します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When deriving a class from the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class, override the <see cref="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle" /> property to change the <see cref="T:System.Web.UI.WebControls.Style" /> properties of the frame, such as the border, foreground color, background color, and caption font settings.</para>
        </block>
        <altmember cref="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeCssAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetDesignTimeCssAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetDesignTimeCssAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン時にコントロールのスタイル属性のコレクションを返します。</summary>
        <returns>デザイン サーフェイス上のコントロールに適用されるスタイル属性のコレクション。 スタイル属性の名前はスタイル属性の値にアクセスするために使用するキー、 <see cref="T:System.Collections.IDictionary" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes%2A> コントロールのデザイン時の表示にスタイル属性のコレクションが返されます。  
  
 コントロールのデザイン時にスタイル属性の値を検証するには、返されるコレクションにキーとしてスタイル属性の名前を使用します。 スタイル属性の値は、コレクション内の文字列として格納されます。 高さの値として、コレクション内のアクセスなど `styleAttributes["height"]` C\# の場合、または `styleAttributes("height")` for Microsoft Visual Basic です。  
  
 関連付けられたコントロールがから派生していない場合、 <xref:System.Web.UI.WebControls.WebControl> クラス、 <xref:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes%2A> メソッドは、空のコレクションを返します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The default implementation for the <see cref="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes" /> method initializes the style attribute collection by using the <see cref="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)" /> method. To manipulate styles in a control designer that are derived from the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class, override the <see cref="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)" /> method.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public override string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">デザイナー領域のコレクション。</param>
        <summary>デザイン時にコントロールを表すために使用する HTML マークアップを返します。</summary>
        <returns>コントロールを表す HTML マークアップ文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml%28System.Web.UI.Design.DesignerRegionCollection%29> コントロールの HTML を取得します。 編集可能なデザイン領域に含まれる子コントロールは、関連付けられたコントロールのデザイナーを使用してレンダリングされます。  
  
 <xref:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml%28System.Web.UI.Design.DesignerRegionCollection%29> メソッドは、新しい初期化 <xref:System.Web.UI.Design.EditableDesignerRegion> を通じて領域に関連付けられているコントロールと返しますの編集可能領域のオブジェクト、 `regions` コレクションです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">コントロール内に含まれる編集可能なデザイン領域。</param>
        <summary>デザイン時にコントロールの編集可能な領域の内容を返します。</summary>
        <returns>含まれている領域の永続化されたコンテンツ、 <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ContainerControlDesigner> クラスは、デザイナー領域のコレクションの代わりに、1 つのデザイナー領域を実装します。 したがって、 `region` パラメーターは無視されます、 <xref:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent%2A> メソッドは、コントロールのデザイナーで含まれている 1 つのデザイナー領域の内容を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public override string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPersistenceContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>永続化できるコントロール コンテンツをデザイン時に返します。</summary>
        <returns>
          <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent%2A> メソッドが返す `null` ことを示すために、 <xref:System.Web.UI.Design.ContainerControlDesigner> クラスには、永続化された内部コンテンツがありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />
      </Docs>
    </Member>
    <Member MemberName="NoWrap">
      <MemberSignature Language="C#" Value="protected virtual bool NoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ContainerControlDesigner.NoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTML を使用するかどうかを示す値を取得 <see langword="nowrap" /> テーブルの属性です。</summary>
        <value>
          <see langword="true" /> HTML を使用する <see langword="nowrap" /> 属性テーブルをそれ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public override void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">コントロール内に含まれる編集可能なデザイン領域。</param>
        <param name="content">編集可能なデザイン領域に割り当てる内容。</param>
        <summary>デザイン時にコントロールの編集可能な領域の内容を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ContainerControlDesigner> クラスは、デザイナー領域のコレクションの代わりに、1 つのデザイナー領域を実装します。 したがって、 `region` パラメーターは無視されます、 <xref:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent%2A> コントロール デザイナーでメソッドが含まれている 1 つのデザイナー領域の内容を設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      </Docs>
    </Member>
  </Members>
</Type>