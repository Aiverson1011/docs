<Type Name="AppSettingsExpressionEditor" FullName="System.Web.UI.Design.AppSettingsExpressionEditor">
  <TypeSignature Language="C#" Value="public class AppSettingsExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppSettingsExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>評価およびデザイン時に構成ファイル内のアプリケーション設定式を編集するためには、プロパティとメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.AppSettingsExpressionEditor> クラスから派生して、 <xref:System.Web.UI.Design.ExpressionEditor> クラスし、評価を行い、コントロール プロパティを持つデザイン時にアプリケーション設定のリファレンスを関連付けることの実装を提供します。 たとえば、アプリケーション設定式にコントロール プロパティの値をバインドできます `AppSettings:mySettingKeyName`, を使用してコントロールのプロパティ値を設定することを示します、 `mySettingKeyName` 内の値、 `appSettings` Web 構成ファイルのセクションです。  
  
 ビジュアル デザイナー ホストなど [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], を使用して、 <xref:System.Web.UI.Design.AppSettingsExpressionEditor> からアプリケーション設定を選択するクラス、 `appSettings` 構成\] セクションで、デザイン時の表示の選択した式を評価します。  
  
 参照すると、 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> コントロール プロパティをデザイン時プロパティ グリッドで、ビジュアル デザイナーで、コントロール プロパティの実行時の値を提供するセット式にダイアログ ボックスが表示されます。 式のプレフィックスのリストに基づく式の型を選択できます。 選択すると、 **AppSettings** ビジュアル デザイナー ホストの一覧から式のプレフィックスを使用して、関連付けられている <xref:System.Web.UI.Design.ExpressionEditorSheet> のデザイン時の編集機能を提供するオブジェクトを `appSettings` 使用して式 <xref:System.Web.UI.Design.AppSettingsExpressionEditor> を評価し、式の文字列の変換メソッドはアプリケーション設定式の構文に基づいています。 ビジュアル デザイナー ホストでは、評価された式の結果を使用して、コントロールがデザイン サーフェイスにレンダリング プロパティの値を割り当てます。  
  
 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> プロパティを <xref:System.Web.UI.Design.AppSettingsExpressionEditor> オブジェクトが、文字列を返す `AppSettings`します。<xref:System.Web.Compilation.AppSettingsExpressionBuilder> クラスは、式のプレフィックスに関連付けられた `AppSettings` と <xref:System.Web.UI.Design.AppSettingsExpressionEditor> 実装します。  
  
 <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> メソッドは入力アプリケーション設定式の文字列を評価します。<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> メソッドが返される、 <xref:System.Web.UI.Design.ExpressionEditorSheet> を入力し、アプリケーション設定の式の編集に使用される実装です。  
  
   
  
## 例  
 次のコード例では、バインド、 <xref:System.Web.UI.WebControls.HyperLink.NavigateUrl%2A> のプロパティ、 <xref:System.Web.UI.WebControls.HyperLink> コントロールを使用してアプリケーション設定式、 <xref:System.Web.UI.Design.AppSettingsExpressionEditor> オブジェクトです。  
  
1.  Web フォーム プロジェクトで追加 `MyHyperLinkSetting` に、 `<appSettings>` web.config ファイルのセクションです。  
  
     [!code-xml[ControlsUsingExpressions\#5](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#5)]  
  
2.  Web フォーム ページの追加、 <xref:System.Web.UI.WebControls.HyperLink> コントロールです。  
  
3.  `Hyperlink` \[のプロパティ\] のコントロールをクリックして **式**, 、省略記号ボタンをクリックして \(**...**\)。  
  
     `<Hyperlinkname>` **式** \] ダイアログ ボックスが表示されます。  
  
4.  \[ **バインド可能なプロパティ**, 、\] をクリックして **NavigateUrl**, で、 **式の型** 一覧で、クリックして **AppSettings**, 、し \[ **式のプロパティ**, で、 **AppSetting** ボックスに、入力 **MyHyperLinkSetting**します。  
  
 ビジュアル デザイナーを使用して、 <xref:System.Web.UI.Design.AppSettingsExpressionEditor> の式を割り当てる、 `NavigateUrl` プロパティです。  
  
 次の aspx ソースは、アプリケーション設定式を使用して設定したプロパティ値の例を示します。  
  
 [!code-csharp[ControlsUsingExpressions\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#2)]
 [!code-vb[ControlsUsingExpressions\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#2)]
 [!code-xml[ControlsUsingExpressions\#2](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Configuration.Configuration.AppSettings" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
    <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppSettingsExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンス、 <xref:System.Web.UI.Design.AppSettingsExpressionEditor> と共に基底クラスによってクラスが構成されている、 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> プロパティに設定 `AppSettings`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">アプリケーション設定式の文字列を評価します。<c>expression</c> 含まない、 <see langword="AppSettings" /> 式のプリフィックス。</param>
        <param name="parseTimeData">評価するための追加の解析情報を格納するオブジェクト <c>expression</c>します。</param>
        <param name="propertyType">コントロール プロパティの型。</param>
        <param name="serviceProvider">その他のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。</param>
        <summary>アプリケーション設定式の文字列を評価し、コントロールのプロパティのデザイン時の値を提供します。</summary>
        <returns>によって参照されるオブジェクト <paramref name="expression" />, 式の評価が成功した場合、それ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> メソッドの検索で指定されたアプリケーション設定 `expression`, 、アプリケーション設定の値を返します。  
  
 ビジュアル デザイナーを使用して、 <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> メソッドをアプリケーション設定式を評価し、関連するコントロール プロパティのデザイン時の値を指定します。 ビジュアル デザイナー呼び出し、 <xref:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression%2A> 式の文字列と評価された式の結果をコントロールがデザイン サーフェイスにレンダリング プロパティの値を割り当てるにはメソッドです。  
  
 ページ パーサーを使用して、実行時に、 <xref:System.Web.Compilation.AppSettingsExpressionBuilder.EvaluateExpression%2A> と <xref:System.Web.Compilation.AppSettingsExpressionBuilder.GetCodeExpression%2A> 対応するメソッド <xref:System.Web.Compilation.AppSettingsExpressionBuilder> 式を評価し、実行時間の値は、関連するコントロール プロパティを実装します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">式の文字列が式エディター シートの初期化に使用される、コントロール プロパティを設定します。<c>expression</c> 含まない、 <see langword="AppSettings" /> 式のプリフィックス。</param>
        <param name="serviceProvider">その他のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。</param>
        <summary>アプリケーション設定式の式エディター シートを返します。</summary>
        <returns>
          <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> 式プロパティには、アプリケーションの設定を定義する実装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet%2A> メソッドが単純なエディターをシートの実装は、1 つの入力文字列を使用して、条件式を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Configuration.Configuration.AppSettings" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
        <altmember cref="T:System.Web.Compilation.ExpressionEditorAttribute" />
      </Docs>
    </Member>
  </Members>
</Type>