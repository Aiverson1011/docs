<Type Name="DataSourceViewSchemaConverter" FullName="System.Web.UI.Design.DataSourceViewSchemaConverter">
  <TypeSignature Language="C#" Value="public class DataSourceViewSchemaConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataSourceViewSchemaConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataSourceViewSchemaConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データの送信元スキーマ内のフィールドを表すプロパティの型コンバーターを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> コントロール プロパティに代入する前にオブジェクトの種類を変換するクラス。 一般に、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 文字列オブジェクトの型の変換をサポートし、関連付けられたコントロールのプロパティへの割り当てに使用できる標準値の一覧を提供します。 標準値コレクションは、現在のコントロールのデータの送信元スキーマ内のフィールドの一覧を示します。  
  
 その他のオブジェクト型の変換をサポートするために派生クラスを <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> させ、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> と <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> メソッドをその他のオブジェクト タイプです。 標準の割り当て可能な値のカスタム リストをサポートするためにオーバーライド、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> メソッドです。  
  
 適用、 <xref:System.ComponentModel.TypeConverterAttribute> を指定する属性、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> とコントロール プロパティの型コンバーター クラスです。 たとえば、 <xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A> のプロパティ、 <xref:System.Web.UI.WebControls.DataControlField> クラスおよび <xref:System.Web.UI.WebControls.BoundField.DataField%2A> のプロパティ、 <xref:System.Web.UI.WebControls.BoundField> クラスの使用、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> プロパティの型コンバーターとして。  
  
> [!NOTE]
>  型コンバーターを直接アクセスする必要があることはありません。 代わりに、適切なコンバーターを使用して、 <xref:System.ComponentModel.TypeDescriptor> オブジェクトです。 詳細については、例を参照してください。 <xref:System.ComponentModel.TypeConverter>します。  
  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> メソッドでは、を通じて使用可能な値の一覧を返す、コンバーターをサポートしていることを示します、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> メソッドです。<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> メソッドは、リストが使用可能な値の排他的なリストではないことを示します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataSourceViewSchemaConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  You should never access a type converter directly. Instead, call the appropriate converter by using a <xref:System.ComponentModel.TypeDescriptor> object. For more information, see the examples in <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 追加のコンテキスト情報を取得するために使用する実装。</param>
        <param name="sourceType">変換前の型。</param>
        <summary>指定したソースの種類を関連付けられたコントロールのプロパティの型に変換できるかどうかを示します。</summary>
        <returns>
          <see langword="true" /> コンバーターが変換を実行できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> メソッドを呼び出せば確認するかどうか、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> メソッドは、ソースの種類の変換をサポートします。  
  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> メソッドは、文字列からのみ変換できますので、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> メソッドを返します。 `true` と `sourceType` 文字列です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 追加のコンテキスト情報を取得するために使用する実装。</param>
        <param name="culture">
          <see cref="T:System.Globalization.CultureInfo" /> ローカリゼーション機能をサポートするために使用できるオブジェクト。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトを関連付けられたコントロールのプロパティの型に変換します。</summary>
        <returns>
          <see cref="T:System.Object" /> 変換後のオブジェクトを表すインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `value` が文字列型の文字列形式を `value` が返されます。 場合 `value` は `null`, 、空の文字列 \(""\) が返されます。 他のすべての指定した値に対して、 <xref:System.NotSupportedException> 例外がスローされます。  
  
 呼び出す、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A> メソッドを呼び出せば確認するかどうか、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A> メソッドは、ソースの種類の変換をサポートします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">変換を実行できませんでした。</exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 追加のコンテキスト情報を取得するために使用する実装。</param>
        <summary>関連付けられたコントロールのプロパティに割り当てることが可能な値の一覧を返します。</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 関連付けられたコントロールのプロパティへの割り当てに使用可能な値を格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> メソッドの使用方法、 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> の指定したプロパティ `context` を取得するオブジェクト、 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 実装します。 場合、 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 実装が利用できる、デザイン時に関連付けられたコントロールのデータ ソースのスキーマにアクセスし、関連するデータ ソースのスキーマ ビューから利用可能なフィールドの一覧を取得するために使用されます。  
  
 使用可能な値のコレクションには、関連付けられたコントロールのデータ ソースのスキーマ内のフィールドが作成されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataSetViewSchema.GetFields" />
        <altmember cref="T:System.Web.UI.IDataSourceViewSchemaAccessor" />
        <altmember cref="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context, Type typeFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context, class System.Type typeFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="typeFilter" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 追加のコンテキスト情報を取得するために使用する実装。</param>
        <param name="typeFilter">標準値の一覧に含めるフィールドをフィルター処理するために使用する型。</param>
        <summary>関連付けられたコントロールのプロパティに割り当てることが可能な値の一覧を返します。</summary>
        <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 関連付けられたコントロールのプロパティへの割り当てに使用可能な値を格納しています。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 追加のコンテキスト情報を取得するために使用する実装。</param>
        <summary>このコンバーターが関連付けられたコントロールのプロパティに割り当てることのできるすべての可能な値を含むリストを返すかどうかを示します。</summary>
        <returns>
          <see langword="true" /> このコンバーターは、関連付けられたコントロールのプロパティに割り当てることのできるすべての可能な値を含むリストを返す場合それ以外の場合 <see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A> のメソッド、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> 返します `false`, 、によって一覧が返されることを示す、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> メソッドはすべての可能な割り当て可能な値の排他的なリストではありません。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 追加のコンテキスト情報を取得するために使用する実装。</param>
        <summary>このコンバーターが、指定のコンテキスト内でコントロールのプロパティへの割り当てに使用できる値のセットを返すかどうかを示します。</summary>
        <returns>
          <see langword="true" /> このコンバーターが関連付けられているコントロールへの割り当てに使用できる値の標準セットを返す場合それ以外の場合 <see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> メソッドでは、サポートする、変換にを通じて使用可能な値の一覧を返すかどうかを示します、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> メソッドです。  
  
 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A> のメソッド、 <xref:System.Web.UI.Design.DataSourceViewSchemaConverter> オブジェクトを返します。 `true` 場合、指定した `context` オブジェクトの提供、 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> で実装の <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> プロパティです。<xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A> メソッドの使用方法、 <xref:System.Web.UI.IDataSourceViewSchemaAccessor> 実装に関連付けられているデータの送信元スキーマから使用できるフィールドの一覧を取得します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コントロールのプロパティに割り当てることが可能な値の一覧を返します。</summary>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </MemberGroup>
  </Members>
</Type>