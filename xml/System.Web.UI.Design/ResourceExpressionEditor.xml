<Type Name="ResourceExpressionEditor" FullName="System.Web.UI.Design.ResourceExpressionEditor">
  <TypeSignature Language="C#" Value="public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResourceExpressionEditor extends System.Web.UI.Design.ExpressionEditor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ResourceExpressionEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>評価およびデザイン時にリソースの式を編集するためには、プロパティとメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ResourceExpressionEditor> クラスから派生する、 <xref:System.Web.UI.Design.ExpressionEditor> クラスし、評価を行い、デザイン時にコントロール プロパティを持つリソースの参照を関連付けることの実装を提供します。 たとえば、リソースの式にコントロール プロパティの値をバインドできます `Resources:submitText`, 、という名前のリソースを使用してコントロールのプロパティ値を設定することを示します `submitText`します。  
  
 ビジュアル デザイナー ホストなど [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], を使用して、 <xref:System.Web.UI.Design.ResourceExpressionEditor> クラスのリソース クラス、キー、およびリソースの式のデザイナーの既定値を指定し、選択したリソースの式を評価デザイン時に表示します。  
  
 参照すると、 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> コントロール プロパティをデザイン時プロパティ グリッドで、ビジュアル デザイナーで、コントロール プロパティの実行時の値を提供するセット式にダイアログ ボックスが表示されます。 式のプレフィックスのリストに基づく式の型を選択できます。 選択した場合、 **リソース** 式のプレフィックスの一覧で、ビジュアル デザイナーは、 <xref:System.Web.UI.Design.ResourceExpressionEditor> メソッドを設定するには、評価、およびリソースの式の構文に基づく式を変換します。 ビジュアル デザイナーでは、評価された式の結果を使用して、コントロールがデザイン サーフェイスにレンダリング プロパティの値を割り当てます。  
  
 基本 <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=fullName> プロパティを <xref:System.Web.Compilation.ResourceExpressionBuilder> 文字列を返します `Resources`します。<xref:System.Web.Compilation.ResourceExpressionBuilder> クラスは、式のプレフィックスに関連付けられた `Resources` と <xref:System.Web.UI.Design.ResourceExpressionEditor> 実装します。  
  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> メソッドは入力リソース式を評価します。<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> メソッドが返される、 <xref:System.Web.UI.Design.ExpressionEditorSheet> リソース名、クラス、およびデザイナーの既定値を選択し、選択したリソースの値からリソース式に使用される実装です。  
  
   
  
## 例  
 次のコード例では、バインド、 <xref:System.Web.UI.WebControls.HyperLink.Text%2A> のプロパティ、 <xref:System.Web.UI.WebControls.HyperLink> コントロールを使用してリソース式を <xref:System.Web.UI.Design.ResourceExpressionEditor> クラスです。  
  
1.  Web フォーム プロジェクトでは、App\_LocalResources ディレクトリに Strings.resx をという名前の新しいリソース ファイルを追加します。  
  
2.  Strings.resx のリソース ファイルを myLinkText という名前の文字列を追加し、この後のテキストに値を設定、 <xref:System.Web.UI.WebControls.HyperLink> コントロールです。  
  
     たとえば、設定、 `myLinkText` 文字列の値 `This is a good link`です。  
  
3.  Web フォーム ページで追加、 <xref:System.Web.UI.WebControls.HyperLink> コントロールです。  
  
4.  `Hyperlink` \[のプロパティ\] のコントロールをクリックして **式**, 、省略記号ボタンをクリックして \(**...**\)。  
  
     `<Hyperlinkname>` **式** \] ダイアログ ボックスが表示されます。  
  
5.  \[ **バインド可能なプロパティ**, 、\] をクリックして **テキスト**, 、し、次に、 **式の型** ボックスの一覧で、入力 **リソース**します。  
  
     リソース式のプロパティで定義されている、 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> クラスが表示されます。  
  
6.  **式のプロパティ** 設定 **ClassName** に **文字列**, 、コンパイル済みの Strings.resx リソース ファイルと設定のクラス名である **ResourceKey** に **myLinkText**, 、Strings.resx で名前を文字列であります。  
  
 ビジュアル デザイナーを使用して、 <xref:System.Web.UI.Design.ResourceExpressionEditor> のリソースの式を割り当てる、 `Text` プロパティです。 次の aspx ソースでは、リソースの式を使用して設定されるプロパティ値の例です。  
  
 [!code-csharp[ControlsUsingExpressions\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlsUsingExpressions/CS/controlsusingexpressionscs.aspx#3)]
 [!code-vb[ControlsUsingExpressions\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlsUsingExpressions/VB/controlsusingexpressionsvb.aspx#3)]
 [!code-xml[ControlsUsingExpressions\#3](~/samples/snippets/common/VS_Snippets_WebNet/ControlsUsingExpressions/Common/controlsusingexpressions.xml#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
    <altmember cref="T:System.Web.Compilation.ResourceExpressionBuilder" />
    <altmember cref="P:System.Web.UI.Design.HtmlControlDesigner.Expressions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResourceExpressionEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.UI.Design.ResourceExpressionEditor> と共に基底クラスによってオブジェクトが構成されている、 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> プロパティに設定 `Resources`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(string expression, object parseTimeData, class System.Type propertyType, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="parseTimeData" Type="System.Object" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">リソースの式を評価します。<c>expression</c> 含まない、 <see langword="Resources" /> 式のプリフィックス。</param>
        <param name="parseTimeData">形式での他の解析データを提供するオブジェクト、 <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> 値。</param>
        <param name="propertyType">コントロールのプロパティの型。</param>
        <param name="serviceProvider">その他のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。</param>
        <summary>リソース式を評価し、コントロールのプロパティのデザイン時の値を提供します。</summary>
        <returns>式の評価が成功した場合、式の評価結果の文字列によって参照されるオブジェクトそれ以外の場合、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> メソッドで指定されているリソースを検索 `expression`, 、リソースを返します。  
  
 ビジュアル デザイナーを使用して、 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> リソース式を評価し、関連するコントロール プロパティのデザイン時の値を指定します。 ページ パーサーを使用して、実行時に、 <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> と <xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A> 対応するメソッド <xref:System.Web.Compilation.ResourceExpressionBuilder> 式を評価し、実行時間の値は、関連するコントロール プロパティを実装します。  
  
 ビジュアル デザイナーを使用して、 <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> をデザイン時とし、呼び出し式の文字列を解析、 <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> 解析された式のデータを持つメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ResourceExpressionFields" />
        <altmember cref="Overload:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression" />
      </Docs>
    </Member>
    <Member MemberName="GetExpressionEditorSheet">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ExpressionEditorSheet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">リソース式、式エディターのシートを初期化するために使用します。</param>
        <param name="serviceProvider">式エディター シートの初期化に使用されるデザイナーのホストによって提供されるサービス プロバイダーの実装です。</param>
        <summary>入力式の文字列とサービス プロバイダーの実装で初期化されたリソース式エディターのシートを返します。</summary>
        <returns>A <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> リソース式のプロパティを定義します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> メソッドは、式エディター リソース式のシート実装を返します。 ビジュアル デザイナー ホストは、その \[式\] ダイアログ ボックスで式エディターのシートを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
  </Members>
</Type>