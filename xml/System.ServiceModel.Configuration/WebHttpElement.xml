<Type Name="WebHttpElement" FullName="System.ServiceModel.Configuration.WebHttpElement">
  <TypeSignature Language="C#" Value="public sealed class WebHttpElement : System.ServiceModel.Configuration.BehaviorExtensionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebHttpElement extends System.ServiceModel.Configuration.BehaviorExtensionElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.WebHttpElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.BehaviorExtensionElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>構成によってエンドポイントの <see cref="T:System.ServiceModel.Description.WebHttpBehavior" /> を有効にします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Configuration.WebHttpElement> は <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> サブタイプであり、構成によってエンドポイントに <xref:System.ServiceModel.Description.WebHttpBehavior> を含めるために使用できます。<xref:System.ServiceModel.Description.WebHttpBehavior> 動作を <xref:System.ServiceModel.WebHttpBinding> バインディングと組み合わせて使用すると、[!INCLUDE[indigo1](~/includes/indigo1-md.md)] サービスの Web プログラミング モデルが有効になります。<xref:System.ServiceModel.Web.WebServiceHost> は、<xref:System.ServiceModel.WebHttpBinding> を使用するエンドポイントにこの動作を自動的に追加することに注意してください。  
  
   
  
## 例  
 この例では、<xref:System.ServiceModel.Configuration.WebHttpElement> 型を返します。  
  
```  
using System;  
using System.ServiceModel;  
using System.ServiceModel.Web;  
using System.ServiceModel.Configuration;  
  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            WebHttpElement webHttpElement = new WebHttpElement();  
            Console.WriteLine("The type is: {0}", webHttpElement.BehaviorType);  
            Console.WriteLine("Press <ENTER> to terminate the program.");  
            Console.ReadLine();  
        }  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebHttpElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebHttpElement.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Configuration.WebHttpElement" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この例では、<xref:System.ServiceModel.Configuration.WebHttpElement> 型を返します。  
  
```  
using System;  
using System.ServiceModel;  
using System.ServiceModel.Web;  
using System.ServiceModel.Configuration;  
  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            WebHttpElement webHttpElement = new WebHttpElement();  
            Console.WriteLine("The type is: {0}", webHttpElement.BehaviorType);  
            Console.WriteLine("Press <ENTER> to terminate the program.");  
            Console.ReadLine();  
        }  
    }  
```  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticFormatSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool AutomaticFormatSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticFormatSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpElement.AutomaticFormatSelectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("automaticFormatSelectionEnabled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージの形式を自動選択できるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 場合は、メッセージの形式は、自動的に選択されることができます。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorType">
      <MemberSignature Language="C#" Value="public override Type BehaviorType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BehaviorType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpElement.BehaviorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この構成要素で有効にできる動作の種類を取得します。</summary>
        <value>構成要素 <see cref="T:System.Type" /> で有効にできる動作の <see cref="T:System.ServiceModel.Description.WebHttpBehavior" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この例では、<xref:System.ServiceModel.Configuration.WebHttpElement> 型を返します。  
  
```  
using System;  
using System.ServiceModel;  
using System.ServiceModel.Web;  
using System.ServiceModel.Configuration;  
  
    class Program  
    {  
        static void Main(string[] args)  
        {  
            WebHttpElement webHttpElement = new WebHttpElement();  
            Console.WriteLine("The type is: {0}", webHttpElement.BehaviorType);  
            Console.WriteLine("Press <ENTER> to terminate the program.");  
            Console.ReadLine();  
        }  
    }  
```  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBehavior">
      <MemberSignature Language="C#" Value="protected override object CreateBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object CreateBehavior() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.WebHttpElement.CreateBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultBodyStyle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageBodyStyle DefaultBodyStyle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpElement.DefaultBodyStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultBodyStyle")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageBodyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定のメッセージ本文のスタイルを取得または設定します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Web.WebMessageBodyStyle" /> 列挙値に定義されている値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOutgoingResponseFormat">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Web.WebMessageFormat DefaultOutgoingResponseFormat" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpElement.DefaultOutgoingResponseFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("defaultOutgoingResponseFormat")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Web.WebMessageFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定の送信応答形式を取得または設定します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Web.WebMessageFormat" /> 列挙値に定義されている値の 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultExceptionEnabled">
      <MemberSignature Language="C#" Value="public bool FaultExceptionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FaultExceptionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpElement.FaultExceptionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("faultExceptionEnabled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内部サーバー エラー \(HTTP ステータス コード: 500\) が発生したときに FaultException が生成されるかどうかを指定するフラグを取得または設定します。</summary>
        <value>返します <see langword="true" /> フラグが有効の場合、それ以外の場合を返します <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpEnabled">
      <MemberSignature Language="C#" Value="public bool HelpEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HelpEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpElement.HelpEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("helpEnabled")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘルプが有効かどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> ヘルプが有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.WebHttpElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>