<Type Name="MsmqBindingElementBase" FullName="System.ServiceModel.Configuration.MsmqBindingElementBase">
  <TypeSignature Language="C#" Value="public abstract class MsmqBindingElementBase : System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqBindingElementBase extends System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.MsmqBindingElementBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.StandardBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.ServiceModel.Configuration.NetMsmqBindingElement" /> クラスおよび <see cref="T:System.ServiceModel.Configuration.MsmqIntegrationBindingElement" /> クラスに共通のメンバーを持つ基本クラスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスには、メッセージ キュー \(MSMQ とも呼ばれる\) ベースのバインディングを構成するために必要な設定が含まれます。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqBindingElementBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MsmqBindingElementBase (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">バインドの構成名。 この値は、このバインディングの ID として使用されるため、一意である必要があります。</param>
        <summary>指定された名前を使用して、<see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("customDeadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>期限切れのメッセージや、配信に失敗したメッセージを送信するカスタムの配信不能キューを識別する <see cref="T:System.Uri" /> を取得または設定します。</summary>
        <value>カスタムの配信不能キューの URI を格納する<see cref="T:System.Uri" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A **newTerm tag is not supported!!!!**  
 is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired. The **languageKeyword tag is not supported!!!!**  
 property allows you to specify a custom dead\-letter queue rather than using the default system\-wide, dead\-letter queue.  
  
 The URI that is specified by <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> must use the net.msmq scheme.  
  
 If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> must be set to **languageKeyword tag is not supported!!!!**  
. If <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.CustomDeadLetterQueue%2A> is not **languageKeyword tag is not supported!!!!**  
, then <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("deadLetterQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングの <see cref="T:System.ServiceModel.DeadLetterQueue" /> の設定を取得または設定します。</summary>
        <value>使用する配信不能キューがある場合にその種類を指定する <see cref="T:System.ServiceModel.DeadLetterQueue" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **newTerm tag is not supported!!!!**  
 is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired. The reasons a message can fail to reach the receiving application include:  
  
-   A transactional message is sent to a non\-transactional queue.  
  
-   A non\-transactional message is sent to a transactional queue.  
  
-   An unauthenticated message is sent to a queue that accepts only authenticated messages.  
  
-   An unencrypted message is sent to a queue that accepts only encrypted messages.  
  
-   The message expires before the message is delivered to a receiver.  
  
-   The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.  
  
-   The sender does not have the [access rights](http://go.microsoft.com/fwlink/?LinkID=96167) required to place the message in the destination queue.  
  
-   The digital signature attached to the message is not valid.  
  
-   An encrypted message cannot be decrypted by the destination queue manager.  
  
-   The destination queue is purged or deleted before the message is retrieved.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Durable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("durable", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングによって送信されるメッセージが永続的なものか不安定なものかを指定する値を取得または設定します。</summary>
        <value>このバインディングによって処理されたメッセージが非揮発性の場合は <see langword="true" />。揮発性の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If this property is set to **languageKeyword tag is not supported!!!!**  
, messages are durable; otherwise, messages are volatile. Durable messages are not lost if the queue manager crashes. The default value for this property is **languageKeyword tag is not supported!!!!**  
. When exactly\-once assurances are required \(<xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> is set to **languageKeyword tag is not supported!!!!**  
\), this property must be set to **languageKeyword tag is not supported!!!!**  
.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ExactlyOnce" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("exactlyOnce", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングで送信されるメッセージが 1 回だけ配信されることを保証するかどうかを指定する値を取得または設定します。</summary>
        <value>
          <see langword="true" /> このバインディングで送信されるメッセージの正確が\-1 回の保証です。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A>, に設定すると `true`, 、メッセージ キュー \(MSMQ とも呼ばれます\) には、1 回だけ、送信されたメッセージが受信メッセージ キューに配信されることが保証ことを示します。 に応じて配信不能キューに配信に失敗する場合、メッセージが送信されて、 `DeadLetterQueue` プロパティの設定です。<xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> を `true` に設定する場合は、キューがトランザクション キューでなければなりません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.InitializeFrom(System.ServiceModel.Channels.Binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding">このバインディングの初期化に使用される設定を格納しているバインディング。</param>
        <summary>このバインディングを指定されたバインディングの内容で初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxReceivedMessageSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを許可するメッセージのバイト単位の最大サイズを示す値を設定します。</summary>
        <value>このバインディングで送信または受信されるメッセージの最大許容サイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 受信メッセージのサイズが <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxReceivedMessageSize%2A> より大きい場合、メッセージは破棄されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxRetryCycles", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>受信アプリケーションにメッセージを配信する再試行サイクルの最大数を取得または設定します。</summary>
        <value>有害メッセージ キューにメッセージを転送する前に試みる再試行サイクルの最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 *再試行サイクル*とは、メッセージが再試行キューからアプリケーション キューに転送され、アプリケーションへの配信が試行されるタイミングのことです。 メッセージは、<xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount%2A> で指定された回数の即時再試行に失敗した後、再試行キューに置かれます。<xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> は、再試行サイクル数を指定します。これには、メッセージの初回の送信試行は含まれません。 メッセージの配信試行は、最大で \(1 \+ MaxRetryCycles\) \* \(ReceiveRetryCount \+ 1\) 回実行されます。 たとえば、ReceiveRetryCount \= 0 で、MaxRetryCycles が 1 の場合、メッセージの配信試行は最大 2 回になります。 このプロパティは、[!INCLUDE[wv](~/includes/wv-md.md)] 以降のオペレーティング システムで使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApplyConfiguration(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.MsmqBindingElementBase.OnApplyConfiguration(System.ServiceModel.Channels.Binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding">適用する設定を格納しているバインディング。</param>
        <summary>このバインディングの内容を指定されたバインディングに適用するときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> オブジェクトのコレクションが格納されている <see cref="T:System.Configuration.ConfigurationProperty" /> インスタンスを取得します。オブジェクトは、この構成要素の属性または <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> オブジェクトのコレクションが格納されている <see cref="T:System.Configuration.ConfigurationProperty" /> インスタンス。オブジェクトは、このバインディング構成要素の属性または <see cref="T:System.Configuration.ConfigurationElement" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveContextEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveContextEnabled", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>設定を示す値を取得またはキューでメッセージの処理が有効になっているかどうかのコンテキストを受信します。</summary>
        <value>
          <see langword="true" /> 場合受信コンテキストをキューでメッセージの処理が有効になっているとします。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これが有効になっている場合、サービスではキューのメッセージを “ピーク” してメッセージの処理を開始できます。問題が発生して例外がスローされた場合、メッセージはキューに残ります。 サービスではメッセージを "ロック" して、後で処理を再試行することもできます。 ReceiveContext には、処理されたメッセージを "完了" してキューから削除するためのメカニズムがあります。 ネットワーク上でのキューへのメッセージの読み込みや再書き込みはされなくなり、個々のメッセージは処理中にさまざまなサービス インスタンス間でバウンスされなくなります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveErrorHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveErrorHandling", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有害メッセージおよびディスパッチできないメッセージの処理方法を指定する列挙値を取得または設定します。</summary>
        <value>有害メッセージおよびディスパッチできないメッセージの処理方法を指定する <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが <xref:System.ServiceModel.ReceiveErrorHandling.Fault> に設定されている場合、リスナーでエラーが発生し、<xref:System.ServiceModel.ProtocolException> \(<xref:System.ServiceModel.MsmqPoisonMessageException> をラップ\) がトレースおよびスローされます。 メッセージはキューに残されるので、手動で削除する必要があります。<xref:System.ServiceModel.MsmqPoisonMessageException> には、<xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> が格納されます。このプロパティを使用して、有害メッセージを識別し、有害メッセージ キューからメッセージを手動で削除できます。  
  
 このプロパティが <xref:System.ServiceModel.ReceiveErrorHandling.Drop> に設定されている場合、害のあるメッセージは、単に削除されます。  
  
 このプロパティが <xref:System.ServiceModel.ReceiveErrorHandling.Reject> に設定されている場合、否定応答がクライアントに送信され、メッセージが有害メッセージ キューから削除されます。 このオプションは、メッセージ キュー \(MSMQ\) 4.0 でのみ使用できます。  
  
 このプロパティが <xref:System.ServiceModel.ReceiveErrorHandling.Move> に設定されている場合、メッセージは最終的な有害メッセージ サブキューに移動されます。 このオプションは、メッセージ キュー \(MSMQ とも呼ばれる\) 4.0 でのみ使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("receiveRetryCount", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション キューからアプリケーションへのメッセージの転送が失敗した場合に、キュー マネージャーが即時再試行を行う最大回数を取得または設定します。</summary>
        <value>キュー マネージャーがメッセージを再試行キューに転送する前にメッセージの送信を試行する最大回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 配信試行を最大回数実行してもアプリケーションがメッセージにアクセスできない場合、メッセージは、後で再配信するために再試行キューに送信されます。 メッセージが送信キューに戻されるまでの時間は、<xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A> で制御されます。 再試行サイクルが <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 値に達した場合は、メッセージが有害メッセージ キューに送信されるか、送信者に否定応答が返されます。  
  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)] <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> および <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.RetryCycleDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("retryCycleDelay", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>配信できなかったメッセージを配信しようとするときに、次の再試行サイクルを待機する時間を指定する値を取得または設定します。</summary>
        <value>受信アプリケーションへの次の配信試行サイクルを開始するまでの待機期間を指定する <see cref="T:System.TimeSpan" />。 既定値は 30 \(分\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 1 回の再試行サイクルでは、受信アプリケーションへのメッセージ配信試行が繰り返されます \(<xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> プロパティで指定されます\)。 すべての試行が失敗すると、メッセージが再試行キューに戻されます。 このプロパティは、メッセージが別の再試行サイクルのアプリケーション キューに転送される前に再試行キューに置かれる期間を指定します。 このプロパティは、[!INCLUDE[wv](~/includes/wv-md.md)] 以降のオペレーティング システムで使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.TimeToLive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("timeToLive", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージの有効期間を指定する値を取得または設定します。 この期間が経過すると、メッセージは配信不能キュー \(有効な場合\) に配置されます。</summary>
        <value>メッセージの有効期間を指定する <see cref="T:System.TimeSpan" /> 値。 既定値は、24 時間です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キュー アプリケーションは、仕様上は切断された状態で動作するため、アプリケーションの送受信は同時に実行されない場合があります。 したがって、送信元アプリケーションによって送信されたメッセージが、受信側アプリケーションですぐには処理されない場合があります。 メッセージには、特定の期間内だけ有効な情報が含まれているものがあります。 このようなメッセージが該当の期間内に配信されない場合、有用な情報が含まれなくなるため破棄する必要があります。 このプロパティでは、メッセージがアプリケーション キューに配信される前に保持される制限時間を指定できます。 メッセージがアプリケーション キューに配信される前にこの制限時間が経過した場合、配信不能キューが使用可能であれば \(<xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> プロパティによって決まります\)、メッセージは配信不能キューに配置されます。配信不能キーを使用できない場合には、メッセージは破棄されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useMsmqTracing", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメッセージ キュー \(MSMQ とも呼ばれます\) の組み込みメッセージ トレース機能を使用するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> メッセージ キューの組み込みメッセージ トレース機能を使用する場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing%2A> が `true` に設定されている場合、キューに置かれたチャネルは、メッセージ キューに組み込まれているメッセージ トレース機能を使用します。 この機能により、メッセージがキュー マネージャーに着信するか、キュー マネージャーから発信されるたびに、指定されたレポート キューにレポート メッセージが送信されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.UseSourceJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("useSourceJournal", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングにより処理されるメッセージのコピーをソース ジャーナル キューに保存するかどうかを示す値を取得または設定します。</summary>
        <value>このバインディングによって処理されるメッセージがソース ジャーナル キューにコピーされる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キューに置かれたアプリケーションでは、送信元のコンピューターの発信キューから送信されたメッセージの記録を残す場合は、メッセージをジャーナル キューにコピーできます。 メッセージが発信キューから送信され、送信先のコンピューターで受信されたという応答を受け取った後、メッセージのコピーが送信元のコンピューターのシステム ジャーナル キューに保持されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("validityDuration", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューに置かれたチャネルで使用する接続タイムアウトを指定する値を取得または設定します。</summary>
        <value>キューに置かれたチャネルで使用する接続タイムアウトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!IMPORTANT]
>  メッセージについて <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ValidityDuration%2A> が期限切れになった場合、トランザクション中に期限切れが発生すると、ワークフロー インスタンスと共に、メッセージの処理に使用される可能性があるトランザクションが中止されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Configuration.MsmqBindingElementBase" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>