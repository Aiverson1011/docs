<Type Name="ImportManyAttribute" FullName="System.ComponentModel.Composition.ImportManyAttribute">
  <TypeSignature Language="C#" Value="public class ImportManyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportManyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ImportManyAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>一致するすべてのエクスポートを作成する必要がありますプロパティ、フィールド、またはパラメーターを指定、 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> クラスの既定のコントラクト名とエクスポートの設定をインポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントラクト名は、呼び出しの結果、 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> プロパティ、フィールド、またはこの属性でマークされているパラメーターの型のメソッドです。  
  
 使用して、コントラクト名を比較、 <xref:System.StringComparer.Ordinal%2A> プロパティを大文字と小文字、非言語的な比較を実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">インポート、エクスポートのコントラクト名、または <see langword="null" /> または空の文字列 \(""\)、コントラクト名を使用します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> クラスの指定したコントラクト名を持つエクスポートの設定をインポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントラクト名は、呼び出しの結果、 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> この属性でマークされているプロパティ、フィールド、またはパラメーターの型のメソッドです。  
  
 使用して、コントラクト名を比較、 <xref:System.StringComparer.Ordinal%2A> プロパティを大文字と小文字、非言語的な比較を実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">インポート、エクスポートのコントラクト名を派生元の型または <see langword="null" /> コントラクト名を使用します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> 指定した型から派生したクラスのコントラクト名を持つエクスポートの設定をインポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントラクト名は、呼び出しの結果、 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> メソッドを `contractType`します。  
  
 コントラクト名は、呼び出しの結果、 <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> この属性でマークされているプロパティ、フィールド、またはパラメーターの型のメソッドです。  
  
 使用して、コントラクト名を比較、 <xref:System.StringComparer.Ordinal%2A> プロパティを大文字と小文字、非言語的な比較を実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportManyAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">インポート、エクスポートのコントラクト名、または <see langword="null" /> または空の文字列 \(""\)、コントラクト名を使用します。</param>
        <param name="contractType">インポートするエクスポートの型。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> クラスの指定したコントラクト名とコントラクト型とエクスポートの設定をインポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowRecomposition">
      <MemberSignature Language="C#" Value="public bool AllowRecomposition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowRecomposition" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを対応するを提供するエクスポートのコントラクトの変更時に、装飾されたプロパティまたはフィールドを再構成するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> プロパティまたはフィールドを再構成するできますエクスポートを提供する、同じ場合 <see cref="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" /> が追加されたり削除されたり、 <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />。 そうしないと、 <see langword="false" />です。  
  
 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポートするエクスポートのコントラクト名を取得します。</summary>
        <value>インポートするエクスポートのコントラクト名。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポートするエクスポートのコントラクト型を取得します。</summary>
        <value>このインポートを予期しているエクスポートの型。 既定値は <see langword="null" />, 、タイプを調べて、このインポートに関連付けられているメンバーの種類を取得します。 ことを意味します。 型の場合 <see cref="T:System.Object" />, 、インポートには、エクスポート時の型が一致します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredCreationPolicy">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.CreationPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポーターが特定の必要があることを示す値を取得または <see cref="T:System.ComponentModel.Composition.CreationPolicy" /> このインポートを満たすために使用するエクスポートします。</summary>
        <value>次のいずれかの値です。  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Any" />, 、インポーターは、固有の仕様を必要としない場合 <see cref="T:System.ComponentModel.Composition.CreationPolicy" />します。 既定値です。  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.Shared" /> コンテナー内のすべてのパーツで使用されるすべてのエクスポートを共有することを要求するようにします。  
  
 <see cref="F:System.ComponentModel.Composition.CreationPolicy.NonShared" /> 使用されるすべてのエクスポートは、コンテナーで共有する必要があります。 この場合、各部分は、独自のインスタンスを受け取ります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.ImportSource Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.Composition.ImportSource Source" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ImportManyAttribute.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.ImportSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このインポートを満たすことがありますスコープを指定する値を設定します。</summary>
        <value>このインポートを満たすことがありますスコープを指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ComponentModel.Composition.ImportManyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>