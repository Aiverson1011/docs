<Type Name="FontConverter+FontNameConverter" FullName="System.Drawing.FontConverter+FontNameConverter">
  <TypeSignature Language="C#" Value="public sealed class FontConverter.FontNameConverter : System.ComponentModel.TypeConverter, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit FontConverter/FontNameConverter extends System.ComponentModel.TypeConverter implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontConverter.FontNameConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> さまざまな表現でフォント名を変換するために使用される型コンバーターです。</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNameConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> からこのコンバーターが呼び出されている環境に関する追加情報を抽出に使用できます。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティが返す可能性があります <see langword="null" />します。</param>
        <param name="sourceType">変換元の型。</param>
        <summary>このコンバーターが、指定した型のオブジェクトをコンバーターのネイティブな型に変換できるかどうかを判断します。</summary>
        <returns>
          <see langword="true" /> コンバーターが変換を実行できる場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> からこのコンバーターが呼び出されている環境に関する追加情報を抽出に使用できます。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティが返す可能性があります <see langword="null" />します。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> を使用して変換を実行するには</param>
        <param name="value">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトをコンバーターのネイティブ型に変換します。</summary>
        <returns>変換後のオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
        <forInternalUseOnly />
        <forInternalUseOnly />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> からこのコンバーターが呼び出されている環境に関する追加情報を抽出に使用できます。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティが返す可能性があります <see langword="null" />します。</param>
        <summary>このコンバーターが用に設計されたデータ型の標準値のセットを含むコレクションを取得します。</summary>
        <returns>有効な値の標準セットを含むコレクションまたは <see langword="null" />です。 既定値は、<see langword="null" /> です。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> からこのコンバーターが呼び出されている環境に関する追加情報を抽出に使用できます。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティが返す可能性があります <see langword="null" />します。</param>
        <summary>標準値のリストがから返されたかどうかを判断、 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> メソッドは、排他的なリストです。</summary>
        <returns>
          <see langword="true" /> コレクションが返された場合 <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />が使用可能な値の排他的なリスト。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リストが排他的である場合、その他の値の列挙型のように有効ではありません。 リストが排他的でないかどうかは、標準値のリストだけでなく他の有効な値がある <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> を提供します。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> からこのコンバーターが呼び出されている環境に関する追加情報を抽出に使用できます。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティが返す可能性があります <see langword="null" />します。</param>
        <summary>このオブジェクトがリストから選択できる値の標準セットをサポートしているかどうかを判断します。</summary>
        <returns>オブジェクトがサポートしている標準値セットを見つけるために <see langword="true" /> を呼び出す必要がある場合は <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アンマネージ リソースの解放またはリセットに関連付けられているアプリケーション定義のタスクを実行します。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>