<Type Name="ToolboxBitmapAttribute" FullName="System.Drawing.ToolboxBitmapAttribute">
  <TypeSignature Language="C#" Value="public class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToolboxBitmapAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ToolboxBitmapAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Microsoft Visual Studio のフォーム デザイナーなどのコンテナー内のコントロールを表すアイコンを指定できます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 適用できる、 <xref:System.Drawing.ToolboxBitmapAttribute> コントロールに Microsoft Visual Studio のフォームのデザイナーなどのコンテナーは、アイコンを取得できるようにするコントロールを表します。 アイコンのビットマップが単独でファイルに置くか、コントロールが含まれているアセンブリに埋め込まれています。 埋め込まれたビットマップのサイズ、コントロールのアセンブリ \(または別のファイル ストア\) に、16 × 16 を指定する必要があります。<xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> のメソッド、 <xref:System.Drawing.ToolboxBitmapAttribute> 小さな 16 で 16 のイメージまたは小さいイメージをスケーリングによって作成された大規模な 32 x 32 イメージ オブジェクトを返すことができます。  
  
 変更いないアイコンの異なるバージョンを使用して、アセンブリの異なるバージョンを使用する場合、 <xref:System.Drawing.ToolboxBitmapAttribute> バージョンごとにします。 使用してアセンブリを宣言する代わりに、 <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> または <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>, を指定し、 <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> 各アセンブリのバージョンの構成値。 この例では、ファイル名が示される、 <xref:System.Drawing.ToolboxBitmapAttribute> というサフィックスが付いたビットマップと解釈されます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Drawing.ToolboxBitmapAttribute> クラス `stop.bmp` のツールボックス アイコンとして、 `StopSignControl`です。 この例では 16 x 16 ピクセルのビットマップをという名前の `stop.bmp` c:\\ にします。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (string imageFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string imageFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFile">16 で 16 のビットマップを含むファイルの名前。</param>
        <summary>新しい初期化 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> 指定したファイルからイメージを持つオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、使用して、 <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> を設定するコンス トラクター `stop.bmp` のツールボックス アイコンとして、 `StopSignControl`です。 この例では 16 x 16 ピクセルのビットマップをという名前の `stop.bmp` c:\\ にします。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t">A <see cref="T:System.Type" /> ビットマップ リソースを定義しているアセンブリが検索されます。</param>
        <summary>新しい初期化 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトに基づいて、指定したアセンブリにリソースとして埋め込まれている 16 x 16 ビットマップです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターで指定された型を定義するアセンブリ内の埋め込みリソースを検索、 `t` パラメーター。 コンス トラクターは、名前空間は、名前空間を namespace.classname.bmp という名前のリソースを検索して指定されたクラスの定義を含む、 `t` パラメーター。 たとえば、コントロールが AssemblyA.dll で管理する場合は、し、コンス トラクターを探します AssemblyA.dll NamespaceA.ControlA.bmp という名前のリソース。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> のツールボックス アイコンをボタン コントロールのアイコンを設定するコンス トラクター、 <xref:System.Windows.Forms.UserControl> という名前 `StopSignControl3`します。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#3)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#3)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t">A <see cref="T:System.Type" /> ビットマップ リソースを定義しているアセンブリが検索されます。</param>
        <param name="name">埋め込みビットマップ リソースの名前。</param>
        <summary>新しい初期化 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトに基づいて、指定したアセンブリにリソースとして埋め込まれている 16 で 16 のビットマップです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターで指定された型を定義するアセンブリ内の埋め込みリソースを検索、 `t` パラメーター。 コンス トラクターは、名前空間は、名前空間を namespace.name という名前のリソースを検索して指定されたクラスの定義を含む、 `t` パラメーター。 たとえば、コントロールが AssemblyA.dll で管理するクラスであること、および"MyBitmap.bmp"が渡されることに、 `name` パラメーター。 コンス トラクターが NamespaceA.MyBitmap.bmp という名前のリソースの AssemblyA.dll を検索します。  
  
   
  
## 例  
 ' 次のコード例では、使用して、 <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> を設定するコンス トラクター `StopSignControl2.bmp` のツールボックス アイコンとして、 `StopSignControl2`です。 この例では 16 x 16 ピクセルのビットマップをという名前の `StopSignControl2.bmp` とその **"ビルド アクション"** プロパティに設定 **埋め込まれたリソース**します。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#2)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#2)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Drawing.ToolboxBitmapAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Drawing.ToolboxBitmapAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.ToolboxBitmapAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> の小さい画像と設定の大きいイメージを持つオブジェクト <see langword="null" />します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">テスト対象の <see cref="T:System.Object" />。</param>
        <summary>指定したオブジェクトがあるかどうかを示す、 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトし、は、これと同じ <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
        <returns>このメソッドが戻る <see langword="true" /> 場合 <paramref name="value" /> は両方とも、 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトし、は、これと同じ <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>これのハッシュ コードを取得 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
        <returns>そのためのハッシュ コード <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">この場合 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトない小さいイメージでは、このメソッドは、コンポーネントのパラメーターで指定したオブジェクトの型を定義するアセンブリ内のビットマップ リソースを検索します。 たとえば、コンポーネントのパラメーターにコントロールの型のオブジェクトを渡すと、このメソッドによって \[コントロールを定義するアセンブリが検索します。</param>
        <summary>小さな取得 <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
        <returns>小さな <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは名前空間は、名前空間を namespace.classname.bmp という名前のリソースを検索で指定されたオブジェクトの種類の定義を含む、 `component` パラメーター。 たとえば、コントロールの種類のオブジェクトを渡す場合に、 `component` パラメーター。 コントロールが AssemblyA.dll で管理する場合、このメソッドは NamespaceA.ControlA.bmp という名前のリソースの AssemblyA.dll を検索し。  
  
   
  
## 例  
 <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> メソッドの使用方法を次の例に示します。  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#4)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#4)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">この場合 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトないは小さいイメージがこのメソッドは、型パラメーターによって指定された型を定義するアセンブリでのビットマップ リソースを検索します。 たとえば、型パラメーターに typeof\(ControlA\) を渡すと、このメソッドによって \[コントロールを定義するアセンブリが検索します。</param>
        <summary>小さな取得 <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
        <returns>小さな <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは名前空間は、名前空間を namespace.classname.bmp という名前のリソースを検索で指定された型の定義を含む、 `type` パラメーター。 たとえば、typeof\(ControlA\) に渡す、 `type` パラメーター。 コントロールが AssemblyA.dll で管理する場合、このメソッドは NamespaceA.ControlA.bmp という名前のリソースの AssemblyA.dll を検索し。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">この場合 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトない小さいイメージでは、このメソッドは、コンポーネントのパラメーターで指定したオブジェクトの型を定義するアセンブリ内のビットマップ リソースを検索します。 たとえば、コンポーネントのパラメーターにコントロールの型のオブジェクトを渡すと、このメソッドによって \[コントロールを定義するアセンブリが検索します。</param>
        <param name="large">このメソッドが大きな画像を返すかどうかを指定します \(<see langword="true" />\) または小さな画像 \(<see langword="false" />\)。 小さいイメージは 16 × 16 で、大きなイメージは 32 個の 32 です。</param>
        <summary>小規模または大規模な取得 <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> オブジェクトに関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは名前空間は、名前空間を namespace.classname.bmp という名前のリソースを検索で指定されたオブジェクトの種類の定義を含む、 `component` パラメーター。 たとえば、コントロールの種類のオブジェクトを渡す場合に、 `component` パラメーター。 コントロールが AssemblyA.dll で管理する場合、このメソッドは NamespaceA.ControlA.bmp という名前のリソースの AssemblyA.dll を検索し。  
  
 この場合 <xref:System.Drawing.ToolboxBitmapAttribute> オブジェクトに既に大きな画像がない、このメソッドは、小さいイメージをスケーリングしてサイズの大きいイメージを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">この場合 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトない小さいイメージでは、このメソッドはコンポーネントの種類で指定された型を定義するアセンブリ内のビットマップ リソースを検索します。 たとえば、型パラメーターに typeof\(ControlA\) を渡すと、このメソッドによって \[コントロールを定義するアセンブリが検索します。</param>
        <param name="large">このメソッドが大きな画像を返すかどうかを指定します \(<see langword="true" />\) または小さな画像 \(<see langword="false" />\)。 小さいイメージは 16 × 16 で、大きなイメージは 32 個の 32 です。</param>
        <summary>小規模または大規模な取得 <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは名前空間は、名前空間を namespace.classname.bmp という名前のリソースを検索で指定された型の定義を含む、 `type` パラメーター。 たとえば、typeof\(ControlA\) に渡す、 `type` パラメーター。 コントロールが AssemblyA.dll で管理する場合、このメソッドは NamespaceA.ControlA.bmp という名前のリソースの AssemblyA.dll を検索し。  
  
 この場合 <xref:System.Drawing.ToolboxBitmapAttribute> オブジェクトに既に大きな画像がない、このメソッドは、小さいイメージをスケーリングしてサイズの大きいイメージを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, string imgName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, string imgName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="imgName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">この場合 <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトない小さいイメージでは、このメソッドはコンポーネントの種類を指定した型を定義するアセンブリに埋め込まれたビットマップ リソースを検索します。 たとえば、型パラメーターに typeof\(ControlA\) を渡すと、このメソッドによって \[コントロールを定義するアセンブリが検索します。</param>
        <param name="imgName">埋め込みビットマップ リソースの名前。</param>
        <param name="large">このメソッドが大きな画像を返すかどうかを指定します \(<see langword="true" />\) または小さな画像 \(<see langword="false" />\)。 小さいイメージは 16 × 16 で、大きなイメージは 32 個の 32 です。</param>
        <summary>小規模または大規模な取得 <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは名前空間は、名前空間を namespace.imgName という名前のリソースを検索で指定された型の定義を含む、 `type` パラメーター。 たとえば、typeof\(ControlA\) に渡す、 `type` パラメーターと imgName パラメーターに"MyBitmap.bmp"を渡したことです。 コントロールが AssemblyA.dll で管理する場合、このメソッドは NamespaceA.MyBitmap.bmp という名前のリソースの AssemblyA.dll を検索し。  
  
 この場合 <xref:System.Drawing.ToolboxBitmapAttribute> オブジェクトに既に大きな画像がない、このメソッドは、小さいイメージをスケーリングしてサイズの大きいイメージを作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageFromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImageFromResource (Type t, string imageName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImageFromResource(class System.Type t, string imageName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="t">このメソッドは、t パラメーターで指定された型を定義するアセンブリに埋め込まれたビットマップ リソースを検索します。 たとえば、t パラメーターに typeof\(ControlA\) を渡すと、このメソッドによって \[コントロールを定義するアセンブリが検索します。</param>
        <param name="imageName">埋め込みビットマップ リソースの名前。</param>
        <param name="large">このメソッドが、大きいイメージ \(true\) または小さな画像 \(false\) を返すかどうかを指定します。 小さいイメージは 16 × 16 で、大きなイメージはサイズが 32 × 32 です。</param>
        <summary>返します。、 <see cref="T:System.Drawing.Image" /> オブジェクトは、アセンブリに埋め込まれているビットマップ リソースに基づきます。</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> オブジェクトに基づいて、取得したビットマップです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは名前空間は、名前空間を namespace.imgName という名前のリソースを検索で指定された型の定義を含む、 `t` パラメーター。 たとえば、typeof\(ControlA\) に渡す、 `t` パラメーターは、"MyBitmap.bmp"を imgName パラメーターに渡します。 コントロールが AssemblyA.dll で管理する場合、このメソッドは NamespaceA.MyBitmap.bmp という名前のリソースの AssemblyA.dll を検索し。  
  
 このメソッドは、アセンブリに埋め込まれている 16 x 16 ビットマップ リソースを取得する対象としています。 ただし、埋め込みのビットマップは、16 x 16 のサイズを持つ必要はありません。 \(どのようなサイズ\) に関係なく、アセンブリから取得したビットマップは、小さいイメージと見なされます。 大きな画像は 32 x 32 のサイズに"s サイズ"のイメージをスケーリングによって作成されます。 大きなイメージは、アセンブリから取得されるビットマップのサイズに関係なく、32 個の 32 を常になります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetImage">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>小規模または大規模な取得 <see cref="T:System.Drawing.Image" /> に関連付けられた <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトです。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しい <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> オブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>