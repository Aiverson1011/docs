<Type Name="FontConverter" FullName="System.Drawing.FontConverter">
  <TypeSignature Language="C#" Value="public class FontConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>変換 <see cref="T:System.Drawing.Font" /> を 1 つのデータからオブジェクトを入力します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 型コンバーターを使用して、値のデータ型に変換します。 型コンバーターは、テキストと値の変換またはユーザーが選択できる値の一覧を提供することによってもデザイン時にプロパティの構成をサポートします。 アクセス、 <xref:System.Drawing.FontConverter> クラスを通じて、 <xref:System.ComponentModel.TypeDescriptor> クラスを呼び出して、 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Drawing.FontConverter> に変換する、 <xref:System.Drawing.Font> 文字列との間です。 この例は、Windows フォームで使用される設計されています。 フォームと呼び出しにこのコードを貼り付けて、 `ShowFontStringConversion` メソッドは、フォームの処理と <xref:System.Windows.Forms.Control.Paint> として e を渡すイベント <xref:System.Windows.Forms.PaintEventArgs>です。  
  
 [!code-cpp[System.Drawing.Converters\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Converters/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Converters\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Converters/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Converters\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Converters/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しい <see cref="T:System.Drawing.FontConverter" /> オブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセスするには、 <xref:System.Drawing.FontConverter> オブジェクトを通じて、 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName> メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキスト。 このオブジェクトを使用して、このコンバーターがから呼び出される環境に関する追加情報を取得します。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります <see langword="null" />します。</param>
        <param name="sourceType">変換する型。</param>
        <summary>このコンバーターが、指定した型のオブジェクトをコンバーターのネイティブな型に変換できるかどうかを決定します。</summary>
        <returns>このメソッドが戻る <see langword="true" /> このオブジェクトは、変換を実行できる場合です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <see langword="ITypeDescriptorContext" /> 書式指定コンテキストを提供するオブジェクト。</param>
        <param name="destinationType">A <see cref="T:System.Type" /> に変換する型を表すオブジェクト。</param>
        <summary>このコンバーターが、オブジェクトをコンテキストを使用して目的の型に変換できるかどうかを示す値を取得します。</summary>
        <returns>このメソッドが戻る <see langword="true" /> このコンバーターが変換を実行できる場合は、それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `context` パラメーターを使用すると、このコンバーターが呼び出されている環境についての追加情報を抽出できます。 これは、 `null`, 、常に確認します。 また、コンテキスト オブジェクトのプロパティを返す `null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">フォーマッタ コンテキスト。 このオブジェクトは、このコンバーターはから呼び出される環境に関する追加情報を取得できます。 可能性があります<see langword="null" />ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります<see langword="null" />です。</param>
        <param name="culture">A<see langword="CultureInfo" />フォントを表すために使用されるカルチャを指定するオブジェクト。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトをコンバーターのネイティブ型に変換します。</summary>
        <returns>変換後のオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">変換を実行できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキスト。 このオブジェクトを使用して、このコンバーターがから呼び出される環境に関する追加情報を取得します。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります <see langword="null" />します。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> オブジェクトを表すために使用されるカルチャを指定するオブジェクト。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <param name="destinationType">オブジェクトに変換するデータ型。</param>
        <summary>指定したオブジェクトを別の型に変換します。</summary>
        <returns>変換後のオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最も一般的な型変換とは、文字列型との間です。 既定の実装、 <xref:System.Object.ToString%2A> オブジェクトのメソッド、オブジェクトが有効な場合、および変換先の型が文字列である場合。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">変換に失敗しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキストを指定する、型記述子を返します。</param>
        <param name="propertyValues">新しいプロパティ値のディクショナリ。 ディクショナリには、一連の名前と値のペアが含まれる、各プロパティのいずれかから返される、 <see cref="Overload:System.Drawing.FontConverter.GetProperties" /> メソッドです。</param>
        <summary>オブジェクトのプロパティ値の指定したセットを使用して、この型のオブジェクトを作成します。</summary>
        <returns>新しく作成されたオブジェクトまたは <see langword="null" /> 場合は、オブジェクトを作成できませんでした。 既定の実装では、<see langword="null" /> が返されます。  
  
 <see cref="M:System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> 変更可能なプロパティを持つ変更できないオブジェクトを作成するのに役立ちます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FontConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.Finalize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>により、 <see cref="T:System.Drawing.FontConverter" /> リソースを解放し、前に他のクリーンアップ操作を実行しようとする、 <see cref="T:System.Drawing.FontConverter" /> がガベージ コレクションによって回収されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキストを指定する、型記述子を返します。</param>
        <summary>このオブジェクトの値を変更するへの呼び出しが必要かどうかを判断、 <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> 新しい値を作成します。</summary>
        <returns>このメソッドが戻る <see langword="true" /> 場合、 <see langword="CreateInstance" /> がこのオブジェクトの 1 つまたは複数のプロパティに対して行われます。 それ以外の場合、変更、オブジェクトを呼び出す必要があります <see langword="false" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキストを指定する、型記述子を返します。</param>
        <param name="value">プロパティを取得するオブジェクトの値。</param>
        <param name="attributes">配列 <see cref="T:System.Attribute" /> プロパティを説明するオブジェクト。</param>
        <summary>この型のプロパティのセットを取得します。 既定では、型に返されるすべてのプロパティはありません。</summary>
        <returns>このデータ型を公開するプロパティのセット。 これを返すことがあるかどうかのプロパティを公開する必要がありますはない、 <see langword="null" />です。 既定の実装を常に <see langword="null" />します。  
  
 このメソッドの簡単な実装を呼び出すことができます、 <see cref="Overload:System.ComponentModel.TypeConverter.GetProperties" /> 正しいデータ型の方法です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキストを指定する、型記述子を返します。</param>
        <summary>このオブジェクトにプロパティがサポートしているかどうかを決定します。 既定値は、<see langword="false" /> です。</summary>
        <returns>このメソッドが戻る <see langword="true" /> 場合、 <see cref="M:System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" /> メソッドがこのオブジェクトのプロパティを検索すると呼ばれる以外にする必要があります <see langword="false" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>