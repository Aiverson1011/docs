<Type Name="ImageConverter" FullName="System.Drawing.ImageConverter">
  <TypeSignature Language="C#" Value="public class ImageConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Drawing.ImageConverter" /> 変換するために使用するクラスは、 <see cref="T:System.Drawing.Image" /> を 1 つのデータからオブジェクトを入力します。 このクラスにアクセス、 <see cref="T:System.ComponentModel.TypeDescriptor" /> オブジェクトです。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.ImageConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="sourceType">A <see cref="T:System.Type" /> から変換する型を指定します。</param>
        <summary>決定するかどうかこの <see cref="T:System.Drawing.ImageConverter" /> に指定した型のインスタンスを変換することができます、 <see cref="T:System.Drawing.Image" />, 、指定したコンテキストを使用しています。</summary>
        <returns>このメソッドが戻る <see langword="true" /> この <see cref="T:System.Drawing.ImageConverter" /> 変換を実行することができます。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` 場合にのみ、 `sourceType` がバイト配列と等しい。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="destinationType">A <see cref="T:System.Type" /> に変換する型を指定します。</param>
        <summary>決定するかどうかこの <see cref="T:System.Drawing.ImageConverter" /> に変換できます、 <see cref="T:System.Drawing.Image" /> 、指定した型のインスタンスを指定したコンテキストを使用します。</summary>
        <returns>このメソッドが戻る <see langword="true" /> この <see cref="T:System.Drawing.ImageConverter" /> 変換を実行することができます。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` 場合にのみ、 `sourceType` はバイト配列または文字列と同じです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> 特定のカルチャに関する情報を保持します。</param>
        <param name="value">変換される <see cref="T:System.Object" />。</param>
        <summary>指定したオブジェクトを <see cref="T:System.Drawing.Image" />です。</summary>
        <returns>返すこのメソッドが成功したかどうか、 <see cref="T:System.Drawing.Image" /> 、指定したオブジェクトを変換することによって作成されたことです。 それ以外の場合、例外がスローされます。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">書式指定コンテキスト。 このオブジェクトからこのコンバーターが呼び出される環境に関する詳細情報を表示できます。 これは、場合があります <see langword="null" />, ので、常に確認する必要があります。 また、コンテキスト オブジェクトのプロパティを返すことがあります <see langword="null" />します。</param>
        <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> 特定カルチャで使用される書式指定規則を指定するオブジェクト。</param>
        <param name="value">変換対象の <see cref="T:System.Drawing.Image" />。</param>
        <param name="destinationType">
          <see cref="T:System.Type" /> を変換した後の <see cref="T:System.Drawing.Image" />。</param>
        <summary>変換、 <see cref="T:System.Drawing.Image" /> \(またはオブジェクトにキャスト可能な <see cref="T:System.Drawing.Image" />\) 指定した型にします。</summary>
        <returns>このメソッドは、変換後のオブジェクトを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最も一般的な型変換とは、文字列型との間です。 既定の実装、 <xref:System.Object.ToString%2A> オブジェクトのメソッド、オブジェクトが有効な場合、および変換先の型が文字列である場合。 スローされている場合、このメソッドでは、指定したオブジェクトを変換先の型に変換することはできません、 <xref:System.NotSupportedException> 例外です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">変換を完了できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキストを指定する、型記述子を返します。</param>
        <param name="value">プロパティを取得するオブジェクトの値。</param>
        <param name="attributes">配列 <see cref="T:System.Attribute" /> プロパティを説明するオブジェクト。</param>
        <summary>この型の一連のプロパティを取得します。</summary>
        <returns>このデータ型を公開するプロパティのセット。 これを返すことができるかどうかのプロパティを公開する必要がありますはない、 <see langword="null" />です。 既定の実装を常に <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、型は任意のプロパティを返しません。 このメソッドの簡単な実装を呼び出す、 <xref:System.ComponentModel.TypeConverter.GetProperties%2A> 正しいデータ型の方法です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキストを指定する、型記述子を返します。</param>
        <summary>このオブジェクトにプロパティがサポートしているかどうかを示します。 これは、既定では、 <see langword="false" />です。</summary>
        <returns>このメソッドが戻る <see langword="true" /> 場合、 <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> このオブジェクトのプロパティを検索するメソッドを呼び出す必要があります。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>