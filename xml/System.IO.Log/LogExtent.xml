<Type Name="LogExtent" FullName="System.IO.Log.LogExtent">
  <TypeSignature Language="C#" Value="public sealed class LogExtent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LogExtent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.LogExtent" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ログ データを格納しているディスク エクステントを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Log.LogStore> インスタンスは、<xref:System.IO.Log.LogExtent> により表されるディスク エクステントのコレクションにデータを保存します。 個々の <xref:System.IO.Log.LogExtent> は 1 つの <xref:System.IO.Log.LogStore> だけに関連付けられており、同一の <xref:System.IO.Log.LogExtent> 内の  <xref:System.IO.Log.LogStore> オブジェクトのサイズはすべて同じです。 領域が追加され、エクステント増加分が <xref:System.IO.Log.LogStore> インスタンスから削除されます。  
  
 <xref:System.IO.Log.LogExtent> オブジェクトはディスク上でファイルとして表されますが、通常のファイルとして移動したり削除したりすることはできません。<xref:System.IO.Log.LogExtent> インスタンスを削除するには、そのインスタンスを格納する <xref:System.IO.Log.LogExtentCollection> からインスタンスを削除します。  
  
   
  
## 例  
 この例では、<xref:System.IO.Log.LogExtent> クラスを使用して、エクステントをログ シーケンスに追加およびエミュレートする方法を示します。  
  
 [!code-csharp[S\_UELogRecordSequence\#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S\_UELogRecordSequence\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Log.LogExtentCollection" />
    <altmember cref="T:System.IO.Log.LogStore" />
  </Docs>
  <Members>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.IO.Log.LogExtent" /> インスタンスの完全修飾パスを取得します。</summary>
        <value>この <see cref="T:System.IO.Log.LogExtent" /> インスタンスの完全修飾パス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Log.LogExtent> オブジェクトはディスク上でファイルとして表されますが、通常のファイルとして移動したり削除したりすることはできません。<xref:System.IO.Log.LogExtent> インスタンスを削除するには、そのインスタンスを格納する <xref:System.IO.Log.LogExtentCollection> からインスタンスを削除します。  
  
   
  
## 例  
 この例では、<xref:System.IO.Log.LogExtent> クラスを使用して、エクステントをログ シーケンスに追加およびエミュレートする方法を示します。  
  
 [!code-csharp[S\_UELogRecordSequence\#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S\_UELogRecordSequence\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public long Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Size" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.IO.Log.LogExtent" /> インスタンスのサイズをバイト単位で取得します。</summary>
        <value>この <see cref="T:System.IO.Log.LogExtent" /> インスタンスのサイズ \(バイト単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 この例では、<xref:System.IO.Log.LogExtent> クラスを使用して、エクステントをログ シーケンスに追加およびエミュレートする方法を示します。  
  
 [!code-csharp[S\_UELogRecordSequence\#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S\_UELogRecordSequence\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.IO.Log.LogExtentState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.LogExtentState State" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.LogExtent.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.LogExtentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.IO.Log.LogExtent" /> インスタンスの状態を取得します。</summary>
        <value>この <see cref="T:System.IO.Log.LogExtent" /> インスタンスの状態。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 この例では、<xref:System.IO.Log.LogExtent> クラスを使用して、エクステントをログ シーケンスに追加およびエミュレートする方法を示します。  
  
 [!code-csharp[S\_UELogRecordSequence\#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelogrecordsequence/cs/mylogrecordsequence.cs#0)]
 [!code-vb[S\_UELogRecordSequence\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelogrecordsequence/vb/mylogrecordsequence.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>