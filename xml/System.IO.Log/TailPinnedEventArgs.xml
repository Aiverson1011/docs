<Type Name="TailPinnedEventArgs" FullName="System.IO.Log.TailPinnedEventArgs">
  <TypeSignature Language="C#" Value="public sealed class TailPinnedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TailPinnedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.IO.Log.TailPinnedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Log</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.IO.Log.IRecordSequence.TailPinned" /> イベントのデータを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IO.Log.IRecordSequence.TailPinned> イベントは、レコード シーケンスが領域を使い果たしたときに発行できます。 このイベントが発行されると、シーケンスの末尾 \(つまり、基本シーケンス番号\) が領域の解放のために前方に移動します。  
  
   
  
## 例  
 この例では、<xref:System.IO.Log.LogRecordSequence.TailPinned> イベントを使用してログ シーケンスの領域を解放する方法を示します。  
  
```  
recordSequence.RetryAppend = true;  
recordSequence.TailPinned += new EventHandler<TailPinnedEventArgs>(HandleTailPinned);  
  
void HandleTailPinned(object sender, TailPinnedEventArgs tailPinnedEventArgs)  
{  
   // tailPinnedEventArgs.TargetSequenceNumber is the target   
   // sequence number to free up space to.    
   // However, this sequence number is not necessarily valid.  We have  
   // to use this sequence number as a starting point for finding a  
   // valid point within the log to advance toward. You need to  
   // identify a record with a sequence number equal to, or greater  
   // than TargetSequenceNumber; let's call this   
   // realTargetSequenceNumber. Once found, move the base  
  
   recordSequence.AdvanceBaseSequenceNumber(realTargetSequenceNumber);  
  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TailPinnedEventArgs (System.IO.Log.SequenceNumber sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Log.SequenceNumber sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Log.TailPinnedEventArgs.#ctor(System.IO.Log.SequenceNumber)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.IO.Log.SequenceNumber" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">対象のシーケンス番号。</param>
        <summary>
          <see cref="T:System.IO.Log.TailPinnedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSequenceNumber">
      <MemberSignature Language="C#" Value="public System.IO.Log.SequenceNumber TargetSequenceNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Log.SequenceNumber TargetSequenceNumber" />
      <MemberSignature Language="DocId" Value="P:System.IO.Log.TailPinnedEventArgs.TargetSequenceNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Log</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Log.SequenceNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>末尾を移動する必要があるシーケンス番号を取得します。</summary>
        <value>末尾を移動する必要があるシーケンス番号。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>