<Type Name="RegisterAssembly" FullName="Microsoft.Build.Tasks.RegisterAssembly">
  <TypeSignature Language="C#" Value="public class RegisterAssembly : Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension, System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegisterAssembly extends Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension implements class System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.RegisterAssembly" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Tasks.AppDomainIsolatedTaskExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ITypeLibExporterNotifySink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <c>RegisterAssembly</c> タスクを実装します。 プロジェクト ファイルにある <c>RegisterAssembly</c> 要素を使用して、このタスクを作成し実行します。 使用法とパラメーター情報については、「[RegisterAssembly タスク](http://msdn.microsoft.com/ja-jp/ba5f19ac-6764-4d28-9b79-a86de58f8987)」をご覧ください。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Framework64\/\< バージョン \>\]、\[RegisterAssemblyTask は 32 ビット コンポーネントとして登録されている COM オブジェクトのライブラリを解決することはできません。 フレームワーク\/\< バージョン \>\]、\[RegisterAssemblyTask は 64 ビット コンポーネントとして登録されている COM オブジェクトのライブラリを解決することはできません。  
  
 たとえば、64 ビット コンピューター上で 32 ビット コンポーネントとして ClassLibrary1 と呼ばれる COM オブジェクトのライブラリを登録、Visual Studio を実行、x64 にターゲットを変更した場合は次のエラー ビルドに失敗しました。  
  
 `ClassLibrary1.dll is not a valid assembly`  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegisterAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.RegisterAssembly.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:Microsoft.Build.Tasks.RegisterAssembly" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Assemblies">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] Assemblies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] Assemblies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.RegisterAssembly.Assemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>COM に登録するアセンブリを取得または設定します。</summary>
        <value>COM に登録するアセンブリ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssemblyListFile">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem AssemblyListFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem AssemblyListFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.RegisterAssembly.AssemblyListFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>情報取得または設定間の状態に関する、<c>RegisterAssembly</c>タスクおよび[UnregisterAssembly](http://msdn.microsoft.com/ja-jp/04f549dd-3591-4dda-9c3a-cf6ede9df2c3)タスク。 これにより、<c>RegisterAssembly</c> タスクで登録に失敗したアセンブリを <c>UnregisterAssembly</c> タスクで登録解除しようとすることを防止できます。</summary>
        <value>
          <c>UnregisterAssembly</c> タスクで適切なクリーンアップを行うために必要な状態情報。</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CreateCodeBase">
      <MemberSignature Language="C#" Value="public bool CreateCodeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateCodeBase" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.RegisterAssembly.CreateCodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タスクで Codebase エントリをレジストリに作成するかどうかを指定するブール値を取得または設定します。Codebase エントリは、グローバル アセンブリ キャッシュにインストールされていないアセンブリのファイル パスを指定するものです。</summary>
        <value>タスクで Codebase エントリをレジストリに作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 登録しようとしているアセンブリを、後でグローバル アセンブリ キャッシュにインストールする場合は、このオプションを指定する必要はありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.RegisterAssembly.Execute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <c>RegisterAssembly</c> タスクを実行します。</summary>
        <returns>タスクの実行が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ReportEvent">
      <MemberSignature Language="C#" Value="public void ReportEvent (System.Runtime.InteropServices.ExporterEventKind kind, int code, string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportEvent(valuetype System.Runtime.InteropServices.ExporterEventKind kind, int32 code, string msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.RegisterAssembly.ReportEvent(System.Runtime.InteropServices.ExporterEventKind,System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Runtime.InteropServices.ExporterEventKind" />
        <Parameter Name="code" Type="System.Int32" />
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="kind">タイプ ライブラリをエクスポートするときにタイプ ライブラリ エクスポーターが実行するコールバックを記述します。</param>
        <param name="code">エクスポート イベントのエラー コード。</param>
        <param name="msg">エクスポート イベントのメッセージ。</param>
        <summary>タイプ ライブラリのエクスポート イベントを報告するためのコールバック メソッド。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ResolveRef">
      <MemberSignature Language="C#" Value="public object ResolveRef (System.Reflection.Assembly assemblyToResolve);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ResolveRef(class System.Reflection.Assembly assemblyToResolve) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.RegisterAssembly.ResolveRef(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyToResolve" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assemblyToResolve">タイプ ライブラリの検索対象のアセンブリ。</param>
        <summary>指定されたアセンブリのタイプ ライブラリを検索するためのコールバック メソッド。</summary>
        <returns>常に <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定したアセンブリが常に COM 相互運用機能のない登録されていることを示すエラーをログに記録します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="TypeLibFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] TypeLibFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] TypeLibFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.RegisterAssembly.TypeLibFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Tasks.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したアセンブリから生成するタイプ ライブラリを取得または設定します。</summary>
        <value>指定したアセンブリから生成するタイプ ライブラリ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 生成されたタイプ ライブラリには、アセンブリ内で定義されているアクセス可能な型の定義が含まれています。 タイプ ライブラリは、次のいずれかが true の場合にのみ生成されます。  
  
-   その名前のタイプ ライブラリは、その場所に存在しません。  
  
-   タイプ ライブラリが存在しますが、渡されたアセンブリよりも古い。  
  
 タイプ ライブラリが渡されたアセンブリよりも新しい場合は、新しい 1 つは作成されませんが、アセンブリが登録されたままです。  
  
 このプロパティが指定されている場合は、同じ数の項目のが必要、 <xref:Microsoft.Build.Tasks.RegisterAssembly.Assemblies%2A> プロパティと、タスクは失敗します。 入力値が指定されていない場合に、既定で、アセンブリの名前が使用され、.tlb に項目の拡張機能を変更します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>