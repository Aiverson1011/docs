<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>メソッド、プロパティ、およびナビゲーションをサポートするためにイベントが含まれています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService> ブラウザー スタイルのナビゲーションのコンテキスト内でコンテンツをダウンロードする機能をカプセル化します。  
  
 コンテンツはの任意の型を指定できる [!INCLUDE[TLA2#tla_winfx](~/includes/tla2sharptla-winfx-md.md)] オブジェクトおよび [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)] ファイルです。 ページはナビゲーションのためのパッケージ コンテンツにする方法として推奨されるただし、一般に、\(を参照してください <xref:System.Windows.Controls.Page>\)。  
  
 コンテンツに移動するオブジェクトのインスタンスを提供することのオーバー ロードを呼び出すことにより、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 、オブジェクトを受け取るメソッド。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName>  
  
 また、コンテンツもありますに相対パスを渡すことによって移動または絶対 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] のいずれかに、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> を受け取るメソッド オーバー ロード、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=fullName>  
  
 ときのコンテンツに移動して [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], 、<xref:System.Windows.Navigation.NavigationService> はコンテンツを含むオブジェクトを返します。  
  
 ナビゲーションの有効期間は、次のイベントを追跡できます。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>。  
  
 ナビゲーションが行われるたびにすべてのイベントが発生します。\(キャンセル、停止、または失敗\) は、発生するイベントのセットをナビゲーション \(コンテンツまたはコンテンツ フラグメント\) に発生して、ナビゲーションの完了方法の種類によって決まります。  
  
 次の図は、これらのイベントが発生するシーケンスを示しています。  
  
 529b7e47-de7a-43a8-a4a8-3adfa6cafbca  
  
 中または、ナビゲーション後 <xref:System.Windows.Navigation.NavigationService> は、移動先を含むコンテンツに関する情報を提供、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 移動先のコンテンツの \(<xref:System.Windows.Navigation.NavigationService.Source%2A>\)、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] の現在のコンテンツ \(<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>\)、およびオブジェクトに移動したコンテンツが含まれていますが \(<xref:System.Windows.Navigation.NavigationService.Content%2A>\)。  
  
 コンテンツの移動、 <xref:System.Windows.Navigation.NavigationService> ナビゲーション履歴にエントリとしてナビゲーションを記録します。 呼び出して、いずれか、新しいナビゲーションが発生したときに、ナビゲーション履歴をバックアップするエントリが追加、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> メソッドを呼び出すことによって、ナビゲーション履歴内のエントリに移動して、または <xref:System.Windows.Navigation.NavigationService.GoForward%2A>です。 呼び出してナビゲーション履歴にエントリに移動して、ナビゲーション履歴にエントリが追加 <xref:System.Windows.Navigation.NavigationService.GoBack%2A>します。<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A><xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> あるかどうか前に、ナビゲーション履歴では、それぞれを報告します。 また、最新のエントリに呼び出してナビゲーション履歴を削除できます <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>します。  
  
 既定では、 <xref:System.Windows.Navigation.NavigationService> ナビゲーション履歴には、コンテンツ オブジェクトのインスタンスは保存されません。 代わりに、 <xref:System.Windows.Navigation.NavigationService> ナビゲーション履歴を使用してナビゲーションが毎回、コンテンツ オブジェクトの新しいインスタンスを作成します。 この動作は、数値が大きいとコンテンツの大部分は、移動先ときに過剰なメモリの消費量を回避する設計されています。 その結果、次に、コンテンツの状態は 1 つのナビゲーションからに記憶されません。 ただし、 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] ナビゲーション履歴に特定のコンテンツの状態の一部を格納する、いくつかの方法を提供します。  
  
 使用して <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, 、単一のページ インスタンスの状態の複数のセットも覚えておくことができます。  
  
 <xref:System.Windows.Navigation.NavigationService> `sealed` クラスし、そのため、インスタンス化できません。 代わりに、 <xref:System.Windows.Navigation.NavigationService> のナビゲーターのナビゲーションを有効にするために使用します。[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], 、2 つのナビゲーターがある: <xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>です。  
  
 視覚的に、 [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] を使用して [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] として統合されたユーザー エクスペリエンスを提供するナビゲーター。 物理的に、ただし、 [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] を実際に使用 <xref:System.Windows.Navigation.NavigationWindow> ナビゲーター; として、 <xref:System.Windows.Application.MainWindow%2A> のプロパティ、 [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] で実行されている [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] への参照を返します、 <xref:System.Windows.Navigation.NavigationWindow>, 、およびナビゲーション履歴で管理されている、 <xref:System.Windows.Navigation.NavigationWindow> で管理されているナビゲーション履歴に統合されて [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] 次の方法で。  
  
-   コンテンツへの移動が呼び出すことによって <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, 、<xref:System.Windows.Navigation.NavigationService.GoBack%2A>, 、および <xref:System.Windows.Navigation.NavigationService.GoForward%2A> 内から、 [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] 関連のナビゲーション履歴エントリに追加されます [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] ナビゲーション履歴です。  
  
-   内のエントリ、 [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] が選択されている [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] により <xref:System.Windows.Navigation.NavigationService> に戻る\] または \[転送をこれらのエントリに関連付けられているコンテンツに移動します。  
  
> [!NOTE]
>  A <xref:System.Windows.Controls.Frame> そのナビゲーション履歴を提供したり、それをホストする、ナビゲーターのナビゲーション履歴を使用します。 場合 <xref:System.Windows.Controls.Frame> 独自のナビゲーション履歴には、表示できるように、独自のナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] ナビゲーション履歴にエントリをナビゲートするこれらのエントリは、ホストのナビゲーターのナビゲーション履歴に追加されません \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>, 、[!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]\) と、その結果、ナビゲーションに移動することはできません [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 各 \(を参照してください <xref:System.Windows.Controls.Frame.JournalOwnership%2A>\)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> を特定のコンテンツに関連付けられているアプリケーション定義の状態を表すオブジェクト。</param>
        <summary>バックアップが含まれるナビゲーション履歴にエントリを追加、 <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, 、<xref:System.Windows.Navigation.CustomContentState>, 、および <xref:System.Windows.Navigation.IProvideCustomContentState> 、現在のコンテンツの状態のセットを複数記憶のために使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> <see langword="null" />, 、および <see cref="T:System.Windows.Navigation.CustomContentState" /> から返されたオブジェクトがない <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />します。</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション履歴には、少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ナビゲーション履歴に少なくとも 1 つのエントリがある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> ナビゲーション履歴には、少なくとも 1 つのエントリがあるかどうかを確認します。 このプロパティを呼び出す前に確認してください <xref:System.Windows.Navigation.NavigationService.GoBack%2A>場合 <xref:System.Windows.Navigation.NavigationService.GoBack%2A> と呼ばれるナビゲーション履歴にエントリがないと、 <xref:System.InvalidOperationException> がスローされます。  
  
> [!NOTE]
>  複数のナビゲーターのナビゲーション履歴が共有されている場合 \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)、最も最近のエントリ背面にナビゲーション履歴が追加されていないによって、 <xref:System.Windows.Navigation.NavigationService> ナビゲーターの現在のです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション履歴に少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ナビゲーション履歴に少なくとも 1 つのエントリがある場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> ナビゲーション履歴に少なくとも 1 つのエントリがあるかどうかを確認します。 このプロパティを呼び出す前に確認してください <xref:System.Windows.Navigation.NavigationService.GoForward%2A>場合 <xref:System.Windows.Navigation.NavigationService.GoForward%2A> と呼ばれるナビゲーション履歴にエントリがないと、 <xref:System.InvalidOperationException> がスローされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のコンテンツを格納しているオブジェクトへの参照を設定します。</summary>
        <value>現在のコンテンツを格納しているオブジェクトへの参照であるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンテンツは、2 つの方法で設定できます。  
  
-   オブジェクトへの参照を設定します。  
  
-   呼び出すことによって、直接 <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, 、<xref:System.Windows.Navigation.NavigationService.GoBack%2A>, 、または <xref:System.Windows.Navigation.NavigationService.GoForward%2A>です。  
  
 設定 <xref:System.Windows.Navigation.NavigationService> ナビゲーションは非同期であるために、新しいナビゲーション; を開始する <xref:System.Windows.Navigation.NavigationService.Content%2A> 直後に設定されていることを検査する場合、値が返されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 Uniform Resource Identifier (URI) の最後に移動したコンテンツです。</summary>
        <value>A <see cref="T:System.Uri" /> 最後に移動したを使用してに移動する場合の URI。 そうしないと、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> までを別のナビゲーション プロパティは変更されません [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] が正常に完了します。  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> フラグメントのみで設定できる [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ フラグメントへのナビゲーションが始まると、すぐに発生する場合、目的のフラグメントは現在のコンテンツまたはソースの後に発生する XAML コンテンツが読み込まれた目的のフラグメントが別のコンテンツがある場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、コンテンツ フラグメントは、コンテンツは名前に含まれる <xref:System.Windows.UIElement>, 、これは、 <xref:System.Windows.UIElement> が <xref:System.Windows.FrameworkElement.Name%2A> 属性が設定されて例。  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 移動する、 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] フラグメントを提供することによって、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] を次の形式でのサフィックス。  
  
 \#*FragmentName*  
  
 次の例を示しています、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] コンテンツ フラグメントを参照します。  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 ソース ページが読み込まれた後 \(後 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> イベントが発生\)、フラグメント ナビゲーションが開始され、 <xref:System.Windows.Navigation.NavigationService> 特定しようと、 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] フラグメントです。 場合、 [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] フラグメントが見つかると、 <xref:System.Windows.Navigation.NavigationService> コンテンツ ナビゲーターに指示 \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\) フラグメントを表示します。 この動作を変更する場合は、処理できます <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> 独自フラグメント ナビゲーション動作を提供します。<xref:System.Windows.Navigation.NavigationService.FragmentNavigation> 渡される、 <xref:System.Windows.Navigation.FragmentNavigationEventArgs> この目的で使用されるプロパティを公開するパラメーターを含みます。  
  
-   このナビゲーション サービスを所有しているナビゲーター \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)。  
  
-   フラグメントの名前です。  
  
 処理できる <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> 既定をオーバーライドする [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 実装を独自のカスタム実装でのフラグメントします。 これを行う場合は、設定する必要があります。 <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> に `true`。 そうしないと、既定値 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] フラグメントの処理動作を適用します。  
  
 内からナビゲーションを直接実行を回避する必要があります、 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> イベント ハンドラーです。<xref:System.Windows.Navigation.NavigationService.FragmentNavigation> から新しいナビゲーションを開始して、既存の移動中に発生した、 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> イベント ハンドラーを引き起こす可能性のある入れ子になったナビゲーションを作成、 <xref:System.ExecutionEngineException> がスローされます。 代わりに、直接開始できましていないナビゲーション項目を使用して非同期操作を作成することで、 <xref:System.Windows.Threading.Dispatcher>です。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> を発生させます <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>, も生成 <xref:System.Windows.Application.FragmentNavigation?displayProperty=fullName> でイベントを <xref:System.Windows.Application> オブジェクトです。  
  
> [!IMPORTANT]
>  フラグメント ナビゲーションはサポートされていませんゆるやか [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページ \(マークアップのみ [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] を持つファイル `Page` ルート要素として\)、次の場合。  
>   
>  •、疎でフラグメントにナビゲートする場合に [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページです。  
>   
>  • から、緩やかなときに [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 緩やかな別のフラグメントにページ [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページです。  
>   
>  ただし、緩やかな [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ページは、独自のフラグメントに移動できます。  
  
   
  
## 例  
 次の例は、処理する方法を示しています。 <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> カスタム フラグメント ナビゲーション動作を提供します。 この場合は、例が、エラーが表示されます [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] \] ページで、ソースのフラグメント [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] ページが見つかりません。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <see cref="T:System.Windows.DependencyObject" /> ナビゲーターによってホストされているコンテンツにします。</param>
        <summary>参照を取得、 <see cref="T:System.Windows.Navigation.NavigationService" /> の内容が含まれていますが、指定したナビゲーターの <see cref="T:System.Windows.DependencyObject" />です。</summary>
        <returns>参照、 <see cref="T:System.Windows.Navigation.NavigationService" /> の内容が含まれていますが、指定したナビゲーターの <see cref="T:System.Windows.DependencyObject" />; できる <see langword="null" /> 場合によっては \(「解説」を参照してください\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ナビゲーターは、 <xref:System.Windows.Navigation.NavigationService> コンテンツ ナビゲーションを処理します。[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 2 つのナビゲーターが: <xref:System.Windows.Navigation.NavigationWindow> と <xref:System.Windows.Controls.Frame>です。 ナビゲーションの要求を処理し、ナビゲーションの有効期間を管理、ナビゲーターを使用して、 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] として実装されているナビゲーション サービス、 <xref:System.Windows.Navigation.NavigationService> クラスです。 ナビゲーターによってホストされているコンテンツがナビゲーターへの参照を取得できます <xref:System.Windows.Navigation.NavigationService> を呼び出して、 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> メソッドです。  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> 返します `null` ときに、 `dependencyObject`:  
  
-   <xref:System.Windows.Navigation.NavigationWindow>です。  
  
-   <xref:System.Windows.Controls.Frame> です。  
  
    1.  別のナビゲーターによってホストされます。  
  
    2.  その <xref:System.Windows.Controls.Frame.JournalOwnership%2A> プロパティに設定 <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>します。  
  
-   ナビゲーターによってホストされているコンテンツの一部ではありません。  
  
 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 参照を取得するための 2 つのショートカットを提供しています、 <xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService> への移動を処理する、 <xref:System.Windows.Controls.Page> からアクセスできる、 <xref:System.Windows.Controls.Page> 自体の値を取得することによって、 <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName> プロパティです。  
  
-   <xref:System.Windows.Navigation.NavigationService> で使用されている、 <xref:System.Windows.Controls.Frame> の値を取得することによってアクセスできるナビゲーションを処理する、 <xref:System.Windows.Controls.Frame.NavigationService%2A> プロパティです。  
  
   
  
## 例  
 例を次にどのように、 <xref:System.Windows.Controls.UserControl> ナビゲーション サービスを呼び出すことによって取得できる <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>です。  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="dependencyObject" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>最新のエントリに移動背面にナビゲーション履歴に存在する場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出しの前に <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, 、 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます。  
  
   
  
## 例  
 次の例、最新のエントリに移動背面にナビゲーション履歴に存在する場合。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>1 つを使用する必要がある場合は、ナビゲーション履歴に最新のエントリに移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出しの前に <xref:System.Windows.Navigation.NavigationService.GoForward%2A>, 、 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> ナビゲーション履歴にエントリがあるかどうかを決定するプロパティを検査することができます。  
  
   
  
## 例  
 次の例は、1 つが存在する場合、ナビゲーション履歴に最新のエントリに移動します。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動したコンテンツが読み込まれ、解析されて、レンダリングが開始されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理する <xref:System.Windows.Navigation.NavigationService.LoadCompleted> 読み込み完了時に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、 <xref:System.Windows.Navigation.NavigationEventArgs> に渡されるオブジェクト、 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> イベント ハンドラーが含まれています。  
  
-   コンテンツとその [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]します。  
  
-   ナビゲーター \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)。  
  
-   追加のデータは、ナビゲーションがいずれかを呼び出すことによって開始された場合、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> または <xref:System.Windows.Navigation.NavigationService.Navigate%2A>です。  
  
-   応答の詳細 \(を使用して、 <xref:System.Net.WebResponse> オブジェクト\)。  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> \[ソース\] ページが見つからないか、読み込まれると、その場合とは発生しません <xref:System.Windows.Navigation.NavigationService.NavigationFailed> が発生します。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> を発生させます <xref:System.Windows.Navigation.NavigationService.LoadCompleted>, も生成 <xref:System.Windows.Application.LoadCompleted?displayProperty=fullName> でイベントを <xref:System.Windows.Application> オブジェクトです。  
  
   
  
## 例  
 次の例は、処理する方法を示しています。 <xref:System.Windows.Navigation.NavigationService.LoadCompleted>します。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">移動先のコンテンツを格納するオブジェクト。</param>
        <summary>オブジェクトが含まれるコンテンツを非同期的に移動します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 自動的に移動、 <xref:System.Object> によって指定された `root` 、次の条件に該当する場合。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> イベントは取り消されません。  
  
-   Web 要求 \(を参照してください <xref:System.Windows.Navigation.NavigationService.Navigating>\) を作成できます。  
  
 場合 `root` は `null`, 、既存のコンテンツ \(<xref:System.Windows.Navigation.NavigationService.Content%2A>\) がオフになっています。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに、Web の例外が表示される場合があります \(たとえば、"404": ファイルが見つかりません\)。 このような例外を処理する <xref:System.Windows.Navigation.NavigationService.NavigationFailed>です。  
  
   
  
## 例  
 次の例に移動する方法、 <xref:System.Windows.Controls.Page> ソース コンテンツ ツリーを含むオブジェクト。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> オブジェクトを初期化して、 URI 目的のコンテンツ。</param>
        <summary>指定されているコンテンツを非同期に移動して、 Uniform Resource Identifier (URI)です。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値 `source` Web にすることができます [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] または有効なパック [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] \(を参照してください [WPF での Pack Uri](http://msdn.microsoft.com/ja-jp/43adb517-21a7-4df3-98e8-09e9cdf764c4)\)。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> 自動的に移動、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] によって指定された `source` 、次の条件に該当する場合。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> イベントは取り消されません。  
  
-   Web 要求 \(を参照してください <xref:System.Windows.Navigation.NavigationService.Navigating>\) を作成できます。  
  
 場合 `source` は `null`, 、既存のコンテンツ \(<xref:System.Windows.Navigation.NavigationService.Content%2A>\) がオフになっています。  
  
> [!NOTE]
>  Web コンテンツをダウンロードするときに、Web の例外が表示される場合があります \(たとえば、"404": ファイルが見つかりません\)。 このような例外を処理する <xref:System.Windows.Navigation.NavigationService.NavigationFailed>です。  
  
 使用する <xref:System.Windows.Navigation.NavigationService.Navigate%2A> コンテンツ フラグメントに移動します。 コンテンツがで識別される場合、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] は現在のコンテンツの再ダウンロードされません。  
  
   
  
## 例  
 次の例に移動する方法、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]です。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">移動先のコンテンツを格納するオブジェクト。</param>
        <param name="navigationState">移動中に処理するために使用するデータを格納するオブジェクト。</param>
        <summary>オブジェクトが含まれるコンテンツに非同期に移動し、移動中に処理するために使用するデータを格納しているオブジェクトを渡します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが、同じ動作を持つ <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>, の代わりに渡されるオブジェクトが、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]です。  
  
   
  
## 例  
 次の例に移動する方法、 <xref:System.Windows.Controls.Page> オブジェクトのソース コンテンツが含まれると、ナビゲーションの状態を渡します。  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets\#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets\#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> オブジェクトを初期化して、 URI 目的のコンテンツ。</param>
        <param name="navigationState">移動中に処理するために使用するデータを格納するオブジェクト。</param>
        <summary>あるソース コンテンツに非同期に移動、 Uniform Resource Identifier (URI), 、移動中に処理するために使用するデータを含むオブジェクトを渡します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ナビゲーションは非同期であるために、複数のナビゲーションで、同時に進行中である可能性があります。 たとえば、1 ページに 2 つの子フレームがある場合両方のフレームを探す可能性があります。 この場合は、発生するさまざまなナビゲーション イベント <xref:System.Windows.Navigation.NavigationService> 複数回、それぞれの移動、コンテンツのいずれかの発生して必ずしも行わないようにするため、可能性のあるナビゲーションが要求された可能性があります。 その結果、特定のナビゲーションの要求は、個々 の要求に固有のデータを処理する場合は、ナビゲーションのすべての要求に使用可能なデータは使用できません。 使用する代わりに、 `navigationState` ナビゲーションの処理は 1 つのナビゲーションの要求に固有のデータを渡すことです。  
  
 次のイベント引数は、ナビゲーションの状態へのアクセスを提供します。  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> \(に渡される、 <xref:System.Windows.Navigation.NavigationService.Navigating> イベント\)。  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> \(に渡される、 <xref:System.Windows.Navigation.NavigationService.Navigated>, 、<xref:System.Windows.Navigation.NavigationService.NavigationStopped>, 、<xref:System.Windows.Navigation.NavigationService.LoadCompleted> イベント ハンドラー\)。  
  
   
  
## 例  
 次の例に移動することを示しています、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] とナビゲーションの状態を渡すことです。  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets\#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets\#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> オブジェクトを初期化して、 URI 目的のコンテンツ。</param>
        <param name="navigationState">移動中に処理するために使用するデータを格納するオブジェクト。</param>
        <param name="sandboxExternalContent">部分信頼セキュリティ サンド ボックスにコンテンツをダウンロード \(インターネット既定値には、アクセス許可のセットを場合ゾーン <see langword="true" />します。 既定値は、<see langword="false" /> です。</param>
        <summary>あるソース コンテンツに非同期に移動、 Uniform Resource Identifier (URI), 、ナビゲーション、およびサンド ボックスの中に、コンテンツを処理するためのナビゲーションの状態を格納するオブジェクトを渡します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、スタンドアロンのアプリケーションだけを対象と [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] コンテンツです。  
  
 このメソッドと同じ動作が発生 <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>, をダウンロードしているコンテンツは部分信頼セキュリティ サンド ボックスに配置されていることを確認することによって拡張し、\(既定のインターネット ゾーン アクセス許可が設定で、次を参照してください。 [WPF 部分信頼セキュリティ](http://msdn.microsoft.com/ja-jp/ef2c0810-1dbf-4511-babd-1fab95b523b5)\)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが見つかると、しから利用可能なときに発生、 <see cref="P:System.Windows.Navigation.NavigationService.Content" /> プロパティには、その完了していない、読み込みがします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理する <xref:System.Windows.Navigation.NavigationService.Navigated> ダウンロードの開始時に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、 <xref:System.Windows.Navigation.NavigationEventArgs> に渡されるオブジェクト、 <xref:System.Windows.Navigation.NavigationService.Navigated> イベント ハンドラーが含まれています。  
  
-   元のページです。<xref:System.Windows.Navigation.NavigationService.Navigated> 発生すると、少なくとも一部のソース\] ページの [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] ツリーを解析され、対象のコンテンツ コントロールにアタッチします。  
  
-   要求された [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。  
  
-   ナビゲーター \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)。  
  
-   追加のデータは、ナビゲーションがいずれかを呼び出すことによって開始された場合、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> または <xref:System.Windows.Navigation.NavigationService.Navigate%2A>です。  
  
-   応答の詳細 \(を使用して、 <xref:System.Net.WebResponse> オブジェクト\)。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> \[ソース\] ページが見つからないか、読み込まれると、その場合とは発生しません <xref:System.Windows.Navigation.NavigationService.NavigationFailed> が発生します。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> を発生させます <xref:System.Windows.Navigation.NavigationService.NavigationFailed>, も生成 <xref:System.Windows.Application.NavigationFailed?displayProperty=fullName> でイベントを <xref:System.Windows.Application> オブジェクトです。  
  
   
  
## 例  
 次の例は、処理する方法を示しています。 <xref:System.Windows.Navigation.NavigationService.Navigated>します。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService.Navigating> 新しいナビゲーションが要求されるを含め、コンテンツが要求されたソースの前に発生します。  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%2A> が呼ばれたとき。  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> または <xref:System.Windows.Navigation.NavigationService.GoForward%2A> と呼びます \(またはナビゲーションのエントリが選択されている [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]\)。  
  
-   コンテンツ フラグメントに移動します。  
  
 処理する <xref:System.Windows.Navigation.NavigationService.Navigating> ナビゲーションが始まる前に、ナビゲーション要求に関する情報を確認する必要がある場合。 この情報は、 <xref:System.Windows.Navigation.NavigatingCancelEventArgs> に渡されるオブジェクト、 <xref:System.Windows.Navigation.NavigationService.Navigating> イベント ハンドラーです。  
  
 A <xref:System.Net.WebRequest> ナビゲーションが作成されから利用可能なオブジェクト、 <xref:System.Windows.Navigation.NavigatingCancelEventArgs> パラメーターの場合、実際の要求は、この時点で行われていなければ、ためにを再構成できます、 <xref:System.Net.WebRequest> オブジェクトを必要な場合です。  
  
 処理することも <xref:System.Windows.Navigation.NavigatingCancelEventArgs> を設定して、必要な場合は、ナビゲーションをキャンセルする <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> true に設定します。 ナビゲーションをキャンセルすると、その他のナビゲーション イベントは発生しません。  
  
> [!NOTE]
>  アプリケーションがブラウザーでホストされている場合は、キャンセルすることで、アプリケーションから移動からユーザーを防ぐことはできません、 <xref:System.Windows.Navigation.NavigationService.Navigating> イベントです。  
  
 コンテンツの最初の部分は、ナビゲーターによってに移動した後 \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)、それぞれからコンテンツがナビゲーション履歴に追加します。 切り替えを移動するコンテンツに関する状態情報を保存する場合は、追加できます状態でそのコンテンツの履歴項目を設定して <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> で、 <xref:System.Windows.Navigation.CustomContentState> オブジェクトです。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> を発生させます <xref:System.Windows.Navigation.NavigationService.Navigating>, も生成 <xref:System.Windows.Application.Navigating?displayProperty=fullName> でイベントを <xref:System.Windows.Application> オブジェクトです。  
  
   
  
## 例  
 次の例は、処理する方法を示しています。 <xref:System.Windows.Navigation.NavigationService.Navigating> 場合は、要求をキャンセルすると静的コンテンツを更新する要求が行われたかどうかを検出します。  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求されたコンテンツへの移動中にエラーが発生したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときにいずれか、 <xref:System.Net.WebException> または <xref:System.IO.IOException> 、移動中にスローされる、 <xref:System.Windows.Navigation.NavigationService.NavigationFailed> イベントが発生します。<xref:System.Windows.Navigation.NavigationService.NavigationFailed> 渡される、 <xref:System.Windows.Navigation.NavigationFailedEventArgs> 例外と例外の原因となったナビゲーションの詳細の両方の情報をカプセル化します。  
  
 例外は、障害が発生したナビゲーションの結果し、が処理されないは、この順で次のイベントが発生します。  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName>。  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=fullName> または <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=fullName>。  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=fullName>。  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>。  
  
 ナビゲーターの場合 \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\) が 1 つまたは複数のナビゲーターによってホストされる `NavigationFailed` それらのいずれかでは発生しません。  
  
   
  
## 例  
 次の例は、処理する方法を示しています。 <xref:System.Windows.Navigation.NavigationService.NavigationFailed>します。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーションの進行状況の情報を提供するダウンロード中に定期的に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 渡される、 <xref:System.Windows.Navigation.NavigationProgressEventArgs> 次の進行状況に関する情報を公開します。  
  
-   これまでにダウンロードされたバイト数 \(<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>\)。  
  
-   ダウンロードする合計バイト数 \(<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>\)。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> コンテンツの 1024 バイトごとにダウンロードしたらをもう一度残りのバイト数が 1024 バイトをこれまでより小さい場合に発生します。 このため、処理 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> が追跡され、現在のダウンロードの進行状況を表示する便利な方法を提供します。  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> 場合によっては、コンテンツの同じ部分に移動するときやとコンテンツ フラグメント ナビゲーションが現在読み込まれているコンテンツに対するなどで発生しません \(つまりの値、 <xref:System.Windows.Navigation.NavigationService.Content%2A> プロパティ\)。  
  
 最終的なコンパイルされた XAML リソースへの移動時に <xref:System.Windows.Navigation.NavigationService.NavigationProgress> イベントが発生しなくなります。 これは、ダウンロードの末尾には、最後に報告していることを意味 <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> 値が等しくない場合があります、 <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> 値。 処理、 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> ナビゲーションが完了したときに通知するイベントです。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> を発生させます <xref:System.Windows.Navigation.NavigationService.NavigationProgress>, も生成 <xref:System.Windows.Application.NavigationProgress?displayProperty=fullName> でイベントを <xref:System.Windows.Application> オブジェクトです。  
  
   
  
## 例  
 次の例は、処理する方法を示しています。 <xref:System.Windows.Navigation.NavigationService.NavigationProgress>します。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> メソッドが呼び出されるか、新しいナビゲーションが要求されると、現在のナビゲーションが進行中です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理する <xref:System.Windows.Navigation.NavigationService.NavigationStopped> かどうかは、ダウンロードを停止すると、ナビゲーション要求に関する情報を確認する必要があります。 この情報は、 <xref:System.Windows.Navigation.NavigationEventArgs> に渡されるオブジェクト、 <xref:System.Windows.Navigation.NavigationService.NavigationStopped> イベント ハンドラーが含まれています。  
  
-   要求された [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。  
  
-   ナビゲーター \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\)。  
  
-   追加のデータは、ナビゲーションがいずれかを呼び出すことによって開始された場合、 <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName> または <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=fullName>です。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService> を発生させます <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, も生成 <xref:System.Windows.Application.NavigationStopped?displayProperty=fullName> でイベントを <xref:System.Windows.Application> オブジェクトです。  
  
   
  
## 例  
 次の例は、処理する方法を示しています。 <xref:System.Windows.Navigation.NavigationService.NavigationStopped>します。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンテンツを再読み込みします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は現在のコンテンツ \(の値で指定された、 <xref:System.Windows.Navigation.NavigationService.Source%2A> プロパティ\) 再度への移動が <xref:System.Windows.Navigation.NavigationService> コンテンツが再度ダウンロードしません。 強制的に <xref:System.Windows.Navigation.NavigationService> コンテンツに再度移動するを呼び出す <xref:System.Windows.Navigation.NavigationService.Refresh%2A>します。  
  
 注意してください。 ここでも、現在のコンテンツがに移動するかどうかを呼び出して <xref:System.Windows.Navigation.NavigationService.Navigate%2A> または <xref:System.Windows.Navigation.NavigationService.Refresh%2A>, 、ナビゲーション履歴に新しいエントリは追加されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>背面の履歴から、最新の履歴項目を削除します。</summary>
        <returns>最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> ナビゲーション履歴、1 つを使用する必要がある場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は 2 つ以上のナビゲーター \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\) 同じナビゲーション履歴情報を共有、1 つのナビゲーターを使用して <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> を別のナビゲーターで開催されたナビゲーションのナビゲーション履歴エントリを取得します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 Uniform Resource Identifier (URI) の現在のコンテンツまたは URI 現在移動先の新しいコンテンツのです。</summary>
        <value>A <see cref="T:System.Uri" /> を含む、 URI の現在の内容またはコンテンツを移動先します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 別のサーバーに対するこのプロパティを設定する場合 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] よりも、現在表示されているナビゲーター \(<xref:System.Windows.Navigation.NavigationWindow>, 、<xref:System.Windows.Controls.Frame>\) を指定した移動 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]します。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> 読み込まれるコンテンツに設定されている、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ナビゲーションをキャンセルしない限りに移動します。  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> フラグメントのみで設定できる [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], に設定することができます `null`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在、ナビゲーション要求のコンテンツのダウンロードを中止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> 呼び出すことができるようになります <xref:System.Windows.Navigation.NavigationService.Navigate%2A> から制御が戻るし、子フレーム内で進行中は、ナビゲーションを停止します。  
  
 \(<xref:System.Windows.Controls.Frame>\).  
  
 呼び出す、 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> メソッドを発生させる、 <xref:System.Windows.Navigation.NavigationService.NavigationStopped> イベントです。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> ナビゲーションを開始したのと同じスレッドで呼び出す必要があります。  
  
   
  
## 例  
 次の例では、読み込みを停止する方法を示します。  
  
 [!code-csharp[NavigationServiceSnippets\#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets\#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたソースのコンテンツを非同期的に移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>