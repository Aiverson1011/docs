<Type Name="NavigationWindow" FullName="System.Windows.Navigation.NavigationWindow">
  <TypeSignature Language="C#" Value="public class NavigationWindow : System.Windows.Window, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi NavigationWindow extends System.Windows.Window implements class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationWindow" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Window</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_NavWinCP", Type=typeof(System.Windows.Controls.ContentPresenter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コンテンツ ナビゲーションをサポートするウィンドウを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationWindow> 派生した <xref:System.Windows.Window> しに移動し、内容を表示する機能を拡張します。  
  
 コンテンツを指定できます [!INCLUDE[TLA2#tla_winfx](~/includes/tla2sharptla-winfx-md.md)] オブジェクトまたは [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)] ファイルです。 ただし、一般に、 <xref:System.Windows.Controls.Page> オブジェクトは、ナビゲーションのためのパッケージ コンテンツにすることをお勧めします。  
  
 設定するコンテンツを移動する、 <xref:System.Windows.Navigation.NavigationWindow.Source%2A> プロパティを [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 目的のコンテンツ。 さらに、コンテンツを参照できますの次のオーバー ロードのいずれかを使用して、 <xref:System.Windows.Navigation.NavigationWindow.Navigate%2A> メソッド。  
  
-   <xref:System.Windows.Navigation.NavigationWindow.Navigate%28System.Uri%29>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.Navigate%28System.Uri%2CSystem.Object%29>  
  
 ときのコンテンツに移動して [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], 、<xref:System.Windows.Navigation.NavigationWindow> はコンテンツを含むオブジェクトを返します。  
  
> [!NOTE]
>  によるナビゲーション [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] もコンテンツ フラグメントへのナビゲーションをサポートします。 「<xref:System.Windows.Navigation.NavigationWindow.FragmentNavigation>」を参照してください。  
  
 いずれかを使用してコンテンツに移動する代わりに、 <xref:System.Windows.Navigation.NavigationWindow.Navigate%2A> 、オブジェクトを受け取るメソッド オーバー ロードします。  
  
-   <xref:System.Windows.Navigation.NavigationWindow.Navigate%28System.Object%29>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.Navigate%28System.Object%2CSystem.Object%29>  
  
 ナビゲーションの有効期間は、次のイベントを追跡できます。  
  
-   <xref:System.Windows.Navigation.NavigationWindow.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationWindow.FragmentNavigation>。  
  
 ナビゲーションが行われるたびにすべてのイベントが発生します。\(キャンセル、停止、または失敗\) は、発生するイベントのセットをナビゲーション \(コンテンツまたはコンテンツ フラグメント\) に発生して、ナビゲーションの完了方法の種類によって決まります。  
  
 次の図は、これらのイベントを発生させる順序を示しています。  
  
 529b7e47-de7a-43a8-a4a8-3adfa6cafbca  
  
 中または、ナビゲーション後 <xref:System.Windows.Navigation.NavigationWindow> は、移動先を含むコンテンツに関する情報を提供、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] 移動先のコンテンツの \(<xref:System.Windows.Navigation.NavigationWindow.Source%2A>\)、 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] の現在のコンテンツ \(<xref:System.Windows.Navigation.NavigationWindow.CurrentSource%2A>\)、およびオブジェクトに移動したコンテンツが含まれていますが \(<xref:System.Windows.Controls.ContentControl.Content%2A>\)。  
  
 コンテンツの移動、 <xref:System.Windows.Navigation.NavigationWindow> ナビゲーション履歴にエントリとしてナビゲーションを記録します。 呼び出して、いずれか、新しいナビゲーションが発生したときに、ナビゲーション履歴をバックアップするエントリが追加、 <xref:System.Windows.Navigation.NavigationWindow.Navigate%2A> メソッドを呼び出すことによって、ナビゲーション履歴内のエントリに移動して、または <xref:System.Windows.Navigation.NavigationWindow.GoForward%2A>です。 呼び出してナビゲーション履歴にエントリに移動して、ナビゲーション履歴にエントリが追加 <xref:System.Windows.Navigation.NavigationWindow.GoBack%2A>します。<xref:System.Windows.Navigation.NavigationWindow.CanGoBack%2A><xref:System.Windows.Navigation.NavigationWindow.CanGoForward%2A> あるかどうか前に、ナビゲーション履歴では、それぞれを報告します。  
  
 最初にその 1 つのコンテンツへの移動が、コンテンツの別の部分から <xref:System.Windows.Navigation.NavigationWindow> ナビゲーションが自動的に表示される [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] に移動することができ、ナビゲーション履歴を転送します。 タイミングを構成することができます、ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] を設定して表示される、 <xref:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI%2A> プロパティです。  
  
 最新のエントリに呼び出してナビゲーション履歴を削除できます <xref:System.Windows.Navigation.NavigationWindow.RemoveBackEntry%2A>します。  
  
 <xref:System.Windows.Navigation.NavigationWindow> ナビゲーション履歴には、コンテンツ オブジェクトのインスタンスは保存されません。 代わりに、 <xref:System.Windows.Navigation.NavigationWindow> ナビゲーション履歴を使用してナビゲーションが毎回、コンテンツ オブジェクトの新しいインスタンスを作成します。 この動作は、数値が大きいとコンテンツの大部分は、移動先ときに過剰なメモリの消費量を回避する設計されています。 その結果、次に、コンテンツの状態は 1 つのナビゲーションからに記憶されません。 ただし、 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] ナビゲーション履歴に特定のコンテンツの状態の一部を格納する、いくつかの方法を提供します。  
  
 使用して <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A>, 、単一のページ インスタンスの状態の複数のセットも覚えておくことができます。  
  
 <xref:System.Windows.Navigation.NavigationWindow> 2 つのナビゲーターの 1 つ [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)], 、もう <xref:System.Windows.Controls.Frame>します。 基本的には、ナビゲーターは、ナビゲーションとナビゲーション履歴をサポートするクラスです。 視覚的に、 [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] を使用して [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] として統合されたユーザー エクスペリエンスを提供するナビゲーター。 ただし、 [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] を実際に使用 <xref:System.Windows.Navigation.NavigationWindow> ナビゲーター; として、 <xref:System.Windows.Application.MainWindow%2A> のプロパティ、 [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] で実行されている [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] への参照を返します、 <xref:System.Windows.Navigation.NavigationWindow>, 、およびナビゲーション履歴で管理されている、 <xref:System.Windows.Navigation.NavigationWindow> で管理されているナビゲーション履歴に統合されて [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)]します。  
  
 **コンテンツ モデル:**  <xref:System.Windows.Navigation.NavigationWindow> は、 <xref:System.Windows.Controls.ContentControl>, 、つまり <xref:System.Windows.Navigation.NavigationWindow> テキスト、画像、またはパネルなどのコンテンツを含めることができます。 また、 <xref:System.Windows.Navigation.NavigationWindow> がルートであり、その結果、別の要素のコンテンツの一部をすることはできません。 コンテンツ モデルの詳細については <xref:System.Windows.Controls.Button>, を参照してください [WPF コンテンツ モデル](http://msdn.microsoft.com/ja-jp/214da5ef-547a-4cf8-9b07-4aa8a0e52cdd)します。  
  
## NavigationWindow コントロールをカスタマイズします。  
 複数に同じプロパティ設定を適用する <xref:System.Windows.Navigation.NavigationWindow> コントロールを使用して、 <xref:System.Windows.FrameworkElement.Style%2A> プロパティです。 既定値を変更する <xref:System.Windows.Controls.ControlTemplate> コントロール固有の外観を与えるためです。 作成の詳細については、 <xref:System.Windows.Controls.ControlTemplate>, を参照してください [ControlTemplate を作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  パーツおよびに固有の状態を確認する、 <xref:System.Windows.Navigation.NavigationWindow>, を参照してください [NavigationWindow のスタイルとテンプレート](http://msdn.microsoft.com/ja-jp/3656055e-3222-43c8-b868-fd0c90cc31a3)します。  
  
 コントロールの既定のスタイルでは、このコントロールの依存関係プロパティを設定する場合があります。  プロパティが既定のスタイルが設定されている場合、アプリケーションでコントロールが表示されたときに、プロパティが既定値から変更可能性があります。 既定のスタイルは、デスクトップ テーマでは、アプリケーションが実行されているときに使用が決定されます。  詳細については、次を参照してください。 [Default WPF Themes](http://go.microsoft.com/fwlink/?LinkID=158252)します。  
  
> [!NOTE]
>  Visual プロパティの設定は効果プロパティは、両方に存在する場合 <xref:System.Windows.Navigation.NavigationWindow> コントロールの既定のテンプレートとを使用して設定します。 「を変更する視覚的構造の、」の「コントロール」セクションで visual プロパティの一覧が見つかります [ControlTemplate 作成することで、既存のコントロールの外観のカスタマイズ](http://msdn.microsoft.com/ja-jp/678dd116-43a2-4b8c-82b5-6b826f126e31)します。  
  
   
  
## 例  
 <xref:System.Windows.Navigation.NavigationWindow> を作成する方法を次のコード サンプルに示します。  
  
 [!code-xml[NavigationWindowSnippets\#NavigationWindowAndSource](~/samples/snippets/xaml/VS_Snippets_Wpf/NavigationWindowSnippets/xaml/mainwindow.xaml#navigationwindowandsource)]
 [!code-xml[NavigationWindowSnippets\#NavigationWindowAndSource](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationWindowSnippets/CS/mainwindow.xaml#navigationwindowandsource)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NavigationWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Navigation.NavigationWindow" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for permission for this object to call unsafe native methods. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> を特定のコンテンツに関連付けられているアプリケーション定義の状態を表すオブジェクト。</param>
        <summary>バックアップが含まれるナビゲーション履歴にエントリを追加、 <see cref="T:System.Windows.Navigation.CustomContentState" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> <see langword="null" />, 、および <see cref="T:System.Windows.Navigation.CustomContentState" /> から返されたオブジェクトがない <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected override void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このメソッドが呼び出されたとき。 これにより、コンテンツに追加されない <see cref="T:System.Windows.Navigation.NavigationWindow" /> を使用して XAMLします。</exception>
        <altmember cref="M:System.Windows.Markup.IAddChild.AddChild(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected override void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにテキストを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">text パラメーターの値には、空白以外の文字が含まれて 場合。</exception>
        <altmember cref="M:System.Windows.Markup.IAddChild.AddText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="BackStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable BackStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable BackStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.BackStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Collections.IEnumerable" /> のナビゲーション履歴にエントリを列挙するために使用して、 <see cref="T:System.Windows.Navigation.NavigationWindow" />です。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" /> ナビゲーション履歴をバックアップするには、少なくとも 1 つのエントリが追加されている場合、または <see langword="null" /> エントリが存在しない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> そのナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返されるエントリ <xref:System.Windows.Navigation.NavigationWindow.BackStack%2A> コンテンツ全体、フラグメント ナビゲーション、およびカスタムの状態が含まれます。  
  
<a name="dependencyPropertyInfo_NavigationWindowBackStack"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Navigation.NavigationWindow.BackStack%2A>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
        <altmember cref="T:System.Windows.Navigation.CustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="BackStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.NavigationWindow.BackStackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション履歴には、少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ナビゲーション履歴に少なくとも 1 つのエントリがある場合 <see langword="false" /> ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> そのナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.CanGoBack%2A?displayProperty=fullName>」を参照してください。  
  
<a name="dependencyPropertyInfo_NavigationWindowCanGoBack"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Navigation.NavigationWindow.CanGoBack%2A>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.GoBack" />
        <altmember cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoBackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoBackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.NavigationWindow.CanGoBackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーション履歴に少なくとも 1 つのエントリがあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ナビゲーション履歴に少なくとも 1 つのエントリがある場合 <see langword="false" /> ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> そのナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_NavigationWindowCanGoForward"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Navigation.NavigationWindow.CanGoForward%2A>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.GoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.GoBack" />
        <altmember cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForwardProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CanGoForwardProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CanGoForwardProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.NavigationWindow.CanGoForwardProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 Uniform Resource Identifier (URI) の最後に移動したコンテンツです。</summary>
        <value>URI 最後に移動したを使用してに移動する場合の URI。 そうしないと、 <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationWindow.CurrentSource%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForwardStack">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ForwardStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ForwardStack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.ForwardStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Collections.IEnumerable" /> のナビゲーション履歴にエントリを列挙するために使用して、 <see cref="T:System.Windows.Navigation.NavigationWindow" />です。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerable" /> 少なくとも 1 つのエントリが追加された場合ナビゲーション履歴にエントリがない場合、または <see cref="T:System.Windows.Navigation.NavigationWindow" /> そのナビゲーション履歴を所有していません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって返されるエントリ <xref:System.Windows.Navigation.NavigationWindow.ForwardStack%2A> コンテンツ全体、フラグメント ナビゲーション、およびカスタムの状態が含まれます。  
  
<a name="dependencyPropertyInfo_NavigationWindowForwardStack"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Navigation.NavigationWindow.ForwardStack%2A>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
        <altmember cref="T:System.Windows.Navigation.CustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="ForwardStackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForwardStackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForwardStackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.NavigationWindow.ForwardStackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ フラグメントへのナビゲーションが始まると、すぐに発生する場合、目的のフラグメントは現在のコンテンツまたはソースの後に発生する XAML コンテンツが読み込まれた目的のフラグメントが別のコンテンツがある場合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.FragmentNavigation?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.GoBack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ナビゲーション履歴をもう一度最新の項目に移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationWindow.GoBack" /> ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" />
        <altmember cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.GoForward" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ナビゲーション履歴に最新の項目に移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationWindow.GoForward" /> ナビゲーション履歴にエントリがない場合に呼び出されます。</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward" />
        <altmember cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動したコンテンツが読み込まれ、解析されて、レンダリングが開始されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.LoadCompleted?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">
          <see cref="T:System.Object" /> 移動先のコンテンツを格納しています。</param>
        <summary>オブジェクトが含まれるコンテンツを非同期的に移動します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 次の例では、オブジェクトが含まれるコンテンツに移動する方法を示します。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateToPageObjCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopageobjcode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateToPageObjCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopageobjcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> オブジェクトを初期化して、 URI 目的のコンテンツ。</param>
        <summary>指定されているコンテンツに非同期に移動、 Uniform Resource Identifier (URI)です。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=fullName>」を参照してください。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)] 相対または絶対指定できます。 詳細については、次を参照してください。 [WPF での Pack Uri](http://msdn.microsoft.com/ja-jp/43adb517-21a7-4df3-98e8-09e9cdf764c4)します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Windows.Navigation.NavigationWindow.Navigate%2A> に移動する方法、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]です。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateToPageNavCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagenavcode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateToPageNavCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagenavcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object content, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(object content, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Object" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="content">
          <see cref="T:System.Object" /> 移動先のコンテンツを格納しています。</param>
        <param name="extraData">A <see cref="T:System.Object" /> の移動中に処理するために使用されるデータを格納しています。</param>
        <summary>コンテンツは、オブジェクトが含まれ、ナビゲーション中の処理に使用するデータを含むオブジェクトを渡しますへ非同期的に移動します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Navigate(class System.Uri source, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> オブジェクトを初期化して、 URI 目的のコンテンツ。</param>
        <param name="extraData">A <see cref="T:System.Object" /> の移動中に処理するために使用されるデータを格納しています。</param>
        <summary>あるソース コンテンツに非同期に移動、 Uniform Resource Identifier (URI), 、移動中に処理するために使用するデータを含むオブジェクトを渡します。</summary>
        <returns>
          <see langword="true" /> ナビゲーションがキャンセルされない場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=fullName>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationWindow.Navigated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>移動先のコンテンツが見つかると、しから利用可能なときに発生、 <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティには、その完了していない、読み込みがします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigated?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationWindow.Navigating" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいナビゲーションが要求されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationWindow.NavigationFailed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要求されたコンテンツへの移動中にエラーが発生したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ナビゲーションの進行状況の情報を提供するダウンロード中に定期的に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.NavigationProgress?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="NavigationService">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.NavigationService NavigationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Navigation.NavigationService NavigationService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.NavigationService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Navigation.NavigationService" /> これで使用されている <see cref="T:System.Windows.Navigation.NavigationWindow" /> そのコンテンツへのナビゲーション サービスを提供します。</summary>
        <value>これによって使用されるナビゲーション サービス <see cref="T:System.Windows.Navigation.NavigationWindow" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationWindow> 使用して、 <xref:System.Windows.Navigation.NavigationService> ナビゲーション サービスによってホストされているコンテンツを提供する <xref:System.Windows.Navigation.NavigationWindow>です。<xref:System.Windows.Navigation.NavigationWindow.NavigationService%2A> プロパティは、カスタム コードの役立ちます <xref:System.Windows.Navigation.NavigationWindow> への参照を取得する、 <xref:System.Windows.Navigation.NavigationService>, 、たとえばナビゲーション イベントを処理します。  
  
 ホストされているコンテンツ、 <xref:System.Windows.Navigation.NavigationWindow>, など <xref:System.Windows.Controls.Page>, 、使用する必要があります、 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A?displayProperty=fullName> メソッドまたは <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=fullName> への参照を取得するプロパティ、 <xref:System.Windows.Navigation.NavigationService>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationWindow.NavigationStopped" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading" /> メソッドが呼び出されるか、新しいナビゲーションが要求されると、現在のナビゲーションが進行中です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.NavigationStopped?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.NavigationFailed" />
        <altmember cref="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.OnApplyTemplate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビジュアル ツリーのテンプレートの世代が作成されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.OnClosed(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Window.Closed" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationWindow.OnClosed%2A> 解放、 <xref:System.Windows.Navigation.NavigationService> 発生させる前に、ナビゲーションの管理に使用されているオブジェクト <xref:System.Windows.Window.Closed> イベントです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成して返します、 <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Navigation.NavigationWindow" />です。</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Navigation.NavigationWindow" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンテンツを再読み込みします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Refresh%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 次の例を呼び出す方法、 <xref:System.Windows.Navigation.NavigationWindow.Refresh%2A> でコンテンツを再読み込みする方法、 <xref:System.Windows.Navigation.NavigationWindow>です。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateRefreshCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigaterefreshcode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateRefreshCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigaterefreshcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>背面の履歴から、最新の履歴項目を削除します。</summary>
        <returns>最新 <see cref="T:System.Windows.Navigation.JournalEntry" /> ナビゲーション履歴、1 つを使用する必要がある場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContent">
      <MemberSignature Language="C#" Value="public bool SandboxExternalContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SandboxExternalContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 分離外部 Extensible Application Markup Language (XAML) \(既定のインターネット ゾーン アクセス許可セット\) では、部分信頼セキュリティ サンド ボックス内でコンテンツです。</summary>
        <value>
          <see langword="true" /> コンテンツが、部分信頼セキュリティ サンド ボックス内に分離される場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 外部コンテンツが [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] リソース ファイルまたはコンテンツ ファイルのいずれかとしてアプリケーションに含まれていないコンテンツ \(詳細については、次を参照してください。 [WPF アプリケーションのリソース、コンテンツ、およびデータ ファイル](http://msdn.microsoft.com/ja-jp/7ad2943b-3961-41d3-8fc6-1582d43f5d99)\)。  
  
 ときに <xref:System.Windows.Navigation.NavigationWindow.SandboxExternalContent%2A> とのコンテンツが、 <xref:System.Windows.Navigation.NavigationWindow> 外部 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイル、コンテンツをインターネット ゾーン アクセス許可セットの既定値に限定されている部分信頼セキュリティ サンド ボックスに読み込まします。 さらに、外部のコンテンツは、別のプロセスに読み込まれます。 そのため、外部のコンテンツは孤立し、リソース ディクショナリなどのアプリケーション スコープのリソースへのアクセス権はありません \(詳細については、次を参照してください。 <xref:System.Windows.ResourceDictionary>\)。  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationWindow> 外部コンテンツされる場合にのみを含む、 <xref:System.Windows.Navigation.NavigationWindow.Source%2A> プロパティに設定されて、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 外部の [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ファイルです。<xref:System.Windows.Navigation.NavigationWindow> 使用して提供されるコンテンツ、 <xref:System.Windows.Controls.ContentControl.Content%2A> プロパティは、内部コンテンツと見なされ、その後、分離ではありません。  
  
<a name="dependencyPropertyInfo_NavigationWindowSandboxExternalContent"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Navigation.NavigationWindow.SandboxExternalContent%2A>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> アプリケーションが部分信頼で実行するときに設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SandboxExternalContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SandboxExternalContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SandboxExternalContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.NavigationWindow.SandboxExternalContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeContent">
      <MemberSignature Language="C#" Value="public override bool ShouldSerializeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ShouldSerializeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.ShouldSerializeContent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Windows.Controls.ContentControl.Content" /> プロパティを永続化する必要があるかどうかを示します。</summary>
        <returns>プロパティの値が既定値から変更されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 `ShouldSerialize` ために、メソッドが提供される、 <xref:System.Windows.Controls.ContentControl.Content%2A> プロパティには、単純な既定値はありません。 このメソッドは、プロパティが既定値から変更されたかどうかを示します。 通常このメソッドを呼び出すかをデザイナーを開発している場合、 <xref:System.Windows.Navigation.NavigationWindow> やコントロールを組み込む独自の開発、 <xref:System.Windows.Navigation.NavigationWindow>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsNavigationUI">
      <MemberSignature Language="C#" Value="public bool ShowsNavigationUI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowsNavigationUI" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Windows.Navigation.NavigationWindow" /> 、ナビゲーションを示しています。 UIします。</summary>
        <value>
          <see langword="true" /> 場合は、ナビゲーション UI が表示されているそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻る\] ボタンと進むのナビゲーションを支援するために <xref:System.Windows.Navigation.NavigationWindow> ナビゲーションが自動的に表示されます [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]  
  
 ナビゲーション [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] ナビゲーションが発生したかどうかが表示されます。  
  
<a name="dependencyPropertyInfo_NavigationWindowShowsNavigationUI"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI%2A>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowsNavigationUIProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowsNavigationUIProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowsNavigationUIProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.NavigationWindow.ShowsNavigationUIProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 Uniform Resource Identifier (URI) の現在のコンテンツまたは URI 現在移動先の新しいコンテンツのです。</summary>
        <value>URI の現在の内容またはコンテンツを移動先します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 「<xref:System.Windows.Navigation.NavigationService.Source%2A?displayProperty=fullName>」を参照してください。  
  
> [!NOTE]
>  [!INCLUDE[TLA#tla_uri#initcap#plural](~/includes/tlasharptla-urisharpinitcapsharpplural-md.md)] 相対または絶対指定できます。 詳細については、次を参照してください。 [WPF での Pack Uri](http://msdn.microsoft.com/ja-jp/43adb517-21a7-4df3-98e8-09e9cdf764c4)します。  
  
<a name="dependencyPropertyInfo_NavigationWindowSource"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Navigation.NavigationWindow.Source%2A>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.Journal%2A>|  
  
   
  
## 例  
 次の例に移動する方法、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] を設定して、 <xref:System.Windows.Navigation.NavigationWindow.Source%2A> プロパティです。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateToPageSrcCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatetopagesrccode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateToPageSrcCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatetopagesrccode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Navigation.NavigationWindow.SourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Navigation.NavigationWindow.Source" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationWindow.StopLoading" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在、ナビゲーション要求のコンテンツのダウンロードを中止します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Navigation.NavigationWindow.StopLoading%2A> 要求されたコンテンツのダウンロードを停止し、原因、 <xref:System.Windows.Navigation.NavigationWindow.NavigationStopped> イベントが発生します。  
  
 「<xref:System.Windows.Navigation.NavigationService.StopLoading%2A?displayProperty=fullName>」を参照してください。  
  
   
  
## 例  
 次の例を呼び出す方法を示します、 <xref:System.Windows.Navigation.NavigationWindow.StopLoading%2A> ダウンロードが完了する前に、コンテンツへの移動を中断します。  
  
 [!code-csharp[HOWTONavigationSnippets\#NavigateStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTONavigationSnippets/CSharp/MainWindow.xaml.cs#navigatestoploadingcode)]
 [!code-vb[HOWTONavigationSnippets\#NavigateStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTONavigationSnippets/visualbasic/mainwindow.xaml.vb#navigatestoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationWindow.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationWindow.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のコンテキストの基本の uniform resource identifier \(URI\) を設定します。</summary>
        <value>現在のコンテキストのベース URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Windows.Navigation.NavigationWindow> のインスタンスが <xref:System.Windows.Markup.IUriContext> インターフェイスにキャストされる場合にのみ、使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたソースのコンテンツを非同期的に移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>