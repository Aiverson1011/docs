<Type Name="Chart" FullName="System.Windows.Forms.DataVisualization.Charting.Chart">
  <TypeSignature Language="C#" Value="public class Chart : System.Windows.Forms.Control, IDisposable, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Chart extends System.Windows.Forms.Control implements class System.ComponentModel.ISupportInitialize, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Chart" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.DataVisualization.Charting.ChartWinDesignerSerializer, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.DataVisualization.Charting.ChartWinDesigner, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DisplayName("Chart")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Windows.Forms.DataVisualization.Charting.Chart), "ChartControl.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ルート クラスとして使用、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、すべてのプロパティ、メソッド、およびグラフ Windows コントロールのイベントを公開します。  
  
 2 つの重要なプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> クラスは、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A> コレクションのプロパティにあるプロパティ。<xref:System.Windows.Forms.DataVisualization.Charting.Chart.Series%2A> コレクション プロパティ ストア <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトで、そのデータの属性と共に表示されますが、データを格納するために使用します。<xref:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas%2A> コレクション プロパティ ストア <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクトで、軸の 1 つのセットを使用して 1 つまたは複数のグラフの描画には主に使用します。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Chart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを作成するこのコンス トラクターを使用する、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> 実行時にクラスです。  
  
 ただし、わかりやすいように、ことが推奨を作成すること、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> デザイン時のインスタンス。  
  
 これは、ルート オブジェクトの <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>軸ラベルを使用して X 軸方向のデータ ポイントを配置します。 複数の系列はインデックスが作成され、X 値は、文字列の場合に適用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="series">データ ポイントの軸ラベルを使用して X 軸に配置されたデータ ポイントを含む一連のコンマ区切りの一覧。</param>
        <summary>軸ラベルを使用して、X 軸に沿って別の系列のデータ ポイントを配置します。 昇順の並べ替え順序を使用して、指定した系列のグラフを配置します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、軸ラベルを使用して X 軸に沿って別の系列のデータ ポイントを配置するために使用し、ときに、適用します。  
  
-   複数の系列が表示され、インデックスが作成されます。つまり、すべてのデータ ポイントがある、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A> 0、または <xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A> プロパティは `true`です。  
  
-   すべてのデータ ポイントがある空の軸ラベルに固有の <xref:System.Windows.Forms.DataVisualization.Charting.Series>です。 一意でない場合、例外がスローされます。  
  
 データ バインディングが複数の系列の作成時に発生すると、このような状況はよくと `string` x 軸の値は値が使用されます。  
  
 複数のインデックスを作成する 2 つの問題が発生する系列をプロットし、使用して、X の値が設定された `string` 値。  
  
-   X 値と同じ文字列を別の系列のデータ ポイントを X 軸に沿って同じインデックスにプロットする位置を保証できません。  
  
-   最初の系列のデータ ポイントの軸ラベルだけは、軸ラベルがあるその他の系列が同じインデックスでのデータ ポイント場合でも表示されます。  
  
 既定では、ポイントは、系列に格納される順序でプロットされます。 並べ替え順序を指定するには、使用、 `AlignDataPointsByAxisLabel` を持つメソッド オーバー ロード、 `sortingOrder` パラメーター。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="sortingOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 同じ軸領域を割り当てられていた点の表示順序が決定を昇順または降順の並べ替え順が軸ラベルに使用されるかどうかを示すオブジェクト。</param>
        <summary>軸ラベルを使用してデータ ポイントを配置します。 指定された並べ替え順序を使用して、グラフ内のすべての系列を配置します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignDataPointsByAxisLabel">
      <MemberSignature Language="C#" Value="public void AlignDataPointsByAxisLabel (string series, System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AlignDataPointsByAxisLabel(string series, valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.AlignDataPointsByAxisLabel(System.String,System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="series">軸ラベルを配置する一連のコンマ区切りの一覧です。</param>
        <param name="sortingOrder">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PointSortOrder" /> 順番を決定するには、同じ軸領域を割り当てられていた点が表示される順序軸ラベルの場合、昇順または降順の並べ替え順序を決定する列挙値が使用されます。</param>
        <summary>軸ラベルを使用してデータ ポイントを配置します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、軸ラベルを使用して X 軸に沿って別の系列のデータ ポイントを配置するために使用し、ときに、適用します。  
  
-   複数の系列が表示され、インデックスが作成されます。つまり、すべてのデータ ポイントがある、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.XValue%2A> 0、または <xref:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed%2A> プロパティは `true`です。  
  
-   すべてのデータ ポイントがある空の軸ラベルに固有の <xref:System.Windows.Forms.DataVisualization.Charting.Series>です。 一意でない場合、例外がスローされます。  
  
 データ バインディングが複数の系列の作成時に発生すると、このような状況はよくと `string` x 軸の値は値が使用されます。  
  
 複数のインデックスを作成する 2 つの問題が発生する系列をプロットし、使用して、X の値が設定された `string` 値。  
  
-   X 値と同じ文字列を別の系列のデータ ポイントを X 軸に沿って同じインデックスにプロットする位置を保証できません。  
  
-   最初の系列のデータ ポイントの軸ラベルだけは、軸ラベルがあるその他の系列が同じインデックスでのデータ ポイント場合でも表示されます。  
  
 既定では、ポイントは、系列に格納される順序でプロットされます。 並べ替え順序を指定するには、使用、 `AlignDataPointsByAxisLabel` を持つメソッド オーバー ロード、 `sortingOrder` パラメーター。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPlaced">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationPlaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationPlaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPlaced" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンドユーザーは、グラフに注釈を配置する際に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationPositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationPositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPositionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>注釈の位置が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationPositionChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; AnnotationPositionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt; AnnotationPositionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationPositionChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.AnnotationPositionChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>注釈の位置を変更すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Annotations">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AnnotationCollection Annotations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.AnnotationCollection Annotations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Annotations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.AnnotationCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AnnotationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグラフの注釈を格納するコレクションを設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationCollection" /> オブジェクト グラフの注釈を格納するために使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべてのグラフの注釈は、このコレクション プロパティに格納されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationSelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationSelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationSelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationSelectionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>注釈の選択が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationTextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AnnotationTextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AnnotationTextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AnnotationTextChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>注釈のテキストが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AntiAliasing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles AntiAliasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles AntiAliasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.AntiAliasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles), "All")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはテキストとグラフィックスを描画した場合に、アンチ エイリアスを使用するかどうかを決定する値を設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AntiAliasingStyles" /> テキストとグラフィックスを描画した場合に、アンチ エイリアスを使用するかどうかを決定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アンチ エイリアスは、中間の色でピクセルを埋め込むことで、「ギザギザした境界」を滑らかし、は四角形として表示される以外のグラフの縁を滑らかにするために特に効果的です。 たとえば、アンチ エイリアスは折れ線グラフや円グラフなどの非常に効果的ですがバーに適用するには、および縦棒グラフ。  
  
 四角形、円などのテキストまたはグラフィックス プリミティブにアンチエイリアシングを適用できます。  
  
 アンチ エイリアス、パフォーマンスに影響に注意してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPaletteColors">
      <MemberSignature Language="C#" Value="public void ApplyPaletteColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyPaletteColors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.ApplyPaletteColors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>自動的に割り当てられた系列とデータ ポイントの色を設定、実行時にプログラムでアクセスを許可するようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> 色が実行時に自動的に割り当てられているためにグラフが表示された場合、時刻の前に、色を知る方法はありません、 `Color` は自動的に割り当てられた値のプロパティを返します <xref:System.Drawing.Color.Empty> この時点でします。  
  
 呼び出した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ApplyPaletteColors%2A> メソッドで、系列とデータ ポイントの色が設定され、プログラムでアクセスできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisScrollBarClicked">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; AxisScrollBarClicked;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt; AxisScrollBarClicked" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisScrollBarClicked" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ScrollBarEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンドユーザーが軸スクロール バーをクリックしたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisViewChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のスケールの表示位置またはサイズが変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisViewChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt; AxisViewChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.AxisViewChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ViewEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>軸のスケールの表示位置やサイズが変更されようと発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景色、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> グラフの背景色の描画に使用する値。 既定の色は <see cref="System.Drawing.Color.White" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 有効な ARGB \(アルファ、赤、緑、青\) 値には、このプロパティを設定することができます。 注意してください、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> オブジェクト、アルファ コンポーネントを 255 以外の値に設定することはできません。 つまり、に対して、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> オブジェクトでのみ、 <xref:System.Drawing.Color.Transparent%2A> 値を使用することはできません。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A> 値は背景のグラデーションの色を使用している場合に使用される最初の色になります。  
  
 アルファ値は、色の不透明度を制御します。 この色を"transparent"に設定した場合などは、アルファ値は 0 を使用する場合\-タイトルの背景に色が割り当てられません。 その結果、バック グラウンドは透明になります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景のグラデーションの方向、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。 また、グラデーションが使用されているかどうかを決定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> グラフとグラデーションを使用するかどうかの背景のグラデーションの向きを指定する列挙体です。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A> を確認するにするかどうか、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールは、グラデーションを表示し、場合は、1 つのグラデーションの方向を決定使用します。  
  
 使用可能なパターンの一覧についてを参照してください、 <xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle> 列挙します。  
  
 グラデーションの色を使用します。  
  
 グラフのバック グラウンドでの主要な色の設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A> プロパティです。  
  
 グラフの背景の 2 番目の色を設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> プロパティです。  
  
 この設定 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A> プロパティを目的のグラデーションのスタイル。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public override System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackgroundImage" /> プロパティは使用されません。 代わりに、<see cref="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" /> プロパティを使用してください。</summary>
        <value>
          <see cref="T:System.Drawing.Image" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の陰影のスタイル、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> の陰影のスタイルを指定する列挙型、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> 列挙型のブラシで使用される陰影パターンを指定する <xref:System.Drawing.Drawing2D.HatchBrush>です。 ハッチ パターンは、単色の背景色と線が描かれて、バック グラウンドで構成されます。  
  
 使用可能な陰影のスタイルの一覧についてを参照してください、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> 列挙します。  
  
 **注** 線の陰影の色によって決まります、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景イメージ、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see langword="string" /> イメージ ファイルの URL を表す値。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、背景イメージのパスを定義、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> 凡例、絶対または相対 URL を指定できます。  
  
 イメージを配置するには、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A> プロパティです。  
  
 設定して、「透過」としての画像が表示される色のいずれかを指定することも、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor%2A> プロパティです。  
  
 イメージは、アイコンを含む、.NET Framework でサポートされている任意の有効なグラフィックス ファイルから取得できます。  
  
 背景画像は、グラデーションの色などの他のバック グラウンド プロパティよりも優先されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に使用される背景画像の配置、 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> の描画モード。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" /> グラフの背景画像の配置を指定する列挙値。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの背景画像の配置を決定する、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロール; はのみに適用すると、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A> にプロパティが設定されている <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の色、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> 透明色として表示されるコントロール。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> 値が表示されます透明としてグラフ イメージが描画されるときです。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景イメージの描画モード、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" /> グラフの背景画像の描画モードを指定する列挙値。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、イメージの表示方法、たとえば、タイル化された、拡大\/縮小されたなどを決定します。  
  
 イメージをスケーリングすると、グラフの境界内に収まる伸縮されます。 イメージを並べて表示したりが繰り返し描画、グラフの左上隅から開始します。  
  
 使用可能な折り返しモードの詳細については、次を参照してください。、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> トピックを列挙します。  
  
 場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageWrapMode%2A> にプロパティが設定されている <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, 、イメージを描画する場所によって決定されます、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImageAlignment%2A> プロパティの設定です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグラフの背景の 2 番目の色を設定します。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> グラフの背景の 2 番目の色を表す値。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> プロパティは、多くの第 2 背景色を決定 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> オブジェクト、および色のグラデーションを適用するときに使用します。  
  
 設定する <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> ARGB \(アルファ、赤、緑、青\) の有効な値にします。  
  
 陰影を使用する場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> プロパティは、グラフの陰影の線の色を決定します。  
  
 グラフの背景のグラデーションの色を使用。  
  
-   主要な色の設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackColor%2A> プロパティです。  
  
-   2 番目の色を設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackSecondaryColor%2A> プロパティです。  
  
-   設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackGradientStyle%2A> プロパティを目的のグラデーションのスタイル。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.BeginInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シグナル初期化の開始オブジェクトにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグラフの枠線の色を設定します。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> 値がグラフの枠線を描画するために使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 を取得または罫線の色を設定するには使用 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor%2A> 代わりにします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または罫線のスタイルを設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> 罫線のスタイルを指定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderlineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderlineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "White")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または罫線の線の色を設定します。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> 枠線を描画するために使用する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderlineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または罫線の線のスタイルを設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> 枠線のスタイルを指定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderlineWidth">
      <MemberSignature Language="C#" Value="public int BorderlineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderlineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または罫線の線の幅を設定します。</summary>
        <value>
          <see langword="integer" /> 枠線の幅を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderSkin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.BorderSkin BorderSkin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.BorderSkin BorderSkin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderSkin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.BorderSkin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.BorderSkin" /> 罫線スキンの機能を提供するオブジェクト、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.BorderSkin" /> オブジェクト グラフの罫線スキンの機能を提供します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、グラフの罫線スキンを指定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 s グラフの枠線の幅。</summary>
        <value>
          <see langword="integer" /> \(ピクセル単位\)、グラフの罫線の幅を決定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Get または罫線の幅の使用のセットに <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BorderlineWidth%2A> 代わりにします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildNumber">
      <MemberSignature Language="C#" Value="public string BuildNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BuildNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.BuildNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビルド番号を取得、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see langword="string" /> グラフ コントロールのビルド番号を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartAreas">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection ChartAreas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection ChartAreas" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.ChartAreas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み取り専用の取得 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" /> 格納に使用されるオブジェクト <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>読み取り専用 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection" /> オブジェクトのコレクションを含む <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコレクション プロパティではアクセスする、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection> を格納するオブジェクト <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクトし、メソッドと、コレクションを操作するためのプロパティを提供します。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクトは、1 つまたは複数のグラフのプロットに使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.CreateAccessibilityInstance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、返すカスタム <see cref="T:System.Windows.Forms.AccessibleObject" /> グラフ全体のです。</summary>
        <returns>
          <see cref="T:System.Windows.Forms.AccessibleObject" /> 、グラフのです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorPositionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カーソル位置が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorPositionChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; CursorPositionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カーソルの位置を変更すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Customize">
      <MemberSignature Language="C#" Value="public event EventHandler Customize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Customize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.Customize" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラフ画像が描画される直前に発生します。 このイベントを使用すると、グラフのピクチャをカスタマイズできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomizeLegend">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt; CustomizeLegend" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CustomizeLegendEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラフの凡例をカスタマイズする必要がありますと発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ バインド、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールをデータ ソース。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、バインド、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールを指定したデータ ソース。  
  
 グラフにデータ ソースが設定されているし、その他のデータ操作は必要ありません、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind%2A> メソッドを明示的に呼び出す必要はありません。 このような場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> データはレンダリングされる前に、データ ソースに自体をバインドします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">グラフにバインドされたデータであるデータ ソース。</param>
        <param name="seriesGroupByField">データを系列にグループ化するために使用するフィールドの名前。</param>
        <param name="xField">X 値のフィールド名。</param>
        <param name="yFields">Y 値のフィールドの名前のコンマ区切りの一覧。</param>
        <param name="otherFields">バインドできるその他のデータ ポイントのプロパティ。</param>
        <summary>データは、特定の列の一意の値ごとに作成する 1 つの系列で、グラフを表にバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Series will be automatically added to the chart, depending on the number of unique values in the given **parameterReference tag is not supported!!!!**  
 column of the data source; in other words, the creation of series depends upon grouping of a column.  
  
 The data source can be a <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> or a <xref:System.Data.DataView> object. Note that all collections that implement the <xref:System.Collections.IEnumerable> interface can be used.  
  
 Other data point properties besides X and Y\-values can be bound. The format is: PointProperty\=Field\[{Format}\] \[,PointProperty\= Field\[{Format}\]\]. For example:"Tooltip\=Price{C1},Href\=WebSiteName".  
  
 A list of these data point properties is as follows: <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Url%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A>, which are the names of the custom properties.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindCrossTable">
      <MemberSignature Language="C#" Value="public void DataBindCrossTable (System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindCrossTable(class System.Collections.IEnumerable dataSource, string seriesGroupByField, string xField, string yFields, string otherFields, valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder sortingOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindCrossTable(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="seriesGroupByField" Type="System.String" />
        <Parameter Name="xField" Type="System.String" />
        <Parameter Name="yFields" Type="System.String" />
        <Parameter Name="otherFields" Type="System.String" />
        <Parameter Name="sortingOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="dataSource">グラフにバインドされたデータであるデータ ソース。</param>
        <param name="seriesGroupByField">データを系列にグループ化するために使用するフィールドの名前。</param>
        <param name="xField">X 値のフィールド名。</param>
        <param name="yFields">Y 値のフィールドの名前のコンマ区切りの一覧。</param>
        <param name="otherFields">バインドできるその他のデータ ポイントのプロパティ。</param>
        <param name="sortingOrder">グループ フィールドの値で並べ替える系列の順序。</param>
        <summary>データは、特定の列の一意の値ごとに作成する 1 つの系列で、グラフを表にバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Series will be automatically added to the chart, depending on the number of unique values in the given **parameterReference tag is not supported!!!!**  
 column of the data source; in other words, the creation of series depends upon grouping of a column.  
  
 The data source can be a <xref:System.Data.OleDb.OleDbDataReader>, <xref:System.Data.SqlClient.SqlDataReader> or a <xref:System.Data.DataView> object.  
  
 Note that all collections that implement the <xref:System.Collections.IEnumerable> interface can be used.  
  
 Other data point properties besides X and Y\-values can be bound. The format is: PointProperty\=Field\[{Format}\] \[,PointProperty\= Field\[{Format}\]\]. For example:"Tooltip\=Price{C1},Href\=WebSiteName".  
  
 A list of these data point properties is as follows: <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.AxisLabel%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.ToolTip%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Url%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.CustomProperties%2A>, which are the names of the custom properties.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="dataSource">データは、グラフでは、いずれかにより連結されたデータのあるソース <see cref="T:System.Collections.IEnumerable" /> オブジェクトです。</param>
        <summary>自動的に作成し、時系列データを指定したデータ テーブルにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テーブルの各列では、各列の系列が 1 つの系列の Y 値になります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindTable">
      <MemberSignature Language="C#" Value="public void DataBindTable (System.Collections.IEnumerable dataSource, string xField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DataBindTable(class System.Collections.IEnumerable dataSource, string xField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.DataBindTable(System.Collections.IEnumerable,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="xField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSource">データは、グラフでは、いずれかにより連結されたデータのあるソース <see cref="T:System.Collections.IEnumerable" /> オブジェクトです。</param>
        <param name="xField">系列の X 値に使用するフィールドの名前。</param>
        <summary>自動的に作成し、\[系列データを指定したデータ テーブルにバインドし、必要に応じて X の値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テーブルの各列では、各列の系列が 1 つの系列の Y 値になります。  
  
 系列の X 値のフィールドも指定できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataManipulator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataManipulator DataManipulator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataManipulator DataManipulator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataManipulator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataManipulator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> データを処理するメソッドとプロパティを提供するオブジェクト。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> データを処理するメソッドとプロパティを提供するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実行時にこのプロパティを使用します。  
  
-   Y 値をコピーします。  
  
-   データをフィルター処理します。  
  
-   データをグループ化します。  
  
-   空のポイントでは、欠落しているデータを置き換えます。  
  
-   データのエクスポート、 <xref:System.Data.DataSet> オブジェクトです。  
  
-   データを並べ替えます。  
  
-   財務式をデータに適用されます。  
  
 参照してください、 <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> 詳細については、クラスの概要です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AttributeProvider(typeof(System.ComponentModel.IListSource))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のデータ ソース、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Object" /> のデータ ソースを表す、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 系列内データ ポイントを使用して、でもデータ ソースにバインドできる、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataSource%2A> プロパティです。  
  
 データ ソースにバインドするようにグラフを強制的に、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.DataBind%2A> メソッドです。  
  
 データ ソースとして使用できるオブジェクトの一覧を次に示します。  
  
-   DataView  
  
-   データ リーダー \(SQL、OleDB\)  
  
-   DataSet  
  
-   DataTable  
  
-   バインディング ソース  
  
-   IDataSource  
  
-   配列  
  
-   表示内容  
  
-   すべての列挙可能なオブジェクト  
  
-   SqlCommand\/OleDbCommand \(DataSource データ バインドのみ\)  
  
-   SqlDataAdapter\/OleDbDataAdapter \(DataSource データ バインドのみ\)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定のコントロールのサイズを取得します。</summary>
        <value>A <see cref="T:System.Drawing.Size" /> コントロールの既定のサイズを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> アンマネージ コードとマネージの両方のリソースを解放するには <see langword="false" /> をアンマネージ リソースだけを解放します。</param>
        <summary>リリースでは、アンマネージし、必要に応じて、管理対象リソース。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.EndInit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>信号を <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> オブジェクトの初期化が完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのフォントのプロパティを取得します。</summary>
        <value>A <see cref="T:System.Drawing.Font" /> コントロールのテキストのフォントを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のテキストの色、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> グラフのテキストの色を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティでは、このクラスに適用されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatNumber">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt; FormatNumber" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.FormatNumber" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>数値が文字列に変換する必要がある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChartElementOutline">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartElementOutline GetChartElementOutline (object element, System.Windows.Forms.DataVisualization.Charting.ChartElementType elementType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.ChartElementOutline GetChartElementOutline(object element, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType elementType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.GetChartElementOutline(System.Object,System.Windows.Forms.DataVisualization.Charting.ChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartElementOutline</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Object" />
        <Parameter Name="elementType" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="element">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> オブジェクト。</param>
        <param name="elementType">要素の型。</param>
        <summary>グラフ要素のアウトラインを返します。</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementOutline" /> を含むオブジェクト。  
  
-   このグラフ要素のアウトライン マーカーとして使用できる絶対座標の点の配列。  
  
-   A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> このグラフ要素のアウトラインを描画するためのオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 `chartElement` 、グラフの一部ではない、または `elementType` と組み合わせることはできません `chartElement`, 、マーカーのポイントの空の配列が結果に含まれます。 マーカーのポイントは時計回りに並べ替えられます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">要求されたグラフのサービスの型。</param>
        <summary>要求されたグラフ サービスを返します。</summary>
        <returns>
          <see cref="T:System.Object" /> サービス型を表すまたは <see langword="null" /> 場合は、サービスが見つかりません。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToolTipText">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; GetToolTipText;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt; GetToolTipText" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.GetToolTipText" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ToolTipEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ツールヒント テキストを取得するツールヒントを表示する前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>任意の時点に配置される座標で定義される、指定された X と Y の場合は、グラフ要素を決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定した位置に配置される存在する場合は、グラフ要素を確認するには、このメソッドを呼び出します。  
  
 このメソッドは、いくつかのマウス関連のイベントでよく使用されて — など [HitTest](assetId:///M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown(System.Windows.Forms.MouseEventArgs?qualifyHint=False&autoUpgrade=True)\-グラフ要素のエンドユーザーをクリックします。 イベント パラメーターから取得した X および Y マウス座標を使用して、 `x` と `y` このメソッドの呼び出しのパラメーターの値。  
  
 プロパティ、 [HitTest](assetId:///T:System.Windows.Forms.DataVisualization.Charting.HitTestResult?qualifyHint=False&autoUpgrade=True) 返されるオブジェクトは、どのグラフ要素がクリックしてされた; を判別するのには使用して、 [HitTest](assetId:///T:System.Windows.Forms.DataVisualization.Charting.HitTestResult?qualifyHint=False&autoUpgrade=True) オブジェクトは、存在する場合も選択すると、実際のオブジェクトのインスタンスを提供します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">ユーザーがクリックした点の X 座標値。</param>
        <param name="y">ユーザーがクリックした点の Y 座標の値。</param>
        <summary>任意の時点に配置される座標で定義される、指定された X と Y の場合は、グラフ要素を決定します。</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> 指定した場所にあるオブジェクトが存在する場合は、グラフ要素をに関する情報を提供します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 グラフ要素かどうかを指定された位置にあるこのメソッドを呼び出します。  
  
 プロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> 返されるオブジェクトは、どのグラフ要素がクリックしてされた; を判別するのには使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> オブジェクトは、存在する場合も選択すると、実際のオブジェクトのインスタンスを提供します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y, bool ignoreTransparent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, bool ignoreTransparent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="x">ユーザーがクリックした点の X 座標値。</param>
        <param name="y">ユーザーがクリックした点の Y 座標の値。</param>
        <param name="ignoreTransparent">
          <see langword="true" /> 透明な要素を無視するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>任意で定義されたポイントに配置されている場合は、グラフ要素を決定座標 X と Y 座標を指定します。 必要に応じて透明な要素は無視できます。</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> 指定した場所にあるオブジェクトが存在する場合は、グラフ要素をに関する情報を提供します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 グラフ要素かどうかを指定された位置にあるこのメソッドを呼び出します。  
  
 透明な要素を無視するのには、設定、 `ignoreTransparent` パラメーターを `true`します。  
  
 プロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> 返されるオブジェクトは、どのグラフ要素がクリックしてされた; を判別するのには使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> オブジェクトは、存在する場合も選択すると、実際のオブジェクトのインスタンスを提供します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest (int x, int y, System.Windows.Forms.DataVisualization.Charting.ChartElementType requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult HitTest(int32 x, int32 y, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Windows.Forms.DataVisualization.Charting.ChartElementType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="requestedElement" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType" />
      </Parameters>
      <Docs>
        <param name="x">ユーザーがクリックした点の X 座標値。</param>
        <param name="y">ユーザーがクリックした点の Y 座標の値。</param>
        <param name="requestedElement">テスト対象のグラフ要素の種類を決定するフラグです。</param>
        <summary>特定の種類のグラフ要素がによって定義されたポイントにあるかどうかを X 座標と Y 座標を指定します。</summary>
        <returns>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> 指定した場所にあるオブジェクトが存在する場合は、グラフ要素をに関する情報を提供します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、指定された型のグラフ要素が指定したポイントにあるかを判断します。  
  
 プロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> 返されるオブジェクトは、どのグラフ要素がクリックしてされた; を判別するのには使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.HitTestResult> オブジェクトは、存在する場合も選択すると、実際のオブジェクトのインスタンスを提供します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.HitTestResult[] HitTest (int x, int y, bool ignoreTransparent, System.Windows.Forms.DataVisualization.Charting.ChartElementType[] requestedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.DataVisualization.Charting.HitTestResult[] HitTest(int32 x, int32 y, bool ignoreTransparent, valuetype System.Windows.Forms.DataVisualization.Charting.ChartElementType[] requestedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.HitTest(System.Int32,System.Int32,System.Boolean,System.Windows.Forms.DataVisualization.Charting.ChartElementType[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.HitTestResult[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="ignoreTransparent" Type="System.Boolean" />
        <Parameter Name="requestedElement" Type="System.Windows.Forms.DataVisualization.Charting.ChartElementType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="x">指定したデータ ポイントの X 座標。</param>
        <param name="y">指定されたデータ ポイントの Y 座標。</param>
        <param name="ignoreTransparent">
          <see langword="true" /> 透明な要素を無視するにはそれ以外の場合、 <see langword="false" />です。</param>
        <param name="requestedElement">配列 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartElementType" /> をテストするため、結果をフィルター処理するために型を指定するオブジェクト。 省略した場合、要素の型チェックは無視され、すべての要素型が有効になります。</param>
        <summary>指定された X と Y で定義される点が、座標を使用するには、指定された型の 1 つのグラフ要素があるかどうかを決定します。</summary>
        <returns>配列 <see cref="T:System.Windows.Forms.DataVisualization.Charting.HitTestResult" /> 指定した場所に存在するが見つかった場合は、グラフ要素に関する情報を提供するオブジェクト。 配列に格納できる要素が 1 つ以上 <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartElementType.Nothing" />します。 結果のオブジェクトは、上部にあるコントロールの別のレイヤーの一番下に並べ替えます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ゲージ要素かどうかを指定された位置にあるこのメソッドを呼び出します。 このメソッドはなど、いくつかのマウス関連のイベントで使用頻度 [HitTest メソッド \(Int32, Int32, Boolean,](assetId:///M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown(System.Windows.Forms.MouseEventArgs?qualifyHint=False&autoUpgrade=True), 、ゲージ、エンドユーザーがクリックした要素を判断します。 イベント パラメーターから取得した X および Y マウス座標は、このメソッドの呼び出しの X と Y のパラメーター値が使用されます。  
  
 返されたプロパティ [HitTest メソッド \(Int32, Int32, Boolean,](assetId:///T:System.Windows.Forms.DataVisualization.Charting.HitTestResult?qualifyHint=False&autoUpgrade=True) クリックしてされたどのグラフ要素を決定するオブジェクトを使用して、 [HitTest メソッド \(Int32, Int32, Boolean,](assetId:///T:System.Windows.Forms.DataVisualization.Charting.HitTestResult?qualifyHint=False&autoUpgrade=True) オブジェクトは、存在する場合も選択すると、実際のオブジェクトのインスタンスを提供します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Images">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection Images { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection Images" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Images" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" /> を格納するオブジェクト <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImage" /> 、グラフのオブジェクト。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection" /> オブジェクトのコレクションを含む <see cref="T:System.Windows.Forms.DataVisualization.Charting.NamedImage" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して追加する <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> オブジェクトと削除 <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> オブジェクトから、 <xref:System.Windows.Forms.DataVisualization.Charting.NamedImagesCollection> のオブジェクト、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart>です。 このコレクション プロパティは、実行時にのみに使用します。  
  
 イメージ: 型から派生したオブジェクトは、 <xref:System.Drawing.Image>, など <xref:System.Drawing.Bitmap>, 、それが動的に作成\-このコレクションに格納され、イメージに関連するのには、後で、割り当てられていることができます <xref:System.Windows.Forms.DataVisualization.Charting.Chart> プロパティなど <xref:System.Windows.Forms.DataVisualization.Charting.Chart.BackImage%2A>します。  
  
 割り当てると、 <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> オブジェクト内のイメージ関連のプロパティに、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> クラスでの名前を使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.NamedImage> のオブジェクト、 `string` イメージに関連するプロパティの値。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Invalidate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表面全体を無効化、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> させ、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールを再描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Invalidate(System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> 無効化する領域を指定するオブジェクト。</param>
        <summary>指定された領域を無効化、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、指定した領域を追加、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールの更新領域で、次の描画操作で再描画される領域です。 この方法でもが、描画メッセージを送信する、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftShadows">
      <MemberSignature Language="C#" Value="public bool IsSoftShadows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSoftShadows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または影を描画するときに滑らかなグラデーションが適用されるかどうかを決定するフラグを設定します。</summary>
        <value>
          <see langword="true" /> 影をスムージング; を使用して描画する場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合の値、 `ShadowOffset` 系列のプロパティは、データ ポイント、グラフ エリアや凡例がゼロ以外設定する色を使用して、シャドウが適用されて、 `ShadowColor` プロパティです。  
  
 場合の値、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.IsSoftShadows%2A> プロパティは、 `true`, 、影に滑らかなグラデーションが適用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legends">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendCollection Legends { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LegendCollection Legends" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Legends" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCollection" /> すべてを格納する <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> によって使用されるオブジェクト、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCollection" /> オブジェクトを含む、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> グラフで使用されるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコレクション プロパティがすべて格納 <xref:System.Windows.Forms.DataVisualization.Charting.Legend> によって使用されるオブジェクト、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">読み込むストリーム。</param>
        <summary>テンプレートを読み込み、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> 画像ストリームを制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メモリ ストリーム、ファイル ストリームなどなどのストリームからテンプレートをロードする場合は、このメソッドを使用します。  
  
 設定することを確認、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> プロパティを `true` でテンプレートを保存する前に、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> メソッドです。  
  
 読み込まれたテンプレートに 2 つのデータ系列がある場合は、グラフに、定期的なアイテムの外観プロパティが順番に適用されます。 つまり、テンプレート系列の最初の外観プロパティは、グラフの最初の系列に割り当てられている、2 番目のテンプレート系列の外観プロパティは、グラフの 2 番目の系列に適用し、テンプレートの最初の系列はグラフの 3 番目の系列をもう一度使用されます。 グラフ領域と外観プロパティを持つ他のコレクションにも同じことが当てはまります。  
  
 テンプレートは、カスタム パレットをシミュレートするために使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadTemplate">
      <MemberSignature Language="C#" Value="public void LoadTemplate (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadTemplate(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">読み込むテンプレートのファイル名。 ディスクから読み込まれるテンプレートの完全パスを指定する必要があります。</param>
        <summary>ディスクから、指定したファイル名を持つテンプレートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `name` パラメーターは、完全なパス、C:\\MyPic.jpg などを使用する必要があります。 ファイル拡張子を指定する必要がありますも注意してください。  
  
 このメソッドは、保存されているディスクからテンプレートを読み込みます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> メソッドです。  
  
 設定することを確認、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> プロパティを `true` でテンプレートを保存する前に、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> メソッドです。  
  
 読み込まれたテンプレートに 2 つのデータ系列がある場合は、グラフに、定期的なアイテムの外観プロパティが順番に適用されます。 つまり、テンプレート系列の最初の外観プロパティは、グラフの最初の系列に割り当てられている、2 番目のテンプレート系列の外観プロパティは、グラフの 2 番目の系列に適用し、テンプレートの最初の系列はグラフの 3 番目の系列をもう一度使用されます。 グラフ領域と外観プロパティを持つ他のコレクションにも同じことが当てはまります。  
  
 テンプレートは、カスタム パレットをシミュレートするために使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected override void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCursorChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>上書き、 <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> メソッドを発生させる、 <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging" /> と <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomize">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCustomize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.Customize" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCustomizeLegend">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomizeLegend (System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection legendItems, string legendName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomizeLegend(class System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection legendItems, string legendName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnCustomizeLegend(System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="legendItems" Type="System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" />
        <Parameter Name="legendName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="legendItems">
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> オブジェクト。</param>
        <param name="legendName">凡例の名前。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnDoubleClick(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> イベント引数を格納しているオブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFormatNumber">
      <MemberSignature Language="C#" Value="protected virtual void OnFormatNumber (System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFormatNumber(class System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnFormatNumber(System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントの引数を示す <see cref="T:System.Windows.Forms.DataVisualization.Charting.FormatNumberEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.FormatNumber" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected override void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnLocationChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> イベント引数を格納しているオブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントの引数を示す <see cref="T:System.MouseEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントの引数を示す <see cref="T:System.MouseEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントの引数を示す <see cref="T:System.MouseEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントの引数を示す <see cref="T:System.PaintEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected override void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent">イベントの引数を示す <see cref="T:System.PaintEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPostPaint (System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostPaint(class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPostPaint(System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントの引数を示す <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrePaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrePaint (System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrePaint(class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnPrePaint(System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントの引数を示す <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected override void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnResize(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> イベント引数を格納しているオブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected override void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnRightToLeftChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> イベント引数を格納しているオブジェクト。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected override void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.OnSystemColorsChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ColorPaletteEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定については、パレット、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette" /> 使用するパレットを決定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 両方の次の条件が満たされなかった場合は、データ要素に色を自動的に割り当てるパレットを使用します。  
  
-   データ ポイント自体には、自分に割り当てられた色はありません。  
  
-   また、データ ポイントが属するデータ系列には割り当てられている色はありません。  
  
 使用する色をグラフの種類に依存している系列またはデータ ポイントの色を明示的に指定しない場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> オブジェクトのパレットまたは指定されている場合、関連する一連のパレット。  
  
> [!NOTE]
>  場合、 `Palette` 両方のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> と <xref:System.Windows.Forms.DataVisualization.Charting.Series> にオブジェクトが設定されている <xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette.None>, 、関連するデータ系列またはデータ要素に色が割り当てられていないと、データ ポイント、引き込まれない、および"empty"領域として表示されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaletteCustomColors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] PaletteCustomColors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] PaletteCustomColors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.PaletteCustomColors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.ColorArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタムのパレットの色の配列を設定します。</summary>
        <value>配列 <see cref="T:System.Drawing.Color" /> のグラフの系列に使用する色のセットを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 色の 16 を超える必要があります、またはグラフに独自の色を適用する、カスタム パレットを定義する必要があります。 カスタム パレットを使用して、グラフに表示することを目的の順序で独自の色を追加できます。 この種類のパレットは、グラフの系列の数は、デザイン時に既知ではない場合に特に便利です。  
  
 このプロパティは持たないされるときに有効、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Palette%2A> プロパティは、 *いない* に設定  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette.None>。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostPaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PostPaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.PostPaint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラフ要素を描画するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrePaint">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt; PrePaint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.PrePaint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.ChartPaintEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グラフ要素の背景を描画するときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Printing">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.PrintingManager Printing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.PrintingManager Printing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Printing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.PrintingManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み取り専用の取得 <see cref="T:System.Windows.Forms.DataVisualization.Charting.PrintingManager" /> オブジェクトのグラフの印刷に使用します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.PrintingManager" /> オブジェクトのグラフの印刷に使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 グラフを印刷するときに、スクロール バーを除くすべてのグラフ要素が印刷されます。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager> オブジェクトには、基本的な印刷操作の使用は、次のメソッドが含まれています。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PageSetup%2A>: 用紙サイズ、用紙トレイ、印刷の向き、およびなどを選択する、エンドユーザーは、ページ設定\] ダイアログを表示します。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.PrintPreview%2A>: ズーム、グラフを印刷およびなどのために、エンドユーザーは、印刷プレビュー\] ダイアログを表示します。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.PrintingManager.Print%2A>: 印刷、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart>; オプションで印刷前に、\[印刷\] ダイアログを表示できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public override void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.Refresh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>強制的に、コントロールがクライアント領域を無効化し、直後にそのコントロール自体とその子コントロールを再描画するようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingDpiX">
      <MemberSignature Language="C#" Value="public double RenderingDpiX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderingDpiX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(96)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の水平方向の解像度、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> レンダラーです。</summary>
        <value>A <see langword="double" /> グラフ レンダラーの水平方向の解像度を示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderingDpiY">
      <MemberSignature Language="C#" Value="public double RenderingDpiY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RenderingDpiY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.RenderingDpiY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(96)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の垂直方向の解像度、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> レンダラーです。</summary>
        <value>A <see langword="double" /> グラフ レンダラーの垂直方向の解像度を示す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAutoValues">
      <MemberSignature Language="C#" Value="public void ResetAutoValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAutoValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.ResetAutoValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>リセットには、"Auto"にグラフのプロパティの値に自動的に計算されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 いくつかのグラフのプロパティを「自動」に設定することができます\-たとえば、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Minimum%2A>; グラフを描画する前にこれらのプロパティが計算されます。 "Auto"が通常として表される、 <xref:System.Double.NaN> 値。  
  
 これらのプロパティを「自動」に、計算される値をリセットするには、このメソッドを呼び出す \(<xref:System.Double.NaN>\)。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">イメージを保存するストリーム。</param>
        <param name="format">イメージ形式。</param>
        <summary>イメージは、指定されたストリームに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (System.IO.Stream imageStream, System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(class System.IO.Stream imageStream, valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.IO.Stream,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageStream" Type="System.IO.Stream" />
        <Parameter Name="format" Type="System.Windows.Forms.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageStream">イメージを保存するストリーム。</param>
        <param name="format">グラフのイメージ形式。</param>
        <summary>グラフ イメージを指定したストリームに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Drawing.Imaging.ImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, class System.Drawing.Imaging.ImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">イメージを保存するファイルの名前。</param>
        <param name="format">イメージ形式。</param>
        <summary>指定したファイルに、イメージを保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveImage">
      <MemberSignature Language="C#" Value="public void SaveImage (string imageFileName, System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveImage(string imageFileName, valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.SaveImage(System.String,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFileName" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.Forms.DataVisualization.Charting.ChartImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFileName">イメージを保存するファイルの名前。</param>
        <param name="format">グラフのイメージ形式。</param>
        <summary>グラフ イメージを指定したファイルに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRangeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択範囲の開始位置または終了位置が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionRangeChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt; SelectionRangeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.DataVisualization.Charting.Chart.SelectionRangeChanging" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.DataVisualization.Charting.CursorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生する選択項目が開始または終了位置が変更されようとしています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serializer">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartSerializer Serializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ChartSerializer Serializer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Serializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartSerializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" /> グラフのシリアル化に使用されるオブジェクト。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" /> グラフのシリアル化に使用されるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、デザイン時または実行グラフをシリアル化時にします。  
  
 詳細については、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer> クラス、クラスの概要を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Series">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SeriesCollection Series { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.SeriesCollection Series" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Series" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.SeriesCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SeriesCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /> を含むオブジェクト <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesCollection" /> を含むオブジェクト <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコレクション プロパティでは、アクセスすることができます、 <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> クラスが格納されている <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトし、メソッドと、このコレクションを操作するためのプロパティを提供します。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 保管されたオブジェクト <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> オブジェクト、およびそのデータの属性です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Size), "300, 300")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールのサイズを取得または設定します。</summary>
        <value>A <see cref="T:System.Drawing.Size" /> コントロールのサイズを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressExceptions">
      <MemberSignature Language="C#" Value="public bool SuppressExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.SuppressExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または致命的でない例外を抑制する必要があるかどうかを決定するフラグを設定します。</summary>
        <value>
          <see langword="true" /> 致命的でない例外を抑制する必要がある場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを設定する場合は、 `true`, 、致命的でない例外が抑制されます。  
  
 ときに、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールは、データとその他の設定を使用して、チャートをプロット正しくことはできません、例外がスローされます。 例外の表示は、アプリケーションのテスト中に便利ですが、それらが表示されないアプリケーションが離されるとします。  
  
> [!NOTE]
>  このプロパティを設定 `true` ユーザー アプリケーションのソース コードで深刻な問題を非表示にすることがあります。 この設定にデータを偽ることがありますグラフ イメージが生成されるもあります。 このモードでのみで使用されるリリース ビルドをすることを強くお勧めします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAntiAliasingQuality">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality TextAntiAliasingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.TextAntiAliasingQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality), "High")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality" /> テキストにアンチエイリアシングを適用するときに使用する型。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality" /> 列挙値のテキストにアンチエイリアシングを適用するために使用します。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.TextAntiAliasingQuality.High" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テキストをアンチ エイリアス効果が適用されている場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールはこのプロパティを使用して適用するテキストのアンチエイリアシングの種類を判断します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Titles">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.TitleCollection Titles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.TitleCollection Titles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Chart.Titles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.TitleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.TitleCollection" /> すべて格納するために使用されるオブジェクト <see cref="T:System.Windows.Forms.DataVisualization.Charting.Title" /> によって使用されるオブジェクト、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.TitleCollection" /> すべて格納するために使用されるオブジェクト <see cref="T:System.Windows.Forms.DataVisualization.Charting.Title" /> グラフ コントロールで使用されるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Titles%2A> プロパティがすべて格納 <xref:System.Windows.Forms.DataVisualization.Charting.Title> によって使用されるオブジェクト、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAnnotations">
      <MemberSignature Language="C#" Value="public void UpdateAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.UpdateAnnotations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>注釈を更新、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Chart.UpdateCursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>更新にカーソルを置き、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveImage">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたターゲットに、イメージを保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>表面全体を無効化、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> させ、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールを再描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="AlignDataPointsByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>軸ラベルを使用してデータ ポイントを配置します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="DataBindTable">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>自動的に作成し、時系列データを指定したデータ テーブルにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="LoadTemplate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>テンプレートを読み込み、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> 指定されたソースからのコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="DataBindCrossTable">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データは、特定の列の一意の値ごとに作成する 1 つの系列でグラフをテーブルにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>