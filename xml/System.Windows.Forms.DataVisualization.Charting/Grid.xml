<Type Name="Grid" FullName="System.Windows.Forms.DataVisualization.Charting.Grid">
  <TypeSignature Language="C#" Value="public class Grid" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Grid extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Grid" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>メソッドとプロパティのメジャーおよびマイナーのグリッドの管理を提供 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Axis" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、グラフのグリッドの機能を提供しを使用して、公開、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.MajorGrid%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.Axis.MinorGrid%2A> の各プロパティ <xref:System.Windows.Forms.DataVisualization.Charting.Axis> オブジェクトです。  
  
 既定でグリッド線はありません、 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>, 、および <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> プロパティを設定します。 グリッド線のこれらのプロパティが設定されていないときに、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールはグリッド線の適切な値を自動的に決定します。  
  
 軸の値と既定では、補助グリッド線が、 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.Interval%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A>, 、および <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> プロパティに設定 **自動** \(0\)。 軸のラベルまたは補助グリッド線が有効になっており、これらのプロパティが変更されていない場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールが自動的に補助グリッド線を描画する頻度を決定します。  
  
 軸のグリッド:  
  
-   有効または無効になっていることができます。  
  
-   最初に描画されますを決定する開始点を設定します。  
  
-   スタイル、幅、および色を設定できる行を表示します。  
  
-   自動間隔、または手動で設定されている間隔のどちらかことができます。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grid ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Grid.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Grid" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または目盛りまたは補助グリッド線が有効になっているかどうかを決定するフラグを設定します。</summary>
        <value>
          <see langword="True" /> 有効な場合、 <see langword="false" /> 無効になっている場合。 既定値は <see langword="true" /> の主要グリッド オブジェクトおよび <see langword="false" /> 補助グリッド線オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メジャーおよびマイナーのグリッドには、有効にすると表示され、無効になっている場合は表示されませんが。  
  
 無効になっている場合、目盛りは表示されません。  
  
 目盛りを無効に設定できます、 <xref:System.Windows.Forms.DataVisualization.Charting.TickMark.TickMarkStyle%2A> プロパティを <xref:System.Windows.Forms.DataVisualization.Charting.TickMarkStyle.None>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または目盛りまたは補助グリッド線の間隔を設定します。</summary>
        <value>A <see langword="double" /> グリッド線の間隔を表す値。 既定では、値が設定されていない \(<see cref="F:System.Double.NaN" />\) の主要グリッド線。 補助グリッド線の既定値はゼロ \(0\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定で軸ラベル、目盛り、およびグリッド線のこのプロパティは設定されません。 設定されていない場合: 既定では、明示的を使用していずれかの <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> またはの値を割り当てることで、デザイン時に <xref:System.Double.NaN> 実行時に\-によってこのプロパティの実際の値を決定、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis> グリッド線と目盛りマークなどのグラフ要素が属しているオブジェクトします。  
  
 補助目盛りとグリッド線の間隔の影響を受けましたことはありません、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.Interval%2A> プロパティの値。  
  
 間隔は、軸の単位で測定し、適用可能なグラフ要素を描画するどのくらいの頻度が決まります。 たとえば、縦棒グラフには、1 の X 軸ステップが含まれている \(つまり、1、2、3、4、およびなど\)。設定した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Interval%2A> プロパティの他のすべての列 2 に、X 軸の軸ラベルが表示されます。  
  
 すべての適用可能なグラフ要素に対しても同じことが当てはまります。 つまり前の例のストリップに行が使用されている場合で、 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.IntervalOffset%2A> 0.5 のと、 <xref:System.Windows.Forms.DataVisualization.Charting.StripLine.Interval%2A> プロパティが 2、ストリップ ラインは 0.5、2.5、4.5、およびなどに表示されます。  
  
 グラフ要素を設定すると `Interval` プロパティを 0 に、間隔が自動的に決定して、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart>コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.AxisElementIntervalValueConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグリッド線のオフセットを設定します。</summary>
        <value>A <see langword="double" /> 間隔のオフセットを表す値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定で軸ラベル、目盛り、およびグリッド線のこのプロパティは設定されません。 設定されていない場合、既定では、指定するか明示的に「設定されていない」、デザイン時の値を割り当てることによって <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> 実行時に\-によってこのプロパティの実際の値を決定、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis> にグリッド線、目盛りなどのグラフ要素が属するオブジェクト。  
  
 値によって補助目盛りとグリッド線の間隔のオフセットが影響を受けることはありません、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffset%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis> オブジェクトです。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType%2A> プロパティの設定は、オフセットの測定単位を定義します。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffset%2A> 負の値を指定できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または目盛りと補助グリッド線の間隔のオフセットの種類を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 間隔の種類を示す列挙値。 既定では、グリッド線のことは設定されません。 補助グリッド線の既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定で軸ラベル、目盛り、およびグリッド線のこのプロパティは設定されません。 設定されていない場合\-既定では、指定するか明示的に「設定されていない」、デザイン時の値を割り当てることによって <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> 実行時に\-によってこのプロパティの実際の値を決定、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis> オブジェクトをグラフ要素\-グリッド線またはグラフをたとえば — に属しています。  
  
 補助目盛りとグリッド線の間隔のオフセットの種類を受けない、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> プロパティの値。  
  
 この間隔のオフセットの種類に設定されます <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, 、 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> プロパティが使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または目盛りまたは補助グリッド線の間隔の種類を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 間隔の種類を示す列挙値。 既定では軸のラベル、目盛り、およびグリッド線が設定されていないを使用して、 <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet" /> 列挙値。 補助目盛りとグリッド線の既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定で軸ラベル、目盛り、およびグリッド線のこのプロパティは設定されません。 設定されていない場合\-既定では、使用するか明示的に「設定されていない」、デザイン時の値を割り当てることによって <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.NotSet> 実行時に\-によってこのプロパティの実際の値を決定、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalOffsetType%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis> オブジェクトをグラフ要素\-グリッド線またはグラフをたとえば — に属しています。  
  
 値によって補助目盛りとグリッド線の間隔の種類が影響を受けることはありません、 <xref:System.Windows.Forms.DataVisualization.Charting.Axis.IntervalType%2A> プロパティです。  
  
 間隔の種類に設定することができます <xref:System.Web.UI.DataVisualization.Charting.DateTimeIntervalType.Auto>; 間隔の種類が X 値または、プロットの Y 値のどちらかに依存し、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 軸によって、適用可能な要素に属するオブジェクト。  
  
 設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> 値軸のプロパティはデータ ポイントの値がある場合、効果がのみ <xref:System.DateTime> または `double` 値。 また、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> または <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> 、プロットの <xref:System.Windows.Forms.DataVisualization.Charting.Series> に設定する必要があります <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> または <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>です。  
  
 設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.IntervalType%2A> カテゴリ軸のプロパティは効果場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> プロパティ \(または <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> によって問題の軸のプロパティ\)、プロットの <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトがあるか、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> または <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>です。  
  
> [!NOTE]
>  日曜日は週の初日と見なされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグリッドの線の色を設定します。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> オブジェクト。 既定値は <see cref="P:System.Drawing.Color.Black" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineColor%2A> やグリッドに目盛りと補助目盛りの色を指定するプロパティを使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグリッド線のスタイルを設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> 列挙値。 既定値は、<see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle.Solid" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineDashStyle%2A> プロパティは、目盛りと補助目盛りのグリッド線のスタイルを指定するために使用できます。 行には、ソリッド、ピリオドで区切られたなどができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または目盛りと補助グリッド線の線の幅を設定します。</summary>
        <value>I<see langword="nteger" /> を表す線の幅 \(ピクセル単位\)。 既定値は 1 です\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Grid.LineWidth%2A> \(ピクセル単位\) 目盛りと補助目盛りのグリッド線の幅を指定するプロパティを使用することができます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>