<Type Name="ChartSerializer" FullName="System.Windows.Forms.DataVisualization.Charting.ChartSerializer">
  <TypeSignature Language="C#" Value="public class ChartSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.ChartSerializer" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Format")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>シリアル化を有効、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、として公開される、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Serializer%2A> ルートのプロパティ <xref:System.Windows.Forms.DataVisualization.Charting.Chart> クラスです。  
  
 シリアル化では、グラフの状態を保存し、グラフにシリアル化されたデータを読み込むオプションも提供します。 グラフのデータを含む、すべてのグラフ プロパティを保持できます。 さらに、シリアル化対象としてマークされたすべてのグラフ プロパティをリセットできます。  
  
 このクラスは、ユーザー定義のビュー ステートを管理するときに必要に応じて使用できます。 いずれかの `Load` メソッドは、ビュー ステートおよびのいずれかの読み込みに使用できる、 `Save` ビュー ステートを設定するときに、メソッドを使用できます。  
  
 データの格納がシリアル化するのには、XML またはバイナリ形式を使用できます。 既定では、XML を使用すると形式を変更することが、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> プロパティです。  
  
 グラフのプロパティが保存されを使用して読み込む、 `Save` と `Load` メソッド、それぞれします。 既定以外の値を持つプロパティのみが保存されることに注意してください。 データが保存できるしたり、ストリーム、ファイルを使用して読み込む <xref:System.IO.TextWriter>, 、<xref:System.IO.TextReader>, 、<xref:System.Xml.XmlWriter> と <xref:System.Xml.XmlReader> オブジェクトです。 保存またはオブジェクトを使用してデータを読み込んでから派生した場合、 <xref:System.IO.TextReader>, 、<xref:System.IO.TextWriter>, 、<xref:System.Xml.XmlReader> または <xref:System.Xml.XmlWriter> クラス、データの形式は XML である必要があります。  
  
 次の一覧は、シリアル化可能なデータを定義するために使用する高度な基本的なものから 3 つの手法をについて説明します。 あるもシリアル化できないデータを定義することに注意してください。 この手法は、次の段落で説明します。  
  
-   シリアル化、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> を使用して、 `Save` と `Load` メソッド、任意のシリアル化可能なプロパティを指定することがなく。 グラフのデータが含まれている既定以外の値を持つすべてのグラフ プロパティをシリアル化されます。  
  
-   指定したグラフのプロパティをシリアル化、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティです。<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティなどのデータや外観などのカテゴリにシリアル化するグラフのプロパティをグループ化します。 なおの名前 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> と <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトが自動的にシリアル化されていないシリアル化されたデータが既存のグラフ領域と読み込まれたときの系列に適用されます。  
  
> [!IMPORTANT]
>  <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティはによって内部的に実装されて、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> と制御、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティ  
  
-   指定したグラフのプロパティのシリアル化、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティです。 これは、シリアル化可能なすべてのグラフ プロパティのコンマ区切りのリストです。 このプロパティは、明示的な値に設定されて、保存するすべてのプロパティを指定する開発者の責任になります。 つまりとは異なり、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> 、グラフ エリアと系列の名前、プロパティは自動的に保存されます。<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティを組み合わせて使用もできます。 ただし、必ず <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 設定されると、それ以外の場合指定したグラフのプロパティは、それ自体の連結、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティは上書きされます。  
  
 特定のプロパティがシリアル化されることを禁止するのには、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。 1 つのプロパティ設定されている場合、シリアル化とシリアル化のワイルドカードを使用している場合によく用いられる、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティが優先されます。 ただし、優先順位は、プロパティが指定した場合に使用されたワイルドカードの数によっても異なります。  
  
 既定では、シリアル化可能なプロパティが読み込まれる前に既定値にリセットされます。 使用してこの動作を変更できる、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> プロパティです。<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Reset%2A> メソッドは、明示的にグラフのプロパティを既定値にリセットにも使用できます。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SerializationContents Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SerializationContents Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.SerializationContents), "Default")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SerializationContents</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはシリアル化するグラフ コンテンツの種類を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.SerializationContents" /> 、読み込み中にシリアル化されるグラフの内容を表す列挙値の保存や操作をリセットします。 既定では、データを含む、すべての既定以外のグラフ プロパティが永続化されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、すべてのグラフ プロパティがシリアル化のいずれか、 `Save` と `Load` メソッドが呼び出されます。 経由で何がシリアル化されるその他の制御を提供するには、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティです。 なお、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティは、ならびにも使用できます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティです。  
  
 **重要** 、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティをシリアル化する「外観」などのグラフの特性の種類を決定として内部的に実装が実際には、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティです。 つまり、その設定、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティを設定して、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティが、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティ値のオーバーライドされない限り、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> が連結されます。 この手順の例を次のサンプル コードを参照してください。  
  
 設定した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティには、すべて <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> と <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクト名を自動的にシリアル化されます。 つまり、グラフ エリアと系列に関連するシリアル化されたデータが読み込まれるときに既存のオブジェクトに適用されることです。  
  
 このプロパティに影響がすべてのロードを設定するには、保存し、リセット操作します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SerializationFormat Format { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SerializationFormat Format" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.SerializationFormat), "Xml")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグラフをシリアル化する場合に使用される形式を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.SerializationFormat" /> をシリアル化されたデータの形式を表す列挙値。 既定値は XML です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データは、XML またはバイナリ形式でシリアル化できます。 バイナリ形式はコンパクトであり、XML よりも容量が少ないを受け取ります。 ただし、XML は人間が判読できるテキスト形式です。  
  
 保存したり、シリアル化されたデータをロードするとき、形式は XML である必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContentString">
      <MemberSignature Language="C#" Value="protected string GetContentString (System.Windows.Forms.DataVisualization.Charting.SerializationContents content, bool serializable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetContentString(valuetype System.Windows.Forms.DataVisualization.Charting.SerializationContents content, bool serializable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.GetContentString(System.Windows.Forms.DataVisualization.Charting.SerializationContents,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Windows.Forms.DataVisualization.Charting.SerializationContents" />
        <Parameter Name="serializable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="content">シリアル化可能な内容です。</param>
        <param name="serializable">
          <see langword="True " />シリアル化できる文字列を取得するには <see langword="false" /> シリアル化できない文字列を取得します。</param>
        <summary>シリアル化または非シリアル化可能なクラスおよび特定のフラグの値に応じて、プロパティ名を返します。</summary>
        <returns>A <see langword="string" /> をシリアル化または非シリアル化可能なクラスやプロパティの名前を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetWhenLoading">
      <MemberSignature Language="C#" Value="public bool IsResetWhenLoading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsResetWhenLoading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはオブジェクト プロパティを読み込む前に既定値にリセットするかどうかを示すフラグを設定します。</summary>
        <value>
          <see langword="True" /> オブジェクト プロパティを読み込む前に既定値にリセットする場合それ以外の場合、 <see langword="False" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemplateMode">
      <MemberSignature Language="C#" Value="public bool IsTemplateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグラフのシリアライザーがテンプレート作成モードで動作しているかどうかを示すフラグを設定します。</summary>
        <value>
          <see langword="True" /> グラフのシリアライザーがテンプレート作成モードで動作している場合それ以外の場合、 <see langword="False" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknownAttributeIgnored">
      <MemberSignature Language="C#" Value="public bool IsUnknownAttributeIgnored { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknownAttributeIgnored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsUnknownAttributeIgnored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか不明な XML プロパティと要素は無視され、例外をスローすることがなくを示すフラグ。</summary>
        <value>
          <see langword="True" /> 不明な XML プロパティおよび要素が例外をスローせず無視される場合それ以外の場合、 <see langword="False" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">派生したオブジェクト、 <see cref="T:System.IO.Stream" /> クラスなど、 <see cref="T:System.IO.MemoryStream" /> オブジェクトです。</param>
        <summary>負荷がから派生したオブジェクトからコントロールにデータをシリアル化、 <see cref="T:System.IO.Stream" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されたデータを読み込むには、このメソッドを呼び出して、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
 ロード操作が行われる、シリアル化可能なプロパティは、既定では、最初が既定値に前にリセット保存されている値に設定されている保存されている場合。 この動作を変更するには、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> プロパティです。  
  
 既定では、すべてのグラフをシリアル化されたプロパティが読み込まれます。 セットを特定のシリアル化されたプロパティを読み込む、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> , 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> または <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> データを読み込む前にプロパティです。  
  
 使用してデータが保存されることに注意して、 `Save` メソッドでは、既定以外の値を持つプロパティのみが実際にシリアル化します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.IO.TextReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">リーダーなど <see cref="T:System.IO.StringReader" />, 、つまり、抽象型から派生した <see cref="T:System.IO.TextReader" /> クラスです。</param>
        <summary>負荷がから派生したリーダー オブジェクトからコントロールにデータをシリアル化、 <see cref="T:System.IO.TextReader" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されたデータを読み込むには、このメソッドを呼び出して、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
 読み込み操作が発生すると、既定ではシリアル化可能なプロパティはリセットを既定値に保存されている値に設定されます保存されている場合。 この動作を変更するには、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> プロパティです。  
  
 既定では、すべてのグラフをシリアル化されたプロパティが読み込まれます。 設定して、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> または <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 特定のプロパティ セットのプロパティを読み込むことができます。  
  
 この定義を使用する場合は注意してくださいにより設定されると、形式、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> プロパティが XML にする必要があります。  
  
 場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ViewStateData%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールを使用して、状態を維持、このメソッドをシリアル化されたロードを使用する、クライアントが掲載されているデータに戻す、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">シリアル化されたデータを格納するファイルの相対パスまたは絶対パス。 相対パスが指定されている場合、パスは現在のディレクトリに対して相対的されます。</param>
        <summary>シリアル化にディスクに保存されたデータを読み込み、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されたデータを読み込むには、このメソッドを呼び出して、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
 ロード操作が行われる、シリアル化可能なプロパティは、既定では、最初が既定値に前にリセット保存されている値に設定されている保存されている場合。 この動作を変更するには、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> プロパティです。  
  
 既定では、すべてのグラフをシリアル化されたプロパティが読み込まれます。 セットを特定のシリアル化されたプロパティを読み込む、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> , 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> または <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> データを読み込む前にプロパティです。  
  
 使用してデータが保存されることに注意して、 `Save` メソッドでは、既定以外の値を持つプロパティのみが実際にシリアル化します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load(System.Xml.XmlReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">永続化されたデータの読み込み元のオブジェクト。 オブジェクトを派生してから、 <see cref="T:System.Xml.XmlReader" /> クラス、および .NET Framework オブジェクトまたはユーザー定義オブジェクトにすることができます。</param>
        <summary>負荷がから派生したオブジェクトからコントロールにデータをシリアル化、 <see cref="T:System.Xml.XmlReader" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 シリアル化されたデータを読み込むには、このメソッドを呼び出して、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールです。  
  
 読み込み操作が発生すると、既定ではシリアル化可能なプロパティはリセットを既定値に保存されている値に設定されます保存されている場合。 この動作を変更するには、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> プロパティです。  
  
 既定では、すべてのグラフをシリアル化されたプロパティが読み込まれます。 設定した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> または <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 特定のプロパティ セットのプロパティを読み込むことができます。  
  
 この定義を使用すると、形式が XML をする必要があります。形式が変更されることができます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> プロパティです。  
  
 わかりやすくするために使用するため、XML 形式のテキスト ファイルを扱うとき、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Load%2A> メソッド代わりにします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NonSerializableContent">
      <MemberSignature Language="C#" Value="public string NonSerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NonSerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはシリアル化されないグラフのプロパティを設定します。</summary>
        <value>コンマ区切り <see langword="string" /> シリアル化されないグラフのプロパティを表す式です。 構文は、"Class.Property\[,Class.Property\]"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、すべてのグラフ プロパティのなりますシリアル化するときに、 `Save` と `Load` メソッドが呼び出されます。 使用することができます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティをシリアル化する、と共にグラフの特性を制限、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティです。  
  
 このプロパティは、シリアル化されませんグラフの特性を決定します。 同じ方法で、文字列式でワイルドカードを使用できます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティです。 たとえば、除外するすべてのグラフの `BackColor` 、シリアル化のプロパティでは、このプロパティを設定"\* します。BackColor"です。  
  
 場合によっては、プロパティ設定できます両方シリアル化およびシリアル化されずにワイルドカードを使用する場合によく用いられます。<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 式の値が低い優先順位と比較した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 式です。 ただし、ワイルドカードを使用する文字列式に小さい重みが指定されています。 たとえば場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> にプロパティが設定されている"\* します。BackColor"および <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> にプロパティが設定されている <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.BackColor%2A>, 、すべての B`ackColor` 以外のプロパティ <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクトをシリアル化されます。  
  
 場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティが設定されている、優先順位がで使用されている数のワイルドカード依存、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 式です。 たとえば、設定、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティを <xref:System.Windows.Forms.DataVisualization.Charting.SerializationContents.Appearance> になります、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティを含む、"\* します。戻る \*"式です。 場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> にプロパティが設定されている"\* します。戻る \*", all `Back*` グラフなどのプロパティ\] `BackColor`, 、`BackGradient`, もシリアル化されます。 これは、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティの値が高い優先順位と比較した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。  
  
 読み込んでリセット操作のすべてを保存、このプロパティに影響します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Reset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シリアル化対象としてマークされたすべてのグラフ プロパティをリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定は、このメソッドは、すべてのグラフ プロパティを既定値にリセットします。  
  
 既定値にリセットされるグラフのプロパティを制限するため、使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。  
  
 このメソッドを呼び出してをしても自動的に時、 `Load` メソッドを使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsResetWhenLoading%2A> にプロパティが設定されている `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">派生したオブジェクト、 <see cref="T:System.IO.Stream" /> クラスなど、 <see cref="T:System.IO.MemoryStream" />, 、つまり、グラフのプロパティを保存するために使用します。</param>
        <summary>データとプロパティから派生したオブジェクトに既定以外の値を \[グラフの保存、 <see cref="T:System.IO.Stream" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、このメソッドが呼び出されたときに、データ ポイントが含まれている既定以外の値を持つすべてのグラフ プロパティをシリアル化されます。 シリアル化するグラフの特性を制御する、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。  
  
 このメソッドを介して外観のプロパティをテンプレートとして保存する場合に、以下のことを確認して、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer> オブジェクトが最初に設定されている `true` このメソッドを呼び出す前にします。  
  
 テンプレート以外のシリアル化と異なる方法でテンプレートとしてグラフのシリアル化が発生します。外観のプロパティに重点を置いてテンプレートのシリアル化します。  
  
 テンプレートがシリアル化する場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate%2A> メソッドは、グラフの外観のプロパティを提供する、テンプレートを使用できます。  
  
 テンプレートは、カスタム パレットをシミュレートするために使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.IO.TextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">派生したオブジェクト <see cref="T:System.IO.TextWriter" /> クラス、たとえば、 <see cref="T:System.IO.StringWriter" />, 、つまり、グラフのプロパティを保存するために使用します。</param>
        <summary>グラフ データと指定したオブジェクトから派生した既定以外の値を持つプロパティの保存、 <see cref="T:System.IO.TextWriter" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、このメソッドが呼び出されたときに、データ ポイントが含まれている既定以外の値を持つすべてのグラフ プロパティをシリアル化されます。 コントロールは、グラフの特性をシリアル化を使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。  
  
 この定義を使用すると、形式が XML をする必要があります。書式を設定できる、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> プロパティです。  
  
 場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ViewStateData%2A> のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロールを使用して状態を保持し、このメソッドから派生したオブジェクトをシリアル化されたデータを保存するために使用できます <xref:System.IO.TextWriter>, にデータの書き込みに使用される、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.ViewStateData%2A>プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">シリアル化されたデータを格納するファイルの相対パスまたは絶対パス。 相対パスが指定されている場合、パスとなる現在のディレクトリに対して相対的に注意してください。</param>
        <summary>指定したファイルに既定以外の値を持つグラフ データとプロパティを保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、このメソッドが呼び出されたときに、データ ポイントが含まれている既定以外の値を持つすべてのグラフ プロパティをシリアル化されます。 使用してをシリアル化するグラフの特性を制御する、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。  
  
 既定では、データが XML 形式で保存されます。 バイナリ形式でデータを保存するには、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> プロパティです。  
  
 ファイルが格納されているディレクトリの書き込みアクセス許可を有効することに注意してください。 既定では、アプリケーションの Bin フォルダーです。  
  
 外観のプロパティをテンプレートとして保存するこのメソッドが使用されている場合、以下のことを確認、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.IsTemplateMode%2A> プロパティが最初に設定されている `true` このメソッドを呼び出す前にします。  
  
 テンプレートとしてグラフのシリアル化が異なりますテンプレート以外のシリアル化と外観のプロパティに重点を置いてテンプレートのシリアル化するために、主にします。  
  
 テンプレートがシリアル化する場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.LoadTemplate%2A> メソッドは、グラフの外観のプロパティを提供する、テンプレートを使用できます。  
  
 テンプレートは、カスタム パレットをシミュレートするために使用できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save(System.Xml.XmlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">派生したオブジェクト <see cref="T:System.Xml.XmlWriter" /> を保存するために使用 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> プロパティです。</param>
        <summary>グラフ データと指定したオブジェクトから派生した既定以外の値を持つプロパティの保存、 <see cref="T:System.Xml.XmlWriter" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、このメソッドが呼び出されたときに、データ ポイントが含まれている既定以外の値を持つすべてのグラフ プロパティをシリアル化されます。 コントロールは、グラフの特性をシリアル化を使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A>, 、<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。  
  
 この定義を使用すると、形式が XML をする必要があります。形式が変更されることができます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Format%2A> プロパティです。  
  
 わかりやすくするために使用するため、XML 形式のテキスト ファイルを扱うとき、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Save%2A> メソッド代わりにします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializableContent">
      <MemberSignature Language="C#" Value="public string SerializableContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializableContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはシリアル化可能なグラフのプロパティを設定します。</summary>
        <value>コンマ区切り <see langword="string" /> シリアル化するグラフのプロパティを表す式です。 構文は、"Class.Property\[,Class.Property\]"です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、すべてのグラフ プロパティのなりますシリアル化するときに、 `Save` と `Load` メソッドが呼び出されます。 使用することができます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティをシリアル化する、と共にグラフの特性を制限、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティです。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティは、シリアル化するグラフの特性を決定します。 同じ方法で、文字列式でワイルドカードを使用できます、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> プロパティです。 たとえば、シリアル化するすべてのグラフの `BackColor` プロパティでは、このプロパティを設定"\* します。BackColor"です。  
  
 場合 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> や <xref:System.Windows.Forms.DataVisualization.Charting.Series> 子プロパティを指定すると、すべての名前、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> と <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトを既存のものに適用される永続化されたデータを有効にも指定する必要があります <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> と <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトで、つまり"Series.Name"および"ChartArea.Name"式を指定する必要があります。 この手順の例を次のサンプル コードを参照してください。 同様に、複数のグラフ領域を使用している場合、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> プロットされたすべてのプロパティ <xref:System.Windows.Forms.DataVisualization.Charting.Series> にも、保存する必要があります。  
  
 場合によっては、プロパティ設定できます両方シリアル化およびシリアル化されずにワイルドカードを使用する場合によく用いられます。<xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> 式の値が低い優先順位と比較した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> 式です。 ただし、ワイルドカードを使用する文字列式に小さい重みが指定されています。 たとえば場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> にプロパティが設定されている"\* します。BackColor"および <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.NonSerializableContent%2A> にプロパティが設定されている <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.BackColor%2A>, 、すべての B`ackColor` 以外のプロパティ <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクトをシリアル化されます。  
  
 設定した場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> 、プロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティを内部的に設定されます。 場合、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.Content%2A> プロパティは既に設定されているが、別のプロパティをシリアル化、連結することを確認する必要がある、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartSerializer.SerializableContent%2A> プロパティを追加するプロパティを指定する場合。 この手順の例を次のサンプル コードを参照してください。  
  
 読み込んでリセット操作のすべてを保存、このプロパティに影響します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>既定以外の値を持つグラフのプロパティを保存します。 すべてのグラフ プロパティをシリアル化することができます。これには、データが含まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>シリアル化されたにデータを読み込み、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>