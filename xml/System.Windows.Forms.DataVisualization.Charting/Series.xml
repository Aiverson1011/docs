<Type Name="Series" FullName="System.Windows.Forms.DataVisualization.Charting.Series">
  <TypeSignature Language="C#" Value="public class Series : System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Series extends System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Series" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Points")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>格納するデータ ポイントおよび系列の属性を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトは、データ系列を表しに格納されて、 <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> クラスです。  
  
 A <xref:System.Windows.Forms.DataVisualization.Charting.Series> 格納 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> オブジェクトを使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCollection> クラスです。 データ系列の属性も格納されます。 たとえば、データ系列には属性の色、背景イメージの属性、背景グラデーションの属性およびなどです。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> 、時系列に属するオブジェクトも、独自の属性を設定します。 通常、同じ属性が、データ ポイントとそれが属する系列に設定されている場合、データ ポイントの属性には、優先順位があります。  
  
 シリーズをグラフの描画とは限りませんされません。別の系列を作成およびプロット元となる計算を実行するために使用されるデータ ポイント値を格納できます。 などのシリーズ A で、プロットされて場合がありますシリーズ B と C での系列のデータ ポイントを加算した結果がどちらの系列をプロットします。 描画するために、 <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクト、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> の名前にプロパティを設定する必要があります、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> 、系列をプロットするために使用します。  
  
 自動的に割り当てられた一連の作成時に、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> "Default"、という名前のオブジェクトまたは"Default"オブジェクトが存在しない場合は、グラフ領域のコレクション内の最初の利用可能なグラフ領域にします。  
  
 一連の表示を無効にする次のように設定します。 その <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea%2A> プロパティを長さ 0 の文字列にします。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.ChartType%2A> プロパティが描画される場合に、この系列をプロットに使用されるグラフの種類が決まります。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">名前、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 作成されるオブジェクト。 必ず一意の名前です。それ以外の場合、例外がスローされます。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 指定した系列の名前を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいインスタンスを作成するこのコンス トラクターを使用できる、 <xref:System.Windows.Forms.DataVisualization.Charting.Series> クラスです。  
  
> [!NOTE]
>  この系列を格納するのみ <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> を 1 つの Y 値を持つオブジェクト。 このシリーズには、複数の Y 値を持つデータ ポイントを追加する場合は、例外がスローされます。  
  
 実行時に、系列を作成するには、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection.Add%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Series (string name, int yValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 yValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.#ctor(System.String,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="yValues" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">名前、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> 作成されるオブジェクト。</param>
        <param name="yValues">許容される Y 値の最大数、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> このシリーズに所属するオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> した指定した名前と Y 値の最大数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、 <xref:System.Windows.Forms.DataVisualization.Charting.Series> クラスです。  
  
> [!IMPORTANT]
>  このシリーズが格納できる <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> オブジェクトを設定した最大値よりも多くの Y 値を持たない、 `yValues` パラメーター。 最大のセットよりも多くの Y 値を持つデータ ポイントを追加すると、例外がスローされます。  
  
 作成する、 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 実行時に、オブジェクト、 `Add` と `Insert` 一連コレクション プロパティのメソッドを使用することもできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisLabel">
      <MemberSignature Language="C#" Value="public override string AxisLabel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AxisLabel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.AxisLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または系列の軸ラベルのテキストを設定します。</summary>
        <value>データ系列の軸ラベルのテキスト。 既定値は、長さ 0 の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartArea">
      <MemberSignature Language="C#" Value="public string ChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の名前、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> オブジェクトが存在する場合は、データ系列のプロットに使用します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> 系列のプロットに使用するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 "Default"に自動的に割り当てられた一連のデザイン時と実行時の両方に追加 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクト、または最初の利用可能なグラフ領域、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartAreaCollection> "Default"が存在しない場合。  
  
 系列をプロットしたくない場合は、長さ 0 の文字列にこのプロパティを設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SeriesChartType ChartType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.SeriesChartType ChartType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ChartType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartTypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SeriesChartType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または一連のグラフの種類を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.SeriesChartType" /> 系列を表すために使用されるグラフの種類を示す列挙値。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Column" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティのグラフの種類を決定する、 <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクト、値は大文字小文字を区別します。 参照してください、 <xref:System.Windows.Forms.DataVisualization.Charting.SeriesChartType> 系列のすべての可能なグラフの種類の一覧については、列挙体です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChartTypeName">
      <MemberSignature Language="C#" Value="public string ChartTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChartTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ChartTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("Column")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartTypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.ChartTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または系列の描画に使用されるグラフの種類の名前を設定します。</summary>
        <value>グラフの種類の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyPointStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties EmptyPointStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または空としてマークされたポイントの描画スタイルを設定します。</summary>
        <value>ポイントの描画スタイルは、空としてマークします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.EmptyPointStyle%2A> プロパティが空では、マーカーの画像、背景色またはイメージ、およびなど、境界線の色でなどとしてマークされたポイントの描画スタイルを決定します。  
  
 特定のプロパティでは、グラフの種類に応じて該当するのみです。 たとえば、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.BackImage%2A> プロパティは、折れ線複合グラフには適用されませんが、面グラフには適用されます。  
  
 表示するには空のポイントを示すイメージを使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.MarkerImage%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.Series.MarkerStyle%2A> プロパティ、および not、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.BackImage%2A> プロパティです。  
  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.AxisLabel%2A> プロパティが空のポイントの軸ラベルを決定します。 積み上げグラフの種類の軸のラベルはによって決定されることに注意してください、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.AxisLabel%2A> をこのプロパティ設定を持つ最初の系列のプロパティです。  
  
 データ ポイント手動でとしてマークできる、空を設定して、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint.IsEmpty%2A> プロパティを `true`します。 代わりに、1 つ、 `InsertEmptyPoints` 内のメソッド、 <xref:System.Windows.Forms.DataVisualization.Charting.DataManipulator> 欠落しているデータを確認し、データ ポイントが見つからない場合は、空のポイントを挿入するクラスを使用することができます。  
  
> [!NOTE]
>  行型のグラフの場合は、空のポイントに接続する線の色はによって決定されます、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Color%2A> プロパティの設定です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または表示されたグラフの系列を表示するにはどうかを示すフラグを設定します。</summary>
        <value>
          <see langword="True" /> データ系列が表示されたグラフに表示する場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 定期的なアイテムが、表示上に表示するかどうかを決定する値を取得または <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXValueIndexed">
      <MemberSignature Language="C#" Value="public bool IsXValueIndexed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXValueIndexed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.IsXValueIndexed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ポイントのインデックスを X 値に使用するかどうかを示すフラグを設定します。</summary>
        <value>
          <see langword="True" /> X 値の系列に属するデータ ポイントのインデックスが使用される場合 <see langword="false" /> になる場合はありません。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 系列内のすべてのデータ ポイントは、連続したインデックスを使用していて、このプロパティは `true` し、データ ポイントは、関連付けられている X 値に関係なく、順番にプロットされます。 これは行われないこと「不明」のデータ ポイントを意味します。  
  
 たとえば、1、2 および 4 の X 値を持つ系列の 3 つのデータ ポイントがあると仮定します。 このプロパティがあった場合 `false`, 、「3」というラベルの付いた x 軸の位置に存在しないデータ ポイントがあります。 ただし、このプロパティを設定する場合は、 `true`, 、3 つのデータ ポイントをプロットする位置 1、2、および 4 の時点で、順番におよび、なければ不足しているデータ ポイント。 「3」というラベルの付いた x 軸の位置は、グラフには表示されません。  
  
 これは、機能は、週末など、データはありませんがわかっている間隔の欠落したデータ ポイントがある場合に便利です。  
  
> [!IMPORTANT]
>  複数の系列を表示するには、少なくとも 1 つの系列インデックス付きの X 値を使用するかどうかは、すべての系列は整列する必要があります: つまり、同じデータ ポイント数である — し、対応するポイントは X 値が同じである必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Legend">
      <MemberSignature Language="C#" Value="public string Legend { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Legend" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Legend" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesLegendNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に関連付けられている一連の名前、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> オブジェクトです。</summary>
        <value>名前、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定値に自動的に割り当てられた一連のデザイン時と実行時の両方に追加 <xref:System.Windows.Forms.DataVisualization.Charting.Legend> オブジェクトです。  
  
 長さ 0 の文字列をこのプロパティを設定するか、設定、系列を凡例に表示したくない場合、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> プロパティを `false`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStep">
      <MemberSignature Language="C#" Value="public int MarkerStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MarkerStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.MarkerStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ ポイント マーカーを表示する頻度を決定する値を設定します。</summary>
        <value>
          <see langword="integer" /> データ ポイント マーカーを表示する頻度を決定する値。 既定値は 1 です\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.MarkerStep%2A> プロパティ マーカーを表示する頻度を指定します。 たとえば、このプロパティを設定する 2 \(2\) その他のすべてのデータ ポイント マーカーを使用します。  
  
 このプロパティは、マーカーの使用が有効な場合のみ使用、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の一意の名前、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> オブジェクトです。</summary>
        <value>データ系列の一意の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ系列の名前は一意である必要があります。それ以外の場合、例外がスローされます。  
  
 取得するときに、このプロパティをインデクサーとして使用することができます、 <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトから、 <xref:System.Windows.Forms.DataVisualization.Charting.SeriesCollection> オブジェクトです。  
  
 このプロパティが長さ 0 の文字列に設定されている場合、例外がスローされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Palette">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartColorPalette Palette" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Palette" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ColorPaletteEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartColorPalette</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のカラー パレット、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartColorPalette" /> データ系列のパレットを決定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 データ ポイント自体には、自分に割り当てられた色はない場合、データ要素に色を自動的に割り当てるパレットが使用されるデータ <xref:System.Windows.Forms.DataVisualization.Charting.Series> データ ポイントが属するオブジェクトも割り当てられている色ではありません。  
  
 系列またはデータ ポイントが明示的に指定された色を指定されている場合に、使用する色が、グラフの種類と、グラフ コントロールのパレットまたは系列パレットに依存します。 詳細については、次の表を参照してください。  
  
|グラフの種類|系列パレットの使用|データ ポイントに表示される色|  
|------------|---------------|---------------------|  
|図形グラフ \(たとえば、円グラフとドーナツ グラフ\)|いいえ|最初の使用可能な色から使用 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロール パレット。 データ ポイントごとに 1 色。|  
|図形グラフを除くすべてのグラフ。|いいえ|最初の使用可能な色から <xref:System.Windows.Forms.DataVisualization.Charting.Chart> コントロール パレット。 データ系列ごとに 1 色。|  
|図形グラフ \(たとえば、円グラフとドーナツ グラフ\)|はい|最初の使用可能な色から使用 <xref:System.Windows.Forms.DataVisualization.Charting.Series> パレット。 データ ポイントごとに 1 色。|  
|図形グラフを除くすべてのグラフ。|はい|最初の使用可能な色から使用 <xref:System.Windows.Forms.DataVisualization.Charting.Series>パレット。 データ系列ごとに 1 色。|  
  
 これは、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Palette%2A> プロパティに優先、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Palette%2A> ルートのプロパティ <xref:System.Windows.Forms.DataVisualization.Charting.Chart> に関しては、データの表示のオブジェクト。  
  
 注: 場合、 `Palette` 両方のプロパティ、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart> と <xref:System.Windows.Forms.DataVisualization.Charting.Series> オブジェクトは \[なし\] に設定され、関連するデータ系列とデータ ポイント"BrightPastel"既定のパレットに色が割り当てられていないか、 <xref:System.Windows.Forms.DataVisualization.Charting.Chart.PaletteCustomColors%2A> を使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Points">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DataPointCollection Points { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.DataPointCollection Points" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.Points" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.DataPointCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DataPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ポイントのコレクションを取得します。</summary>
        <value>データ ポイントのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.Points%2A> コレクション プロパティでは、追加および系列にデータ ポイントを削除することができます。 このプロパティは、メソッドとデータ バインドなどを実行するデータ ポイントを検索するなど、このコレクションを操作するために使用できるプロパティも提供します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または一連の影の色を設定します。</summary>
        <value>一連の影の色。 既定の色は <see cref="P:System.Drawing.Color.Black" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得または任意の有効な ARGB \(アルファ、赤、緑、青\) 値になる可能性が一連の影の色を設定します。  
  
 アルファ値は、リアルなシャドウ効果を実現するために使用できます。影の色の値の「128,0,0,0」を使用してください。  
  
 影を実装するのには、設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Series.ShadowOffset%2A> プロパティを 0 \(ゼロ\) 以外の値にします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または一連のピクセル単位の影のオフセットを設定します。</summary>
        <value>一連のピクセルの影のオフセット。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 影を実装するには、ゼロ \(0\) 以外の値を使用します。 正の値とすると、移動し、右下に影になります。 負の値は、上と左にシフトするシャドウがされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartLabelStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle SmartLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.SmartLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.SmartLabelStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはスマート ラベルのスタイルを設定します。</summary>
        <value>スマート ラベルのスタイル。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Windows.Forms.DataVisualization.Charting.DataPoint&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Sort(System.Collections.Generic.IComparer{System.Windows.Forms.DataVisualization.Charting.DataPoint})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Windows.Forms.DataVisualization.Charting.DataPoint&gt;" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <see cref="T:System.Collections.IComparer" /> インターフェイス。</param>
        <summary>使用して、系列のポイントを並べ替えます <see cref="T:System.Collections.IComparer" /> インターフェイスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">並べ替え順序。</param>
        <summary>指定された並べ替え順序を指定してシリーズでは、データ ポイントを並べ替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Windows.Forms.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Series.Sort(System.Windows.Forms.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Windows.Forms.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">並べ替え順序。</param>
        <param name="sortBy">\(X, Y, Y2...\) の並べ替えに使用される値です。</param>
        <summary>並べ替えに使用するには、指定された並べ替え順序と値の指定、系列のポイントを並べ替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XAxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType XAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType XAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.XAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または系列の x 軸の種類を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> 系列がプライマリまたはセカンダリの x 軸を使用するかどうかを指定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべてのグラフ以外の水平方向のグラフ、横棒グラフおよび積み上げグラフ、および円グラフ、ドーナツ グラフ、じょうごグラフやピラミッド グラフなどの図形グラフ棒、主軸の x 軸は常に下の軸とセカンダリ軸は、上の軸です。 横棒グラフ、積み上げ横棒グラフ、主軸の x 軸が左軸とセカンダリの x 軸は右軸とします。  
  
 セカンダリの x 軸を使用してデータをプロットされる場合は、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX2%2A> 軸のプロパティを設定するプロパティおよび not、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisX%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueMember">
      <MemberSignature Language="C#" Value="public string XValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.XValueMember" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesDataSourceMemberConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または系列の X 値にデータをバインドするために使用するグラフのデータ ソースのメンバーを設定します。</summary>
        <value>データ系列の X 値をバインドするために使用するグラフのデータ ソースのメンバー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、メンバーの列の名前またはメンバーの列の序数値のいずれかを指定できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XValueType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartValueType XValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartValueType XValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.XValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または x 軸に沿ってプロットされた値型を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartValueType" /> シリーズによって格納されている X 値のデータの種類を決定する列挙値。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.XValueType%2A> プロパティは、系列に格納されるデータの種類を決定します。  
  
 このプロパティを設定 <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime> として入力する X 値を許可するように、 <xref:System.DateTime> 値ではなく、 <xref:System.Double>です。 日付と時刻の値として .NET Framework によって内部的に格納されている <xref:System.Double> 値。 場合も同様、 <xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel.ToPosition%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel.FromPosition%2A> のプロパティ <xref:System.Windows.Forms.DataVisualization.Charting.CustomLabel> オブジェクトです。  
  
 `IntervalType` プロパティについては、軸のラベル、目盛り、およびグリッド クラスは、間隔の種類を決定します。  
  
> [!NOTE]
>  正常に適用する、 <xref:System.DateTime> 形式からデータ ポイントの X 値を使用して生成される軸ラベルを <xref:System.Windows.Forms.DataVisualization.Charting.LabelStyle.Format%2A> プロパティには、このプロパティに設定する必要があります <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>します。  
  
 このプロパティは、X 値がバインドされているデータ型を判断することもできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YAxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType YAxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType YAxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YAxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または系列の y 軸の種類を設定します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> 系列がプライマリまたはセカンダリの y 軸を使用するかどうかを指定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.YAxisType%2A> プロパティは、プライマリまたはセカンダリの y 軸を使用して系列をプロットするかどうかを決定します。  
  
 円グラフ、ドーナツ グラフ、範囲横棒以外の種類はすべてのグラフ、横棒グラフと積み上げ横棒グラフでは、主軸の y 軸には、左の垂直軸とセカンダリ軸は、右の垂直の軸です。 横棒グラフ、積み上げ横棒グラフ、主軸下の水平軸で、第 2 y 軸上の水平軸とします。  
  
 第 2 y 軸を使用してデータをプロットされる場合は、使用、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY2%2A> 軸のプロパティを設定するプロパティおよび not、 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.AxisY%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueMembers">
      <MemberSignature Language="C#" Value="public string YValueMembers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string YValueMembers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YValueMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.SeriesDataSourceMemberValueAxisUITypeEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesDataSourceMemberConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはメンバーの列のデータ系列の Y 値をバインドするために使用するグラフのデータ ソースを設定します。</summary>
        <value>データ系列の Y 値をバインドするために使用するグラフのデータ ソースのメンバーの列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、名前または列の序数値を含むコンマ区切り文字列を指定できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValuesPerPoint">
      <MemberSignature Language="C#" Value="public int YValuesPerPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 YValuesPerPoint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YValuesPerPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Y 値の最大数の設定を取得または <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataPoint" /> 内のオブジェクト、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> を付けることができます。</summary>
        <value>できる、データ ポイントの系列の Y 値の最大数。 既定値は 1 です\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 追加する場合、 <xref:System.Windows.Forms.DataVisualization.Charting.DataPoint> を複数の Y 値を持つオブジェクトよりも、このプロパティは、次の指定、余分な Y の値は無視されます。  
  
 Y の値を正しくグラフを表示するために必要な数は、選択したグラフの種類によって異なります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YValueType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartValueType YValueType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartValueType YValueType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Series.YValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.SeriesYValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartValueType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または連続によって格納されたデータ ポイントの Y 値のデータの種類を設定します。</summary>
        <value>A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartValueType" /> 系列に格納される Y 値のデータの種類を決定する列挙値。 既定値は <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.DataVisualization.Charting.Series.YValueType%2A> プロパティは、系列に格納されるデータの種類を決定します。 このプロパティの値が通常設定いずれかに <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.Auto> または <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>です。  
  
 `IntervalType` プロパティについては、軸のラベル、目盛り、およびグリッド クラスは、間隔の種類を決定します。  
  
 このプロパティは、Y 値がバインドされているデータ型を判断することもできます。  
  
 データ ポイントの値として日付式をプロットするが、これはほとんどありません。 このプロパティを設定する場合 <xref:System.Windows.Forms.DataVisualization.Charting.ChartValueType.DateTime>, 、として入力し、Y 値は、 <xref:System.DateTime> 値ではなく、 <xref:System.Double>です。 日付と時刻の値として .NET Framework によって内部的に格納されている <xref:System.Double> 値。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>に対して並べ替えを実行、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.Series" />です。 なお、 <see cref="T:System.Windows.Forms.DataVisualization.Charting.DataManipulator" /> クラスはこれらの並べ替え方法よりも柔軟性のある並べ替えメソッドを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>