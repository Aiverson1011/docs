<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プログラムを使用して、現在の展開の更新をサポートし、オンデマンドでは、ファイルのダウンロードを処理します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 構成することができます、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 更新プログラムを確認して、使用して自動的にインストールするアプリケーション、 `subscription` 配置マニフェストの要素。 一部のアプリケーションには、それぞれの更新プログラムをより細かく制御ただし、必要があります。 プログラムを使用して、必要な更新プログラムをインストールし、必要に応じて省略可能な更新プログラムのインストールをユーザーに要求することがあります。 配置マニフェストでサブスクリプションの更新をオフにして、アプリケーションのポリシーの更新を完全に制御を実行できます。 と共に自動的にサブスクリプションを使用する代わりに、 <xref:System.Deployment.Application.ApplicationDeployment>, 、できるようになります [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを使用して、定期的に更新 <xref:System.Deployment.Application.ApplicationDeployment> がリリース後すぐに重要な更新プログラムをダウンロードします。  
  
 配置に使用して、利用可能な更新があるかどうかをテストすることができます、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> または <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> メソッド。 後者のメソッドを発生させる、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントが正常に完了します。<xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> そのバージョン番号と現在のユーザーの必要な更新プログラムであるかどうかなど、更新プログラムに関する重要な情報を返します。 更新プログラムがある場合を使用してインストールできます <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> または <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>。 後者のメソッドを生成、 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> 更新プログラムのインストールが完了した後にイベントです。 大規模な更新を通じて進行状況の通知を受信できます、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> と <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベント内の情報を使用して <xref:System.ComponentModel.ProgressChangedEventArgs> ダウンロードの状態のユーザーに通知します。  
  
 使用することも <xref:System.Deployment.Application.ApplicationDeployment> 大規模なファイルや必要に応じてアセンブリをダウンロードします。 これらのファイルは、インストール中にダウンロードされないように、配置のアプリケーション マニフェスト内で"optional"としてマークする必要があります。 アプリケーションの期間内に任意の時点のファイルをダウンロードするにを使用して、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドです。 アセンブリをダウンロードするには、イベント ハンドラーを指定することによってメモリに読み込まれる前に、 <xref:System.AppDomain.AssemblyResolve> でイベントを <xref:System.AppDomain> クラスです。 詳細については、「[Walkthrough: Downloading Assemblies On Demand with the ClickOnce Deployment API Using the Designer](http://msdn.microsoft.com/ja-jp/59a0dd5f-1cab-4f2f-b780-0ab7399905d5)」を参照してください。  
  
> [!NOTE]
>  更新する場合は、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーション、アプリケーションの実行中に、ユーザーは表示されません、更新プログラムが呼び出されるまで、 <xref:System.Windows.Forms.Application.Restart%2A> のメソッド、 <xref:System.Windows.Forms.Application>, 、即座に再起動し、アプリケーションの現在の実行中のインスタンスを終了します。  
  
 <xref:System.Deployment.Application.ApplicationDeployment> パブリック コンス トラクターがありません。内のクラスのインスタンスを取得する、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションに、 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティです。 使用する、 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> プロパティを現在のアプリケーションがあることを確認、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションです。  
  
 <xref:System.Deployment.Application.ApplicationDeployment> 更新プログラムのチェックとダウンロードをサポート最新ファイルを非同期的に新しい [Asynchronous Pattern for Components](http://msdn.microsoft.com/ja-jp/792aa8da-918b-458e-b154-9836b97735f3), 、クラスのイベントとして完了コールバックを公開します。<xref:System.Deployment.Application.ApplicationDeployment> 開始し、スレッドを管理し、アプリケーションを正しい UI スレッドでコールバックします。 このクラスにより、ユーザーは、更新プログラムのインストール中も作業を続行できるように、アプリケーションをロックすることがなく更新できます。 ユーザーは、更新が行われるときに、すべての作業を停止する必要があります、同期メソッドを代わりに使用することを検討してください。  
  
> [!NOTE]
>  非同期更新を実行する場合は、アプリケーションが両方をインポートする必要があります、 <xref:System.Deployment.Application> と <xref:System.ComponentModel> 名前空間。  
  
   
  
## 例  
 次のコード例は、新しい更新プログラムがあるかどうかアプリケーションの読み込み時に決定します。必要な更新プログラムが利用可能な場合は、コード例は、更新プログラムを非同期的にインストールします。 このコードを含むフォームを追加する必要があります、 <xref:System.Windows.Forms.TextBox> という `downloadStatus`します。  
  
 [!code-cpp[ClickOnceAPI\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの配置マニフェストの起動に使用する URL を取得します。</summary>
        <value>長さ 0 の文字列、 <c>TrustUrlParameters</c> 、配置マニフェストでプロパティが <see langword="false" />, 、またはユーザーが指定を開くには、展開の UNC またはローカル opened がの場合。 それ以外の場合、戻り値はすべてのパラメーターを含め、アプリケーションの起動に使用される完全な URL です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、完全に信頼されたアプリケーションと部分的に信頼されたアプリケーションに機能します。  
  
   
  
## 例  
 次のコードを使用して URL パラメーターを取得する方法を示しています。 <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>, 、および使用する方法、 <xref:System.Web.HttpUtility> クラスを安全にクエリ文字列を解析します。 同じクエリ文字列変数を複数回出現するが、返された 1 つのエントリに整理統合 <xref:System.Collections.Specialized.NameValueCollection>します。  
  
 [!code-csharp[ClickOnceQueryString\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>同じ操作を実行 <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, が利用可能な更新に関する拡張情報を返します。</summary>
        <returns>
          <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> の利用可能な更新します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> 同期呼び出し元が同じを取得するメソッドで非同期呼び出しを使用して取得される情報の拡張、 <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> クラスです。  
  
   
  
## 例  
 次のコード例では <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> 最新の更新プログラムに関する情報を取得します。 更新プログラムが存在する場合、それが自動的にインストール必須の更新である場合にのみそれ以外の場合、ユーザーが要求されます。  
  
 [!code-cpp[ClickOnceAPI\#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在のアプリケーションが、更新をサポートするために構成されていないか、または既に進行中の別の更新チェックの操作があります。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">配置マニフェストをダウンロードできません。 この例外は、 <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> のプロパティ、 <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> イベントです。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">配置マニフェストが壊れています。 このアプリケーションをユーザーに展開する前に、アプリケーションのマニフェストを再生成します。 この例外は、 <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> のプロパティ、 <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> イベントです。</exception>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">場合 <see langword="false" />, 、更新が自動的に適用して、ダイアログ ボックスは表示されません。</param>
        <summary>同じ操作を実行 <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, が利用可能な更新に関する拡張情報を返します。</summary>
        <returns>
          <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> の利用可能な更新します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>チェック <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> 新しい更新プログラムが利用できるかどうかを確認します。</summary>
        <returns>
          <see langword="true" /> 新しい更新プログラムがある場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> メソッドは、配置マニフェストで指定されているバージョンと現在インストールされている配置のバージョンを比較 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>します。 返すサーバーのバージョンがインストールされているバージョンと異なる `true`します。  
  
 このメソッドは、チェックが完了するまでブロックします。 非同期的に更新を確認するには、使用、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> メソッド代わりにします。  
  
> [!NOTE]
>  場合 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> は更新プログラムがあること、およびインストールしていないユーザーが選択検出 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] はユーザーが次回アプリケーションを実行するように要求します。 このプロンプトを無効にする方法はありません。 \(アプリケーションが必須の更新の場合 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] メッセージを表示せずにインストールされます\)。  
  
   
  
## 例  
 次のコード例は、アプリケーションの更新をチェックします。1 つが利用可能な場合は、インストール、同期的にします。  
  
 [!code-cpp[ClickOnceAPI\#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI\#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI\#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ClickOnce 呼び出した場合、すぐにこの例外がスローされます、 <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> メソッドの更新プログラムの中に進行します。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">配置マニフェストをダウンロードできません。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">配置マニフェストが壊れています。 この問題を解決するアプリケーションを再配置する必要があります。</exception>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult">場合 <see langword="false" />, 、更新が自動的に適用して、ダイアログ ボックスは表示されません。</param>
        <summary>チェック <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> 新しい更新プログラムが利用できるかどうかを確認します。</summary>
        <returns>
          <see langword="true" /> 新しい更新プログラムがある場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>チェック <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> 非同期に新しい更新プログラムが利用できるかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> すぐに取得し、更新されたアプリケーションをダウンロードするための別のスレッドを開始します。 メソッドが完了するか、キャンセルを生成、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントです。 使用する <xref:System.ComponentModel.AsyncCompletedEventArgs> 操作が取り消されたかどうかや、更新中に例外が発生したかどうかを判断するには、このイベント ハンドラーでします。  
  
 呼び出して非同期更新をキャンセルする <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>です。  
  
> [!NOTE]
>  場合 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> は更新プログラムがあること、およびインストールしていないユーザーが選択検出 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] はユーザーが次回アプリケーションを実行するように要求します。 このプロンプトを無効にする方法はありません。 \(アプリケーションが必須の更新の場合 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] メッセージを表示せずにインストールされます\)。  
  
   
  
## 例  
 次の例では、非同期的に更新をチェックし、いずれかが存在する場合は、更新プログラムをインストールします。  
  
 [!code-cpp[ClickOnceAPI\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ClickOnce 呼び出した場合、すぐにこの例外がスローされます、 <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> メソッドの更新プログラムの中に進行します。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">配置マニフェストをダウンロードできません。 この例外は、 <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> のプロパティ、 <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> イベントです。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">配置マニフェストが壊れています。 この問題を解決するアプリケーションを再配置する必要があります。 この例外は、 <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> のプロパティ、 <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> イベントです。</exception>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期の更新プログラムのチェックをキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して開始更新プログラムのチェックをキャンセルするには、このメソッドを使用して、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> メソッドです。  
  
 このメソッドは、可能性のある既に進行中のバック グラウンドの更新を取り消すことがサブスクリプションの一部として更新プログラムが開始されたなどです。 サブスクリプションの詳細については、次を参照してください。 [Choosing a ClickOnce Update Strategy](http://msdn.microsoft.com/ja-jp/d8b6e7bb-4ea0-47f3-91cd-48580bdceccc)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> が完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> など、更新プログラムのバージョン、サイズはどの程度、更新、および利用可能な更新が必須かどうかの間で、クラスに指示されます。  
  
   
  
## 例  
 次のコード例では <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> 利用可能なアプリケーションの更新プログラムをインストールするユーザーに確認するかどうかを決定します。 更新プログラムが必須のアップグレードの場合、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベント ハンドラーで、ユーザーが求められません。 この例を含む Windows フォーム アプリケーションを展開することが必要です、 <xref:System.Windows.Forms.StatusStrip> コントロール、およびこのコントロールが含まれている、 <xref:System.Windows.Forms.ToolStripStatusLabel> という名前のコントロール `downloadStatus`します。  
  
 [!code-cpp[ClickOnceAPI\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>進行状況の更新が \[利用可能なときに発生する <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> を呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> マニフェストをアプリケーションの配置のダウンロードの状態をレポートします。 低速ネットワーク接続経由で展開をダウンロードするユーザーにとって重要な情報を指定できます。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> 配置マニフェストの量は、左からのダウンロードをユーザーに通知するイベントです。 この例を含む Windows フォーム アプリケーションを展開することが必要です、 <xref:System.Windows.Forms.StatusStrip> コントロール、およびこのコントロールが含まれている、 <xref:System.Windows.Forms.ToolStripStatusLabel> という名前のコントロール `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在を返す <see cref="T:System.Deployment.Application.ApplicationDeployment" /> この展開します。</summary>
        <value>現在の配置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンスを作成することはできません <xref:System.Deployment.Application.ApplicationDeployment> 直接アプリケーション内で取得する必要が有効なインスタンスを <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティです。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> 静的プロパティを使用して配置されたアプリケーション内からのみ有効 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]します。 以外からこのプロパティを呼び出そうとすると[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションは例外をスローします。 使用していない展開可能性がありますアプリケーションを開発している場合 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], を使用して、 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> 現在プログラムがあるかどうかをテストするプロパティ、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションです。  
  
   
  
## 例  
 次のコード例を取得 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> 、過去 3 日間で、アプリケーションが更新されているかどうかを確認します。  
  
 [!code-cpp[ClickOnceAPI\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">この静的プロパティ以外から呼び出してしようとしています。ClickOnce アプリケーションです。</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの現在の実行中のインスタンスの配置のバージョンを取得します。</summary>
        <value>現在の配置のバージョン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> 異なる <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> 場合は、新しい更新プログラムがインストールされているが、まだ呼び出されません <xref:System.Windows.Forms.Application.Restart%2A>します。 配置マニフェストは、自動更新を実行するように構成は、アプリケーションを再起動する必要があるかどうかを判断する 2 つの値を比較できます。  
  
   
  
## 例  
 次のコード例を判断するメソッドを定義するかどうか [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] がアプリケーションを更新します。  
  
 [!code-cpp[ClickOnceAPI\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パスを取得、 ClickOnce data ディレクトリ。</summary>
        <value>ローカル ディスク上のアプリケーションのデータ ディレクトリのパスを含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループです。 すべてのファイルが"optional"でマークされている、 ClickOnce アプリケーション グループ名を必要とします。</param>
        <summary>一連の要求時に省略可能なファイルをダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを初期化または更新中に、アプリケーション マニフェストに"optional"のマークを付けたファイルはダウンロードされません。 使用することができます、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> メソッドをすべての要求時に、名前付きグループに属するファイルをダウンロードできるように、消費しませんネットワーク リソースとディスク領域ができたら、ユーザーが必要とすることを確認しています。 たとえば、特定のユーザーは、他のユーザーで呼び出すことはありませんが、日常的に、アプリケーションに含まれるデータ分析パッケージを使用する必要があります。  
  
 と共にダウンロードしたアセンブリを使用する <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>, 、イベント リスナーをアタッチする、 <xref:System.AppDomain.AssemblyResolve> でイベントを <xref:System.AppDomain.CurrentDomain%2A>です。 例については、次を参照してください。 \=[Walkthrough: Downloading Assemblies On Demand with the ClickOnce Deployment API Using the Designer](http://msdn.microsoft.com/ja-jp/59a0dd5f-1cab-4f2f-b780-0ab7399905d5)です。  
  
 すべてのファイルにダウンロードされて、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーション キャッシュが現在のバージョンのアプリケーションにします。 たとえば、アプリケーションがファイル グループをダウンロードした後で、ユーザーがそのアプリケーションの新しいバージョンをインストールしても、後で、アプリケーションの以前のバージョンに戻ることとします。 この場合は、以前のバージョンには、もともとダウンロードしてファイルのコピーがあります。 データ ファイルにアクセスする方法の詳細については、次を参照してください。 [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/ja-jp/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)します。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> いずれかでは、部分信頼アプリケーションで動作 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] で実行されるアプリケーションにアクセス許可が制限されています。 ただし、動的アセンブリを読み込もうとする場合、アプリケーションに完全な信頼は必要とします。  
  
 オンデマンドでのデータ ファイルのダウンロードは現在サポートされていません。  
  
 アプリケーションはまでユーザー入力に応答できない、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> メソッドを返します。 使用して、ユーザーのワークフローを中断することがなくファイルをダウンロードする必要がある場合、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッド代わりにします。  
  
 ファイル名だけで 1 つのファイルをダウンロードすることはできません。 1 つのファイルをダウンロードする、名前を割り当てるグループで、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 展開とダウンロードこのメソッドを使用してグループです。  
  
   
  
## 例  
 次のコード例では、リッスンして要求時にアセンブリの読み込み、 <xref:System.AppDomain.AssemblyResolve> イベントです。  
  
 [!code-csharp[ClickOnceOnDemandCmdLine\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> パラメーターが null または長さ 0 です。</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループです。 すべてのファイルが"optional"でマークされている、 ClickOnce アプリケーション グループ名を必要とします。</param>
        <summary>省略可能なファイルをバック グラウンドのセットをオンデマンドでダウンロードされます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを初期化または更新中に、アプリケーション マニフェストに"optional"のマークを付けたファイルはダウンロードされません。 使用することができます、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドをすべての要求時に、名前付きグループに属するファイルをダウンロードできるように、消費しませんネットワーク リソースとディスク領域ができたら、ユーザーが必要とすることを確認しています。 この方法は、静的なファイルだけでなく、アプリケーションの場合も必要ありませんがあるアセンブリに対しても動作します。 たとえば、特定のユーザーは、他のユーザーで呼び出すことはありませんが、日常的に、アプリケーションに含まれるデータ分析パッケージを使用する必要があります。  
  
 必要に応じてアセンブリをダウンロードするイベント リスナーをアタッチ、 <xref:System.AppDomain.AssemblyResolve> でイベントを <xref:System.AppDomain.CurrentDomain%2A>です。 例については、「[Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API](http://msdn.microsoft.com/ja-jp/d20e2789-8621-4806-b5b7-841122da1456)」を参照してください。  
  
 すべてのアセンブリ、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーション キャッシュします。  
  
 すべての静的ファイルにダウンロードされます、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションのデータ ディレクトリがアプリケーションの現在のバージョンにします。 たとえば、アプリケーションがファイル グループをダウンロードした後で、ユーザーがそのアプリケーションの新しいバージョンをインストールしても、後で、アプリケーションの以前のバージョンに戻ることとします。 この場合は、以前のバージョンには、もともとダウンロードしてファイルのコピーがあります。 静的ファイルにアクセスする方法の詳細については、次を参照してください。 [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/ja-jp/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)します。  
  
 同時に使用する複数のファイル グループをダウンロードする <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>です。 使用してそれらの間を区別することができます、 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> のプロパティ、 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> に渡されるクラス、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントです。 さらに複雑な状態を渡す必要がある場合を使えば <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> を渡す、 `state` オブジェクトです。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> いずれかでは、部分信頼アプリケーションで動作 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] で実行されるアプリケーションにアクセス許可が制限されています。 ただし、アセンブリを動的に読み込む場合は、アプリケーションには完全な信頼が必要です。  
  
 オンデマンドでのデータ ファイルのダウンロードは現在サポートされていません。  
  
 ファイル名だけで 1 つのファイルをダウンロードすることはできません。 1 つのファイルをダウンロードする、名前を割り当てるグループで、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 展開とダウンロードこのメソッドを使用してグループです。  
  
 非同期のダウンロードをキャンセルする、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> パラメーターが null または長さ 0 です。</exception>
        <exception cref="T:System.InvalidOperationException">2 つ以上のダウンロードを開始することはできません <paramref name="groupName" /> 一度にします。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループです。 すべてのファイルが"optional"でマークされている、 ClickOnce アプリケーション グループ名を必要とします。</param>
        <param name="userState">非同期操作の状態情報を含む任意のオブジェクト。</param>
        <summary>バック グラウンドで省略可能なファイルのセットをオンデマンドでダウンロードし、アプリケーションの状態の一部をイベントのコールバックに渡します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを初期化または更新中に、アプリケーション マニフェストに"optional"のマークを付けたファイルはダウンロードされません。 使用することができます、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドをすべての要求時に、名前付きグループに属するファイルをダウンロードできるように、消費しませんネットワーク リソースとディスク領域ができたら、ユーザーが必要とすることを確認しています。 この方法は、静的なファイルだけでなく、アプリケーションの場合も必要ありませんがあるアセンブリに対しても動作します。 たとえば、特定のユーザーは、他のユーザーで呼び出すことはありませんが、日常的に、アプリケーションに含まれるデータ分析パッケージを使用する必要があります。 必要に応じてアセンブリをダウンロードするイベント リスナーをアタッチ、 <xref:System.AppDomain.AssemblyResolve> でイベントを <xref:System.AppDomain.CurrentDomain%2A>です。  
  
 複数のファイル グループを同時にダウンロードするにを使用して、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドです。 使用してそれらの間を区別することができます、 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> のプロパティ、 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> に渡されるクラス、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントです。 さらに複雑な状態を渡す必要がある場合を使用します。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 渡す、 `state` オブジェクトです。  
  
 すべての静的ファイルにダウンロードされます、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションのデータ ディレクトリがアプリケーションの現在のバージョンにします。 静的ファイルにアクセスする方法の詳細については、次を参照してください。 [Accessing Local and Remote Data in ClickOnce Applications](http://msdn.microsoft.com/ja-jp/be5cbe12-6cb6-49c9-aa59-a1624e1eef3d)します。 」を参照してください。 たとえば、アプリケーションは、ファイル グループをダウンロード後に、ユーザー、アプリケーションの新しいバージョンをインストール後で、アプリケーションの以前のバージョンに戻ることができます。 この場合は、以前のバージョンには、もともとダウンロードしてファイルのコピーがあります。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> いずれかでは、部分信頼アプリケーションで動作 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] で実行されるアプリケーションにアクセス許可が制限されています。 ただし、アセンブリを動的に読み込む場合は、アプリケーションには完全な信頼が必要です。  
  
 オンデマンドでのデータ ファイルのダウンロードは現在サポートされていません。  
  
 非同期のダウンロードをキャンセルする、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> パラメーターが null または長さ 0 です。</exception>
        <exception cref="T:System.InvalidOperationException">2 つ以上のダウンロードを開始することはできません <paramref name="groupName" /> 一度にします。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループです。 すべてのファイルが"optional"でマークされている、 ClickOnce アプリケーション グループ名を必要とします。</param>
        <summary>ファイルの非同期ダウンロードをキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupName" /> として <see langword="null" /> を使用することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイルのダウンロードが完了すると、アプリケーションのメイン スレッドで発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> イベントは、アプリケーションのメイン スレッドで呼び出されます。 スレッドを安全に呼び出すこのコールバック内で直接アプリケーションの Windows フォーム コントロールすることをお勧めします。  
  
 チェック、 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> のプロパティ、 <xref:System.ComponentModel.AsyncCompletedEventArgs> このコールバックを指定します。 場合は、このプロパティは `null`, 、ダウンロードがない場合は成功した `null`, 、インストールが成功せず、およびを通じてインストール エラーに関する詳細を見つけることができます、 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、ヘルプ ファイルをバック グラウンドのグループをダウンロードします。 この例を含む Windows フォーム アプリケーションを展開することが必要です、 <xref:System.Windows.Forms.StatusStrip> コントロール、およびこのコントロールが含まれている、 <xref:System.Windows.Forms.ToolStripStatusLabel> という名前のコントロール `downloadStatus`.  
  
 [!code-cpp[ClickOnceAPI\#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI\#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI\#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出しによって開始されるファイルのダウンロード操作のステータス情報があるときに発生 <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントは、アプリケーションのメイン スレッドで呼び出されます。 スレッドを安全に呼び出すこのコールバック内で直接アプリケーションの Windows フォーム コントロールすることをお勧めします。  
  
 指定された情報を使用して <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> をユーザーに進行状況の情報を伝達します。  
  
   
  
## 例  
 次のコード例では、ヘルプ ファイルをバック グラウンドのグループをダウンロードします。 この例を含む Windows フォーム アプリケーションを展開することが必要です、 <xref:System.Windows.Forms.StatusStrip> コントロール、およびこのコントロールが含まれている、 <xref:System.Windows.Forms.ToolStripStatusLabel> という名前のコントロール `downloadStatus`します。  
  
 [!code-cpp[ClickOnceAPI\#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI\#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI\#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループです。 すべてのファイルが"optional"でマークされている、 ClickOnce アプリケーション グループ名を必要とします。</param>
        <summary>名前付きファイル グループがクライアント コンピューターに既にダウンロードされているかどうかを確認します。</summary>
        <returns>
          <see langword="true" /> このアプリケーションの現在のバージョンに対して、ファイル グループは既にダウンロードされている場合それ以外の場合、 <see langword="false" />です。 アプリケーションの新しいバージョンをインストールすると、新しいバージョンがない追加、削除、またはファイル グループ内のファイルが変更される場合 <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> 返します <see langword="true" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> セキュリティ確認要求なしに部分的に信頼されたアプリケーションで動作します。  
  
 アプリケーションを更新するときに [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 、オンデマンドでのデータ ファイルを以前のバージョンから新しいバージョンのデータ ディレクトリにコピーします。 これらのファイルの新しいバージョンをダウンロードする場合は、以前のバージョンを保持し、新しいバージョンに移動するデータを削除する必要があります。  
  
   
  
## 例  
 すべてのファイルをダウンロードする次のコード例、 `HelpFiles` ディスクにグループ化します。  
  
 [!code-cpp[ClickOnceAPI\#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI\#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI\#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">
          <paramref name="groupName" /> ファイル グループではありませんが、アプリケーション マニフェストで定義されます。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>初めてこのアプリケーションがクライアント コンピューターで実行するかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> このバージョンのアプリケーションが前に、クライアント コンピューターで実行していない場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用 <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> を最初に、アプリケーションが実行したときに 1 回だけ初期化操作を実行する必要があるかどうかを判断します。  
  
 いないことを前提とする、 <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> 設定 `true` アプリケーションのこのインスタンスが、ユーザーに、ユーザー インターフェイスを表示する 1 つ目であることを示します。 システムがプロセスをスケジュールする方法、により、アプリケーションの 1 つのインスタンスが所有、 <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> プロパティに設定 `true`, が別のインスタンスで最初に、画面に表示する可能性があります。 このプロパティの値は、ユーザーが次の手順の 1 つのバージョンからアップグレードするたびにリセットされます。 最初の任意のバージョンのときだけに操作を実行する場合、アプリケーションを実行すると、初めて作成したファイルの存在を確認するかを使用して、フラグを格納するなどの追加テストを実行する必要があります **アプリケーション設定**します。  
  
   
  
## 例  
 次のコード例では <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> ファイル グループの更新をチェックするかどうかを決定する `HelpFiles`です。 1 つまたは複数のファイルが更新された場合を呼び出す <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> 新しいバージョンを取得します。  
  
 [!code-csharp[ClickOnceAPI\#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI\#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションがあるかどうかを示す値を取得、 ClickOnce アプリケーションです。</summary>
        <value>
          <see langword="true" /> この場合、 ClickOnce アプリケーション以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内部と外部の両方を実行するアプリケーションの場合、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] \(たとえば、ローカル コンピューターに展開する前にアプリケーションをデバッグする必要がある場合\) の展開、テスト <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> アクセスする前に、 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティです。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> 戻ります `true` 、アプリケーションのインストール方法またはオンラインでホストされているかどうかに関係なく、Web サイト、ファイル共有、または CD\-ROM からインストールされたかどうかに関係なく。  
  
   
  
## 例  
 次のコード例を取得 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> を使用して <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> 参照がないことを確認するには、まず `null`します。  
  
 [!code-cpp[ClickOnceAPI\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>日付と時刻を取得 ClickOnce アプリケーションの更新プログラムの最終確認日時。</summary>
        <value>
          <see cref="T:System.DateTime" /> の最終更新プログラムを確認します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] サブスクリプションの更新についてアプリケーションを構成することができます。 このシナリオで [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 、配置マニフェストで定義された間隔で自動的にアプリケーションの配置場所をポーリングし、使用可能な更新プログラムがあるかどうかを決定します。<xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> サブスクリプションか、明示的なチェックを使用して、開始しているかどうかに関係なく、最後の更新チェックの時刻を返す、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, 、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, 、<xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, 、<xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, 、または <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッドです。  
  
 更新プログラムのチェックが実行されていませんので、アプリケーションがインストールされている場合は、 <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> インストール時刻を返します。  
  
   
  
## 例  
 次のコード例を確認するかどうか、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションは、過去 3 日間で使用可能な更新プログラムのチェックが完了します。  
  
 [!code-cpp[ClickOnceAPI\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>同期ダウンロードし、このアプリケーションの最新バージョンのインストールを開始します。</summary>
        <returns>
          <see langword="true" /> アプリケーションが更新された場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションでは、アプリケーションで指定された位置の新しいバージョンを発行するときに更新と見なされます <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, 、およびアプリケーションの配置マニフェストのバージョン番号がユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号より大きい。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> 呼び出しは、更新プログラムをクライアント コンピューターにダウンロードしてにインストールされるまでブロック、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] キャッシュ。 この期間中に、アプリケーションはありません、ユーザーに応答します。 アプリケーションの応答性を維持またはダウンロード、使用中に進行状況レポートを表示する場合、 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッド代わりにします。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> すべてのアプリケーション マニフェストで"optional"としてマークされていないファイルをダウンロードします。 必要に応じて省略可能なファイルをダウンロードするにを使用して、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドです。  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 既に更新することがアプリケーションに自動的に呼び出すときに、 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> メソッド。 その場合は、このメソッドを呼び出すのスロー、 <xref:System.InvalidOperationException>です。  
  
 配置で 1 つまたは複数のファイルを更新したアプリケーション マニフェストを更新していない場合にお届け、 <xref:System.Deployment.Application.InvalidDeploymentException>です。 ほとんどの場合は、再デプロイすること、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションは、この問題を解決します。 配置マニフェストまたはアプリケーション マニフェストの公開キー署名が無効か存在しない場合は、この例外も表示されます。  
  
 更新プログラムは、アプリケーションの以前のバージョンよりも高いレベルのローカル コンピューター上の信頼を要求することができます。 アプリケーションでは、信頼されたアプリケーションの配置を使用する共通言語ランタイム \(CLR\) の信頼マネージャーは有効な信頼ライセンスが含まれるかどうかを判断配置マニフェストを調べます。 配置マニフェストには、有効な信頼ライセンスが含まれていない場合 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] インストールを停止し、スロー、 <xref:System.Deployment.Application.TrustNotGrantedException>です。<xref:System.Deployment.Application.ApplicationDeployment.Update%2A> メソッドでは、ユーザーを実行するアプリケーションのアクセス許可を付与するかどうかを確認するプロンプトは表示されません。  
  
   
  
## 例  
 次のコード例は、アプリケーションの更新をチェックします。更新プログラムが利用可能な場合は、インストール、同期的にします。  
  
 [!code-cpp[ClickOnceAPI\#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI\#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI\#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">ローカル コンピューターは、アプリケーションを実行する、要求されたアクセス許可レベルを付与しませんでした。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">ClickOnce 配置が破損しています。 ヒント、問題を診断および解決方法については、次を参照してください。 [Troubleshooting ClickOnce Deployments](http://msdn.microsoft.com/ja-jp/58e90012-f68b-4852-8ae9-58e361cbcc32)します。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">ネットワーク上の場所から、新しい展開をダウンロードできませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">アプリケーションは現在更新中です。</exception>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期のダウンロードとこのアプリケーションの最新バージョンのインストールを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーションでは、アプリケーションで指定された位置の新しいバージョンを発行するときに更新と見なされます <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, 、およびアプリケーションの配置マニフェストのバージョン番号がユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号より大きい。  
  
 更新プログラムのダウンロード中に [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] を発生させる、 <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> を通知する、ダウンロードの状態のアプリケーションのメイン スレッドでイベント ハンドラーです。 非同期の更新が完了するか、例外が発生したときに [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] を発生させる、 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> アプリケーションのメイン スレッドでイベントをします。 確認、 <xref:System.ComponentModel.AsyncCompletedEventArgs> 更新が成功したかどうかを判断するには、このイベントを指定します。  
  
 場合 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> 、例外がスロー [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 呼び出し <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> し、設定、 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティの <xref:System.ComponentModel.AsyncCompletedEventArgs> スローされた例外にします。  
  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> アプリケーション マニフェストに"optional"とマークされていない展開内のすべてのファイルをダウンロードします。 必要に応じて省略可能なファイルをダウンロードするにを使用して、 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドです。  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 既に更新することがアプリケーションに自動的に呼び出すときに、 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッド。 その場合は、このメソッドを呼び出すのスロー、 <xref:System.InvalidOperationException>です。  
  
 配置で 1 つまたは複数のファイルを更新したアプリケーション マニフェストを更新していない場合にお届け、 <xref:System.Deployment.Application.InvalidDeploymentException>です。 ほとんどの場合は、この問題を解決してアプリケーション マニフェストの再構築します。 配置マニフェストまたはアプリケーション マニフェストの公開キー署名が無効か存在しない場合は、この例外も表示されます。  
  
 更新プログラムは、アプリケーションの以前のバージョンよりも高いレベルのローカル コンピューター上の信頼を要求することができます。 アプリケーションでは、信頼されたアプリケーションの配置を使用する共通言語ランタイム \(CLR\) の信頼マネージャーは有効な信頼ライセンスが含まれるかどうかを判断配置マニフェストを調べます。 配置マニフェストには、有効な信頼ライセンスが含まれていない場合 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] インストールを停止し、スロー、 <xref:System.Deployment.Application.TrustNotGrantedException>です。<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> 実行するアプリケーションのアクセス許可を付与するかどうかをユーザーに求めるプロンプトは表示されません。  
  
   
  
## 例  
 次のコード例では、アプリケーションの読み込み時に、新しい更新プログラムが利用できるかどうかを決定します。必要な更新プログラムが利用可能な場合は、非同期的に更新プログラムをインストールします。 この例を含む Windows フォーム アプリケーションを展開することが必要です、 <xref:System.Windows.Forms.StatusStrip> コントロール、およびこのコントロールが含まれている、 <xref:System.Windows.Forms.ToolStripStatusLabel> という名前のコントロール `downloadStatus`します。  
  
 [!code-cpp[ClickOnceAPI\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">ローカル コンピューターはこのアプリケーションを実行する、要求されたアクセス許可レベルを付与しませんでした。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">ClickOnce 配置が破損しています。 ヒント、問題を診断および解決方法については、次を参照してください。 [Troubleshooting ClickOnce Deployments](http://msdn.microsoft.com/ja-jp/58e90012-f68b-4852-8ae9-58e361cbcc32)します。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">ネットワーク上の場所から、新しい展開をダウンロードできませんでした。</exception>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>によって開始される非同期更新をキャンセル <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> 呼び出しによって開始された更新プログラムにのみキャンセル <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>;、サブスクリプションの一部として開始された更新は取り消されません。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに ClickOnce への呼び出しの結果としてアプリケーションのアップグレードが完了した <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> イベントは、アプリケーションのメイン スレッドで呼び出されます。 例外を発生させず、このコールバック内で直接アプリケーションの Windows フォーム コントロールを呼び出すことができます。  
  
 チェック、 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> のプロパティ、 <xref:System.ComponentModel.AsyncCompletedEventArgs> このコールバックを指定します。 このプロパティは、する場合 `null`, 、インストールが正常に実行されていない場合 `null`, 、インストールが成功せず、およびの詳細については、このインストールの失敗を通じてを見つけることができます、 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティです。 更新プログラムがダウンロードされるを呼び出す必要があります。、 <xref:System.Windows.Forms.Application.Restart%2A> メソッドを、 <xref:System.Windows.Forms.Application> アプリケーションの新しいバージョンを使用します。  
  
 呼び出しによって、更新プログラムのインストールが取り消されましたかどうか <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, 、 <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> のプロパティ、 <xref:System.ComponentModel.AsyncCompletedEventArgs> クラスなる `true`します。  
  
 このイベント ハンドラーを使用する、アプリケーション インポートする必要があります両方とも、 <xref:System.Deployment.Application> と <xref:System.ComponentModel> 名前空間。  
  
   
  
## 例  
 次のコード例は、新しい更新プログラムがあるかどうかアプリケーションの読み込み時に決定します。必要な更新プログラムが利用可能な場合は、非同期的に更新プログラムをインストールします。 この例を含む Windows フォーム アプリケーションを展開することが必要です、 <xref:System.Windows.Forms.StatusStrip> コントロール、およびこのコントロールが含まれている、 <xref:System.Windows.Forms.ToolStripStatusLabel> という名前のコントロール `downloadStatus`します。  
  
 [!code-cpp[ClickOnceAPI\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新された後は、アプリケーションの完全な名前を取得します。</summary>
        <value>A <see cref="T:System.String" /> アプリケーションの完全な名前を格納しています。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最近ダウンロードされた更新プログラムのバージョンを取得します。</summary>
        <value>
          <see cref="T:System.Version" /> 更新プログラムのバージョンを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> 異なる <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> かどうかには、新しい更新プログラムがインストールされているが、まだ呼び出されません <xref:System.Windows.Forms.Application.Restart%2A> 上、 <xref:System.Windows.Forms.Application>です。 自動更新を実行するアプリケーションの配置マニフェストを構成する場合は、これら 2 つのアプリケーションを再起動する必要があるかどうかを決定する値を比較できます。  
  
 アプリケーションが更新されていない場合 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> と同じ値を返します <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>します。  
  
   
  
## 例  
 次のコード例を判断するメソッドを定義するかどうか [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] がアプリケーションを更新します。  
  
 [!code-cpp[ClickOnceAPI\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サイトまたはファイル共有をこのアプリケーションの更新を取得します。</summary>
        <value>HTTP、HTTPS、またはファイルの URL として表現される、更新パスまたは、Windows とネットワーク ファイルのパス \(UNC\) できます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> 更新プログラムのリダイレクトを使用するアプリケーションの配置が構成されている場合、最初にアプリケーションをダウンロードするために使用する Web サイトと異なる場合があります。  
  
 この値は、アプリケーションの配置マニフェストでのみ変更できます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet">For full access to the local computer. Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに ClickOnce 呼び出しによって開始された更新操作用の新しい状態情報を持つ、 <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベントは、アプリケーションのメイン スレッドで呼び出されます。 例外を発生させず、このコールバック内で直接アプリケーションの Windows フォーム コントロールを呼び出すことができます。  
  
   
  
## 例  
 次のコード例は、新しい更新プログラムがあるかどうかアプリケーションの読み込み時に決定します。必要な更新プログラムが利用可能な場合は、非同期的に更新プログラムをインストールします。  
  
 [!code-cpp[ClickOnceAPI\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>省略可能なファイルをバック グラウンドのセットをオンデマンドでダウンロードされます。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>チェック <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> 新しい更新プログラムが利用できるかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>同じ操作を実行 <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, が利用可能な更新に関する拡張情報を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>