<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>インストールや更新、 ClickOnce コンピューターに展開します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます <xref:System.Deployment.Application.InPlaceHostingManager> 書き込むプログラムのインストールを [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーション プログラムを使用しています。 たとえば、制御されたシステム管理ソフトウェア \(SMS\) 環境や、多数のローカル コンピューター上のインストール前またはインストール後の操作を実行する複雑なインストールが必要な状況では、このクラスを使用できます。 一般に、特定の順序でこのクラスのメンバーを使用する場合は。  
  
1.  <xref:System.Deployment.Application.InPlaceHostingManager> の新しいインスタンスを作成します。  
  
2.  使用して配置マニフェストをダウンロード <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>します。  
  
3.  使用して適切なアクセス許可を持つアプリケーションを実行できることを確認 <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>します。  
  
4.  使用して、アプリケーションのインストールをダウンロードして <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>します。  
  
-   を呼び出した場合、これらのパラメーターのいずれかの順序は、例外をスローします。  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> インストールできます、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 、アプリケーションが、実行はできません。 いくつかのメソッドをこのクラスなど、 <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>, 、Web ブラウザー内で実行される Windows Presentation Foundation ベースのアプリケーションをダウンロードするときに使用するために予約されています。  
  
 使用する <xref:System.Deployment.Application.InPlaceHostingManager> をダウンロードして、アプリケーションのインストール、するように注意してください署名用証明書、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 信頼された発行元として、クライアント コンピューターにインストールする予定のアプリケーションがインストール既にします。 信頼された発行元の詳細については、次を参照してください。 [Trusted Application Deployment Overview](http://msdn.microsoft.com/ja-jp/b24a1702-8fbe-45b1-87a0-9618a0708f1d)します。  
  
> [!NOTE]
>  現在、製品の制限がある <xref:System.Deployment.Application.InPlaceHostingManager> を使用してコードをデバッグするときに正しく動作してから [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)]します。 アプリケーションをデバッグする場合は、 [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)] F5 キーを使用すると、このサンプルは例外をスロー不可解なを呼び出したときに <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>します。 使用してデバッグする [!INCLUDE[vsprvs](~/includes/vsprvs-md.md)], 、デバッグ機能なし、アプリケーションを起動し、デバッガーをアタッチします。 代わりに、WinDbg などの他のデバッガーを使用することができます。  
  
   
  
## 例  
 次のコード例は、使用する方法を示しています。 <xref:System.Deployment.Application.InPlaceHostingManager> をインストールする、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] クライアント コンピューターでプログラムを使用してアプリケーションです。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">Uniform Resource Identifier \(<see cref="T:System.Uri" />\) に、 ClickOnce アプリケーションの配置マニフェスト。</param>
        <summary>新しいインスタンスを作成 <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> をダウンロードして、指定したブラウザーによってホストされるアプリケーションをインストールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、Web ブラウザーでホストされている Windows Presentation Foundation ベースのアプリケーションをダウンロードするときに使用されます。 Windows フォーム ベースのアプリケーションを使用して展開をダウンロードする [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], を使用して、 <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> を持つコンス トラクター、 `launchInHostProcess` パラメーターを設定する `false`です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> Windows XP または Windows オペレーティング システムの新しいバージョンでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException">渡すことはできません <see langword="null" /> の <paramref name="deploymentManifest" /> 引数。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> サポートされていない URI スキームを使用して ClickOnceします。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">識別子 URI \(Uniform Resource\) をインストールするアプリケーションの配置マニフェストにします。</param>
        <param name="launchInHostProcess">かどうかこのアプリケーションは、Web ブラウザーなどのホストで実行されます。 スタンドアロン アプリケーションの場合にこの値を設定 <see langword="false" />します。</param>
        <summary>新しいインスタンスを作成 <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> をダウンロードしてインストール、指定したアプリケーション、スタンドアロンの Windows フォーム ベースのアプリケーションまたは Web ブラウザーでホストされるアプリケーションのいずれかを指定できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 インスタンスを作成する方法を次のコード例に示します <xref:System.Deployment.Application.InPlaceHostingManager> を使用して展開された Windows フォーム ベースのアプリケーションをダウンロードすることができる [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]です。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> Windows XP または Windows オペレーティング システムの新しいバージョンでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException">渡すことはできません <see langword="null" /> の <paramref name="deploymentManifest" /> 引数。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="deploymentManifest" /> サポートされていない URI スキームを使用して ClickOnceします。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定するかどうか、 ClickOnce アプリケーションがローカル コンピューター上で実行するには、適切なアクセス許可とプラットフォームの依存関係。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す必要があります <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> 後 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> が正常に終了します。 呼び出す必要はありません <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> を呼び出さない限り、 <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, 、されエラーが返されます。  
  
   
  
## 例  
 次のコード例では、使用 <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>, 、その成功の本体でを呼び出している <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベント ハンドラーです。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">発生する前にこのメソッドが呼び出された場合、 <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> メソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust">場合 <see langword="true" />, 、アプリケーションは、アクセス許可を必要なレベルに昇格しようとしています。</param>
        <summary>指定するかどうか、 ClickOnce アプリケーションがローカル コンピューター上で実行するには、適切なアクセス許可とプラットフォームの依存関係。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `grantApplicationTrust` は `true`, 、<xref:System.Deployment.Application.InPlaceHostingManager> ことが必要な場合に、アプリケーションがアクセス許可を昇格が許可されます。 これは場合にのみ発生する可能性 <xref:System.Deployment.Application.InPlaceHostingManager> をこれらのアクセス許可を付与することができます。 たとえば場合、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 大きなパッケージの一部としてアプリケーションをインストールして、インストーラーに、完全な信頼が付与されて <xref:System.Deployment.Application.InPlaceHostingManager> を与えることが、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] を完全信頼。 場合 `grantApplicationTrust` は `false`, 、アプリケーションには、アクセス許可が付与されていません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期ダウンロード操作をキャンセルします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Call <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> when you are finished using the <xref:System.Deployment.Application.InPlaceHostingManager>. The <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> method leaves the <xref:System.Deployment.Application.InPlaceHostingManager> in an unusable state. After calling <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>, you must release all references to the <xref:System.Deployment.Application.InPlaceHostingManager> so the garbage collector can reclaim the memory that the <xref:System.Deployment.Application.InPlaceHostingManager> was occupying. For more information, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213) and [Implementing a Dispose Method](http://msdn.microsoft.com/ja-jp/eb4e1af0-3b48-4fbc-ad4e-fc2f64138bf9).  
  
> [!NOTE]
>  Always call <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> before you release your last reference to the <xref:System.Deployment.Application.InPlaceHostingManager>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Deployment.Application.InPlaceHostingManager> object's **languageKeyword tag is not supported!!!!**  
>  method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バック グラウンドでアプリケーションの更新プログラムをダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを呼び出した後に呼び出す必要があります <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>します。  
  
   
  
## 例  
 次のコード例では、使用 <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>, 、正常に実行の最後に呼び出した、 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベント ハンドラーです。  
  
 次のコード例では、既に定義しているのインスタンスを作成する前提としています <xref:System.Deployment.Application.InPlaceHostingManager> という `iphm`します。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">発生する前にこのメソッドが呼び出された場合、 <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> と <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" /> メソッドです。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションには、ローカル コンピューターにダウンロードが完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Windows フォーム ベースのアプリケーションをインストールする場合は自体は、アプリケーションを起動するユーザーに指示する必要があります。使用してプログラムを使用して Windows フォーム ベースのアプリケーションを開始することはできません、 <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> メソッドです。  
  
   
  
## 例  
 次のコード例ではの <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> イベントです。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションまたはマニフェストのダウンロードの状態の変更がある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンソール アプリケーションでは、イベントはスレッド プールからスレッドに割り当てられます。 したがって、実行中の更新イベント順序で前のイベントと比較が低下する可能性を示すイベントを後があります。 Windows フォームのイベントは、ユーザー インターフェイス \(UI\) スレッドのメッセージ キューから順番に処理されるために、Windows フォーム ベースのアプリケーションでは、このような動作を表示はされません。  
  
   
  
## 例  
 次のコード例では、更新、 <xref:System.Windows.Forms.ToolStripProgressBar> に含まれている、 <xref:System.Windows.Forms.StatusStrip>です。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>起動、 ClickOnce アプリケーション、Web ブラウザーで実行されている Windows Presentation Foundation ベースのアプリケーションである場合にのみです。</summary>
        <returns>
          <see cref="T:System.Runtime.Remoting.ObjectHandle" /> 起動されるアプリケーションに対応します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、Web ブラウザーでホストできる Windows Presentation Foundation ベースのアプリケーションに対してのみ有効です \(つまり、その配置マニフェストの定義、 `hostInBrowser` XML 要素\)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>配置マニフェストをダウンロード、 ClickOnce をバック グラウンドでアプリケーションと、操作が完了またはエラーが発生したときにイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このイベントが完了したときの通知を受信する、イベント ハンドラーを作成、 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベントです。 このイベントが呼び出されると、そのによってエラーが示されていない <xref:System.Deployment.Application.GetManifestCompletedEventArgs>, 、次を呼び出す必要があります <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> をアプリケーションがローカル コンピューター上で実行する権限を持つことを確認します。  
  
   
  
## 例  
 次のコード例を呼び出す方法を示す、 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> メソッドです。 ハンドラー、 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベント コールバック チェックして、マニフェストのダウンロードを正常に完了し、必要な場合がユーザーに、アプリケーションに関する追加情報を表示します。 ハンドラーを呼び出す場合は、ユーザーは、インストールを続行することに合意、 <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>です。  
  
 次のコード例では、既に定義しているのインスタンスを作成する前提としています <xref:System.Deployment.Application.InPlaceHostingManager> という `iphm`します。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>配置マニフェストがローカル コンピューターにダウンロードされている場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティの <xref:System.Deployment.Application.GetManifestCompletedEventArgs> を確認するかどうか <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> が正常に完了またはエラーが返されました。 場合 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> が null で <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> を正常に完了し、呼び出すことができます <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>します。  
  
   
  
## 例  
 次のコード例を呼び出す方法を示す、 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> メソッドです。 ハンドラー、 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベント コールバック チェックして、マニフェストのダウンロードを正常に完了し、必要な場合がユーザーに、アプリケーションに関する追加情報を表示します。 ハンドラーを呼び出す場合は、ユーザーは、インストールを続行することに合意、 <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>です。  
  
 次のコード例では、既に定義しているのインスタンスを作成する前提としています <xref:System.Deployment.Application.InPlaceHostingManager> という `iphm`します。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">アドインを削除することを示すサブスクリプション識別子を表す文字列。</param>
        <summary>以前にインストールするアプリケーションのユーザー定義コンポーネントを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> 有効なサブスクリプション id ではないか、名前、公開キー トークン、プロセッサ アーキテクチャ、およびバージョン番号は含まれません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">かを示すサブスクリプション識別子を表す文字列、 ClickOnce アプリケーションを削除します。</param>
        <summary>削除、 ClickOnce &lt; customUX &gt; 要素を含むアプリケーション。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが以前にインストールされたアンインストール [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] を使用するアプリケーション、 `<customUX>` 内の要素、 [\<entryPoint\> Element](http://msdn.microsoft.com/ja-jp/10ad3083-10c1-4189-a870-9bba2eab244f)です。  
  
 カスタム インストーラー プログラム追加と削除のエントリを作成しない、 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションについては、サブスクリプション識別子を格納する必要があります、 <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> のインストール時にプロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいインスタンスを作成 <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> をダウンロードして、指定したアプリケーションをインストールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定するかどうか、 ClickOnce アプリケーションがローカル コンピューター上で実行するには、適切なアクセス許可とプラットフォームの依存関係。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>