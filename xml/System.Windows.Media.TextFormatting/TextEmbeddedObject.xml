<Type Name="TextEmbeddedObject" FullName="System.Windows.Media.TextFormatting.TextEmbeddedObject">
  <TypeSignature Language="C#" Value="public abstract class TextEmbeddedObject : System.Windows.Media.TextFormatting.TextRun" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextEmbeddedObject extends System.Windows.Media.TextFormatting.TextRun" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextEmbeddedObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.TextFormatting.TextRun</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>全体の計測、ヒット テスト、および全体のコンテンツの描画が行われますテキスト コンテンツの種類を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 例、 <xref:System.Windows.Media.TextFormatting.TextEmbeddedObject> は、行のテキストの途中でボタンをクリックします。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextEmbeddedObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObject" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakAfter">
      <MemberSignature Language="C#" Value="public abstract System.Windows.LineBreakCondition BreakAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineBreakCondition BreakAfter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineBreakCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト オブジェクトの後に改行条件を取得します。</summary>
        <value>列挙値は、 <see cref="T:System.Windows.LineBreakCondition" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakBefore">
      <MemberSignature Language="C#" Value="public abstract System.Windows.LineBreakCondition BreakBefore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineBreakCondition BreakBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextEmbeddedObject.BreakBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineBreakCondition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>改行テキスト オブジェクトの前に、の条件を取得します。</summary>
        <value>列挙値は、 <see cref="T:System.Windows.LineBreakCondition" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeBoundingBox">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Rect ComputeBoundingBox (bool rightToLeft, bool sideways);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect ComputeBoundingBox(bool rightToLeft, bool sideways) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.ComputeBoundingBox(System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rightToLeft" Type="System.Boolean" />
        <Parameter Name="sideways" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rightToLeft">A <see cref="T:System.Boolean" /> テキスト オブジェクトが右から左に描画されるかどうかを決定する値。</param>
        <param name="sideways">A <see cref="T:System.Boolean" /> かどうか、テキスト オブジェクトで描画側ベースラインに対して平行を決定する値。</param>
        <summary>テキスト オブジェクトの計算の境界ボックスを取得します。</summary>
        <returns>A <see cref="T:System.Windows.Rect" /> テキスト オブジェクトの境界ボックスのサイズを表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public abstract void Draw (System.Windows.Media.DrawingContext drawingContext, System.Windows.Point origin, bool rightToLeft, bool sideways);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class System.Windows.Media.DrawingContext drawingContext, valuetype System.Windows.Point origin, bool rightToLeft, bool sideways) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.Draw(System.Windows.Media.DrawingContext,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
        <Parameter Name="origin" Type="System.Windows.Point" />
        <Parameter Name="rightToLeft" Type="System.Boolean" />
        <Parameter Name="sideways" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="drawingContext">
          <see cref="T:System.Windows.Media.DrawingContext" /> テキスト オブジェクトの描画に使用します。</param>
        <param name="origin">
          <see cref="T:System.Windows.Point" /> テキスト オブジェクトが描画される原点を表す値。</param>
        <param name="rightToLeft">A <see cref="T:System.Boolean" /> テキスト オブジェクトが右から左に描画されるかどうかを決定する値。</param>
        <param name="sideways">A <see cref="T:System.Boolean" /> かどうか、テキスト オブジェクトで描画側ベースラインに対して平行を決定する値。</param>
        <summary>テキスト オブジェクトを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics Format (double remainingParagraphWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics Format(float64 remainingParagraphWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextEmbeddedObject.Format(System.Double)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remainingParagraphWidth" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="remainingParagraphWidth">A <see cref="T:System.Double" /> 段落の残りの幅を表します。</param>
        <summary>内の段落の指定した残りの幅に収まるテキスト オブジェクトの単位のメトリックを取得します。</summary>
        <returns>A <see cref="T:System.Windows.Media.TextFormatting.TextEmbeddedObjectMetrics" /> テキスト オブジェクトの評価尺度を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFixedSize">
      <MemberSignature Language="C#" Value="public abstract bool HasFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextEmbeddedObject.HasFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト オブジェクトの行内での配置場所に関係なく固定サイズかどうかを判断します。</summary>
        <value>
          <see langword="true" /> テキスト オブジェクトがある、固定サイズを場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>