<Type Name="ImageEditor" FullName="System.Drawing.Design.ImageEditor">
  <TypeSignature Language="C#" Value="public class ImageEditor : System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageEditor extends System.Drawing.Design.UITypeEditor" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.ImageEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Design.UITypeEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プロパティ グリッドでプロパティのイメージを選択するためには、ユーザー インターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Design.ImageEditor> は、 <xref:System.Drawing.Design.UITypeEditor> ユーザー プロパティのイメージを選択するためのユーザー インターフェイスを提供します。 表示されているユーザーは、エディターを起動するときに、 **ファイルを開く** ディレクトリに移動してファイルを選択することができます\] ダイアログ ボックス。 ファイルの一覧は最初に、エディターの既定のファイル名拡張子でフィルター処理します。  
  
   
  
## 例  
 次のコード例では、 <xref:System.ComponentModel.EditorAttribute> に関連付けるには、 <xref:System.Drawing.Design.ImageEditor> プロパティを使用します。  
  
 [!code-cpp[EditorAttributesExample\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/EditorAttributesExample/CPP/class1.cpp#3)]
 [!code-csharp[EditorAttributesExample\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/EditorAttributesExample/CS/class1.cs#3)]
 [!code-vb[EditorAttributesExample\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/EditorAttributesExample/VB/class1.vb#3)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">for access to unmanaged code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
    <altmember cref="T:System.Drawing.Design.UITypeEditor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Design.ImageEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateExtensionsString">
      <MemberSignature Language="C#" Value="protected static string CreateExtensionsString (string[] extensions, string sep);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateExtensionsString(string[] extensions, string sep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensions" Type="System.String[]" />
        <Parameter Name="sep" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extensions">フィルター処理拡張機能。</param>
        <param name="sep">使用する区切り記号。</param>
        <summary>拡張子のファイル拡張子の指定された配列と指定した区切り記号を使用してファイルの文字列を作成します。</summary>
        <returns>指定した区切り記号で区切って指定したファイル名拡張子を含む文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された拡張機能では、既定のファイル リストをフィルター処理するファイルを開く\] ダイアログ ボックスでファイルの種類を示しています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterEntry">
      <MemberSignature Language="C#" Value="protected static string CreateFilterEntry (System.Drawing.Design.ImageEditor e);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateFilterEntry(class System.Drawing.Design.ImageEditor e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.ImageEditor" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Drawing.Design.ImageEditor" /> からフィルター エントリを取得します。</param>
        <summary>ファイル ダイアログ ボックスのファイルの一覧のフィルター エントリを作成します。</summary>
        <returns>新しいフィルター エントリの文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public override object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="provider">
          <see cref="T:System.IServiceProvider" /> 、編集サービス取得できます。</param>
        <param name="value">
          <see cref="T:System.Object" /> 編集されています。</param>
        <summary>によって提供される編集スタイルを使用して指定したオブジェクトの値を編集、 <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> メソッドです。</summary>
        <returns>
          <see cref="T:System.Object" /> 新しい値を表します。 オブジェクトの値が変わらない場合 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> に渡されたオブジェクトを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このエディターでは、サービス プロバイダーを使用して、必要な編集サービスを取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public override System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>編集スタイルを取得、 <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> メソッドです。</summary>
        <returns>いずれか、 <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> スタイルの編集がサポートされていることを示す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Drawing.Design.ImageEditor.EditValue%2A> メソッドがサポートされていませんが、このメソッドは <xref:System.Drawing.Design.UITypeEditorEditStyle.None>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="protected virtual string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.GetExtensions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ファイル リストにフィルターを適用するために、このエディターが最初に使用するファイル リスト フィルターの拡張子を取得します。</summary>
        <returns>ファイル リストにフィルターを適用するために使用するファイル拡張子のセット。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFileDialogDescription">
      <MemberSignature Language="C#" Value="protected virtual string GetFileDialogDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetFileDialogDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このエディターによって提供される既定のファイル リストのフィルターの説明を取得します。</summary>
        <returns>既定のファイル リストのフィルターの説明です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ファイル ダイアログ ボックスの説明は、ファイルの一覧のフィルターのドロップダウン リスト ボックスに表示されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageExtenders">
      <MemberSignature Language="C#" Value="protected virtual Type[] GetImageExtenders ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type[] GetImageExtenders() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.GetImageExtenders" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>サポートされているイメージの種類の配列を取得します。</summary>
        <returns>配列 <see cref="T:System.Type" /> を表すイメージの種類をサポートします。</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Derived classes can override this property to implement a different list of supported image types.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public override bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPaintValueSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>このエディターがオブジェクトの値の表現を描画できるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> 場合 <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> が実装されているそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromStream">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Image LoadFromStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Drawing.Image LoadFromStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">A <see cref="T:System.IO.Stream" /> 読み込むイメージを格納しています。</param>
        <summary>指定したストリームから画像を読み込みます。</summary>
        <returns>
          <see cref="T:System.Drawing.Image" /> が読み込まれています。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public override void PaintValue (System.Drawing.Design.PaintValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PaintValue(class System.Drawing.Design.PaintValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.PaintValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 対象と描画位置を示します。</param>
        <summary>指定された値を描画 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 表示するには、値の形式を標準的なプロパティ シートの形式での描画の境界内、 <xref:System.Drawing.Rectangle> 、指定した内に含まれる <xref:System.Drawing.Design.PaintValueEventArgs>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>