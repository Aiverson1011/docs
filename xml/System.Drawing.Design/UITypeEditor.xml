<Type Name="UITypeEditor" FullName="System.Drawing.Design.UITypeEditor">
  <TypeSignature Language="C#" Value="public class UITypeEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UITypeEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.UITypeEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>値エディターをデザインするために使用できる基本クラスを提供します。値エディターは、サポートされているデータ型のオブジェクトの値を表示および編集するためのユーザー インターフェイス \(UI\) を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Design.UITypeEditor> クラスから派生し、デザイン時環境用のカスタム型エディターを実装する拡張基本クラスを提供します。 通常、カスタム型エディターの対話、 <xref:System.Windows.Forms.PropertyGrid> コントロールです。  
  
 カスタム型エディターは、テキスト ボックス値エディターが効率的に特定の種類の値を選択するのに十分でない状況で便利です。  
  
 カスタム デザイン時の UI 型エディターを実装するのには、次の手順を実行する必要があります。  
  
-   <xref:System.Drawing.Design.UITypeEditor> から派生するクラスを定義します。  
  
-   オーバーライド、 <xref:System.Drawing.Design.UITypeEditor.EditValue%2A> ユーザー インターフェイス、ユーザー入力の処理、および値の割り当てを処理するメソッドです。  
  
-   オーバーライド、 <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> メソッドを使用するエディター スタイルの型のプロパティ\] ウィンドウに通知します。  
  
 次の手順を実行して、\[プロパティ\] ウィンドウで、値の表現を描画する機能を追加できます。  
  
-   オーバーライド、 <xref:System.Drawing.Design.UITypeEditor.GetPaintValueSupported%2A> を示す値の表現を表示するエディターをサポートしている方法です。  
  
-   オーバーライド、 <xref:System.Drawing.Design.UITypeEditor.PaintValue%2A> 値の表現の表示を実装するメソッドです。  
  
-   オーバーライド、 <xref:System.Drawing.Design.UITypeEditor> コンス トラクター メソッドの場合は、エディターは初期化の動作を持つ必要があります。  
  
> [!NOTE]
>  <xref:System.Drawing.Design.UITypeEditor> クラスが右から左 \(RTL\) のレイアウトをサポートしていません。  
  
 デザイン時サポートを強化する方法の詳細については、次を参照してください。 [Extending Design\-Time Support](http://msdn.microsoft.com/ja-jp/d6ac8a6a-42fd-4bc8-bf33-b212811297e2)します。 実装の詳細については、 <xref:System.Drawing.Design.UITypeEditor>, を参照してください [User Interface Type Editors Overview](http://msdn.microsoft.com/ja-jp/f068b4ea-6e8c-4c0b-aefd-188b337240da)します。  
  
   
  
## 例  
 次のコード例を示しますが、 <xref:System.Drawing.Design.UITypeEditor> integer、double、関連付けられるまたは float プロパティを使用することができます、 <xref:System.ComponentModel.EditorAttribute> デザイン モードで \[プロパティ\] ウィンドウから角度選択インターフェイスを提供します。 この例では、 <xref:System.Windows.Forms.Design.IWindowsFormsEditorService> インターフェイスをデザイン モードで \[プロパティ\] ウィンドウで、ドロップダウン リスト コントロールを表示します。 コードをコンパイルし、ツールボックスを使用して、アセンブリを追加、 **ツールボックスのカスタマイズ** コマンドを **ツール** Visual Studio のメニュー。 インスタンスを作成、 `AngleTestControl` エディターを使用してプロパティを構成する \[プロパティ\] ウィンドウで、Angle プロパティの横にあるドロップダウン ボタンをクリックします。  
  
 [!code-cpp[AngleEditor\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/AngleEditor/CPP/angleeditor.cpp#1)]
 [!code-csharp[AngleEditor\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/AngleEditor/CS/angleeditor.cs#1)]
 [!code-vb[AngleEditor\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/AngleEditor/VB/angleeditor.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">for full access to system resources. Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Associated state:</permission>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.IServiceProvider" />
    <altmember cref="T:System.Windows.Forms.PropertyGrid" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UITypeEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Design.UITypeEditor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public object EditValue (IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object EditValue(class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <see cref="T:System.IServiceProvider" /> このエディターは、サービスを得るために使用できます。</param>
        <param name="value">編集対象のオブジェクト。</param>
        <summary>示されたエディター スタイルを使用して、指定したオブジェクトの値の編集、 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> メソッドです。</summary>
        <returns>オブジェクトの新しい値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、値を編集するためのユーザー インターフェイスを起動し、ユーザーが値を編集するこのエディターが構成されている型の値を編集しようとしたときに、プロパティ ウィンドウによって呼び出されます。 サービス プロバイダーが提供するは、エディターは、必要なサービスを取得できるようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="EditValue">
      <MemberSignature Language="C#" Value="public virtual object EditValue (System.ComponentModel.ITypeDescriptorContext context, IServiceProvider provider, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EditValue(class System.ComponentModel.ITypeDescriptorContext context, class System.IServiceProvider provider, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="provider">このエディターがサービスを取得するために使用できる <see cref="T:System.IServiceProvider" />。</param>
        <param name="value">編集対象のオブジェクト。</param>
        <summary>
          <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> メソッドで示されたエディター スタイルを使用して、指定したオブジェクトの値を編集します。</summary>
        <returns>オブジェクトの新しい値。 オブジェクトの値が変更されていない場合は、このメソッドは渡されたオブジェクトと同じオブジェクトを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A service provider is provided so that the editor can obtain any required services.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.UITypeEditorEditStyle GetEditStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用するエディター スタイルを取得、 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> メソッドです。</summary>
        <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> を現在の使用するエディター スタイルを示す列挙値 <see cref="T:System.Drawing.Design.UITypeEditor" />です。 既定では、このメソッドは <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Drawing.Design.UITypeEditor> をオーバーライドしてこのメソッドを実装しなかった <xref:System.Drawing.Design.UITypeEditor.GetEditStyle%2A> 戻ります <xref:System.Drawing.Design.UITypeEditorEditStyle.None> 既定です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetEditStyle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Design.UITypeEditorEditStyle GetEditStyle (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Design.UITypeEditorEditStyle GetEditStyle(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.UITypeEditorEditStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>使用するエディター スタイルを取得、 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> メソッドです。</summary>
        <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> で使用するエディター スタイルを示す値、 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> メソッドです。 場合、 <see cref="T:System.Drawing.Design.UITypeEditor" /> し、このメソッドをサポートしません <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> 戻ります <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />します。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.UITypeEditorEditStyle" />
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public bool GetPaintValueSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPaintValueSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示します。</summary>
        <returns>
          <see langword="true" /> 場合 <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> が実装されているそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="GetPaintValueSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPaintValueSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPaintValueSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">追加のコンテキスト情報を取得するために使用できる <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <summary>指定したコンテキスト内でオブジェクトの値の視覚的な表現を描画できるかどうかを示します。</summary>
        <returns>
          <see langword="true" /> 場合 <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" /> が実装されているそれ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="IsDropDownResizable">
      <MemberSignature Language="C#" Value="public virtual bool IsDropDownResizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownResizable" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Design.UITypeEditor.IsDropDownResizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがドロップダウン エディターのサイズを変更できるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ドロップダウン エディターのサイズを変更できる場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public virtual void PaintValue (System.Drawing.Design.PaintValueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PaintValue(class System.Drawing.Design.PaintValueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Design.PaintValueEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> 対象と描画位置を示します。</param>
        <summary>指定されたオブジェクトの値の表現を描画 <see cref="T:System.Drawing.Design.PaintValueEventArgs" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エディターは、指定された四角形の境界内描画する必要があります。 この四角形のプロパティ\] ウィンドウ内の値の表現を描画する領域を示します。  
  
 以降で、 [!INCLUDE[net_v46](~/includes/net-v46-md.md)], で指定された四角 <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> app.config ファイルには、次のエントリが含まれている場合は、システム DPI 設定に基づいて変更する場合は。  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="PaintValue">
      <MemberSignature Language="C#" Value="public void PaintValue (object value, System.Drawing.Graphics canvas, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PaintValue(object value, class System.Drawing.Graphics canvas, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="canvas" Type="System.Drawing.Graphics" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="value">値を持つオブジェクト型エディターが表示されます。</param>
        <param name="canvas">オブジェクトの値の表現が描画される描画キャンパス。</param>
        <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> の境界値の描画にします。</param>
        <summary>指定したキャンバスに、指定したオブジェクトの値の視覚的な表現を描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エディターは、指定された四角形の境界内描画する必要があります。 この四角形のプロパティ\] ウィンドウ内の値の表現を描画する領域を示します。  
  
 以降で、 [!INCLUDE[net_v46](~/includes/net-v46-md.md)], で指定された四角 <xref:System.Drawing.Design.PaintValueEventArgs.Bounds%2A> app.config ファイルには、次のエントリが含まれている場合は、システム DPI 設定に基づいて変更する場合は。  
  
```  
<appSettings>  
  <add key="EnableWindowsFormsHighDpiAutoResizing" value="true" />  
</appSettings>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EditValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>示されたエディター スタイルを使用して、指定したオブジェクトの値の編集、 <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> メソッドです。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetPaintValueSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>エディターでオブジェクトの値の視覚的な表現を描画できるかどうかを示します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetEditStyle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用するエディター スタイルを取得、 <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> メソッドです。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="PaintValue">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オブジェクトの値の視覚的な表現を描画します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>