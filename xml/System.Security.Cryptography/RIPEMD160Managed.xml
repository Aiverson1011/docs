<Type Name="RIPEMD160Managed" FullName="System.Security.Cryptography.RIPEMD160Managed">
  <TypeSignature Language="C#" Value="public class RIPEMD160Managed : System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RIPEMD160Managed extends System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RIPEMD160Managed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RIPEMD160</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>計算、<see cref="T:System.Security.Cryptography.RIPEMD160" />マネージ ライブラリを使用して入力データのハッシュ。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Ripemd\-160 は、160 ビットの暗号ハッシュ関数です。 これは MD4、MD5、および RIPEMD 128 ビットのハッシュ関数のセキュリティで保護された交換用として使用するものです。 RIPEMD は、ヨーロッパ プロジェクト RIPE \(競合整合性プリミティブ、1988 1992\) 評価のフレームワークに開発されました。  
  
> [!NOTE]
>  <xref:System.Security.Cryptography.RIPEMD160Managed>セキュリティで保護されたハッシュ アルゴリズム sha\-256、sha\-512、派生クラスで置き換えられました。<xref:System.Security.Cryptography.SHA256Managed>および<xref:System.Security.Cryptography.SHA512Managed>セキュリティおよびよりもパフォーマンスが向上を提供して<xref:System.Security.Cryptography.RIPEMD160Managed>です。 使用する<xref:System.Security.Cryptography.RIPEMD160Managed>レガシ アプリケーションとデータとの互換性のみです。  
  
   
  
## 例  
 次のコード例を使用してファイルをエンコードする方法を示しています、<xref:System.Security.Cryptography.RIPEMD160Managed>クラスと、そのファイルをデコードします。  
  
 [!code-cpp[RIPEMD160\#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160\#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RIPEMD160Managed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.RIPEMD160" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ハッシュは、大量のデータを表す固定サイズの一意の値として使用されます。 対応するデータも一致する場合にのみ、2 組のデータのハッシュが一致する必要があります。 ハッシュに大規模な予測できない需要の変化のデータを少し変更します。  
  
 ハッシュのサイズ、 <xref:System.Security.Cryptography.RIPEMD160> アルゴリズムは、160 ビットです。  
  
   
  
## 例  
 次のコード例の計算、 <xref:System.Security.Cryptography.RIPEMD160Managed> クラスのディレクトリ内のすべてのファイルのハッシュ。  
  
 [!code-cpp[RIPEMD160\#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160\#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ポリシーは、FIPS アルゴリズムに準拠していません。</exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">入力データ。</param>
        <param name="ibStart">バイト配列内のデータの使用開始位置を示すオフセット。</param>
        <param name="cbSize">配列内でデータとして使用されるバイトの数。</param>
        <summary>派生クラスでオーバーライドされた場合に、オブジェクトに書き込まれたデータをルーティング、 <see cref="T:System.Security.Cryptography.RIPEMD160" /> ハッシュ アルゴリズム、ハッシュを計算します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードでは呼び出されません。  
  
 この抽象メソッドでは、ハッシュ計算を実行します。 暗号ストリーム オブジェクトに対するすべての書き込みは、このメソッドをデータを通過します。 データの各ブロックに対しては、このメソッドは、データ ストリームの末尾に正しいハッシュ値が返されるようにハッシュ オブジェクトの状態を更新します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashFinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、暗号ストリーム オブジェクトによって最後のデータが処理された後に、ハッシュ計算を終了します。</summary>
        <returns>バイト配列にした計算済みのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is not called by application code. This method finalizes any partial computation and returns the correct hash value of the data stream.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>インスタンスを初期化、 <see cref="T:System.Security.Cryptography.RIPEMD160Managed" /> クラスのマネージ ライブラリを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Ripemd\-160 は、160 ビットの暗号化ハッシュ関数です。 これは、MD4、MD5、および RIPEMD 128 ビットのハッシュ関数の安全な代替策として使用するためです。 RIPEMD は EU プロジェクト RIPE \(競合整合性プリミティブ、1988年 1992年\) 評価のフレームワークに開発されました。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>