<Type Name="KeyedHashAlgorithm" FullName="System.Security.Cryptography.KeyedHashAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class KeyedHashAlgorithm : System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit KeyedHashAlgorithm extends System.Security.Cryptography.HashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.HashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>キー付きハッシュ アルゴリズムのすべての実装の派生元となる抽象クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Hash functions map binary strings of an arbitrary length to small binary strings of a fixed length. A cryptographic hash function has the property that it is computationally infeasible to find two distinct inputs that hash to the same value. Small changes to the data result in large, unpredictable changes in the hash.  
  
 A keyed hash algorithm is a key\-dependent, one\-way hash function used as a message authentication code. Only someone who knows the key can verify the hash. Keyed hash algorithms provide authenticity without secrecy.  
  
 Hash functions are commonly used with digital signatures and for data integrity. The <xref:System.Security.Cryptography.HMACSHA1> class is an example of a keyed hash algorithm.  
  
   
  
## 例  
 The following code example demonstrates how to derive from the <xref:System.Security.Cryptography.KeyedHashAlgorithm> class.  
  
 [!code-csharp[KeyedHashAlgorithm\#1](~/samples/snippets/csharp/VS_Snippets_CLR/keyedhashalgorithm/cs/program.cs#1)]
 [!code-vb[KeyedHashAlgorithm\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/keyedhashalgorithm/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyedHashAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 You cannot create an instance of an abstract class. Application code creates a new instance of a derived class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeyedHashAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.KeyedHashAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.Create" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キー付きハッシュ アルゴリズムの既定の実装のインスタンスを作成します。</summary>
        <returns>既定の設定が変更されない限り、新しい <see cref="T:System.Security.Cryptography.HMACSHA1" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 By default, this overload uses the <xref:System.Security.Cryptography.HMACSHA1> implementation of a keyed hash algorithm. If you want to specify a different implementation, use the <xref:System.Security.Cryptography.KeyedHashAlgorithm.Create%28System.String%29> overload, which lets you specify an algorithm name, instead. The cryptography configuration system defines the default implementation of the <xref:System.Security.Cryptography.KeyedHashAlgorithm> class.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeyedHashAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.KeyedHashAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyedHashAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName">使用するキー付きハッシュ アルゴリズム実装。<c>algName</c> パラメーターの有効値、およびそれらの割り当て先のアルゴリズムを次の表に示します。  
  
 <list type="table">  
<listheader>  
<term> パラメーター値  
  
 </term>  
<description> Implements  
  
 </description>  
</listheader>  
<item>  
<term> System.Security.Cryptography.HMAC  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA1" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.KeyedHashAlgorithm  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA1" />  
  
 </description>  
</item>  
<item>  
<term> HMACMD5  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACMD5" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.HMACMD5  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACMD5" />  
  
 </description>  
</item>  
<item>  
<term> HMACRIPEMD160  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.HMACRIPEMD160  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />  
  
 </description>  
</item>  
<item>  
<term> HMACSHA1  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA1" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.HMACSHA1  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA1" />  
  
 </description>  
</item>  
<item>  
<term> HMACSHA256  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA256" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.HMACSHA256  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA256" />  
  
 </description>  
</item>  
<item>  
<term> HMACSHA384  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA384" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.HMACSHA384  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA384" />  
  
 </description>  
</item>  
<item>  
<term> HMACSHA512  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA512" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.HMACSHA512  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.HMACSHA512" />  
  
 </description>  
</item>  
<item>  
<term> MACTripleDES  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.MACTripleDES" />  
  
 </description>  
</item>  
<item>  
<term> System.Security.Cryptography.MACTripleDES  
  
 </term>  
<description> <see cref="T:System.Security.Cryptography.MACTripleDES" />  
  
 </description>  
</item>  
</list></param>
        <summary>キー付きハッシュ アルゴリズムの指定した実装のインスタンスを作成します。</summary>
        <returns>指定したキー付きハッシュ アルゴリズムの新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、MD5、sha\-1、sha\-256、および RIPEMD160 をなどのアルゴリズムをサポートします。 完全な一覧についてでサポートされる値を参照してください、 `algName` パラメーター。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Security.Cryptography.KeyedHashAlgorithm" /> によって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is called by the public **languageKeyword tag is not supported!!!!**  
 method and the **languageKeyword tag is not supported!!!!**  
 method. **languageKeyword tag is not supported!!!!**  
 invokes the protected **languageKeyword tag is not supported!!!!**  
 method with the **parameterReference tag is not supported!!!!**  
 parameter set to **languageKeyword tag is not supported!!!!**  
. **languageKeyword tag is not supported!!!!**  
 invokes **languageKeyword tag is not supported!!!!**  
 with **parameterReference tag is not supported!!!!**  
 set to **languageKeyword tag is not supported!!!!**  
.  
  
 When the **parameterReference tag is not supported!!!!**  
 parameter is **languageKeyword tag is not supported!!!!**  
, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.KeyedHashAlgorithm> references. This method invokes the **languageKeyword tag is not supported!!!!**  
 method of each referenced object.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
 For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public virtual byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.KeyedHashAlgorithm.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ハッシュ アルゴリズムで使用するキーを取得または設定します。</summary>
        <value>ハッシュ アルゴリズムで使用するキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、パブリック アクセサーを <xref:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue> フィールドです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A> 現在のキーを取得するプロパティを <xref:System.Security.Cryptography.KeyedHashAlgorithm> オブジェクトです。 このコード例が示されている例の一部は、 <xref:System.Security.Cryptography.KeyedHashAlgorithm> クラスです。  
  
 [!code-cpp[System.Security.Cryptography.KeyedHashAlgorithm\#22](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.KeyedHashAlgorithm/CPP/contosokeyedhash.cpp#22)]
 [!code-csharp[System.Security.Cryptography.KeyedHashAlgorithm\#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.KeyedHashAlgorithm/CS/contosokeyedhash.cs#22)]
 [!code-vb[System.Security.Cryptography.KeyedHashAlgorithm\#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.KeyedHashAlgorithm/VB/contosokeyedhash.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">変更しようとしましたが、 <see cref="P:System.Security.Cryptography.KeyedHashAlgorithm.Key" /> ハッシュが開始された後のプロパティです。</exception>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="protected byte[] KeyValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] KeyValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ハッシュ アルゴリズムで使用するキー。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このフィールドには、 <xref:System.Security.Cryptography.KeyedHashAlgorithm.Key%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>キー付きハッシュ アルゴリズムの実装のインスタンスを作成します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>