<Type Name="CryptoConfig" FullName="System.Security.Cryptography.CryptoConfig">
  <TypeSignature Language="C#" Value="public class CryptoConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CryptoConfig extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CryptoConfig" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>暗号の構成情報にアクセスします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の表は、このクラスおよびマッピングに既定のアルゴリズムの実装で認識される単純な名前を示します。 またはをマップできるその他の実装、これらの名前」の説明に従って [Mapping Algorithm Names to Cryptography Classes](http://msdn.microsoft.com/ja-jp/01327c69-c5e1-4ef6-b73f-0a58351f0492)します。  
  
|簡易名|アルゴリズムの実装|  
|---------|---------------|  
|3 des、トリプル DES、TripleDES、System.Security.Cryptography.TripleDES|<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>|  
|AES、System.Security.Cryptography.AesCryptoServiceProvider|<xref:System.Security.Cryptography.AesCryptoServiceProvider>|  
|AesManaged System.Security.Cryptography.AesManaged|<xref:System.Security.Cryptography.AesManaged>|  
|System.Security.Cryptography.AsymmetricAlgorithm|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  
|DES、System.Security.Cryptography.DES|<xref:System.Security.Cryptography.DESCryptoServiceProvider>|  
|DSA System.Security.Cryptography.DSA|<xref:System.Security.Cryptography.DSACryptoServiceProvider>|  
|ECDH ECDiffieHellman ECDiffieHellmanCng、System.Security.Cryptography.ECDiffieHellmanCng|<xref:System.Security.Cryptography.ECDiffieHellmanCng>|  
|ECDsa ECDsaCng、System.Security.Cryptography.ECDsaCng|<xref:System.Security.Cryptography.ECDsaCng>|  
|System.Security.Cryptography.HashAlgorithm|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  
|HMAC、System.Security.Cryptography.HMAC|<xref:System.Security.Cryptography.HMACSHA1>|  
|HMACMD5 System.Security.Cryptography.HMACMD5|<xref:System.Security.Cryptography.HMACMD5>|  
|HMACRIPEMD160 System.Security.Cryptography.HMACRIPEMD160|<xref:System.Security.Cryptography.HMACRIPEMD160>|  
|HMACSHA1 System.Security.Cryptography.HMACSHA1|<xref:System.Security.Cryptography.HMACSHA1>|  
|HMACSHA256 System.Security.Cryptography.HMACSHA256|<xref:System.Security.Cryptography.HMACSHA256>|  
|HMACSHA384 System.Security.Cryptography.HMACSHA384|<xref:System.Security.Cryptography.HMACSHA384>|  
|HMACSHA512 System.Security.Cryptography.HMACSHA512|<xref:System.Security.Cryptography.HMACSHA512>|  
|System.Security.Cryptography.KeyedHashAlgorithm|<xref:System.Security.Cryptography.HMACSHA1>|  
|MACTripleDES、System.Security.Cryptography.MACTripleDES|<xref:System.Security.Cryptography.MACTripleDES>|  
|MD5、System.Security.Cryptography.MD5|<xref:System.Security.Cryptography.MD5CryptoServiceProvider>|  
|System.Security.Cryptography.MD5Cng|<xref:System.Security.Cryptography.MD5Cng>|  
|RandomNumberGenerator|<xref:System.Security.Cryptography.RNGCryptoServiceProvider>|  
|RC2 System.Security.Cryptography.RC2|<xref:System.Security.Cryptography.RC2CryptoServiceProvider>|  
|Rijndael System.Security.Cryptography.Rijndael|<xref:System.Security.Cryptography.RijndaelManaged>|  
|RIPEMD160、ripemd\-160、System.Security.Cryptography.RIPEMD160Managed|<xref:System.Security.Cryptography.RIPEMD160Managed>|  
|RSA System.Security.Cryptography.RSA|<xref:System.Security.Cryptography.RSACryptoServiceProvider>|  
|SHA、SHA1、System.Security.Cryptography.SHA1|<xref:System.Security.Cryptography.SHA1CryptoServiceProvider>|  
|System.Security.Cryptography.SHA1Cng|<xref:System.Security.Cryptography.SHA1Cng>|  
|SHA256、sha\-256、System.Security.Cryptography.SHA256|<xref:System.Security.Cryptography.SHA256Managed>|  
|System.Security.Cryptography.SHA256Cng|<xref:System.Security.Cryptography.SHA256Cng>|  
|System.Security.Cryptography.SHA256CryptoServiceProvider|<xref:System.Security.Cryptography.SHA256CryptoServiceProvider>|  
|SHA384、sha\-384、System.Security.Cryptography.SHA384|<xref:System.Security.Cryptography.SHA384Managed>|  
|System.Security.Cryptography.SHA384Cng|<xref:System.Security.Cryptography.SHA384Cng>|  
|System.Security.Cryptography.SHA384CryptoServiceProvider|<xref:System.Security.Cryptography.SHA384CryptoServiceProvider>|  
|SHA512、sha\-512、System.Security.Cryptography.SHA512|<xref:System.Security.Cryptography.SHA512Managed>|  
|System.Security.Cryptography.SHA512Cng|<xref:System.Security.Cryptography.SHA512Cng>|  
|System.Security.Cryptography.SHA512CryptoServiceProvider|<xref:System.Security.Cryptography.SHA512CryptoServiceProvider>|  
|System.Security.Cryptography.SymmetricAlgorithm|<xref:System.Security.Cryptography.RijndaelManaged>|  
  
   
  
## 例  
 次のコード例では、メンバーを使用して、 <xref:System.Security.Cryptography.CryptoConfig> クラスです。  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.CryptoConfig\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CryptoConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.CryptoConfig" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAlgorithm">
      <MemberSignature Language="C#" Value="public static void AddAlgorithm (Type algorithm, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAlgorithm(class System.Type algorithm, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.Type" />
        <Parameter Name="names" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="algorithm">マップするアルゴリズムです。</param>
        <param name="names">アルゴリズムに割り当てる名前の配列。</param>
        <summary>現在のアプリケーション ドメインに使用するアルゴリズムのマッピングには、一連の名前を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された対応付けは、組み込みのマッピングと、machine.config ファイルにマッピングよりも優先されます。 マッピングは、部分的に信頼されているコードを使用できなくなる信頼された暗号化操作に使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name=" algorithm" /> または <paramref name="names" /> パラメーターは <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="algorithm" /> アセンブリの外部からアクセスできません。  
  
 または  
  
 1 つのエントリで、 <paramref name="names" /> パラメーターが空または <see langword="null" />です。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
    <Member MemberName="AddOID">
      <MemberSignature Language="C#" Value="public static void AddOID (string oid, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddOID(string oid, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oid" Type="System.String" />
        <Parameter Name="names" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="oid">オブジェクト識別子 \(OID\) にマップします。</param>
        <param name="names">OID に割り当てる名前の配列。</param>
        <summary>現在のアプリケーション ドメインに使用されるオブジェクト識別子 \(OID\) のマッピングには、一連の名前を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された対応付けは、組み込みのマッピングと、machine.config ファイルにマッピングよりも優先されます。 マッピングは、部分的に信頼されているコードを使用できなくなる信頼された暗号化操作に使用されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name=" oid" /> または <paramref name="names" /> パラメーターは <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">1 つのエントリで、 <paramref name="names" /> パラメーターが空または <see langword="null" />です。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
    <Member MemberName="AllowOnlyFipsAlgorithms">
      <MemberSignature Language="C#" Value="public static bool AllowOnlyFipsAlgorithms { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AllowOnlyFipsAlgorithms" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ランタイムがのみ連邦情報処理規格 \(FIPS\) 認定アルゴリズムを作成するポリシーを強制するかどうかを示します。</summary>
        <value>
          <see langword="true" /> ポリシーを適用するにはそれ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `false`, 、任意のアルゴリズムを作成することがあります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromName">
      <MemberSignature Language="C#" Value="public static object CreateFromName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateFromName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">インスタンスを作成する暗号オブジェクトの簡易名。</param>
        <summary>指定された暗号オブジェクトの新しいインスタンスを作成します。</summary>
        <returns>指定された暗号オブジェクトの新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスによって認識される単純な名前の一覧は、次を参照してください。 <xref:System.Security.Cryptography.CryptoConfig>します。  
  
   
  
## 例  
 次のコード例では、呼び出し、 <xref:System.Security.Cryptography.CryptoConfig.CreateFromName%2A> 新しい SHA1 プロバイダーを作成します。 このコード例が示されている例の一部は、 <xref:System.Security.Cryptography.CryptoConfig> クラスです。  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig\#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.CryptoConfig\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">説明されているアルゴリズム、 <paramref name="name" /> パラメーターが有効にすると、連邦情報処理規格 \(FIPS\) モードで使用されていたが、FIPS 対応ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromName">
      <MemberSignature Language="C#" Value="public static object CreateFromName (string name, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateFromName(string name, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">インスタンスを作成する暗号オブジェクトの簡易名。</param>
        <param name="args">指定された暗号オブジェクトを作成するために使用する引数。</param>
        <summary>指定された引数で指定された暗号オブジェクトの新しいインスタンスを作成します。</summary>
        <returns>指定された暗号オブジェクトの新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスによって認識される単純な名前の一覧は、次を参照してください。 <xref:System.Security.Cryptography.CryptoConfig>します。  
  
   
  
## 例  
 次のコード例では、呼び出し、 <xref:System.Security.Cryptography.CryptoConfig.CreateFromName%2A> 、新しい RSA プロバイダーにアクセスするインスタンスを初期化するメソッドを `TestContainer` キー コンテナーです。 このコード例が示されている例の一部は、 <xref:System.Security.Cryptography.CryptoConfig> クラスです。  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig\#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.CryptoConfig\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Reflection.TargetInvocationException">説明されているアルゴリズム、 <paramref name="name" /> パラメーターが有効にすると、連邦情報処理規格 \(FIPS\) モードで使用されていたが、FIPS 対応ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeOID">
      <MemberSignature Language="C#" Value="public static byte[] EncodeOID (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] EncodeOID(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">エンコードする oid を指定します。</param>
        <summary>指定されたオブジェクト識別子 \(OID\) をエンコードします。</summary>
        <returns>エンコードされた OID を含むバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を呼び出す、 <xref:System.Security.Cryptography.CryptoConfig.EncodeOID%2A> メソッドを指定したオブジェクトの識別子をエンコードします。 このコード例が示されている例の一部は、 <xref:System.Security.Cryptography.CryptoConfig> クラスです。  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig\#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.CryptoConfig\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="str" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">OID のエンコード中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="MapNameToOID">
      <MemberSignature Language="C#" Value="public static string MapNameToOID (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MapNameToOID(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">OID を取得する対象のアルゴリズムの単純な名前。</param>
        <summary>指定した単純な名前に対応するアルゴリズムのオブジェクト識別子 \(OID\) を取得します。</summary>
        <returns>指定したアルゴリズムの OID です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスによって認識される単純な名前の一覧は、次を参照してください。 <xref:System.Security.Cryptography.CryptoConfig>します。  
  
   
  
## 例  
 次のコード例では、呼び出し、 <xref:System.Security.Cryptography.CryptoConfig.MapNameToOID%2A> 、SHA1 アルゴリズムの名前を文字列からオブジェクト識別子 \(OID\) を取得します。 このコード例が示されている例の一部は、 <xref:System.Security.Cryptography.CryptoConfig> クラスです。  
  
 [!code-cpp[System.Security.Cryptography.CryptoConfig\#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.CryptoConfig\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.CryptoConfig\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.CryptoConfig/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された暗号オブジェクトの新しいインスタンスを作成します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>