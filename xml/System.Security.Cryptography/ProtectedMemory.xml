<Type Name="ProtectedMemory" FullName="System.Security.Cryptography.ProtectedMemory">
  <TypeSignature Language="C#" Value="public sealed class ProtectedMemory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedMemory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedMemory" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>保護やメモリの保護を解除メソッドを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、データ保護 API \(DPAPI\)、Windows XP およびそれ以降のオペレーティング システムへのアクセスを提供します。 これは、サービスは、オペレーティング システムによって提供され、追加のライブラリは不要です。 メモリ内の機密データの暗号化を提供します。  
  
 クラスは、2 つのラッパーのアンマネージ DPAPI の <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> と <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>です。 これら 2 つのメソッドは、暗号化し、メモリ内のデータを復号化に使用できます。  
  
   
  
## 例  
 次の例では、データ保護を使用する方法を示します。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Protect(unsigned int8[] userData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">保護するメモリ内のデータを含むバイト配列。 配列は、16 バイトの倍数である必要があります。</param>
        <param name="scope">メモリ保護のスコープを指定する列挙値の 1 つ。</param>
        <summary>指定されたデータを保護します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して、メモリ内のデータを保護することができます。 メソッドからは、データのコピーは作成されませんが、所定のバイト配列の暗号化に注意してください。`userData` パラメーターは 16 バイトの長さまたは 16 バイトの倍数である必要があります。  
  
 このメソッドのサポートは、Windows XP およびそれ以降のオペレーティング システムで使用できます。  
  
   
  
## 例  
 次のコード例では、データ保護を使用する方法を示します。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="userData" /> 16 バイトの長さ、または 16 バイトの倍数である必要があります。</exception>
        <exception cref="T:System.NotSupportedException">オペレーティング システムは、このメソッドをサポートしていません。 このメソッドは、Windows 2000 またはそれ以降のオペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userData " /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unprotect(unsigned int8[] encryptedData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">暗号化を解除するためのメモリ内のバイト配列。</param>
        <param name="scope">メモリ保護のスコープを指定する列挙値の 1 つ。</param>
        <summary>使用して保護されているメモリ内のデータの保護を解除、 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して暗号化されたメモリ内のデータを復号化に使用できます、 [Unprotect メソッド \(Byte\<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> メソッドです。  
  
 このメソッドのサポートは、Windows XP およびそれ以降のオペレーティング システムで使用できます。  
  
   
  
## 例  
 次の例では、データ保護を使用する方法を示します。  
  
 [!code-cpp[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">オペレーティング システムは、このメソッドをサポートしていません。 このメソッドは、Windows 2000 またはそれ以降のオペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData " /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <paramref name="encryptedData " />空です。  
  
 または  
  
 この呼び出しは実装されていません。  
  
 または  
  
 NTSTATUS には、エラーが含まれています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>