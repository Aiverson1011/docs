<Type Name="MaskGenerationMethod" FullName="System.Security.Cryptography.MaskGenerationMethod">
  <TypeSignature Language="C#" Value="public abstract class MaskGenerationMethod" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MaskGenerationMethod extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MaskGenerationMethod" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>すべてのマスク ジェネレーター アルゴリズムの派生元となる抽象クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生クラスの <xref:System.Security.Cryptography.MaskGenerationMethod> キー交換アルゴリズムなど OAEP Optimal Asymmetric Encryption Padding \(\) で使用されるマスクを計算します。  
  
 このクラスは、マスクの生成にのみキー交換アルゴリズムの実装によって使用されます。 このクラスは、アプリケーション コードによって直接は使用されません。  
  
   
  
## 例  
 派生する次のコード例には、 <xref:System.Security.Cryptography.MaskGenerationMethod> クラスです。  
  
 [!code-cpp[System.Security.Cryptography.MaskGenerationMethod\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/CPP/maskgenerator.cpp#1)]
 [!code-csharp[System.Security.Cryptography.MaskGenerationMethod\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/CS/maskgenerator.cs#1)]
 [!code-vb[System.Security.Cryptography.MaskGenerationMethod\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.MaskGenerationMethod/VB/maskgenerator.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MaskGenerationMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MaskGenerationMethod.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Security.Cryptography.MaskGenerationMethod" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateMask">
      <MemberSignature Language="C#" Value="public abstract byte[] GenerateMask (byte[] rgbSeed, int cbReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GenerateMask(unsigned int8[] rgbSeed, int32 cbReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MaskGenerationMethod.GenerateMask(System.Byte[],System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbSeed" Type="System.Byte[]" />
        <Parameter Name="cbReturn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbSeed">マスクの計算に使用するランダム シード。</param>
        <param name="cbReturn">生成されるマスクの長さ \(バイト単位\)。</param>
        <summary>派生クラスでオーバーライドされるときに、指定したランダム シードを使用して、指定した長さのマスクを生成します。</summary>
        <returns>長さが <paramref name="cbReturn" /> パラメーターと等しい、ランダムに生成されるマスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、オーバーライド、 [GenerateMask メソッド \(Byte\<xref:System.Security.Cryptography.MaskGenerationMethod.GenerateMask%2A> を作成し、指定したシードを使用してマスクを返します。 このコード例が示されている例の一部は、 [GenerateMask メソッド \(Byte\<xref:System.Security.Cryptography.MaskGenerationMethod> クラスです。  
  
 System.Security.Cryptography.MaskGenerationMethod\#3  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>