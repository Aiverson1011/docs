<Type Name="CipherMode" FullName="System.Security.Cryptography.CipherMode">
  <TypeSignature Language="C#" Value="public enum CipherMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CipherMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CipherMode" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>暗号化に使用するブロック暗号モードを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ブロック暗号アルゴリズムは、一度に 1 バイトではなく、ブロック単位でデータを暗号化します。 最も一般的なブロック サイズでは、8 バイトです。 各ブロックが処理される頻度の高いために、ブロック暗号は、ストリーム暗号よりも高いレベルのセキュリティを提供します。 ただし、ブロック暗号アルゴリズムは、実行ストリーム暗号よりパフォーマンスが低下する傾向があります。  
  
 ブロック暗号では、各ブロックに対して同じ暗号化アルゴリズムを使用します。 このため、プレーン テキストのブロックは、同じキーとアルゴリズムで暗号化されている場合は、同じ暗号文を常に返します。 この動作は、暗号を解読に使用できる、ため前のブロック暗号化からのフィードバックに基づいて、暗号化プロセスを変更できる暗号モードが導入されました。 結果として得られる暗号化では、単純なブロック暗号化よりも高いレベルのセキュリティを提供します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CBC">
      <MemberSignature Language="C#" Value="CBC" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CBC = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CBC" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>暗号ブロック チェーン \(<see langword="CBC" />\) モードにフィードバックが導入されています。 各平文ブロックを暗号化すると、前にビットごとの排他的 or 演算によって、前のブロックの暗号化テキストと組み合わされます。 これにより、プレーン テキストに多くの同じブロックが含まれている場合でもが各暗号化されることを別の暗号文ブロックされます。 初期化ベクトルは、ブロックを暗号化する前に、ビットごとの排他的 or 演算によって最初の平文ブロックと組み合わされます。 暗号文ブロックの 1 ビットを破損すると、対応するプレーン テキスト ブロックも破損します。 さらに、元の破損ビットと同じ位置に、後続のブロックで少しは破損します。</summary>
      </Docs>
    </Member>
    <Member MemberName="CFB">
      <MemberSignature Language="C#" Value="CFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CFB = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>暗号フィードバック \(<see langword="CFB" />\) モードは、暗号文のブロック全体を一度に処理する代わりに、プレーン テキストの少しずつを処理します。 このモードでは、複数のセクションにシフト レジスタを 1 つのブロックの長さは、分割を使用します。 たとえば、ブロック サイズが 1 バイトが、同時に処理されたの 8 バイトである場合は、シフト レジスタが 8 つのセクションに分かれています。 少し暗号テキストが破損すると、1 つのテキスト形式のビットが破損し、シフト レジスタが破損しています。 これは、結果、不良ビットをシフト レジスタから移動するまでは変形する次のいくつかのプレーン テキスト単位。 既定のフィードバック サイズはアルゴリズムによって異なることができますは、通常の 8 ビットまたはブロック サイズのビット数のいずれか。 フィードバックのビット数を変更するを使用して、 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> プロパティです。 CFB をサポートするアルゴリズムでは、このプロパティを使用して、フィードバックを設定します。</summary>
      </Docs>
    </Member>
    <Member MemberName="CTS">
      <MemberSignature Language="C#" Value="CTS" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode CTS = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.CTS" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>暗号テキストを盗む \(<see langword="CTS" />\) モードがプレーン テキストの任意の長さを処理し、生成される暗号、長さにプレーン テキストの長さが一致するテキスト。 このモードはのように動作、 <see langword="CBC" /> すべてのモードはプレーン テキストの最後の 2 つのブロックです。</summary>
      </Docs>
    </Member>
    <Member MemberName="ECB">
      <MemberSignature Language="C#" Value="ECB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode ECB = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.ECB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Electronic Codebook \(<see langword="ECB" />\) モードで各ブロックは個別に暗号化します。 任意のプレーン テキスト ブロック同一のと同じメッセージ内にある、または別の同じキーで暗号化されたメッセージであるは同じ暗号文ブロックに変換されます。**重要**: このモードは複数のセキュリティ攻撃のドアを開くためにはお勧めしません。 暗号化されるプレーン テキストに繰り返しが多いが含まれている場合は、一度に 1 つのブロックを分割しなければ暗号化テキストの不可能です。 ブロックの分析を使用して、暗号化キーを確認することもできます。 また、active 敵対者は置換し、気付かブロックに保存し、その他のポイントを検出せずに、ストリームに挿入ができるように個別のブロックを交換できます。</summary>
      </Docs>
    </Member>
    <Member MemberName="OFB">
      <MemberSignature Language="C#" Value="OFB" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Security.Cryptography.CipherMode OFB = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CipherMode.OFB" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>出力からのフィードバック \(<see langword="OFB" />\) モードに暗号化テキスト ブロック全体を一度に処理する代わりにプレーン テキストの少しずつ処理します。 このモードはのような <see langword="CFB" />; は、2 つのモードの違いは、shift キーを登録する方法のみを入力します。 少し暗号テキストが破損すると、プレーン テキストの対応するビットが破損します。 ただし、暗号化テキストからビットを余分または不足している場合は、そのプレーン テキストは上でその時点から変形します。</summary>
      </Docs>
    </Member>
  </Members>
</Type>