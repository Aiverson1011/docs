<Type Name="ServiceProviders" FullName="System.Windows.Markup.ServiceProviders">
  <TypeSignature Language="C#" Value="public class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProviders extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ServiceProviders" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>実装を提供、 <see cref="T:System.IServiceProvider" /> 追加サービスを有効にするメソッドを持つインターフェイスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、コンテンツをシリアル化するときに使用するためのユーティリティ クラスです。 クラスは、基本的に、サービスを実装するサービス型を取得するには、キーを格納するためのディクショナリ専用 <xref:System.IServiceProvider> 同じディクショナリから後で取得します。 ディクショナリを使用するには、繰り返し、同じサービスの照会が回避できます。 このクラスは、基本クラスの <xref:System.Windows.Markup.XamlDesignerSerializationManager>, 、これは、サービスを利用 `ShouldSerialize` WPF の他の部分メソッドの実装です。  
  
 .NET Framework XAML サービスの全般的なシナリオのものではありません、このクラスを使用するには、WPF アセンブリの参照が必要です。 ここでのシナリオなどでは、シリアル化中にサービス中心の機能の WPF の内部実装については処理するときに、 `ShouldSerialize` 特定の種類の実装です。 このシナリオで実際的なクラスが派生クラス <xref:System.Windows.Markup.XamlDesignerSerializationManager>します。  
  
<a name="xamlTextUsage_ServiceProviders"></a>   
## XAML テキストの使用方法  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.ServiceProviders" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType">新しいサービスのサービスの型。</param>
        <param name="service">サービス実装クラス。</param>
        <summary>サービスを一覧に追加します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serviceType" /> または <paramref name="service" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">ディクショナリに既に存在しているサービスを追加しようとしています。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">取得するサービス オブジェクトの型。</param>
        <summary>指定した型のサービス オブジェクトを取得します。</summary>
        <returns>型のサービス実装 <paramref name="serviceType" />します。 あります <see langword="null" /> かどうかは、格納されている型のサービスはありません <paramref name="serviceType" />します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>