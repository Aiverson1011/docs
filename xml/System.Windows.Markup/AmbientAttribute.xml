<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>プロパティまたは型をアンビエントとして扱うように指定しています。 アンビエントの概念は XAML プロセッサがメンバーの型の所有者を確認する方法と関連します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 アンビエント プロパティは、値は要求の即時の XAML ノードが作成されている設定の目的で一般的な型メンバーの参照が中断され、オブジェクト グラフを作成するときに、パーサーのコンテキストで使用するプロパティです。 アンビエントの概念を次の 2 つの主な方法があります。  
  
-   同じオブジェクトの他のいくつかのプロパティは、影響し、そのオブジェクトとプロパティ検索の動作を修飾します。  
  
-   プロパティは大規模な遅延メカニズムを表し、現在のオブジェクトに含まれるすべてのオブジェクトにメンバーの値を検索するためのアンビエント機能を拡張します。  
  
 この属性は、アンビエント プロパティ検索の動作を有効にするコンテナーを必要とする特定のプロパティに適用できるか、常にそのプロパティの値の型のアンビエント プロパティの動作を有効にするクラスに適用できます。  
  
 <xref:System.Windows.Markup.AmbientAttribute> アンビエントとして XAML 添付可能なプロパティに属性を適用をサポートするために、CLR メソッドにも適用できます。 これは、CLR 実装、XAML で接続されているプロパティは実装されている\/表現でアクセサー パターンとしてリフレクションのため必要な可能性のある `get` と `set` メソッドです。 属性に実際の CLR プロパティが存在しないの使用量を制限するため <xref:System.AttributeTargets> に `Property` は有効にしていないアンビエントとしてアタッチ可能なメンバーを指定します。 レポートを作成するアンビエントとしてアタッチ可能なメンバー、属性、 `get` アクセサー。 アタッチ可能なメンバーのメソッドを特にサポートしていない属性メソッドには必ずください。  
  
 .NET Framework の以前のバージョンでは、このクラスは WPF 固有の WindowsBase アセンブリに存在しています。[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 、<xref:System.Windows.Markup.AmbientAttribute> System.Xaml アセンブリ内します。 詳細については、「[Types Migrated From WPF to System.Xaml](http://msdn.microsoft.com/ja-jp/d79dabf5-a2ec-4e8d-a37a-67c4ba8a2b91)」を参照してください。  
  
 アンビエント型 \(型 where <xref:System.Windows.Markup.AmbientAttribute> 型レベルで適用されます\) プロパティの型する必要がある解決順不同の特定の XAML の処理状況のために使用できます。  
  
## オブジェクト ライターのシナリオ  
 XAML オブジェクト ライターを定義して、プロパティ、メソッドまたは型が発生した場合、 <xref:System.Windows.Markup.AmbientAttribute> が適用すると、通常必要がありますサービスにアクセスする、オブジェクトを作成するために必要な目的のアンビエント プロパティ検索の動作を決定します。 詳細については、「<xref:System.Xaml.IAmbientProvider>」を参照してください。  
  
## 値コンバーター  
 型コンバーターまたはマークアップ拡張機能は、文字列名または修飾なしで使用してメンバーまたは型を指定するプロパティなどの間接的な型マッピングを表すプロパティを処理するために、アンビエント情報を把握する必要があります。 このシナリオで <xref:System.Windows.Markup.AmbientAttribute> 値コンバーターのコードのロジックに直接使用するものではありません。 値コンバーターが XAML ライターの処理動作が合格するリダイレクトに依存する代わりに、 <xref:System.Xaml.IAmbientProvider> 、値コンバーターのメソッドが呼び出されたときにそのサービスのコンテキストにします。  
  
## AmbientAttribute の WPF のシナリオ  
  
-   プロパティ、 <xref:System.Windows.Style> \(<xref:System.Windows.Style.TargetType%2A>\) のプロパティ名のバックアップの参照を検索するために必要なために必要なプロパティ名の参照を修飾 <xref:System.Windows.Setter.Property%2A?displayProperty=fullName> 値。  
  
-   内ですべてのコンテンツ、 `Resources` プロパティ \(の項目、 <xref:System.Windows.ResourceDictionary>\) だけでなく、テンプレートのコンテンツを値として他のピアにアクセスすることにする必要があります。 全体を宣言する `Resources` アンビエント プロパティは WPF XAML パーサーでこれをできるようにするロジックを呼び出します。  
  
 参照してください <xref:System.Windows.ResourceDictionary> 設定用のシナリオ例については <xref:System.Windows.Markup.AmbientAttribute> 型レベルでします。  
  
<a name="xamlTextUsage_AmbientAttribute"></a>   
## XAML テキストの使用方法  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.AmbientAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>