<Type Name="XmlLanguageConverter" FullName="System.Windows.Markup.XmlLanguageConverter">
  <TypeSignature Language="C#" Value="public class XmlLanguageConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLanguageConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlLanguageConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>型変換を提供、 <see cref="T:System.Windows.Markup.XmlLanguage" /> クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンバーターが、主に存在するように既存 `xml:lang` 設定 XML ファイルには、使用する属性の文字列の解析に干渉しない <xref:System.Windows.Markup.XmlLanguage> それを基になる型とします。  
  
<a name="xamlTextUsage_XmlLanguageConverter"></a>   
## XAML テキストの使用方法  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.XmlLanguage" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlLanguageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguageConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.XmlLanguageConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Markup.XmlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="sourceType">変換する型を表す型。</param>
        <summary>1 つの型のオブジェクトをこのコンバーターが変換できるかどうかを返す、 <see cref="T:System.Windows.Markup.XmlLanguage" /> コンバーターでサポートされる型。</summary>
        <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは `true` の `sourceType` の <xref:System.String>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XmlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="destinationType">変換後の型。</param>
        <summary>このコンバーターが、オブジェクトを指定した型に変換できるかどうかを返します。</summary>
        <returns>コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが戻る `true` の `destinationType` の <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> または `destinationType` の <xref:System.String>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XmlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="cultureInfo">
          <see cref="T:System.Globalization.CultureInfo" /> 、現在のカルチャとして使用します。</param>
        <param name="source">変換する文字列。</param>
        <summary>指定した文字列値に変換、 <see cref="T:System.Windows.Markup.XmlLanguage" /> 型コンバーターでサポートされています。</summary>
        <returns>変換後の値を表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `source` 値は文字列である必要があります、それ以外の場合、例外がスローされます。 変換が成功した場合、戻り値は、 <xref:System.Windows.Markup.XmlLanguage>です。  
  
 内部的には、このメソッドを呼び出す <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A?displayProperty=fullName>します。 参照してください <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A> の追加の例外情報。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">変換を実行できませんでした。</exception>
        <altmember cref="T:System.Windows.Markup.XmlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" />。</param>
        <param name="cultureInfo">
          <see cref="T:System.Globalization.CultureInfo" /> 、現在のカルチャとして使用します。</param>
        <param name="value">変換対象のオブジェクト。 これは型を指定する予定 <see cref="T:System.Windows.Markup.XmlLanguage" />します。</param>
        <param name="destinationType">変換する型を表す型。</param>
        <summary>指定した変換 <see cref="T:System.Windows.Markup.XmlLanguage" /> 指定した型にします。</summary>
        <returns>変換後の値を表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `destinationType` <xref:System.String>, 、このメソッドが戻る、 <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A> 指定の値 <xref:System.Windows.Markup.XmlLanguage>です。 `destinationType` <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> このメソッドが戻る、 <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> インスタンスをシリアル化に適しています。  その他の `destinationType` 入力が例外をスローします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">変換を実行できませんでした。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Windows.Markup.XmlLanguage" />
      </Docs>
    </Member>
  </Members>
</Type>