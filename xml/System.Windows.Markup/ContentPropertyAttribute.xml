<Type Name="ContentPropertyAttribute" FullName="System.Windows.Markup.ContentPropertyAttribute">
  <TypeSignature Language="C#" Value="public sealed class ContentPropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContentPropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ContentPropertyAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>型のどのプロパティが XAML コンテンツ プロパティであるかを示します。 この情報を使用して、XAML プロセッサは属性付き型の XAML 表現の XAML 子要素を処理します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合の関連付けられているプロパティ、 <xref:System.Windows.Markup.ContentPropertyAttribute> の種類はありません `string` または `object`, 、XAML プロセッサは値の変換方法を特定しようとしています。 最初のチェックでは、XAML 言語プリミティブのまたは XAML ライターの特定の実装で有効になっている特定のネイティブ変換のネイティブな型変換のためです。 次の手順では、型コンバーターを探します。 基づく実装では、.NET、型コンバーターが識別される <xref:System.ComponentModel.TypeConverterAttribute> のいずれかのメンバー レベルまたは型レベル定義を適用します。 値の変換を識別できない場合は、XAML オブジェクト ライターは例外をスローします。  
  
 受け入れるために複数の単一のオブジェクト要素のコンテンツとして XAML コンテンツ プロパティの型があります、コレクション型としてサポート可能です。  
  
 ため、 `Inherited=true` 属性の値の宣言、 <xref:System.Windows.Markup.ContentPropertyAttribute> 通常コンテンツ プロパティの指定をすべての派生クラスに適用します。 空の適用 <xref:System.Windows.Markup.ContentPropertyAttribute> により、派生クラスを基本クラスで content プロパティ属性の宣言を削除する \(およびクラスにコンテンツ プロパティがないことに注意してください\)。 別の名前を適用する <xref:System.Windows.Markup.ContentPropertyAttribute> 継承された置換 <xref:System.Windows.Markup.ContentPropertyAttribute> を新しいものです。  
  
 .NET Framework の以前のバージョンで、このクラスは WPF 固有の WindowsBase アセンブリに存在していたし、並列実装も含まれて [!INCLUDE[vsindigo](~/includes/vsindigo-md.md)]します。[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 、<xref:System.Windows.Markup.ContentPropertyAttribute> System.Xaml アセンブリ内します。 詳細については、「[Types Migrated From WPF to System.Xaml](http://msdn.microsoft.com/ja-jp/d79dabf5-a2ec-4e8d-a37a-67c4ba8a2b91)」を参照してください。  
  
## WPF の使用上の注意  
 クラスの例 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] を使用して、 <xref:System.Windows.Markup.ContentPropertyAttribute> は <xref:System.Windows.Controls.ContentControl>, である、 <xref:System.Windows.Controls.Button> クラスから継承します。  プロパティ <xref:System.Windows.Controls.ContentControl.Content%2A> 上、 <xref:System.Windows.Controls.ContentControl> によってコンテンツのプロパティが設定、 <xref:System.Windows.Markup.ContentPropertyAttribute>です。  場合、 <xref:System.Windows.Controls.Button> XAML でインスタンス化 <xref:System.Windows.Controls.ContentControl.Content%2A> の <xref:System.Windows.Controls.Button> はボタンの開始と終了タグ間にある要素に設定されます。  
  
<a name="xamlTextUsage_ContentPropertyAttribute"></a>   
## XAML テキストの使用方法  
   
  
## 例  
 次の例は、という名前のクラスを作成 `Film` を持つ、 <xref:System.Windows.Markup.ContentPropertyAttribute> を適用します。  という名前のプロパティ `Title` content プロパティとして示されます。  
  
 [!code-csharp[MarkupSnippets\#MarkupContentPropertyAttribute](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml.cs#markupcontentpropertyattribute)]
 [!code-vb[MarkupSnippets\#MarkupContentPropertyAttribute](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MarkupSnippets/visualbasic/window1.xaml.vb#markupcontentpropertyattribute)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Because of the **languageKeyword tag is not supported!!!!**  
 declaration of the attribute, a value for a <xref:System.Windows.Markup.ContentPropertyAttribute> normally applies a content property designation to all derived classes as well. Using this signature, or applying an empty <xref:System.Windows.Markup.ContentPropertyAttribute>, enables a derived class to remove a declaration of a content property attribute by a base class \(and note that the class has no content property\).  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentPropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ContentPropertyAttribute.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">コンテンツ プロパティであるプロパティのプロパティ名。</param>
        <summary>指定された名前を使用して、<see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Assuming CLR backing, the provided **parameterReference tag is not supported!!!!**  
 should match the <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName> of the relevant property in the CLR type system.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.ContentPropertyAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツ プロパティであるプロパティの名前を取得します。</summary>
        <value>コンテンツ プロパティであるプロパティの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Markup.ContentPropertyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>