<Type Name="XmlLanguage" FullName="System.Windows.Markup.XmlLanguage">
  <TypeSignature Language="C#" Value="public class XmlLanguage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlLanguage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XmlLanguage" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>XAML マークアップで使用するための言語タグを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 言語タグの可能性がありますか、登録されていることがない可能性があります <xref:System.Globalization.CultureInfo> XAML が解釈されるシステムに存在します。  
  
 このクラスを使用して表された値を処理するために便利 `xml:lang` XML にします。  
  
 言語タグは、2 文字形式をまたは言語とロケールをハイフンでつながれた形式で指定できます。 See [RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454).  
  
 XML 仕様が可能ですが、空の文字列の `xml:lang`, する RFC 3066; では許可されませんが、そのため、 <xref:System.Windows.Markup.XmlLanguage> ことが許可される入力""\(空の属性の文字列\)。 既定で構築される <xref:System.Windows.Markup.XmlLanguage> で構築されるように動作""\(空の文字列\)。  
  
<a name="xamlAttributeUsage_XmlLanguage"></a>   
## XAML 属性の使用方法  
  
```  
<object property="prefix"/>  
- or -  
<object property="prefix-subcode"/>  
```  
  
<a name="xamlValues_XmlLanguage"></a>   
## XAML 値  
 *prefix*  
 ISO 639\-1 言語のプレフィックス値を使用して言語プレフィックスです。 たとえば、"en"や"zh"などです。 大文字の値が受け付けられ、小文字に変換されます。 空の属性もあります""です。  
  
 *サブコード*  
 指定した場合は、1 つのハイフンで前する必要があります。 次に、サブコード RFC 3066 で定義されています。 最も一般的な使用状況とは適切にマップすることがよく発生する 1 つ、 <xref:System.Globalization.CultureInfo>, など、国または地域の指定は、"\-私たち"または"\-hk"です。 大文字の値が受け付けられ、小文字に変換されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Markup.XmlLanguage Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>静的な取得 <see cref="T:System.Windows.Markup.XmlLanguage" /> インスタンスによって作成された、 <see cref="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" /> 、空の属性の文字列としての言語タグを持つ。</summary>
        <value>言語が空のタグ バージョン <see cref="T:System.Windows.Markup.XmlLanguage" />, 、比較操作で使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この値が有効では、 <xref:System.Windows.Markup.XmlLanguage> に対応する <xref:System.String.Empty?displayProperty=fullName>, が <xref:System.Windows.Markup.XmlLanguage.GetEquivalentCulture%2A> 結果は <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEquivalentCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetEquivalentCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetEquivalentCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetEquivalentCulture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>適切な対応を返す <see cref="T:System.Globalization.CultureInfo" /> この <see cref="T:System.Windows.Markup.XmlLanguage" />, 、場合にのみ、このような <see cref="T:System.Globalization.CultureInfo" /> 用に登録されて、 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> の値 <see cref="T:System.Windows.Markup.XmlLanguage" /></summary>
        <returns>A <see cref="T:System.Globalization.CultureInfo" /> を引数としてその型を受け取りローカリゼーション グローバリゼーション API の呼び出しに使用することができます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合同等はありません <xref:System.Globalization.CultureInfo> 、生成された、このメソッドは例外を発生させます。 例外を処理しない場合に呼び出す <xref:System.Windows.Markup.XmlLanguage.GetSpecificCulture%2A> 代わりにします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">登録なし <see cref="T:System.Globalization.CultureInfo" /> 提供されているため <see cref="T:System.Windows.Markup.XmlLanguage" /> が存在するへの呼び出しによって決定される <see cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />します。</exception>
        <altmember cref="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguage">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.XmlLanguage GetLanguage(string ietfLanguageTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ietfLanguageTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ietfLanguageTag">RFC 3066 言語識別文字列、または空の文字列の場合。</param>
        <summary>返します。、 <see cref="T:System.Windows.Markup.XmlLanguage" /> RFC 3066 あたり言語を表す文字列に基づくインスタンス。</summary>
        <returns>新しい <see cref="T:System.Windows.Markup.XmlLanguage" /> として指定された文字列とその <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、事実上、コンス トラクターです。  
  
 言語識別文字列が空であるかに従う必要があります [RFC 3066](http://go.microsoft.com/fwlink/?LinkId=132454) 規則。  
  
-   最初のサブタグがのみ成る [!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)] 文字です。  
  
-   構成して追加のサブタグ [!INCLUDE[TLA#tla_ascii](~/includes/tlasharptla-ascii-md.md)] 文字または数字。  
  
-   サブタグは、1 つのハイフンで区切られます。  
  
-   サブタグは、すべては、1 ~ 8 文字にする必要があります。  
  
-   先頭または末尾にハイフンが許可されていません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ietfLanguageTag" /> パラメーターを null にすることはできません。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="ietfLanguageTag" /> パラメーターは、空でないをでしたが、RFC 3066 で指定されている構文に準拠していません。 「解説」を参照してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpecificCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo GetSpecificCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Globalization.CultureInfo GetSpecificCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.GetSpecificCulture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返す、密接に関連する以外に依存しない <see cref="T:System.Globalization.CultureInfo" /> この <see cref="T:System.Windows.Markup.XmlLanguage" />します。</summary>
        <returns>A <see cref="T:System.Globalization.CultureInfo" /> ローカリゼーション グローバリゼーションに使用する API を引数としてその型を受け取る呼び出しです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この場合 <xref:System.Windows.Markup.XmlLanguage> に等しい <xref:System.Windows.Markup.XmlLanguage.Empty%2A?displayProperty=fullName> このメソッドは、 <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>です。  
  
 このメソッドは、登録されている検索 <xref:System.Globalization.CultureInfo> これの最も長い可能なプレフィックスに一致する <xref:System.Windows.Markup.XmlLanguage>です。 登録されているかどうか <xref:System.Globalization.CultureInfo> がニュートラル \(<xref:System.Globalization.CultureInfo.IsNeutralCulture%2A> は `true`\)、このメソッドはへの呼び出しに依存し、 <xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A> 、依存しないからマップする <xref:System.Globalization.CultureInfo> 、特定のアクセラレータをします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連ニュートラル以外 <see cref="T:System.Globalization.CultureInfo" /> が現在の登録されている <see cref="T:System.Windows.Markup.XmlLanguage" /> <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IetfLanguageTag">
      <MemberSignature Language="C#" Value="public string IetfLanguageTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IetfLanguageTag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>言語タグの文字列表現を取得します。</summary>
        <value>言語タグの文字列形式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 提供されているため、このプロパティは、最初に指定された文字列の正規化されたバージョンを返す可能性があります <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>します。  
  
 このプロパティを返すことも <xref:System.String.Empty> に空の文字列が提供されている場合 <xref:System.Windows.Markup.XmlLanguage.GetLanguage%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XmlLanguage.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.String" /> を表す <see cref="T:System.Windows.Markup.XmlLanguage" /> を返します</summary>
        <returns>現在の <see cref="T:System.Windows.Markup.XmlLanguage" /> を表す <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 返されます。、 <xref:System.Windows.Markup.XmlLanguage.IetfLanguageTag%2A> 、現在の <xref:System.Windows.Markup.XmlLanguage>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>