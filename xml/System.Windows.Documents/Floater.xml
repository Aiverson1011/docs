<Type Name="Floater" FullName="System.Windows.Documents.Floater">
  <TypeSignature Language="C#" Value="public class Floater : System.Windows.Documents.AnchoredBlock" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Floater extends System.Windows.Documents.AnchoredBlock" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Floater" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.AnchoredBlock</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>浮遊要素のホストに使用するインライン レベルのフロー コンテンツ要素を提供します。 A *浮遊要素* イメージと並列でメイン コンテンツのフローにその他のコンテンツを表示、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.Figure> または <xref:System.Windows.Documents.Floater> 要素が強調表示や、イメージやメイン コンテンツのフロー内の他のコンテンツをサポートするホストへのコンテンツの一部を強調したりに使用する多くの場合、または関連する提供情報などのコンテンツを疎を挿入します。 浮遊要素には、ブロック クラスを継承するオブジェクトを含めることができます。 詳細については、次を参照してください [TextElement コンテンツ モデルの概要](http://msdn.microsoft.com/ja-jp/d0a7791c-b090-438c-812f-b9d009d83ee9)。  
  
 <xref:System.Windows.Documents.Figure> <xref:System.Windows.Documents.Floater> いくつかの方法が異なるし、さまざまなシナリオのために使用します。  
  
 **図:**  
  
-   配置することができます。 ページ、コンテンツ、列、または段落の基準としたドッキングするには、水平および垂直方向のアンカーを設定することができます。 使用することも、 <xref:System.Windows.Documents.Figure.HorizontalOffset%2A> と <xref:System.Windows.Documents.Figure.VerticalOffset%2A> プロパティを任意のオフセットを指定します。  
  
-   複数の列のサイズを変更できる: 設定することができます <xref:System.Windows.Documents.Figure> 高さと幅のページ、コンテンツまたは列の高さまたは幅の倍数にします。 ページなどのコンテンツは、1 より大きい倍数は使用できないことに注意してください。 幅を設定するなど、 <xref:System.Windows.Documents.Figure> 「0.5 ページ」または"0.25 content"または「2 段組み」にします。 絶対ピクセル値、高さと幅を設定することもできます。  
  
-   改ページはありません: 場合内のコンテンツ、 <xref:System.Windows.Documents.Figure> 内に一致しない、 <xref:System.Windows.Documents.Figure>, 、あらゆるコンテンツに合わせてがレンダリングされますおよび残りのコンテンツが失われます。  
  
 **浮遊要素:**  
  
-   配置することはできませんし、領域が利用できることの場所に描画されます。 オフセットまたはアンカーを設定することはできません、 <xref:System.Windows.Documents.Floater>です。  
  
-   複数の列にサイズを変更できません。 既定では、 <xref:System.Windows.Documents.Floater> 1 つの列のサイズ。<xref:System.Windows.Documents.Floater.Width%2A> 1 つの列のサイズはこの値が 1 つの列の幅は無視され、浮遊要素より大きい場合は、絶対ピクセル値を設定できるプロパティです。 正しいピクセル幅を設定してより少ない 1 つの列をサイズできますが、サイズ変更ではない列の相対のため"はできないのため、有効な式 <xref:System.Windows.Documents.Floater> の幅。<xref:System.Windows.Documents.Floater> height プロパティにはないをそれが高さを設定することはできません、it の高さは、内容によって異なります。  
  
-   <xref:System.Windows.Documents.Floater> ページ番号を付けます: 浮遊要素を中断して、次回のコラムでは、次のページなどの改ページも、指定した幅でそのコンテンツが 1 つ以上の列の高さに拡張される場合。  
  
 <xref:System.Windows.Documents.Figure> サイズを制御するスタンドアロンのコンテンツを挿入する適切な場所し配置、およびコンテンツは、指定したサイズに収まるかどうかを確信します。<xref:System.Windows.Documents.Floater> フローのメイン ページ コンテンツに似ていますが、それらを分離する複数の自由なコンテンツを挿入する適切な場所です。  
  
   
  
## 例  
 次の例、 <xref:System.Windows.Documents.FlowDocument> 両方を含む <xref:System.Windows.Documents.Floater> と <xref:System.Windows.Documents.Figure> 要素。  
  
 [!code-xml[FloaterFigureSnippets\#\_FloaterFigureXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FloaterFigureSnippets/CSharp/Window1.xaml#_floaterfigurexaml)]  
  
 次の図は、この例をレンダリングする方法を示しています。  
  
 69046164-4e27-4ed3-bd2e-1679d1a01b7e  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Floater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Floater.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.Floater" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Floater (System.Windows.Documents.Block childBlock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Block childBlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childBlock" Type="System.Windows.Documents.Block" />
      </Parameters>
      <Docs>
        <param name="childBlock">新しいの初期内容 <see cref="T:System.Windows.Documents.Floater" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Documents.Floater" /> 、指定したクラス <see cref="T:System.Windows.Documents.Block" /> オブジェクトとしての初期コンテンツ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、このコンス トラクターを使用する方法を示します。  
  
 [!code-csharp[FloaterFigureSnippets\#\_FloaterConst1](~/samples/snippets/csharp/VS_Snippets_Wpf/FloaterFigureSnippets/CSharp/Window1.xaml.cs#_floaterconst1)]
 [!code-vb[FloaterFigureSnippets\#\_FloaterConst1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FloaterFigureSnippets/visualbasic/window1.xaml.vb#_floaterconst1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Floater (System.Windows.Documents.Block childBlock, System.Windows.Documents.TextPointer insertionPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Block childBlock, class System.Windows.Documents.TextPointer insertionPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="childBlock" Type="System.Windows.Documents.Block" />
        <Parameter Name="insertionPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="childBlock">新しいの初期内容 <see cref="T:System.Windows.Documents.Floater" />します。 このパラメーターを指定できます <see langword="null" />, その場合はない <see cref="T:System.Windows.Documents.Block" /> が挿入されます。</param>
        <param name="insertionPosition">挿入する位置、 <see cref="T:System.Windows.Documents.Floater" /> 要素が作成された後です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Documents.Floater" /> 、指定したクラス <see cref="T:System.Windows.Documents.Block" /> オブジェクトの初期コンテンツとして、 <see cref="T:System.Windows.Documents.TextPointer" /> 新しいの挿入位置を指定する <see cref="T:System.Windows.Documents.Floater" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、このコンス トラクターを使用する方法を示します。  
  
 [!code-csharp[FloaterFigureSnippets\#\_FloaterConst2](~/samples/snippets/csharp/VS_Snippets_Wpf/FloaterFigureSnippets/CSharp/Window1.xaml.cs#_floaterconst2)]
 [!code-vb[FloaterFigureSnippets\#\_FloaterConst2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FloaterFigureSnippets/visualbasic/window1.xaml.vb#_floaterconst2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.HorizontalAlignment HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.HorizontalAlignment HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Floater.HorizontalAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の横方向の配置を示す値、 <see cref="T:System.Windows.Documents.Floater" /> オブジェクトです。</summary>
        <value>メンバー、 <see cref="T:System.Windows.HorizontalAlignment" /> の水平方向の配置を指定する列挙体、 <see cref="T:System.Windows.Documents.Floater" />です。 既定値は、<see cref="F:System.Windows.HorizontalAlignment.Stretch" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_HorizontalAlignment"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Floater.HorizontalAlignmentProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>|  
  
   
  
## 例  
 このプロパティを設定する方法を次の例に示します。  
  
 [!code-xml[FloaterFigureSnippets\#\_FloaterPropsXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FloaterFigureSnippets/CSharp/Window1.xaml#_floaterpropsxaml)]  
  
 [!code-csharp[FloaterFigureSnippets\#\_FloaterProps](~/samples/snippets/csharp/VS_Snippets_Wpf/FloaterFigureSnippets/CSharp/Window1.xaml.cs#_floaterprops)]
 [!code-vb[FloaterFigureSnippets\#\_FloaterProps](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FloaterFigureSnippets/visualbasic/window1.xaml.vb#_floaterprops)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Floater.HorizontalAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Floater.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.Floater" /> オブジェクトの幅を示す値を取得または設定します。</summary>
        <value>デバイスに依存しないピクセルでの <see cref="T:System.Windows.Documents.Floater" /> の幅。 既定値は <see cref="F:System.Double.NaN" /> \(<c>Auto</c> の属性値に相当する\) です。これは、行の高さが自動的に決まることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_Width"></a>   
## XAML 属性の使用方法  
  
```  
<object Width="double"/>  
- or -  
<object Width="qualifiedDouble"/>  
- or -  
<object Width="Auto"/>  
```  
  
<a name="xamlValues_Width"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity>します。 修飾されていない値の単位で [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]します。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A `double` 、前述の値 \(を除く `Auto`\) 後に、次の単位指定子の 1 つ: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 自動  
 太くを自動的に決定されます。 プロパティの値と等価 <xref:System.Double.NaN>します。  
  
<a name="dependencyPropertyInfo_Width"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.Floater.WidthProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.Floater.Width%2A> の属性、 <xref:System.Windows.Documents.Floater> 要素。  
  
 [!code-xml[FloaterFigureSnippets\#\_FloaterPropsXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FloaterFigureSnippets/CSharp/Window1.xaml#_floaterpropsxaml)]  
  
 [!code-csharp[FloaterFigureSnippets\#\_FloaterProps](~/samples/snippets/csharp/VS_Snippets_Wpf/FloaterFigureSnippets/CSharp/Window1.xaml.cs#_floaterprops)]
 [!code-vb[FloaterFigureSnippets\#\_FloaterProps](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FloaterFigureSnippets/visualbasic/window1.xaml.vb#_floaterprops)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Floater.WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.Floater.Width" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.Floater" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>