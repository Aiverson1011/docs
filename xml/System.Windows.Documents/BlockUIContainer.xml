<Type Name="BlockUIContainer" FullName="System.Windows.Documents.BlockUIContainer">
  <TypeSignature Language="C#" Value="public class BlockUIContainer : System.Windows.Documents.Block" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BlockUIContainer extends System.Windows.Documents.Block" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.BlockUIContainer" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Block</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>これにより、ブロック レベルのフロー コンテンツ要素 <see cref="T:System.Windows.UIElement" /> 要素 \(つまり、 <see cref="T:System.Windows.Controls.Button" />\) を埋め込む \(ホスト\) フロー コンテンツにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.UIElement> 要素 \(つまり、 <xref:System.Windows.Controls.Button>\) で囲まれたフロー コンテンツに直接埋め込む、 <xref:System.Windows.Documents.BlockUIContainer> \(次の例を参照してください\)。  
  
 <xref:System.Windows.Documents.BlockUIContainer> 複数ホストが直接 <xref:System.Windows.UIElement> 子。  ただし、子要素をによってホストされている、 <xref:System.Windows.Documents.BlockUIContainer> 、独自の子をホストすることがあります。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Windows.Documents.BlockUIContainer> ホスト要素 <xref:System.Windows.UIElement> フロー コンテンツ内の要素。  
  
 [!code-xml[SpanSnippets\#\_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 次の図は、この例をレンダリングする方法を示しています。  
  
 29a68ec4-e506-43d6-810e-8bb160b45383  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しい空のインスタンスを初期化、 <see cref="T:System.Windows.Documents.BlockUIContainer" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BlockUIContainer (System.Windows.UIElement uiElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.UIElement uiElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uiElement" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="uiElement">
          <see cref="T:System.Windows.UIElement" /> 新しいの初期コンテンツを指定するオブジェクト <see cref="T:System.Windows.Documents.BlockUIContainer" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Documents.BlockUIContainer" /> を指定したクラス <see cref="T:System.Windows.UIElement" /> オブジェクトを新しいの初期コンテンツとして <see cref="T:System.Windows.Documents.BlockUIContainer" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、このコンス トラクターの使用状況を示します。  
  
 [!code-csharp[SpanSnippets\#\_BlockUI\_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_const1)]
 [!code-vb[SpanSnippets\#\_BlockUI\_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.BlockUIContainer.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.UIElement" /> によってホストされている、 <see cref="T:System.Windows.Documents.BlockUIContainer" />です。</summary>
        <value>
          <see cref="T:System.Windows.UIElement" /> によってホストされている、 <see cref="T:System.Windows.Documents.BlockUIContainer" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.BlockUIContainer> 複数ホストが直接 <xref:System.Windows.UIElement> 子。  ただし、子要素をによってホストされている、 <xref:System.Windows.Documents.BlockUIContainer> 、独自の子をホストすることがあります。  
  
 [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)], 、ラッピング、 <xref:System.Windows.UIElement> で、 <xref:System.Windows.Documents.BlockUIContainer> に設定する <xref:System.Windows.UIElement> の値として、 <xref:System.Windows.Documents.BlockUIContainer.Child%2A> プロパティです。  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Windows.Documents.BlockUIContainer> ホスト要素 <xref:System.Windows.UIElement> フロー コンテンツ内の要素。  
  
 [!code-xml[SpanSnippets\#\_BlockUIXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml#_blockuixaml)]  
  
 次の図は、この例をレンダリングする方法を示しています。  
  
 29a68ec4-e506-43d6-810e-8bb160b45383  
  
 次の例では、使用する方法、 <xref:System.Windows.Documents.BlockUIContainer.Child%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[spansnippets\#\_BlockUI\_Child](~/samples/snippets/csharp/VS_Snippets_Wpf/SpanSnippets/CSharp/Window1.xaml.cs#_blockui_child)]
 [!code-vb[spansnippets\#\_BlockUI\_Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SpanSnippets/visualbasic/window1.xaml.vb#_blockui_child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.BlockUIContainer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>