<Type Name="TableCell" FullName="System.Windows.Documents.TableCell">
  <TypeSignature Language="C#" Value="public class TableCell : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TableCell extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TableCell" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Windows.Documents.Table" /> 内のコンテンツのセルを定義するフロー コンテンツ要素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.TableCell> 直接コンテンツをホストしているテーブル要素のみです。  その他のテーブル要素 \(<xref:System.Windows.Documents.Table>, 、<xref:System.Windows.Documents.TableColumn>, 、<xref:System.Windows.Documents.TableRowGroup>, 、および <xref:System.Windows.Documents.TableRow>\) をテーブルの構造上の属性を定義するのには存在します。  
  
 <xref:System.Windows.Documents.TableCell> 要素が 1 つまたは複数フロー コンテンツ要素から派生することをホスト <xref:System.Windows.Documents.Block>します。  有効なコンテンツの要素、 <xref:System.Windows.Documents.TableCell> が含まれます。  
  
-   <xref:System.Windows.Documents.BlockUIContainer>  
  
-   <xref:System.Windows.Documents.List>  
  
-   <xref:System.Windows.Documents.Paragraph>  
  
-   <xref:System.Windows.Documents.Section>  
  
-   <xref:System.Windows.Documents.Table>  
  
 <xref:System.Windows.Documents.TableCellCollection> コレクション クラスのコレクションを操作するための機能を提供する <xref:System.Windows.Documents.TableCell> オブジェクトです。  
  
> [!NOTE]
>  バインディングの内容を組み込みのデータが存在しない、 <xref:System.Windows.Documents.TableCell>です。 ためのデータ バインド機能を追加するための最も簡単なオプション、 <xref:System.Windows.Documents.TableCell> は、データを格納するバインド <xref:System.Windows.Controls.TextBlock> で、 <xref:System.Windows.Documents.TableCell> 次のようにします。 `<TableCell><InlineUIContainer><TextBlock Text="{Binding ...}" /></InlineUIContainer></TableCell>`  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCell ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TableCell.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しい空のインスタンスを初期化、 <see cref="T:System.Windows.Documents.TableCell" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TableCell (System.Windows.Documents.Block blockItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Block blockItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TableCell.#ctor(System.Windows.Documents.Block)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blockItem" Type="System.Windows.Documents.Block" />
      </Parameters>
      <Docs>
        <param name="blockItem">A <see cref="T:System.Windows.Documents.Block" /> 新しいの初期コンテンツを指定するオブジェクト <see cref="T:System.Windows.Documents.TableCell" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Documents.TableCell" /> を指定したクラス <see cref="T:System.Windows.Documents.Block" /> オブジェクトを新しいの初期コンテンツとして <see cref="T:System.Windows.Documents.TableCell" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、このコンス トラクターの使用状況を示します。  
  
 [!code-csharp[TableSnippets2\#\_TableCell\_Const1](~/samples/snippets/csharp/VS_Snippets_Wpf/TableSnippets2/CSharp/Window1.xaml.cs#_tablecell_const1)]
 [!code-vb[TableSnippets2\#\_TableCell\_Const1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TableSnippets2/visualbasic/window1.xaml.vb#_tablecell_const1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.Blocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.TableCell" /> の内容を構成する最上位レベルの <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" /> を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Documents.TableCell" /> の内容を構成する <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" />。  
  
 このプロパティに既定値はありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Documents.BlockCollection> 列挙またはの内容を操作するには、このプロパティによって返される、 <xref:System.Windows.Documents.TableCell> 要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.BorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Media.Brush" /> 要素の境界を描画するときに使用します。</summary>
        <value>要素の罫線を適用するために使用するブラシ。  
  
 既定値は、 **null** ブラシ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用可能な事前定義されたブラシの色の見本のテーブルを参照してください。 <xref:System.Windows.Media.Brushes>します。  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.BorderBrushProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.ListItem.BorderBrush%2A> の属性、 <xref:System.Windows.Documents.Block> 要素 \(<xref:System.Windows.Documents.Paragraph>\)。  
  
 [!code-xml[BlockSnippets\#\_Block\_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 次の図は、この例をレンダリングする方法を示しています。  
  
 20491906-5a09-4675-8f70-c9c6283b1b63  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.ListItem.BorderBrush%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[BlockSnippets\#\_Block\_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets\#\_Block\_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TableCell.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.BorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.BorderBrush" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.BorderThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素の境界線の太さを取得または設定します。</summary>
        <value>適用する境界線の量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。  
  
 既定値は 0 \(**0.0**\) の均一な厚みです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## XAML 属性の使用方法  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## XAML 値  
 *uniformThickness*  
 1 つの文字列表現 <xref:System.Double> 4 つすべての厚みに一様に分布を適用する値。  たとえばの値 `"10"` はの値と同じ `"10,10,10,10"`します。  修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *independentThickness*  
 順序付けになる 4 つの文字列表現 <xref:System.Double> 上、左の太さの独立したディメンションに対応する値が右、および、下には、次の順序で。  4 つの値をコンマで区切る必要があります。スペースは使用できません。  たとえば、「5,10,15,20」によって 5 ピクセルの境界線のコンテンツ、上の枠線のピクセルを 10、15 ピクセル、コンテンツの右に罫線のおよびコンテンツの下の境界線の 20 ピクセルの左側です。  
  
 *qualifiedUniformThickness*  
 記述された値 *uniformThickness* 次の単位指定子のいずれかが続きます。 `px`, 、`in`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 たとえば、 `"1in"` すべての方向に 1 インチの均一の境界を提供します。  
  
 *qualifiedIndependentThickness*  
 記述された値 *independentThickness*, 、独立した各値は、次の単位指定子のいずれかが続きます。 `px`, 、`in`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。  単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.BorderThicknessProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.ListItem.BorderThickness%2A> の属性、 <xref:System.Windows.Documents.Block> 要素 \(<xref:System.Windows.Documents.Paragraph>\)。  
  
 [!code-xml[BlockSnippets\#\_Block\_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 次の図は、この例をレンダリングする方法を示しています。  
  
 20491906-5a09-4675-8f70-c9c6283b1b63  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.ListItem.BorderThickness%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[BlockSnippets\#\_Block\_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets\#\_Block\_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TableCell.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.BorderThicknessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.BorderThickness" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnSpan">
      <MemberSignature Language="C#" Value="public int ColumnSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnSpan" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.ColumnSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または列の数を設定、 <see cref="T:System.Windows.Documents.TableCell" /> にまたがる必要があります。</summary>
        <value>列の数、 <see cref="T:System.Windows.Documents.TableCell" /> にまたがる必要があります。  
  
 既定値は **1** \(スパニングなし\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_ColumnSpan"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.ColumnSpanProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TableCell.RowSpan" />
      </Docs>
    </Member>
    <Member MemberName="ColumnSpanProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnSpanProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnSpanProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.ColumnSpanProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.ColumnSpan" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内のコンテンツのフローの相対的な方向を指定する値、 <see cref="T:System.Windows.Documents.TableCell" /> 要素。</summary>
        <value>メンバー、 <see cref="T:System.Windows.FlowDirection" /> 、相対的なフローの方向を指定する列挙体です。  このプロパティを取得するには、現在有効なフローの方向が返されます。  内容をこのプロパティを設定すると、 <see cref="T:System.Windows.Documents.TableCell" /> 再を指定した方向にフローする要素。  
  
 既定値は <see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コンテンツのフローの方向は、通常、表される言語の本質的なフローの方向に対応します。  ヘブライ語やアラビア語は、右から左へから自然に読む言語の例を提供します。  英語、ドイツ語、およびロシア語は、左から右へから自然に読む言語の例を提供します。  
  
 **注:** オペレーティング システムで使用される言語に合わせて、このプロパティの値が自動的に変更できません。 既定値は、別の値を使用する必要がある場合 <xref:System.Windows.FlowDirection.LeftToRight>, 、自分で、指定する必要があります。  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.FlowDirectionProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.ListItem.FlowDirection%2A> の属性、 <xref:System.Windows.Documents.Block> 要素 \(<xref:System.Windows.Documents.Paragraph>\)。  
  
 [!code-xml[BlockSnippets\#\_Block\_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.ListItem.FlowDirection%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[BlockSnippets\#\_Block\_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets\#\_Block\_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.FlowDirection" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツの各行の高さを取得または設定します。</summary>
        <value>デバイスに依存しないピクセルで行の高さを指定する double 値。<see cref="P:System.Windows.Documents.TableCell.LineHeight" /> は、<c>0.0034</c> 以上、かつ <c>160000</c> 以下でなければなりません。  
  
 値 <see cref="F:System.Double.NaN" /> \(属性値 "<c>Auto</c>" に相当するもの\) に設定すると、行の高さは現在のフォント特性から自動的に決定されます。  
  
 既定値は <see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この値を変更しても、関連付けられているテキストの高さは変更されません。代わりに、テキストを含む行の高さを変更します。  
  
 このプロパティでは、内の行のレイアウトだけでなく、 <xref:System.Windows.Documents.TableCell> の影響を受けるその <xref:System.Windows.Documents.TableCell.LineStackingStrategy%2A> プロパティです。  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## XAML 属性の使用方法  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値以上になる `0.0034` と同じか、少ない `160000`します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 、前述の値 \(ドキュメントを除く `Auto`\) 後に、次の単位指定子の 1 つ: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 自動  
 現在のフォント特性から自動的に決定される行の高さをさせます。  プロパティの値と等価 <xref:System.Double.NaN>します。  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.LineHeightProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.TableCell.LineHeight%2A> の属性、 <xref:System.Windows.Documents.Block> 要素。  
  
 [!code-xml[BlockSnippets\#\_Block\_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 次の図は、前の例をレンダリングする方法を示しています。  
  
 e530e9d3-8ec0-46eb-88c7-d0a0928bdf6f  
  
 既定の設定の例と同じをレンダリングする方法を次に示します <xref:System.Windows.Documents.TableCell.LineHeight%2A>\=<xref:System.Double.NaN>です。  
  
 313722fd-53a8-4011-937e-1f24aab57c86  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.TableCell.LineHeight%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[BlockSnippets\#\_Block\_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets\#\_Block\_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> を正でない値に設定しようとすると発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.LineHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内のテキストの行ごとに行ボックスを決定する際、メカニズム、 <see cref="T:System.Windows.Documents.TableCell" />です。</summary>
        <value>内のテキストの行ごとに行ボックスを決定する際、メカニズム、 <see cref="T:System.Windows.Documents.TableCell" />です。 既定値は <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.LineStackingStrategyProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> テキスト行の行のボックスを作成する方法を決定するプロパティ、 <xref:System.Windows.Controls.TextBlock>です。 最初の <xref:System.Windows.Controls.TextBlock> が、 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> の値 <xref:System.Windows.LineStackingStrategy.MaxHeight> 、2 番目 <xref:System.Windows.Controls.TextBlock> の値を持つ <xref:System.Windows.LineStackingStrategy.BlockLineHeight>です。  
  
 [!code-xml[FlowMiscSnippets\_snip\#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 次の図は、上記のコードの結果を示しています。  
  
 a45cbc99-0776-48dc-82f0-05ebbb744b85  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TableCell.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成して返します、 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Documents.TableCell" />です。</summary>
        <returns>
          <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> オブジェクトの <see cref="T:System.Windows.Documents.TableCell" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>要素のパディングの厚みを取得または設定します。</summary>
        <value>適用するパディングの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。  
  
 既定値は 0 \(**0.0**\) の均一な厚みです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_Padding"></a>   
## XAML 属性の使用方法  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## XAML 値  
 *uniformThickness*  
 1 つの文字列表現 <xref:System.Double> 4 つすべての厚みに一様に分布を適用する値。  たとえばの値 `"10"` はの値と同じ `"10,10,10,10"`します。  修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *independentThickness*  
 順序付けになる 4 つの文字列表現 <xref:System.Double> 上、左の太さの独立したディメンションに対応する値が右、および、下には、次の順序で。  4 つの値をコンマで区切る必要があります。スペースは使用できません。  たとえば、「5,10,15,20」によって 5 ピクセルの余白のコンテンツ、コンテンツの上の余白が 10 ピクセル、右の余白の 15 のピクセルおよびコンテンツの下の余白の 20 ピクセルの左側です。  
  
 *qualifiedUniformThickness*  
 記述された値 *uniformThickness* 次の単位指定子のいずれかが続きます。 `px`, 、`in`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 たとえば、 `"1in"` すべての方向に 1 インチの統一されたパディングを提供します。  
  
 *qualifiedIndependentThickness*  
 記述された値 *independentThickness*, 、独立した各値は、次の単位指定子のいずれかが続きます。 `px`, 、`in`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。  単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.PaddingProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.TableCell.Padding%2A> の属性、 <xref:System.Windows.Documents.Block> 要素 \(<xref:System.Windows.Documents.Paragraph>\)。  
  
 [!code-xml[BlockSnippets\#\_Block\_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 次の図は、この例をレンダリングする方法を示しています。  誇張された太さや色は、図に使用されます。  
  
 23d0adec-0937-4a13-8b42-010952d28fa2  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.TableCell.Padding%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[BlockSnippets\#\_Block\_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets\#\_Block\_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.PaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.Padding" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowSpan">
      <MemberSignature Language="C#" Value="public int RowSpan { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowSpan" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.RowSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または行の数を設定、 <see cref="T:System.Windows.Documents.TableCell" /> にまたがる必要があります。</summary>
        <value>行の数、 <see cref="T:System.Windows.Documents.TableCell" /> にまたがる必要があります。  
  
 既定値は **1** \(スパニングなし\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_RowSpan"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.RowSpanProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TableCell.ColumnSpan" />
      </Docs>
    </Member>
    <Member MemberName="RowSpanProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RowSpanProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RowSpanProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.RowSpanProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.RowSpan" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TableCell.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
        <value>メンバー、 <see cref="T:System.Windows.TextAlignment" /> 目的の配置を指定します。  
  
 既定値は <see cref="F:System.Windows.TextAlignment.Left" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.TableCell.TextAlignmentProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.TableCell.TextAlignment%2A> の属性、 <xref:System.Windows.Documents.Block> 要素。  
  
 [!code-xml[BlockSnippets\#\_Block\_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 前の例を表示する方法を次に示します **左** テキストの配置 \(既定値\)。  
  
 bfdea1ed-24e6-4686-b104-65547b2b692e  
  
 同じ例を表示する方法を次に示します **右** テキストの配置。  
  
 a786348b-6084-4bc3-808a-15c8479cee6f  
  
 同じ例を表示する方法を次に示します **Center** テキストの配置。  
  
 16731071-bd55-489e-9015-601fdffcde8c  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.TableCell.TextAlignment%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[BlockSnippets\#\_Block\_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets\#\_Block\_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.TableCell.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.TableCell.TextAlignment" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.TableCell" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>