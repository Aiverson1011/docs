<Type Name="List" FullName="System.Windows.Documents.List">
  <TypeSignature Language="C#" Value="public class List : System.Windows.Documents.Block" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi List extends System.Windows.Documents.Block" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.List" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.Block</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("ListItems")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>順序付けられたまたは順序なしの一覧でコンテンツを表示する機能を提供するブロック レベルのフロー コンテンツ要素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.List> 子コンテンツの強力なコンテンツ モデルが適用されます。 参照してください [TextElement コンテンツ モデルの概要](http://msdn.microsoft.com/ja-jp/d0a7791c-b090-438c-812f-b9d009d83ee9) の詳細については、 <xref:System.Windows.Documents.List> コンテンツ モデル。  
  
 <xref:System.Windows.Documents.List> フロー コンテンツ要素が箇条書きと段落番号などのマーカーでフォーマットされているに設計されています。  
  
 <xref:System.Windows.Documents.ListItem> 要素にのみ指定できる子である、 <xref:System.Windows.Documents.List> 要素。  
  
   
  
## 例  
 次の例では、定義する方法、 <xref:System.Windows.Documents.List> を使用して [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]します。  
  
 [!code-xml[ListSnippets\#\_ListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_listxaml)]  
  
 次の例を作成および取り込む方法を示しています、 <xref:System.Windows.Documents.List> プログラムを使用しています。  
  
 [!code-csharp[ListSnippets\#\_List\_Props](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_props)]
 [!code-vb[ListSnippets\#\_List\_Props](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_props)]  
  
 次の図は、この例をレンダリングする方法を示しています。  
  
 e0946ef9-ade0-4bce-82bb-94242f0e5d49  
  
 次の例は、入れ子になったを定義する方法を示しています。 <xref:System.Windows.Documents.List> \(一覧内で一覧表示\) を使用して [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]します。  
  
 [!code-xml[ListSnippets\#\_NestedListXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml#_nestedlistxaml)]  
  
 次の図は、この例をレンダリングする方法を示しています。  
  
 cc4d3598-dbe3-44e7-a151-44399787df1b  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.ListItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.List.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しい空のインスタンスを初期化、 <see cref="T:System.Windows.Documents.List" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public List (System.Windows.Documents.ListItem listItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.ListItem listItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listItem" Type="System.Windows.Documents.ListItem" />
      </Parameters>
      <Docs>
        <param name="listItem">A <see cref="T:System.Windows.Documents.ListItem" /> 新しいの初期コンテンツを指定するオブジェクト <see cref="T:System.Windows.Documents.List" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Documents.List" /> を指定したクラス <see cref="T:System.Windows.Documents.ListItem" /> オブジェクトを新しいの初期コンテンツとして <see cref="T:System.Windows.Documents.List" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、このコンス トラクターの使用状況を示します。  
  
 [!code-csharp[ListSnippets\#\_List\_Const](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_const)]
 [!code-vb[ListSnippets\#\_List\_Const](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_const)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListItems">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.ListItemCollection ListItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.ListItemCollection ListItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.ListItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.ListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Documents.ListItemCollection" /> を含む、 <see cref="T:System.Windows.Documents.ListItem" /> の内容を構成する要素、 <see cref="T:System.Windows.Documents.List" />です。</summary>
        <value>A <see cref="T:System.Windows.Documents.ListItemCollection" /> を含む、 <see cref="T:System.Windows.Documents.ListItem" /> の内容を構成する要素、 <see cref="T:System.Windows.Documents.List" />です。  
  
 このプロパティに既定値はありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Documents.ListItemCollection> 列挙またはの内容を操作するには、このプロパティによって返される、 <xref:System.Windows.Documents.List> 要素。  
  
   
  
## 例  
 次の例は、上の一般的な操作を実行する方法を示して、 <xref:System.Windows.Documents.List> を使用して、 <xref:System.Windows.Documents.List.ListItems%2A> プロパティです。  
  
 [!code-csharp[ListSnippets\#\_List\_ListItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ListSnippets/CSharp/Window1.xaml.cs#_list_listitems)]
 [!code-vb[ListSnippets\#\_List\_ListItems](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListSnippets/visualbasic/window1.xaml.vb#_list_listitems)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerOffset">
      <MemberSignature Language="C#" Value="public double MarkerOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MarkerOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.MarkerOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各 <see cref="T:System.Windows.Documents.ListItem" /> 要素のコンテンツとリスト マーカーの近傍端の間に必要な距離を取得または設定します。</summary>
        <value>リスト コンテンツとリスト マーカーの近傍端の間に必要な距離を指定する double 型の値 \(デバイスに依存しないピクセル単位\)。  
  
 <see cref="F:System.Double.NaN" /> の値 \(属性値 "<c>Auto</c>" に相当\) により、マーカー オフセットが自動的に決まります。  
  
 既定値は <see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="xamlAttributeUsage_MarkerOffset"></a>   
## XAML 属性の使用方法  
  
```  
<object MarkerOffset="double"/>  
- or -  
<object MarkerOffset="qualifiedDouble"/>  
- or -  
<object MarkerOffset="Auto"/>  
```  
  
<a name="xamlValues_MarkerOffset"></a>   
## XAML 値  
 *double*  
 文字列表現、 <xref:System.Double> 値以上になる **0.0** がよりも小さい <xref:System.Double.PositiveInfinity>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 、前述の値 \(ドキュメントを除く `Auto`\) 後に、次の単位指定子の 1 つ: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 自動  
 現在のフォント特性から自動的に決定するマーカーのオフセットが発生します。  プロパティの値と等価 <xref:System.Double.NaN>します。  
  
<a name="dependencyPropertyInfo_MarkerOffset"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.List.MarkerOffsetProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.List.MarkerStyle" />
      </Docs>
    </Member>
    <Member MemberName="MarkerOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarkerOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarkerOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.List.MarkerOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.List.MarkerOffset" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.TextMarkerStyle MarkerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextMarkerStyle MarkerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.MarkerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextMarkerStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のマーカーのスタイル、 <see cref="T:System.Windows.Documents.List" />です。</summary>
        <value>メンバー、 <see cref="T:System.Windows.TextMarkerStyle" /> を使用するマーカーのスタイルを指定する列挙体です。  
  
 既定値は <see cref="F:System.Windows.TextMarkerStyle.Disc" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_MarkerStyle"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.List.MarkerStyle%2A>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.List.MarkerOffset" />
      </Docs>
    </Member>
    <Member MemberName="MarkerStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarkerStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarkerStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.List.MarkerStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.List.MarkerStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndex">
      <MemberSignature Language="C#" Value="public int StartIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.List.StartIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または順序付きリスト内の項目のラベル付けの開始インデックスを設定します。</summary>
        <value>順序付きリスト内の項目のラベルを付けるための開始インデックス。  
  
 既定値は **1**します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティには、順序付けられていないリストへの影響はありません。  
  
<a name="dependencyPropertyInfo_StartIndex"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.List.StartIndexProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartIndexProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StartIndexProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StartIndexProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.List.StartIndexProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.List.StartIndex" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.List" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>