<Type Name="FlowDocument" FullName="System.Windows.Documents.FlowDocument">
  <TypeSignature Language="C#" Value="public class FlowDocument : System.Windows.FrameworkContentElement, IServiceProvider, System.Windows.Documents.IDocumentPaginatorSource, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FlowDocument extends System.Windows.FrameworkContentElement implements class System.IServiceProvider, class System.Windows.Documents.IDocumentPaginatorSource, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.FlowDocument" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkContentElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Documents.IDocumentPaginatorSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Inherit, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Blocks")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>改ページ位置の自動修正や列などの高度なドキュメント機能を持つフロー コンテンツをホストして書式設定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.FlowDocument> 子コンテンツの強力なコンテンツ モデルが適用されます。  含まれる最上位レベルの子要素、 <xref:System.Windows.Documents.FlowDocument> から派生する必要があります <xref:System.Windows.Documents.Block>します。  有効な最上位レベルの子要素を以下に示します。  
  
-   <xref:System.Windows.Documents.BlockUIContainer>  
  
-   <xref:System.Windows.Documents.List>  
  
-   <xref:System.Windows.Documents.Paragraph>  
  
-   <xref:System.Windows.Documents.Section>  
  
-   <xref:System.Windows.Documents.Table>  
  
 既定値 <xref:System.Windows.DataTemplate> の <xref:System.Windows.Documents.FlowDocument> を含む、 <xref:System.Windows.Controls.FlowDocumentReader> を使用する場合、ドキュメントの表示に使用される <xref:System.Windows.Documents.FlowDocument> XAML ファイルのルート要素として。 場合 <xref:System.Windows.Documents.FlowDocument> ルート要素ではなくでドキュメントを表示することができます、 <xref:System.Windows.Controls.FlowDocumentScrollViewer>, 、 <xref:System.Windows.Controls.FlowDocumentPageViewer>, 、または <xref:System.Windows.Controls.FlowDocumentReader> コントロールです。 編集することも、 <xref:System.Windows.Documents.FlowDocument> で、 <xref:System.Windows.Controls.RichTextBox> コントロールです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しい空のインスタンスを初期化、 <see cref="T:System.Windows.Documents.FlowDocument" /> クラスです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlowDocument (System.Windows.Documents.Block block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Documents.Block block) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="block" Type="System.Windows.Documents.Block" />
      </Parameters>
      <Docs>
        <param name="block">抽象から派生するオブジェクト <see cref="T:System.Windows.Documents.Block" /> クラスは、初期のコンテンツとして追加します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Documents.FlowDocument" /> クラスを指定した追加 <see cref="T:System.Windows.Documents.Block" /> に対する初期コンテンツとしての要素。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 有効な入力型用 `block` 含める <xref:System.Windows.Documents.BlockUIContainer>, 、<xref:System.Windows.Documents.List>, 、<xref:System.Windows.Documents.Paragraph>, 、<xref:System.Windows.Documents.Section>, 、および <xref:System.Windows.Documents.Table>です。  
  
   
  
## 例  
 次の例では、このコンス トラクターの使用を示します。  ここで、 <xref:System.Windows.Documents.FlowDocument> はテキスト ランの段落に入れ子になったから成るフロー要素ブロック構造体が含まれています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentConstructorSimple](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentconstructorsimple)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentConstructorSimple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentconstructorsimple)]  
  
 次の例は、プログラムを使用して単純な 2 つの x2 テーブルを構築し、次を使用して、 <xref:System.Windows.Documents.FlowDocument> 新しいを作成するコンス トラクター <xref:System.Windows.Documents.FlowDocument> テーブルを含みます。  複雑なフロー要素ブロック構造体を使用すると、上記の例のように同じはコンス トラクターは、使用されます。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentConstructorTable](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentconstructortable)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentConstructorTable](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentconstructortable)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="block" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Media.Brush" /> コンテンツ領域の背景の塗りつぶしに使用します。</summary>
        <value>コンテンツ領域の背景の塗りつぶしに使用されるブラシまたは <see langword="null" /> 背景ブラシを使用しないようにします。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用可能な定義済みのブラシの色の見本のテーブルを参照してください。 <xref:System.Windows.Media.Brushes>します。  
  
<a name="dependencyPropertyInfo_Background"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.BackgroundProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.Background%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentBackgroundXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentbackgroundxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.Background%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentBackground](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentbackground)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentBackground](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentbackground)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.Background" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Blocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection Blocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection Blocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Blocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> の内容の最上位の <see cref="T:System.Windows.Documents.Block" /> 要素を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Documents.FlowDocument" /> の内容を構成する <see cref="T:System.Windows.Documents.Block" /> 要素を含む <see cref="T:System.Windows.Documents.BlockCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use the <xref:System.Windows.Documents.BlockCollection> returned by this property to enumerate or manipulate contents of a <xref:System.Windows.Documents.FlowDocument>.  
  
 Top\-level child elements contained in a <xref:System.Windows.Documents.FlowDocument> must be derived from <xref:System.Windows.Documents.Block>.  Valid top\-level child elements include the following:  
  
-   <xref:System.Windows.Documents.BlockUIContainer>  
  
-   <xref:System.Windows.Documents.List>  
  
-   <xref:System.Windows.Documents.Paragraph>  
  
-   <xref:System.Windows.Documents.Section>  
  
-   <xref:System.Windows.Documents.Table>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnGap">
      <MemberSignature Language="C#" Value="public double ColumnGap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ColumnGap" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnGap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内の列間の間隔を示す、列間隔値を取得または設定します。</summary>
        <value>列間隔 \(デバイスに依存しないピクセル単位\)。  値 <see cref="F:System.Double.NaN" /> \(属性値 "<c>Auto</c>" と等価\) は、列間隔が <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> プロパティと同じであることを示しています。 既定値は、<see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Getting this property returns the current column gap.  Setting this value changes the currently effective column gap, and may cause content to reflow.  
  
 The column gap cannot exceed the current <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> minus any <xref:System.Windows.Documents.FlowDocument.PagePadding%2A>.  If the value of the <xref:System.Windows.Documents.FlowDocument.ColumnGap%2A> property exceeds this limit, the effective column gap is reduced to observe this limit.  
  
 This property has no effect if <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> is **languageKeyword tag is not supported!!!!**  
.  
  
<a name="xamlAttributeUsage_ColumnGap"></a>   
## XAML Attribute Usage  
  
```  
<object ColumnGap="double"/>  
- or -  
<object ColumnGap="qualifiedDouble"/>  
- or -  
<object ColumnGap="Auto"/>  
```  
  
<a name="xamlValues_ColumnGap"></a>   
## XAML Values  
 *double*  
 <xref:System.Double>  
  
 String representation of a <xref:System.Double> value equal to or greater than 0.0 but smaller than <xref:System.Double.PositiveInfinity?displayProperty=fullName>. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  
  
 *qualifiedDouble*  
 A **legacyItalic tag is not supported!!!!**  
 value as described above \(excepting `Auto`\), followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.  
  
 `px` \(default\) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` is inches; 1in\=\=96px  
  
 `cm` is centimeters; 1cm\=\=\(96\/2.54\) px  
  
 `pt` is points; 1pt\=\=\(96\/72\) px  
  
 Auto  
 Causes the effective spacing between columns to be set to the current value of the <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> property.  Equivalent to a property value of <xref:System.Double.NaN>.  
  
<a name="dependencyPropertyInfo_ColumnGap"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.FlowDocument.ColumnGapProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 The following example shows how to set the <xref:System.Windows.Documents.FlowDocument.ColumnGap%2A> property programmatically.  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentColumnGap](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumngap)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentColumnGap](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumngap)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" />
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" />
      </Docs>
    </Member>
    <Member MemberName="ColumnGapProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnGapProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnGapProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnGapProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush ColumnRuleBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush ColumnRuleBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列間ルールの描画に使用する <see cref="T:System.Windows.Media.Brush" /> を取得または設定します。</summary>
        <value>列間の罫線を描画するときに使用する <see cref="T:System.Windows.Media.Brush" />、または背景ブラシを使用しないようにする <see langword="null" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The column rule is a line that is drawn between columns, and is used to visually separate columns of content.  
  
 For a table of swatches that show the available predefined brush colors, see <xref:System.Windows.Media.Brushes>.  
  
 This property has no effect if the <xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth%2A> property is 0 or **languageKeyword tag is not supported!!!!**  
.  
  
 Column rules are displayed only when there are two or more columns.  
  
<a name="dependencyPropertyInfo_ColumnRuleBrush"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 The following example shows how to set the <xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush%2A> property programmatically.  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentColumnRule](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnrule)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentColumnRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnrule)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnGap" />
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" />
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnRuleBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnRuleBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleWidth">
      <MemberSignature Language="C#" Value="public double ColumnRuleWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ColumnRuleWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>列のルールの幅を取得または設定します。</summary>
        <value>列のルールの幅。デバイス非依存のピクセル単位で指定します。 既定値は 0.0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The column rule is a line that is drawn between columns, and is used to visually separate columns of content.  
  
 This property has no effect if the <xref:System.Windows.Documents.FlowDocument.ColumnRuleBrush%2A> property is **languageKeyword tag is not supported!!!!**  
.  
  
 Column rules are only displayed when there are two or more columns.  The column rule width is constrained to be less than or equal to the <xref:System.Windows.Documents.FlowDocument.ColumnGap%2A>.  
  
<a name="xamlAttributeUsage_ColumnRuleWidth"></a>   
## XAML Attribute Usage  
  
```  
<object ColumnRuleWidth="double"/>  
- or -  
<object ColumnRuleWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_ColumnRuleWidth"></a>   
## XAML Values  
 *double*  
 <xref:System.Double>  
  
 String representation of a <xref:System.Double> value equal to or greater than 0.0 but smaller than <xref:System.Double.PositiveInfinity?displayProperty=fullName>. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.  
  
 *qualifiedDouble*  
 A **legacyItalic tag is not supported!!!!**  
 value as described above, followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.  
  
 `px` \(default\) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` is inches; 1in\=\=96px  
  
 `cm` is centimeters; 1cm\=\=\(96\/2.54\) px  
  
 `pt` is points; 1pt\=\=\(96\/72\) px  
  
<a name="dependencyPropertyInfo_ColumnRuleWidth"></a>   
## Dependency Property Information  
  
|||  
|-|-|  
|Identifier field|<xref:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty>|  
|Metadata properties set to **languageKeyword tag is not supported!!!!**|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 The following example shows how to set the <xref:System.Windows.Documents.FlowDocument.ColumnRuleWidth%2A> property programmatically.  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentColumnRule](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnrule)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentColumnRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnrule)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnGap" />
        <altmember cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush" />
      </Docs>
    </Member>
    <Member MemberName="ColumnRuleWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnRuleWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnRuleWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidth">
      <MemberSignature Language="C#" Value="public double ColumnWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ColumnWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ColumnWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> の列の適切な最小幅を取得または設定します。</summary>
        <value>適切な最小列幅 \(デバイスに依存しないピクセル単位\)。 値 <see cref="F:System.Double.NaN" /> により、ページの幅に関係なく、表示される列は 1 つだけです。  既定値は、<see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Documents.FlowDocument> 、使用可能な表示領域内のコンテンツの表示を最大化するには、その内容を動的に調整します。  表示されている列の数については、このプロパティで指定された最小の列幅を指定の使用可能な表示領域に適合する列の数によって決まります。  実際の列幅は、このプロパティによって指定された値を超えることがあります。  
  
 どちらの方向にウィンドウのサイズを変更すると、領域の最適な利用を動的に再生成されている列が発生します。 これにより、コンテンツは、ユーザーの環境に動的に適応します。  
  
<a name="xamlAttributeUsage_ColumnWidth"></a>   
## XAML 属性の使用方法  
  
```  
<object ColumnWidth="double"/>  
- or -  
<object ColumnWidth="qualifiedDouble"/>  
- or -  
<object ColumnWidth="Auto"/>  
```  
  
<a name="xamlValues_ColumnWidth"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 、前述の値 \(ドキュメントを除く `Auto`\) 後に、次の単位指定子の 1 つ: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 自動  
 現在の 20 倍に自動的に計算される列の幅と、 <xref:System.Windows.Documents.FlowDocument.FontSize%2A>です。  
  
<a name="dependencyPropertyInfo_ColumnWidth"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.ColumnWidthProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentColumnWidthXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentcolumnwidthxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentColumnWidth](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnwidth)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentColumnWidth](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnwidth)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ColumnWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ColumnWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer ContentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer ContentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ContentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Documents.TextPointer" /> でコンテンツの終わりを表す、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>A <see cref="T:System.Windows.Documents.TextPointer" /> 内でコンテンツの終わりを表す、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A> の末尾にコンテンツを追加するプロパティが使用される多くの場合、 <xref:System.Windows.Documents.FlowDocument>です。  
  
 <xref:System.Windows.Documents.TextPointer> このプロパティによって返されるは常にその <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> 設定 <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=fullName>します。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A> にコンテンツを追加するプロパティ、 <xref:System.Windows.Documents.FlowDocument>です。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentContentEnd](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcontentend)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentContentEnd](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcontentend)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ContentStart" />
      </Docs>
    </Member>
    <Member MemberName="ContentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer ContentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer ContentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.ContentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Windows.Documents.TextPointer" /> 内のコンテンツの開始を表す、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>A <see cref="T:System.Windows.Documents.TextPointerContext" /> の内容の開始を表す、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.FlowDocument.ContentStart%2A> の先頭にコンテンツを挿入するプロパティが使用される多くの場合、 <xref:System.Windows.Documents.FlowDocument>です。  
  
 <xref:System.Windows.Documents.TextPointer> このプロパティによって返されるは常にその <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> 設定 <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=fullName>します。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Documents.FlowDocument.ContentStart%2A> の冒頭にコンテンツを挿入するプロパティ、 <xref:System.Windows.Documents.FlowDocument>です。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentContentStart](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcontentstart)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentContentStart](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcontentstart)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.FlowDocument.ContentEnd" />
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のコンテンツのフローの相対的な方向、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>いずれか、 <see cref="T:System.Windows.FlowDirection" /> 、相対的なフローの方向を指定する値。 既定値は、<see cref="F:System.Windows.FlowDirection.LeftToRight" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを取得するには、現在有効なフローの方向が返されます。  内容をこのプロパティを設定すると、 <xref:System.Windows.Documents.FlowDocument> 指示した方向にフローします。  
  
 <xref:System.Windows.Documents.FlowDocument.FlowDirection%2A> コンテンツの通常は、表される言語の固有のフロー方向。  ヘブライ語やアラビア語は、右から左にフロー自然言語の例を示します。  英語、ドイツ語、およびロシア語は、左から右に自然なフローの言語の例を示します。  
  
> [!NOTE]
>  このプロパティの値は、オペレーティング システムで使用される言語に合わせて自動的には変更されません。 既定値は、別の値を使用する必要がある場合 <xref:System.Windows.FlowDirection.LeftToRight>, 、自分で、指定する必要があります。  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.FlowDirectionProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FlowDirection%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentFlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentflowdirectionxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FlowDirection%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentFlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentflowdirection)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentFlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentflowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamily">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamily FontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamily FontFamily" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の優先の最上位レベルのフォント ファミリ、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>優先フォント ファミリ、または優先されるプライマリ フォント ファミリと 1 つ以上の代替フォント ファミリを指定する <see cref="T:System.Windows.Media.FontFamily" /> オブジェクト。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontFamily" /> 値によって決まるフォントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どの <xref:System.Windows.Documents.FlowDocument.FontFamily%2A> 子要素には、この最上位レベルの設定がよりも優先されます。  
  
 複数のファミリを指定すると、2 回目以降のフォント ファミリは、プライマリ フォント ファミリを使用または適用できない場合に使用する代替ファミリとして機能します。  
  
 このプロパティは、優先度だけを指定します。  指定したフォント ファミリを使用できない場合、 <xref:System.Windows.Documents.FlowDocument> が何も行わずにフォールバックして、フォントによって決定される、 <xref:System.Windows.SystemFonts.MessageFontFamily%2A?displayProperty=fullName> 値。  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## XAML 属性の使用方法  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## XAML 値  
 *fontFamilyName*  
 フォント ファミリ名を指定する文字列。  たとえば、`"Arial"` または `"Century Gothic"` のようにします。  
  
 *fontFamilyNamesList*  
 \(コンマの後の空白は無視されます\)、コンマで区切って、複数のフォント ファミリ名を指定する文字列。  指定した最初のフォント ファミリは、プライマリ フォント ファミリとして機能します。以降のフォント ファミリは、プライマリ フォント ファミリを使用または適用できない場合に使用する代替ファミリとして機能します。  たとえば、 `"Arial, Century Gothic"` 世紀ゴートとして代替フォント ファミリと、プライマリ フォント ファミリと Arial を指定します。  
  
 *fontFamilyFolderReference*  
 フォント ファミリ名と共に、フォントを含むフォルダーを指定する文字列。  フォルダーとフォント ファミリ名は、\# 記号で区切られます。  絶対または相対フォルダーの参照があります。  たとえば、`"Custom Fonts\#My Custom Font"` のようにします。  
  
 *fontFamilyUriReference*  
 指定する文字列、 [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] のフォント、フォント ファミリ名とします。[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] し、フォント ファミリ名は \# 記号で区切られます。  たとえば、`"http://MyFontServer/Fonts/#My Custom Font"` のようにします。  
  
<a name="dependencyPropertyInfo_FontFamily"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.FontFamilyProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontFamily%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontFamily%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontFamilyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontFamilyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontFamilyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontFamilyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.FontFamily" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize">
      <MemberSignature Language="C#" Value="public double FontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 FontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.FontSizeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> に対して、最上位レベルのフォント サイズを取得または設定します。</summary>
        <value>使用する目的のフォント サイズ \(デバイス非依存のピクセル単位\)。   既定値は <see cref="P:System.Windows.SystemFonts.MessageFontSize" /> 値で決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どの <xref:System.Windows.Documents.FlowDocument.FontSize%2A> 子要素がこの最上位レベルの設定を上書きします。  
  
<a name="xamlAttributeUsage_FontSize"></a>   
## XAML 属性の使用方法  
  
```  
<object FontSize="double"/>  
- or -  
<object FontSize="qualifiedDouble"/>  
```  
  
<a name="xamlValues_FontSize"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に、次の単位指定子のいずれか: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
<a name="dependencyPropertyInfo_FontSize"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.FontSizeProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontSize%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontSize%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.FontSize" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStretch">
      <MemberSignature Language="C#" Value="public System.Windows.FontStretch FontStretch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStretch FontStretch" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontStretch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStretch</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の最上位レベルのフォントの伸縮特性、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>メンバー、 <see cref="T:System.Windows.FontStretch" /> クラスを使用する目的のフォントの伸縮特性を指定します。 既定値は、<see cref="P:System.Windows.FontStretches.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どの <xref:System.Windows.Documents.FlowDocument.FontStretch%2A> 子要素がこの最上位レベルの設定を上書きします。  
  
<a name="dependencyPropertyInfo_FontStretch"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.FontStretchProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontStretch%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontStretch%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStretchProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontStretchProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontStretchProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontStretchProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.FontStretch" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyle">
      <MemberSignature Language="C#" Value="public System.Windows.FontStyle FontStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontStyle FontStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の最上位レベルのフォント スタイル、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>使用するフォントのスタイルを指定する <see cref="T:System.Windows.FontStyles" /> クラスのメンバー。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontStyle" /> 値によって決まります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どの <xref:System.Windows.Documents.FlowDocument.FontStyle%2A> 子要素がこの最上位レベルの設定を上書きします。  
  
<a name="dependencyPropertyInfo_FontStyle"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.FontStyleProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontStyle%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontStyle%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.FontStyle" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeight">
      <MemberSignature Language="C#" Value="public System.Windows.FontWeight FontWeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FontWeight FontWeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.FontWeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FontWeight</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の最上位レベルのフォントの太さ、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>使用するフォントの太さを指定する <see cref="T:System.Windows.FontWeights" /> クラスのメンバー。 既定値は、<see cref="P:System.Windows.SystemFonts.MessageFontWeight" /> 値によって決まります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 どの <xref:System.Windows.Documents.FlowDocument.FontWeight%2A> 子要素がこの最上位レベルの設定を上書きします。  
  
<a name="dependencyPropertyInfo_FontWeight"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.FontWeightProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontWeight%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentFontStuffXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentfontstuffxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.FontWeight%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentfontstuff)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentFontStuff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentfontstuff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontWeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FontWeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FontWeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.FontWeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.FontWeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Foreground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Foreground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Foreground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Media.Brush" /> のテキストの内容に適用する、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>テキスト コンテンツに適用するために使用するブラシ。 既定値は、<see cref="P:System.Windows.Media.Brushes.Black" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用可能な定義済みのブラシの色を示す色見本のテーブル、次を参照してください。 <xref:System.Windows.Media.Brushes>します。  
  
 どの <xref:System.Windows.Documents.FlowDocument.Foreground%2A> 子要素がこの最上位レベルの設定を上書きします。  
  
<a name="dependencyPropertyInfo_Foreground"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.ForegroundProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>,<br /><br /> <xref:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.Foreground%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentBackgroundXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentbackgroundxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.Foreground%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentBackground](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentbackground)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentBackground](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentbackground)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForegroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForegroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.ForegroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.Foreground" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnWidthFlexible">
      <MemberSignature Language="C#" Value="public bool IsColumnWidthFlexible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColumnWidthFlexible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはを示す値を設定するかどうか、 <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth" /> 値は、柔軟なまたは固定します。</summary>
        <value>
          <see langword="true" /> 場合は、列の幅は柔軟性があります。 <see langword="false" /> 場合は、列の幅を固定します。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible%2A> プロパティは、余分なコンテンツ領域の幅 \(つまり、ページの幅とは、レイアウト後のコンテンツの幅の違い\) は列の間で分散する方法を決定します。 設定 `true` 余分なスペースを配布する手段も同様に各列にはこの場合は、列がで指定された幅よりも大きかったサイズ設定することがあります、 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> プロパティです。  設定 `false` ページの右側にある余白を領域に配布する。 この場合、列は、で指定された幅にサイズが常に余分な手段、 <xref:System.Windows.Documents.FlowDocument.ColumnWidth%2A> プロパティ \(その幅があれば、ページの幅よりも小さい限り <xref:System.Windows.Documents.FlowDocument.PagePadding%2A>\)。  
  
 次の図はこのプロパティがレイアウトの違いを示しています `true` または `false`です。  内のコンテンツの明るい青は、 <xref:System.Windows.Documents.FlowDocument>です。  
  
 b91f6551-dd9a-483b-9dea-d0b0a75362aa  
  
<a name="dependencyPropertyInfo_IsColumnWidthFlexible"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentColumnFlexXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentcolumnflexxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentColumnFlex](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentcolumnflex)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentColumnFlex](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentcolumnflex)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColumnWidthFlexibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsColumnWidthFlexibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsColumnWidthFlexibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>値を取得、 <see cref="P:System.Windows.ContentElement.IsEnabled" /> プロパティを <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>値、 <see cref="P:System.Windows.ContentElement.IsEnabled" /> プロパティを <see cref="T:System.Windows.Documents.FlowDocument" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public bool IsHyphenationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHyphenationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または単語の自動ハイフネーションが有効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 自動改行と単語のハイフネーションが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 単語の自動ハイフネーション機能により、 <xref:System.Windows.Documents.FlowDocument> を自動的に中断し、現在のレイアウトの条件に基づいて単語のハイフネーションをします。  これは、長い文字列を 1 行で開始し、その次の続行を有効にして再配置したテキストの空白部分をより均等に配分を実現する傾向があります。  単語が破損し、標準的な文法規則に従ってハイフンを使用します。  自動ハイフネーションは段落の最適化のレイアウトと組み合わせると特に効果的 \(によって表される、 <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A> プロパティ\)。  
  
<a name="dependencyPropertyInfo_IsHyphenationEnabled"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentHyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenthyphenatexaml)]  
  
 方法を次の図に示す上記 <xref:System.Windows.Documents.FlowDocument> をレンダリングします。  
  
 40b6e7ab-1086-49af-b18b-813d17303e21  
  
 方法を次の図に示す同じ <xref:System.Windows.Documents.FlowDocument> の既定の設定を使用してレンダリング <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A>\=`false`です。  
  
 c2cc83db-9f8f-4076-99aa-5bfdea0aa9bc  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentHyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenthyphenate)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentHyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenthyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHyphenationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptimalParagraphEnabled">
      <MemberSignature Language="C#" Value="public bool IsOptimalParagraphEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptimalParagraphEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または段落の最適化のレイアウトを有効または無効になっているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> レイアウトの段落の最適化が有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 段落の最適化のレイアウトは内の段落を配置する機能、 <xref:System.Windows.Documents.FlowDocument> ホワイト スペースは、できる限り均等に配分するようです。  理論上は、この無駄な空白の行揃えのテキストおよびその他のレイアウトのルーチンで発生する可能性を排除することによって最適化された閲覧エクスペリエンスを提供します。  段落の最適化のレイアウトは自動ハイフネーションと組み合わせると特に効果的 \(によって表される、 <xref:System.Windows.Documents.FlowDocument.IsHyphenationEnabled%2A> プロパティ\)。  
  
<a name="dependencyPropertyInfo_Opt"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentHyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenthyphenatexaml)]  
  
 方法を次の図に示す上記 <xref:System.Windows.Documents.FlowDocument> をレンダリングします。  
  
 40b6e7ab-1086-49af-b18b-813d17303e21  
  
 次に示しますがどのように同じ <xref:System.Windows.Documents.FlowDocument> の既定の設定を使用してレンダリング <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A>\=`false`です。  
  
 c2cc83db-9f8f-4076-99aa-5bfdea0aa9bc  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentHyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenthyphenate)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentHyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenthyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptimalParagraphEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOptimalParagraphEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOptimalParagraphEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテンツの各行の高さを取得または設定します。</summary>
        <value>各行の高さ。単位はデバイスに依存しないピクセルで、値は 0.0034 から 160000 までの範囲です。 値 <see cref="F:System.Double.NaN" /> \(属性値 "<c>Auto</c>" に相当するもの\) に設定すると、行の高さは現在のフォント特性から自動的に決定されます。 既定値は、<see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この値を変更しても、関連付けられているテキストの高さは変更されません。代わりに、テキストを含む行の高さを変更します。 テキストのサイズを変更するには、使用、 <xref:System.Windows.Documents.FlowDocument.FontSize%2A> プロパティです。  
  
 このプロパティでは、内の行のレイアウトだけでなく、 <xref:System.Windows.Documents.FlowDocument> の影響を受けるその <xref:System.Windows.Documents.FlowDocument.LineStackingStrategy%2A> プロパティです。  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## XAML 属性の使用方法  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値以上になる `0.0034` と同じか、少ない `160000`します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 、前述の値 \(ドキュメントを除く `Auto`\) 後に、次の単位指定子の 1 つ: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 自動  
 現在のフォント特性から自動的に決定される行の高さをさせます。  プロパティの値と等価 <xref:System.Double.NaN?displayProperty=fullName>します。  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.LineHeightProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentLineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentlineheightxaml)]  
  
 方法を次の図に示す上記 <xref:System.Windows.Documents.FlowDocument> をレンダリングします。  
  
 e530e9d3-8ec0-46eb-88c7-d0a0928bdf6f  
  
 次に示しますがどのように同じ <xref:System.Windows.Documents.FlowDocument> の既定の設定を使用してレンダリング <xref:System.Windows.Documents.FlowDocument.LineHeight%2A>\=<xref:System.Double.NaN?displayProperty=fullName>です。  
  
 313722fd-53a8-4011-937e-1f24aab57c86  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentLineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentlineheight)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentLineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentlineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> が負の値に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.LineHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.LineHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定内のテキストの行ごとに行ボックスを決定する際、メカニズム、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>いずれか、 <see cref="T:System.Windows.LineStackingStrategy" /> 内のテキストの行ごとに行ボックスを決定する際のメカニズムを指定する値、 <see cref="T:System.Windows.Documents.FlowDocument" />です。 既定値は、<see cref="F:System.Windows.LineStackingStrategy.MaxHeight" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例を使用する方法を示しています、 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> テキスト行の行のボックスを作成する方法を決定するプロパティ、 <xref:System.Windows.Controls.TextBlock>です。 最初の <xref:System.Windows.Controls.TextBlock> が、 <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> の値 <xref:System.Windows.LineStackingStrategy.MaxHeight> 、2 番目 <xref:System.Windows.Controls.TextBlock> の値を持つ <xref:System.Windows.LineStackingStrategy.BlockLineHeight>です。  
  
 [!code-xml[FlowMiscSnippets\_snip\#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 次の図は、上記のコードの結果を示しています。  
  
 a45cbc99-0776-48dc-82f0-05ebbb744b85  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy" /> 依存関係プロパティを識別します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>論理的な子を反復処理できる列挙子を取得、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>論理的な子の列挙子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageHeight">
      <MemberSignature Language="C#" Value="public double MaxPageHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxPageHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MaxPageHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大の高さを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大の高さ \(デバイスに依存しないピクセル単位\)。 既定値は <see cref="F:System.Double.PositiveInfinity" /> です \(ページの最大の高さはありません\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 連続的に表示する場合、 <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティよりも優先、 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティで、さらによりも優先、 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティです。 3 つすべてのプロパティは、特定のページに設定されている場合は、プロパティが評価される順序になります。  
  
 このプロパティは持たないされるときに有効 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> に設定されている <xref:System.Double.NaN?displayProperty=fullName> \(auto\)。  
  
<a name="xamlAttributeUsage_MaxPageHeight"></a>   
## XAML 属性の使用方法  
  
```  
<object MaxPageHeight="double"/>  
- or -  
<object MaxPageHeight="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxPageHeight"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に、次の単位指定子のいずれか: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
<a name="dependencyPropertyInfo_MaxPageHeight"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.MaxPageHeightProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxPageHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxPageHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageWidth">
      <MemberSignature Language="C#" Value="public double MaxPageWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxPageWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MaxPageWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大幅を取得または設定します。</summary>
        <value>デバイスに依存しないピクセル単位の、<see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最大幅。 既定値は <see cref="F:System.Double.PositiveInfinity" /> \(ページの最大幅なし\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 連続的に表示する場合、 <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティよりも優先、 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティで、さらによりも優先、 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティです。 3 つすべてのプロパティは、特定のページに設定されている場合は、プロパティが評価される順序になります。  
  
 このプロパティは持たないされるときに有効 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> に設定されている <xref:System.Double.NaN?displayProperty=fullName> \(auto\)。  
  
<a name="xamlAttributeUsage_MaxPageWidth"></a>   
## XAML 属性の使用方法  
  
```  
<object MaxPageWidth="double"/>  
- or -  
<object MaxPageWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxPageWidth"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に、次の単位指定子のいずれか: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
<a name="dependencyPropertyInfo_MaxPageWidth"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.MaxPageWidthProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPageWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxPageWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxPageWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageHeight">
      <MemberSignature Language="C#" Value="public double MinPageHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinPageHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MinPageHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小の高さを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小の高さ \(デバイスに依存しないピクセル単位\)。 既定値は 0.0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 連続的に表示する場合、 <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティよりも優先、 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティで、さらによりも優先、 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティです。 3 つすべてのプロパティは、特定のページに設定されている場合は、プロパティが評価される順序になります。  
  
 このプロパティは持たないされるときに有効 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> に設定されている <xref:System.Double.NaN?displayProperty=fullName> \(auto\)。  
  
<a name="xamlAttributeUsage_MinPageHeight"></a>   
## XAML 属性の使用方法  
  
```  
<object MinPageHeight="double"/>  
- or -  
<object MinPageHeight="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinPageHeight"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に、次の単位指定子のいずれか: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
<a name="dependencyPropertyInfo_MinPageHeight"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.MinPageHeightProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinPageHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinPageHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageWidth">
      <MemberSignature Language="C#" Value="public double MinPageWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinPageWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.MinPageWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小幅を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの最小幅 \(デバイスに依存しないピクセル数\)。 既定値は 0.0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 連続的に表示する場合、 <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティよりも優先、 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティで、さらによりも優先、 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティです。 3 つすべてのプロパティは、特定のページに設定されている場合は、プロパティが評価される順序になります。  
  
 このプロパティは持たないされるときに有効 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> に設定されている <xref:System.Double.NaN?displayProperty=fullName> \(auto\)。  
  
<a name="xamlAttributeUsage_MinPageWidth"></a>   
## XAML 属性の使用方法  
  
```  
<object MinPageWidth="double"/>  
- or -  
<object MinPageWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinPageWidth"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に、次の単位指定子のいずれか: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
<a name="dependencyPropertyInfo_MinPageWidth"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.MinPageWidthProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPageWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinPageWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinPageWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、特定 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> を組み込むことも、 Windows Presentation Foundation (WPF) インフラストラクチャです。</summary>
        <returns>型固有の <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 実装。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドの実装は、通常、特定のコンス トラクターを呼び出す <xref:System.Windows.Automation.Peers.AutomationPeer> 実装、および結果が返されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">関連付けられているイベントの引数。</param>
        <summary>要素に存在する 1 つ以上の依存関係プロパティの有効な値が変更された場合に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Windows.FrameworkContentElement.OnPropertyChanged%2A?displayProperty=fullName>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PageHeight">
      <MemberSignature Language="C#" Value="public double PageHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PageHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.PageHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な高さを取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な高さ \(デバイス非依存のピクセル\)。<see cref="F:System.Double.NaN" /> の値 \(属性値 "<c>Auto</c>" に相当\) により、ページの高さが自動的に決まります。 既定値は、<see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 連続的に表示する場合、 <xref:System.Windows.Documents.FlowDocument.MinPageHeight%2A> プロパティよりも優先、 <xref:System.Windows.Documents.FlowDocument.MaxPageHeight%2A> プロパティで、さらによりも優先、 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティです。 3 つすべてのプロパティは、特定のページに設定されている場合は、プロパティが評価される順序になります。  
  
<a name="xamlAttributeUsage_PageHeight"></a>   
## XAML 属性の使用方法  
  
```  
<object PageHeight="double"/>  
- or -  
<object PageHeight="qualifiedDouble"/>  
- or -  
<object PageHeight="Auto"/>  
```  
  
<a name="xamlValues_PageHeight"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に、次の単位指定子のいずれか: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 *自動*  
 ページの高さが自動的に決まるをさせます。  プロパティの値と等価 <xref:System.Double.NaN?displayProperty=fullName>します。  
  
<a name="dependencyPropertyInfo_PageHeight"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.PageHeightProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.PageHeight%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PageHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PageHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.PageHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.PageHeight" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePadding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness PagePadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness PagePadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.PagePadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの境界とページのコンテンツとの間に埋め込むスペースの幅を示す値を取得または設定します。</summary>
        <value>適用する埋め込みの量を指定する <see cref="T:System.Windows.Thickness" /> 構造体。デバイス非依存のピクセル単位で指定します。 既定では 0 \(0.0\) の均一の幅です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.FlowDocument.PagePadding%2A> すべての方向に一貫したとして記述できます \(`PagePadding="10"`\)、または 4 つの値を表す左、上、右、し、下のパディングを個別に \(`PagePadding="5,0,10,20"`\)。  
  
 指定された埋め込み太さは、対応するページ サイズを超える場合 \(たとえば、左と右のパディングの幅の合計は、ページの幅を超える場合\)、関連するページのサイズを超えることに、パディングの太さを比例的に削減されます。  
  
<a name="xamlAttributeUsage_PagePadding"></a>   
## XAML 属性の使用方法  
  
```  
<object PagePadding="uniformThickness"/>  
- or -  
<object PagePadding="independentThickness"/>  
- or -  
<object PagePadding="qualifiedUniformThickness"/>  
- or -  
<object PagePadding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_PagePadding"></a>   
## XAML 値  
 *uniformThickness*  
 1 つの文字列表現 <xref:System.Double> 4 つすべての厚みに一様に分布を適用する値。  たとえばの値 `"10"` はの値と同じ `"10,10,10,10"`します。  修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *independentThickness*  
 順序付けになる 4 つの文字列表現 <xref:System.Double> 上、左の太さの独立したディメンションに対応する値が右、および、下には、次の順序で。  4 つの値をコンマで区切る必要があります。スペースは使用できません。  たとえば、「5,10,15,20」によって 5 ピクセルの余白のコンテンツ、コンテンツの上の余白が 10 ピクセル、右の余白の 15 のピクセルおよびコンテンツの下の余白の 20 ピクセルの左側です。  
  
 *qualifiedUniformThickness*  
 記述された値 *uniformThickness* 次の単位指定子のいずれかが続きます。 `px`, 、`in`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 たとえば、 `"1in"` すべての方向に 1 インチの統一されたパディングを提供します。  
  
 *qualifiedIndependentThickness*  
 記述された値 *independentThickness*, 、独立した各値は、次の単位指定子のいずれかが続きます。 `px`, 、`in`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 たとえば、`"1.5in,0.8in,1.5in,0.8in"` のようにします。  単位指定子は、混合または 1 つまたは複数の値からを省略すると場合があります。  
  
<a name="dependencyPropertyInfo_PagePadding"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.PagePaddingProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例は、設定するさまざまな方法を示して、 <xref:System.Windows.Documents.FlowDocument.PagePadding%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpaddingxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.PagePadding%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpadding)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpadding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PagePaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PagePaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PagePaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.PagePaddingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.PagePadding" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PageWidth">
      <MemberSignature Language="C#" Value="public double PageWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PageWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.PageWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な幅を取得または設定します。</summary>
        <value>
          <see cref="T:System.Windows.Documents.FlowDocument" /> 内のページの適切な幅 \(デバイス非依存のピクセル\)。<see cref="F:System.Double.NaN" /> の値 \(属性値 "<c>Auto</c>" に相当\) により、ページの幅が自動的に決まります。 既定値は、<see cref="F:System.Double.NaN" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 連続的に表示する場合、 <xref:System.Windows.Documents.FlowDocument.MinPageWidth%2A> プロパティよりも優先、 <xref:System.Windows.Documents.FlowDocument.MaxPageWidth%2A> プロパティで、さらによりも優先、 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティです。 3 つすべてのプロパティは、特定のページに設定されている場合は、プロパティが評価される順序になります。  
  
<a name="xamlAttributeUsage_PageWidth"></a>   
## XAML 属性の使用方法  
  
```  
<object PageWidth="double"/>  
- or -  
<object PageWidth="qualifiedDouble"/>  
- or -  
<object PageWidth="Auto"/>  
```  
  
<a name="xamlValues_PageWidth"></a>   
## XAML 値  
 *double*  
 <xref:System.Double>  
  
 文字列表現、 <xref:System.Double> 値 0.0 以上 <xref:System.Double.PositiveInfinity?displayProperty=fullName>します。 修飾されていない値は、デバイス非依存のピクセル単位で計測されます。 文字列が必要な小数点を明示的に含まれません。  
  
 *qualifiedDouble*  
 A *二重* 値、上記と後に、次の単位指定子のいずれか: `px`, 、`in`, 、`cm`, 、`pt`です。  
  
 `px` \(既定値\) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` インチです。1 96px \= \=  
  
 `cm` センチメートルを表します。1cm\=\=\(96\/2.54\) px  
  
 `pt` ポイントです。1pt\=\=\(96\/72\) px  
  
 *自動*  
 ページの幅を自動的に決定されますが発生します。  プロパティの値と等価 <xref:System.Double.NaN?displayProperty=fullName>します。  
  
<a name="dependencyPropertyInfo_PageWidth"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.PageWidthProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumentpagewidthheightxaml)]  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.PageWidth%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumentpagewidthheight)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentPageWidthHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumentpagewidthheight)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PageWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PageWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.PageWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.PageWidth" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDpi">
      <MemberSignature Language="C#" Value="public void SetDpi (System.Windows.DpiScale dpiInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDpi(valuetype System.Windows.DpiScale dpiInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.SetDpi(System.Windows.DpiScale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dpiInfo" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="dpiInfo">
          <see cref="T:System.Windows.Media.Visual" /> または <see cref="T:System.Windows.UIElement" /> の表示元の DPI 設定。</param>
        <summary>FlowDocument の DPI を設定することにより、再測定および再表示されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各モニターの DPI シナリオで使用してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.System#IServiceProvider#GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
        <summary>指定した型のサービス オブジェクトを取得します。</summary>
        <returns>
          <paramref name="serviceType." /> 型のサービス オブジェクト。  
  
 または  
  
 <paramref name="serviceType" /> 型のサービス オブジェクトが存在しない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator">
      <MemberSignature Language="C#" Value="System.Windows.Documents.DocumentPaginator System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.DocumentPaginator System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.System#Windows#Documents#IDocumentPaginatorSource#DocumentPaginator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPaginator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実際のページネーションのコンテンツを実行するソース オブジェクトを定義します。</summary>
        <value>実際のコンテンツの改ページ調整を実行するオブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FlowDocument.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキスト コンテンツの水平方向の配置を示す値を取得または設定します。</summary>
        <value>必要な配置を指定する <see cref="T:System.Windows.TextAlignment" /> の値の 1 つ。 既定値は、<see cref="F:System.Windows.TextAlignment.Left" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.TextAlignmentProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>、<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>、<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## 例  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.TextAlignment%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentTextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenttextalignmentxaml)]  
  
 方法を次の図に示す上記 <xref:System.Windows.Documents.FlowDocument> と共に表示される <xref:System.Windows.TextAlignment.Left> テキストの配置 \(既定値\)。  
  
 bfdea1ed-24e6-4686-b104-65547b2b692e  
  
 次に示しますがどのように同じ <xref:System.Windows.Documents.FlowDocument> と共に表示される <xref:System.Windows.TextAlignment.Right> テキストの配置。  
  
 a786348b-6084-4bc3-808a-15c8479cee6f  
  
 次に示しますがどのように同じ <xref:System.Windows.Documents.FlowDocument> と共に表示される <xref:System.Windows.TextAlignment.Center> テキストの配置。  
  
 16731071-bd55-489e-9015-601fdffcde8c  
  
 次の例では、設定する方法、 <xref:System.Windows.Documents.FlowDocument.TextAlignment%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentTextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenttextalignment)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentTextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenttextalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffects">
      <MemberSignature Language="C#" Value="public System.Windows.Media.TextEffectCollection TextEffects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.TextEffectCollection TextEffects" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.TextEffects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextEffectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のテキストに適用する効果、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>A <see cref="T:System.Windows.Media.TextEffectCollection" /> 1 つ以上含む <see cref="T:System.Windows.Media.TextEffect" /> のテキストに適用する効果を定義するオブジェクト、 <see cref="T:System.Windows.Documents.FlowDocument" />です。 既定値は <see langword="null" /> \(効果は適用されません\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
<a name="dependencyPropertyInfo_TextEffects"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FlowDocument.TextEffectsProperty>|  
|メタデータのプロパティを設定するには `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEffectsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextEffectsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextEffectsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FlowDocument.TextEffectsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FlowDocument.TextEffects" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FlowDocument.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストの内容で現在有効な文字体裁のバリエーションを取得、 <see cref="T:System.Windows.Documents.FlowDocument" />です。</summary>
        <value>A <see cref="T:System.Windows.Documents.Typography" /> 現在有効な文字体裁のバリエーションを指定するオブジェクト。 既定の文字体裁値の一覧は、次を参照してください。 <see cref="T:System.Windows.Documents.Typography" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.FlowDocument.Typography%2A> プロパティにのみ適用されます [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] フォント。 文字体裁のバリエーションには、バリアントをサポートしているフォントには影響がありません。  このトピックの詳細については、次を参照してください。 [WPF のタイポグラフィ](http://msdn.microsoft.com/ja-jp/06cbf17b-6eff-4fe5-949d-2dd533e4e1f4)します。  
  
   
  
## 例  
 次の例でさまざまな文字体裁のバリエーションを設定する方法を示しています、 <xref:System.Windows.Documents.FlowDocument.Typography%2A> の属性、 <xref:System.Windows.Documents.FlowDocument> 要素。  
  
 [!code-xml[FlowDocumentSnippets\#\_FlowDocumentTypographyXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml#_flowdocumenttypographyxaml)]  
  
 次の例のさまざまな側面を設定する方法を示しています、 <xref:System.Windows.Documents.FlowDocument.Typography%2A> プロパティ プログラムを使用しています。  
  
 [!code-csharp[FlowDocumentSnippets\#\_FlowDocumentTypography](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowDocumentSnippets/CSharp/Window1.xaml.cs#_flowdocumenttypography)]
 [!code-vb[FlowDocumentSnippets\#\_FlowDocumentTypography](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FlowDocumentSnippets/visualbasic/window1.xaml.vb#_flowdocumenttypography)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FlowDocument" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>