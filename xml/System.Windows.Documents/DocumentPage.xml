<Type Name="DocumentPage" FullName="System.Windows.Documents.DocumentPage">
  <TypeSignature Language="C#" Value="public class DocumentPage : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DocumentPage extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentPage" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ページネータによって生成されるドキュメントのページを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentPage (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.#ctor(System.Windows.Media.Visual)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">ページのビジュアル表現。</param>
        <summary>指定された <see cref="T:System.Windows.Documents.DocumentPage" /> を使用して、<see cref="T:System.Windows.Media.Visual" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DocumentPage (System.Windows.Media.Visual visual, System.Windows.Size pageSize, System.Windows.Rect bleedBox, System.Windows.Rect contentBox);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual visual, valuetype System.Windows.Size pageSize, valuetype System.Windows.Rect bleedBox, valuetype System.Windows.Rect contentBox) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.#ctor(System.Windows.Media.Visual,System.Windows.Size,System.Windows.Rect,System.Windows.Rect)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="pageSize" Type="System.Windows.Size" />
        <Parameter Name="bleedBox" Type="System.Windows.Rect" />
        <Parameter Name="contentBox" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="visual">ページのビジュアル表現。</param>
        <param name="pageSize">ページのサイズ、余白を含む、トリミング後されます。</param>
        <param name="bleedBox">印刷の運用環境に関連する断ち落とし、登録マーク、および論理ページ境界の外の物理的な用紙が表示されて、裁ちトンボの領域があること。</param>
        <param name="contentBox">余白内のページの領域です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Documents.DocumentPage" /> クラスを指定して <see cref="T:System.Windows.Media.Visual" /> 、およびサイズのボックスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `bleedBox` ディメンションが超えることがあります、 `pageSize` 、物理的な用紙は、最後のページ サイズにトリミングすることが予想されるときの寸法します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentPage.BleedBox" />
      </Docs>
    </Member>
    <Member MemberName="BleedBox">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Rect BleedBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BleedBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPage.BleedBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、物理的な用紙上の論理的なページ境界外に表示される、印刷物製作関連の裁ち落とし位置、レジスタ マーク、および裁ちトンボのための領域を取得します。</summary>
        <value>裁ち落としボックス領域のサイズと場所を表す <see cref="T:System.Windows.Rect" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 裁ち落としボックスは、物理的な用紙は、最後のページ サイズにトリミングすることが予想される場合に、ページ外拡張します。  
  
 保護対象の使用 <xref:System.Windows.Documents.DocumentPage.SetBleedBox%2A> このプロパティを設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentPage.BleedBox" />
      </Docs>
    </Member>
    <Member MemberName="ContentBox">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Rect ContentBox { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect ContentBox" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPage.ContentBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、余白の内側、ページの領域を取得します。</summary>
        <value>A <see cref="T:System.Windows.Rect" /> 余白を含まないページの領域を示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 保護対象の使用 <xref:System.Windows.Documents.DocumentPage.SetContentBox%2A> このプロパティを設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.DocumentPage" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Call <xref:System.Windows.Documents.DocumentPage.Dispose%2A> when you are finished using the <xref:System.Windows.Documents.DocumentPage>. The <xref:System.Windows.Documents.DocumentPage.Dispose%2A> method leaves the <xref:System.Windows.Documents.DocumentPage> in an unusable state. After calling <xref:System.Windows.Documents.DocumentPage.Dispose%2A> you must release all references to the <xref:System.Windows.Documents.DocumentPage> so the garbage collector can reclaim the memory that the <xref:System.Windows.Documents.DocumentPage> was occupying. For more information, see [Cleaning Up Unmanaged Resources](http://msdn.microsoft.com/ja-jp/a17b0066-71c2-4ba4-9822-8e19332fc213) and [Implementing a Dispose Method](http://msdn.microsoft.com/ja-jp/eb4e1af0-3b48-4fbc-ad4e-fc2f64138bf9).  
  
> [!NOTE]
>  Always call <xref:System.Windows.Documents.DocumentPage.Dispose%2A> before you release your last reference to the <xref:System.Windows.Documents.DocumentPage>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Documents.DocumentPage> object's **languageKeyword tag is not supported!!!!**  
>  method.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Missing">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Documents.DocumentPage Missing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Documents.DocumentPage Missing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.DocumentPage.Missing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>欠落しているページを表します。 このプロパティは、静的な読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値を返す <xref:System.Windows.Documents.DocumentPage.Missing?displayProperty=fullName> コードの要求には存在しません。 ページを呼び出すときに、たとえば、ページに 1 ページの文書の第 2 です。  
  
 1 つだけの存在しないページ オブジェクトは常にします。 その <xref:System.Windows.Documents.DocumentPage.Visual%2A> プロパティは `null`です。 その <xref:System.Windows.Documents.DocumentPage.Size%2A>, 、<xref:System.Windows.Documents.DocumentPage.BleedBox%2A>, 、および <xref:System.Windows.Documents.DocumentPage.ContentBox%2A> プロパティは、すべて"empty"の特殊な値に設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPageDestroyed">
      <MemberSignature Language="C#" Value="protected void OnPageDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnPageDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.OnPageDestroyed(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Windows.Documents.DocumentPage.PageDestroyed" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageDestroyed">
      <MemberSignature Language="C#" Value="public event EventHandler PageDestroyed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageDestroyed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.DocumentPage.PageDestroyed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="P:System.Windows.Documents.DocumentPage.Visual" /> を示しています、 <see cref="T:System.Windows.Documents.DocumentPage" /> が破棄され、表示には使えないことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBleedBox">
      <MemberSignature Language="C#" Value="protected void SetBleedBox (System.Windows.Rect bleedBox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBleedBox(valuetype System.Windows.Rect bleedBox) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.SetBleedBox(System.Windows.Rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bleedBox" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bleedBox">四角形のサイズと場所を指定するオブジェクト。</param>
        <summary>
          <see cref="P:System.Windows.Documents.DocumentPage.BleedBox" /> のサイズと場所を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 裁ち落としボックスには、必ずしも最終的なトリミング後、物理ページに含まれていない裁ちトンボなどの資料が含まれています。 このため、 <xref:System.Windows.Rect.X%2A> と <xref:System.Windows.Rect.Y%2A> の調整、 `bleedBox` パラメーターでは、ページの左上隅に対して相対的に指定されているために負の数値を指定できます。 同じ理由から、 <xref:System.Windows.Rect.Height%2A> と <xref:System.Windows.Rect.Width%2A> の `bleedBox` ページの幅と高さを上回ることがあります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentBox">
      <MemberSignature Language="C#" Value="protected void SetContentBox (System.Windows.Rect contentBox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetContentBox(valuetype System.Windows.Rect contentBox) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.SetContentBox(System.Windows.Rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentBox" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="contentBox">四角形のサイズと場所を指定するオブジェクト。</param>
        <summary>ディメンションとの位置を設定、 <see cref="P:System.Windows.Documents.DocumentPage.ContentBox" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="protected void SetSize (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetSize(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.SetSize(System.Windows.Size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">ページのサイズ。</param>
        <summary>トリミング後の、物理ページの <see cref="P:System.Windows.Documents.DocumentPage.Size" /> を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVisual">
      <MemberSignature Language="C#" Value="protected void SetVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentPage.SetVisual(System.Windows.Media.Visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">ページのビジュアル表現。</param>
        <summary>セット、 <see cref="P:System.Windows.Documents.DocumentPage.Visual" /> は、ページを示しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Size Size { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPage.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、トリミング後のページの実際のサイズを取得します。</summary>
        <value>ページの高さと幅を表す <see cref="T:System.Windows.Size" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、物理的なページのトリミング後のサイズを表します。 そのためは必ずしも、シートの物理サイズ トリミングされる前に  
  
 保護対象の使用 <xref:System.Windows.Documents.DocumentPage.SetSize%2A> このプロパティを設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visual">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Visual Visual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Visual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentPage.Visual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、ページの視覚的表現を取得します。</summary>
        <value>A <see cref="T:System.Windows.Media.Visual" /> ページが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 保護対象の使用 <xref:System.Windows.Documents.DocumentPage.SetVisual%2A> このプロパティを設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.DocumentPage" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>