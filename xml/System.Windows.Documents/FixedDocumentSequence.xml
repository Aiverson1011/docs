<Type Name="FixedDocumentSequence" FullName="System.Windows.Documents.FixedDocumentSequence">
  <TypeSignature Language="C#" Value="public class FixedDocumentSequence : System.Windows.FrameworkContentElement, IServiceProvider, System.Windows.Documents.IDocumentPaginatorSource, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FixedDocumentSequence extends System.Windows.FrameworkContentElement implements class System.IServiceProvider, class System.Windows.Documents.IDocumentPaginatorSource, class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.FixedDocumentSequence" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkContentElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Documents.IDocumentPaginatorSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("References")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>固定されたドキュメントの順序を定義する 1 つ以上の <see cref="T:System.Windows.Documents.DocumentReference" /> 要素をホストします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.FixedDocumentSequence> 1 つの単位として構成されている 1 つ以上の固定ドキュメントの順序付けられたシーケンスをホストします。  
  
 <xref:System.Windows.Documents.DocumentReference> のみ使用可能な子要素、 <xref:System.Windows.Documents.FixedDocumentSequence>です。  各 <xref:System.Windows.Documents.DocumentReference> 、1 つを指す <xref:System.Windows.Documents.FixedDocument>します。 ドキュメントの参照要素は、固定のドキュメントが処理される順序と一致する順番にする必要があります。  
  
 コレクション、 <xref:System.Windows.Documents.DocumentReference> に含まれる要素を <xref:System.Windows.Documents.FixedDocumentSequence> を使用して取得できます、 <xref:System.Windows.Documents.FixedDocumentSequence.References%2A> プロパティです。  
  
   
  
## 例  
 次の例を取得する方法を表示する、 <xref:System.Windows.Documents.FixedDocumentSequence> の <xref:System.Windows.Xps.Packaging.XpsDocument> を使用すると、 <xref:System.Windows.Xps.Packaging.XpsDocument.GetFixedDocumentSequence%2A> メソッドです。  
  
 [!code-csharp[XpsSave\#XpsSaveLoadFixedContent](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/Window1.xaml.cs#xpssaveloadfixedcontent)]
 [!code-vb[XpsSave\#XpsSaveLoadFixedContent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/window1.xaml.vb#xpssaveloadfixedcontent)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedDocumentSequence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocumentSequence.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentPaginator">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.DocumentPaginator DocumentPaginator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.DocumentPaginator DocumentPaginator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocumentSequence.DocumentPaginator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPaginator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得のページネータ、 <see cref="T:System.Windows.Documents.FixedDocument" /> など、特定のページを取得し、変更に応じて改ページ指向のサービスを提供します。</summary>
        <value>派生したクラスのオブジェクト <see cref="T:System.Windows.Documents.DocumentPaginator" /> 改ページ調整サービスを提供します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クラスを派生する場合は、ドキュメントへのコンテンツを追加するなどの変更に応答に改ページを自動でページネータ <xref:System.Windows.Documents.DynamicDocumentPaginator> が <xref:System.Windows.Documents.DocumentPaginator>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素にアクセスするための列挙子を取得します。</summary>
        <value>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素にアクセスするための列挙子。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocumentSequence.OnCreateAutomationPeer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シーケンスのオートメーション ピアを作成します。</summary>
        <returns>A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> を公開する、 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> Microsoft UI オートメーションを使用します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Your derived version can return any <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, it does not have to be a <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public object PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Printing.PrintTicket" /> このドキュメントのシーケンスに関連付けられています。</summary>
        <value>
          <see cref="T:System.Printing.PrintTicket" /> このシーケンスのです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Printing.PrintTicket> 各用紙の両面に印刷するかどうかなど、印刷の情報が含まれています。  
  
 この設定 <xref:System.Windows.Documents.FixedDocumentSequence.PrintTicket%2A> プロパティは検証したり変更したりしない、指定した <xref:System.Printing.PrintTicket> 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
<a name="dependencyPropertyInfo_PrintTicket"></a>   
## 依存プロパティ情報  
  
|||  
|-|-|  
|識別子のフィールド|<xref:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty>|  
|メタデータのプロパティを設定するには `true`|なし|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTicketProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PrintTicketProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PrintTicketProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket" /> 依存関係プロパティを識別します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="References">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.DocumentReferenceCollection References { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.DocumentReferenceCollection References" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocumentSequence.References" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素のコレクションを取得します。</summary>
        <value>ドキュメント シーケンスの <see cref="T:System.Windows.Documents.DocumentReference" /> 子要素のコレクション。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocumentSequence.System#IServiceProvider#GetService(System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">取得対象となるサービスの型を指定するオブジェクト。</param>
        <summary>指定した型のサービス オブジェクトを取得します。</summary>
        <returns>型のサービス オブジェクト <paramref name="serviceType" />します。  
  
 または  
  
 <paramref name="serviceType" /> 型のサービス オブジェクトが存在しない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">追加する子オブジェクト。</param>
        <summary>子オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">オブジェクトに追加するテキスト。</param>
        <summary>オブジェクトにノードのテキスト コンテンツを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocumentSequence.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーション コンテキストのベース URI を取得または設定します。</summary>
        <value>アプリケーション コンテキストのベース URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>