<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>1 つのソースとも呼ばれるソース特定マルチキャスト \(SSM\) からのマルチキャスト トラフィックのクライアント受信者。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 マルチキャスト グループ アドレスとセンダの送信元アドレスが認識する必要があります。  
  
 特定の差出人からマルチキャスト データを受け取るだけでなく、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> クライアントはまた、送信者に送り返すユニキャスト データを送信します。  
  
 複数のソースからマルチキャストを受信するか、ソースは、事前にわかっている場合に使用して、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> クラスの代わりにします。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">この受信者にとってサブスクライブ先となる送信者の発信元アドレス。</param>
        <param name="groupAddress">この受信者にとってサブスクライブ先となるマルチキャスト グループのアドレス。</param>
        <param name="localPort">この受信者がバインドするローカルのポート。</param>
        <summary>グループ アドレスにサブスクライブし、1 つのソースからデータグラムを受信することが可能な、新しい <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP クライアントを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンス トラクターは、グループ アドレスおよびポート、UDP マルチキャスト ソケットを関連付けますはないバインドまたはそれ以外の場合、ソケットを使用します。  
  
 `groupAddress` パラメーターにあります IPv6 または IPv4 マルチキャスト アドレス。 ただしのアドレス ファミリ、 `sourceAddress` と `groupAddress` パラメーターでは、同じ必要があります。  
  
 `localPort` 1,024 より小さい、ポート パラメーターを指定する必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceAddress" /> および <paramref name="groupAddress" /> は同じアドレス ファミリである必要があります。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceAddress" /> が null 参照 \(Visual Basic では Nothing\) です。  
  
 または  
  
 <paramref name="groupAddress" /> が null 参照 \(Visual Basic では Nothing\) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> が 0 未満です。  
  
 または  
  
 <paramref name="localPort" /> が 65,535 より大きい値です。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <paramref name="localPort" /> が 1024 より小さい値です。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <c>callback</c> メソッドに渡す省略可能な状態情報。</param>
        <summary>ソケットをバインドし、マルチキャスト グループへの結合操作を開始して、単一の始点アドレスからデータグラムを受信できるようにします。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> を返します。  
  
 この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> メソッドは、ローカル ポートにマルチキャストの UDP ソケットをバインドし、1 つのソース アドレスから受信されるまでのデータグラムを許可するようにマルチキャスト グループに参加します。 マルチキャスト グループ アドレスと 1 つのソース アドレスをバインドするローカル ポートがで指定された、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> コンス トラクターです。  
  
 指定されたメソッド、 `callback` パラメーターはマルチキャスト グループに参加する操作が完了したときに呼び出されます。  
  
 ランタイムで必要な場合、  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> メソッドも、クライアントがマルチキャスト グループへのアクセス許可されていることを確認するポリシーの確認を実行します。 クライアントが、アクセスを許可されていない場合、 <xref:System.Net.Sockets.SocketException> と共にスローされます <xref:System.Net.Sockets.SocketError.AccessDenied>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループは、既に結合されているか、または結合操作が現在進行中です。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> が破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 詳細については、「解説」を参照してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">受信したデータを格納するバッファー。</param>
        <param name="offset">データの保存先になる、<c>buffer</c> の先頭からのバイト単位のオフセット。</param>
        <param name="count">
          <c>buffer</c> で受信および格納するバイトの最大数。</param>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <c>callback</c> メソッドに渡す、省略可能な状態情報。</param>
        <summary>参加したマルチキャスト グループからのパケットを受信する操作を開始し、指定された送信元からグループにパケットが届いたときに、指定されたコールバックを呼び出します。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> を返します。  
  
 この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The [BeginReceiveFromSource メソッド \(Byte\<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender. The local port, multicast group, and sender source address are specified in the [BeginReceiveFromSource メソッド \(Byte\<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.  
  
 The method specified in the **parameterReference tag is not supported!!!!**  
 parameter is invoked when a packet has received.  
  
 It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a [BeginReceiveFromSource メソッド \(Byte\<xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the [BeginReceiveFromSource メソッド \(Byte\<xref:System.Net.Sockets.SocketError> enumeration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> が null 参照 \(Visual Basic では Nothing\) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> が 0 未満です。  
  
 または  
  
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
 または  
  
 <paramref name="count" /> が 0 未満です。  
  
 または  
  
 <paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループにまだ参加していません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">受信のためにソケットにアクセスしようとして、エラーが発生しました。 詳細については、「解説」を参照してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">送信するデータが格納されているバッファー。</param>
        <param name="offset">送信するデータを読み取る <c>buffer</c> の先頭からのバイト単位のオフセット。</param>
        <param name="count">
          <c>buffer</c> から送信するバイト数。</param>
        <param name="remotePort">パケットを送信するリモート ポート。 リモートのアドレスが指定された、 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> コンス トラクターです。</param>
        <param name="callback">操作の完了時に呼び出されるコールバック メソッド。</param>
        <param name="state">この操作の <c>callback</c> メソッドに渡す、省略可能な状態情報。</param>
        <summary>前に指定された送信元にユニキャスト パケットを送信する操作を開始します。</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> を返します。  
  
 この操作を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 [BeginSendToSource メソッド \(Byte\<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドは、以前に指定したソースに UDP パケットを送信する操作を開始します。  
  
 一部のプロトコルでは、この情報を使用して、サービスの統計、または復旧メッセージの品質のフロー制御を渡します。  
  
 指定されたメソッド、 `callback` パケットが送信されたときに、パラメーターは呼び出されます。  
  
 クライアントは、マルチキャスト グループに結合を完了する必要があります。  
  
 宛先ポートが指定されている場合、 `remotePort` パラメーターは、1,024 より小さい、 [BeginSendToSource メソッド \(Byte\<xref:System.Net.Sockets.SocketException> と共にスローされます [BeginSendToSource メソッド \(Byte\<xref:System.Net.Sockets.SocketError.AccessDenied>します。  
  
 これは udp 一般的ではない送信操作が同期的に、失敗した場合は、ソケットの問題がある行うことができます。 ソケット エラーが発生した場合、 [BeginSendToSource メソッド \(Byte\<xref:System.Net.Sockets.SocketException> がスローされます。 メンバーとして表示されるエラーが指定されている、 [BeginSendToSource メソッド \(Byte\<xref:System.Net.Sockets.SocketError> 列挙します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> が null 参照 \(Visual Basic では Nothing\) です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> が 0 未満です。  
  
 または  
  
 <paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。  
  
 または  
  
 <paramref name="count" /> が 0 未満です。  
  
 または  
  
 <paramref name="offset" /> にカウントを加算した値が <paramref name="buffer" /> の長さを超えています。  
  
 または  
  
 <paramref name="remotePort" /> が 0 より小さいか、または 65,535 を超えています。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ参加していません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 詳細については、「解説」を参照してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マルチキャスト グループへの参加を終了し、<see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> クラスの現在のインスタンスによって使用されたリソースと、基になる <see cref="T:System.Net.Sockets.Socket" /> によって使用されたリソースをすべて解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.  
  
 Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">非同期の参加操作の結果。</param>
        <summary>マルチキャスト グループに対する非同期のグループ参加操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.  
  
 If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> が null 参照 \(Visual Basic では Nothing\) です。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 詳細については、「解説」を参照してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, int32 sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">非同期の受信操作の結果。</param>
        <param name="sourcePort">パケットの受信元のソース エンドポイント。</param>
        <summary>参加しているマルチキャスト グループからパケットを受信する非同期の操作を完了し、受信した情報を提供します。</summary>
        <returns>
          <see cref="T:System.Int32" /> を返します。  
  
 <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> メソッドに渡される <paramref name="buffer" /> パラメーターに格納されたメッセージの長さ \(バイト単位\)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.  
  
 If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> が null 参照 \(Visual Basic では Nothing\) です。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 詳細については、「解説」を参照してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">非同期の送信操作の結果。</param>
        <summary>単一のソースにユニキャスト パケットを送信する操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.  
  
 If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> が null 参照 \(Visual Basic では Nothing\) です。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ結合されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
        <exception cref="T:System.Net.Sockets.SocketException">ソケットへのアクセスを試行しているときにエラーが発生しました。 詳細については、「解説」を参照してください。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> インスタンスのマルチキャストの受信操作に使用される <see cref="T:System.Net.Sockets.Socket" /> の受信バッファーのバイト単位のサイズを取得または設定します。</summary>
        <value>
          <see cref="T:System.Int32" /> を返します。  
  
 受信バッファー サイズ \(バイト単位\)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `ReceiveBufferSize` プロパティを取得または、基になる受信バッファーのバイト単位のサイズを設定 <xref:System.Net.Sockets.Socket> このマルチキャストの受信操作に使用される <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> インスタンス。 具体的には、 `ReceiveBufferSize` プロパティは、パケットが到着すると、アプリケーションがまだ呼び出されない場合、スタックが使用するバッファーのサイズを制御、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドです。 このバッファーがいっぱいにし、アプリケーションの呼び出しの前にパケットを受け取った場合、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> と <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> メソッド、古いパケットは破棄されます。 アプリケーションは、古いパケットを受信することはできませんし、新しいパケットを呼び出すときに表示されます、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> メソッドです。  
  
 Windows 上の受信バッファーの既定のサイズは 8,192 です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたバッファー サイズは 0 より小さいです。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ参加していません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> は破棄されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> インスタンスのマルチキャストの送信操作に使用される <see cref="T:System.Net.Sockets.Socket" />の送信バッファーのバイト単位のサイズを取得または設定します。</summary>
        <value>
          <see cref="T:System.Int32" /> を返します。  
  
 送信バッファーのバイト単位のサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 SendBufferSize プロパティを取得または、基になる送信バッファーのバイト単位のサイズを設定 <xref:System.Net.Sockets.Socket> このマルチキャスト送信操作で使用される <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> インスタンス。  
  
 Mac OS x、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティへの呼び出しを追加する前に、ネットワーク スタックの待機中\-\-\-送信するバッファーのバイト数ができる制御、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドの開始が失敗します。 Mac OS X 上のアプリケーションは、短期間で多数の UDP パケットを送信する場合に、このプロパティを考慮する必要があります。  
  
 Windows では、呼び出し、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> メソッドが呼び出すコールバックの値に応じて長い時間がかかり、 <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティ送信バッファーがいっぱいの場合。<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> プロパティ コントロールだけが、送信が完了するまでに物理メモリにロックされているユーザーのバッファーのままかどうか。  
  
 Windows 上の送信バッファーの既定のサイズは 8,192 です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたバッファー サイズは 0 より小さいです。</exception>
        <exception cref="T:System.InvalidOperationException">マルチキャスト グループはまだ参加していません。</exception>
        <exception cref="T:System.ObjectDisposedException">
          <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> が破棄されています。</exception>
      </Docs>
    </Member>
  </Members>
</Type>