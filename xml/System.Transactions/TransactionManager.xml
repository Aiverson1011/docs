<Type Name="TransactionManager" FullName="System.Transactions.TransactionManager">
  <TypeSignature Language="C#" Value="public static class TransactionManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed TransactionManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.TransactionManager" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>トランザクションの管理に使用するメソッドが含まれています。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスには、静的プロパティおよびメソッドのトランザクション オプションの既定値に関する情報を取得するために使用が含まれています。 永続的なリソースが失敗した場合、永続性リソースの回復に使用する複数の静的メソッドも含まれています。 特別な操作は必要ありません、永続性リソースの Microsoft 分散トランザクション コーディネーター \(MSDTC\) が失敗した場合です。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DefaultTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan DefaultTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan DefaultTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.TransactionManager.DefaultTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいトランザクションの既定のタイムアウト間隔を取得します。</summary>
        <value>A <see cref="T:System.TimeSpan" /> 新しいトランザクションのタイムアウト間隔を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 トランザクションのタイムアウト間隔は、トランザクションが完了する必要がある時間です。 タイムアウト期間内のすべてのトランザクション参加要素から、トランザクション マネージャー通信がなかった場合、に、トランザクションを中止します。  
  
 この値を設定できます、 `DefaultSettingsSection` 構成ファイルのです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DistributedTransactionStarted">
      <MemberSignature Language="C#" Value="public static event System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Transactions.TransactionStartedEventHandler DistributedTransactionStarted" />
      <MemberSignature Language="DocId" Value="E:System.Transactions.TransactionManager.DistributedTransactionStarted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.TransactionStartedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>分散トランザクションが開始されたことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 **注意** サインアップこのイベントは、すべての分散トランザクションのパフォーマンスを低下させます。 ローカル トランザクションは、パフォーマンスがさらに影響を受けるには監視されません。  
  
 **注** このメソッドを使用して <xref:System.Security.Permissions.SecurityAction.LinkDemand> されないようにすることには、信頼できないコードからと呼ばれます。 ただし、直前の呼び出し元だけが所有する必要が、 `FullTrust` アクセス許可セットです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostCurrentCallback">
      <MemberSignature Language="C#" Value="public static System.Transactions.HostCurrentTransactionCallback HostCurrentCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Transactions.HostCurrentTransactionCallback HostCurrentCallback" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.TransactionManager.HostCurrentCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.HostCurrentTransactionCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはカスタム トランザクション ファクトリを設定します。</summary>
        <value>A <see cref="T:System.Transactions.HostCurrentTransactionCallback" /> カスタム トランザクション ファクトリを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 **注** このメソッドを使用して <xref:System.Security.Permissions.SecurityAction.LinkDemand> されないようにすることには、信頼できないコードからと呼ばれます。 ただし、直前の呼び出し元だけが所有する必要が、 `FullTrust` アクセス許可セットです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan MaximumTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan MaximumTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.TransactionManager.MaximumTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新しいトランザクションの既定の最大タイムアウト間隔を取得します。</summary>
        <value>A <see cref="T:System.TimeSpan" /> 新しいトランザクションを作成する場合に許可される最大タイムアウト間隔を指定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 タイムアウト間隔の詳細については、ドキュメントを参照して、 <xref:System.Transactions.TransactionManager.DefaultTimeout%2A> プロパティです。  
  
 この値を設定できます、 `MachineSettingsSection` 構成ファイルのです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecoveryComplete">
      <MemberSignature Language="C#" Value="public static void RecoveryComplete (Guid manager);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RecoveryComplete(valuetype System.Guid manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceManagerIdentifier" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <summary>障害から復旧するリソース マネージャーのすべての未解決のトランザクションに再参加させることが完了したことをトランザクション マネージャーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 初回起動時呼び出すことによって、すべての永続的リソース マネージャーでの回復を実行する必要があります、 <xref:System.Transactions.TransactionManager.Reenlist%2A> 未処理のトランザクションごとのメソッドです。  すべての再参加を行うときにのみ呼び出す必要があります、リソース マネージャー <xref:System.Transactions.TransactionManager.RecoveryComplete%2A>します。  
  
 回復の詳細については、「[Performing Recovery](http://msdn.microsoft.com/ja-jp/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)」を参照してください。  
  
 **注** このメソッドを使用して <xref:System.Security.Permissions.SecurityAction.LinkDemand> されないようにすることには、信頼できないコードからと呼ばれます。 ただし、直前の呼び出し元だけが所有する必要が、 `FullTrust` アクセス許可セットです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceManagerIdentifier" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reenlist">
      <MemberSignature Language="C#" Value="public static System.Transactions.Enlistment Reenlist (Guid manager, byte[] recoveryInfo, System.Transactions.IEnlistmentNotification notification);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Enlistment Reenlist(valuetype System.Guid manager, unsigned int8[] recoveryInfo, class System.Transactions.IEnlistmentNotification notification) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionManager.Reenlist(System.Guid,System.Byte[],System.Transactions.IEnlistmentNotification)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Enlistment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceManagerIdentifier" Type="System.Guid" />
        <Parameter Name="recoveryInformation" Type="System.Byte[]" />
        <Parameter Name="enlistmentNotification" Type="System.Transactions.IEnlistmentNotification" />
      </Parameters>
      <Docs>
        <param name="manager">To be added.</param>
        <param name="recoveryInfo">To be added.</param>
        <param name="notification">To be added.</param>
        <summary>トランザクションで永続参加要素を reenlists します。</summary>
        <returns>
          <see cref="T:System.Transactions.Enlistment" /> 、参加リストを記述します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リソース マネージャーは、リソース障害の後にトランザクション参加要素を再参加させることにより、トランザクションの永続参加リストの解決を容易にします。  
  
 `resourceManagerIdentifier` パラメーターは、リソース障害発生時のトランザクションの参加要素を一貫したラベル付けに使用します。  呼び出すときに、 [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.TransactionManager.Reenlist%2A> メソッドは、リソース マネージャー必要があります提供同じ `resourceManagerIdentifier` もともと呼び出されたときに使用されるので、 [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.Transaction.EnlistDurable%2A> 参加中に、メソッド、または [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.TransactionException> がスローされます。  
  
 参加要素がこのメソッドを使用して再参加すると、トランザクションの結果に対応した [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.IEnlistmentNotification> のフェーズ 2 のメソッド \(つまり、[Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.IEnlistmentNotification.Commit%2A>、[Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>、または [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>\) が必要に応じて呼び出されます。  
  
 呼び出す必要がありますし、参加要素が正常に再参加させる後、 [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.TransactionManager.RecoveryComplete%2A> 、復旧を完了します。  
  
 障害からリソース マネージャーの再起動時にのみ、このメソッドを呼び出す必要があります。 また、2 フェーズ コミットの最初の準備フェーズ中に、リソース マネージャーによってログ記録された未解決トランザクションのみを再参加させる必要があります。 無効な時間にこのメソッドを呼び出した場合、間違った結果が生成される可能性があります。  
  
 トランザクション マネージャーが失敗すると、リソース マネージャーが実行して場合回復短時間のみを呼び出した後に、 [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.PreparingEnlistment.Prepared%2A> フェーズ 1 で 2 フェーズ コミット プロトコルの参加リストのメソッドは、リソース マネージャーは受信可能性がありますか、 [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> または [Reenlist メソッド \(Guid, Byte\<xref:System.Transactions.IEnlistmentNotification.Rollback%2A> コールバックします。  
  
 回復の詳細については、「[Performing Recovery](http://msdn.microsoft.com/ja-jp/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)」を参照してください。  
  
 **注** このメソッドを使用して [Reenlist メソッド \(Guid, Byte\<xref:System.Security.Permissions.SecurityAction.LinkDemand> されないようにすることには、信頼できないコードからと呼ばれます。 ただし、直前の呼び出し元だけが所有する必要が、 `FullTrust` アクセス許可セットです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="recoveryInformation" /> が無効です。  
  
 または  
  
 内のトランザクション マネージャー情報 <paramref name="recoveryInformation" /> 構成済みのトランザクション マネージャーと一致しません。  
  
 または  
  
 <paramref name="RecoveryInformation" /> 認識されない <see cref="N:System.Transactions" />します。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Transactions.TransactionManager.RecoveryComplete(System.Guid)" /> 既に呼び出されて、指定された <paramref name="resourceManagerIdentifier" />します。 スローされたは拒否されます。</exception>
        <exception cref="T:System.Transactions.TransactionException">
          <paramref name="resourceManagerIdentifier" /> で指定された回復情報の内容と一致しない <paramref name="recoveryInformation" />します。</exception>
      </Docs>
    </Member>
  </Members>
</Type>