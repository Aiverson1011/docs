<Type Name="IPromotableSinglePhaseNotification" FullName="System.Transactions.IPromotableSinglePhaseNotification">
  <TypeSignature Language="C#" Value="public interface IPromotableSinglePhaseNotification : System.Transactions.ITransactionPromoter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPromotableSinglePhaseNotification implements class System.Transactions.ITransactionPromoter" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IPromotableSinglePhaseNotification" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Transactions.ITransactionPromoter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>リソース マネージャーの内部非分散トランザクションのコミットの代理として機能するオブジェクトについて説明します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 昇格可能参加リスト \(PSPE\) トランザクションに参加している唯一のエンティティである場合、トランザクションの所有権を取得、データベースなどのリソースを使用できます。 その後、必要な場合は、 <xref:System.Transactions> インフラストラクチャは、MSDTC トランザクションをエスカレートまだことができます。 詳細については、「[Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/ja-jp/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)」を参照してください。  
  
 このインターフェイスを実装するリソース マネージャーで内部の非分散トランザクションに参加リストのコミットの制御の委任、 <xref:System.Transactions> を介してトランザクション、 <xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A> メソッドを <xref:System.Transactions.Transaction> クラスです。  
  
 場合、 <xref:System.Transactions.ITransactionPromoter.Promote%2A?displayProperty=fullName> メソッドが呼び出される、このインターフェイスの実装必要があります伝達トークンの形式で分散トランザクションを生成して返す <xref:System.Transactions>します。  
  
 使用して、トランザクションの参加要素として、このインターフェイスを実装するオブジェクトを登録したら、 <xref:System.Transactions.Transaction.EnlistPromotableSinglePhase%2A> メソッドでは、トランザクション マネージャー、通知、参加要素、トランザクションの昇格、コミット、またはを呼び出してロールバック、 <xref:System.Transactions.ITransactionPromoter.Promote%2A> メソッドを <xref:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit%2A> メソッド、または <xref:System.Transactions.IPromotableSinglePhaseNotification.Rollback%2A> オブジェクトのメソッドです。  
  
 詳細については、「[Optimization Using Single Phase Commit and Promotable Single Phase Notification](http://msdn.microsoft.com/ja-jp/653d51d1-b4bf-4e34-9a6f-aec073f0f5bb)」を参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.Transaction" />
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.Initialize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>トランザクションの参加要素登録リストが正常に完了したことを通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 初期化ロジックのトランザクションに参加する参加しているオブジェクトの準備が必要な場合は、コンス トラクターではなく、このメソッドのロジックを実装することをお勧めします。 この方法では、初期化は、トランザクションの一部として、オブジェクトが正常に参加している場合にのみに発生します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionException">参加させる、またはトランザクションをシリアル化しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.SinglePhaseEnlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.SinglePhaseEnlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.Rollback(System.Transactions.SinglePhaseEnlistment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singlePhaseEnlistment" Type="System.Transactions.SinglePhaseEnlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">To be added.</param>
        <summary>トランザクションのロールバックを参加しているオブジェクトに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この通知を受け取るは常に内部トランザクションと、応答であるロールバックに、PSPE、 <xref:System.Transactions.SinglePhaseEnlistment.Aborted%2A> コールバック メソッドを `singlePhaseEnlistment` パラメーター。  PSPE に返信する場合  <xref:System.Transactions.SinglePhaseEnlistment.Committed%2A> または <xref:System.Transactions.SinglePhaseEnlistment.InDoubt%2A>, 、 <xref:System.InvalidOperationException> コールバックからがスローされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SinglePhaseCommit">
      <MemberSignature Language="C#" Value="public void SinglePhaseCommit (System.Transactions.SinglePhaseEnlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SinglePhaseCommit(class System.Transactions.SinglePhaseEnlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IPromotableSinglePhaseNotification.SinglePhaseCommit(System.Transactions.SinglePhaseEnlistment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singlePhaseEnlistment" Type="System.Transactions.SinglePhaseEnlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">To be added.</param>
        <summary>参加していることを通知オブジェクトのトランザクションがコミットされていること。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドでは、トランザクションをコミットする必要が参加しているオブジェクトに通知します。  
  
 `singlePhaseEnlistment` パラメーターには、トランザクション マネージャーがトランザクションの制御を委任するために、トランザクションを通知するには、このインターフェイスの実装、トランザクションの結果のマネージャーを許可するコールバックが含まれています。 昇格されたトランザクションの場合は、トランザクション マネージャーは、トランザクションの結果をリッスンし、送信される応答をオーバーライドします。  
  
 この通知を受信するには、リソース マネージャーが内部のトランザクション \(またはそれが重大になった場合は、分散トランザクション\) をコミットし、に対して呼び出すコールバック メソッドのいずれかを試行、 `singlePhaseEnlistment` パラメーター トランザクションのコミットの結果に基づいています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>