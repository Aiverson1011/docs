<Type Name="DependentTransaction" FullName="System.Transactions.DependentTransaction">
  <TypeSignature Language="C#" Value="public sealed class DependentTransaction : System.Transactions.Transaction, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DependentTransaction extends System.Transactions.Transaction implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.DependentTransaction" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ようにする、トランザクションがコミットされないトランザクションの載る作業に関して、アプリケーションになるまで、トランザクションの複製をについて説明します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Transactions.DependentTransaction> の複製、 <xref:System.Transactions.Transaction> を使用して作成されたオブジェクト、 <xref:System.Transactions.Transaction.DependentClone%2A> メソッドです。  その唯一の目的は、アプリケーションに移動し \(たとえば、ワーカー スレッド\) でトランザクションの作業が実行されているときにトランザクションをコミットできないことを保証するためにです。  
  
 使用して、トランザクションの作成者を通知できます、複製されたトランザクション内で行われる作業が完了してコミットする準備で最後にとき、 <xref:System.Transactions.DependentTransaction.Complete%2A> メソッドです。 したがって、整合性とデータの正確性を保持できます。  
  
 <xref:System.Transactions.DependentCloneOption> コミット時に動作を決定する列挙体を使用します。  この動作の制御には、アプリケーションを停止できるだけでなく、同時実行サポートが使用できます。 この列挙体の使用方法の詳細については、次を参照してください。 [Managing Concurrency with DependentTransaction](http://msdn.microsoft.com/ja-jp/bdad8468-2a90-4b81-8375-278067120cab)します。  
  
   
  
## 例  
 次の例では、依存トランザクションを作成する方法を示します。  
  
 [!code-csharp[Tx\_DependentTx\#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_dependenttx/cs/dependenttx.cs#1)]
 [!code-vb[Tx\_DependentTx\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_dependenttx/vb/dependenttx.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.Complete" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>依存トランザクションの完了を試みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 依存の複製が、作業を完了したことをトランザクションをコミットする場合は、親は準備ができても、トランザクションの作成者を通知する場合は、このメソッドを呼び出します。  
  
 この呼び出しを呼び出した後、トランザクションの追加作業しないようにするか、例外がスローされます。  
  
 後に、アプリケーション ドメインがダウンした場合は、このメソッドが呼び出されますとトランザクションを完了する前にトランザクションが中止可能性があります。  
  
 **注**このメソッドは、依存するトランザクションの有効期間中に 1 回だけ呼び出す必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionException">このメソッドが呼び出された後の、トランザクションへの追加作業の試み。 これらには、<see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />、<see cref="Overload:System.Transactions.Transaction.EnlistDurable" />、<see cref="M:System.Transactions.Transaction.Clone" />、<see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" />、またはトランザクション上の任意のシリアル化操作などの、メソッドの呼び出しが含まれます。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>