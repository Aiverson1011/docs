<Type Name="TransactionInterop" FullName="System.Transactions.TransactionInterop">
  <TypeSignature Language="C#" Value="public static class TransactionInterop" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TransactionInterop extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.TransactionInterop" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>MSDTC、COM\+、または <see cref="N:System.EnterpriseServices" /> とやり取りするために以前記述されたコンポーネントと <see cref="N:System.Transactions" /> との対話を容易にします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、トランザクションの伝達のためのメソッドを提供します。 この処理のしくみの詳細については、次を参照してください。 [Transaction Propagation](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)します。  
  
 このクラスによって提供されるメソッドを使用して、2 種類のトランザクションの反映、\(プッシュ モデル\) のエクスポート\/インポートし、トランスミッターまたはレシーバー \(プル モデル\) に取り組むことができます。  
  
 エクスポート\/インポート \(プッシュ モデル\) の伝達は、次の手順  
  
1.  リモート コンピューターを取得するトランザクション マネージャーにそのマシンの「行き先」を呼び出して、 <xref:System.Transactions.TransactionInterop.GetWhereabouts%2A> メソッドです。 これから使用できるクライアント コンピューター上の情報をキャッシュできます。  
  
2.  適切なメソッドを使用してクライアント コンピューターに位置情報を含むデータを送信します。  
  
3.  クライアント コンピューターでは、トランザクションをリモート コンピューターに「エクスポート」トランザクション"cookie"を生成して位置情報を使用します。  これは、呼び出すことで <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> 、リモート コンピューターの位置情報を渡しています。  
  
4.  適切なメソッドを使用してリモート コンピューターに、トランザクションを含むデータ"cookie"を送信します。  
  
5.  リモート コンピューターを呼び出すことによって、クライアント トランザクションの複製を取得するトランザクション"cookie"を使用して、 <xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A> メソッドです。  
  
6.  リモート コンピューターで複製トランザクションを使用してを使用して、リソース マネージャーを参加させる、 <xref:System.Transactions.Transaction.EnlistVolatile%2A> または <xref:System.Transactions.Transaction.EnlistDurable%2A> のメソッド、 <xref:System.Transactions.Transaction> クラスです。  
  
 トランスミッターまたはレシーバー \(プル モデル\) の伝達は、次の手順  
  
-   クライアント コンピューターで、トランザクションを使用して、対応する"伝達トークン生成"を呼び出して <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A>  
  
-   トークンを含む、"伝達"トランザクションの適切なメソッドを使用してリモート コンピューターにデータを送信します。  
  
-   リモート コンピューター上には、「伝達トークン」を使用して呼び出すことによって、クライアント トランザクションの複製を取得するには <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A>  
  
 トランスミッターまたはレシーバー モデルでは、トランザクション トークンが、そのリモート コンピューターに送信がリモート コンピューターでがトランザクションの取得を使用しないシナリオでパフォーマンスの向上を提供します。  これは、まで、トランザクションが反映されていないため <xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A> が呼び出されます。 その他の利点は、エクスポート クッキーは、位置情報を提供するコンピューター上でのみ使用できますが、反映トークンをどのリモート コンピューターに送信できることです。  
  
 ただしも注意してくださいリモート トランザクション マネージャーの位置情報がすべての伝達トークンにカプセル化されているエクスポート\/インポート モデルから対応するトランザクション cookie よりも大きくすることです。  
  
 **注** この型を使用して <xref:System.Security.Permissions.SecurityAction.LinkDemand> されないようにすることには、信頼できないコードからと呼ばれます。 ただし、直前の呼び出し元だけが所有する必要が、 `FullTrust` アクセス許可セットです。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDtcTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.IDtcTransaction GetDtcTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.IDtcTransaction GetDtcTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetDtcTransaction(System.Transactions.Transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.IDtcTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">マーシャリングされる <see cref="T:System.Transactions.Transaction" /> インスタンス。</param>
        <summary>
          <see cref="T:System.Transactions.Transaction" /> を表す <see cref="T:System.Transactions.IDtcTransaction" /> インスタンスを取得します。</summary>
        <returns>
          <see cref="T:System.Transactions.Transaction" /> を表す <see cref="T:System.Transactions.IDtcTransaction" /> インスタンス。   <see cref="T:System.Transactions.IDtcTransaction" /> のアンマネージ フォームと互換性のあるインスタンス [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) MSDTC によって、およびマネージ形式の使用 <see cref="T:System.EnterpriseServices.ITransaction" /> で使用される <see cref="N:System.EnterpriseServices" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportCookie">
      <MemberSignature Language="C#" Value="public static byte[] GetExportCookie (System.Transactions.Transaction transaction, byte[] exportCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetExportCookie(class System.Transactions.Transaction transaction, unsigned int8[] exportCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetExportCookie(System.Transactions.Transaction,System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="whereabouts" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="transaction">マーシャリングされる <see cref="T:System.Transactions.Transaction" /> オブジェクト。</param>
        <param name="exportCookie">To be added.</param>
        <summary>トランザクション オブジェクトをエクスポート トランザクション クッキーに変換します。</summary>
        <returns>指定した <see cref="T:System.Transactions.Transaction" /> オブジェクトを表すエクスポート トランザクション クッキー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 トランザクションをエクスポートする場合は、このメソッドを呼び出します。`transaction` 渡されるトランザクション クッキーにマーシャ リングします。 トランザクション クッキーを送信し、転送先のプロセスにすることができます。 これをプロセスまたはシステム間でトランザクションの反映と呼びます。 伝達は、プッシュ モデルがローカル トランザクションを送信先にプッシュする場所と見なされます。  情報が含まれているため、 `whereabouts` 目的のトランザクション マネージャーを記述する必要があります。  
  
 各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop> クラスの「解説」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionFromDtcTransaction">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromDtcTransaction (System.Transactions.IDtcTransaction dtc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromDtcTransaction(class System.Transactions.IDtcTransaction dtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromDtcTransaction(System.Transactions.IDtcTransaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transactionNative" Type="System.Transactions.IDtcTransaction" />
      </Parameters>
      <Docs>
        <param name="dtc">To be added.</param>
        <summary>指定した <see cref="T:System.Transactions.IDtcTransaction" /> から <see cref="T:System.Transactions.Transaction" /> を生成します。</summary>
        <returns>指定した <see cref="T:System.Transactions.IDtcTransaction" /> を表す <see cref="T:System.Transactions.Transaction" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `transactionNative` のアンマネージ フォームと互換性のある [ITransaction](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp) MSDTC によって、およびマネージ形式の使用 <xref:System.EnterpriseServices.ITransaction> で使用される <xref:System.EnterpriseServices>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionFromExportCookie">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromExportCookie (byte[] exportCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromExportCookie(unsigned int8[] exportCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromExportCookie(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="exportCookie">To be added.</param>
        <summary>指定したエクスポート クッキーから <see cref="T:System.Transactions.Transaction" /> を生成します。</summary>
        <returns>指定したエクスポート クッキーから生成される <see cref="T:System.Transactions.Transaction" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop> クラスの「解説」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransactionFromTransmitterPropagationToken">
      <MemberSignature Language="C#" Value="public static System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken (byte[] token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Transactions.Transaction GetTransactionFromTransmitterPropagationToken(unsigned int8[] token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.Transaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propagationToken" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>指定したトランスミッター伝達トークンから <see cref="T:System.Transactions.Transaction" /> インスタンスを生成します。</summary>
        <returns>指定されたトランスミッター伝達トークンから生成される <see cref="T:System.Transactions.Transaction" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 と共に使用して、このメソッド、 <xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A> メソッドで、トランザクションを「プル」リモートのコンピューターからこのメソッドを呼び出して、トランザクションのマーシャ リングを解除する際に、「プル」伝達のための機能を提供します。  
  
 各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop> クラスの「解説」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionManagerCommunicationException">トランザクション マネージャーに接続できないために、トランザクションの逆シリアル化が失敗します。 ネットワーク ファイアウォールやセキュリティ設定が考えられます。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTransmitterPropagationToken">
      <MemberSignature Language="C#" Value="public static byte[] GetTransmitterPropagationToken (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetTransmitterPropagationToken(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetTransmitterPropagationToken(System.Transactions.Transaction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">伝達トークンにマーシャリングされるトランザクション。</param>
        <summary>指定した <see cref="T:System.Transactions.Transaction" /> に伝達トークンを生成します。</summary>
        <returns>このメソッドは、<see cref="M:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])" /> メソッドと連携して、トランスミッターまたはレシーバーによる伝達機能を提供します。この伝達方法では、後者のメソッドを呼び出してトランザクションのマーシャリングを解除する際に、リモート コンピューターの方からトランザクションを "プル" します。  
  
 各種の伝達モデルの詳細については、<see cref="T:System.Transactions.TransactionInterop" /> クラスの「解説」を参照してください。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWhereabouts">
      <MemberSignature Language="C#" Value="public static byte[] GetWhereabouts ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] GetWhereabouts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionInterop.GetWhereabouts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="N:System.Transactions" /> が使用する分散トランザクション マネージャーの位置情報を取得します。</summary>
        <returns>
          <see cref="N:System.Transactions" /> が使用する分散トランザクション マネージャーの位置情報。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 位置情報には、トランザクション マネージャーの位置を示すアドレスが含まれています。 このアドレスを使用することにより、2 つのトランザクション マネージャー間での相互通信が可能になり、これによってシステム間でのトランザクションの伝達が可能になります。 このメソッドによって返される情報とプッシュ モデル トランザクションの伝達の場所の情報を提供するために使用できます、 <xref:System.Transactions.TransactionInterop.GetExportCookie%2A> メソッドです。  
  
 各種の伝達モデルの詳細については、<xref:System.Transactions.TransactionInterop> クラスの「解説」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PromoterTypeDtc">
      <MemberSignature Language="C#" Value="public static readonly Guid PromoterTypeDtc;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Guid PromoterTypeDtc" />
      <MemberSignature Language="DocId" Value="F:System.Transactions.TransactionInterop.PromoterTypeDtc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>分散トランザクション プロセッサの種類。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この値を使用、 `Transaction.PromoterType` プロパティの場合は、トランザクションが MSDTC に昇格されますか、 `Transaction.GetPromotedToken` メソッドは MSDTC トランザクションの伝達トークンを `byte[]` 結果。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>