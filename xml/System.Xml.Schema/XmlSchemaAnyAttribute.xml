<Type Name="XmlSchemaAnyAttribute" FullName="System.Xml.Schema.XmlSchemaAnyAttribute">
  <TypeSignature Language="C#" Value="public class XmlSchemaAnyAttribute : System.Xml.Schema.XmlSchemaAnnotated" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaAnyAttribute extends System.Xml.Schema.XmlSchemaAnnotated" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaAnyAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaAnnotated</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>World Wide Web Consortium \(W3C\) を表す <see langword="anyAttribute" /> 要素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 `anyAttribute` 要素により、指定した名前空間または包含に表示される名前空間からの属性を `complexType` 要素。  
  
   
  
## 例  
 次の例を作成し、 `anyAttribute` 要素。  
  
 [!code-cpp[Classic WebData XmlSchemaAnyAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaAnyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaAnyAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaAnyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaAnyAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaAnyAttribute Example/VB/source.vb#1)]  
  
 上記のコード例については、次の XML ファイルが生成されます。  
  
 [!code-xml[Classic WebData XmlSchemaAnyAttribute Example\#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlSchemaAnyAttribute Example/XML/source.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaAnyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaAnyAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Schema.XmlSchemaAnyAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaAnyAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("namespace")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または使用できる属性を含む名前空間を設定します。</summary>
        <value>使用可能な属性の名前空間。 既定値は、<see langword="##any" /> です。  
  
 省略可能です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名前空間が指定されていない場合 `##any` 既定値です。 名前空間が指定されている場合は、次の表に示すように値のいずれかをなってあります。  
  
|名前空間の値|説明|  
|------------|--------|  
|`##any`|任意の名前空間の要素を使用できます。|  
|`##other`|要素は任意の名前空間、 `targetNamespace` を含む親要素の `anyAttribute` 要素が存在することができます。|  
|`##local`|名前空間で修飾されていない要素を使用できます。|  
|`##targetNamespace`|要素を `targetNamespace` を含む親要素の `anyAttribute` 要素が存在することができます。|  
|`List of {URIs,` `##targetNamespace, ##local}`|名前空間のスペースで区切られた一覧からの要素を使用できます。 一覧は、次を含めることができます。 名前空間の Uniform Resource Identifier \(URI\) 参照 `##targetNamespace`, 、および `##local`です。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessContents">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaContentProcessing ProcessContents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaContentProcessing ProcessContents" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaAnyAttribute.ProcessContents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("processContents")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaContentProcessing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションまたは XML プロセッサがで指定された属性の XML ドキュメントの検証を処理する方法についての情報取得または設定、 <see langword="anyAttribute" /> 要素。</summary>
        <value>
          <see cref="T:System.Xml.Schema.XmlSchemaContentProcessing" /> 値のいずれか。 ない場合 <see langword="processContents" /> 属性を指定すると、既定値は <see langword="Strict" />です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>