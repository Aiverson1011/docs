<Type Name="XmlSchemaAppInfo" FullName="System.Xml.Schema.XmlSchemaAppInfo">
  <TypeSignature Language="C#" Value="public class XmlSchemaAppInfo : System.Xml.Schema.XmlSchemaObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaAppInfo extends System.Xml.Schema.XmlSchemaObject" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaAppInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>World Wide Web Consortium \(W3C\) を表す <see langword="appinfo" /> 要素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 `appinfo` 要素は、注釈内でアプリケーションに固有の情報を定義します。  
  
   
  
## 例  
 次の例を作成し、 `appinfo` 要素。  
  
 [!code-cpp[Classic WebData XmlSchemaAppInfo Example\#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlSchemaAppInfo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlSchemaAppInfo Example\#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlSchemaAppInfo Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlSchemaAppInfo Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlSchemaAppInfo Example/VB/source.vb#1)]  
  
 上記のコード例については、次の XML ファイルが生成されます。  
  
 [!code-xml[Classic WebData XmlSchemaAppInfo Example\#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlSchemaAppInfo Example/XML/source.xml#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaAppInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaAppInfo.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xml.Schema.XmlSchemaAppInfo" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Markup">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode[] Markup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode[] Markup" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaAppInfo.Markup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAnyElement</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlText</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の配列 <see cref="T:System.Xml.XmlNode" /> を表すオブジェクト、 <see langword="appinfo" /> 子ノードです。</summary>
        <value>配列 <see cref="T:System.Xml.XmlNode" /> を表すオブジェクト、 <see langword="appinfo" /> 子ノードです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaAppInfo.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("source", DataType="anyURI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはアプリケーションの情報ソースを設定します。</summary>
        <value>統一リソース識別子 \(URI\) の参照。 既定値は、<see langword="String.Empty" /> です。  
  
 省略可能です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ソースは、URI 参照である必要があります。 省略可能です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>