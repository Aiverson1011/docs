<Type Name="WebPartZoneBase" FullName="System.Web.UI.WebControls.WebParts.WebPartZoneBase">
  <TypeSignature Language="C#" Value="public abstract class WebPartZoneBase : System.Web.UI.WebControls.WebParts.WebZone, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPartZoneBase extends System.Web.UI.WebControls.WebParts.WebZone implements class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> \(あるいは他のサーバーまたはユーザー\) コントロールのコンテナーとして機能するゾーン コントロールすべての基底クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ コントロール セットには、ゾーンは、Web ページの定義済みの領域の他のコントロールを含む HTML テーブルとしてレンダリング複合コントロールです。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスは、ベースを継承するゾーン <xref:System.Web.UI.WebControls.WebParts.WebZone> を含む派生のゾーンの動作の基本セットを示し、クラス <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、サーバー コントロール、およびユーザー コントロールです。 組み合わせ <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> とゾーン <xref:System.Web.UI.WebControls.WebParts.WebPart> \(およびその他のサーバー\) コントロールは、ほとんどの場合、ユーザーが操作するページの標準ビュー Web パーツ アプリケーションの主要な UI を形成します。  
  
 すべてのゾーンでは、コントロールを含んでいるため、共通の UI 要素のセットを提供します。 すべてのゾーンに共通する UI 要素の詳細については、クラス概要のトピックを参照してください、 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスです。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンには、サーバー コントロール、および関連付けられているを含む本文セクションが含まれています。 <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> オブジェクトが格納されているコントロールと、動詞、罫線など、chrome 要素の描画に使用します。  
  
 継承された機能に加え、 <xref:System.Web.UI.WebControls.WebParts.WebZone> 、クラス、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスは、クライアント側コントロールをドラッグする、特定の動詞 \(有効にする一般的な UI アクションに最小限に抑えて、閉じる、削除、およびコントロールの編集など\)、および追加のスタイル機能を追加します。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスもデータベース駆動であるカスタム ゾーンをデザインする場合にから継承するクラス。 たとえばから継承するカスタムの天気予報の Web パーツ ゾーンを作成できます <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>, が含まれ、レイアウト機能やその他のサービスを提供するものでは、 <xref:System.Web.UI.WebControls.WebParts.WebPart> データ バインドは、気象情報を表示するコントロール。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスには、いくつかのゾーンでのスタイル属性を操作するためのプロパティが含まれています。 いくつかのプロパティを含む罫線の <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> と <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A>です。 など、ゾーンのヘッダーに表示されるメニューのスタイル属性を操作するためのプロパティのグループがある <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A>, 、およびその他。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスには、ゾーン内の動詞を処理するためのメンバーの数にはもが含まれています。 これらのメンバーは、ゾーンの一部のコントロールに表示される動詞に関連します。 ゾーン レベルの動詞を追加する間 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンの場合、既定ではないがいずれかです。 Web パーツ コントロール セットには、一部のコントロールで使用で提供される標準の動詞のセットが存在し、開発者がカスタムの動詞を追加できます。 動詞を操作するためのいくつかの重要なプロパティなど、いくつかの標準動詞オブジェクトを参照するプロパティを含める <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectVerb%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb%2A>です。 標準の動詞は、ゾーンに含まれている各コントロールのタイトル バーには、\(通常はドロップダウン メニューとして UI に表示されます\) の動詞メニューに表示されます。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> クリック可能なオブジェクトの種類を表す UI 内の動詞を確認できるプロパティです。  
  
 動詞を操作するための他のキー メンバーが含まれます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 動詞の作成プロセスのカスタム処理のオーバーライド可能なイベント ハンドラーでは、メソッド、および <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> イベントです。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスには、操作するためのメンバーの数が含まれています <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーンに含まれるコントロール。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> プロパティは、すべてのコレクションを参照 <xref:System.Web.UI.WebControls.WebParts.WebPart> \(およびその他のサーバー\)、ゾーン内のコントロールです。 いくつかの方法が、ユーザーがで実行できる標準的な動詞やアクションに対応 <xref:System.Web.UI.WebControls.WebParts.WebPart> などのゾーンで、コントロール <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectWebPart%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditWebPart%2A>です。  
  
 メンバーの数もあります、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの問題方法 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが配置されるか、またはゾーンで配置されています。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> プロパティは、コントロールのゾーン間で移動またはゾーン内で並べ替えるには、ユーザーかどうかを決定します。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> プロパティでは、水平方向または垂直方向に、ゾーン内のコントロールが配置されたかどうかを判断することができます。  
  
> [!NOTE]
>  Internet Explorer の高さは表示される、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> またはゾーンの方向に応じて、予期しない方法で、格納されているコントロール。 詳細については、ドキュメントを参照して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> または <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> プロパティです。  
  
 他の方法で、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラス ゾーンのさまざまな領域の表示の詳細なプログラムによる制御を提供します。 継承された基本メソッドをオーバーライドこれらメソッドの多くは、 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスが含まれているゾーンの表示をカスタマイズする <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 方法には、重要な <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderDropCue%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderHeader%2A>です。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスです。 コードでは、派生クラスでは、方法を示しています。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, 、Web パーツ ページに格納に宣言によって使用される <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 コード例は、4 つのセクション: 最初の 3 つのセクションでは、コード ファイルをについて説明し、4 つ目は、コードを実行する方法を説明します。  
  
 このコード例の最初の部分は、ユーザーがさまざまな表示モードに切り替えることができるユーザー コントロールです。 Web パーツ表示モードと、このコントロールのコードの説明の詳細については、次を参照してください。 [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/displaymodemenucs.ascx#10)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/displaymodemenuvb.ascx#10)]  
  
 コード例の 2 番目の部分は、メインの Web ページのイベントを処理するコードを含むコード側ファイルです。 このファイル内のコードは、キーの一部を操作する方法を示しています。 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> メンバー プログラムを使用しています。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#4)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#4)]  
  
 コード例の 3 番目の部分を含む Web ページは、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ベースからの現象が見られるコントロール <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラス、および <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーンに含まれるコントロール。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#1)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#1)]  
  
 ブラウザーで Web ページを読み込みます。 使用して、 **表示モード** デザイン モードに切り替える\] をクリックするドロップダウン リスト コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、および表示されているゾーン間でドラッグしてください。 一部のさまざまなメンバーを使用する効果を表示するページのボタンをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスです。 次に、ページを編集モードを切り替えます。 確認、 <xref:System.Web.UI.WebControls.WebParts.WebPart> でコントロールを配置 `WebPartZone2`, 動詞メニューには、コントロールのタイトル バーをクリックし、クリックして、 **編集** コントロールを編集します。 そのコントロールの編集を終了し、他のゾーン内のコントロールのいずれかを編集します。 次の手順を実行すると UI スタイルのコントロールと、ゾーンの相違点に注意のさまざまなメンバーを使用する効果は、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPartZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>継承クラス インスタンスによって使用されるクラスを初期化します。 このコンストラクターは、継承クラスによってのみ呼び出すことができます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowLayoutChange">
      <MemberSignature Language="C#" Value="public virtual bool AllowLayoutChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowLayoutChange" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうかのレイアウト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールは、ゾーン内で変更できます。</summary>
        <value>
          <see langword="true" /> 場合は、レイアウトを変更することができます。それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> プロパティには効果があるゾーンとは、ページの表示モードで、ゾーン内のコントロールのレイアウトなどの場合にのみ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> に設定されている `false` 特定のゾーンには、さまざまな操作をエンドユーザーが、ゾーン内で実行できないようにすることがあります。  
  
-   ユーザーは、別の領域にコントロールをドラッグ、ゾーン内のコントロールを再配置またはゾーンにコントロールを移動することはできません。  
  
-   さまざまなプロパティのユーザー インターフェイス \(UI\) に影響を与える <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールを使用して、コントロールの編集中に、ユーザーがこれらのプロパティを編集できないように無効になっていますが、 <xref:System.Web.UI.WebControls.WebParts.AppearanceEditorPart> と <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> コントロール.  
  
-   ユーザーが、ゾーンに新しいコントロールを追加できません、 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールです。  
  
-   閉じる、削除を最小限に抑える、動詞の復元は、ゾーン内のコントロールに表示されません。  
  
 ただし、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> プロパティは、UI を使用して、ゾーンのレイアウトを変更する機能をエンドユーザー、影響、プログラムを使用して、レイアウトを変更する機能には影響しません。 たとえば場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> に設定されている `false`, 、ユーザーは、ゾーン内のコントロールを閉じることはできませんが、開発者が呼び出すことができますが、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart%2A> を終了するメソッドをプログラムで制御します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> にプロパティが設定されている `true`, 、既定であります。 値を変更する場合は、 `false`, 、内かにコントロールをドラッグすることはできませんをブラウザーにページを読み込むし、デザインの表示モードに切り替える、 `WebPartZone2` ゾーンです。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Gray")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の境界線の色、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールです。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> 境界線の色を格納しています。 既定の色は <see cref="P:System.Drawing.Color.Gray" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 基本 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> によってプロパティがオーバーライドされる、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンの罫線の既定の色を設定するクラス。  
  
 設定することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 宣言またはプログラムを制御します。 境界線が表示されるだけとゾーンをページの表示モードで <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスのユーザー インターフェイス \(UI\) の機能は表示など、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> または <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>です。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A> 属性が、指定した色の名前に設定します。 した後、ブラウザーにページを読み込んだデザイン表示モードに切り替えるには、プロパティの効果を確認できます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を囲む罫線の種類、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.BorderStyle" /> の枠線の種類を含むオブジェクト。 既定値は、<see cref="F:System.Web.UI.WebControls.BorderStyle.Solid" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 基本 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> プロパティはオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンの既定の境界線スタイルを設定するクラス。  
  
 設定することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 宣言またはプログラムを制御します。 境界線が表示されるだけとゾーンをページの表示モードで <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスのユーザー インターフェイス \(UI\) の機能は表示など、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> または <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>です。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A> 属性が特定の罫線の種類に設定します。 した後、ブラウザーにページを読み込んだデザイン表示モードに切り替えるには、プロパティの効果を確認できます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を囲む罫線の幅、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールです。</summary>
        <value>指定した幅 <see cref="T:System.Web.UI.WebControls.Unit" /> ゾーンを囲む境界線のです。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 基本 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> によってプロパティがオーバーライドされる、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンの既定の罫線の幅を設定するクラス。  
  
 設定することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 宣言またはプログラムを制御します。 境界線が表示されるだけとゾーンをページの表示モードで <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスのユーザー インターフェイス \(UI\) の機能は表示など、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> または <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>です。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> 属性値が特定の幅 \(ピクセル単位\) に設定します。 した後、ブラウザーにページを読み込んだデザイン表示モードに切り替えるには、プロパティの効果を確認できます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> を閉じるエンドユーザーを有効にするオブジェクト、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーが閉じる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって参照される close 動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb%2A> プロパティは、それぞれの動詞メニューに表示 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。  
  
 コントロールの終了から削除\] ページでの対話開発者がなど、適切なユーザー インターフェイス \(UI\) を指定するかどうか、 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> を含んでいるゾーン、 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> コントロール、ユーザーにページを切り替えることができます <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> し、コントロールの以前に閉じられたインスタンスをページに追加します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コード例を実行するには、すべてのコード例」のセクションを必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティです。  
  
 コード例の次の部分では、部分クラスは、help 動詞を有効または無効になっているかどうかを切り替えるコードが含まれています。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 もう 1 つのコード例は、カスタム コントロールをホストし、UI を含む Web ページです。 注意して、宣言型 `<CloseVerb>` 、ゾーン内の要素は、特定の動詞メニューに close 動詞を表すテキストを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 注意しても、ため、基になるカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> \-\-という名前のコントロール `TextDisplayWebPart`\-\-設定するコード例で使用される、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> プロパティを `false` 、コンス トラクターで、 `<aspSample:TextDisplayPart>` 、カタログ内の要素を設定する必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> プロパティを `true`, 、次のコード例では、コントロールを閉じることができるようにします。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#3)]  
  
 ブラウザーでページを読み込むと、カタログ表示モードに切り替えるし、追加、 `TextDisplayWebPart` コントロールをページです。 Close 動詞を無効にする\] チェック ボックスを使用して、クリックすることができます、 **web パーツを閉じる** コントロールを閉じる動詞メニューの動詞です。 カタログの表示モードにページを返した場合、コントロールを閉じると、クリックして、 **ページ カタログ**, の元のインスタンスを選択して、 `TextDisplayWebPart` を閉じると、コントロールをページでもう一度開きます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb" />
      </Docs>
    </Member>
    <Member MemberName="CloseWebPart">
      <MemberSignature Language="C#" Value="protected virtual void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloseWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 終了するコントロール。</param>
        <summary>選択した終了 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 閉じるには、エンドユーザーの一般的な方法、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、コントロールのタイトル バーに閉じる動詞をクリックします。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart%2A> メソッドの呼び出し、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> メソッドを <xref:System.Web.UI.WebControls.WebParts.WebPartManager> クラスは、コントロールを閉じるためのアクションを実行します。 メソッドのみ使用してで派生 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> などのゾーンで <xref:System.Web.UI.WebControls.WebParts.WebPartZone>します。  
  
 閉じた <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールがページにレンダリングされません。 代わりに、ページ上のすべての閉じたコントロールのリストを保持するページ カタログに追加されます。 ユーザーがコントロールを閉じる Web パーツ ページも存在している、 `<asp:PageCatalogPart>` で宣言された要素を <xref:System.Web.UI.WebControls.WebParts.CatalogZone>, 、ユーザーは、カタログの表示モードに切り替えるし、終了したコントロールをページに追加し、します。  
  
> [!NOTE]
>  閉じることができるユーザーの <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> コントロールのプロパティと <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> プロパティ ゾーンにする必要があります両方に設定する `true`です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> は <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザー間の接続の作成を有効にするオブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 2 つの接続を作成する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectWebPart">
      <MemberSignature Language="C#" Value="protected virtual void ConnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConnectWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 選択されている別の接続を開始するコントロール <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</param>
        <summary>2 つの接続を作成するという処理を開始 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ConnectWebPart%2A> ページに接続するときだけ表示モード、メソッドを呼び出すことができる \(<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>\)。 メソッドを呼び出して、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A> メソッドで、完全に 2 つの接続に必要ないくつかの手順を完了する <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 メソッドのみ使用してで派生 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> などのゾーンで <xref:System.Web.UI.WebControls.WebParts.WebPartZone>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ゾーンに含まれるコントロールの子のセットを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateChildControls%2A> メソッドは、ベース <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> メソッドのセットを作成する <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーンに含まれるコントロール。 これは、場合 Web パーツ ページがデザイン モードでは、ページ \(そしてゾーン内\) のコントロールのレイアウトをデザイン モードで変更できるためです。 一連の <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールは、注文またはゾーン内のコントロールの出現可能な変化に合わせて同様に作成する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成、 <see cref="T:System.Web.UI.ControlCollection" /> ゾーン内のすべてのコントロールを格納しているオブジェクト。</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> への参照を含む、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlStyle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示されているときに、ゾーンのコントロールに適用されるスタイルの特性のセットを作成します。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> のスタイル属性を含む、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlStyle%2A> メソッドに適用される標準的なスタイル属性のセットを作成 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。 スタイル属性は、ページがゾーン自体がカタログ、編集、またはデザイン表示モードなど、表示されている表示モードが場合にのみ適用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If you override the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateControlStyle" /> method to set some specific properties on the created style, do not use the <see cref="M:System.Web.UI.WebControls.Style.#ctor(System.Web.UI.StateBag)" /> version of the constructor, which requires you to pass the control's <see cref="T:System.Web.UI.StateBag" /> object in as a parameter, resulting in the created <see cref="T:System.Web.UI.WebControls.Style" /> object sharing the <see cref="T:System.Web.UI.StateBag" /> with the zone control. This causes rendering problems. Instead, use the <see cref="M:System.Web.UI.WebControls.Style.#ctor" /> version of the constructor, so the <see cref="T:System.Web.UI.WebControls.Style" /> object is independent of the control.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateVerbs">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler CreateVerbs;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler CreateVerbs" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生したゾーンの動詞が作成されると発生、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページの開発者は、このイベントにハンドラーを追加およびするその他のカスタム動詞を添付できる、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 子ゾーンです。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> 動詞は、ゾーンの作成時にイベントが発生時に発生する、 <xref:System.Web.UI.Control.PreRender> 段階をページの処理、またはポストバック イベント中にします。  
  
   
  
## 例  
 次のコード例は、ハンドラーを作成する方法を示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> イベントをオーバーライドすることで、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 派生するカスタム動詞を追加するメソッドを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。  
  
 このコード例には、2 つのソース ファイルが含まれています。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 コンパイルする方法について説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 コード例の最初の部分は、ソース コードから派生した単純なコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスです。  
  
 [!code-csharp[WebParts\_WebPartVerb2\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/SimpleControl.cs#2)]
 [!code-vb[WebParts\_WebPartVerb2\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/SimpleControl.vb#2)]  
  
 コード例の 2 つ目は派生のソース コード <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> をオーバーライドするゾーン、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> メソッドをカスタム動詞をゾーンに追加します。 このコードでは、動詞メニューに表示されるカスタム動詞もが作成 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーンでは、コントロールが含まれているし、動詞は、現在の別のコピーを作成 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPartVerb2\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/ZoneWithAddedVerb.cs#3)]
 [!code-vb[WebParts\_WebPartVerb2\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/ZoneWithAddedVerb.vb#3)]  
  
 コード例の 3 番目の部分は、派生のゾーンをホストする Web ページと <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 ページの上部には、 `Register` 派生ゾーン コンポーネントを参照するディレクティブです。 ブラウザーでページを読み込む場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、ゾーンが表示されます。 動詞メニューをクリックし、クリックして、 **CopyWebPart** 、動詞とそのコントロールのコピーを作成します。  
  
 [!code-csharp[WebParts\_WebPartVerb2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/Defaultcs.aspx#1)]
 [!code-vb[WebParts\_WebPartVerb2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/Defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbsEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateWebPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.WebPartChrome CreateWebPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartChrome CreateWebPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>有効に派生したカスタムの代わりにゾーン <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> オブジェクトの外観を変更する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> を決定する方法 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのゾーンで表示されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツの chrome が各フレームの周辺機器のユーザー インターフェイス \(UI\) 要素を指す <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 クロム、 <xref:System.Web.UI.WebControls.WebParts.WebPart> の境界線のタイトル バー、アイコン、タイトルのテキストをおよびタイトル バーに表示される動詞メニュー コントロールが含まれます。 クロムの外観はゾーン レベルで設定し、すべてに適用されます <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> オブジェクトの全体表示に与える影響、 <xref:System.Web.UI.WebControls.WebParts.WebPart> chrome 要素だけでなくを制御します。  
  
 使用する、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> メソッド、カスタムを作成する必要があります <xref:System.Web.UI.WebControls.WebParts.WebPartChrome> ゾーンの Web パーツ コントロールのクロムの外観を定義するオブジェクト。 継承するカスタム ゾーンを作成することも必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスおよびオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome%2A> カスタム クロム オブジェクトを置換して、ゾーン内のコントロールに適用できるようにするメソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="DeleteVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb DeleteVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb DeleteVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> を削除するエンドユーザーを有効にするオブジェクト、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンド ユーザーを削除できるように <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって参照される delete 動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb%2A> プロパティは、各動的のタイトル バーに動詞のドロップダウン メニューに表示 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 Delete 動詞は、スタティック コントロール \(Web ページのマークアップで宣言されたコントロール\) で使用できません。 動詞は、動詞メニューに表示されます。 ページが表示モードなど、ページ レイアウトを変更することができますが場合にのみ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> または <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>です。  
  
 コントロールを完全に削除すると、ページからそのコントロールのインスタンスが削除されます。 終了されたコントロールとは異なり、コントロールの削除済みのインスタンスは、ページに戻ることはありません追加します。 ユーザーが、コントロールを削除しにページを切り替えた後 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>, 場合は、 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> ゾーンに含まれて、 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> コントロール、削除されたコントロールのインスタンスはでは使用できません。 コントロールは、カタログで使用できますが、削除されたインスタンスが完全に削除された場合、ユーザーは、コントロールの新しいインスタンスを追加できます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コード例を実行するには、すべてのコード例」のセクションを必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティです。  
  
 コード例の次の部分では、部分クラスは、delete 動詞を有効または無効になっているかどうかを切り替えるコードが含まれています。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 もう 1 つのコード例は、カスタム コントロールをホストし、ユーザー インターフェイス \(UI\) を含む Web ページです。 注意して、宣言型 `<DeleteVerb>` 、ゾーン内の要素は、特定の動詞のドロップダウン メニューに delete 動詞を表すテキストを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 ブラウザーでページを読み込むと、カタログ表示モードに切り替えるし、追加、 `TextDisplayWebPart` コントロールをページです。 有効にし、delete 動詞を無効にする\] チェック ボックスを使用する、 `TextDisplayWebPart` 中は、ページはカタログまたはデザインの表示モードのメニューにコントロールですが、動詞が表示されます。 クリックすると、 **Delete WebPart** メニューの動詞は、コントロールは完全に削除、およびページに戻る削除済みのインスタンスを追加することはできません。 ただし、カタログの表示モードでは、ページを返すしの新しいインスタンスを追加、 `TextDisplayWebPart` コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteWebPart">
      <MemberSignature Language="C#" Value="protected virtual void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DeleteWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを削除します。</param>
        <summary>削除、選択した <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A?displayProperty=fullName> メソッドを場合 `webPart` は静的で例外がスロー スタティック コントロール \(Web ページのマークアップで宣言されているコントロール\) を削除できないためです。 メソッドのみ使用してで派生 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> などのゾーンで <xref:System.Web.UI.WebControls.WebParts.WebPartZone>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DeleteVerb" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public virtual string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイトルとして使用されているテキストの現在の値を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンのゾーン自体が表示されている場合。</summary>
        <value>ゾーンのタイトルのテキストを含む文字列です。 既定値は、値ベースの <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle%2A> プロパティは、ベースからその値を取得するか、 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> プロパティまたは、その値が `null`, を使用して、 <xref:System.Web.UI.Control.ID%2A> 、ゾーンの値。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 次のコード例では、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DisplayTitle%2A> 部分クラスからプロパティ値を取得します。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#9)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="DragDropEnabled">
      <MemberSignature Language="C#" Value="protected bool DragDropEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DragDropEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーンの内外にコントロールをドラッグできます。</summary>
        <value>コントロールをドラッグできるかどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragDropEnabled%2A> プロパティを示すかどうか <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールをドラッグできるゾーンの内外に実行時にします。 かどうかと、ページがページの表示モード、ドラッグ アンド ドロップ編集を許可するかどうかチェックするためには、具体的には、プロパティを使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> にプロパティが設定されている `true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="DragHighlightColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color DragHighlightColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color DragHighlightColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Blue")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の境界線の色、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンと、ユーザーがコントロールをドラッグするときに、ドロップ キュー領域です。</summary>
        <value>A <see cref="T:System.Drawing.Color" /> を強調表示色が含まれています。 既定の色は <see cref="P:System.Drawing.Color.Blue" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ここで削除することができます、ドロップ キュー領域を表示するコントロールが欠落している領域を示すおよびはこれらの領域だけでなく、ゾーンのゾーンにドラッグしたコントロールが保持されている場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> プロパティは、罫線の色に影響します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> プロパティでは、ゾーンでコントロールをドラッグすると、ユーザーに表示される色を設定することができます。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> プロパティには効果がある Web ページが表示モードなど、変更するゾーンのレイアウトをできるようにする場合にのみ <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>します。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.DragHighlightColor%2A> プロパティ値が特定の色に設定します。 ブラウザーにページを読み込むし、デザインの表示モードに切り替えるを選択し、そのゾーン内で、コントロールをドラッグまたはゾーンに別のコントロールをドラッグするときに、プロパティの効果を確認できます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb EditVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb EditVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> を編集するエンドユーザーを有効にするオブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーが編集する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって参照される edit 動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> コントロールでは、エンドユーザーに切り替える、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール編集モードにゾーンをユーザーが、外観、プロパティ、レイアウト、およびコントロールのコンテンツをカスタマイズできます。  
  
 同じ edit 動詞は、ゾーン内のすべてのコントロールに使用されます。 Web パーツ ページが編集表示モードに入ったとき \(<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>\)、edit 動詞がそれぞれの動詞メニューに表示される <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内に含まれるコントロール。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 プロパティを使用して宣言してアクセスに注意してください、 `<EditVerb>` を持つ要素、 `WebPartZone1` コントロールです。 Edit 動詞に含まれますこのコントロールで編集モードを使用していない場合でも、 `<EditVerb>` 要素ここでは、ですが、それを使用して属性の一部を設定する、ユーザー インターフェイス \(UI\) 内の動詞を表すテキストなどです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditWebPart">
      <MemberSignature Language="C#" Value="protected virtual void EditWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EditWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 編集しようとするコントロール。</param>
        <summary>選択した編集のプロセスを開始する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メソッドのみ使用してで派生 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> などのゾーンで <xref:System.Web.UI.WebControls.WebParts.WebPartZone>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EditVerb" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定すると表示されるメッセージ、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> コントロールが含まれていないには <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>空のゾーンに表示されるメッセージを含む文字列。 カルチャ固有の既定の文字列は、.NET Framework によって提供されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> プロパティは、空の文字列に設定場所された場合は、プロパティが設定しないと、プログラムと区別するために基本プロパティをオーバーライド \(""\) です。  
  
 空で、既定のカルチャに固有のテキスト メッセージが表示されます、プロパティが設定されていないと、ゾーンが含まれない、コントロール、ゾーンが表示されている表示モードに Web パーツ ページに入ったとき、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> コントロールです。 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> プロパティ値が空の文字列に設定されている意図的にし、空のゾーンにテキスト メッセージは表示されません。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.EmptyZoneText%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に表示されます `WebPartZone2`, 、ブラウザーにページを読み込んだ後、画面のデザイン モードに切り替えるしから日付を表示するコントロールをドラッグ `WebPartZone2` に `WebPartZone1`します。 Web パーツ ページに表示モードを変更する方法の詳細については、次を参照してください。 [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ExportVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ExportVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ExportVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> ごとに、XML 定義ファイルをエクスポートするエンドユーザーを有効にするオブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーの定義ファイルをエクスポートできるように <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって参照されるエクスポート動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb%2A> プロパティは、それぞれのタイトル バー内の動詞のドロップダウン メニューに表示されます。 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 動詞は、すべてのページの表示モードの動詞メニューに表示されます。  
  
 定義ファイルをエクスポートできるように、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを設定する必要も、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> は既定値以外にコントロールのプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ExportVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コード例を実行するには、すべてのコード例」のセクションを必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティです。  
  
 コード例の次の部分では、部分クラスは、export 動詞を有効または無効になっているかどうかを切り替えるコードが含まれています。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 もう 1 つのコード例は、カスタム コントロールをホストし、ユーザー インターフェイス \(UI\) を含む Web ページです。 注意して、宣言型 `<ExportVerb>` 、ゾーン内の要素は、特定の動詞のドロップダウン メニュー内でエクスポート動詞を表すテキストを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 最後に、いることを確認、次のコード例を宣言型 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> のプロパティ値、 `<asp:TextDisplayWebPart>` 要素が値に設定されている `All`, 、つまりコントロール上のすべてのエクスポート可能なプロパティ値がエクスポートされます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#3)]  
  
 ブラウザーでページを読み込むと、カタログ表示モードに切り替えるし、追加、 `TextDisplayWebPart` コントロールをページです。 有効にし、export 動詞を無効にする\] チェック ボックスを使用する、 `TextDisplayWebPart` コントロールです。 Export 動詞をクリックすると、コントロールの定義ファイルを保存するローカル パスにするように求められます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
      </Docs>
    </Member>
    <Member MemberName="GetEffectiveChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType (System.Web.UI.WebControls.WebParts.Part part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType(class System.Web.UI.WebControls.WebParts.Part part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.Web.UI.WebControls.WebParts.Part" />
      </Parameters>
      <Docs>
        <param name="part">ゾーンが現在の <see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" /> 設定を取得する必要がある <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> コントロール。</param>
        <summary>ゾーンの <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" /> プロパティおよび Web パーツ ページの現在の表示モードが指定されると、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの実際のまたは現在有効な <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> の値を返します。</summary>
        <returns>ゾーンに含まれた Web パーツ コントロールの現在の境界線の種類を含んだ <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> の値。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)" />
      </Docs>
    </Member>
    <Member MemberName="GetInitialWebParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>初期のコレクションを取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 、ゾーンに含まれているコントロール、テンプレート、またはストレージ メディアに基づいています。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> の初期セットを含んでいる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーンに属しているコントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts%2A> メソッドの最初のコレクションを取得する <xref:System.Web.UI.WebControls.WebParts.WebPart> 既存のテンプレートまたは他の形式は、ゾーン内のコントロールを決定するストレージの場合にのみゾーンを制御します。 メソッドでは、初期のコレクション内のコントロール実際に移動されているユーザーが別のゾーンに必要になる任意の個人用設定変更は反映されません。  
  
 最初のコレクション <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールは必ずしもに含まれているコレクションの場合と同様、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> ページを表示すると、行われたパーソナル化の変更を考慮する際に、ゾーン内のコントロールの実際の現在のコレクションを反映するゾーンのプロパティです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts" /> method is abstract, so it must be implemented by derived classes. The <see cref="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" /> method of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> class contains one implementation of the method.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" />
      </Docs>
    </Member>
    <Member MemberName="HasFooter">
      <MemberSignature Language="C#" Value="protected override bool HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンがフッター領域にあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ゾーンにフッター領域がある場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter%2A> プロパティのオーバーライド ベース <xref:System.Web.UI.WebControls.WebParts.WebZone.HasFooter%2A?displayProperty=fullName> 既定値を設定するプロパティ `false` の <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HasFooter" />
      </Docs>
    </Member>
    <Member MemberName="HasHeader">
      <MemberSignature Language="C#" Value="protected override bool HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンがヘッダー領域を持つかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 場合は、ゾーンは、ヘッダー領域です。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> されて標準 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader%2A> プロパティのオーバーライド ベース <xref:System.Web.UI.WebControls.WebParts.WebZone.HasHeader%2A?displayProperty=fullName> 既定値を設定するプロパティ `false` の <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> 標準ページの表示モードの場合を制御 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>します。  
  
 Web パーツ ページがページのデザインを許可するなどの表示モードのいずれかの場合 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>, 、または <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>, の値、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader%2A> プロパティは、 `true`, 、指定されたゾーンは、ヘッダーのユーザー インターフェイス \(UI\) 要素を表示できるようにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HasHeader" />
      </Docs>
    </Member>
    <Member MemberName="HelpVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb HelpVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb HelpVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> のヘルプ コンテンツにアクセスするために使用オブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> ユーザーにヘルプ コンテンツにアクセスできるように、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティは、宣言的またはプログラムでアクセスできます。 アクセスできる宣言によって、ゾーン内でを使用して、 `<asp:HelpVerb>` 、テキスト、説明、動詞が有効になっているかどうか、およびその他の属性を設定する要素。 既定で有効になっているため、ゾーンの help 動詞を宣言する必要はありません。 動詞メニューに表示するヘルプ動詞を有効にするために必要な手順のみ <xref:System.Web.UI.WebControls.WebParts.WebPart> 実行時にゾーン内のコントロールが値を割り当てるには、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> プロパティを個別 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。  
  
 コード例を実行、さらに次のコードにする必要がありますカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 独自のコントロールを使用するか、カスタム コードを使用して `TextDisplayWebPart` コントロールの例」のセクション内に存在、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 このコード例には、Web ページの表示モードを変更するためにユーザー コントロールが含まれています。 表示モードおよびこのコントロールのソース コードの詳細については、次を参照してください。 [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/displaymodemenucs.ascx#10)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/displaymodemenuvb.ascx#10)]  
  
 このコード例は、HTML ページのヘルプ コンテンツを含む可能性のあるも含まれています。、 `TextDisplayWebPart` コントロールです。 この例を実行するには、Textwebparthelp.htm という名前のファイルに次のコードを保存し、.aspx ページをホストすると、サイトの同じディレクトリに配置、 `TextDisplayWebPart` コントロールです。  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 このコード例では、.aspx ページでイベントを処理するコードを含む次の部分クラスも含まれます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#4)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#4)]  
  
 もう 1 つのコード例は、.aspx ページをホストしている、 `TextDisplayWebPart` 制御し、の使用方法、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティです。 ページの上部にあることに注意して、 `<@ Register %>` 宣言を参照するため、コンパイルされた `TextDisplayWebPart` コントロールで、Bin という名前のサブフォルダーに配置する必要があります。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#1)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#1)]  
  
 また、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティは宣言で使用される、 `<asp:WebPartZone>` の次のコード例に示すように、動詞のテキストを設定する要素。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 最後に、次のコード例に注意してください。 を、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> プロパティが設定されて、 `<aspSample:TextDisplayPart>` ヘルプ ファイルへの URL を指定する要素。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#3)]  
  
 ブラウザーでページを読み込んだ後、 **カタログ モード** のメニュー項目、 **表示モード** カタログ表示モードに切り替える、ドロップダウン リスト コントロールです。 追加、 `TextDisplayWebPart` コントロールをページをカタログを終了し、ページを通常のブラウズ モードに戻ります。 タイトル バーに動詞のドロップダウン メニューをクリックしたかどうか、 `TextDisplayWebPart` コントロールを開くには、ヘルプ ページのヘルプの動詞をアクセスすることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      </Docs>
    </Member>
    <Member MemberName="LayoutOrientation">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Orientation LayoutOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Orientation LayoutOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または垂直または水平方向に、ゾーン内のコントロールが配置されたかどうかを示す値を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Orientation" /> ゾーン内のコントロールを整列する方法を決定する値。 既定の向きは <see cref="F:System.Web.UI.WebControls.Orientation.Vertical" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> Web パーツ コントロールのゾーン内のレイアウトに関連するプロパティです。 既定の <xref:System.Web.UI.WebControls.Orientation.Vertical> 印刷の向きを上から下への配置にコントロールが表示」の手順に従って、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 各コントロールの値。<xref:System.Web.UI.WebControls.Orientation.Horizontal> 印刷の向き、コントロールのサイド バイ サイドで、対象領域の幅に配置します。  
  
 Internet Explorer は、の高さに影響を与える、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、およびそれを含んでいるゾーンの高さ。 Internet Explorer の互換性モード \(以前のバージョンのブラウザーとの下位互換性\)、または標準モードのいずれかの web ページをレンダリングする \(の存在によって決定される、 `DOCTYPE` ページ内の宣言\)。 これらのモードについては、DHTML を参照してください。 [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175) プロパティです。 Internet Explorer では、標準モードでページをレンダリングするときに一部のシナリオで、サイズ変更されない、表のセルにセルの HTML マークアップが場合でも `<td height="100%">`します。 その結果、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールと、含まれるゾーンを表示できるように、コントロールは、ゾーンの全体の高さを伸縮しません。  
  
 このようなレンダリングは、2 つのケースで発生します。  
  
-   ゾーンの <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.Orientation.Vertical>, 、ゾーンの高さを明示的に設定するとします。 コントロールをゾーンの全体の高さを拡大できるように、水平方向のゾーンの高さを指定しません。  
  
-   ゾーンの <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.Orientation.Horizontal>, 、ゾーンの \(または格納されているコントロール\) の高さを明示的に設定しないとします。 ゾーンの全体の高さを入力するコントロールを有効にするには、垂直方向のゾーンで、ゾーンまたはコントロールの高さを設定します。  
  
 このトピックのコード例で示しますの通常の使用状況、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> プロパティです。  コードの例で、表示の高さに関連した問題とそれを回避する方法については、次を参照してください。、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone1`, 、ブラウザーにページを読み込んだ後。 ゾーンの Web パーツ コントロールは、水平方向に表示されます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#2)]  
  
 クリックして、 **表示\/非表示のレイアウトの方向** ゾーンの向きを変更するボタンをクリックします。 コードを印刷の向きを切り替えるには、部分クラスは、次のコード例で発生します。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#7)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値が、列挙のいずれかの <see cref="T:System.Web.UI.WebControls.Orientation" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Orientation" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Height" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前に保存された状態。</param>
        <summary>以前に保存したゾーンの状態情報を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LoadViewState%2A> メソッドは、ベース <xref:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState%2A?displayProperty=fullName> から派生した、動詞とゾーンの動詞メニューの状態を読み込むためのメソッド、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">サイズ、 <paramref name="savedState" /> オブジェクトが、現在のビュー ステートのサイズと等しくないです。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckImageStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuCheckImageStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuCheckImageStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されている動詞のテキストの横にある動詞メニューに表示されるチェック マーク画像に適用されるスタイル属性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 動詞メニューにチェック マークの画像のスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle%2A> プロパティは、カスタムがある場合にのみ適用されます。 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> を持つ動詞メニューにオブジェクトの <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked%2A> プロパティ値に設定 `true`します。 含まれるスタイル属性、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle%2A> プロパティは、動詞のメニュー テキストの横に表示されるチェック マークのイメージのスタイルに関連します。  
  
 各 <xref:System.Web.UI.WebControls.WebParts.WebPart> の制御、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンでは、タイトル バーの動詞メニュー。 動詞メニューは、Web パーツ コントロール セット、およびユーザー設定に含まれる両方の標準的な動詞を含めることができます <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 開発者によって作成されたオブジェクト。  
  
 標準の動詞に、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール動詞メニュー \- エクスポート、削除、およびヘルプを開くのための動詞を含むページが、タスクを 1 回、およびを実行するシングル アクション動詞の完了します。 あらゆる種類の継続状態を示しているしないために、これまでチェック マークが付いたメニューでこれらの動詞をマークする必要はありません。 したがって、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked%2A> これらの動詞プロパティを設定することはできません、および <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageStyle%2A> プロパティはまったくに適用されません。  
  
 ただし、開発者がカスタムを作成できます <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> コントロールを設定して、チェック マークで継続的な状態を示す可能性があるその <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked%2A> プロパティを `true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartVerb.Checked" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="MenuCheckImageUrl">
      <MemberSignature Language="C#" Value="public virtual string MenuCheckImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MenuCheckImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>それぞれの動詞メニューにチェック マークとして使用されるイメージの URL を設定を取得または <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>チェック マークとして使用するイメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuCheckImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="MenuLabelHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuLabelHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuLabelHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>属性のタイトル バーの動詞メニューのラベルに適用されるスタイルを取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 、ユーザーが、ラベル上にマウス ポインターを置いた場合を制御します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 動詞メニューにあるラベルのスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle%2A> プロパティは、ゾーン内の各 Web パーツ コントロールの動詞メニュー全体のラベルのスタイルに影響します。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone2`します。 ブラウザーにページを読み込むと、編集モードに切り替えるし、Web パーツ コントロールの動詞メニューに、マウス ポインターを置きます。 ラベルのテキストが太字に終了したことに注意してください。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuLabelStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuLabelStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuLabelStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイル ラベルのそれぞれのタイトル バーに表示されている動詞のドロップダウン メニューの情報を取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 動詞メニューのラベルのスタイル情報を格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A> プロパティは、ラベルが画像、テキスト、またはその両方を含むかどうかに関係なく、ゾーン内の各 Web パーツ コントロールの動詞メニュー上のラベルのスタイルに影響します。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone2`します。 ブラウザーにページを読み込んだ後、ページに切り替える編集モードと内の動詞メニューの色のラベルを `WebPartZone2` は宣言型マークアップでそれに割り当てられた色。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText" />
      </Docs>
    </Member>
    <Member MemberName="MenuLabelText">
      <MemberSignature Language="C#" Value="public virtual string MenuLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MenuLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>それぞれのタイトル バーに動詞のドロップダウン メニューのラベルとして機能する値を取得または <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>動詞メニューのラベルに表示されるテキストを含む文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText%2A> プロパティの値が割り当てられた、ラベルを表示するそれぞれのタイトル バーに動詞のドロップダウン メニューを表す画像と共に <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 プロパティの値が割り当てられていない場合は、メニューのイメージのみが表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelText%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone2`します。 ブラウザーにページを読み込んだ後、ページに切り替える編集モードと内の動詞メニュー テキストのラベルを `WebPartZone2` 宣言型マークアップに割り当てられた値です。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuPopupImageUrl">
      <MemberSignature Language="C#" Value="public virtual string MenuPopupImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MenuPopupImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>それぞれのタイトル バーに動詞のドロップダウン メニューが表示されるイメージの URL を設定を取得または <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>動詞のドロップダウン メニューを開くに使用されるイメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値が割り当てられていない場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl%2A> プロパティ、既定のイメージのタイトル バーの動詞のドロップダウン メニューを開くに下向きの矢印が提供されるように見える、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupImageUrl%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone2`します。 編集モードに切り替えるし、画像のプレース ホルダー \(またはいずれかにパスを割り当てている場合は実際の画像\) にコントロールの動詞メニュー ラベルに表示されることに注意してください。 をブラウザーにページを読み込むと、 `WebPartZone2`です。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuPopupStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartMenuStyle MenuPopupStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartMenuStyle MenuPopupStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartMenuStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>属性に表示されるドロップダウン動詞メニューのスタイルを取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartMenuStyle" /> 動詞メニューのスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle%2A> プロパティでは、それぞれに表示されるドロップダウン動詞メニューのスタイル属性を設定することができます <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 読み取り専用オブジェクト自体では、基になる属性の値を設定できます。 境界線の色、スタイル、幅など、メニュー全体のスタイル属性を設定することができます。フォントの詳細高さと幅。背景色。セル内のスペース、行間影の色\] \(ユーザーのオペレーティング システムでのシャドウが有効になっている\) 場合です。グリッド線を選択します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuPopupStyle%2A> プロパティは適用される場合にのみ、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> にプロパティの値が設定されている <xref:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.Menu>, 、既定であります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="MenuVerbHoverStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuVerbHoverStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuVerbHoverStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンドユーザーが、動詞上にマウス ポインターを置いたときに、動詞のドロップダウン メニューに動詞の外観のスタイル情報を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 、ユーザーが動詞の上にマウス ポインターを置いたときに、動詞のスタイル情報を格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるスタイル情報、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle%2A> プロパティが、ユーザーが、動詞のいずれかの上にマウス ポインターを置いたときに、動詞メニューでは、個々 の動詞に適用されます。  
  
 このプロパティが読み取り専用の場合、基になるスタイル属性を設定することができます <xref:System.Web.UI.WebControls.Style> オブジェクトです。  
  
 動詞を含むメニューが Microsoft Internet Explorer のポップアップのオブジェクトを使用して作成されるため、メニューは正しく表示できない、枠線を別のテキストの長さを持つ動詞上にマウス ポインターを置くとします。 この最善の回避策が宣言するには、 `<MenuVerbHoverStyle>` のすべての動詞メニューの幅がまったく同じサイズであるため、非表示の輪郭を持つ要素。 宣言型の要素は、ゾーン内で発生して、次のようになります。  
  
```  
<asp:WebPartZone ID="WebPartZone1" runat="server">  
  <MenuVerbHoverStyle BorderStyle="Solid" BorderWidth="1px"      BorderColor="White" />  
  <ZoneTemplate>  
      <asp:Button ID="Button1" runat="server" Text="Button" />  
  </ZoneTemplate>  
</asp:WebPartZone>  
```  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbHoverStyle%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone2`します。 ブラウザーにページを読み込んだ後、ページを編集モードに切り替えます。 動詞メニューと動詞メニューにコントロールの背景色に注意してください\] をクリックして `WebPartZone2` は宣言型マークアップでそれに割り当てられた色。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuLabelHoverStyle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle" />
      </Docs>
    </Member>
    <Member MemberName="MenuVerbStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style MenuVerbStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style MenuVerbStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニューが表示されたら、動詞ドロップダウン メニューの動詞の外観のスタイル情報を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 動詞メニューに表示される動詞のスタイル情報を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるスタイル情報、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A> プロパティ動詞メニューにそれぞれ個別の動詞に適用されます。  
  
 このプロパティが読み取り専用の場合、基になるスタイル属性を設定することができます <xref:System.Web.UI.WebControls.Style> オブジェクトです。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MenuVerbStyle%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone2`します。 ブラウザーにページを読み込んだ後、ページを編集モードに切り替えます。 動詞メニューをクリックしていることを確認の動詞メニューにコントロールのフォント スタイル `WebPartZone2` スタイルの宣言型マークアップに割り当てられています。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#3)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb MinimizeVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb MinimizeVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> を最小限に抑えるエンドユーザーを有効にするオブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーが最小限に抑える <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって参照される minimize 動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb%2A> プロパティは、それぞれの動詞メニューに表示 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 すべてのページの表示モードの動詞が表示されます。  
  
 コントロールを最小限に抑える小さいサイズに縮小、コントロールのタイトル バーのみをそのまま表示、および restore 動詞は、タイトル バーに表示します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コード例を実行するには、すべてのコード例」のセクションを必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティです。  
  
 コード例の次の部分では、部分クラスは、動詞を最小化を有効または無効になっているかどうかを切り替えるコードが含まれています。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 コード例の他の部分は、ユーザー設定をホストする Web ページ <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御し、ユーザー インターフェイス \(UI\) が含まれています。 注意して、宣言型 `<MinimizeVerb>` 、ゾーン内の要素の値を設定する、 `Description` 属性のテキストで、ユーザーが動詞メニューに verb 上にマウス ポインターを置いたときにツールヒントとして表示します。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 ブラウザーでページを読み込むと、カタログ表示モードに切り替えるし、追加、 `TextDisplayWebPart` 追加されていない場合は、ページに制御します。 有効にし、最小化動詞を無効にする\] チェック ボックスを使用する、 `TextDisplayWebPart` コントロールです。 動詞が有効にすると、コントロールを最小限に抑えることもクリックできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb" />
      </Docs>
    </Member>
    <Member MemberName="MinimizeWebPart">
      <MemberSignature Language="C#" Value="protected virtual void MinimizeWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void MinimizeWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを最小化します。</param>
        <summary>選択した最小限に抑える <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeWebPart%2A> メソッドは、ユーザーが最小化動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 メソッドのセット、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> 、選択したプロパティ値 <xref:System.Web.UI.WebControls.WebParts.WebPart> に制御を <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized>します。 最小化状態 <xref:System.Web.UI.WebControls.WebParts.WebPart> のタイトル バーのみが表示されたままとコントロールがそのゾーン内で解除し、その内容を非表示にします。  
  
 メソッドのみ使用してで派生 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> などのゾーンで <xref:System.Web.UI.WebControls.WebParts.WebPartZone>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb" />
        <altmember cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateVerbs">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateVerbs (System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateVerbs(class System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs(System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オーバーライドすることができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 派生メソッド <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンに追加するクラス <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> ゾーンでの標準的な動詞のコレクションにオブジェクトです。 こうことで、コレクションに動詞を追加することで、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerbsEventArgs.Verbs%2A> プロパティです。  
  
   
  
## 例  
 次のコード例は、ハンドラーを作成する方法を示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs> イベントをオーバーライドすることで、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> 派生するカスタム動詞を追加するメソッドを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。  
  
 このコード例には、2 つのソース ファイルが含まれています。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 コンパイルする方法について説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 コード例の最初の部分は、ソース コードから派生した単純なコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスです。  
  
 [!code-csharp[WebParts\_WebPartVerb2\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/SimpleControl.cs#2)]
 [!code-vb[WebParts\_WebPartVerb2\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/SimpleControl.vb#2)]  
  
 コード例の 2 つ目は派生のソース コード <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> をオーバーライドするゾーン、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnCreateVerbs%2A> メソッドをカスタム動詞をゾーンに追加します。 このコードでは、動詞メニューに表示されるカスタム動詞もが作成 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーンでは、コントロールが含まれているし、動詞は、現在の別のコピーを作成 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPartVerb2\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/ZoneWithAddedVerb.cs#3)]
 [!code-vb[WebParts\_WebPartVerb2\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/ZoneWithAddedVerb.vb#3)]  
  
 コード例の 3 番目の部分は、派生のゾーンをホストする Web ページと <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 ページの上部には、 `Register` 派生ゾーン コンポーネントを参照するディレクティブです。 ブラウザーでページを読み込む場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、ゾーンが表示されます。 動詞メニューをクリックし、クリックして、 **CopyWebPart** 、動詞とそのコントロールのコピーを作成します。  
  
 [!code-csharp[WebParts\_WebPartVerb2\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartVerb2/CS/Defaultcs.aspx#1)]
 [!code-vb[WebParts\_WebPartVerb2\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartVerb2/VB/Defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateVerbs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.OnPreRender%2A> メソッドを呼び出す基本 <xref:System.Web.UI.WebControls.WebParts.WebZone.OnPreRender%2A> メソッドで、 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラス、およびゾーンのすべての動詞を作成します。 これにより、ページ開発者は、ビュー ステートが保存され、ページがレンダリングされる前に、ゾーン内の動詞にプログラムで変更を加えることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">ポストバックの引数。</param>
        <summary>現在のコレクションの状態を更新 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーンで、コントロール、最新のポストバック イベント以降に行われた変更に基づいています。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、ゾーンの内容を受け取る。</param>
        <summary>指定したゾーンをレンダリング <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render%2A> メソッドから基本メソッドをオーバーライドして、 <xref:System.Web.UI.WebControls.WebControl> 値を設定するクラス、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderColor%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderStyle%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.BorderWidth%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、ゾーンの本文の内容を受け取る。</param>
        <summary>派生したゾーンの本体領域をレンダリングする基本メソッドをオーバーライドして、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody%2A> メソッドは、ヘッダーおよびフッター領域間でのメイン コンテンツ領域され含むゾーンの本体領域をレンダリング <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody%2A> メソッドで基本メソッドをオーバーライドして、 <xref:System.Web.UI.WebControls.WebParts.WebZone> レイアウトとスタイルに対応する特殊な表示属性を提供するクラスを一意にする適用 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。 メソッドは、本文の内容全体を含むテーブルを出力し、さまざまな条件に応じて異なる属性値を設定、そのテーブル内かどうかを含む、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> に垂直または水平にプロパティが設定され、かどうか、ページが現在デザイン表示モード。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderDropCue">
      <MemberSignature Language="C#" Value="protected virtual void RenderDropCue (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderDropCue(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderDropCue(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールを削除することを示す UI 要素を受け取る。</param>
        <summary>エンドユーザーに示すために、ユーザー インターフェイス \(UI\) 要素の表示場所、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内でドラッグされているコントロールを削除することができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合は、デザインの表示モードでページを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> プロパティに設定されて `true` \(既定値\) をドラッグしてページのレイアウトを変更することができます <xref:System.Web.UI.WebControls.WebParts.WebPart> 内およびゾーン間でのコントロールです。<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderDropCue%2A> メソッドによって UI 要素の表示、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> ドラッグされているコントロールを削除するユーザーに示す zone のプロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderHeader">
      <MemberSignature Language="C#" Value="protected override void RenderHeader (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderHeader(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderHeader(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> ヘッダーの内容を受け取る。</param>
        <summary>ヘッダーを表示する基本メソッドをオーバーライドして、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> を含んでいるゾーン <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderHeader%2A> メソッドが基本メソッドをオーバーライドできるように、レンダリングできるヘッダーから派生するゾーンに固有の <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスし、を含む <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 異なり、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> ゾーン、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンには、ヘッダー内の動詞は不要です。 必要なものは、単一セルのテーブル、ゾーンのタイトル、およびタイトルに適用されるスタイル属性だけです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderHeader(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderHeader(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RestoreVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb RestoreVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb RestoreVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> を復元するエンドユーザーを有効にするオブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> を標準サイズ ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーが復元する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって参照される復元動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb%2A> プロパティがそれぞれの動詞メニュー内に表示 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが最小化されている、ゾーン内のコントロールです。 動詞は、すべてのページの表示モードのメニューに表示されます。  
  
 コントロールを復元する展開されます、通常のサイズに、コントロールが以前最小化した後。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コード例を実行するには、すべてのコード例」のセクションを必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HelpVerb%2A> プロパティです。  
  
 コード例の次の部分では、部分クラスは、restore 動詞を有効または無効になっているかどうかを切り替えるコードが含まれています。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs.cs#5)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs.vb#5)]  
  
 コード例の他の部分は、ユーザー設定をホストする Web ページ <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御し、ユーザー インターフェイス \(UI\) が含まれています。 注意して、宣言型 `<RestoreVerb>` 、ゾーン内の要素の値を設定する、 `Description` 属性のテキストで、ユーザーが動詞メニューに verb 上にマウス ポインターを置いたときにツールヒントとして表示します。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/CS/webpartzonebase_verbs_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Verbs\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Verbs/VB/webpartzonebase_verbs_vb.aspx#2)]  
  
 ブラウザーでページを読み込むと、カタログ表示モードに切り替えるし、追加、 `TextDisplayWebPart` 追加されていない場合は、ページに制御します。 最小化動詞を使用して、、コントロールを最小化し、復元動詞が表示されていることに注意してください。 Restore 動詞を無効にする\] チェック ボックスを使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.MinimizeVerb" />
      </Docs>
    </Member>
    <Member MemberName="RestoreWebPart">
      <MemberSignature Language="C#" Value="protected virtual void RestoreWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RestoreWebPart(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 復元するコントロール。</param>
        <summary>選択した復元 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 通常の状態を最小化されているコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ゾーンの場合 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.AllowLayoutChange%2A> プロパティに設定されて `true`, 、および <xref:System.Web.UI.WebControls.WebParts.WebPart> そのゾーン内のコントロールはその <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> プロパティに設定 <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized>, 、呼び出し元、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreWebPart%2A> メソッドに制御が返されます <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Normal> 状態で、通常のサイズおよび外観を意味します。  
  
 通常、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreWebPart%2A> メソッドが呼び出されるは、ユーザーがクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb%2A> 動詞です。  
  
 メソッドのみ使用してで派生 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> などのゾーンで <xref:System.Web.UI.WebControls.WebParts.WebPartZone>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RestoreVerb" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた後で発生したビューステートの変更を保存します。</summary>
        <returns>ゾーン コントロールの現在のビュー ステートを返します。 このメソッドが戻るかどうかビューステートがゾーンに関連付けられていない、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SaveViewState%2A> メソッドは、ベース <xref:System.Web.UI.WebControls.WebParts.WebZone.SaveViewState%2A> ゾーンのスタイル属性を表示するメソッドです。 ゾーンに個々 のすべての動詞と動詞メニューの状態情報を保存します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.SaveViewState" />
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedPartChromeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartChromeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartChromeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイルの選択した外観に関する情報を取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 、選択したスタイル情報が含まれる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A> プロパティを使用すると、選択したスタイルの特性をアクセス <xref:System.Web.UI.WebControls.WebParts.WebPart> Web パーツ ページが編集モードの場合、ゾーン内のコントロールです。  
  
   
  
## 例  
 宣言型の使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 注意して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.SelectedPartChromeStyle%2A> 宣言型マークアップに割り当てられた値を持つプロパティです。 この値に影響を与えます `WebPartZone1`します。 ブラウザーにページを読み込んだ後、ページを編集モードに切り替えます。 いずれかの動詞メニューで、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、コントロールを編集し、コントロールの背景色は、宣言型マークアップでそれに割り当てられた色に変わることに注意してください動詞をクリックします。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview_cs.aspx#2)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowTitleIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowTitleIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowTitleIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイトル アイコンがそれぞれのタイトル バーに表示されているかどうかを示す値を取得または <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>
          <see langword="true" /> タイトルのアイコンを表示する場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons%2A> プロパティでは、1 つ以上の場合にのみゾーンで有効、 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールが、それぞれに割り当てられている値を持つ <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> プロパティです。 既定では、タイトルのアイコンがゾーンで表示されます。 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.ShowTitleIcons%2A> にプロパティが設定されている `false`, 、タイトルのアイコンのいずれも <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールが表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">ポストバックの引数。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />」を参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> のインスタンスが <xref:System.Web.UI.IPostBackEventHandler> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBarVerbButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType TitleBarVerbButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType TitleBarVerbButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のタイトル バーにある動詞のためのボタンの種類 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> ボタンの種類をコントロールのタイトル バーにある動詞の使用を示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType%2A> プロパティは適用される場合にのみ、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> にプロパティの値が設定されている <xref:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.TitleBar>, 、その結果はそれぞれのタイトル バーに直接レンダリングする標準的な動詞 <xref:System.Web.UI.WebControls.WebParts.WebPart> 、ゾーン内のコントロールです。 タイトル バーにボタンの種類には、ボタンの画像、またはハイパーリンクを指定できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティの値は、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="TitleBarVerbStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style TitleBarVerbStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style TitleBarVerbStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動詞の属性がのタイトル バーのスタイルを取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 動詞のスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle%2A> プロパティを使用するすべてのタイトル バーにある動詞のスタイル属性を持つスタイル オブジェクトを取得する <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 のみ動詞は実際に表示された場合など、タイトル バーにプロパティが適用される、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> にプロパティの値が設定されている <xref:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.TitleBar>します。  
  
 プロパティによって参照されるオブジェクトは、読み取り専用では、タイトル バーにある動詞の基になるスタイル属性を変更できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ゾーンに格納できるようにビュー ステートの変更の追跡のプロセスが開始され、 <see cref="T:System.Web.UI.StateBag" /> オブジェクトし、を使用してアクセス、 <see cref="P:System.Web.UI.Control.ViewState" /> プロパティです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TrackViewState%2A> メソッドは、ベース <xref:System.Web.UI.WebControls.WebParts.WebZone.TrackViewState%2A?displayProperty=fullName> 、ゾーンのスタイル属性の状態を追跡する方法です。 また、すべての個別の動詞のステータスを追跡し、ゾーン内の動詞メニューのスタイル情報を開始します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.TrackViewState" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="VerbButtonType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ButtonType VerbButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType VerbButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に存在する動詞に関連付けられたボタンの種類、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンの古いブラウザーを使ってアクセスするときにします。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> はゾーン内の動詞に関連付けられたボタンの種類を決定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツの動詞は、ユーザーは最小限に抑え、閉じると、復元中のコントロールなどの Web パーツ ページのユーザー インターフェイス \(UI\) で実行できるアクションを表しますページにコントロールの追加または、操作をキャンセルします。 動詞が ui を使用して、ハイパーリンク、画像、またはボタンとして表示される設定可能なクリック可能なオブジェクトによって表される、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> 動詞のいずれかに存在する動詞ではなく、ゾーン レベルでのみ存在するプロパティが適用される、 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールです。 たとえば、ページをカタログ モードまたは編集モードに切り替えるがあるゾーン レベルの動詞、ゾーン全体のレベルのアクションにのみ適用されるゾーンのフッター内<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> \(「ダウンレベル」\) の古いブラウザーで Web パーツ ページにアクセスするときにプロパティを適用します。  
  
 値を割り当てる必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.ImageUrl%2A> そのゾーンには、その動詞用に表示されるイメージが発生する特定の verb ごとのプロパティです。 イメージに、動詞の URL を指定しないかどうかは <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.VerbButtonType%2A> プロパティの既定値 <xref:System.Web.UI.WebControls.ButtonType.Link>です。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ButtonType" />
      </Docs>
    </Member>
    <Member MemberName="WebPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartChrome WebPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartChrome WebPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> の周辺機器のレンダリングを決定するオブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" /> ゾーンでのコントロールのレンダリングを決定します。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CreateWebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="WebParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartCollection WebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンに含まれる Web パーツ コントロールのコレクションを取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> ゾーン内のすべての Web パーツ コントロールへの参照を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> プロパティから直接継承するコントロールへの参照を含めることができます、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラス、およびその他の ASP.NET サーバー コントロールまたはゾーン内のカスタム コントロールです。 Web パーツ コントロールを動的に設定がない場合、コントロールをラップする、 <xref:System.Web.UI.WebControls.WebParts.WebPart> と制御、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 実行時に制御は、このメカニズムでは、Web パーツ コントロールとして ASP.NET コントロールのすべての型を使用することができます。  
  
   
  
## 例  
 プログラムによる使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 コードのソース ファイルでこのコードは、ゾーンが格納されて、.aspx ページなど、完全なコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスの概要です。  
  
 次のコード例へのアクセス、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> プロパティ プログラムに含まれるコントロールの一覧を表示および `WebPartZone1`です。 ブラウザーにページを読み込んだ後というボタンをクリックします。 **リスト WebPartZone1 WebParts**します。 Id と、コントロールの種類が表示されます。  
  
 [!code-csharp[WebParts\_WebPartZoneBase\_Overview\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/CS/webpartzonebase_overview.cs#8)]
 [!code-vb[WebParts\_WebPartZoneBase\_Overview\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZoneBase_Overview/VB/webpartzonebase_overview.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts" />
      </Docs>
    </Member>
    <Member MemberName="WebPartVerbRenderMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode WebPartVerbRenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode WebPartVerbRenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>動詞の描画方法を示す値を取得または <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" /> で動詞の描画方法を示す列挙値 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。 既定値は <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode.Menu" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebPartVerbRenderMode%2A> プロパティを決定するかどうかの動詞 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内のコントロールは、コントロールのタイトル バーで、またはドロップダウンの動詞メニューに表示されます。 動詞をタイトル バーに表示される場合は、設定することも、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType%2A> と <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbStyle%2A> 、動詞の外観を変更するプロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティの値は、のいずれかではない、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.TitleBarVerbButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbRenderMode" />
      </Docs>
    </Member>
  </Members>
</Type>