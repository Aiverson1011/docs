<Type Name="EditorPart" FullName="System.Web.UI.WebControls.WebParts.EditorPart">
  <TypeSignature Language="C#" Value="public abstract class EditorPart : System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorPart extends System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> ゾーン内に存在するコントロールの基底クラスとして機能し、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの編集に使用されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.WebParts.EditorPart> class provides a base set of properties and methods that are used by the derived <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls provided with the Web Parts control set, and by custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. An <xref:System.Web.UI.WebControls.WebParts.EditorPart> control allows a user to edit an associated <xref:System.Web.UI.WebControls.WebParts.WebPart> control by modifying its layout, appearance, properties, behavior, or other characteristics.  
  
 The editing user interface \(UI\), which consists of <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones that contain <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, is displayed after a Web page enters edit mode.  
  
> [!NOTE]
>  An <xref:System.Web.UI.WebControls.WebParts.EditorPart> control can be used only within a zone that derives from the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class, such as the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control.  
  
 After a page has entered edit mode, a user can select a <xref:System.Web.UI.WebControls.WebParts.WebPart> control to edit by clicking an edit verb on the verbs menu of the selected control. Only one <xref:System.Web.UI.WebControls.WebParts.WebPart> control can be edited at a time.  
  
 Several derived <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls are provided with the Web Parts control set, as listed in the following table. These controls provide all the editing capabilities that are necessary for most applications. The typical approach for using these controls in a Web Parts page is to declare them in page persistence format within a **languageKeyword tag is not supported!!!!**  
 element, where **languageKeyword tag is not supported!!!!**  
 is the child element of an **languageKeyword tag is not supported!!!!**  
 element. For a code example, see the Example section of this topic.  
  
|Type of control|Description|  
|---------------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.AppearanceEditorPart>|Edits the appearance of the associated control, including properties such as its title text, height, width, and border attributes.|  
|<xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart>|Edits certain behaviors of the associated control, such as whether it can be edited, whether it can be closed, or whether it can be moved to another zone. This control is only visible on a page when a control is being edited in shared personalization scope.|  
|<xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>|Edits layout attributes for the associated control, such as whether it is in a normal or minimized \(collapsed\) state, and what zone it is placed in.|  
|<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>|Edits properties of the associated control, if those properties were declared in the source code with a **languageKeyword tag is not supported!!!!**<br /> attribute.|  
  
> [!NOTE]
>  To improve accessibility, all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls provided in the Web Parts control set are rendered within a **languageKeyword tag is not supported!!!!**  
>  element. The **languageKeyword tag is not supported!!!!**  
>  element groups the related set of controls used for editing in a given <xref:System.Web.UI.WebControls.WebParts.EditorPart> control, and it facilitates tabbed navigation among those controls for both visual user agents \(such as ordinary Web browsers\) and speech\-oriented user agents \(such as screen\-reading software\).  
  
   
  
## 例  
 The following code example demonstrates declarative and programmatic use of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. This code example has four parts:  
  
-   A user control that enables you to change display modes on a Web Parts page.  
  
-   A Web page that contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control, with several of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls from the Web Parts control set declared in the zone, and a reference to a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
-   A class that contains the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and a custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> control for editing a property in the <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
-   An explanation of how the example works when you load the page in a browser.  
  
 The first part of this code example is the user control that enables users to change display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-csharp[WebParts\_EditorPart\_Overview\#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/displaymodecs.ascx#14)]
 [!code-vb[WebParts\_EditorPart\_Overview\#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/displaymodevb.ascx#14)]  
  
 The second part of the code example is the Web page. It contains a declarative reference to an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control, with a child **languageKeyword tag is not supported!!!!**  
 element that contains declarative references to two of the Web Parts control set <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. The page also references a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, using a **languageKeyword tag is not supported!!!!**  
 directive for the assembly, and the **languageKeyword tag is not supported!!!!**  
 element for the control.  
  
 [!code-csharp[WebParts\_EditorPart\_Overview\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/editorpart_overview_cs.aspx#12)]
 [!code-vb[WebParts\_EditorPart\_Overview\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/editorpart_overview_vb.aspx#12)]  
  
 The third part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `TextDisplayWebPart`. The class implements the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface. Within this class is a nested, private class that contains the code for a private <xref:System.Web.UI.WebControls.WebParts.EditorPart> class associated with the `TextDisplayWebPart` class and named `TextDisplayEditorPart`. At run time, as the `TextDisplayWebPart` control enters edit mode, in its `TextDisplayWebPart.CreateEditorParts` method, it creates an instance of the `TextDisplayEditorPart` class, and displays it in the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control, along with the other <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls.  
  
 [!code-csharp[WebParts\_EditorPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts\_EditorPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#1)]  
  
 Load the page in a browser, and on the **ui tag is not supported!!!!**  
 control, select **ui tag is not supported!!!!**  
 to switch to edit mode. Click the verbs menu \(the downward arrow\) in the title bar of the `TextDisplayWebPart` control, and click **ui tag is not supported!!!!**  
 to edit the control. When the editing UI is visible, you can see three <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, including the custom one that enables you to edit the `TextDisplayWebPart.FontStyle` property. If you make some changes in the editing UI and click the **ui tag is not supported!!!!**  
 button, you can use the drop\-down list control to return the page to browse mode and see the full effect of the editing changes.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>To create a custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control, you must override two important methods. The <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> method applies changes made in the editor control to the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control being edited. The <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> method gets the current values of the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control being edited, so that the editor control can edit them. Using these two critical methods, you get and set values between your custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control and the <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control it is editing.  
  
 If you derive from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> class to create custom editor controls, you can add your custom controls to an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> zone by implementing the <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interface in a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, a user control, or a server control. For more details and a code example, see the <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> class overview. Also, the code example in the Example section demonstrates how to implement <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> in a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>継承クラス インスタンスによって使用されるクラスを初期化します。 このコンス トラクターは、継承クラスによってのみ呼び出すことができます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyChanges">
      <MemberSignature Language="C#" Value="public abstract bool ApplyChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ApplyChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>値を保存、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> 、関連する対応するプロパティにコントロール <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <returns>
          <see langword="true" /> 保存の動作の値の場合、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> への制御、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールが正常でない場合 \(エラーが発生\)、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> メソッドは、重要なメソッド、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。 抽象メソッドとして定義されて、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> クラス、および継承されたコントロールによって実装される必要があります。 メソッドの目的は、ユーザーによって入力された値を保存する、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールに対応するプロパティを <xref:System.Web.UI.WebControls.WebParts.WebPart> で参照されているコントロール、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> メソッドは、\[ok\] や、編集するユーザー インターフェイス \(UI\) に適用の動詞を表すボタンをクリックします。  
  
   
  
## 例  
 次のコード例を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> カスタム メソッド <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> クラスの概要です。  
  
 このコード例の最初の部分がの実装を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> 、カスタム メソッド <xref:System.Web.UI.WebControls.WebParts.EditorPart> という名前のクラス `TextDisplayEditorPart`します。 このメソッドは、関連付けられたへの参照を取得します。 `TextDisplayWebPart` 制御を使用して、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> プロパティです。 値を更新し、 `TextDisplayWebPart.FontStyle` プロパティです。  
  
 [!code-csharp[WebParts\_EditorPart\_Overview\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#5)]
 [!code-vb[WebParts\_EditorPart\_Overview\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#5)]  
  
 コード例の 2 番目の部分を示していますどのように関連付けられている <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 `TextDisplayWebPart`, のコレクションを作成関連付けられている <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール \(ここでは 1 つだけ <xref:System.Web.UI.WebControls.WebParts.EditorPart> という名前のコントロール `TextDisplayEditorPart` コレクション内\) の実装で、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドです。 このメソッドが実行されるときに、 `TextDisplayWebPart` 制御が編集モードを開始します。  
  
 [!code-csharp[WebParts\_EditorPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts\_EditorPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>A class that derives from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> class must implement the <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" /> method. The implemented method gets a reference to the associated control using the <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> property, and then updates the properties of that control with the current values in the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public virtual bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールをするかどうかを示す値を取得場合に表示される、関連する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールが編集モードにします。</summary>
        <value>コントロールを表示するかどうかを示すブール値。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 At 編集の特定の時点の処理、ゾーンが含まれていますが、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> チェックを制御、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> コントロールを表示するかどうかを決定するプロパティです。  
  
 2 つのシナリオがある場所、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> プロパティを返します。 `false` と <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールは表示されません。 編集されているコントロールに最初のシナリオで発生する <xref:System.Web.UI.WebControls.WebParts.ProxyWebPart> コントロールです。 編集されているコントロールがあるときに、2 番目のシナリオが発生した、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> と <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> プロパティに設定 `true`, ユーザー レベルで、ページのパーソナル化スコープが設定されているとき、します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPart" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイトル バーに表示されるタイトル テキストを表す文字列を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <value>コントロールの完全な表示されるタイトルを表す文字列。 既定値は、.NET Framework によって指定された計算、カルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> プロパティ ベースの現在値を返します <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティや、コントロールにタイトル、計算値がありません。 計算された値は、タイトルのないコントロールのローカライズ可能なリソースの文字列で構成されます。 値が割り当てられていない場合、 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティ、値の <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> プロパティと異なります、 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.DisplayTitle%2A> プロパティが読み取り専用で、ある設計されている、実行時に表示されるタイトルの実際の現在の値を取得する集計プロパティのタイトルを設定するこのプロパティを使用しないで、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。 タイトルを設定するには、ベースを使用して <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の状態を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールの親ゾーンです。</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> の現在の状態を持つ、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> を含んでいるゾーン、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.GetDesignModeState%2A> メソッドを含むゾーンの状態に関する情報を返します、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。 状態情報は、ディクショナリの形式で返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IControlDesignerAccessor.GetDesignModeState" />
        <altmember cref="M:System.Web.UI.Control.GetDesignModeState" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 基数を呼び出すことに加えて <xref:System.Web.UI.Control.OnPreRender%2A> 、メソッド、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.OnPreRender%2A> メソッドも確認、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> プロパティです。 値の場合 `false`, 、コントロールを表示しないこと、つまり、 <xref:System.Web.UI.Control.Visible%2A> プロパティに設定されても `false`です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> を含む、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールは <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDesignModeState">
      <MemberSignature Language="C#" Value="protected override void SetDesignModeState (System.Collections.IDictionary data);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetDesignModeState(class System.Collections.IDictionary data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SetDesignModeState(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="data">
          <see cref="T:System.Collections.IDictionary" /> 、ゾーンを表示するための状態データを格納します。</param>
        <summary>現在のデザイン モードの状態の特性を適用 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> を含んでいるゾーン、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncChanges">
      <MemberSignature Language="C#" Value="public abstract void SyncChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プロパティ値を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> のそれに関連するコントロール <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> メソッドは、重要なメソッド、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。 抽象メソッドとして定義されて、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> クラス、および継承されたコントロールによって実装される必要があります。 現在の値を取得するメソッドの目的は、 <xref:System.Web.UI.WebControls.WebParts.WebPart> で参照されるコントロール、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> プロパティには、フィールドを更新し、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 、ユーザーが編集できるように、これらの値を持つコントロールです。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> メソッドが呼び出されるたびに、関連する値 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールに変更された可能性です。 すべて <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> コントロールの呼び出しを含むゾーン、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> メソッドを呼び出した後すぐに、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> メソッド、ように内の値、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールは、関連する値を常に同期 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 別のケース場所、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> メソッドが呼び出されたときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが編集モードを入力します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 後メソッドを呼び出さない、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> メソッドの場合はそのメソッドが戻る `false`, その場合は、エラーが発生したため、します。  
  
   
  
## 例  
 次のコード例を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> カスタム メソッド <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> クラスの概要です。  
  
 このコード例の最初の部分がの実装を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A> 、カスタム メソッド <xref:System.Web.UI.WebControls.WebParts.EditorPart> という名前のクラス `TextDisplayEditorPart`します。 このメソッドは、関連付けられたへの参照を取得します。 `TextDisplayWebPart` 制御を使用して、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> プロパティです。 値を取得し、 `TextDisplayWebPart.FontStyle` プロパティ、およびドロップダウン リスト コントロールで選択されている項目の更新プログラム \(により参照されている、 `TextDisplayEditorPart.PartContentFontStyle` プロパティ\)、カスタム <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。  
  
 [!code-csharp[WebParts\_EditorPart\_Overview\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#6)]
 [!code-vb[WebParts\_EditorPart\_Overview\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#6)]  
  
 コード例の 2 番目の部分を示していますどのように関連付けられている <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 `TextDisplayWebPart`, のコレクションを作成関連付けられている <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール \(ここでは 1 つだけ <xref:System.Web.UI.WebControls.WebParts.EditorPart> という名前のコントロール `TextDisplayEditorPart` コレクション内\) の実装で、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドです。 このメソッドが実行されるときに、 `TextDisplayWebPart` 制御が編集モードを開始します。  
  
 [!code-csharp[WebParts\_EditorPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorPart_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts\_EditorPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorPart_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>A class that derives from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> class must implement the <see cref="M:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges" /> method. The implemented method gets a reference to the associated control using the <see cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" /> property, and then updates the <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control with the property values from the associated <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールの現在の Web ページに関連付けられています。</summary>
        <value>参照、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> ページです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールへの参照が必要、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> の値を決定するページの現在のパーソナル化スコープをチェックする必要があるために、インスタンス、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Display%2A> プロパティです。 チェックしてパーソナル化スコープが決定されます、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> はからアクセス プロパティ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 現在編集されているコントロール。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> は、現在編集モードにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> は、現在コントロール \(またはその他のサーバーまたはユーザー コントロール\) の値に対応する編集されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> プロパティです。 1 つだけ <xref:System.Web.UI.WebControls.WebParts.WebPart> 、時を使用して、コントロールが編集モードでは、コントロールを編集可能、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> プロパティはそのコントロールへの参照を提供します。  
  
 後に、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ゾーンが追加、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールのコントロールのコレクションにその後割り当てます独自の値 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit%2A> プロパティは特に、2 つの重要なメソッド\-\-<xref:System.Web.UI.WebControls.WebParts.EditorPart.ApplyChanges%2A> と <xref:System.Web.UI.WebControls.WebParts.EditorPart.SyncChanges%2A>\-\-を取得し、関連付けられたコントロールのプロパティ値を設定します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.EditorZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorPart.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> を含んでいるゾーン、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> コントロールが含まれています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ですが、 <xref:System.Web.UI.WebControls.WebParts.EditorPart.Zone%2A> プロパティは読み取り専用を格納しているゾーン オブジェクトへの参照を提供、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール、プログラムで変更するゾーン自体にプロパティ値です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>