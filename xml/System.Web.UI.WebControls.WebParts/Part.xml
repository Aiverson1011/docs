<Type Name="Part" FullName="System.Web.UI.WebControls.WebParts.Part">
  <TypeSignature Language="C#" Value="public abstract class Part : System.Web.UI.WebControls.Panel, System.Web.UI.INamingContainer, System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Part extends System.Web.UI.WebControls.Panel implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.Part" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICompositeControlDesignerAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.PartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web フォーム ページ上のモジュール式ユーザー インターフェイスをレンダリングするすべての Web パーツのパーツ コントロールの基底クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.Part> クラスは、すべてのパーツ コントロールに共通し、Web ページ上にモジュール化と一貫性のある外観が有効にするプロパティを定義します。 これらの共通プロパティには、タイトル、説明、および chrome または部分から成るコントロールを囲むフレームの特性が含まれます。  
  
 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティは、一部のコントロールのタイトルを指定します。<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティは、パーツ コントロールの目的の集計に使用され、コントロールのタイトル バーのツールヒントとして表示されます。<xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティでは部分から成るコントロール周囲に枠線の種類が描画されるときに、 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティ部分から成るコントロールが通常は、レンダリングまたは最小化されているかどうかを示します。 一部のコントロールの境界線がそれを含むゾーンのプロパティによって影響を受けるたとえば、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> プロパティは、ゾーンに含まれているすべてのパーツ コントロールのフレームに影響します。  
  
 一部のコントロールの 1 つが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールで、対応するゾーン内のコンテンツをレンダリングします。 別の種類は、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> を変更するユーザー インターフェイス \(UI\) コントロールを提供するコントロール \(個人用\) 個々 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 一部のコントロールの 3 つ目の種類は、 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> の一覧を提供するコントロール <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールをユーザーに追加したり、Web ページから削除します。  
  
 一部のコントロールが、抽象型から派生できるすべてのゾーンに含まれる <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスです。 ゾーンが含まれているパーツ コントロールを整理します。 各ゾーン要素もレンダリング UI 自体のヘッダー、フッター、タイトル バー、罫線などそれぞれ格納されているパーツ コントロールの周囲の UI 要素などです。  
  
> [!NOTE]
>  一部のコントロールは、通常のゾーンに配置するをゾーンの外側の部分から成るコントロールを配置できるコントロールが Web ページのマークアップで宣言によって参照されている場合。 部分から成るコントロールが Web ページで、ゾーン外で宣言されている場合、コントロールもができますが、その Web パーツの機能のほとんどが失われます。 たとえば、コントロールは、編集することはできず、実行時に、ゾーンにドラッグすることはできません。 必ずパーツ コントロールをゾーンからドラッグして実行時に、ゾーン以外のページにドロップすると便利です。  
  
 一部の基本型の例と、対応するゾーンの種類は、次の表に表示されます。  
  
|一部のコントロール型|ゾーンの種類|  
|----------------|------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPart>|<xref:System.Web.UI.WebControls.WebParts.WebPartZone>|  
|<xref:System.Web.UI.WebControls.WebParts.EditorPart>|<xref:System.Web.UI.WebControls.WebParts.EditorZone>|  
|<xref:System.Web.UI.WebControls.WebParts.CatalogPart>|<xref:System.Web.UI.WebControls.WebParts.CatalogZone>|  
  
 派生するコントロールの一部のさまざまな種類、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスは、UI 指向の継承されたプロパティを異なる方法で処理します。<xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールがいくつかの UI の継承されたプロパティをオーバーライドしとマーク、 `Personalizable` 属性 \(詳細については、「、 <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> クラスのドキュメント\)、パーソナル化と呼ばれる機能の後のブラウザー セッションを保存するには、そのプロパティ値有効にします。 たとえばの値を更新するユーザーをプログラムで有効にした場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> \(個人用設定が有効にしている既定値\) する場合に値をパーソナル化は実行時にプロパティです。 いくつかの UI プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールから継承、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスとの間、 <xref:System.Web.UI.WebControls.WebControl> クラスで同じ方法で処理されます。  
  
 これに対し、他のパーツなどのコントロール、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> と <xref:System.Web.UI.WebControls.WebParts.CatalogPart>, 、個人用に設定するのに UI の継承されたプロパティを有効にしません。 このため、プロパティの値は今後のブラウザー セッションの保存されませんがプログラムを使用して割り当てられます。 たとえば、更新するユーザーをプログラムで有効にした場合、 <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> コントロールの <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.Title%2A> プロパティ実行時に、更新後の値は、失われた後、コントロールを閉じるか、ブラウザー セッションが終了します。  
  
 このような値を保存する簡単な方法の UI プロパティを継承する <xref:System.Web.UI.WebControls.WebParts.EditorPart> と <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 後のブラウザー セッションの制御とはページの永続化の形式でプロパティ値を宣言します。 ただし、これは静的なアプローチでありまだはプロパティの値を個人用に設定するユーザーを許可しません。 代わりに、ユーザーが、実行時にカスタマイズできるように、継承された UI プロパティをプログラムで更新を有効にする場合できる変数を使用するプライベートな静的プロパティの値を保存します。 新しいインスタンスをたび、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> または <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールが作成 \(コントロールを処理するメソッドのなどで <xref:System.Web.UI.Control.Init> イベント\)、静的変数の値を対応するプロパティを再割り当てすることができます。 この方法で、ユーザーは、編集の UI とカタログの Web パーツ アプリケーションの UI をカスタマイズすること。  
  
   
  
## 例  
 次のコード例は、いくつかのプロパティの宣言型の使用法を示します、 <xref:System.Web.UI.WebControls.WebParts.Part> クラス、カスタムの 2 つのインスタンスを使用して <xref:System.Web.UI.WebControls.WebParts.WebPart> 、ASP.NET Web ページで参照されているコントロール。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 この例の最初の部分には、というカスタムのコントロールのコードが含まれています。 `TextDisplayWebPart`します。 コントロールがから派生するので <xref:System.Web.UI.WebControls.WebParts.WebPart>, 、共通のプロパティも継承しますが、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスを提供して、このコード例では、そのプロパティの使用方法について説明します。  
  
 [!code-csharp[WebParts\_Part\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts\_Part\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/textdisplaywebpart.vb#2)]  
  
 例の 2 番目の部分では、ASP.NET Web ページで一部のカスタム コントロールを参照する方法を示します。 注意して、さまざまな <xref:System.Web.UI.WebControls.WebParts.Part> プロパティがカスタム コントロールのインスタンスを宣言によって割り当てられます。 ページで、2 つのインスタンスを参照する宣言型コードと比較して、ブラウザーでページを読み込みます。 さまざまなプロパティがコントロールの外観に与える影響に注意してください。 たとえば、ブラウザー、2 番目のインスタンス内のページを読み込む後、 `TextDisplayWebPart` いるため、最小化したコントロールが表示されます、 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティの値に設定されて <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized>です。  
  
 [!code-csharp[WebParts\_Part\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-vb[WebParts\_Part\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Normally, you should not inherit directly from the <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> class to develop custom Web Parts controls. To provide full Web Parts functionality, the Web Parts control set requires the classes derived from the <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> class, namely <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />, and <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, so you should derive from them to develop custom controls. However, it is still important to understand the behavior of the base <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> class, because it provides a common set of properties used by all other part classes.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="ChromeState">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeState ChromeState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または部分から成るコントロールが最小化されているか、通常の状態であるかどうかを設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パーツ コントロールの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> 標準または最小化できます。  
  
   
  
## 例  
 次のコード例の宣言型の使用を示しています、 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> 部分から成るコントロール内のプロパティです。 この例は、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`, の例」のセクションに含まれている、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要です。  
  
 Web の宣言型マークアップに\] ページの 2 番目のインスタンスを `TextDisplayWebPart` コントロール セットの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティです。 ブラウザーでページを読み込むと、2 つ目のコントロールのインスタンスを最小化したが表示されます。  
  
 [!code-csharp[WebParts\_Part\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-vb[WebParts\_Part\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値は、のいずれかではありません、 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 値。</exception>
        <block subset="none" type="overrides">
          <para>Derived classes such as <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> can override <see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" /> to enable user personalization of the control's border state.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ChromeType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType ChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web パーツ コントロールを囲む罫線の種類を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パーツ コントロールの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティは、囲まれてコントロールの境界線の種類を決定します。 オプションには、どちらも、タイトル、境界線のみ、タイトルと枠線を表示または既定のオプションの値を使用して単に、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> プロパティです。  
  
   
  
## 例  
 次のコード例の宣言型の使用を示しています、 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> 部分から成るコントロール内のプロパティです。 この例は、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`, の例」のセクションに含まれている、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要です。  
  
 2 番目のインスタンスの Web ページの宣言型コードで、 `TextDisplayWebPart` コントロール セットの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティ、タイトルのみであるが、最初のインスタンスがある、タイトルと枠線をします。 ブラウザーでページを読み込んだ後、コントロールの 2 つ目のインスタンスを最小化したが表示されます。 コントロールを最大化する場合は、境界線なしのタイトルが表示されます。  
  
 [!code-csharp[WebParts\_Part\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-vb[WebParts\_Part\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値が、<see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 値ではありません。</exception>
        <block subset="none" type="overrides">
          <para>Derived classes such as <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> can override <see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" /> to enable user personalization of the kind of border that frames a control.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.ControlCollection" /> ユーザー インターフェイスの階層構造に指定されたサーバー コントロールの子コントロールを格納するオブジェクト。</summary>
        <value>指定されたサーバー コントロールの子コントロールのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 \[ASP.NET\] ページでは、開始タグと終了タグのサーバー コントロールの間のコントロールを宣言して追加するときに ASP.NET に自動的に追加のコントロールを含むサーバー コントロールの <xref:System.Web.UI.ControlCollection> オブジェクトです。 任意の HTML タグやサーバーで処理されないテキスト文字列として扱われます <xref:System.Web.UI.LiteralControl> オブジェクトです。 これらは、その他のサーバー コントロールと同様に、コレクションに追加されます。  
  
 <xref:System.Web.UI.Control.Controls%2A> プロパティを使用するのインスタンスにプログラムでアクセス、 <xref:System.Web.UI.ControlCollection> 任意のサーバー コントロールのクラスです。 コレクションにコントロールを追加、コントロールをコレクションから削除、またはコレクション内のサーバー コントロールを反復処理することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.Part.DataBind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出されたサーバー コントロールとそのすべての子コントロールにデータ ソースをバインドします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパーツ コントロールのツールヒントやカタログで使用する、パーツ コントロールの動作をまとめた簡単な語句を設定します。</summary>
        <value>文字列には、パーツ コントロールの機能が簡潔にまとめたものです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティは、通常、パーツ コントロールのタイトル バーのツールヒントとして、一部のコントロールのリストを提供するカタログで使用されている文字列。 内容、 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> パーツ コントロールのタイトル バーで、タイトル テキストの上にマウス ポインターを移動したときに、ツールヒントに表示されます。 値からツールヒント テキストを作成、 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 後にプロパティには、後に、ハイフン、 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティの値。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例の宣言型の使用を示しています、 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> 部分から成るコントロール内のプロパティです。 この例は、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`, の例」のセクションに含まれている、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要です。  
  
 最初のコントロールのインスタンスのタイトル テキストの上にマウス ポインターを配置する場合、ブラウザーでページを読み込むと、説明のテキストがツールヒントに表示されます。  
  
 [!code-csharp[WebParts\_Part\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-vb[WebParts\_Part\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Derived classes such as <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> can override <see cref="P:System.Web.UI.WebControls.WebParts.Part.Description" /> to enable user personalization of the control's description.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls">
      <MemberSignature Language="C#" Value="void ICompositeControlDesignerAccessor.RecreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン サーフェイス上のコントロールの子コントロールを再作成するには、複合パーツ コントロールのデザイナーの開発者はできます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または一部のコントロールのタイトルを設定します。</summary>
        <value>一部のコントロールのタイトルを表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 部分から成るコントロールのタイトル バーに表示されるタイトルのテキストが設定されて、 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティです。 タイトル バーの上にマウス ポインターを移動したときに、このタイトルのテキストもツールヒントのテキストの一部として表示されます、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールまたはその他のサーバー コントロールに表示される、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーンです。  
  
 タイトルのテキストのスタイルはによって決まります、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A> パーツ コントロールを含むゾーンのプロパティです。  
  
 コントロールのタイトルを指定しない場合、自動的に設定する Web パーツ コントロールは、タイトルとして使用する既定の文字列を計算します。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>」を参照してください。 また、タイトル バーの文字列に付加される標準のサブタイトルを提供することができます。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>」を参照してください。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例の宣言型の使用を示しています、 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> 部分から成るコントロール内のプロパティです。 この例は、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`, の例」のセクションに含まれている、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要です。  
  
 [!code-csharp[WebParts\_Part\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-vb[WebParts\_Part\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Derived classes such as <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> can override <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /> to enable user personalization of the title.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      </Docs>
    </Member>
  </Members>
</Type>