<Type Name="GenericWebPart" FullName="System.Web.UI.WebControls.WebParts.GenericWebPart">
  <TypeSignature Language="C#" Value="public class GenericWebPart : System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GenericWebPart extends System.Web.UI.WebControls.WebParts.WebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールではないサーバー コントロールが、実行時に本物の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのように表示されたり、動作したりするように、ラップします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールは存在していないサーバー コントロールの実行時ラッパーを提供する <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、Web パーツ ページとアプリケーションでこのようなコントロールを使用できるようにします。 ときにユーザー コントロール、ASP.NET サーバー コントロール、または既存のカスタム コントロール\-\-など\-\-サーバー コントロールの追加の開発者に、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> コントロール、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールが true と同じ機能を示すことができますので、実行時にサーバー コントロールが自動的に折り返される <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 次の表は、比較し、対照 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールと <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
|<xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロール|<xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|ないサーバー コントロールを身に存在する <xref:System.Web.UI.WebControls.WebParts.WebPart> Web パーツの機能を持つコントロールすべて、ASP.NET カスタム、またはユーザー コントロールは、Web パーツ アプリケーションに参加できます。|存在すると、ネイティブの Web パーツ機能が組み込まれているカスタムの ASP.NET コントロールを作成します。 これには、パーソナル化、接続、インポートとエクスポート、およびドラッグ アンド ドロップ機能が含まれます。|  
|ページのマークアップでは宣言されません。 ラップされたコントロール \(または子コントロール\) のすべての機能を提供して、実行時にサーバー コントロールをラップするだけが存在する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。|宣言できるページのマークアップ、ASP.NET サーバー コントロールと同様のデザイン時で宣言されている点を除いて、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。|  
|インクルードし、その子コントロールをパーソナル化の処理として機能するため、Web パーツに統合 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 これにより、Web パーツ アプリケーションでサーバー コントロールおよびユーザー コントロールを使用する開発者向けの単純なこのに自動的に発生します。|Web パーツのパーソナル化プロセスで自動的に含まれます。|  
|実行時にプログラムでアクセスできます \(を使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> メソッドを渡すことに、子サーバー コントロール\) などの真の <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールまたは標準の ASP.NET コントロール。|標準の ASP.NET コントロールと同様に、実行時にプログラムからアクセスすることができます。|  
  
 ユーザーにとってメリット、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 一貫したユーザー エクスペリエンスを提供するために制御します。 任意のサーバー コントロール可能であるように機能する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御して、動詞、アイコン、タイトル、ヘッダーなど、同じ一貫性のあるユーザー インターフェイス \(UI\) 要素を及ぼします。 開発者にとって、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 既存のユーザー コントロールと Web パーツ アプリケーション内でサーバー コントロールを再利用することができるためを制御します。  
  
> [!NOTE]
>  Web パーツ ページを作成するときにでラップするのには、既存のユーザー コントロールまたはカスタム コントロールを有効にするために何もする必要はありません、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。 単に、サーバーまたはユーザー コントロールを追加して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> プログラムまたはページのマークアップで宣言することによって、ゾーンし、自動的に設定する Web パーツ コントロールでコントロールをラップする、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 実行時にオブジェクトです。  
  
 サーバーを制御するために置かれます <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンがによってラップされた、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロール、実行時に、開発者が通常のサーバーを使用して、ユーザー コントロールの場合と同様、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 継承が、カスタムを宣言する場合を制御する <xref:System.Web.UI.Control> クラス内で、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, 、これらのコントロールは、組み込みの使用をサポートできない <xref:System.Web.UI.WebControls.WebParts.WebPart> プロパティです。 したがって、宣言することはできません、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> などのプロパティを含む、このようなコントロールのプロパティ、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> プロパティおよび <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> プロパティです。 これに対し、他の種類のサーバー コントロール \(など <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、ユーザー コントロール、およびカスタム コントロールから継承する <xref:System.Web.UI.WebControls.WebControl>\) の expando プロパティの使用をサポートしているために、これらのプロパティを宣言できます。  
  
 Expando プロパティは、実際に追加できるクラスに動的にプロパティとしての文字列、 <xref:System.Web.UI.IAttributeAccessor> インターフェイスです。 このインターフェイスを実装するコントロールを含む、 <xref:System.Web.UI.WebControls.WebControl> クラスとその子要素の expando プロパティを使用することができます。 ベース <xref:System.Web.UI.Control> クラスが expando プロパティとを継承するカスタム コントロール、をサポートしていない、 <xref:System.Web.UI.Control> クラスに配置されます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> でラップされると、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロール、実行時に Web パーツ コントロール セット動的に追加できません、組み込み <xref:System.Web.UI.WebControls.WebParts.IWebPart> カスタム コントロールのプロパティです。 ここでは 2 つの選択肢があります。 せず、カスタム コントロールを使用する、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> プロパティ、またはを実装できます、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> プロパティを使用するように有効にすると、カスタム コントロールのインターフェイスです。  
  
 方法の例を制御するから継承 <xref:System.Web.UI.WebControls.WebControl> 使用できる、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> ASP.NET を宣言する場合は、プロパティ <xref:System.Web.UI.WebControls.Calendar> コントロールをページのマークアップ \(内で、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーン\)、デザイン時にもこのコントロールから継承していません、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスし、ネイティブに含まれていない <xref:System.Web.UI.WebControls.WebParts.WebPart> メンバーも扱うことができますとまったく同じよう、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 宣言することができます <xref:System.Web.UI.WebControls.WebParts.WebPart> カレンダーのプロパティを制御するよう <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>, 、<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>, 、およびその他。 実行時に使用することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> を返すメソッド、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールが動的に calendar コントロールをラップしの場合と同様に正確にプログラムで操作を <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールへのアクセスをすべて同じプロパティ、イベント、およびメソッドです。  
  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールの基になるサーバー コントロールにアクセスできるようにする重要なプロパティがある: <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> プロパティです。 このプロパティでは、サーバー コントロールをプログラムでアクセスをすることができます。<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> でプロパティを使用しても、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 子コントロールから個人用設定データにアクセスする場合は、承認を実行するコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> プロパティを設定します。  
  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールから継承されたプロパティをオーバーライドできるすべての他のいくつかのプロパティがあります <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスです。 前述のようと併用できるこれらのプロパティ、すべての子コントロールとして動作できるように、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 1 つの重要なプロパティは、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> プロパティはエクスポートできるエクスポート可能なすべてのプロパティまたはのみに依存したがマークされているかどうかを決定します。 UI 指向プロパティから継承、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスなど、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A>, 、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A>, 、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Height%2A>, 、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A>, 、<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Width%2A>, に配置されているすべてのサーバー コントロールの宣言型マークアップに設定することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。  
  
 重要なメソッド、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> クラスが含まれて、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A> に関連付けられているコントロール \(子コントロールを含む\) のコレクションを作成するメソッド、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロール、および <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Render%2A> メソッドで、ラップされた子コントロールにすべてのレンダリングを代行させます。 上のコンス トラクター、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> クラスを保護し、内部で使用または拡張シナリオを想定しています。  
  
 いくつか追加の役立つ情報を操作するためにある <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。 オーバーライドされたプロパティの既定値を設定するかどうか、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 実装できるクラス、ユーザー コントロールまたはカスタム サーバー コントロール、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> と <xref:System.Web.UI.WebControls.WebParts.IWebActionable> インターフェイス、およびそのメンバーをオーバーライドします。 実行時に、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールは、インターフェイスを実装する子コントロールから実装されたプロパティの値を取得します。 コントロールのプロパティの定義をパーソナル化可能としてかどうか \(を使用して、 `Personalizable` メタデータ属性\)、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールは、上のパーソナル化できるプロパティと同じように、実行時にパーソナル化のため、これらのプロパティを自動的に有効に、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 コントロールに Web パーツの編集機能を提供する場合は、実装、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイスです。 実行時に、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドが呼び出されると、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> のコントロールのコード、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject%2A> プロパティに子コントロールに同じプロパティを呼び出して、子コントロールの実装を使用して、関連付けられているカスタムを作成する <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。  
  
   
  
## 例  
 次のコード例を示しますが、どのように <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールが自動的にはないサーバー コントロールをラップ、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 実行時にコントロール。  
  
 このコード例の最初の部分には、2 つの Web パーツ ページが含まれています。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 各ゾーン内で、標準の ASP.NET サーバー コントロールです。 コントロールがあるため、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーン、それらは自動的にでラップする、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 、ページのコンパイルを制御します。 そのため、宣言することができます <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスのこれらのコントロールのプロパティです。 クリックすると、ブラウザーでページが読み込まれた後、 **プロパティ値をすべて表示** \] ボタン、詳細、ラベルの各コントロールが表示されます。 表示する方法、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 動作を制御、 <xref:System.Web.UI.WebControls.Calendar> 最初のゾーン内のコントロールがいくつかの <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 対し、.aspx ページの宣言型マークアップでプロパティを設定、 <xref:System.Web.UI.WebControls.BulletedList> コントロールはありません。 ページを読み込む 2 つのコントロールのプロパティ値の相違点に注意してください保ち、両者が、親である <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#1)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#1)]  
  
 コード例の 2 番目の部分の一部のプロパティにアクセスする部分クラスを示しています、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> をプログラムで制御します。 ことに注意して、 `Page_Load` 、メソッド、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> メソッドの使用のランタイム インスタンスを取得、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> サーバー コントロールをラップするコントロール。 親への参照を取得するには、このアプローチ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールを使用する場合と同様に、通常のサーバーまたはユーザー コントロールのプログラムから操作すると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 実行時にコントロールできます。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#3)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>There are few occasions where it is necessary to inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> class. One such case would be if a developer wants to implement some custom action in the constructor when a <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> control is created. For example, you might want to store the child control somewhere other than the control collection within the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> class. If you inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> class, you also need to inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> class and override its <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)" /> method to enable it to create your custom control.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected GenericWebPart (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.#ctor(System.Web.UI.Control)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">子コントロールになったサーバー コントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールのインスタンス。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 子コントロールになったコントロールへの参照を渡すことによって制御されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%28System.Web.UI.Control%29> コンス トラクターを呼び出す、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールにその <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> のインスタンスを初期化するために、メソッド、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 子サーバー コントロールへの参照を渡すことによって制御されます。 後に、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> オブジェクトが作成されると、子コントロールを使用して、参照する、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="control" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="control" /> データ型 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />します。  
  
 または  
  
 <paramref name="control" /> <see langword="null" /> または空 <see cref="P:System.Web.UI.Control.ID" /> プロパティです。  
  
 または  
  
 <paramref name="control" /> 出力キャッシュされました。</exception>
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public override string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の URL を表す画像、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールのカタログ内のコントロールです。</summary>
        <value>カタログ内のコントロールを表すために使用されるイメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 多くの場合、web パーツ アプリケーションは、ユーザーがページに追加できるコントロールのカタログ \(またはリスト\) を提供します。<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> コントロールのプロパティには、カタログに表示されるときに、コントロールを表示するイメージの URL が含まれています。 このプロパティが真の場合と同様に子コントロールのプロパティをアクセスできるように、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 プログラミングで Web ページの宣言型マークアップ、コントロールのプロパティの値を設定できます。 コントロールが使用されるたびに、プロパティの既定値を提供するに実装することができます、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 概要トピックです。  
  
 コード例の最初の部分を示していますが、どのように <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> 内でサーバー コントロール宣言によってプロパティを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 コード例の 2 番目の部分は、ユーザーがクリックすると、プロパティの値をプログラムでアクセスするメソッドを示しています、 **プロパティ値をすべて表示** \] ボタンをクリックします。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ChildControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ChildControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>によってラップされている子コントロールへの参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 実行時にコントロールできます。</summary>
        <value>A <see cref="T:System.Web.UI.Control" /> ラップされた子コントロールを参照します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> プロパティでラップした子コントロールにアクセスする手段を提供する、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。 たとえば、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロール、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> プロパティを子コントロールから個人用設定データを抽出します。  
  
   
  
## 例  
 次のコード例に示しますのプログラムでの使用、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> プロパティです。<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> の子コントロールの概要情報を取得するプロパティをプログラムでアクセス、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 概要トピックです。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ASP.NET ページ フレームワークによって呼び出され、ポストバックまたはレンダリングの準備として、合成ベースの実装を使うサーバー コントロールに対し、それらのコントロールに含まれる子コントロールを作成するように通知します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>によってラップした子コントロールで構成される読み取り専用コレクションを作成する基本メソッドをオーバーライドして、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールです。</summary>
        <returns>A <see cref="T:System.Web.UI.ControlCollection" /> 子コントロールを格納しています。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A> メソッドの子コントロールは、1 つのコントロールで構成されるプライベートな読み取り専用コレクションを作成するを <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。 このコレクションを作成すると、開発者を他のコントロールに手動で追加されるため、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。  
  
 カスタムを作成する場合 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールにプライベートのコレクションへの子コントロールを追加することがなくから派生することができます、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> クラスでオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%2A> コンス トラクターによって参照される子コントロールを格納するためのさまざまなメソッドを提供し、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザー設定のコレクションを返す <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> の子コントロールの編集に使用できるコントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールで編集モードがします。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> を含むカスタム <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> サーバー コントロールに関連付けられているコントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A> コントロール編集表示モードに入ったときにメソッドが呼び出されます。 このメソッドから継承された基本メソッドをオーバーライドして、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスための場合、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 編集されている、いない子コントロールは、コントロール、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロール自体です。<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A> メソッドにキャストする子コントロール、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイスで、編集しようとする制御を有効にします。  
  
 このオーバーライドされたメソッドから派生していないサーバー コントロールにより、どのような <xref:System.Web.UI.WebControls.WebParts.WebPart> クラス \- ASP.NET サーバー コントロール、および通常どおり編集しようとする \- カスタム サーバー コントロールを含む <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサーバー コントロールのツールヒントやカタログで使用する、コントロールの動作をまとめた簡単な語句を設定します。</summary>
        <value>文字列には、コントロールの機能が簡潔にまとめたものです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> プロパティの値は、サーバー コントロールのリストを提供するカタログ内のコントロールについて説明する文字列とは、コントロールのタイトル バーのツールヒントとして通常使用します。 プロパティのコンテンツは、ユーザーがコントロールのタイトル バーのタイトル テキスト上にマウス ポインターを置いたときに、ツールヒントに表示されます。  
  
 このプロパティが真の場合と同様に子コントロールのプロパティをアクセスできるように、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 プログラミングで Web ページの宣言型マークアップ、コントロールのプロパティの値を設定できます。 コントロールが使用されるたびに、プロパティの既定値を提供するに実装することができます、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 概要トピックです。  
  
 コード例の最初の部分を示していますが、どのように <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A> 内でサーバー コントロール宣言によってプロパティを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 コード例の 2 番目の部分では、ラベルにその値を表示するには、プログラムを使用してプロパティにアクセスする方法を示します。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、コントロールの高さをピクセル単位\)。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Unit" /> コントロールの高さを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得または真の場合と同様に、子コントロールの高さを設定できるように、このプロパティは、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override sealed string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールの ID を設定します。 この値は、継承ではありません。</summary>
        <value>コントロールの ID を表す文字列。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.GenericWebPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>デリゲートの子コントロールにコントロールの内容を表示します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public override string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>連結される文字列を取得、 <see cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" /> プロパティの値をコントロールの完全なタイトルを形成します。</summary>
        <value>コントロールのサブタイトルとして機能する文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A> 独自に追加される標準のサブタイトル文字列を返すためには、必要に応じてプロパティ <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールのタイトル。  
  
 このプロパティが真の場合と同様に子コントロールのプロパティをアクセスできるように、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 実装する場合、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> ユーザー コントロールや既定値を指定するカスタム コントロールのプロパティは、自動的に設定する Web パーツ コントロールに追加のコントロールの値 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 完全なタイトルを作成する実行時にプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のタイトル、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールです。</summary>
        <value>一部のコントロールのタイトルを表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 部分から成るコントロールのタイトル バーに表示されるタイトルのテキストが設定されて、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> プロパティです。  
  
 コントロールのタイトルを指定しない場合、自動的に設定する Web パーツ コントロールは、タイトルとして使用する既定の文字列を計算します。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>」を参照してください。 また、タイトル バーの文字列に追加される既定のサブタイトルを提供することができます。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A>」を参照してください。  
  
 このプロパティが真の場合と同様に子コントロールのプロパティをアクセスできるように、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 プログラミングで Web ページの宣言型マークアップ、コントロールのプロパティの値を設定できます。 コントロールが使用されるたびに、プロパティの既定値を提供するに実装することができます、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 概要トピックです。  
  
 コード例の最初の部分を示していますが、どのように <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A> 内でサーバー コントロール宣言によってプロパティを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 コード例の 2 番目の部分では、ラベルにその値を表示するには、プログラムを使用してプロパティにアクセスする方法を示します。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public override string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の URL を表すために使用されるイメージ、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールのタイトル バーにコントロールできます。</summary>
        <value>イメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> プロパティが付いたアイコンを関連付けるための手段を提供する、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。 コントロールのタイトル バーにアイコンが表示されます。 テーマの一貫性を保つためアプリケーション開発者多くの場合は、このアイコンを Web パーツ コントロールのカタログ内のコントロールを表す画像のように \(で参照されるイメージ、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A> プロパティ\)。  
  
 Web パーツ コントロール セットに実装されている、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> プロパティは、イメージやコントロールのタイトル バーに表示されるアイコンを変更するユーザーが個人用に設定することができます。  
  
 このプロパティが真の場合と同様に子コントロールのプロパティをアクセスできるように、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 プログラミングで Web ページの宣言型マークアップ、コントロールのプロパティの値を設定できます。 コントロールが使用されるたびに、プロパティの既定値を提供するに実装することができます、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 概要トピックです。  
  
 コード例の最初の部分を示していますが、どのように <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A> 内でサーバー コントロール宣言によってプロパティを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 コード例の 2 番目の部分では、ラベルにその値を表示するには、プログラムを使用してプロパティにアクセスする方法を示します。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public override string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または補足情報への URL を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールです。</summary>
        <value>についての詳細情報への URL を表す文字列、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 URL を割り当てると、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> プロパティ、コントロールのタイトルはリンクになります。 このプロパティは、エンドユーザーのコントロールに関する追加情報にアクセスする便利な方法を提供します。 詳細については、著作権データ、連絡先データの詳細については、コントロールの作成者、またはコントロールの目的の概要を含めることができます。  
  
 このプロパティが真の場合と同様に子コントロールのプロパティをアクセスできるように、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 プログラミングで Web ページの宣言型マークアップ、コントロールのプロパティの値を設定できます。 コントロールが使用されるたびに、プロパティの既定値を提供するに実装することができます、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 概要トピックです。  
  
 コード例の最初の部分を示していますが、どのように <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A> 内でサーバー コントロール宣言によってプロパティを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpartcs.aspx#2)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpartvb.aspx#2)]  
  
 コード例の 2 番目の部分では、ラベルにその値を表示するには、プログラムを使用してプロパティにアクセスする方法を示します。  
  
 [!code-csharp[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/CS/genericwebpart.cs#4)]
 [!code-vb[WebParts\_GenericWebPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_GenericWebPart_Overview/VB/genericwebpart.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているカスタム動詞のコレクションを取得、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> を含むカスタム <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> オブジェクトに関連付けられている、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールです。 既定値は <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生して動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> クラス、およびユーザーで実行できるインターフェイス \(UI\) の動作をユーザーに付与、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。 通常、動詞は、ボタン、リンク、またはメニュー項目として UI に表示されます。 標準の動詞を開く、閉じる、編集、およびコントロール、およびその他の動詞は、コントロールの定義をエクスポートするか、ヘルプ ファイルの読み込みを最小限に抑えることがあります。 これらの動詞は含まれていない、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> コレクション、コレクションにカスタム動詞のみが含まれているためです。  
  
 このプロパティが真の場合と同様に子コントロールのプロパティをアクセスできるように、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 場合した子コントロールを実装して、 <xref:System.Web.UI.WebControls.WebParts.IWebActionable> インターフェイスおよび上書きのため、 <xref:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs%2A?displayProperty=fullName> プロパティには、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールは、子コントロールの実装を使用してときに、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A?displayProperty=fullName> でプロパティが呼び出された、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールです。  
  
 カスタム動詞を作成し、それらを追加、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 、コレクションにアクセスできますからプログラムを使用して、動詞、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public override object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム編集して制御を有効にした子コントロールへの参照を取得 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Object" /> の子コントロールで構成される、 <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 子コントロールを実装する場合、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイス、および上書きの <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> プロパティをユーザーが、編集のためのコントロールを選択すると、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールが使用して子コントロールを呼び出すが、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> プロパティには、子コントロールの実装を使用して、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドです。 このメカニズムにより、サーバーまたはユーザー コントロールがない場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを定義した関連付けられているカスタム動作 <xref:System.Web.UI.WebControls.WebParts.EditorPart> Web パーツ アプリケーションのコントロールにします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールの幅をピクセル単位でを設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Unit" /> コントロールの幅を示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得または真の場合と同様に、子コントロールの幅を設定できるように、このプロパティは、基本プロパティをオーバーライド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
      </Docs>
    </Member>
  </Members>
</Type>