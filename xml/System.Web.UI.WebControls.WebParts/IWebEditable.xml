<Type Name="IWebEditable" FullName="System.Web.UI.WebControls.WebParts.IWebEditable">
  <TypeSignature Language="C#" Value="public interface IWebEditable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebEditable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>開発者が関連付けられているユーザー設定の編集コントロールを指定するためのインターフェイスを提供する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイスを使用すると、カスタム関連付ける <xref:System.Web.UI.WebControls.WebParts.EditorPart> などのコントロールとサーバー コントロールの場合\-\-、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、ユーザー コントロールまたはカスタム サーバー コントロール。<xref:System.Web.UI.WebControls.WebParts.EditorPart> とコントロールが含まれている、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 制御、およびその編集コントロールでは、このゾーン プロパティ、外観、および、関連する動作を変更するためのユーザー インターフェイス \(UI\) でエンドユーザーに提供 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイスに公開されている 2 つのメンバーが含まれています。<xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> プロパティを提供するため <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールに関連付けられたサーバー コントロールへの参照を取得します。<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> 各カスタムのインスタンスを作成するメソッドが使用される <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールは、サーバー コントロールに関連付けられているし、それらをコレクションとして返します。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイスは、ベースで既に実装されて <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスが、既定ではこの実装は関連付けられません任意のカスタム <xref:System.Web.UI.WebControls.WebParts.EditorPart> と制御、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスです。 派生を関連付ける <xref:System.Web.UI.WebControls.WebParts.WebPart> 定義したカスタム コントロール <xref:System.Web.UI.WebControls.WebParts.EditorPart> 、コントロールをオーバーライドできます、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドです。  
  
   
  
## 例  
 メソッドをオーバーライドする次のコード例には、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> カスタム インターフェイス <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールで、カスタムのインスタンスを作成し、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> タイミングを制御、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが編集モードになります。  
  
 この例では、4 つの部分があります。  
  
-   このカスタム クラスのコードです。  
  
-   カスタム コントロールをホストする Web ページ。  
  
-   ユーザー コントロールをページを編集モードに切り替わります。  
  
-   ブラウザーでの例の動作についての説明です。  
  
 このコード例の最初の部分は、カスタム `TextDisplayWebPart` クラスです。 クラスの派生元に注意してください、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスを実装して、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> の具体的な実装を提供するインターフェイス、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドおよび <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> プロパティです。 内で入れ子になっていることも、 `TextDisplayWebPart` クラスは、プライベート、カスタム `TextDisplayEditorPart` ベースから派生するクラスを <xref:System.Web.UI.WebControls.WebParts.EditorPart> クラスです。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_IWebEditable\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#1)]
 [!code-vb[WebParts\_IWebEditable\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#1)]  
  
 コード例の 2 番目の部分は、カスタム コントロールをホストする Web ページです。 ことに注意して、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールがページでは、カスタムのマークアップで宣言されている <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール代入することも、実行時にプログラムで追加できるためです。  
  
 [!code-csharp[WebParts\_IWebEditable\_Overview\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/editorpart_overview_cs.aspx#7)]
 [!code-vb[WebParts\_IWebEditable\_Overview\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/editorpart_overview_vb.aspx#7)]  
  
 コード例の 3 番目の部分は、ユーザーは、ページに切り替えることができるユーザー コントロールが編集モードです。 ユーザー コントロールがホストする Web ページで参照されることに注意してください。 このユーザー コントロールを作成する方法の詳細については、次を参照してください。 [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-csharp[WebParts\_IWebEditable\_Overview\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/displaymodeuccs.ascx#8)]
 [!code-vb[WebParts\_IWebEditable\_Overview\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/displaymodeucvb.ascx#8)]  
  
 コード例を実行する、ブラウザーでホストする Web ページを読み込み、テキスト ボックスにテキストを追加およびをクリックして、 **ラベルのコンテンツの設定** コントロールにラベルを更新する\] ボタンをクリックします。 選択したときに、ページを編集モードに切り替えるには、 **編集** 表示モードを含むドロップダウン リストからです。 カスタムの UI を表示する `TextDisplayEditorPart` コントロール、動詞メニューのドロップダウン矢印をクリックして、 `TextDisplayWebPart` 、コントロールを選択 **編集**します。 編集の UI でのフォント スタイルを含むドロップダウン リストを使用して、ラベルのテキストのスタイルを更新、 `TextDisplayWebPart` コントロールです。 クリックする必要があります **Browse Mode** にページを通常のビューに戻って、ラベルのテキストは、フォント スタイルを今すぐが確認できる表示モードのドロップダウン リストで、編集モードで選択します。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>If you want to use server controls that are not <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls in a Web Parts application (that is, if you add these controls to a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zone), and if you want to associate custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls with such server controls, you need to implement the <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> interface. Derived <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls should not implement the interface, because the base <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> class already does so.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
  </Docs>
  <Members>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザー設定のコレクションを返す <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> を実装するサーバー コントロールに関連付けられているコントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" /> インターフェイスです。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> カスタム コレクションを含む <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> サーバー コントロールに関連付けられているコントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドでは、すべてのユーザー設定のコレクションを作成することができます <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール、カスタム コントロールに関連付けられている <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、またはユーザーを制御して、そのまま返す、 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> オブジェクトです。<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールは、コレクションを受け取るし、すべてのインスタンスを作成、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> サーバー コントロールが入力したときに、コントロールの編集モード。  
  
 通常、カスタムのこのメソッドを実装する <xref:System.Web.UI.WebControls.WebParts.WebPart> オーバーライドすることでコントロールの <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> メソッドです。 カスタムのインスタンスを作成するメソッドでは、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> をコントロールに関連付けるコントロールを追加する、 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> オブジェクト、およびそのオブジェクトを返します。 コレクション <xref:System.Web.UI.WebControls.WebParts.EditorPart> にコントロールが割り当てられます、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> のプロパティ、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ゾーンです。  
  
> [!NOTE]
>  どの <xref:System.Web.UI.WebControls.WebParts.EditorPart> のコレクションに追加されている <xref:System.Web.UI.WebControls.WebParts.EditorPart> の実装内のコントロール、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドには、ID プロパティに割り当てられている値が必要です。、、コレクションに割り当てるときに例外がスローされるそれ以外の場合、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティです。  
  
   
  
## 例  
 オーバーライドを次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> カスタム メソッド <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 使用例」のサンプルを実行するために必要な完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> クラスの概要に関するトピック。  
  
 コードの例は、両方のメンバー、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイスです。 注意のオーバーライドによって、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドを作成、 <xref:System.Collections.ArrayList> を 1 つまたは複数のユーザー設定を収集する <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロール、および次の一覧を使用して作成、 <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> オブジェクトです。  
  
 [!code-csharp[WebParts\_IWebEditable\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts\_IWebEditable\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> object that the <see cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" /> method returns is read-only and has no accessible method to add individual controls to it. However, in your override or implementation of the method, you can create another kind of <see cref="T:System.Collections.ICollection" /> object, such as an <see cref="T:System.Collections.ArrayList" />, to contain all the custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls, and pass it to the constructor when you create a new <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> object. For a code example, see the Example section.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール、ユーザー コントロールまたはカスタム コントロールが編集 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <value>関連付けられたコントロールへのオブジェクト参照、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> プロパティを提供するため <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールに関連付けられているサーバー コントロールの参照を取得します。  
  
 プロパティ自体は、読み取り専用では、返されるオブジェクト参照できること <xref:System.Web.UI.WebControls.WebParts.EditorPart> サーバー コントロールに値を変更するコントロール。  
  
   
  
## 例  
 次のコード例を示していますが、どのように <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> カスタム プロパティをオーバーライドすることができます <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 使用例」の例を実行するために必要な完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> クラスの概要に関するトピック。  
  
 両方のメンバーをオーバーライドするコード例、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイスです。  
  
 [!code-csharp[WebParts\_IWebEditable\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/CS/textdisplaywebpart.cs#4)]
 [!code-vb[WebParts\_IWebEditable\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebEditable_Overview/VB/textdisplaywebpart.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Normally, when you implement the <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> property in a server control, you simply return a reference to the server control itself. In the case of the <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> class, because it wraps a child control to enable it to function as a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, its implementation of the <see cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" /> property returns a reference to the child control.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
      </Docs>
    </Member>
  </Members>
</Type>