<Type Name="WebPartDisplayMode" FullName="System.Web.UI.WebControls.WebParts.WebPartDisplayMode">
  <TypeSignature Language="C#" Value="public abstract class WebPartDisplayMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPartDisplayMode extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Web パーツ ページに入力できるいくつかの表示モードの場合のプロパティの共通セットを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ ページには、いくつかの異なる表示モードを入力できます。 各表示モードでは、Web パーツのユーザー インターフェイス \(UI\) の特定の要素が非表示か、またはページに対するユーザーの変更の表示、および特定の種類の有効または無効にします。<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールが、Web パーツ コントロール セットで使用可能な表示モードの場合、実装が含まれていて、ページの表示モードを管理します。  
  
 次の表は、使用可能な表示モードを表すフィールドを一覧表示します。  
  
|表示モード|説明|  
|-----------|--------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>|エンドユーザーが、ページを表示する通常モードでは、Web パーツ コントロールや UI 要素を表示します。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>|ゾーンの UI 要素を表示し、ページのレイアウトを変更する Web パーツ コントロールをドラッグすることができます。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>|特殊な表示では、UI 要素を編集し、エンドユーザーをページ上のコントロールを編集できるようにします。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>|特別なカタログの UI 要素を表示し、エンドユーザーがページのコントロールを追加および削除できるようにします。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>|特殊な接続の UI 要素を表示し、エンドユーザーの Web パーツ コントロールを接続することができます。|  
  
   
  
## 例  
 次のコード例では、Web パーツ ページ上の表示モードの宣言型の使用法を示します。 これらのそれぞれの表示モードを Web パーツ コントロール セットによって実装されるから派生した、 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> クラスです。  
  
 このコード例には、4 つの部分があります。  
  
-   カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
-   カスタム コントロールをホストするゾーンを含む Web ページ。  
  
-   ユーザー コントロールを Web ページ上の表示モードを変更することができます。  
  
-   ブラウザーでページのしくみの説明です。  
  
 この例の最初の部分は、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 `TextDisplayWebPart`です。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 両方のコンパイル方法のデモについては、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPartDisplayMode\_Overview\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts\_WebPartDisplayMode\_Overview\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/textdisplaywebpart.vb#9)]  
  
 コード例の 2 番目の部分は、標準の ASP.NET を参照する Web ページ <xref:System.Web.UI.WebControls.Calendar> 内で制御、 `<asp:webpartzone>` 要素で、コントロールをラップするよう、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> コントロールし、実行時に Web パーツの基本的な機能を指定します。 ページを参照しても、 `TextDisplayWebPart` 内で制御、 `<asp:catalogzone>` 要素は、カタログ モードに切り替えるし、ページにコントロールを追加する、エンドユーザーの機能を示しています。 ページでは、 `<asp:editorzone>` 要素に含まれるコントロールを編集することができます、 `<asp:webpartzone>` 、ページが編集モードのときです。 ページの上部には、 `register` ディレクティブ、カスタム コントロールおよびユーザー コントロールのもう 1 つです。  
  
 [!code-csharp[WebParts\_WebPartDisplayMode\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/WebPartDisplayModecs.aspx#1)]
 [!code-vb[WebParts\_WebPartDisplayMode\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/WebPartDisplayModevb.aspx#1)]  
  
 コード例の 3 番目の部分は、ユーザーが Web ページの表示モードを切り替えることができるユーザー コントロールです。 DisplayModeMenuCS.ascx または DisplayModeMenuVB.ascx \(言語によってを使用するコード例については\) という名前のファイルでこのコントロールのソース コードを保存し、Web ページと同じディレクトリに配置します。 詳細については、このコントロールのモードとソース コードの説明を表示、トピックを参照してください [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-csharp[WebParts\_WebPartDisplayMode\_Overview\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/CS/displaymodemenucs.ascx#5)]
 [!code-vb[WebParts\_WebPartDisplayMode\_Overview\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartDisplayMode_Overview/VB/displaymodemenuvb.ascx#5)]  
  
 ブラウザーでページを読み込むときに使用できます、 **表示モード** 表示モードを切り替えるに異なるドロップダウン リスト コントロールです。 コントロールを編集するには、選択 **編集** ドロップダウン リスト コントロールにします。 特定のコントロールを編集するには、コントロールのタイトル バーにある矢印をクリックし、クリックして動詞メニューを表示 **編集** 動詞メニューにします。 コントロールが編集モードの場合は、編集したコントロールの外観およびレイアウトを変更するこのページに追加される編集コントロールが有効にします。 完了したら、選択 **参照** で、 **表示モード** ドロップダウン リスト コントロールに、ページを通常のビューに戻ります。 ページにコントロールを追加するには、カタログのモードに切り替えます。 いずれかを使用できることに注意してください、 **表示モード** ドロップダウン リスト コントロール、またはページの下部にあるボタンをクリックします。 インライン コード、 `Button1_Click` メソッドは、表示モードをプログラムで変更する方法を示します。 カスタムを追加するには、カタログのモードでは、 `TextDisplayWebPart` コントロールをページです。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Developers can derive from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> class to create custom display modes. To make a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> available on a Web Parts page, you would also need to derive from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> class, and override its <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes" /> method.</para>
    </block>
    <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPartDisplayMode (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">表示モードの名前です。</param>
        <summary>表示モードの名前の値を初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> クラスが抽象であるために、オブジェクトは作成されません。 実行時に、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> クラスにさまざまなページの表示モードの各オブジェクトの基本クラスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> パラメーターが <see langword="null" /> です。</exception>
        <block subset="none" type="overrides">
          <para>If you derive from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> class to create a custom display mode, in your class declaration you must call the base constructor and pass to it a string containing the name of the custom display mode.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AllowPageDesign">
      <MemberSignature Language="C#" Value="public virtual bool AllowPageDesign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPageDesign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページが特定の表示モードの場合に、ユーザーが Web パーツ ページのレイアウトを変更できるかどうかを決定する値を取得します。</summary>
        <value>
          <see langword="true" /> ユーザーがページのレイアウトを変更した場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedWithToolZone">
      <MemberSignature Language="C#" Value="public virtual bool AssociatedWithToolZone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssociatedWithToolZone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の表示モードがから派生したクラスに関連付けられているかどうかを示す値を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> クラスです。</summary>
        <value>
          <see langword="true" /> 表示モードに関連付けられている場合、 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> クラスです。 それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ ページが表示モードに入ったときの <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone%2A> にプロパティが設定されている `true`, 、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールを解釈すると、関連付けられたクラスがから派生するという意味では、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラス、およびその他のユーザー インターフェイス \(UI\) 要素を表示する必要があることです。 たとえば、編集モードに入ると、ページ、Web パーツ コントロールを編集するための UI 要素を含んだ特殊なゾーンに、ページに表示されます。 この動作が可能になるため、 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone%2A> のプロパティ値、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> フィールドに設定されて `true`します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Classes that derive from the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> base class to create custom display modes must override the <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AssociatedWithToolZone" /> property in order to set its value.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsEnabled (System.Web.UI.WebControls.WebParts.WebPartManager webPartManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(class System.Web.UI.WebControls.WebParts.WebPartManager webPartManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.IsEnabled(System.Web.UI.WebControls.WebParts.WebPartManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartManager" Type="System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Parameters>
      <Docs>
        <param name="webPartManager">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 現在のページにコントロールのインスタンス。</param>
        <summary>ページは、特定の表示モードでは、ユーザーがページをカスタマイズできるかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> ユーザーがページをパーソナル化できる場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。 ただし、 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" /> に設定されている <see langword="true" />, 、ページの個人用設定が無効になっているの既定値 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示モードの名前を取得します。</summary>
        <value>表示モードの名前を表す文字列。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPersonalization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPersonalization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPersonalization" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.RequiresPersonalization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の表示モードに有効にする個人用設定が必要かどうかを示す値を取得します。</summary>
        <value>個人用設定が必要かどうかを示すブール値。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowHiddenWebParts">
      <MemberSignature Language="C#" Value="public virtual bool ShowHiddenWebParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHiddenWebParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.ShowHiddenWebParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>かどうかのコントロールがあるかを示す値を取得、 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" /> プロパティに設定 <see langword="true" /> が表示されます。</summary>
        <value>非表示のコントロールを表示するかどうかを示すブール値。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>