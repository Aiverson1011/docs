<Type Name="WebPartZone" FullName="System.Web.UI.WebControls.WebParts.WebPartZone">
  <TypeSignature Language="C#" Value="public class WebPartZone : System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartZone extends System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.WebPartZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web ページ上の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールをホストするための、Web パーツ コントロール セットの主なコントロールとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツの機能では、ゾーンは、Web パーツ コントロールを含む Web ページに定義済みの領域です。 ゾーンの主な機能が含まれているコントロールを配置し、それらのコントロールの一般的なユーザー インターフェイス \(UI\) を提供します。 ゾーンと Web パーツ アプリケーションでの使用方法の詳細については、基本のリファレンス ドキュメントを参照してください。 <xref:System.Web.UI.WebControls.WebParts.WebZone> と <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラス、およびトピック [Web Parts Control Set Overview](http://msdn.microsoft.com/ja-jp/ff0149e4-695a-401a-8cda-53df6d7d2668)します。  
  
 特別な関数、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールが用意されて <xref:System.Web.UI.WebControls.WebParts.WebPart> 主要な UI の Web パーツ アプリケーションのフォームのコントロールです。 A <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールを永続化の形式で宣言できる内で他のサーバー コントロールを追加して、テンプレートとして使用する開発者を有効にすると、Web ページで、 `<asp:webpartzone>` 要素。 任意の種類に追加された場合、サーバー コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーン、として機能する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 実行時にコントロールできます。 これは、追加されたコントロールがあるかに関係なく当てはまります、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、ユーザー コントロール、カスタム コントロールまたは ASP.NET コントロール。 詳細については、のトピックを参照して、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> クラスです。  
  
 格納しているだけでなく <xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> が含まれているコントロールのコントロールが共通の UI にも用意されています。 まとめてクロムと呼ばれるこの一般的な UI は、罫線、タイトル、ヘッダーとフッター、スタイルの特性および動詞 \(UI 操作、ユーザーできますコントロールで実行などを閉じるまたは最小限に抑える\) などのすべてのコントロールの周辺の UI 要素で構成されます。  
  
> [!NOTE]
>  Internet Explorer の高さは表示される、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> またはゾーンの方向に応じて、予期しない方法で、格納されているコントロール。 詳細については、ドキュメントを参照して、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> または <xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> クラスは、ベースからの動作のほとんどを派生 <xref:System.Web.UI.WebControls.WebParts.WebZone> と <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラスは 1 つだけの一意なメンバーを追加、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A> プロパティです。 このプロパティは、 <xref:System.Web.UI.ITemplate> テンプレートを使用して静的にゾーン内のコントロールを定義するページの開発者は、オブジェクト、 `<zonetemplate>` .aspx ページの宣言型マークアップ内の要素。  
  
## ユーザー補助  
 このコントロールの既定で表示されるマークアップは、Web コンテンツ Accessibility Guidelines 1.0 \(WCAG\) 優先度 1 のガイドラインなどのユーザー補助に関する標準に準拠していません可能性があります。 このコントロールのユーザー補助のサポートに関する詳細については、「 [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/ja-jp/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> Web パーツ ページ内のコントロールです。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 この例の最初の部分から継承するカスタム クラスを示しています、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> クラス、および、コンス トラクターでの 2 つの基本のゾーンのプロパティを設定します。  
  
 [!code-csharp[WebParts\_WebPartZone\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts\_WebPartZone\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 例の 2 番目の部分は、ユーザー設定を含むページを示しています。 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 ページ必要という特別なであることに注意してください `Register` カスタム ゾーンが格納されているアセンブリを参照するページの上部にあるディレクティブです。 ページにも含まれています、 `<asp:webpartmanager>` 、すべての Web パーツ ページに必要な要素です。`<cc1:MyWebPartZone>` 要素は、ユーザー設定を表す <xref:System.Web.UI.WebControls.WebParts.WebPartZone> を制御して、標準の ASP.NET が含まれる <xref:System.Web.UI.WebControls.Calendar> コントロールです。 格納されているため、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーン、 <xref:System.Web.UI.WebControls.Calendar> でコントロールをラップするが、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> として機能できるように、実行時にコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPartZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#1)]
 [!code-vb[WebParts\_WebPartZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#1)]  
  
 カスタムの宣言型マークアップを調べる <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 次のコード例に示すマークアップでは、さまざまなゾーン レベルのプロパティを設定することができますに注意してください。  
  
> [!NOTE]
>  使用することが重要である、 `<zonetemplate>` 要素。 この要素は、「解説」セクションに記載されて指定が必要で、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 静的をラップするゾーン <xref:System.Web.UI.WebControls.WebParts.WebPart> ページ内で宣言されたコントロール。  
  
 [!code-csharp[WebParts\_WebPartZone\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-vb[WebParts\_WebPartZone\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.%23ctor%2A> メソッドは既定のコンス トラクターであり、値を設定しません。 ただし、派生クラスでは、標準的な動作とカスタム ゾーン コントロールの外観を作成するのにゾーンの基本プロパティを設定するのにコンス トラクターを使用することができます。  
  
   
  
## 例  
 次のコード例ではカスタム コンス トラクターの使用 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 、ゾーンのいくつかの基本プロパティを設定するクラス。 この方法は、カスタムを作成する場合に便利でことがあります <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 固有の動作と外観を持つコントロールです。 使用例」の例については、カスタム クラスと、コントロールをホストする .aspx ページの両方を含む完全なコードがある、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> クラスの概要に関するトピック。  
  
 [!code-csharp[WebParts\_WebPartZone\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/mywebpartzone.cs#3)]
 [!code-vb[WebParts\_WebPartZone\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/mywebpartzone.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitialWebParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartCollection GetInitialWebParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>抽象基本メソッドをオーバーライドし、静的の初期セットを取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 、ゾーンのテンプレートに含まれるコントロール。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartCollection" /> すべてを含む、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> またはゾーンのテンプレートに含まれるその他のサーバー コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A> メソッドは、抽象基本の実装を提供 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.GetInitialWebParts%2A> メソッドです。 基本メソッドは、実装を提供しますを入手する方法が属するコントロールの初期セット ゾーンで、個人的な変更を考慮することがなく派生クラスでカスタマイズできるように、メソッドを宣言します。  
  
 ゾーンでは、検出された各サーバー コントロールに対して、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> メソッドが呼び出されます。 コントロールがから直接継承する場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスで、ゾーンに追加されます <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> コレクション \(とのようなコレクションに、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロール\)。 場合は、コントロールがから直接継承されません <xref:System.Web.UI.WebControls.WebParts.WebPart>, 、Web パーツ コントロール セットを持つコントロールをラップする、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> として動作する制御を有効にするには、オブジェクト、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 実行時にコントロールできます。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> クラスを実装する基本メソッド \(存在する場合\) は、コントロールのセットを返すことによってのセット内で静的に宣言されている `<zonetemplate>` Web パーツ ページのマークアップ内のタグ。 場合、 <xref:System.Web.UI.WebControls.PlaceHolder> コントロールがゾーンで宣言されている、子コントロールのコントロール自体ではなく、コントロールが追加します。 この実装では、たとえば、作成することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーンのマスター ページと宣言し、各 <xref:System.Web.UI.WebControls.WebParts.WebPart> またはコンテンツ ページ内のサーバー コントロール。 宣言する場合 <xref:System.Web.UI.WebControls.Literal> コントロールで、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーン、それらは無視されます。  
  
> [!NOTE]
>  によって返されるコントロールの初期のコレクション、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A> パーソナル化が行われた後、メソッドが、ゾーン内のコントロールの実際の実行時コレクションとは異なる場合があります。 たとえば、2 つの Web ページ <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロール、および 1 つ目は、ユーザー コントロールという名前を含む `User1` 内で静的に宣言されている、 `<zonetemplate>` タグ。 ページおよびドラッグが、ユーザーが読み込まれる場合 `User1` し、2 番目ゾーンに `User1` の呼び出しによって返されるコレクションの一部ではまだ、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.GetInitialWebParts%2A> メソッドの最初のゾーンでは、そのゾーンで宣言されているためです。 実行時に、ときに、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールは、個人用設定データを読み込む `User1` 実際には、ユーザーをドラッグして、2 番目のゾーンで表示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartZone.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>ゾーンが正常に登録されたことを示すために基本メソッドをオーバーライドして、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の参照、 <see cref="T:System.Web.UI.ITemplate" /> Web ページのマークアップで宣言されているコントロールを格納するインスタンス。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />を格納している、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />ゾーン内のコントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>プロパティを指す、<xref:System.Web.UI.ITemplate>内インスタンス、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロール。 テンプレートには内で宣言する静的サーバー コントロールが含まれています、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>コントロールを含む<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール、ユーザー コントロール、カスタム コントロール、および ASP.NET コントロール。  
  
 静的なを追加すると<xref:System.Web.UI.WebControls.WebParts.WebPart>または他のサーバー コントロール、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>では、Web ページの宣言型のマークアップ内のコントロールのタグを配置する必要があります`<zonetemplate>`タグ。 内のコントロールを宣言していない場合`<zonetemplate>`タグ、例外がスローされます。  
  
   
  
## 例  
 使用を次のコード例に示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A> Web パーツ ページの宣言型マークアップ内のプロパティです。 使用例」の例については、カスタム クラスと、コントロールをホストする .aspx ページを含む完全なコードが検出された、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>クラスの概要に関するトピック。  
  
 マークアップにいることを確認、<xref:System.Web.UI.WebControls.WebParts.WebPartZone>が、制御、`<zonetemplate>`予定表コントロールへの参照を格納する要素。 さらに追加したい場合<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールまたはその他のサーバー コントロールをゾーンに、追加することも内で、これらの`<zonetemplate>`タグ。  
  
 [!code-csharp[WebParts\_WebPartZone\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/CS/webpartzonecs.aspx#2)]
 [!code-vb[WebParts\_WebPartZone\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartZone_Overview/VB/webpartzonevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">登録、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />ゾーン内のコントロールは既に完了しました。</exception>
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
  </Members>
</Type>