<Type Name="EditorZoneBase" FullName="System.Web.UI.WebControls.WebParts.EditorZoneBase">
  <TypeSignature Language="C#" Value="public abstract class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EditorZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールのコンテナーとして動作するすべてのゾーン コントロールの基底クラスとして機能します</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class is a specialized zone class that inherits from the <xref:System.Web.UI.WebControls.WebParts.ToolZone> class and provides a base set of behaviors for derived zones that contain <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. There are several other types of <xref:System.Web.UI.WebControls.WebParts.ToolZone> classes; for more information, see the overview topic for the <xref:System.Web.UI.WebControls.WebParts.ToolZone> class. Like other tool zones, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones are not visible when a page is in normal browse mode; they are visible only when a page is in edit display mode. Also like the other tool zones, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones can only contain the special type of controls they were designed to contain \(in this case, <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls\).  
  
 The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> zones provide a special UI for the editing controls they contain. Many of these UI elements are common to all zones in the Web Parts control set. For a detailed discussion of the common UI elements in Web Parts zones, see the class overview topic for the <xref:System.Web.UI.WebControls.WebParts.WebZone> class.  
  
 Because the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class is abstract, you cannot use it directly on a Web page. Instead, you must use a control that inherits from the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class and implements its behavior. You can either use the derived zone that is provided in the Web Parts control set, the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control, or you can derive your own custom <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> control.  
  
 The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class provides a common user interface \(UI\) to contain special controls that enable end users to edit the properties, layout, appearance, and other attributes of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Some properties that apply to the UI refer to verbs, such as the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, and <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> properties. Verbs are common actions carried out by users on a page, and are represented in the UI by buttons, links, menu items, or other elements. For example, when users edit properties on a control they can click an apply verb to save the changes.  
  
 Several other properties affect text that is displayed at various points in the editing UI. These include the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>, <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A>, and <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A> properties.  
  
 Two important properties provide references to related controls. The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> property is a collection of the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained in the zone. The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> property is an object reference to a control contained in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone>\-\-which might be a <xref:System.Web.UI.WebControls.WebParts.WebPart> control or any other ASP.NET server control, user control, or custom control currently being edited.  
  
 Finally, the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> property references an instance of an <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> object that is associated with the zone, and that contains style characteristics of the peripheral UI elements \(known as chrome\) such as title and border styles for <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the zone.  
  
 A number of the methods of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class are specialized to handle the editing of other controls. The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> method changes the page from the edit display mode back to a normal browsing view. The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> method is for creating the chrome \(peripheral UI elements such as a border, verbs, icons, and a title\) that surrounds each <xref:System.Web.UI.WebControls.WebParts.EditorPart> control in the zone. The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> method is an abstract method; derived classes override it to create instances of all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls contained in the zone. The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> method can be called by a derived class if the collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in the zone changes for some programmatic reason, which flags the Web Parts control set to recreate and update the collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls. The <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> method is used to set the collection of <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls to **languageKeyword tag is not supported!!!!**  
 when the display mode changes from edit mode back to browse mode. Finally, the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> method is used for handling the event when a <xref:System.Web.UI.WebControls.WebParts.WebPart> control is either entering or leaving edit mode. For example, this method is a convenient place to synchronize the property values of a <xref:System.Web.UI.WebControls.WebParts.WebPart> control with the editable values in the associated <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls.  
  
   
  
## 例  
 The following code example demonstrates several declarative and programmatic uses of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class. Because the class is abstract, the code examples use the derived <xref:System.Web.UI.WebControls.WebParts.EditorZone> class that ships with the Web Parts control set, demonstrating the properties and methods that it inherits from the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class.  
  
 The code example has four parts:  
  
-   A user control that enables you to change display modes on the Web page.  
  
-   A Web page that contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control.  
  
-   A custom <xref:System.Web.UI.WebControls.WebParts.EditorZone> class that demonstrates some of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class members.  
  
-   A description of how the example works in a browser.  
  
 The source code for the user control comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0) topic, and place the file in the same folder as the .aspx page in this code example.  
  
 The second part of the code example is a Web page that contains a declarative reference to an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. Near the top of the page is a **languageKeyword tag is not supported!!!!**  
 directive for the user control. The user control tag is declared in the page with a **languageKeyword tag is not supported!!!!**  
 element. Notice that below the **languageKeyword tag is not supported!!!!**  
 element is an **languageKeyword tag is not supported!!!!**  
 element that contains <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, and has a variety of tags and properties set to determine its appearance and behavior. Most of the code in the page demonstrates the various programmatic uses of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> properties and methods.  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#1)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#1)]  
  
 The third part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.EditorZone> class that shows how to work with a number of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class members. The custom class derives from <xref:System.Web.UI.WebControls.WebParts.EditorZone> so that it can be used with a zone template in the declarative markup of the Web page. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App\_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; thus, you will notice that the **languageKeyword tag is not supported!!!!**  
 directive near the top of the Web page does not reference an assembly file. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#12)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#12)]  
  
 When you load the page in a browser, you can select **ui tag is not supported!!!!**  
 from the drop\-down list to switch to edit mode. You can click the verbs menu \(the downward arrow\) in the title bar of one of the two controls, and click **ui tag is not supported!!!!**  
 to edit the control. When the editing UI is visible, you can see the effects of the various declarative and programmatic uses of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class members.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>If you want to develop a custom zone for hosting <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls, you must determine whether you want to provide zone template support. A zone template is created by types that implement the <see cref="T:System.Web.UI.ITemplate" /> interface, and is necessary if you want to enable page developers using your custom zone to reference <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls within your zone in the declarative markup of a Web page. If you need zone template support, you should inherit from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> class.  
  
 In contrast, if your custom zone and its <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls are going to be self-contained, and they will be created programmatically without any options for page developers to specify controls declaratively in a zone template, then you can inherit directly from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> class. If you do this, it is critical that you implement the <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> method so that your custom zone will work.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EditorZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>継承クラス インスタンスによって使用されるクラスを初期化します。 このコンストラクターは、継承クラスによってのみ呼び出すことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This constructor, when invoked by an inherited class, passes a <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, which enables the page to display the editing user interface \(UI\).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 編集を適用するエンドユーザーを有効にするオブジェクトが編集モードでコントロールに変更します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーがコントロールに変更を適用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Apply 動詞がによって参照される、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> から派生したコントロールのプロパティ、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスです。 Apply 動詞は保存サーバー コントロールは、現在編集中に、エンドユーザーが、編集するユーザー インターフェイス \(UI\) に行った変更を編集します。 既定では、適用動詞として UI に表示されます。、 <xref:System.Web.UI.WebControls.Button> コントロールです。 ボタンの種類は、イメージ、リンク、または実際のボタンを指定できます。ことでこれを設定動詞のすべてのボタン \(個々 のボタン\) 的ではなくゾーンで、継承された設定 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> ゾーン レベルのプロパティです。  
  
 Apply 動詞は、いくつかありますが、ゾーン レベルの制御 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 、コントロールが編集モードでサーバー コントロールの 1 つまたは複数のプロパティの編集 apply 動詞機能ユニバーサルすべてからすべての変更を適用する、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> サーバー コントロール、ゾーン内のコントロールです。  
  
   
  
## 例  
 次のコード例は、アクセスする方法を説明、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> プロパティ宣言とプログラムを使用しています。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 このコード例の最初の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> Web ページで、宣言します。 この例では、動詞のテキストをカスタマイズします。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 この例の 2 番目の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> プロパティを有効または無効にすること、トグル ボタンを使用してプログラムでします。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#4)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#4)]  
  
 ブラウザーでページを読み込むときに選択できます **編集モードの** ドロップダウン リスト コントロールの編集モードに切り替えます。 動詞メニュー \(下向きの矢印\)、コントロールの 1 つのタイトル バーをクリックし、をクリックして **編集** 、選択したコントロールを編集します。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールと UI の編集は、表示されているが、適用動詞とクリックを表すボタンが表示することができます、 **切り替え ApplyVerb 有効になっている** を有効または無効にする\] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 編集をキャンセルするエンドユーザーを有効にするオブジェクトが編集モードでコントロールに変更します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーがコントロールの編集の変更をキャンセルします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Cancel 動詞がによって参照される、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> から派生したコントロールのプロパティ、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスです。 Cancel 動詞は、エンドユーザーが、編集するユーザー インターフェイス \(UI\) にサーバー コントロールに対して行った変更をキャンセルします。 既定では、\[キャンセル\] 動詞として UI に表示されます。、 <xref:System.Web.UI.WebControls.Button> コントロールです。 ボタンの種類は、イメージ、リンク、または実際のボタンを指定できます。ことでこれを設定動詞のすべてのボタン \(個々 のボタン\) 的ではなくゾーンで、継承された設定 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> ゾーン レベルのプロパティです。  
  
 ユーザーが編集の変更がどので変更が取り消された場合、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールが編集されているサーバー コントロールに適用されます。 また、ページが編集表示モードでが、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールが非表示、および <xref:System.Web.UI.WebControls.WebParts.WebPart> 編集されているコントロールが選択されていません。 これにより、別の選択にエンドユーザー <xref:System.Web.UI.WebControls.WebParts.WebPart> もう一度表示モードを変更することがなくを編集するコントロール。  
  
 Cancel 動詞は、ゾーン レベルのコントロールをいくつか発生する可能性があります <xref:System.Web.UI.WebControls.WebParts.EditorPart> 、コントロールが編集モードでサーバー コントロールの 1 つまたは複数のプロパティの編集 cancel 動詞機能ユニバーサルすべてからのすべての変更をキャンセルする、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> ゾーン内のコントロールです。  
  
   
  
## 例  
 次のコード例は、アクセスする方法を説明、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> プロパティ宣言とプログラムを使用しています。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 このコード例の最初の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> Web ページで、宣言します。 この例では、動詞のテキストをカスタマイズします。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 この例の 2 番目の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A> プロパティを有効または無効にすること、トグル ボタンを使用してプログラムでします。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#5)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#5)]  
  
 ブラウザーでページを読み込むときに選択できます **編集モードの** ドロップダウン リスト コントロールの編集モードに切り替えます。 動詞メニュー \(下向きの矢印\)、コントロールの 1 つのタイトル バーをクリックし、をクリックして **編集** 、選択したコントロールを編集します。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールと UI の編集は、表示されているが、cancel 動詞とクリックを表すボタンが表示することができます、 **切り替え CancelVerb 有効になっている** を有効または無効にする\] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメソッドが終了を編集するプロセスをユーザーには、ゾーンのヘッダーに close 動詞がクリックしたときに呼び出されると、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール、および Web パーツ ページの表示モードをブラウズ モードを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> で基本メソッドが宣言されているために、メソッドが実装を提供、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスです。 実装を呼び出すだけ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> メソッドで、編集のプロセスを終了するために必要な手順を実行します。  
  
 呼び出す、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A> メソッドは、ページをブラウズ モードを返し、いずれかに加えられた編集の変更をキャンセル <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子のセットに関連付けられたコントロールを作成、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> ゾーンです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しいへの参照を取得 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> 周辺機器のユーザー インターフェイス \(UI\) 要素の周囲のレンダリングに使用されるオブジェクト、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> ゾーンです。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> ゾーンの周辺機器の UI 要素を表示します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> メソッドが戻る新しい <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> オブジェクトです。 Chrome には、各ユーザーの周囲にある次の周辺機器 UI 要素が含まれています。 <xref:System.Web.UI.WebControls.WebParts.EditorPart> 、ゾーン内のコントロール。 枠線、タイトル バー、タイトル バーに、省略可能なアイコン、タイトルのテキストと動詞メニュー、コントロールのフッター領域に表示されるアイテムのなどで表示される項目。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> メソッドを使用して、返された <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> 各ウィンドウ枠を作成するオブジェクト <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> method can be overridden in a derived class to provide a different implementation. For example, you might create a customized <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> class to give you more control over the rendering and appearance of the editing UI. If you override the <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" /> method in a derived zone, you could create your custom <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> object in the overridden method.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供の作成の詳細を処理するゾーンを派生する基本メソッド宣言をオーバーライドできます、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> ゾーンに含まれるコントロール。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> のコレクションを含む <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> ゾーンに関連付けられているコントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> メソッドは実装を提供します。 派生クラスで実装するためのものでは、コレクションのインスタンスを作成するために使用する必要があります <xref:System.Web.UI.WebControls.WebParts.EditorPart> 編集モードをホストする Web ページに入力したときに、ゾーンに含まれるコントロール。<xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=fullName> メソッドの実装の 1 つの例には、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> コントロールが現在表示されているかどうかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> が現在表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EditorPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インスタンスへの参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> クラスに関連付けられている、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> ゾーンです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartChrome" /> の chrome 要素のスタイルの特性を格納している <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> ゾーン内のコントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A> プロパティへの参照を提供する、 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> ゾーンに関連付けられているオブジェクト。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A> メソッドが呼び出されるのインスタンスを作成、 <xref:System.Web.UI.WebControls.WebParts.EditorPartChrome> とこのインスタンスとクラスを使用してすべての周辺機器のユーザー インターフェイス \(UI\) 要素 \(クロムとも呼ばれます\) をレンダリングする <xref:System.Web.UI.WebControls.WebParts.EditorPart> ゾーン内のコントロールです。  
  
 個々 の chrome 要素 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールの動詞、アイコン、およびタイトルのテキストなど、ヘッダー領域だけでなく、フッター領域や、含まれる要素の境界線および他のアイテムを含めます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="EditorParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>すべてのコレクションを取得、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> に含まれるコントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> ゾーンです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> を含むすべての個人 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> ゾーン内のコントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティはすべてのコレクションへの参照を提供、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> ゾーン内のコントロールです。 両方を参照して、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> Web パーツ コントロール セット、および任意のカスタム コントロール <xref:System.Web.UI.WebControls.WebParts.EditorPart> をゾーンに追加されたコントロール。 カスタム グループを希望する開発者を作成、コレクションが読み取り専用のため <xref:System.Web.UI.WebControls.WebParts.EditorPart> 全般的な編集を目的し、コレクションに追加のコントロールをオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> メソッドです。  
  
 カスタム デザインする場合は <xref:System.Web.UI.WebControls.WebParts.EditorPart> を特定の編集コントロール <xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロールのメンバーをオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> インターフェイス、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドおよび <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> プロパティ \- で、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 これらのメンバーをオーバーライドする理由は、有効にする、 <xref:System.Web.UI.WebControls.WebParts.WebPart> カスタムを作成するコントロール <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールに追加して、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> 、コントロールが編集されている場合に、コレクションへのオブジェクト参照が編集コントロールをできるようにして、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが編集されます。 カスタムを追加する場合 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールから継承しないサーバー コントロールを編集する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスが実装する必要があります、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> の場合と同様に、クラスのインターフェイス、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
> [!NOTE]
>  注意してください <xref:System.Web.UI.WebControls.WebParts.EditorPart> のコレクションに追加されている <xref:System.Web.UI.WebControls.WebParts.EditorPart> の実装内のコントロール、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> メソッドには、ID プロパティに割り当てられている値が必要です。、、コレクションに割り当てるときに例外がスローされるそれ以外の場合、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティです。  
  
   
  
## 例  
 次のコード例は、アクセスする方法を説明、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティ プログラムを使用しています。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 このコード例の最初の部分では、ことを示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティには、すべてへの参照が含まれています。、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> Web ページで宣言によって参照されているコントロール。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 コード例の 2 番目の部分にアクセスするプログラムを使用して、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティと内の各コントロールのリスト、ID、 <xref:System.Web.UI.WebControls.Label> コントロールです。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#6)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#6)]  
  
 クリックして、ブラウザーでページを読み込むときに、 **表示 EditorParts コレクション** すべての Id の一覧表示するボタン、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> で参照されるコントロール、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コレクションに追加されても、ID プロパティに割り当てられた値はありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンにコントロールが含まれないときに表示されるメッセージを取得または設定します。</summary>
        <value>空のゾーンに表示されるメッセージを含む文字列。 カルチャ固有の既定の文字列は、.NET Framework によって提供されます。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ErrorText">
      <MemberSignature Language="C#" Value="public virtual string ErrorText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または編集のユーザー インターフェイス \(UI\) の上部に表示するゾーン レベルのエラー メッセージのテキストを設定します。</summary>
        <value>エラー メッセージが含まれるローカライズされた文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A> プロパティから派生したコントロールのレンダリング中にエラーが発生した場合に、UI に表示できるエラー メッセージのテキストを格納する、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスです。 個々 のいずれかでエラーが発生した場合、ゾーンの上部にあるエラー メッセージが表示されます <xref:System.Web.UI.WebControls.WebParts.EditorPart> ゾーンに含まれるコントロール。 さらに、各 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールは、エラーが発生したコントロールの近くの独自のエラー メッセージを表示できます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンのヘッダー領域のテキストを取得または設定します。</summary>
        <value>ゾーンのヘッダー テキストを含む文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、テキスト、 <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> エンドユーザーの指示を提供するコントロール。</summary>
        <value>エンドユーザーの指示を格納する文字列。 特定のツールのゾーンに適切な既定値は派生された <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> クラスによって提供されます。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateEditorParts">
      <MemberSignature Language="C#" Value="protected void InvalidateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションを設定 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールに関連付けられている、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> にゾーン <see langword="null" />, 、その結果は、 <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" /> コレクションを再作成に呼び出されるメソッド。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> 場合、派生クラスでメソッドを呼び出すことができる一連の <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールに関連付けられている、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> いくつかの理由から、ゾーンが変更され、派生クラスの更新の一覧を取得する必要が <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。 派生クラスを呼び出す必要があります <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>, 、現在のコレクションに設定 `null`します。 次回、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> コレクションへのアクセスは、自動的に設定する Web パーツ コントロールを呼び出す、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 更新されたコレクションを作成します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前に保存された状態。</param>
        <summary>以前に保存したゾーンの状態情報を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState%2A> メソッド OK 動詞、キャンセル動詞または適用の動詞は、ゾーンでクリックしたため、ページを読み込むかどうかをチェックする基本メソッドをオーバーライドします。 必要な場合は、各それぞれのシナリオに関連付けられた状態を処理します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">サイズ、 <paramref name="savedState" /> オブジェクトが、現在のビュー ステートのサイズと等しくないです。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OKVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 編集が適用されるオブジェクトが編集モードでコントロールに変更し、編集のユーザー インターフェイス \(UI\) を非表示にします。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> を編集をコントロールに適用し、編集用の UI を非表示にします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 \[Ok\] の動詞がによって参照される、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> から派生したコントロールのプロパティ、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスです。 サーバー コントロールにユーザーが行った編集の変更を適用、ユーザー クリックしたときに、apply 動詞に似ています。 さらに、編集コントロールは表示されず、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 編集されているコントロールが選択されていない \(これにより、ユーザーが別のコントロールを編集する\)、およびページは編集モードのままです。  
  
 既定では、\[ok\] の動詞として UI に表示されます。、 <xref:System.Web.UI.WebControls.Button> コントロールです。 ボタンの種類は、イメージ、リンク、または実際のボタンを指定できます。ことでこれを設定動詞のすべてのボタン \(個々 のボタン\) 的ではなくゾーンで、継承された設定 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> ゾーン レベルのプロパティです。  
  
 \[Ok\] の動詞は、ゾーン レベルのコントロールをいくつか発生する可能性があります <xref:System.Web.UI.WebControls.WebParts.EditorPart> 、コントロールが編集モードでサーバー コントロールの 1 つまたは複数のプロパティの編集 OK 動詞機能ユニバーサルすべてからすべての変更を適用する、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> ゾーン自体を除くすべてのコントロールを非表示にして、ゾーンを制御します。  
  
   
  
## 例  
 次のコード例は、アクセスする方法を説明、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> プロパティ宣言とプログラムを使用しています。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 このコード例の最初の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> Web ページで、宣言します。 この例では、動詞のテキストをカスタマイズします。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#2)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#2)]  
  
 例の 2 番目の部分にアクセスする方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A> プログラムを使用してを使用して、トグル ボタンを有効または無効にします。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/editorzonebasecs.aspx#7)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/editorzonebasevb.aspx#7)]  
  
 ブラウザーでページを読み込むときに選択できます **編集モードの** ドロップダウン リスト コントロールの編集モードに切り替えます。 動詞メニュー \(下向きの矢印\)、コントロールの 1 つのタイトル バーをクリックし、をクリックして **編集** 、選択したコントロールを編集します。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールと UI の編集は、表示されているが、OK 動詞とクリックを表すボタンが表示することができます、 **切り替え OKVerb 有効になっている** を有効または無効にする\] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:System.Object" /> を発生させる、 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> イベントです。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>発生させます、 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> イベントすべてを破棄し、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> を入力するか、編集を終了するには、Web ページに備えるゾーンで子コントロールがモードを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> メソッドで基本メソッドの実装を提供する、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスです。  
  
 主な目的、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> メソッドでは、入力または編集の表示モードを終了するには、Web ページを準備します。 メソッドは、ゾーンに含まれるすべてのコントロールを破棄しを生成する基本メソッドを呼び出して、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> 内のイベント、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> 派生クラスでメソッドです。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 派生したカスタム エディター ゾーン、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> クラスの Web ページの宣言型マークアップ内のゾーンのテンプレートと併用できるようにします。 カスタム クラスのオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A> メソッド、ゾーンの背景色を指定した色に設定し、すべての子を破棄する基本メソッドを呼び出すと <xref:System.Web.UI.WebControls.WebParts.EditorPart> を入力または編集を終了するための準備のコントロールの表示モード。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#13](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#13)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#13)]  
  
 ブラウザーでページを読み込むときに選択できます **編集モードの** ドロップダウン リスト コントロールの編集モードに切り替えます。 動詞メニュー \(下向きの矢印\)、コントロールの 1 つのタイトル バーをクリックし、をクリックして **編集** 、選択したコントロールを編集します。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールと編集のユーザー インターフェイス \(UI\) が表示されている、ゾーンに、コードで指定した背景色を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" /> method can be overridden or called programmatically in a custom editor zone control that inherits from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> class or the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> class.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.Control.PreRender" /> イベント、および呼び出し、 <see cref="M:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender" /> の chrome 要素のメソッド、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:System.Object" /> を発生させる、 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> イベントです。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>発生させます、 <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> イベントとセット、 <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts" /> コレクション <see langword="null" /> に備えてゾーンで、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 編集モードを開始または終了するコントロール。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> メソッドでは、個々 のときに発生するイベントのカスタム処理を提供することができます <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが入力または編集モードを終了します。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> 派生クラスでメソッドです。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 派生したカスタム エディター ゾーン、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> クラスの Web ページの宣言型マークアップ内のゾーンのテンプレートと併用できるようにします。 カスタム クラスのオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A> メソッドの編集中と基本メソッドを呼び出して、特定のコントロールの背景色を設定します。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#14](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#14)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#14)]  
  
 ブラウザーでページを読み込むときに選択できます **編集モードの** ドロップダウン リスト コントロールの編集モードに切り替えます。 動詞メニュー \(下向きの矢印\)、コントロールの 1 つのタイトル バーをクリックし、をクリックして **編集** 、選択したコントロールを編集します。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> 編集するユーザー インターフェイス \(UI\) が表示されると、選択したコントロールが、コードで指定した背景色を持つことを確認できます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" /> method can be overridden or called programmatically in a custom editor zone control that inherits from the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> class or the <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> class.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">A <see cref="T:System.String" /> イベントの引数を格納しています。</param>
        <summary>ゾーン動詞のいずれかに関連付けられているアクションを実行するか、サーバーへのポストバック イベントが発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent%2A> ユーザー インターフェイス \(UI\) でこれらの動詞のいずれかがクリックされた場合に、メソッドが OK 動詞、cancel 動詞または apply 動詞に関連付けられているそれぞれのアクションを実行します。 それ以外の場合、サーバーへのポストバック イベントが発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、ゾーンの内容を受け取る。</param>
        <summary>指定したゾーンをレンダリング <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A> メソッドから基本メソッドをオーバーライドして、 <xref:System.Web.UI.WebControls.WebControl> クラスを呼び出して、 <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> メソッドで、実行時に、ゾーンのコントロールの HTML フォームが表示されることを確認します。 検証後、メソッドは、ゾーンの完全な内容を表示する基本メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、ゾーンの本文の内容を受け取る。</param>
        <summary>派生したゾーンの本体領域をレンダリングする基本メソッドをオーバーライドして、 <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> クラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> メソッドの本体領域の表示、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ゾーンでは、ヘッダーおよびフッター領域間でのメイン コンテンツ領域は、含む <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。  
  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> メソッドで基本メソッドをオーバーライドして、 <xref:System.Web.UI.WebControls.WebParts.WebZone> レイアウトとスタイルに対応する特殊な表示属性を提供するクラスがのみに適用 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ゾーンです。 メソッドは、本文の内容全体を含むテーブルを出力し、そのテーブル内のページの現在の表示モードなどのさまざまな条件に基づいて異なる属性値を設定します。 値を表示して格納されているコントロールがない場合、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> 派生クラスでメソッドです。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 派生したカスタム エディター ゾーン、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> クラスの Web ページの宣言型マークアップ内のゾーンのテンプレートと併用できるようにします。 カスタム クラスのオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody%2A> メソッドを HTML を追加する `<hr />` ヘッダーとの間に行を作成する要素。 これは、後、ゾーンの本文のコンテンツの残りの部分をレンダリングする基本メソッドを呼び出します。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#15](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#15)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#15](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#15)]  
  
 ブラウザーでページを読み込むときに選択できます **編集モードの** ドロップダウン リスト コントロールの編集モードに切り替えます。 動詞メニュー \(下向きの矢印\)、コントロールの 1 つのタイトル バーをクリックし、をクリックして **編集** 、選択したコントロールを編集します。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールと編集のユーザー インターフェイス \(UI\) が表示されている、ヘッダーと本文 \[エディタ ゾーンの間に作成される行を確認できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 、ゾーンの本文の内容を受け取る。</param>
        <summary>ゾーンのレベルで適用された動詞を表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> メソッドは、ゾーン全体に適用する操作の動詞を表示します。 OK 動詞、cancel 動詞および動詞を適用します。 これらの動詞がで参照されている、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>, 、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、オーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> 派生クラスでメソッドです。 例を実行するために必要な完全なコードの例」のセクションを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスの概要に関するトピック。  
  
 派生したカスタム エディター ゾーン、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> クラスの Web ページの宣言型マークアップ内のゾーンのテンプレートと併用できるようにします。 カスタム クラスのオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs%2A> いくつかのテキストの既存の値を追加する方法、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Text%2A> ゾーン レベルの動詞のそれぞれのプロパティです。 これは、後、すべての動詞を表示する基本メソッドを呼び出します。  
  
 [!code-csharp[WebParts\_EditorZoneBase\_Common\#16](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/CS/myeditorzone.cs#16)]
 [!code-vb[WebParts\_EditorZoneBase\_Common\#16](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZoneBase_Common/VB/myeditorzone.vb#16)]  
  
 ブラウザーでページを読み込むときに選択できます **編集モードの** ドロップダウン リスト コントロールの編集モードに切り替えます。 動詞メニュー \(下向きの矢印\)、コントロールの 1 つのタイトル バーをクリックし、をクリックして **編集** 、選択したコントロールを編集します。 ときに、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールと編集のユーザー インターフェイス \(UI\) が表示されている、ゾーンの下部にあるゾーン レベルの動詞のボタンで変更されたテキストを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた後で発生したビューステートの変更を保存します。</summary>
        <returns>ゾーン コントロールの現在のビュー ステートを返します。 このメソッドが戻るかどうかビューステートがゾーンに関連付けられていない、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState%2A> メソッドがビュー状態を保存する基本メソッドを呼び出し、適用、\[キャンセル\]、\[ok\] の動詞に関連するすべてのビュー ステートも保存します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ゾーン コントロールのビューステートの変更を追跡します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState%2A> メソッドが最初に関連付けられているビュー ステートを追跡するために基本メソッドを呼び出して、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ゾーンし、適用、cancel、および OK 動詞のビュー ステートの追跡を開始します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WebPartToEdit">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 現在編集されているコントロール。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> は、現在編集モードにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 1 つだけ <xref:System.Web.UI.WebControls.WebParts.WebPart> 、時を使用して、コントロールが編集モードでは、コントロールを編集可能、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A> プロパティはそのコントロールへの参照を提供します。 参照されるコントロールで参照されているコントロールと同じ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> プロパティです。 そのため、現在編集されているコントロールは常に現在選択されています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The protected <see cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit" /> property is accessible only in derived classes, which can call this property on the base <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> class to get an object reference to the current control being edited.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorPart.WebPartToEdit" />
      </Docs>
    </Member>
  </Members>
</Type>