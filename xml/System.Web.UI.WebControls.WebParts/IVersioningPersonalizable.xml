<Type Name="IVersioningPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IVersioningPersonalizable">
  <TypeSignature Language="C#" Value="public interface IVersioningPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVersioningPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IVersioningPersonalizable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Web パーツ コントロールの以前のバージョンに属する個人用設定データを管理できるインターフェイスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ コントロールを新しいバージョンにアップグレードすると、アップグレードされたクラスのパーソナル化できるプロパティの変更である可能性があります。 たとえば、Web パーツ コントロールのアップグレードされたバージョンでは、以前のバージョンで使用可能になったプロパティはサポート不要になった可能性があります。 このような場合は、Web パーツ コントロール セットは、基になるデータ ストアから個人用設定データを読み込むが、このデータを適用先となるプロパティを持つ可能性があります。 コントロールを実装する場合、 <xref:System.Web.UI.WebControls.WebParts.IVersioningPersonalizable> インターフェイス、Web パーツ コントロールが渡される孤立した個人用設定データ。 アプリケーションは、このデータを使用して、新しいバージョンでプロパティを更新し、またはその他の方法でデータを使用します。 Web パーツ コントロールをインポートするときに、孤立したプロパティが検出された場合、 <xref:System.Web.UI.WebControls.WebParts.IVersioningPersonalizable.Load%2A> メソッドが呼び出されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.IDictionary unknownProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Collections.IDictionary unknownProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IVersioningPersonalizable.Load(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unknownProperties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="unknownProperties">コントロールに適用できなかったパーソナル化データのディクショナリ。</param>
        <summary>バージョン変更のためそのデータに対応する個人用に設定されたプロパティがない Web パーツ コントロールに、パーソナル化データを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The **parameterReference tag is not supported!!!!**  
 parameter contains a merged representation of unknown personalization data, of both "User" and "Shared" scope, that could not be applied to the control. When a page is running in user scope, the unknown user\-scope values are supplied \(if available\) rather than unknown shared\-scope values. This information is stored as a series of name\/value pairs where each name is the string name of a property that was not found on the control and each value contains the property value. It is the responsibility of the control to cast or convert the value to the appropriate type and carry out further processing \(such as mapping data from an old property to a new property\).  
  
 If a control's state changes, it should call <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> \(either the inherited method, or the public static method in the case of a control that does not derive from <xref:System.Web.UI.WebControls.WebParts.WebPart>\). If a control marks itself as "dirty", the Web Parts control set will extract personalization data from the control, regardless of the control's "dirty" state, and save it back to the underlying data store later in the personalization life cycle. A control should mark itself as "dirty" if, as a result of processing the values in the **parameterReference tag is not supported!!!!**  
 parameter, the control's state has changed.  
  
 Note that if orphaned properties are detected when importing Web Parts controls, this method is automatically called.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>