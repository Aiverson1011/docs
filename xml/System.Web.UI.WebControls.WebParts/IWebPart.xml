<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>ASP.NET で使用される共通のユーザー インターフェイス \(UI\) のプロパティを定義 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスの操作のユーザー エクスペリエンスを強化するいくつかの UI 指向のプロパティを提供する <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 基本から派生するコントロールを作成する場合 <xref:System.Web.UI.WebControls.WebParts.WebPart> 内のすべてのプロパティの実装を取得するクラス、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスのため、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基本クラスは、このインターフェイスを実装します。  
  
 既存のユーザー コントロール、ASP.NET コントロール、またはから継承しないカスタム サーバー コントロールを使用する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> Web パーツ アプリケーションの一部としてクラスで宣言されたこれらの UI 指向プロパティを使用することも、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。 既存のサーバー コントロールを配置する場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> でラップされる実行時に、ゾーン、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> オブジェクトです。<xref:System.Web.UI.WebControls.WebParts.GenericWebPart> クラスから継承、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 動作する既存のサーバー コントロールにより、基本クラスが true として <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールとそれにそれらのプロパティを追加、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。  
  
 サーバー コントロールを配置する場合 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのゾーンで、それらを使用して、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> すると、実行時のプロパティ \(ページの保存形式\) で、ページのマークアップ内のサーバー コントロールのプロパティの値を宣言もできます。 ただし、のみであるためこれらのプロパティをサーバー コントロールに使用可能な実行時に、デザイン時のコーディングなどの機能は、IntelliSense を認識しない <xref:System.Web.UI.WebControls.WebParts.IWebPart> サーバー コントロール宣言されたプロパティ。 これらのコントロールに宣言されたプロパティは、Microsoft Visual Studio はデザイン時にも有効である、プロパティを認識しませんが、ページを読み込むときにも動作します。 追加する場合、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> に既存のサーバーおよびデザイン時のユーザー エクスペリエンスを向上させるユーザー コントロールのプロパティを実装できます、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> サーバー コントロールのインターフェイスです。  
  
 実装する主な理由ではおそらく、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスは、コントロールを \(カスタム\) の expando プロパティの使用はサポートされません。 Expando プロパティは、追加できるクラスに動的にプロパティとしての文字列、 <xref:System.Web.UI.IAttributeAccessor> インターフェイスです。 このインターフェイスを実装するコントロールを含む、 <xref:System.Web.UI.WebControls.WebControl> クラスとその子要素の expando プロパティを使用することができます。 そのため、すべての ASP.NET サーバー コントロール、カスタム コントロールから派生したそれらの Web ユーザー コントロールと <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの expando プロパティの使用をサポートしています。 基本から直接継承される、カスタム コントロール <xref:System.Web.UI.Control> クラスは expando プロパティをサポートしません。 したがって、内でこれらのコントロールを宣言する場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, 、一般的なを宣言することができなく <xref:System.Web.UI.WebControls.WebParts.IWebPart> などのプロパティは、コントロールのプロパティ <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> と <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>です。 このようなコントロールでこれらのプロパティを使用する場合は、実装する必要があります、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスです。  
  
   
  
## 例  
 次のコード例を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> ユーザー コントロールのインターフェイスです。 これは、最小限のプロパティを実装する方法を表示する単純な実装です。  
  
 このコード例の最初の部分では、ユーザー コントロールを示します。 ユーザー コントロールのすべてのプロパティを実装して、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイス、およびその他の 2 つのパブリック プロパティ、ユーザー インターフェイス コントロールに関連付けします。 2 つのカスタム プロパティを使用して、 `Personalizable` 属性には、ブラウザー セッション間で保存するには、そのプロパティの値を使用します。 ベースで <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの実装のすべてのプロパティ、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスが実装されているパーソナル化できると同様に、このコード例には存在しない場合。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-vb[WebParts\_IWebPart\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 コード例の 2 番目の部分では、ユーザー コントロールをホストする Web ページを示します。 ページが、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ユーザー コントロールが参照されている内では、制御します。 注意していくつかの <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスのプロパティの値は、両方の動作は、ように表示できるようにユーザー コントロールのマークアップで宣言によって設定されて、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 実行時およびデザイン時に制御します。 ブラウザーでページを読み込む場合することができます、UI を使用して、ページ上をプログラムで実装されたの値を変更できることを示す <xref:System.Web.UI.WebControls.WebParts.IWebPart> 実行時にプロパティです。 プロパティ値の一部を変更すると変更\] ページで、明らかではありませんが、ページのソースで表示される \(、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> プロパティ\)、またはアプリケーションの状態のデータに格納されます \(、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> プロパティ\)。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-vb[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Normally you do not need to implement the <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> interface, either on custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls or server controls, because the base <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> class already implements the interface. Custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> controls, and other server controls that are placed in <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> zones, can use all the <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> properties.  
  
 The main reason to implement the <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> interface yourself, whether in a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control or another server control, is if you want to change the default implementation. For example, you might want to provide default values for some of the properties. Another reason to implement the interface in a user or server control is so that the design-time experience of working with these properties on the control will be enhanced.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の URL を表す画像、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのカタログ内のコントロールです。</summary>
        <value>カタログ内のコントロールを表すために使用されるイメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 多くの場合、web パーツ アプリケーションは、ユーザーがページに追加できるコントロールのカタログ \(またはリスト\) を提供します。<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> コントロールのプロパティには、カタログに表示されるときに、コントロールを表示するイメージの URL が含まれています。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> クラスの概要です。  
  
 このコード例の最初の部分は、ユーザー コントロールを実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> プロパティです。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts\_IWebPart\_Overview\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 コード例の 2 番目の部分をプログラムでの値を設定するユーザー コントロールのメソッドを示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> プロパティ\] ページで、オプション ボタンから、ユーザーが適切なプロパティ名を選択すると、テキスト ボックスに新しい値を設定してクリックして、 **更新** \] ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の 3 番目の部分は、ユーザーが制御を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> でインターフェイスが参照されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロール、方法、および <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> コントロールの宣言によってプロパティを設定します。 この例で提供される Web パーツ コントロールのカタログがないためには、このプロパティの設定の実際の効果を確認することはできませんに注意してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-vb[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のツールヒントやカタログで使用する、コントロールの動作をまとめた簡単な語句 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>文字列には、コントロールの機能が簡潔にまとめたものです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> の一覧を提供するカタログ内のコントロールのわかりやすい文字列としてプロパティ値が通常使用される <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、およびコントロールのタイトル バーのツールヒントとして。 プロパティのコンテンツは、ユーザーがコントロールのタイトル バーのタイトル テキスト上にマウス ポインターを置いたときに、ツールヒントに表示されます。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> クラスの概要です。  
  
 このコード例の最初の部分は、ユーザー コントロールを実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> プロパティです。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts\_IWebPart\_Overview\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 コード例の 2 番目の部分をプログラムでの値を設定するユーザー コントロールのメソッドを示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> プロパティ\] ページで、オプション ボタンから、ユーザーが適切なプロパティ名を選択すると、テキスト ボックスに新しい値を設定してクリックして、 **更新** \] ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の 3 番目の部分は、ユーザーが制御を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> でインターフェイスが参照されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロール、方法、および <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> コントロールの宣言によってプロパティを設定します。 ブラウザーでページを読み込んだ後に、コントロールのタイトル バーで、タイトル テキストの上にマウス ポインターを配置し、このプロパティの値を表示できるに注意してください。 Web ページの読み込みを使用して、指定されたユーザー インターフェイス \(UI\) にプロパティ値を変更する実行時にプログラムを使用してプロパティ値を変更することもできます。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-vb[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>連結される文字列を取得、 <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> プロパティの値をフォームに完全なタイトル、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>コントロールのサブタイトルとして機能する文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> の既定の字幕文字列を返すプロパティが使用される、 <xref:System.Web.UI.WebControls.WebParts.WebPart> タイトル バーにコントロールのタイトルに追加されるコントロール。  
  
 既定値を指定する場合、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> を実装するコントロールで、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> インターフェイスを自動的に設定されたコントロールの値に追加する Web パーツ、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> 実行時にコントロールのプロパティです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> クラスの概要です。  
  
 このコード例の最初の部分は、ユーザー コントロールを実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> プロパティです。 プロパティは読み取り専用し、目的は、コントロールのメインのタイトルに追加される既定のサブタイトルを提供するために使用することに注意してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts\_IWebPart\_Overview\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 コード例の 2 番目の部分は、ユーザーが制御を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> でインターフェイスが参照されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールとどのようにから書き込み可能なプロパティ <xref:System.Web.UI.WebControls.WebParts.IWebPart> コントロールの宣言によって設定されます。 ブラウザーでページを読み込むことに注意して、既定値の <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> ユーザー コントロールの実装コードで設定された、プロパティがコントロールのタイトル バーのタイトルに追加されます。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-vb[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のタイトル、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>コントロールのタイトルを表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントロールのタイトル バーに表示されるタイトルのテキストが設定されて、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> プロパティです。  
  
 コントロールのタイトルを指定しない場合、自動的に設定する Web パーツ コントロールは、タイトルとして使用する既定の文字列を計算します。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>」を参照してください。 また、タイトル バーの文字列に追加される既定のサブタイトルを提供することができます。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>」を参照してください。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> クラスの概要です。  
  
 このコード例の最初の部分は、ユーザー コントロールを実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> プロパティです。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts\_IWebPart\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 コード例の 2 番目の部分をプログラムでの値を設定するユーザー コントロールのメソッドを示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> プロパティ\] ページで、オプション ボタンから、ユーザーが適切なプロパティ名を選択すると、テキスト ボックスに新しい値を設定してクリックして、 **更新** \] ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の 3 番目の部分は、ユーザーが制御を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> でインターフェイスが参照されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロール、方法、および <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> コントロールの宣言によってプロパティを設定します。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-vb[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのタイトル バーに Web パーツ コントロールを表すために使用されるイメージの URL を設定します。</summary>
        <value>イメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> プロパティが付いたアイコンを関連付けるための手段を提供する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 コントロールのタイトル バーにアイコンが表示されます。 テーマの一貫性を保つためアプリケーション開発者は、行う必要があるこのアイコンを Web パーツ コントロールのカタログ内のコントロールを表す画像のように \(で参照されるイメージ、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> プロパティ\)。  
  
 Web パーツ コントロール セットに実装されている、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> プロパティは、イメージやコントロールのタイトル バーに表示されるアイコンを変更するユーザーが個人用に設定することができます。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> クラスの概要です。  
  
 このコード例の最初の部分は、ユーザー コントロールを実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> プロパティです。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts\_IWebPart\_Overview\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 コード例の 2 番目の部分をプログラムでの値を設定するユーザー コントロールのメソッドを示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> プロパティ\] ページで、オプション ボタンから、ユーザーが適切なプロパティ名を選択すると、テキスト ボックスに新しい値を設定してクリックして、 **更新** \] ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の 3 番目の部分は、ユーザーが制御を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> でインターフェイスが参照されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロール、方法、および <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> コントロールの宣言によってプロパティを設定します。 実際のイメージの URL を指定しない場合、タイトル バーにアイコンのプレース ホルダーが表示に注意してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-vb[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または補足情報への URL を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>についての詳細情報への URL を表す文字列、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 URL を割り当てると、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> プロパティ、コントロールのタイトルはリンクになります。 このプロパティの目的では、エンドユーザーのコントロールに関する追加情報にアクセスする便利な手段です。 詳細については、著作権のデータ、連絡先データの詳細については、コントロールの作成者、またはコントロールの用途の概要を提供できます。  
  
> [!NOTE]
>  通常、使用しませんが、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> ヘルプ コンテンツにリンクするプロパティです。 最善の方法を使用するコントロールは、ヘルプへのリンクを提供する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では宣言型およびプログラムによる使用、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> プロパティです。 使用例」の例の完全なソース コードがある、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> クラスの概要です。  
  
 このコード例の最初の部分は、ユーザー コントロールを実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> プロパティです。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts\_IWebPart\_Overview\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 コード例の 2 番目の部分をプログラムでの値を設定するユーザー コントロールのメソッドを示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> プロパティ\] ページで、オプション ボタンから、ユーザーが適切なプロパティ名を選択すると、テキスト ボックスに新しい値を設定してクリックして、 **更新** \] ボタンをクリックします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts\_IWebPart\_Overview\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 コード例の 3 番目の部分は、ユーザーが制御を実装する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.IWebPart> でインターフェイスが参照されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロール、方法、および <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> コントロールの宣言によってプロパティを設定します。 実際のページへの URL を指定しないし、ユーザーがタイトル バーにあるリンクをクリックし、エラー メッセージが表示されることに注意してください。  
  
 [!code-csharp[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-vb[WebParts\_IWebPart\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      </Docs>
    </Member>
  </Members>
</Type>