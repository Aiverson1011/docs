<Type Name="WebPart" FullName="System.Web.UI.WebControls.WebParts.WebPart">
  <TypeSignature Language="C#" Value="public abstract class WebPart : System.Web.UI.WebControls.WebParts.Part, System.Web.UI.WebControls.WebParts.IWebActionable, System.Web.UI.WebControls.WebParts.IWebEditable, System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebPart extends System.Web.UI.WebControls.WebParts.Part implements class System.Web.UI.WebControls.WebParts.IWebActionable, class System.Web.UI.WebControls.WebParts.IWebEditable, class System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.Part</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebActionable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebEditable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.WebParts.IWebPart</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>カスタム ASP.NET Web パーツ コントロールの基底クラスとして機能します。基本 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> クラスの機能に、追加のユーザー インターフェイス \(UI\) プロパティ、接続を確立する機能、パーソナル化の動作を追加します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツの機能を備えたコントロールを作成する場合は、2 つの基本的なオプションがあります。 派生するカスタム コントロールを作成する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラス、または作成したりその他のサーバー コントロールを使用します。 既存の ASP.NET コントロール、カスタム サーバー コントロール、およびユーザー コントロール得ることができますすべて完全な Web パーツ機能内で、これらを宣言することで \(またはプログラムに追加すること\)、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> でラップするが、その結果、コントロールのゾーン <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> オブジェクトの実行時に、true として扱わ <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 詳細については、ドキュメントを参照して、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> クラスです。 開発のスピードとコードを最大限に再利用の場合は、既存のサーバー コントロールを使用することができます適しています。 動作と Web パーツ コントロールの機能を最大限のプログラムによる制御から継承するカスタム コントロールの作成、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスは、多くの場合、最適なオプションです。  
  
 抽象 <xref:System.Web.UI.WebControls.WebParts.WebPart> ベースからクラスを継承 <xref:System.Web.UI.WebControls.WebParts.Part> を制御し、すべての基本要素を示します <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 クラスには、UI の外観に影響を与えるプロパティの共通セットが含まれています。<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> プロパティにはそれぞれが特定のプロパティの名前が示すように一部のコントロールとやり取りする Web アプリケーションのユーザーが許可されているかどうかを指定します。<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.Height%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebPart.Width%2A> プロパティのサイズ、可視性、外観、およびサポートのコンテンツ \(タイトル、説明など\) を決定する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 関係、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、Web パーツ コントロール セットがなどのプロパティによって決定されます内のコンテキストを <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>, 、関連付けられているコントロールへの参照を保持する <xref:System.Web.UI.WebControls.WebParts.WebPartManager> オブジェクト、および <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>, を参照、 <xref:System.Web.UI.WebControls.WebParts.WebZone> コントロールが含まれています。 1 つしか置けません <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 、ページごとのコントロールとの各インスタンス、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、1 つだけ内に存在できる <xref:System.Web.UI.WebControls.WebParts.WebZone> 一度にします。  
  
> [!NOTE]
>  A <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、Web ページ上のゾーンの外側に配置できますが、ここでは、通常のサーバー コントロールとして機能し、ほぼすべての Web パーツの機能は失われます。  
  
 その他のいくつかの重要なプロパティの独自の機能に影響を与える <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。<xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> をページにコントロールを追加するかどうかを決定するフィルターとして実行時に使用する任意の文字列を設定するプロパティを使用します。 ロール管理などの機能と共に使用される、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> プロパティは定義済みのユーザーの役割に基づいたビューを作成するための便利なメカニズムを提供します。<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> プロパティ示すかどうかをエクスポート中に、コントロールのすべての利用可能なプロパティ データをエクスポートまたは非機密データのみです。 これにより、開発者は機密データとセキュリティの目的ではない、データとを区別できます。<xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> のインスタンスへの参照を返します、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールできるように、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールで編集して、ページが編集モードの場合。 最後に、残りのページに関連するコントロールの状態を示すいくつかのプロパティがあります。<xref:System.Web.UI.WebControls.WebParts.WebPart.IsClosed%2A> プロパティは、コントロールを閉じるかどうかを示します \(ために追加し、 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> オブジェクト\)、または開いていると、ページで使用できる場合です。<xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> プロパティは、コントロールは、Web ページのすべてのユーザーに表示されることを意味する \(特定のユーザー コントロールの場合\) と制御を共有するかどうかを示します。<xref:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone%2A> プロパティは、コントロールに現在格納されているかどうかを示します、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>\-派生したゾーン \(よう <xref:System.Web.UI.WebControls.WebParts.WebPartZone>\)。 値 `false` コントロールがゾーン内でこのようには、すべての Web パーツの機能を示します。<xref:System.Web.UI.WebControls.WebParts.WebPart.IsStatic%2A> プロパティは、コントロールが静的か動的であるかどうかを示します。 ダイナミック コントロールをプログラムで追加され、スタティック コントロールは、Web ページのマークアップで宣言されます。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスは、コントロールのライフ サイクルのさまざまな時点での動作を決定するいくつかのメソッドも提供します。 たとえば、 <xref:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged%2A> と <xref:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged%2A> メソッドを両方のコントロールの内容の表示の各メソッドの名前に対応するイベントの中のプログラムによる制御を提供する派生クラスでオーバーライドできます。  
  
 派生するクラス <xref:System.Web.UI.WebControls.WebParts.WebPart> 追加 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> オブジェクトを <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> コレクションです。 タイトル バーに表示される動詞メニューに、動詞を表示、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。<xref:System.Web.UI.WebControls.WebParts.WebPartVerb> オブジェクトは、非表示にするか、コントロールを最小限にするか、ヘルプを表示するなど、ユーザーの一般的な操作に単純な UI 要素を提供します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> メソッドが任意のカスタムのコレクションを作成 <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールに関連付けられている、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 編集するには、特別に設計されているカスタム コントロールが作成されるよう、開発者はこのメソッドをオーバーライドして、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 メソッドは、ユーザーが編集動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
   
  
## 例  
 次のコード例では、作成、 <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御し、Web ページで参照します。  
  
 この例の最初の部分には、ユーザー定義のコードが含まれています。 <xref:System.Web.UI.WebControls.WebParts.WebPart> という名前のコントロール `TextDisplayWebPart`します。 このコントロールは、単純なカスタムを作成する方法を示します <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、Web パーツの機能にアクセスすることは、セットを制御します。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、ソース コードをアセンブリにコンパイルし、Web アプリケーションの Bin サブフォルダーに配置することでアセンブリを参照すると想定しています、 `Register` ディレクティブは、Web ページでします。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_General\_TextDisplayPart\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts\_General\_TextDisplayPart\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 例の 2 番目の部分を参照する方法を示しています、 `TextDisplayWebPart` ASP.NET Web ページ内のコントロールです。 多くのさまざまなことを確認 <xref:System.Web.UI.WebControls.WebParts.WebPart> プロパティは、カスタム コントロールに宣言して割り当てることができます。  
  
 [!code-csharp[WebParts\_General\_TextDisplayPart\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-vb[WebParts\_General\_TextDisplayPart\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebPart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>継承クラス インスタンスによって使用されるクラスを初期化します。 このコンストラクターは、継承クラスによってのみ呼び出すことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.%23ctor%2A> コンス トラクターは、さまざまななど、いくつかの UI 指向プロパティの既定値を初期化します `Allow` コントロールの機能を決定するプロパティです。 これらのプロパティが継承クラス インスタンスに組み込まれています。  
  
   
  
## 例  
 次のコード例は、方法から派生するコントロールについて説明します。、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスは、ベースで設定する既定のプロパティ値を継承 <xref:System.Web.UI.WebControls.WebParts.WebPart.%23ctor%2A> コンス トラクターが、派生したコントロールのコンス トラクターの 1 つのプロパティの値を変更します。  
  
 この例の最初の部分には、ユーザー定義のコードが含まれています。 <xref:System.Web.UI.WebControls.WebParts.WebPart> という名前のコントロール `TextDisplayWebPart`します。 このコントロールは、単純なカスタムを作成する方法を示します <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、Web パーツの機能にアクセスすることは、セットを制御します。 カスタム コントロールのコンス トラクターで、 `TextDisplayWebPart.AllowClose` にプロパティが設定されている `false`, 、Web ページへのコントロールを閉じてからユーザーを防止する効果があり。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、ソース コードをアセンブリにコンパイルし、Web アプリケーションの Bin サブフォルダーに配置することでアセンブリを参照すると想定しています、 `Register` ディレクティブは、Web ページでします。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_General\_TextDisplayPart\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts\_General\_TextDisplayPart\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 例の 2 番目の部分を参照する方法を示しています、 `TextDisplayWebPart` ASP.NET Web ページ内のコントロールです。 ユーザー設定のタイトル バーにある動詞メニューをクリックすると、ブラウザーでページを読み込む <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、close 動詞が無効になった、できなくなるユーザー コントロールを終了します。  
  
 [!code-csharp[WebParts\_General\_TextDisplayPart\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-vb[WebParts\_General\_TextDisplayPart\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowClose">
      <MemberSignature Language="C#" Value="public virtual bool AllowClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowClose" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはエンドユーザーが閉じることができるかどうかを示す値を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Web ページ上のコントロールです。</summary>
        <value>
          <see langword="true" /> 場合は、Web ページで、コントロールを閉じることができます。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーが閉じた後、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 表示するか、ページで使用できる、Web ページ、コントロールへのコントロールが不要になった。 終了したコントロールは、ページのカタログ、コントロールへの参照を格納する Web パーツのエンティティに追加されます。 開発者を追加した場合、 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 内のページにコントロール、 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロール、ユーザーはカタログの表示モードに切り替える、ページ カタログで終了したコントロールを選択してページに追加することができます。  
  
> [!NOTE]
>  閉じた <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールに追加できる戻るページ プログラムによって、またはページがカタログ内にある場合は、ページ カタログから終了したコントロールを選択したユーザーを表示するモード。  
  
 閉じる、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールとは異なる削除します。 削除されたコントロールは完全に削除中に、ページに返す終了したコントロールを追加できます。 コントロールの削除の詳細については、次を参照してください。、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A> メソッドです。 コントロールの終了は、非表示に違いはも。 非表示には、コントロールとは、静止に含まれるページには、ページ ライフ サイクル イベントに参加しているし、ユーザーのビューでは、非表示にのみ、終了したコントロールもページには反映されません。  
  
 静的および動的 <xref:System.Web.UI.WebControls.WebParts.WebPart> \(スタティック コントロールは、ダイナミック コントロールがプログラムで追加されている間に、ページのマークアップで宣言は\) コントロールを閉じることができます。  
  
 開発者が設定されている場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> プロパティを `false`, 、close 動詞は、コントロールに表示されませんし、ユーザー コントロールを閉じることができません。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、既定の設定を変更、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> のカスタム プロパティ <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを閉じることができません。  
  
 この例の最初の部分には、ユーザー定義のコードが含まれています。 <xref:System.Web.UI.WebControls.WebParts.WebPart> という名前のコントロール `TextDisplayWebPart`します。 カスタム コントロールのコンス トラクターで、 `TextDisplayWebPart.AllowClose` にプロパティが設定されている `false`, 、Web ページへのコントロールを閉じてからユーザーを防止する効果があり。 つまり、ユーザー コントロールの動詞メニューに close 動詞を無効にします。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、ソース コードをアセンブリにコンパイルし、Web アプリケーションの Bin サブフォルダーに配置することでアセンブリを参照すると想定しています、 `Register` ディレクティブは、Web ページでします。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_General\_TextDisplayPart\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts\_General\_TextDisplayPart\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textdisplaywebpart.vb#2)]  
  
 例の 2 番目の部分を参照する方法を示しています、 `TextDisplayWebPart` ASP.NET Web ページ内のコントロールです。 において、 `<aspSample:TextDisplayWebPart>` コントロールを参照する要素の場合は、コントロールのコンス トラクターによって設定プロパティの値も変更可能性があります。 終了するコントロールを許可するには追加、 `AllowClose="true"` 属性を宣言型マークアップで要素にします。  
  
 [!code-csharp[WebParts\_General\_TextDisplayPart\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/CS/textwebpartcs.aspx#1)]
 [!code-vb[WebParts\_General\_TextDisplayPart\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_General_TextDisplayPart/VB/textwebpartvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      </Docs>
    </Member>
    <Member MemberName="AllowConnect">
      <MemberSignature Language="C#" Value="public virtual bool AllowConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowConnect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 制御はそれに接続を作成するには、その他のコントロールを使用できます。</summary>
        <value>コントロールに接続を確立できるかどうかを示すブール値。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プロパティの値は、ページ マークアップ、またはプログラムにより宣言によって設定できます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts" />
      </Docs>
    </Member>
    <Member MemberName="AllowEdit">
      <MemberSignature Language="C#" Value="public virtual bool AllowEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEdit" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはエンド ユーザーが変更できるかどうかを示す値を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 1 つまたは複数によって提供されるユーザー インターフェイス \(UI\) を介して管理 <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 変更された以外の場合、コントロールが表示できる <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エンドユーザーが編集できるようにする、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> にプロパティを設定する必要があります `true` \(既定\)、ページの表示モードが編集モードである必要があります。 表示モードが内のフィールドで表される、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。 モードは、この場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>です。 \[About\] ページの詳細については、モードとそれらを変更する方法を表示するを参照してください、 <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> クラスの概要です。  
  
 ときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> にプロパティが設定されている `false` 宣言またはプログラムによって、編集のオプションは、限定します。 可能な編集操作が、ページのレイアウトを変更するとのみを使用して、 <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> コントロール、またはその他の基本的な操作がユーザー設定を有効になっている <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールです。  
  
 使用例について <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールが設定され、カスタム Web パーツ コントロールの編集を有効にする方法を示しています。 Web パーツからのコントロールを参照してください [Walkthrough: Creating a Web Parts Page](http://msdn.microsoft.com/ja-jp/e05b659c-d6da-46cb-b177-48efe55f2770)します。  
  
> [!IMPORTANT]
>  効果を <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> プロパティには、コントロールの動作が、Web ページの現在のパーソナル化スコープによっても影響を受けるし、そのページで個々 の Web パーツを制御します。 詳細については、「[Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320)」を参照してください。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、既定の設定を変更する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowEdit%2A> の Web パーツのプロパティを制御できるため、コントロールを編集することはできません。 この例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 `TextDisplayWebPart`, 、例」のセクションに存在する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 コード例では、Web パーツ ページ上の表示モードを変更できるようにするカスタム ユーザー コントロールを使用します。 ユーザー コントロールがによって参照されている、 `Register` ユーザー コントロールをホストする Web ページの上部にあるディレクティブです。 このユーザー コントロールを作成し、表示モードを使用する方法の詳細については、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPart\_AllowEdit\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/CS/displaymodemenucs.ascx#5)]
 [!code-vb[WebParts\_WebPart\_AllowEdit\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/VB/displaymodemenuvb.ascx#5)]  
  
 Web ページの宣言型マークアップでの `<aspSample:TextDisplayWebPart>` 、コントロールを参照する要素メモ、 `AllowEdit="false"` 属性です。`true` 、既定値は、属性に設定されている `false` この例の目的です。 使用して、ブラウザーでページを読み込む、 **表示モード** ドロップダウン リスト コントロールが編集モードに表示モードを変更します。 次に、メニューをクリックして、動詞のタイトル バーで、 <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御して、コントロールでの編集を無効にするために edit 動詞が存在しない場合、注意してください。  
  
 [!code-csharp[WebParts\_WebPart\_AllowEdit\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/CS/alloweditCS.aspx#1)]
 [!code-vb[WebParts\_WebPart\_AllowEdit\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowEdit/VB/alloweditVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowHide">
      <MemberSignature Language="C#" Value="public virtual bool AllowHide { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowHide" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または非表示にする、エンドユーザーが使用できるかどうかを示す値を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを非表示にする、それ以外の場合できる <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> プロパティは、ユーザーが変更できるかどうかを決定、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティです。 既定では、プロパティの値と `true`, 、コントロールを編集するときにユーザーが値を変更できます。 既定では、コントロールは隠されていないと、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティの値が `false`です。 ときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが編集中、ユーザーがコントロールを非表示にする\] チェック ボックスを選択した場合 \(設定する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティを `true`\)、ブラウズ モードに戻ると、ページに、コントロールを表示されなくなるされます。  
  
 非表示のコントロール明確に区別されてを閉じ、コントロールから、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティは、Web パーツ コントロール セット内で異なる意味を持ちます。 終了したコントロールは、ページでは、レンダリングされずと、ページ ライフ サイクル イベントに参加していません。 これに対して、表示されない <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールがユーザーに表示されない、Web ページのレンダリングは、ゾーンで、まだ含まれているおよび他の接続を保持できる <xref:System.Web.UI.WebControls.WebParts.WebPart> Web パーツ アプリケーションの一部としてコントロールです。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、既定の設定を変更する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> プロパティのカスタム Web パーツ コントロールをユーザーがカスタム コントロールを非表示にすることはできません。 この例では、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 `TextDisplayWebPart`, の使用例」であるが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要。  
  
 コード例では、Web パーツ ページ上の表示モードを変更できるようにするカスタム ユーザー コントロールを使用します。 ユーザー コントロールがによって参照されている、 `Register` ユーザー コントロールをホストする Web ページの上部にあるディレクティブです。 このユーザー コントロールを作成し、表示モードを使用する方法の詳細については、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPart\_AllowHide\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/CS/displaymodemenucs.ascx#5)]
 [!code-vb[WebParts\_WebPart\_AllowHide\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/VB/displaymodemenuvb.ascx#5)]  
  
 Web ページの宣言型マークアップにで、 `<aspSample:TextDisplayWebPart>` 、コントロールを参照する要素メモ、 `AllowHide="false"` 属性には、非表示にすることも防止コントロールを編集するユーザーを防止します。 使用して、ブラウザーでページを読み込む、 **表示モード** ドロップダウン リスト コントロールが編集モードに表示モードを変更します。 次に、メニューをクリックして、動詞のタイトル バーで、 <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御し、\[編集\] をクリックします。 編集のユーザー インターフェイス \(UI\) が表示されている場合、参照している編集するための UI、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティが無効になったを設定するために発生する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> プロパティの値を `false`します。  
  
 [!code-csharp[WebParts\_WebPart\_AllowHide\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/CS/allowhidecs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_AllowHide\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowHide/VB/allowhidevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
      </Docs>
    </Member>
    <Member MemberName="AllowMinimize">
      <MemberSignature Language="C#" Value="public virtual bool AllowMinimize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMinimize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはエンドユーザーが最小化できるかどうかを示す値を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 最小化されている以外の場合、コントロールが表示できる <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> プロパティには場合に、設定 `false`, 、エンド ユーザーをにより、コントロールを最小限に抑えることは、コントロールのタイトル バーにも表示されないのは、コントロール、およびユーザー インターフェイス \(UI\) を最小限に抑えることを防止します。 Web パーツの用語では、ときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> にプロパティが設定されている `false`, 、minimize 動詞は、コントロールの動詞メニューに表示されません。  
  
 ユーザーは、コントロールを最小化、ときに、コントロールのタイトル バーとタイトルの一部のみが表示される最小限の領域にコントロールのサイズを縮小します。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、既定の設定を変更する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowMinimize%2A> プロパティのカスタム Web パーツ コントロールをコントロールは、ユーザーが最小限に抑えることはできません。 この例では、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、 `TextDisplayWebPart`, の使用例」であるが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要。  
  
 Web ページの宣言型マークアップに上、 `<aspSample:TextDisplayWebPart>` 、コントロールを参照する要素メモ、 `AllowMinimize="false"` 内で最小化動詞を非表示にする属性、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール動詞メニューのされ、ユーザーがコントロールを最小限に抑えることができなくなります。 ブラウザーでページの読み込みやの動詞メニューをクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 コントロールの宣言型マークアップに無効なために、動詞メニュー上に存在すると通常、最小化の動詞は表示されません。  
  
 [!code-csharp[WebParts\_WebPart\_AllowMinimize\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowMinimize/CS/allowminimizecs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_AllowMinimize\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowMinimize/VB/allowminimizevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowZoneChange">
      <MemberSignature Language="C#" Value="public virtual bool AllowZoneChange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowZoneChange" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが移動できるかどうかを示す値を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 間制御 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンです。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン; 間でコントロールを移動できる場合は、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> プロパティは、 `true`, 、およびレイアウトの変更 \(編集、デザイン モードなど\) を許可する表示モードで Web ページをユーザーが別のコントロールを移動することでページ レイアウトを変更できます <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ページ上の領域です。 プロパティ設定されている場合 `false`, 、コントロールは、ゾーンの間で移動することはできませんが、まだ現在のゾーン内を移動できます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、既定の設定を変更する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> のカスタム Web パーツのプロパティを制御できるため、エンドユーザーは、ゾーンを変更したコントロールを移動することはできません。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, の使用例」であるが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 コード例では、Web パーツ ページ上の表示モードを変更できるようにするカスタム ユーザー コントロールを使用します。 ユーザー コントロールがによって参照されている、 `Register` ユーザー コントロールをホストする Web ページの上部にあるディレクティブです。 このユーザー コントロールを作成し、表示モードを使用する方法の詳細については、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPart\_AllowZoneChange\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/CS/displaymodemenucs.ascx#5)]
 [!code-vb[WebParts\_WebPart\_AllowZoneChange\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/VB/displaymodemenuvb.ascx#5)]  
  
 もう 1 つ上の Web ページの宣言型マークアップに `<aspSample:TextDisplayWebPart>` 要素、メモ、 `AllowZoneChange="false"` 属性です。 実行時にエンドユーザーに最初のコントロールをドラッグできます **WebPartZone2**, 、2 つ目のコントロールと同じことを実行できませんが、します。 ブラウザーと使用にページを読み込み、 **表示モード** ドロップダウン リスト コントロールをデザイン モードに表示モードを変更します。 ドラッグしようとしています、 <xref:System.Web.UI.WebControls.WebParts.WebPart> を別のコントロールのゾーンとの値に基づく動作の違いに注意してください、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowZoneChange%2A> プロパティです。  
  
 [!code-csharp[WebParts\_WebPart\_AllowZoneChange\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/CS/allowzonechangecs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_AllowZoneChange\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_AllowZoneChange/VB/allowzonechangevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFilter">
      <MemberSignature Language="C#" Value="public virtual string AuthorizationFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthorizationFilter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を決定する任意の文字列かどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ページに追加するコントロールを承認します。</summary>
        <value>Web ページに追加するコントロールを許可する文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ コントロール セットに、既定の動作を実装しない、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> プロパティです。 カスタムに任意の文字列値を割り当てることができるため、ただし、このプロパティが用意されて <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール; でチェックするこのプロパティは、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 中の制御、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> コントロールをページに追加できるかどうかを決定するイベントです。  
  
 場合によって、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> 場合にそのユーザーが特定のロール内と、プロパティは、ASP.NET ロール マネージャー機能で使用される場合の文字列値、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> プロパティは、開発者によって設定される特定の条件を満たしているし、コントロールを追加することができます。 これにより、開発者の役割とその他の承認条件を指定して、組み合わせに基づいて、ページのカスタム ビューを作成することができます。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> プロパティです。 カスタム メソッドのハンドラーを設定する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> 、イベント ハンドラー用のカスタムのフィルタ リング コードを提供できるように、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> メソッドです。 この例は、フィルター処理のシナリオとの認証を提供するページの開発者の一般的な方法になります <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールをページに追加されます。  
  
 Web ページ コードのことに注意して、 `<asp:webpartmanager>` 要素には、 `OnAuthorizeWebPart` に割り当てられているイベント ハンドラーの名前を持つ属性です。 このメソッドは、ページ上のコントロールがあるかどうかをチェック、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> プロパティ値に設定 `admin`, 場合は、取得と `true`, 、つまりが承認され、ページに追加することです。  
  
> [!NOTE]
>  コントロールをメモに割り当てられている任意の値がない、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> がフィルター処理の一部であると判断するため、プロパティは同様に、追加します。 フィルター処理シナリオで一般的なアプローチになります。 一部のコントロールはフィルター選択すると、他のユーザーはありません、ため、すべてのユーザーに利用できるように見なされるためです。  
  
 [!code-csharp[WebParts\_WebPartManager\_AuthorizeWebPart\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/CS/AuthorizeWebPartCS.aspx#1)]
 [!code-vb[WebParts\_WebPartManager\_AuthorizeWebPart\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartManager_AuthorizeWebPart/VB/AuthorizeWebPartVB.aspx#1)]  
  
 ロールのユーザーの設定は、このトピックの範囲外ですが、ために、このコード例は、フィルター処理でのユーザー ロールを調べません。 ただし、ユーザー ロールに基づいてコントロールのフィルター処理シナリオは、このフィルター処理機能の最も一般的な用途の 1 つをする可能性があります。 サイトの役割を持つコントロールをフィルター処理するには、このメソッドでユーザーのロールを確認する場合は、メソッドは次のコード ブロックではなくロールを使用しない前のコード例の単純なアプローチ\) ようになります。  
  
```  
protected void mgr1_AuthorizeWebPart(object sender,   
  WebPartAuthorizationEventArgs e)  
{  
  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  
  {  
    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  
      e.IsAuthorized = true;  
    else  
      e.IsAuthorized = false;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>To use this property, you must create a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control, and override either its <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)" /> method or its <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)" /> method to handle the check for the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter" /> property.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart" />
      </Docs>
    </Member>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または URL をコントロールのカタログの Web パーツ コントロールを表すイメージに設定します。</summary>
        <value>カタログ内のコントロールを表すために使用されるイメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例を設定する方法を示しています、 <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、イメージがコントロールのカタログ内のコントロールに表示されるようにします。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, 例」のセクションで作成された、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 コード例では、Web パーツ ページ上の表示モードを変更できるようにするカスタム ユーザー コントロールを使用します。 ユーザー コントロールがによって参照されている、 `Register` ユーザー コントロールをホストする Web ページの上部にあるディレクティブです。 このユーザー コントロールを作成し、表示モードを使用する方法の詳細については、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPart\_CatalogIconImageUrl\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/CS/displaymodemenucs.ascx#5)]
 [!code-vb[WebParts\_WebPart\_CatalogIconImageUrl\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/VB/displaymodemenuvb.ascx#5)]  
  
 Web ページの宣言型マークアップ内に注意してください、 `<asp:CatalogZone>` 要素。 などの複数の要素をそれ自身の入れ子、 `<aspSample:TextDisplayWebPart>` 要素。 この要素のセットにより、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> カタログにコントロールを表示します。 マークアップに、 `<aspSample:TextDisplayWebPart>` 要素ことに注意して、 `CatalogIconImageUrl` が割り当てられているイメージ ファイルへの URL を表す文字列。 ブラウザーと使用にページを読み込み、 **表示モード** カタログ モード、表示モードを変更するドロップダウン リスト コントロールです。 ユーザー設定を追加するカタログのユーザー インターフェイス \(UI\) を使用 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールをページです。  
  
 [!code-csharp[WebParts\_WebPart\_CatalogIconImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/CS/catalogiconimageurlcs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_CatalogIconImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_CatalogIconImageURL/VB/catalogiconimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内部の検証システムでは、URL では、スクリプト攻撃される場合がありますと判断しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChromeState">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeState ChromeState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または部分から成るコントロールが最小化されているか、通常の状態であるかどうかを設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パーツ コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeState%2A> プロパティの値は、標準または最小化します。<xref:System.Web.UI.WebControls.WebParts.WebPart> エンドユーザーがカスタマイズできるように、クラスが基本プロパティをオーバーライドします。  
  
 このプロパティを使用するためのコード例では、情報を参照してください。 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値は、のいずれかではありません、 <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" />
      </Docs>
    </Member>
    <Member MemberName="ChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType ChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web パーツ コントロールを囲む罫線の種類を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 パーツ コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> プロパティは、囲まれてコントロールの境界線の種類を決定します。 オプションには、どちらも、タイトル、境界線のみ、タイトルと枠線を表示または既定のオプションの値を使用して単に、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> プロパティです。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> エンドユーザーがカスタマイズできるように、クラスが基本プロパティをオーバーライドします。  
  
 このプロパティを使用するためのコード例では、情報を参照してください。 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値が、<see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 値ではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />
      </Docs>
    </Member>
    <Member MemberName="ConnectErrorMessage">
      <MemberSignature Language="C#" Value="public string ConnectErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続プロセス中にエラーが発生した場合、ユーザーに表示するエラー メッセージを取得します。</summary>
        <value>エラー メッセージを含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内容、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ConnectErrorMessage%2A> プロパティは、Web パーツ コントロール セットによって内部的に提供されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ユーザー設定のコレクションを返す <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> の編集に使用できるコントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールで編集モードがします。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> を含むカスタム <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールに関連付けられている、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 開発者は、このメソッドを使用してカスタムのインスタンスを作成する <xref:System.Web.UI.WebControls.WebParts.EditorPart> を関連付ける選択コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 メソッドは、ユーザーが編集動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
> [!NOTE]
>  新しいインスタンスを <xref:System.Web.UI.WebControls.WebParts.EditorPart> このメソッドで作成したコントロールに追加する前に、ID プロパティに割り当てられた値が必要、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> コレクションです。  
  
 使用するコード例については、 <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> メソッドを参照してください、 <xref:System.Web.UI.WebControls.WebParts.EditorPart> クラスの概要です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebEditable" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public override string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはパーツ コントロールのツールヒントやカタログで使用する、パーツ コントロールの動作をまとめた簡単な語句を設定します。</summary>
        <value>文字列には、パーツ コントロールの機能が簡潔にまとめたものです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> プロパティは、通常、パーツ コントロールのタイトル バーのツールヒントとして、一部のコントロールのリストを提供するカタログで使用されている文字列。 内容、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> パーツ コントロールのタイトル バーで、タイトル テキストの上にマウス ポインターを移動したときに、プロパティが、ツールヒントに表示されます。 値からツールヒント テキストを作成、 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 後にプロパティには、後に、ハイフン、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> プロパティの値。  
  
 このプロパティを使用するためのコード例では、情報を参照してください。 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティです。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.ContentDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ContentDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ContentDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンテンツのフロー コントロール内で水平方向の方向を設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ContentDirection" /> は水平方向のコンテンツをフローすることを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> エンド ユーザーは、プロパティをパーソナル化できるように、クラスが基本のプロパティ値を上書きします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.Direction" />
      </Docs>
    </Member>
    <Member MemberName="DisplayTitle">
      <MemberSignature Language="C#" Value="public string DisplayTitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>タイトル バーに実際に表示されるすべてのタイトル テキストを含む文字列を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのインスタンス。</summary>
        <value>完了したらを表す文字列には、コントロールのタイトルが表示されます。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> プロパティの現在値を返します、 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティや、コントロールにタイトル、計算値がありません。 計算された値はタイトルのないコントロールは、ローカライズ可能なリソースの文字列と数値が、ゾーン内のコントロールのインデックスに基づく \(ゾーン内で複数のコントロールがある\) 場合。  
  
 カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> 場所を制御、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 、字幕として使用する文字列値を返すプロパティがオーバーライドされて、 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> プロパティは、完全なタイトルを生成する字幕が連結されています。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> プロパティの値も機能すると表示されるツールヒントの一部としてユーザー位置マウス ポインター コントロールのタイトル バーの上です。 完全ツールヒントから成る、 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> 値の後に、ハイフンの後に、コントロールの値 <xref:System.Web.UI.WebControls.WebParts.WebPart.Description%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="ExportMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartExportMode ExportMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartExportMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうかすべてでは、一部またはすべての <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのプロパティをエクスポートすることができます。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.WebParts.WebPartExportMode.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールをエクスポートすることはできませんし、その <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>します。 コントロールのすべてのプロパティをエクスポートできるように、設定、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> 値を <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>します。 機密データを含むプロパティのエクスポートされないようにしながら特定のプロパティのみをエクスポートする、プロパティ値を設定する <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>です。  
  
 プロパティ値の説明をエクスポートする、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、プロパティ必要がありますが付くことも、 `Personalizable` のソース コードに、このプロパティのメタデータの属性です。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>」を参照してください。  
  
> [!NOTE]
>  アプリケーションの Web.config ファイルでの Web パーツ コントロールを含む Web アプリケーションのエクスポート機能を有効にするには属性を追加する必要があります、 `<webParts>` 内の要素、 `<system.web>` \] セクションで、次のマークアップに示すようにします。  
>   
>  `<webParts  enableExport="true">`  
>   
>  `</webParts>`  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> プロパティです。 エクスポートのコード例を実行するには、必要がありますも更新すること、Web.config ファイルの属性を追加してメモ `enableExport="true"` に、 `<webParts>` 要素の「解説」セクションに示されています。  
  
 この例の最初の部分には、名前付きコントロールのコードが含まれています。 `TextDisplayWebPart`します。 このコントロールは、例」のセクションにあるカスタム コントロールと同じ、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要については、追加する点を除いて、 `Personalizable` 属性を `TextDisplayWebPart.ContentText` プロパティ、プロパティをエクスポートできるようにします。 属性の宣言の値が含まれることに注意してください `true` の `isSensitive` パラメーターであり、プロパティがデリケートなデータをエクスポート目的でマークされています。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、ソース コードをアセンブリにコンパイルし、Web アプリケーションの Bin サブフォルダーに配置することでアセンブリを参照すると想定しています、 `Register` ディレクティブは、Web ページでします。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPart\_ExportMode\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts\_WebPart\_ExportMode\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/VB/textdisplaywebpart.vb#2)]  
  
 例の 2 番目の部分を参照する方法を示しています、 `TextDisplayWebPart` ASP.NET Web ページ内のコントロールです。 宣言型マークアップで、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> にプロパティの値が設定されている <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.All>, 、機密性の高い値を含むものプロパティをエクスポートすることを意味します。  
  
 [!code-csharp[WebParts\_WebPart\_ExportMode\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/CS/exportmodecs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_ExportMode\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_ExportMode/VB/exportmodevb.aspx#1)]  
  
 動詞メニューを開き、ブラウザーで Web ページを読み込み、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 、管理やエクスポート動詞をクリックして、指示に従って、コントロールの状態とプロパティのデータを含む記述ファイルをエクスポートします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値は、のいずれかではありません、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartExportMode" /> 値。</exception>
        <exception cref="T:System.InvalidOperationException">コントロールが既に読み込まれていて、コントロールのパーソナル化スコープに設定されている、 <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> スコープ。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PersonalizableAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="HasSharedData">
      <MemberSignature Language="C#" Value="public bool HasSharedData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSharedData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HasSharedData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールに関連付けられている共有の個人用設定データがあります。</summary>
        <value>コントロールが個人用設定データを共有するかどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、パーソナル化データで設定されているコントロールの共有スコープは、つまり、すべてのユーザーに表示される個人用設定データを参照します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasUserData">
      <MemberSignature Language="C#" Value="public bool HasUserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasUserData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HasUserData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />コントロールに関連付けられているユーザーの個人用設定データがあります。</summary>
        <value>コントロールにユーザーの個人用設定データがあるかどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、そのユーザーにのみ表示されるコントロールでのユーザーが特定の設定をユーザー固有の\-\-言い換えれば、カスタムのパーソナル化データを参照します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはゾーンの高さを設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Unit" /> オブジェクトの高さを示す、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />です。 既定の種類、 <see cref="T:System.Web.UI.WebControls.Unit" /> \(ピクセル単位\) が示すとおり、 <see cref="P:System.Web.UI.WebControls.Unit.Type" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Internet Explorer のレンダリング モードは、の高さに影響を与える、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールとそれを含んでいるゾーンの高さ。 互換モード \(以前のバージョンのブラウザーとの下位互換性\) または標準モードのいずれか、Internet Explorer が Web ページをレンダリング \(の存在によって決定される、 `DOCTYPE` ページ内の宣言\)。 これらのモードについては、DHTML を参照してください。 [compatMode](http://go.microsoft.com/fwlink/?LinkId=57175) プロパティです。  
  
 Internet Explorer では、標準モードでページをレンダリングするときに特定の状況でその可能性がありますサイズは変更されません、表のセルにセルの HTML マークアップが場合でも `<td height="100%">`します。 その結果、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールと、含まれるゾーンを表示できるように、コントロールは、ゾーンの全体の高さを伸縮しません。  
  
 Internet Explorer が標準モードのときは、コントロールは、次の場合、全体の高さまで拡大はレンダリングされません。  
  
-   ゾーンの <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.Orientation.Vertical> ゾーンの高さを明示的に設定するとします。 コントロールをゾーンの全体の高さを拡大できるように、水平方向のゾーンの高さを指定しません。  
  
-   ゾーンの <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> にプロパティが設定されている <xref:System.Web.UI.WebControls.Orientation.Horizontal> ゾーンまたは格納されているコントロールの高さを明示的に設定しないとします。 ゾーンの全体の高さを入力するコントロールを有効にするには、垂直方向にゾーンのゾーンまたはコントロールの高さを設定します。  
  
   
  
## 例  
 高さに影響するレンダリングの問題を次のコード例に示します <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールで、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>です。  この問題を示すためには、Internet Explorer で、ページを実行する必要があります。  
  
 ゾーンの向きを水平方向に設定されていることと、ゾーンとその中のコントロールの高さが明示的に設定されていないことに注意してください。  結果は、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, 短くすればするほど、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールがレンダリング時に、ゾーンの高さを伸縮しません。  ただし、削除した場合、 `DOCTYPE` 再度の宣言、ページと実行、ページから、問題は発生しません、ので、ここで、ブラウザーには標準モードでページ表示されません。  
  
 [!code-csharp[WebParts\_WebPart\_Height\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Height/CS/Defaultcs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_Height\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Height/VB/Defaultvb.aspx#1)]  
  
 \(「解説」セクションで説明\) の回避策の動作を確認するには、追加してみて、 `height` 属性を `<asp:webpartzone>` 保管中に、要素、 `DOCTYPE` \] ページで宣言します。  次のコードを使用すると、タグに属性を追加します。  
  
 `Height="200px"`  
  
 ページで、および両方今すぐ実行 <xref:System.Web.UI.WebControls.WebParts.WebPart> 明示的に宣言されたゾーンの高さに合わせて拡大を制御します。  
  
 発生したその他のシナリオでの表示の高さに関連した問題を確認するには、このコード例を試すことも時に、ゾーンの <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation%2A> に設定されている <xref:System.Web.UI.WebControls.Orientation.Vertical>します。  既存の削除 `LayoutOrientation` 属性とその値から、 `<asp:webpartzone>` 要素で、既定の垂直方向に戻すには、ゾーンの向きが発生します。  高さの属性を設定、 `<asp:webpartzone>` すると、200 ピクセルに要素が前と同じ方法と、ページを実行します。  ゾーンの高さが大きすぎるため、およびコントロールのゾーンの高さに比例してサイズがないです。  今すぐ height 属性を削除し、ページを再度実行します。  ゾーンの高さに相対的コントロールが表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.LayoutOrientation" />
      </Docs>
    </Member>
    <Member MemberName="HelpMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.WebPartHelpMode HelpMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HelpMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartHelpMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定のヘルプの内容を表示するためのユーザー インターフェイス \(UI\) の種類、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> プロパティをブラウザーでコントロールのヘルプ コンテンツを表示する方法を決定します。 次の表に、ブラウザーでのさまざまなヘルプ モードの影響とヘルプ コンテンツを <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが表示されます。  
  
|ヘルプ モード|ブラウザーの動作|  
|-------------|--------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modal>|ブラウザーにこの機能がある場合は、別のブラウザー ウィンドウを開きます。 ユーザーは、Web パーツ ページに戻る前に、ウィンドウを閉じる必要があります。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Modeless>|ブラウザーにこの機能がある場合は、別のブラウザー ウィンドウを開きます。 ユーザーは、Web ページに戻る前に、ウィンドウを閉じるにはありません。|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>|ブラウザーのウィンドウで、Web パーツ ページを置換します。|  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> プロパティを同じブラウザー ウィンドウでコントロールのヘルプを表示します。 この例の最初の部分には、カスタム コントロールの使用が前提としています `TextDisplayWebPart`, の使用例」であるが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 このコード例は、架空のヘルプ コンテンツを格納している HTML ページも含まれています。、 `TextDisplayWebPart` コントロールです。 この例を実行するには、Textwebparthelp.htm という名前のファイルに次のコードを保存し、.aspx ページと、サイトの同じディレクトリに配置する必要があります。  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 この例の最後の部分は、Web ページを参照する方法を示す、 `TextDisplayWebPart` コントロールです。 宣言型マークアップで、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> にプロパティの値が設定されている <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>, 、コードはまたの値を設定し、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> プロパティ ヘルプ コンテンツを含む HTML ファイルの名前をします。 ブラウザーにページの読み込みや動詞メニューの \[ヘルプの動詞をクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPart\_HelpMode\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/CS/helpmodecs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_HelpMode\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/VB/helpmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値は、のいずれかではありません、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartHelpMode" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      </Docs>
    </Member>
    <Member MemberName="HelpUrl">
      <MemberSignature Language="C#" Value="public virtual string HelpUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の URL のヘルプ ファイル、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>ヘルプ ファイルへの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 動詞メニューの動詞メニュー ヘルプ動詞を使用して有効にする、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロールの値を指定する必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> プロパティです。 ブラウザーでヘルプ コンテンツを表示する方法は、の値によって決まりますが、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> プロパティです。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> プロパティです。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, の使用例」であるが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 このコード例は、架空のヘルプ コンテンツを格納している HTML ページも含まれています。、 `TextDisplayWebPart` コントロールです。 この例を実行するには、Textwebparthelp.htm という名前のファイルに次のコードを保存し、.aspx ページと、サイトの同じディレクトリに配置する必要があります。  
  
```  
<html>  
<head runat="server">  
    <title>Text Content WebPart Help</title>  
</head>  
<body>  
  <div>  
  <h1>Text Content WebPart Help</h1>  
  To make the WebPart control work...  
  </div>  
</body>  
</html>  
```  
  
 この例の最後の部分は、Web ページを参照する方法を示す、 `TextDisplayWebPart` コントロールです。 宣言型マークアップで、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpMode%2A> にプロパティの値が設定されている <xref:System.Web.UI.WebControls.WebParts.WebPartHelpMode.Navigate>, 、コードはまたの値を設定し、 <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> プロパティ ヘルプ コンテンツを含む HTML ファイルの名前をします。 ブラウザーにページの読み込みや動詞メニューの \[ヘルプの動詞をクリックして、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPart\_HelpMode\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/CS/helpmodecs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_HelpMode\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_HelpMode/VB/helpmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内部の検証システムでは、URL では、スクリプト攻撃される場合がありますと判断しました。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.HelpMode" />
      </Docs>
    </Member>
    <Member MemberName="Hidden">
      <MemberSignature Language="C#" Value="public virtual bool Hidden { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hidden" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Hidden" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Web ページにコントロールが表示されます。</summary>
        <value>
          <see langword="false" /> 場合、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールは、Web ページに表示されているそれ以外の場合、 <see langword="true" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.UI.WebControls.WebParts.WebPart> そのゾーンの非表示のままであるコントロールは実際には、ページに表示しに参加しているページ ライフ サイクルのフェーズなど、 `PreRender` フェーズでは、ブラウザーで表示されていない場合でもです。 異なる <xref:System.Web.UI.WebControls.WebParts.WebPart> 終了したコントロール レンダリングされずページでは、非表示のコントロールは、レンダリングと Web パーツ アプリケーションでアクティブなユーザーに表示されませんがあるため、閉じられているコントロール。 Web パーツ コントロール セットの表示\/非表示、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの値に、カスケード スタイル シート \(CSS\) のスタイルを設定して `display:none`します。  
  
 場合でも、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> にコントロールのプロパティが設定されている `true`, 、ページ上の現在の表示モードでは非表示コントロールを表示する場合に、コントロールが引き続き表示されます。 たとえば、編集モードで表示するには、非表示のコントロールは、ユーザーが編集できるようにします。 非表示のコントロールは、特定の表示モードで表示する、コントロールのタイトルは、コントロールが非表示の状態であることを示す文字列を表示します。  
  
 ときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPart> にコントロールが設定されている `false`, 、既定値は、ページにコントロールを表示します。 されている場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowHide%2A> にプロパティが設定されている `false`, 、エンドユーザーは編集するのには許可されていません、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティの値。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Hidden%2A> プロパティのカスタム Web パーツ コントロールします。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, の使用例」であるが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 宣言型マークアップに、Web ページでは、 `<aspSample:TextDisplayWebPart>` 要素、 `Hidden` に属性値が設定されている `true`します。`TextDisplayWebPart` コントロールは、ページがブラウザーに読み込まれている場合は表示されません。 ただし、コントロールが、ページとそのゾーンでまだ存在していると、他の接続に参加でした、 <xref:System.Web.UI.WebControls.WebParts.WebPart> それらの接続を作成した場合を制御します。  
  
 [!code-csharp[WebParts\_WebPart\_Hidden\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Hidden/CS/hiddencs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_Hidden\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Hidden/VB/hiddenvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowHide" />
      </Docs>
    </Member>
    <Member MemberName="ImportErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ImportErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定エラーが発生した場合に使用されるエラー メッセージと、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールをインポートします。</summary>
        <value>エラー メッセージを含む文字列。 既定値は、Web パーツ コントロール セットによって提供される標準的なエラー メッセージです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage%2A> プロパティでは、ユーザーが Web パーツ コントロールのカタログにパーツ コントロール記述ファイルをインポートしようとするときにエラーが発生した場合に表示されるカスタム エラー メッセージを設定することができます。 プロパティを宣言的に設定することができます、 <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御する追加の `ImportErrorMessage` コントロールとエラー メッセージ文字列をそこに割り当てるの開始タグの属性です。 また、プロパティ値をプログラムでに設定することができます。  
  
 詳しいコード例については、両方のエクスポートとインポートを示しています。Web パーツの説明ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> の使用を含むコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ImportErrorMessage%2A> プロパティを参照してください、 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.ExportMode" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールが現在の Web パーツ ページで閉じられています。</summary>
        <value>コントロールが閉じられたかどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Web.UI.WebControls.WebParts.WebPart> が終了したコントロールがページにレンダリングされず、ページのイベントに参加しません。 ただし、Web パーツ アプリケーションによりページ カタログに格納されますが、追加できますページにユーザーが適切なユーザー インターフェイス \(UI\) を指定する場合。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)" />
      </Docs>
    </Member>
    <Member MemberName="IsShared">
      <MemberSignature Language="C#" Value="public bool IsShared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShared" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを共有すると、Web パーツ ページのすべてのユーザーに表示されることを意味します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールが Web ページで、ユーザーの表示状態を共有それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 共有 Web パーツ コントロールでは、Web ページのすべてのユーザーに表示されます。 共有コントロールの反対は、ユーザー固有であり、そのコントロールをページに追加したユーザーのみに表示するユーザーごとのコントロールです。  
  
 ユーザーが共有のパーソナル化スコープでページを表示するときに、ダイナミック コントロールを追加する場合は、コントロールは共有されます。 ユーザーがユーザーのパーソナル化スコープの中に追加すると、コントロールの場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> そのコントロールのプロパティの値になります `false`します。  
  
 詳細については共有し、ユーザーごとのコントロールを参照してください [Web Parts Personalization](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320)します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> プロパティのカスタム Web パーツ コントロールします。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, 例」のセクションで作成された、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 クリックするとブラウザーの Web ページを読み込むと、 **共有チェック** \] ボタン、コードのチェック、 <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared%2A> プロパティを `TextDisplayWebPart` コントロール、およびプロパティの値は、 `true`, コントロールがページの宣言型マークアップでのスタティック コントロールとして参照されているため、します。  
  
 [!code-csharp[WebParts\_WebPart\_IsShared\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_IsShared/CS/issharedcs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_IsShared\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_IsShared/VB/issharedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" />
      </Docs>
    </Member>
    <Member MemberName="IsStandalone">
      <MemberSignature Language="C#" Value="public bool IsStandalone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStandalone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsStandalone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール内で含まれていないことを意味しているスタンドアロンは、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンです。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> にコントロールが含まれていない、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンです。 それ以外の場合、 <see langword="false" />です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsShared" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.IsStatic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールは、静的なコントロールは、コントロールが Web パーツ ページのマークアップで宣言されているし、プログラムを使用して、ページに追加されないことを意味します。</summary>
        <value>コントロールが静的かどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 静的な <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、Web パーツ ページのマークアップで宣言されているいずれかです。 これに対して、動的な <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御するいずれかのプログラムで追加するか、ユーザーがコントロールを選択する、コントロールのカタログから実行時にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnClosing(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnClosing(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>派生したカスタム処理を提供するクラスを有効にする <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> Web パーツ ページにコントロールを閉じる。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のメソッド、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基本クラスに実装が含まれていません。 派生 <xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロールを閉じる場合は、カスタム処理を提供するために必要な場合、コントロールは、メソッドをオーバーライドできます。<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールによって自動的に起動、 <xref:System.Web.UI.WebControls.WebParts.WebPart.OnClosing%2A> メソッドの場合は派生クラスで実装を提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.AllowClose" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.IsClosed" />
      </Docs>
    </Member>
    <Member MemberName="OnConnectModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnConnectModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnConnectModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>派生したカスタム処理を提供するクラスを有効にする <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールを開始またはその他のコントロールに接続するプロセスを終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のメソッド、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基本クラスに実装が含まれていません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>A derived control needs to override the <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnConnectModeChanged(System.EventArgs)" /> method. Developers can raise custom events or carry out other actions. The method is called by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control when the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)" /> and <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting" /> methods are called to establish connections between controls.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDeleting(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>派生したカスタム処理を提供するクラスを有効にする <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールは Web パーツ ページから完全に削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のメソッド、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基本クラスに実装が含まれていません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>A derived control needs to override the <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnDeleting(System.EventArgs)" /> method. Developers can raise custom events or carry out other actions. The method is called when the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)" /> method is called.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnEditModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEditModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>派生したカスタム処理を提供するクラスを有効にする <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールが入力または編集モードを終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 内のメソッド、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 基本クラスに実装が含まれていません。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>A derived control needs to override the <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.OnEditModeChanged(System.EventArgs)" /> method, and use the overridden method to raise a custom event. Developers can raise custom events or carry out other actions. The method is called when the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)" /> and <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing" /> methods are called during editing.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="protected void SetPersonalizationDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetPersonalizationDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の個人用設定データが変更されたことを示すフラグを設定 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのインスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> メソッドは、コントロールの状態データが変更されたことで \(個人用\) を示すフラグを設定、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、および、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールしたがって長期的な記憶域に個人用設定データを保持する必要があります。  
  
 通常、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> に個人的な変更が引き続き発生する <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを呼び出す開発者がなくても、 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> メソッドです。 しかし、2 つのケースを開発者がこのメソッドを呼び出す必要はあります。 最初のケースは、HTTP の中にコントロールの状態データが変更されたときに `GET` ページへの要求。 既定では、変更時にコントロールの状態データ、 `GET` \(セキュリティのため\) 要求は保持されません。<xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> メソッドを使用する正当な個人用設定の変更を確定 <xref:System.Web.UI.WebControls.WebParts.WebPart> ､ ホを制御します。  
  
 呼び出す 2 番目の場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> HTTP メソッドが含まれる `POST` ページへの要求。 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールに複雑なパーソナル化可能なプロパティがある \(を格納するプロパティなど、 <xref:System.Collections.ArrayList> オブジェクト\)、中に個人用に設定されたこれらのプロパティにコントロールの状態データと、 `POST` 要求と、開発者が呼び出す必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A> メソッドを変更が保持されていることを確認します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalizationDirty">
      <MemberSignature Language="C#" Value="public static void SetPersonalizationDirty (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetPersonalizationDirty(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty(System.Web.UI.Control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> の個人用設定データが変更されています。</param>
        <summary>内にある指定されたサーバー コントロールの個人用設定データが変更されたことを示すフラグを設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A?displayProperty=fullName> メソッドとして同じ目的には、 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty?displayProperty=fullName> メソッドで、コントロールの状態データが変更されたこと \(個人用\) サーバー コントロールで HTTP 中を示すフラグを設定するのには、 `GET` 要求します。 これらのメソッドの違いは、 <xref:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty%2A?displayProperty=fullName> メソッドから継承しないサーバー コントロールの使用、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスが、内に配置 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Web パーツ アプリケーションに参加するゾーンです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">内のオブジェクト、 <paramref name="control" /> パラメーターは <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">派生したコントロール <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />します。 派生したコントロール <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 、保護を使用する必要があります <see cref="M:System.Web.UI.WebControls.WebParts.WebPart.SetPersonalizationDirty" /> メソッド代わりにします。</exception>
        <exception cref="T:System.InvalidOperationException">コントロールに関連付けられているページがない、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public virtual string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>連結される文字列を取得、 <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" /> プロパティの値をフォームに完全なタイトル、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>コントロールのサブタイトルとして機能する文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> 必要に応じて、文字列を返す標準字幕、カスタム プロパティ <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのタイトルに追加されるコントロール。  
  
 値を指定する場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> カスタム プロパティ <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御するコントロールが自動的に設定の値に追加する Web パーツ、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> 、コントロールの完全なタイトルを作成するプロパティです。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 サブタイトルを指定する次のコード例には、カスタムのインスタンスを <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 この例の最初の部分がという名前のカスタム コントロールのコードを含む `TextDisplayWebPart`します。 このコントロールは、例」のセクションにあるカスタム コントロールと同じ、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要についてもオーバーライドする点を除いて、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> の架空の会社名を含む標準のサブタイトルを提供するプロパティ、カスタム コントロールのインスタンス。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、ソース コードをアセンブリにコンパイルし、Web アプリケーションの Bin サブフォルダーに配置することでアセンブリを参照すると想定しています、 `Register` ディレクティブは、Web ページでします。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPart\_Subtitle\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts\_WebPart\_Subtitle\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/VB/textdisplaywebpart.vb#2)]  
  
 例の 2 つ目は、Web ページを参照する方法を示す、 `TextDisplayWebPart` ASP.NET Web ページ内のコントロールです。 コントロールのタイトル バーのテキストにハイフンの区切り記号とからカスタムの字幕の値の宣言型マークアップ、コントロールに割り当てられているタイトルが含まれています、ブラウザーでページを読み込んだ後、 `TextDisplayWebPart` コントロールです。  
  
 [!code-csharp[WebParts\_WebPart\_Subtitle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/CS/subtitlecs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_Subtitle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Subtitle/VB/subtitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>To supply a subtitle for instances of a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control, you must override the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" /> property.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または一部のコントロールのタイトルを設定します。</summary>
        <value>一部のコントロールのタイトルを表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 開発者が値を割り当てた場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> し、プロパティ、その値を確認 \(または少なくとも一部の\) コントロールのタイトル バー内のテキスト。 タイトル バーの上にマウス ポインターを移動したときに、このタイトルのテキストもツールヒントのテキストの一部として表示されます、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールまたはその他のサーバー コントロールに表示される、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーンです。  
  
 コントロールのタイトル バーに表示される完全なテキストがによっても影響を受ける、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A> プロパティです。 そのプロパティに割り当てられた値がある場合は、タイトルに値が連結されます。 値が割り当てられていない場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> プロパティには、計算のタイトルが表示されます。 任意の時点では、開発者に表示される実際、合計のテキストを取得できます、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのタイトル バーの値を取得することによって、 <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> プロパティです。  
  
 タイトルのテキストのスタイルはによって決まります、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A> パーツ コントロールを含むゾーンのプロパティです。  
  
 基本のプロパティの使用方法を示すコード例については、 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public virtual string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコントロールのタイトル バーに Web パーツ コントロールを表すために使用されるイメージの URL を設定します。</summary>
        <value>タイトル バーにコントロールを表すために使用されるイメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、設定、 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl%2A> プロパティのカスタム Web パーツ コントロール、コントロールのカタログ内の画像のコントロールが表示されるようにします。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, 例」のセクションで作成された、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 Web ページの宣言型マークアップ内に注意してください、 `<aspSample:TextDisplayWebPart>` 要素。 その `TitleIconImageUrl` が割り当てられているイメージ ファイルへの URL を表す文字列。 ブラウザーでページの読み込みやのタイトル バーにイメージが表示されるイメージの正当な URL を指定した場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
 [!code-csharp[WebParts\_WebPart\_TitleIconImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_TitleIconImageUrl/CS/titleiconimageurlcs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_TitleIconImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_TitleIconImageUrl/VB/titleiconimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内部の検証システムでは、URL では、スクリプト攻撃される場合がありますと判断しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public virtual string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable(System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または補足情報への URL を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>についての詳細情報への URL を表す文字列、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 URL を割り当てると、 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> プロパティ、コントロールのタイトルは、コントロールについての補足情報へのリンクになります。 ページが設計、編集、またはカタログ モードなど、コントロールをドラッグできる表示モードの場合、URL はレンダリングされません。  
  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 このプロパティのパーソナル化スコープに設定されている <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> あり、承認されたユーザーのみが変更することができます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> および [Web Parts Personalization Overview](http://msdn.microsoft.com/ja-jp/7dc34f74-52aa-4082-b98d-2bcf9e07e320) を参照してください。  
  
   
  
## 例  
 次のコード例では、設定、 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> プロパティのカスタム Web パーツ コントロールします。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, の使用例」であるが、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 注意して、 `<aspSample:TextDisplayWebPart>` 要素を含む、 `TitleUrl` 架空の URL を持つ属性です。 ブラウザーのタイトルでページを読み込むかどうか、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが指すリソースへのリンクではこれで、 <xref:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl%2A> プロパティです。  
  
 [!code-csharp[WebParts\_WebPart\_TitleUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_TitleUrl/CS/titleurlcs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_TitleUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_TitleUrl/VB/titleurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">内部の検証システムでは、URL では、スクリプト攻撃される場合がありますと判断しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPart.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールでそのビュー ステートの変化を追跡して、その変化をオブジェクトの <see cref="P:System.Web.UI.Control.ViewState" /> プロパティに保存できるようにします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerbCollection Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerbCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>関連付けられているカスタム動詞のコレクションを取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerbCollection" /> を含むカスタム <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> オブジェクトに関連付けられている、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。 既定値は <see cref="F:System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 派生して動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> クラス、およびユーザーで実行できるインターフェイス \(UI\) の動作をユーザーに付与、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 通常の動詞は、ボタン、リンク、またはメニュー項目として UI に表示されます。 既定では、一般的な Web パーツの動詞はそれぞれでドロップダウンの動詞メニューに表示されます。 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのタイトル バー。 標準の動詞を開く、閉じる、編集、およびコントロール、およびその他の動詞は、コントロールの定義をエクスポートするか、ヘルプ ファイルの読み込みを最小限に抑えることがあります。 これらの動詞は含まれていない、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 、コレクションを作成して、派生クラスでは、このプロパティをオーバーライドすることで返すカスタム動詞のみがコレクションに含まれているためです。  
  
 カスタム動詞を作成し、それらを追加、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> 、コレクションにアクセスできますからプログラムを使用して、動詞、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。  
  
   
  
## 例  
 次のコード例は、アクセスする方法を説明、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> プロパティのカスタム Web パーツ コントロールします。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, 例」のセクションで作成された、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 あるコード例を実行するには、必要があります設定を追加する Web パーツの記述ファイルをエクスポートできるようにするために Web.config ファイルに注意してください。 このコード例については、Web ページと同じディレクトリに Web.config ファイルがあることを確認します。 内で、 `<system.web>` セクションであることを確認、 `<webParts>` を持つ要素、 `enableExport` 属性に設定 `true`, マークアップを次のようにします。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 ブラウザーで Web ページを読み込みます。 クリックすると、 **動詞カウントの表示** にアクセスする\] ボタン、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A> カスタム動詞の数を取得するプロパティ、 `TextDisplayWebPart` 制御、およびラベルの数が表示されます。 カスタム動詞が追加されていないコントロールにここでは、あるため、カウントは 0 です。  
  
 [!code-csharp[WebParts\_WebPart\_Verbs\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Verbs/CS/verbscs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_Verbs\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Verbs/VB/verbsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Derived classes can override the <see cref="P:System.Web.UI.WebControls.WebParts.WebPart.Verbs" /> property to allow users to add custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> objects to the verb collection for a <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> control.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="WebBrowsableObject">
      <MemberSignature Language="C#" Value="public virtual object WebBrowsableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object WebBrowsableObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> カスタム編集して有効にするコントロール <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Object" /> の子コントロールで構成される、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カスタムを作成する場合 <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御して、関連するカスタムの作成も <xref:System.Web.UI.WebControls.WebParts.EditorPart> にあるコントロールを編集するユーザーを有効にするコントロールの実行時、実装する必要があります、 <xref:System.Web.UI.WebControls.WebParts.IWebEditable> を含むインターフェイス、 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> プロパティです。  
  
 ときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが編集モードになる、 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebBrowsableObject%2A> プロパティがから呼び出されます、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> への参照を取得するコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPart> を制御し、ユーザー設定を有効にする <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールを編集します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> に関連付けられたコントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールのインスタンス。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> と関連付けられている、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ ページが常に 1 つのインスタンスを持つ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールが追跡し、管理ページでは、基本から派生したすべてのゾーンを含むその他のすべての Web パーツ コントロール <xref:System.Web.UI.WebControls.WebParts.WebZone> クラス、およびベースから派生したすべてのパーツ コントロール <xref:System.Web.UI.WebControls.WebParts.Part> クラスです。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> プロパティが存在するようにすべて <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが関連付けられる、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロール、さらに、すべてのコレクションを維持、 <xref:System.Web.UI.WebControls.WebParts.WebPart> でページのコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> コレクションです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.WebControls.WebParts.Personalizable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの幅を取得または設定します。</summary>
        <value>コントロールの幅を表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は、<see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
      </Docs>
    </Member>
    <Member MemberName="Zone">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartZoneBase Zone" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.Zone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartZoneBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> 現在含まれているゾーン、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> いる現在、Web ページ上の Web パーツ コントロールが含まれています。 Web パーツ コントロールが現在のページで閉じられて 場合、戻り値は <see langword="null" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ コントロール セットのアーキテクチャで、コントロールが Web パーツ機能の内側で動作する場合にのみ <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。 標準的な <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Web ページで使用するゾーンは、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。 エンドユーザーは、Web ページ上の別のゾーンの間での Web パーツ コントロールを移動することができます、コントロールの特定のインスタンスが、一度に 1 つだけゾーンに属することができます。 Web パーツ コントロール、および関連する <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールを使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> ゾーンがコントロールの現在の追跡するプロパティが存在し、Web パーツ コントロールの適用に含まれているすべてのゾーンのレイアウトとスタイルの一般的な特性です。  
  
   
  
## 例  
 次のコード例は、アクセスする方法を説明、 <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A> と <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> プロパティのカスタム Web パーツを制御します。 この例では、カスタム コントロールの使用 `TextDisplayWebPart`, 例」のセクションで作成された、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの概要です。  
  
 このコード例には、Web パーツ ページ上の表示モードを変更できるようにするカスタム ユーザー コントロールが含まれています。 ユーザー コントロールがによって参照されている、 `Register` ユーザー コントロールをホストする Web ページの上部にあるディレクティブです。 このユーザー コントロールを作成し、表示モードを使用する方法の詳細については、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_WebPart\_Zone\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/displaymodemenucs.ascx#5)]
 [!code-vb[WebParts\_WebPart\_Zone\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/displaymodemenuvb.ascx#5)]  
  
 コード例の 2 番目の部分は、Web ページです。 2 つ `<asp:webpartzone>` Web パーツ ゾーンを表す各ページの要素。 最初のゾーンを含む、標準的な <xref:System.Web.UI.WebControls.Calendar> コントロール、機能する、 <xref:System.Web.UI.WebControls.WebParts.WebPart> ゾーン内にあるために、実行時に制御します。 2 番目のゾーンを含む、 `TextDisplayWebPart` コントロールです。 ユーザーがクリックしたとき、 **ゾーン情報** \] ボタン、 `Label1` コントロールの値を表示する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 、コントロールのプロパティと <xref:System.Web.UI.Control.ID%2A> コントロールを現在含まれているゾーンのプロパティです。  
  
 [!code-csharp[WebParts\_WebPart\_Zone\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/webpartzoneindexcs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_Zone\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/webpartzoneindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
    <Member MemberName="ZoneIndex">
      <MemberSignature Language="C#" Value="public int ZoneIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ZoneIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インデックス位置を取得、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />ゾーン内のコントロールです。</summary>
        <value>そのゾーン内のコントロールの数値順序。 ゾーン内の最初のコントロールには、0 のインデックス値があります。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A>プロパティはゾーン内の他のコントロールを基準とした Web パーツ コントロールの数値順序 \(または序数位置\)、ゾーン内でを示します。<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールでは、このプロパティを使用して、追跡し、その Web ページ上の Web パーツ コントロールのコレクションを管理します。  
  
> [!IMPORTANT]
>  あると想定することはできませんの値、<xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A>コントロールのプロパティには、同じコントロール内のインデックス値が等しくなる、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>コントロールのゾーンのコレクション。 そのゾーンでの相対的な位置は、コントロールの多くの場合、\(その<xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A>値\)、およびそのインデックス内で、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A>コントロールの追加、ゾーンから削除すると、そのゾーンのコレクションは別の値になります。  
  
   
  
## 例  
 次のコード例は、アクセスする方法を示します、<xref:System.Web.UI.WebControls.WebParts.WebPart.Zone%2A>と<xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A>プロパティのカスタム Web パーツを制御します。 この例では、カスタム コントロールの使用`TextDisplayWebPart`のセクションの例で作成された、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスの概要です。  
  
 コード例には、Web パーツ ページの表示モードを変更できるようにするカスタム ユーザー コントロールが含まれます。 ユーザー コントロールがにより参照されている、`Register`ユーザー コントロールをホストする Web ページの上部にあるディレクティブです。 このユーザー コントロールを作成および表示モードを使用する方法の詳細については、次を参照してください。[Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)です。  
  
 [!code-csharp[WebParts\_WebPart\_Zone\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/displaymodemenucs.ascx#5)]
 [!code-vb[WebParts\_WebPart\_Zone\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/displaymodemenuvb.ascx#5)]  
  
 コード例の 2 番目の部分は、Web ページです。 2 つ`<asp:webpartzone>` ページで、Web パーツ ゾーンを表す要素。 最初にゾーンを含む、標準的な<xref:System.Web.UI.WebControls.Calendar>コントロール、機能する、<xref:System.Web.UI.WebControls.WebParts.WebPart>ゾーンになっているために、実行時に制御します。 2 番目のゾーンが含まれています、`TextDisplayWebPart`コントロール。 ユーザーがクリックしたとき、**ゾーン情報** ボタン、`Label1`コントロールの値を表示する、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ZoneIndex%2A> 、コントロールのプロパティと<xref:System.Web.UI.Control.ID%2A>を現在のコントロールを含むゾーンのプロパティです。  
  
 [!code-csharp[WebParts\_WebPart\_Zone\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPart_Zone/CS/webpartzoneindexcs.aspx#1)]
 [!code-vb[WebParts\_WebPart\_Zone\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPart_Zone/VB/webpartzoneindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZone" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetPersonalizationDirty">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Web パーツ コントロールの個人用設定データが変更されたこと、またはサーバー コントロールの配置で示すフラグを設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンです。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>