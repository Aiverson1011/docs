<Type Name="WebZone" FullName="System.Web.UI.WebControls.WebParts.WebZone">
  <TypeSignature Language="C#" Value="public abstract class WebZone : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebZone extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web パーツ アプリケーションでサーバー コントロール \(Web パーツ <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> コントロール、サーバー コントロール、ユーザー コントロールを含む\) のコンテナーとして機能するすべてのコントロールの基底クラスとなります。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ ゾーンは、Web ページ上のサーバー コントロールを格納し、一貫性のあるユーザー インターフェイス \(UI\)、レイアウト、および格納されているコントロールのレンダリングを提供する定義済みの領域です。 ゾーンは、ブラウザーで HTML テーブルとしてレンダリングされます。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスはすべての Web パーツ ゾーンの基本クラスです。 ゾーン コントロールはそのため、その他のコントロールを含むに作られた複合コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスから継承、 <xref:System.Web.UI.WebControls.CompositeControl> クラスです。 と共に、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールと <xref:System.Web.UI.WebControls.WebParts.Part> ゾーンから派生したコントロールのコントロール \(または他のユーザーまたはサーバー コントロールをゾーンに配置することができます\)、 <xref:System.Web.UI.WebControls.WebParts.WebZone> 基本クラスは、Web パーツ アプリケーションの基礎を形成します。  
  
 Web パーツ ゾーンの重要な役割は、含まれているコントロールの完全な Web パーツ機能を有効にします。 すべての Web パーツ ページには、少なくとも 1 つのゾーンが含まれていて、ゾーンは、0 個以上のパーツ コントロールを含めることができます。 ゾーンは、Web パーツ機能に必要です。 派生するコントロールをも、ゾーンがない、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスはほとんどの Web パーツ機能を持つことができます。 逆に、Web パーツ コントロール セットの設計上を行う通常の ASP.NET コントロール、サーバー コントロール、またはユーザー コントロールを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーン \(から派生した <xref:System.Web.UI.WebControls.WebParts.WebZone>\)、ゾーン内であるという理由での通常のサーバー コントロールは、として機能するには、有効にして <xref:System.Web.UI.WebControls.WebParts.WebPart> 実行時にコントロールできます。 詳細については、ドキュメントを参照して、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> クラスです。  
  
> [!NOTE]
>  追加することは <xref:System.Web.UI.WebControls.WebParts.Part> または <xref:System.Web.UI.WebControls.WebParts.WebPart> 単に通常のサーバー コントロールとして機能させる場合は、ゾーンの外側のページへのコントロールです。  
  
 Web パーツ内のゾーンの 2 つのカテゴリ コントロール セット、すべての継承がある <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスです。  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンです。 これらが含まれて <xref:System.Web.UI.WebControls.WebParts.WebPart> \(とその他のサーバーとユーザー\) コントロール、およびほとんどの場合、ユーザーが操作する主な UI の Web パーツ ページを形成します。  
  
-   <xref:System.Web.UI.WebControls.WebParts.ToolZone> ゾーンです。 これらのゾーンの Web パーツ ページの特別なビューを提供することを変更するユーザーを有効にする\] \(個人用\) コンテンツ、レイアウト、外観、動作、およびプロパティに含まれるコントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Web パーツ ページの領域です。 たとえば、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> ゾーンは、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> サーバー コントロールを追加および削除できるように、ページのカタログ ビューを提供します。<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ゾーンとは別の種類の <xref:System.Web.UI.WebControls.WebParts.ToolZone> を変更し、プロパティ、外観、およびコントロールの動作と、ページのレイアウトを編集するユーザーを有効にすると、ページの編集のビューを提供します。  
  
 派生したコントロール セットは、対応するコントロールの種類を格納するように設計された Web パーツでは、各ゾーン、 <xref:System.Web.UI.WebControls.WebParts.Part> クラスに、ゾーンの主要なコンテンツおよび基本 UI として機能するパーツ コントロール。 Web パーツ コントロール セットのと共に含まれている一部のコントロールの対応する型のゾーンの種類は、次の表に示します。  
  
|一部のコントロール型|ゾーンの種類|  
|----------------|------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPart> \(とサーバーとユーザーのコントロールでラップされている、 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 実行時に\)|<xref:System.Web.UI.WebControls.WebParts.WebPartZone> \(基底クラスは <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> \)|  
|<xref:System.Web.UI.WebControls.WebParts.EditorPart> \(派生したコントロールをいくつか付属しています、Web パーツ コントロール セットとカスタム <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールを開発することができます\)|<xref:System.Web.UI.WebControls.WebParts.EditorZone> \(基底クラスは <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> \)|  
|<xref:System.Web.UI.WebControls.WebParts.CatalogPart> \(派生したコントロールをいくつか付属しています、Web パーツ コントロール セットとカスタム <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールを開発することができます\)|<xref:System.Web.UI.WebControls.WebParts.CatalogZone> \(基底クラスは <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> \)|  
|<xref:System.Web.UI.WebControls.WebParts.WebPartConnection> \(接続コントロールが一意であるという点でない基本クラスから継承したパーツ コントロール|<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> \(から直接継承 <xref:System.Web.UI.WebControls.WebParts.ToolZone> \)|  
  
 Web パーツ コントロール内のすべてのゾーン ベースから継承する、共通の基本的なユーザー インターフェイス要素がある <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスです。 これらすべての要素がすべてのゾーンに表示されますが、各ゾーンの種類は次の表に記載されていると、一般的なゾーンに関連する UI 要素を持つことができます。  
  
|ゾーンのセクション|説明|  
|---------------|--------|  
|ヘッダー|ゾーンの上部のセクションです。 ヘッダーのテキストには、ゾーン; のタイトルを含めることができますが含まれていますスタイル属性 \(境界線や背景色\) など、ヘッダーを識別します。ゾーン レベルの動詞 \(ボタン、ハイパーリンク、またはイメージで表す\) と、ゾーンを閉じるなど、ゾーン全体に適用される UI アクションを実行するユーザーをクリックできます。 いくつか <xref:System.Web.UI.WebControls.WebParts.WebZone> プロパティなど、 <xref:System.Web.UI.WebControls.WebParts.WebZone.HasHeader%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A>, 、ゾーンのヘッダー領域に関連します。 ゾーンでは、ゾーン レベルの動詞がある場合、 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> と <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle%2A> プロパティを適用します。 これら 2 つの動詞プロパティが、ゾーンに含まれる個々 のパーツ コントロールの動詞にいないゾーン レベルの動詞だけに適用されることを注意してください。 ヘッダーは、すべての種類のゾーンに存在しません。表示される通常 <xref:System.Web.UI.WebControls.WebParts.ToolZone> ゾーンがテキストと close 動詞などの動詞と共通のヘッダー領域を用意する必要がある場合。|  
|Body|メイン コンテンツのゾーンのセクションです。 派生したすべてのゾーン <xref:System.Web.UI.WebControls.WebParts.WebZone> 本文セクションが追加されています。 コントロール セットのすべての種類の Web パーツ ゾーン、ゾーンの本文には、指定された種類にはが含まれています。 <xref:System.Web.UI.WebControls.WebParts.Part> コントロール \(またはその他のサーバー コントロール\) の前の表に示すようにゾーンの種類に対応しています。 さまざまなメンバー、 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスに影響を与える本体セクションの内容など、 <xref:System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A> プロパティです。 本文のセクションが空である場合、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A> メッセージは、特定の状況で表示できます。|  
|Chrome|ゾーンの場合は、各パーツ コントロールに対して表示される一般的な UI 要素。 これは、ゾーン自体に適用されるスタイル属性の説明から異なりますchrome は、具体的には含まれている一部のコントロールに適用されます。 Chrome には、動詞、罫線、および背景色、およびゾーンの一部のコントロールのタイトルのテキストのフォント スタイルなどの他のスタイル属性が含まれています。 ゾーンが含まれている一部のコントロールの種類に該当する単一のクロム オブジェクトを使用して chrome の詳細を決定する \(例:、 <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> オブジェクトの <xref:System.Web.UI.WebControls.WebParts.CatalogZone> を含む <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロール\)。 この単一のクロム オブジェクトは、chrome の詳細と、ゾーン内のすべてのパーツ コントロールのレンダリングを処理します。 これにより、開発者は、すべてのパーツ コントロールの一貫性があり、一般的なルック アンド フィールを指定のゾーンを作成できます。 ゾーンの一部のコントロールに含まれている、chrome に関連するいくつかのプロパティ、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A> プロパティです。 最も chrome に関連するプロパティ、特定の種類のゾーンのクロム オブジェクトを参照する特定のプロパティを含むが、ベースで実装されていないことに注意してください <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスです。 代わりに、ゾーンのほとんどの chrome 固有の機能は、パーツ コントロール固有のニーズに適したものを特定のゾーンの種類で実装されます。 このトピックの前の表に示されている各ゾーンの種類については、トピックを参照してください。|  
|パーツ コントロール|ゾーンの body セクションに配置されているコントロール。 継承するすべてのゾーン、 <xref:System.Web.UI.WebControls.WebParts.WebZone> このトピックで前の表に示すように、入力との対応する 1 つまたは複数のパーツ コントロール、その本文セクションでクラスが含まれます。 これらのパーツ コントロールは、メインの Web パーツの UI アプリケーションを形成します。 ゾーンから派生した型の最も <xref:System.Web.UI.WebControls.WebParts.WebZone> コレクション プロパティなど、すべての格納されているパーツ コントロールを参照することができますが、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.WebParts%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> クラス、および <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> クラスです。|  
|\[フッター\]|ゾーンの下部のセクションです。 ヘッダー セクションと同様、ゾーンの種類ごとに存在することはありませんが通常は、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> ゾーンです。 フッター セクションの一般的な内容のフッターに表示される ok 動詞や適用の動詞などの動詞 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> ゾーンです。 フッター セクションに関連するいくつかのプロパティには、 <xref:System.Web.UI.WebControls.WebParts.WebZone.HasFooter%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.FooterStyle%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle%2A> プロパティです。|  
  
 ほとんどの <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスのプロパティは、ゾーンの一般的な UI 要素について説明する前の表で説明します。<xref:System.Web.UI.WebControls.WebParts.WebZone> クラスの内容の表示には、その役割に関連するいくつかのメソッドもあります。<xref:System.Web.UI.WebControls.WebParts.WebZone.RenderBody%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.RenderContents%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.RenderHeader%2A> メソッドはすべて各ゾーンの特定のセクションのレンダリングをプログラムで制御するためにオーバーライドできます。 たとえば、アプリケーション内のカタログのゾーンのすべてのフッター セクションの表示をカスタマイズする場合は、でしたから継承する、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> クラスでオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter%2A> から継承されたメソッド <xref:System.Web.UI.WebControls.WebParts.WebZone>, 、フッター セクションの表示を変更するとします。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスです。  
  
 コード例の最初の部分から派生する 2 つのカスタム コントロールの表示、 <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスです。 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 両方のコンパイル方法を説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_Zone\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Zone_Overview/CS/zonewebparts.cs#2)]
 [!code-vb[WebParts\_Zone\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Zone_Overview/VB/zonewebparts.vb#2)]  
  
 ホストする Web ページを表示するコード例の 2 番目の部分、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 2 つの宣言型マークアップが含まれているに注意してください <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 、コントロール、 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールと <xref:System.Web.UI.WebControls.WebParts.EditorZone> コントロールです。  
  
 [!code-csharp[WebParts\_Zone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Zone_Overview/CS/zoneoverviewcs.aspx#1)]
 [!code-vb[WebParts\_Zone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Zone_Overview/VB/zoneoverviewvb.aspx#1)]  
  
 ゾーンの動作を表示するさまざまなページの表示モードに切り替えると、ブラウザーでページを読み込むことができます。 表示モードとユーザーの切り替えを有効にするとユーザーの詳細については、次を参照してください。 [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>You rarely need to inherit directly from the <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> class to develop custom Web Parts zones. The Web Parts control set contains the specialized zones listed above in the Remarks section, and usually you can derive from one of them to add custom behavior to a zone. If you do decide to inherit directly from the <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> class, you must override a number of properties and methods (see the documentation for the members of the <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> class). You must also create a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control, optionally a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayMode" /> control to create a unique display mode in which to view your zone, and other customizations to make your zone work within the Web Parts control set.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはゾーンの背景イメージの URL を設定します。</summary>
        <value>ゾーンの背景画像として使用されるイメージの URL を表す文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ゾーンの背景画像は、ゾーンの内容が表示されるすべての表示モードで表示されます。 ゾーンに一部のコントロールが含まれている場合は、コントロールに分離、画像が表示されます。 ゾーンにコントロールが含まれない場合は、\[イメージが表示されないようにブラウズ モードでの内容はレンダリングされません。  
  
 指定されたイメージが、ゾーンの本文よりも小さい場合は、本体領域の全体をカバーする並べて表示します。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl%2A> プロパティです。 宣言型マークアップで、2 つ目の 2 つのゾーンがあることに注意してください `<asp:webpartzone>` 要素が空です。  
  
 [!code-csharp[WebParts\_Zone\_BackImageUrl\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Zone_BackImageUrl/CS/zonebackimageurlcs.aspx#1)]
 [!code-vb[WebParts\_Zone\_BackImageUrl\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Zone_BackImageUrl/VB/zonebackimageurlvb.aspx#1)]  
  
 ブラウザーでは、空の領域内のイメージを表示するデザイン モードに切り替えることができます。 なおの実際の URL、 <xref:System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl%2A> プロパティは、この例で提供されていません。 ページを変更する方法の詳細の表示モード、参照してください [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public virtual string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンにコントロールが含まれないときに表示されるメッセージを取得または設定します。</summary>
        <value>空のゾーンに表示されるメッセージを含む文字列。 カルチャ固有の既定の文字列は、.NET Framework によって提供されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The text in the <xref:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText%2A> property appears when there are no controls in a zone, and the zone is in one of the personalization modes, such as edit, design, or catalog mode.  
  
> [!NOTE]
>  When a zone enters one of the personalization modes that would allow personalization changes to be made to the zone's contents, the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control sets the <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode.AllowPageDesign%2A?displayProperty=fullName> property value to **languageKeyword tag is not supported!!!!**  
>  on the display mode object referenced in its <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A?displayProperty=fullName> property.  
  
   
  
## 例  
 The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText%2A> property. Note that there are two zones in the declarative markup, and the second **languageKeyword tag is not supported!!!!**  
 element is empty.  
  
 [!code-csharp[WebParts\_Zone\_EmptyZoneText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Zone_EmptyZoneText/CS/zoneemptyzonetextcs.aspx#1)]
 [!code-vb[WebParts\_Zone\_EmptyZoneText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Zone_EmptyZoneText/VB/zoneemptyzonetextvb.aspx#1)]  
  
 In a browser, you can switch to design mode to see the text supplied for the <xref:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText%2A> property displayed in the empty zone. For details on how to change page display modes, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneTextStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style EmptyZoneTextStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style EmptyZoneTextStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneTextStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空のゾーンにプレース ホルダー テキストのスタイル属性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> 、ゾーンに割り当てられたテキストのスタイル属性を含む <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" /> プロパティです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ErrorStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ErrorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ErrorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.ErrorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>場合は表示されるエラー メッセージのレンダリングにスタイル属性を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの読み込みまたは作成します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> エラー メッセージのスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実行時に、.NET Framework の読み込みまたはのインスタンスを作成することがない場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart> のインスタンスを制御する、 <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> クラスが作成され、その場所に表示されます。 このオブジェクトは、エラー メッセージ、およびからスタイル属性を含む、 <xref:System.Web.UI.WebControls.WebParts.WebZone.ErrorStyle%2A> プロパティは、エラー メッセージに適用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TitleStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TitleStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TitleStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンのフッター領域の内容のスタイル属性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" /> ゾーンのフッター領域の内容のスタイル属性を格納しています。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="GetEffectiveChromeType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType (System.Web.UI.WebControls.WebParts.Part part);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType GetEffectiveChromeType(class System.Web.UI.WebControls.WebParts.Part part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.Web.UI.WebControls.WebParts.Part" />
      </Parameters>
      <Docs>
        <param name="part">現在のゾーン内のパーツ コントロール。</param>
        <summary>現在の実際のまたは効果的なを返す <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> の値、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> を指定して、コントロール、 <see cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" /> ゾーンと Web パーツ ページの現在の表示モードのプロパティです。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> ゾーンに含まれる Web パーツ コントロールのフレームが現在の境界線の種類を表す値。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="part" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
      </Docs>
    </Member>
    <Member MemberName="HasFooter">
      <MemberSignature Language="C#" Value="protected virtual bool HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.HasFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンがフッター領域にあるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ゾーンにフッター領域がある場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.HasFooter%2A> プロパティは、主に、カスタム ゾーンを作成しているコントロールの開発者によって使用されます。 この設定が存在するは、フラグにできるように、Web パーツ コントロール セットは、ゾーンの適切な場合にのみのフッターを表示します。 たとえば、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter%2A> プロパティは、このプロパティをオーバーライドし、返します `false`, のフッターはレンダリングされませんれるため、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールです。  
  
 ツールのゾーン \(ゾーンから直接派生する、 <xref:System.Web.UI.WebControls.WebParts.WebZone> のクラス、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスなど <xref:System.Web.UI.WebControls.WebParts.EditorZone> と <xref:System.Web.UI.WebControls.WebParts.CatalogZone>\) できるようになどのボタンがある一般的なユーザー インターフェイス \(UI\) の動詞をレンダリングするなど、ページ フッターが必要 **\[ok\]**, 、**適用**, と **キャンセル** 、ゾーンの下部にあります。<xref:System.Web.UI.WebControls.WebParts.WebZone.HasFooter%2A> プロパティは `true` 既定では、ツール ゾーン必要はありませんがプロパティをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If you are creating a custom tool zone that derives from <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />, you can override the <see cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)" /> method and provide rendering for your zone's footer.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasFooter" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HasHeader" />
      </Docs>
    </Member>
    <Member MemberName="HasHeader">
      <MemberSignature Language="C#" Value="protected virtual bool HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.HasHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンがヘッダー領域を持つかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 場合は、ゾーンは、ヘッダー領域です。それ以外の場合、 <see langword="false" />です。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.HasHeader%2A> プロパティは、主に、カスタム ゾーンを作成しているコントロールの開発者によって使用されます。 この設定が存在するは、フラグにできるように、Web パーツ コントロール セットは、ゾーンの適切な場合にのみ、ヘッダーを表示します。 たとえば、 <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader%2A> プロパティは、このプロパティをオーバーライドし、返します `false` パーソナル化可能なモードのいずれかが、ページ以外の場合。 この場合、ヘッダーは表示されません、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> 他のほとんどのモードでは、ヘッダーのレンダリング中に、ブラウズ モードで制御します。 表示モードとユーザーの切り替えを有効にするとユーザーの詳細については、次を参照してください。 [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 ツールのゾーン \(ゾーンから直接派生する、 <xref:System.Web.UI.WebControls.WebParts.WebZone> のクラス、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスなど、 <xref:System.Web.UI.WebControls.WebParts.EditorZone> と <xref:System.Web.UI.WebControls.WebParts.CatalogZone>\) ヘッダー ページが適切な表示モードが場合にのみ表示される必要があります。<xref:System.Web.UI.WebControls.WebParts.WebZone.HasHeader%2A> プロパティは `true` 既定では、する必要はありませんがプロパティをオーバーライドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If you are creating a custom tool zone that derives from <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" />, you can override the <see cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderHeader(System.Web.UI.HtmlTextWriter)" /> method and provide rendering for your zone's header.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZoneBase.HasHeader" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HasFooter" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TitleStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TitleStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TitleStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンのヘッダー領域の内容のスタイル属性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" /> ゾーンのヘッダー領域の内容のスタイル属性を格納しています。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartStyle" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンのヘッダー領域のテキストを取得または設定します。</summary>
        <value>ゾーンのヘッダー テキストを含む文字列。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ゾーンの内容 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> Web ページが特定の表示モードに入ったときにプロパティが表示されます。 などを含むページで、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> に割り当てられたテキストを制御する、 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> ページ編集、カタログ、またはデザイン モードに入ったときに、プロパティが表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、<xref:System.ComponentModel.LocalizableAttribute> および [ASP.NET Globalization and Localization](http://msdn.microsoft.com/ja-jp/8ef3838e-9d05-4236-9dd0-ceecff9df80d) を参照してください。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> プロパティです。 宣言型マークアップで、2 つ目の 2 つのゾーンがあることに注意してください `<asp:webpartzone>` 要素が空です。  
  
 [!code-csharp[WebParts\_Zone\_HeaderText\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Zone_HeaderText/CS/zoneheadertextcs.aspx#1)]
 [!code-vb[WebParts\_Zone\_HeaderText\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Zone_HeaderText/VB/zoneheadertextvb.aspx#1)]  
  
 ブラウザーでは、デザイン モードに指定されたテキストを表示するページを切り替えることができます、 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> 、ゾーンのヘッダー領域にプロパティが表示されます。 ページを変更する方法の詳細の表示モード、参照してください [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">以前に保存された状態。</param>
        <summary>以前に保存したゾーンの状態情報を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState%2A> メソッドの読み込みが以前にゾーンの状態情報を保存します。 ベースよりも優先 <xref:System.Web.UI.Control.LoadViewState%2A> メソッドなど、ゾーンのさまざまなスタイル プロパティの状態情報を読み込むこともを <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.FooterStyle%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">サイズ、 <paramref name="savedState" /> オブジェクトが、現在のビュー ステートのサイズと等しくないです。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.OnInit%2A> メソッドは、ベース <xref:System.Web.UI.Control.OnInit%2A> を使用してゾーンを登録するメソッド、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ゾーンに追加したコントロールが大幅に遅れてステージのページのライフ サイクルで、または <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> は <see langword="null" />です。</exception>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.OnPreRender(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.OnPreRender%2A> メソッドは、ベース <xref:System.Web.UI.Control.OnPreRender%2A> ゾーンが場合は、親コントロールが別のゾーンまたは部分から成るコントロールをレンダリングするを防ぐためのメソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> コントロールが別のゾーン内で、または入れ子になっている、 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> コントロールです。</exception>
        <altmember cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public virtual int Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Padding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセルを含むテーブルでのパディング属性を設定、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ゾーン内のコントロールです。</summary>
        <value>項目とそのゾーンに表示されるテーブルのセルの境界間の余白のピクセル数。 既定値は 2 です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">\-1 よりも小さい値に設定されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="PartChromePadding">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit PartChromePadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit PartChromePadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromePadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "5px")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の内容の間の距離、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールとコントロールの境界線。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Unit" /> 測定の種類および埋め込みの量を表すオブジェクト。 ゾーンの既定の間隔は、5 ピクセルです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、各コントロールの内容と、ゾーンに含まれているすべてのコントロールの境界線間の標準の間隔を定義します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティに割り当てられている値は、負の数です。</exception>
      </Docs>
    </Member>
    <Member MemberName="PartChromeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PartChromeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PartChromeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンに含まれる Web パーツ コントロールの枠線に適用されるスタイルの特性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> をゾーンに含まれる Web パーツ コントロールを囲む境界線のスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ コントロールで定義されている独自の境界線を持つことができます、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A> プロパティです。 コントロールを含むゾーンでは、コントロールの周囲に外側の境界線を追加できます。 ゾーンは、Web パーツ コントロールの周囲に配置できる外側の境界線がによって、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle%2A> プロパティです。 このプロパティに含まれているプロパティの属性をキャンセルしていない、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A> オブジェクトのトピックとマージがまたはに追加します。 ゾーンが含まれている Web パーツ コントロールの各共通かつ一貫した罫線を表示するようになります。  
  
> [!IMPORTANT]
>  ですが、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle%2A> 主にゾーン設定が含まれているコントロールの周囲に追加のプロパティを設定した場合、外側の境界線スタイルの設定を適用、 <xref:System.Web.UI.WebControls.Style> などのプロパティによって参照されるオブジェクト <xref:System.Web.UI.MobileControls.Style.BackColor%2A>, 、ブラウザーが、ゾーンのレンダリングに使用されるテーブルのすべてのサブ要素に適用するとそれらのスタイル属性を解釈します。 そのため、設定、 <xref:System.Web.UI.MobileControls.Style.BackColor%2A> プロパティによって参照されるスタイル オブジェクトを <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle%2A> プロパティ同じ効果があります、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの設定として、 <xref:System.Web.UI.MobileControls.Style.BackColor%2A> によって参照されるオブジェクトのプロパティ、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A> プロパティです。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle%2A> ゾーンに含まれる Web パーツ コントロールの外枠のスタイル属性を設定するプロパティです。  
  
 [!code-csharp[WebParts\_Zone\_PartChromeStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Zone_PartChromeStyle/CS/zonepartchromestylecs.aspx#1)]
 [!code-vb[WebParts\_Zone\_PartChromeStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Zone_PartChromeStyle/VB/zonepartchromestylevb.aspx#1)]  
  
 最初に、ブラウザーでページを読み込むと、上のコントロールがある 2 ピクセル、幅、独自の緑の枠線、ページの宣言型マークアップで設定されているに注意してください。 カレンダーをクリックすると、後まだページはプログラムを使用して、ゾーンの両方のコントロールの境界線を赤に変更し、4 ピクセルの境界線の幅を設定上のコントロールには、元緑内側の境界線が保持されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartStyle" />
      </Docs>
    </Member>
    <Member MemberName="PartChromeType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはゾーンに含まれる Web パーツ コントロールのフレームの境界線の種類を設定します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> ゾーンに含まれる Web パーツ コントロールを囲む境界線の種類を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> ようにゾーン内の Web パーツ コントロールの既定のプロパティのプロパティの動作です。 Web パーツ コントロールがある場合、 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> プロパティの効果をオーバーライドするプロパティの設定、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> 実行時にプロパティです。 場合は、コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> プロパティが設定されていないまたはに設定されている <xref:System.Web.UI.WebControls.WebParts.PartChromeType.Default>, の値、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> プロパティは、罫線の種類のコントロールを決定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値が、<see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 値ではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)" />
      </Docs>
    </Member>
    <Member MemberName="PartStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableStyle PartStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableStyle PartStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.PartStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>境界線およびゾーンに含まれている各 Web パーツ コントロールの内容に適用されるスタイルの特性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.TableStyle" /> ゾーン内の Web パーツ コントロールのスタイル属性を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 スタイル属性は、境界と、ゾーン内のすべての Web パーツ コントロールの内容に適用されます。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、 <xref:System.Web.UI.WebControls.TableStyle> オブジェクトが返されます。 このプロパティでは、ゾーンに含まれるすべてのコントロールの内容の一貫性のあるスタイルを指定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A> プロパティです。 宣言型マークアップで参照されているゾーンであることに注意してください、 `<asp:calendar>` 要素および `<asp:literal>` ゾーン内にあるために、実行時に Web パーツ コントロールとして機能する両方のコントロールでの要素。 ページを使用してプログラムを使用して、ユーザーは、予定表コントロールで日付をクリックすると、後に、 <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A> ゾーン内のすべてのパーツ コントロールの背景色を赤に変更するプロパティです。  
  
 [!code-csharp[WebParts\_Zone\_PartStyle\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Zone_PartStyle/CS/zonepartstylecs.aspx#1)]
 [!code-vb[WebParts\_Zone\_PartStyle\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Zone_PartStyle/VB/zonepartstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PartTitleStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.TitleStyle PartTitleStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.TitleStyle PartTitleStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.TitleStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーンに含まれている各 Web パーツ コントロールのタイトル バーの内容のスタイル属性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" /> 、ゾーン内の各 Web パーツ コントロールのタイトル バーの内容のスタイル属性を格納しています。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.TitleStyle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartStyle" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>開始を指定したゾーンのコントロールの HTML タグをレンダリング <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.RenderBeginTag%2A> メソッドは、主にコントロールの開発者によって使用されます。<xref:System.Web.UI.WebControls.WebParts.WebZone> コントロール、メソッドは、ゾーンについてレンダリングされる HTML テーブルのスタイル属性を設定します。 スタイル属性では、サポートされているブラウザーで適切に HTML テーブルのレンダリングを支援します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected virtual void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>ゾーンのコントロールの本体の表示をオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ゾーンのコントロールの本体は、そのヘッダーおよびフッター領域間の部分です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderClientScript">
      <MemberSignature Language="C#" Value="protected bool RenderClientScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.RenderClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web パーツ ページ上のクライアント スクリプトを表示するかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> ゾーンは、ページが、特定の表示モードの場合にクライアント スクリプトをレンダリングする場合それ以外の場合、 <see langword="false" />です。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>開始時刻と終了を指定したタグの間でゾーンのコントロールの内容全体をレンダリング <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.RenderContents%2A> メソッドは、主にコントロールの開発者によって使用されます。 このメソッドは、ベース <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> ゾーンを表示する方法と、ゾーンの <xref:System.Web.UI.WebControls.WebParts.WebZone.HasHeader%2A> にプロパティが設定されている `true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="protected virtual void RenderFooter (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderFooter(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>ゾーンのコントロールのフッターの表示をオーバーライドします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderHeader">
      <MemberSignature Language="C#" Value="protected virtual void RenderHeader (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderHeader(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.RenderHeader(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>ゾーンのコントロールのヘッダーの表示をオーバーライドします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた後で発生したビューステートの変更を保存します。</summary>
        <returns>ゾーン コントロールの現在のビュー ステートを返します。 このメソッドが戻るかどうかビューステートがゾーンに関連付けられていない、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.SaveViewState%2A> メソッドは、ベース <xref:System.Web.UI.Control.SaveViewState%2A> ビュー ステートに保存するメソッドなどのゾーンのさまざまなスタイル プロパティを変更 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.FooterStyle%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この Web サーバー コントロールに対応する <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値のいずれか。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebZone.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ゾーン コントロールのビューステートの変更を追跡します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.TrackViewState%2A> メソッドは、ベース <xref:System.Web.UI.Control.TrackViewState%2A> など、ゾーンのさまざまなスタイル プロパティにビュー ステートを追跡するためにメソッドが変更 <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle%2A>, 、<xref:System.Web.UI.WebControls.WebParts.WebZone.FooterStyle%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.WebZone.PartStyle%2A>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="VerbButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType VerbButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType VerbButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定ボタンの種類はゾーン内の動詞を表すために使用されます。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.ButtonType" /> を示すボタンの種類は、ユーザー インターフェイス \(UI\) 内の動詞を表す表示されます。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Link" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A> 動詞は、ゾーンの動詞メニューに表示する方法を決定するプロパティを使用できます。 動詞は、ボタン、ハイパーリンク、またはクリック可能なイメージとして表示できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティに設定されていない、 <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" />
      </Docs>
    </Member>
    <Member MemberName="VerbStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style VerbStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style VerbStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.VerbStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ゾーン内の Web パーツ コントロールに関連付けられているユーザー インターフェイス \(UI\) の動詞のスタイル属性を取得します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.Style" /> ゾーンに含まれる Web パーツ コントロールに関連付けられている動詞のスタイル属性を格納しています。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebZone.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> に関連付けられたコントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.WebZone" /> Web パーツ ページ上のコントロールのインスタンス。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> ゾーンに関連付けられているコントロール。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
  </Members>
</Type>