<Type Name="WebPartPersonalization" FullName="System.Web.UI.WebControls.WebParts.WebPartPersonalization">
  <TypeSignature Language="C#" Value="public class WebPartPersonalization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebPartPersonalization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>実装する低レベルのパーソナル化の操作です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、下位レベルのパーソナル化の操作を実行するために必要なロジックを実装します。 ですが、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> をクラスは、パーソナル化の高度なライフ サイクルを管理します。 は、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> 特定のパーソナル化の操作を実行するために必要な物理の手順を実際に実装するクラス。<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> クラスに依存し、実装の <xref:System.Web.UI.WebControls.WebParts.PersonalizationProvider> パーソナル化情報の基になるデータ ストアと通信します。  
  
 既定の実装を使用する場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>, のインスタンスを作成、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> 参照することで使用できるクラス、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> プロパティです。 アクセスするなど、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope%2A> は、指定したプロパティには、 `WebPartManager.Personalization.InitialScope`です。  
  
   
  
## 例  
 次のコード例に示す方法、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> パーソナル化スコープが個人用に設定されたプロパティの結果に与える影響の例を提供するだけでなく、クラスを使用します。 この例では、5 つのファイルがあります。  
  
-   .Aspx ページ宣言によって 2 つの Web パーツ ゾーンを作成するそれぞれのコントロールにします。  
  
-   ユーザー コントロールと呼ばれる `Color.ascx` 状態情報を変更して、共有スコープに入るユーザーの承認の権限をベースに、テキスト ボックスの背景の色を適用する個人用に設定されたプロパティを変更するユーザーを可能にします。  
  
-   ユーザー コントロールと呼ばれる `Persmode.ascx` を示すページの現在のスコープは、どのような共有スコープを入力するか、データを変更するには、現在のユーザー権限で、同じ 2 つのボタン。 1 つのスコープを変更する、現在のユーザーのパーソナル化情報をリセットする 1 つも用意されています。  
  
-   ユーザーの認証に使用されるログイン コントロールです。  
  
-   パーソナル化の状態を変更して、共有スコープを入力するユーザーを承認する例を提供するセクションを Web.config ファイルです。  
  
 次のコードでは、aspx ページで、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> され次の 2 つの Web パーツ ゾーンが表示されます、 `Color.ascx` と `Persmode.ascx` コントロールです。 ページは、現在のユーザー情報の取得に使用されるログイン ページを読み込みます。 \[ASP.NET Web サイト管理ツールを使用して [!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)] 、ページにアクセスするユーザーを作成します。 スコープを変更し、状態情報を変更する構成ファイルでの承認の権限を許可されたユーザーの例については、Web.config ファイルを参照してください。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/Defaultcs.aspx#1)]
 [!code-vb[WebParts\_WebPartPersonalization\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/Defaultvb.aspx#1)]  
  
 次のコード例では、ログイン ページを作成します。 ログインが成功した後にメインの aspx ページにリダイレクトします。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/login.aspx#5)]
 [!code-vb[WebParts\_WebPartPersonalization\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/login.aspx#5)]  
  
 次のコード例は、このアプリケーションの Web.config ファイルの一部です。 ここでは、この場合は"user2"で、ユーザーの承認を設定する、共有のパーソナル化スコープに入る、および個人用設定の状態情報を変更する方法を示します。 また、この場合は"admin"共有パーソナル化スコープに入ると個人用設定の状態情報を変更する"admin"ロールにユーザーを許可するように使用できる、ロールの例を示します。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/web.config#2)]
 [!code-vb[WebParts\_WebPartPersonalization\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/web.config#2)]  
  
 次のコード例と呼ばれる、ユーザー コントロールを作成する `Color.ascx`, 、現在のパーソナル化スコープとユーザーの承認権限に基づいて、2 つのテキスト ボックスの背景色をユーザーがここでは、個人用に設定されたプロパティを変更できます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[Script Exploits Overview](http://msdn.microsoft.com/ja-jp/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/color.ascx#3)]
 [!code-vb[WebParts\_WebPartPersonalization\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/color.ascx#3)]  
  
 次のコード例と呼ばれる、ユーザー コントロールを作成する `Persmode.ascx`, 、現在のパーソナル化スコープを示すとを変更するユーザーの権限の状態および共有範囲を入力します。 現在のパーソナル化の状態をリセットするためのリセット\] ボタンもあります。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/persMode.ascx#4)]
 [!code-vb[WebParts\_WebPartPersonalization\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/persMode.ascx#4)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>The <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> class works closely with a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control and the rest of the personalization infrastructure. The default implementation of personalization is a very robust subsystem that should meet your personalization needs. In most cases, if you want to customize personalization, you can create a data provider for use as a personalization provider by creating a class that inherits from <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider" />.  
  
 If you want to create a personalization subsystem significantly different from that provided by the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> and the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> classes, you should create a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> implementation by deriving from <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> and add your own custom logic. Then create a custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> implementation by deriving from <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />, add your own custom logic, and override the <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization" /> method to return your custom <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> implementation. Because a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control makes requests to the personalization infrastructure by way of a <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> instance, the <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> control does not directly interact with or hold references to <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationProvider" /> implementations.</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPartPersonalization (System.Web.UI.WebControls.WebParts.WebPartManager owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.WebPartManager owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.#ctor(System.Web.UI.WebControls.WebParts.WebPartManager)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Parameters>
      <Docs>
        <param name="owner">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> パーソナル化情報を管理するために使用</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、このクラスのインスタンスを初期化し、関連付けます、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 代行コントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> インスタンスは、パーソナル化の操作を実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void ApplyPersonalizationState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ApplyPersonalizationState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ApplyPersonalizationState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>個人用設定データを親に適用される <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled%2A> にプロパティが設定されている `true`, 、このメソッドは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationState.ApplyWebPartPersonalization%2A> メソッドを <xref:System.Web.UI.WebControls.WebParts.PersonalizationState> をパーソナル化状態を指定した Web パーツ コントロールに適用するインスタンス。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">基になるデータ ストアから読み込まれる前に、パーソナル化状態を適用しようとしました。  
  
 または  
  
 データ ストアから返されたパーソナル化の状態が <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="ApplyPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void ApplyPersonalizationState (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ApplyPersonalizationState(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ApplyPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Web パーツ コントロール、データのパーソナル化を適用できます。</param>
        <summary>指定した個人用設定データを適用 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 親によって要求されたときに制御 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは個人用設定データを個別に適用する <xref:System.Web.UI.WebControls.WebParts.WebPart>の派生クラスの親によって要求されたときに <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。  
  
 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled%2A> にプロパティが設定されている `true`, 、このメソッドは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationState.ApplyWebPartPersonalization%2A> メソッドを <xref:System.Web.UI.WebControls.WebParts.PersonalizationState> をパーソナル化状態を指定した Web パーツ コントロールに適用するインスタンス。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">親によって管理されていない Web パーツ コントロールをパーソナル化状態を適用しようとした <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />します。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPart" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">基になるデータ ストアから読み込まれる前に、パーソナル化状態を適用しようとしました。  
  
 または  
  
 データ ストアから返されたパーソナル化の状態が <see langword="null" />です。  
  
 または  
  
 同じ Web パーツ コントロールをパーソナル化データを複数回適用しようとしました。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="CanEnterSharedScope">
      <MemberSignature Language="C#" Value="public bool CanEnterSharedScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnterSharedScope" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CanEnterSharedScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力する権限があるかどうかを示す値を返す <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> スコープ。</summary>
        <value>
          <see langword="true" /> 入力するユーザーが承認されている場合 <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> スコープです。 それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを返します `true` で、ユーザーが承認されている場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartUserCapability> を入力する <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> スコープ。  
  
 初めてのプロパティの名前は、ユーザーの入力を適切と判断した <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> スコープを設定して、情報をキャッシュします。 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.UserCapabilities%2A> ディクショナリが変更された初めての後にこのプロパティが呼び出されると、変更は、このプロパティを後続の呼び出しには表示されません。  
  
   
  
## 例  
 次のコード例を使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CanEnterSharedScope%2A> プロパティです。 このコードについては、大規模なコード サンプルの一部である、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> クラスの記述。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/persMode.ascx#7)]
 [!code-vb[WebParts\_WebPartPersonalization\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/persMode.ascx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeScope">
      <MemberSignature Language="C#" Value="protected virtual void ChangeScope (System.Web.UI.WebControls.WebParts.PersonalizationScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ChangeScope(valuetype System.Web.UI.WebControls.WebParts.PersonalizationScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ChangeScope(System.Web.UI.WebControls.WebParts.PersonalizationScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Web.UI.WebControls.WebParts.PersonalizationScope" />
      </Parameters>
      <Docs>
        <param name="scope">現在のページに新しいパーソナル化スコープ。</param>
        <summary>現在のページが変更 <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> 指定されたスコープのインスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドで指定された新しいスコープを現在実行中のページのパーソナル化スコープの変更、 `newScope` パラメーター。 このメソッドは保護されているヘルパー メソッドは、パブリックによって呼び出される <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> メソッドです。 切り替える 3 つ以上の可能なスコープがある場合は、将来の機能拡張を処理するこのプロテクト メソッドが存在しています。  
  
 場合は、現在のスコープと `newScope` 同じ値は、このメソッドを使用しないため、操作を実行します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">切り替えを試みた場合 <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> 検索対象に <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> スコープ、現在のユーザーに機能がなく、ユーザーを入力する <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> スコープ。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="scope" /> 有効なメンバーではない、 <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> 列挙します。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="CopyPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void CopyPersonalizationState (System.Web.UI.WebControls.WebParts.WebPart webPartA, System.Web.UI.WebControls.WebParts.WebPart webPartB);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void CopyPersonalizationState(class System.Web.UI.WebControls.WebParts.WebPart webPartA, class System.Web.UI.WebControls.WebParts.WebPart webPartB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartA" Type="System.Web.UI.WebControls.WebParts.WebPart" />
        <Parameter Name="webPartB" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPartA">個人用設定データを提供する Web パーツ コントロール。</param>
        <param name="webPartB">個人用設定データを受信する Web パーツ コントロール。</param>
        <summary>1 つの Web パーツ コントロールからパーソナル化の状態を抽出し、2 つ目の Web パーツ コントロールに適用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドからパーソナル化の状態を抽出する `webPartA` し、それを適用 `webPartB`します。 このメソッドがあると見なさ `webPartA` と `webPartB` は同じ型です。 Web パーツ コントロールがある場合 <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> でラップした子コントロールから、コントロール、メソッドはコピー パーソナル化状態 `webPartA` で子コントロールにラップされた `webPartB`します。  
  
 コピー操作の一部として `webPartB` は「ダーティ」としてマークします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="webPartA" /> または <paramref name="webPartB" /> のいずれかが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPartA" /> <paramref name="webPartB" /> ではなく、同じ <see cref="T:System.Type" />します。  
  
 または  
  
 <paramref name="webPartA" /> <paramref name="webPartB" /> は <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> コントロールが、いずれかまたは両方に子コントロールが不足しています。  
  
 または  
  
 <paramref name="webPartA" /> <paramref name="webPartB" /> は <see cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" /> 、コントロールではなく、子コントロールではなく、同じ <see cref="T:System.Type" />します。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>個人用設定が有効にする要求されたかどうかを示す値を返す関連付けられた <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <value>
          <see langword="true" /> 個人用設定が有効の場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、個人用設定が親を有効にする要求かどうかを示す <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。 目的から、若干の重要な違いであることに注意してください <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled%2A> と <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsInitialized%2A>です。  
  
 このプロパティは、完了する前にのみ設定できる、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> メソッドです。 実際には、つまり、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Enabled%2A> で、ページのマークアップでプロパティを設定する必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 個人用設定を無効にする場合は、要素。 このプロパティを設定して、中に別の方法として、 `PreInit` のフェーズ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連付けられた後、このプロパティの値を設定しようとした <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールの <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> メソッドが完了します。</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureEnabled">
      <MemberSignature Language="C#" Value="public void EnsureEnabled (bool ensureModifiable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureEnabled(bool ensureModifiable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.EnsureEnabled(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ensureModifiable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ensureModifiable">チェックの種類を示すブール値を行う必要があります。</param>
        <summary>確実に、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンスが完了したの初期化、または現在のユーザーには、パーソナル化状態を変更する権限が与えられています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、いくつかで使用されるヘルパー メソッド <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> メソッドを次の 2 つのいずれかを確認します。  
  
-   <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> インスタンスの初期化が完了した \(たとえば、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load%2A> メソッドが呼び出され、正常に完了しました\)。 場合にこのチェックが行われた、 `ensureModifiable` パラメーターと等しい `false`します。  
  
     または  
  
-   現在のユーザーは、パーソナル化状態を変更する権限を持っています。 場合にこのチェックが行われた `ensureModifiable` equals `true`します。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールがケースの数にもこのメソッドを呼び出します。  
  
-   表示モードを標準以外のものに切り替えます。 現在のユーザー個人用設定の状態を変更する権限が必要です。  
  
-   追加するには、削除、または Web パーツ コントロールを移動します。 現在のユーザー個人用設定の状態を変更する権限が必要です。  
  
-   接続するには、切断、および Web パーツ コントロールを編集します。 現在のユーザー個人用設定の状態を変更する権限が必要です。  
  
-   ページ上の Web パーツ コントロールをエクスポートします。<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> インスタンスの初期化が完了しているあります。  
  
-   Web パーツをインポートするには、次のように制御します。 現在のユーザー個人用設定の状態を変更する権限が必要です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在のユーザーにパーソナル化情報を変更する権限がないか、他のチェックが失敗しました。  
  
 または  
  
 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled" /> 返される <see langword="false" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="EnterSharedScopeUserCapability">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartUserCapability EnterSharedScopeUserCapability;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartUserCapability EnterSharedScopeUserCapability" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartPersonalization.EnterSharedScopeUserCapability" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartUserCapability</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> インスタンスを入力するユーザーの承認の <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> スコープ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー権利が文字列"enterSharedScope"によって表される、 <xref:System.Web.UI.WebControls.WebParts.WebPartUserCapability> インスタンス。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="ExtractPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void ExtractPersonalizationState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ExtractPersonalizationState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ExtractPersonalizationState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>親から個人用設定データを抽出 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled%2A> にプロパティが設定されている `true`, 、ページ要求時にパーソナル化状態がリセットされないと \(場合など、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ShouldResetPersonalizationState%2A> プロパティは、 `false`\)、このメソッドは、親から個人用設定データを抽出し、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 中の制御、 <xref:System.Web.UI.Page.SaveStateComplete> イベントです。  
  
 このメソッドは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationState.ExtractWebPartManagerPersonalization%2A> メソッドを <xref:System.Web.UI.WebControls.WebParts.PersonalizationState> 親からパーソナル化状態を抽出するインスタンス <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">基になるデータ ストアから読み込まれる前に、パーソナル化状態を抽出しようとしました。  
  
 または  
  
 パーソナル化状態がまだ適用されていません。  
  
 または  
  
 <see cref="P:System.Web.UI.Control.ID" /> の <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> が個人用設定データが適用された後に変更します。  
  
 または  
  
 データ ストアから返されたパーソナル化の状態が <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="ExtractPersonalizationState">
      <MemberSignature Language="C#" Value="protected virtual void ExtractPersonalizationState (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ExtractPersonalizationState(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ExtractPersonalizationState(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">Web パーツ コントロール、抽出する個人用設定データを格納します。</param>
        <summary>そのためには、親によって要求されたときに、Web パーツ コントロールから個人用設定データを抽出 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled%2A> にプロパティが設定されている `true`, 、ページ要求時にパーソナル化状態がリセットされないと \(場合など、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ShouldResetPersonalizationState%2A> プロパティは `false`\)、このメソッドで指定された Web パーツ コントロールから個人用設定データを抽出し、 `webPart`です。 このメソッドは、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationState.ExtractWebPartPersonalization%2A> メソッドを <xref:System.Web.UI.WebControls.WebParts.PersonalizationState> パーソナル化状態を指定した Web パーツ コントロールから抽出するインスタンス。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">親によって管理されていない Web パーツ コントロールからのパーソナル化状態の抽出が試み <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />します。</exception>
        <exception cref="T:System.InvalidOperationException">基になるデータ ストアから読み込まれる前に、パーソナル化状態を抽出しようとしました。  
  
 または  
  
 パーソナル化状態がまだ適用されていません。  
  
 または  
  
 <see cref="P:System.Web.UI.Control.ID" /> の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> が個人用設定データが適用された後に変更します。  
  
 または  
  
 データ ストアから返されたパーソナル化の状態が <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizationFilter">
      <MemberSignature Language="C#" Value="protected virtual string GetAuthorizationFilter (string webPartID);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetAuthorizationFilter(string webPartID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.GetAuthorizationFilter(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPartID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="webPartID">取得するフィルターに関連付けられている Web パーツ コントロールの ID。</param>
        <summary>指定した Web パーツ コントロールに関連付けられている場合は、承認フィルターを取得します。</summary>
        <returns>指定した Web パーツ コントロールの承認フィルター。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定された Web パーツ コントロールに関連付けられている場合、このメソッドは、承認フィルターを取得 `webPartID`します。 関連付けられているシリアル化され、パーソナル化によって管理される各 Web パーツ コントロール、 `webPartID` パラメーター。 実行時に、ページの <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールは、各 Web パーツ コントロールを承認するかどうかを調べることによって、ページに表示されるコントロールをフィルター処理できます。 この認証情報は、各 Web パーツ コントロールに関連付けられたデータを文字列として格納されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">承認を取得しようとしたときにフィルター処理 <see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled" /> は <see langword="false" /> が早すぎるので、ページ ライフ サイクルでこのメソッドを呼び出すことによってです。  
  
 または  
  
 承認フィルターを取得しようとしましたが、パーソナル化状態が読み込まれていません。  
  
 \- または  
  
 データ ストアから返されたパーソナル化の状態が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="webPartID" /> <see langword="null" /> または空の文字列 \(""\) です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="HasPersonalizationState">
      <MemberSignature Language="C#" Value="public virtual bool HasPersonalizationState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPersonalizationState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.HasPersonalizationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>個人用設定データ、現在のページとパーソナル化スコープを関連付けるかどうかを示す値を返します。</summary>
        <value>
          <see langword="true" /> ページがある個人用設定データがそれに関連付けられている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、現在のページおよびスコープの組み合わせに関連付けられている個人用設定データがあるかどうかを判断するための便利な方法です。 メソッドの呼び出しでは内部的には、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationProvider.GetCountOfState%2A> データが存在するかどうかを調べるプロバイダーにします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連付けられているパーソナル化プロバイダーが見つからない、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンス。 これは、プロパティに関連付けられている完了する前にアクセスする場合に発生 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールの <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> メソッドです。  
  
 または  
  
 値、 <see cref="P:System.Web.UI.Control.Page" /> 関連付けられたプロパティ <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> は <see langword="null" />です。  
  
 または  
  
 値、 <see cref="P:System.Web.UI.Page.Request" /> プロパティを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに関連付けられている <see cref="T:System.Web.UI.Page" /> インスタンスが <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="InitialScope">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PersonalizationScope InitialScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PersonalizationScope InitialScope" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PersonalizationScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または既定のパーソナル化スコープを設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> 、関連する既定のパーソナル化スコープを示す <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、親オブジェクトで使用される既定のパーソナル化スコープを表す <xref:System.Web.UI.WebControls.WebParts.WebPartManager> がない場合は適切なスコープに関するナレッジを前のコントロールです。 返す既定でこのプロパティが明示的に設定されていない場合 <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> スコープ。  
  
 このプロパティは、完了する前にのみ設定できる、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> メソッドです。 これは実際、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope%2A> で、ページのマークアップで設定する必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 要素。 このプロパティを設定して、中に別の方法として、 `PreInit` のフェーズ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">関連付けられた後、現在の値以外の値にこのプロパティを設定しようとした <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールの <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> メソッドが完了します。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">値を設定しようとしました <see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope" /> がメンバーではない、 <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> 列挙します。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>個人用設定が有効のこのインスタンスの個人用設定データが正常に読み込まれたかどうかを示す値を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> クラスです。</summary>
        <value>
          <see langword="true" /> 現在の個人用設定が有効になっている場合は、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンスと個人用設定データが正常に読み込まれた以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 個人用設定データを読み込む前にこのプロパティは常に返す `false`します。 たとえば、このプロパティを返す `false` 中に、 `PreInit` フェーズ。 関連付けられた後 <xref:System.Web.UI.WebControls.WebParts.WebPartManager>の <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> メソッドが正常に完了しました \(を <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load%2A> メソッドが呼び出されます\)、このプロパティは返される `true`です。  
  
 このプロパティは、保護対象のパブリックにアクセスできる別名 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsInitialized%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="protected bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>個人用設定が有効のこのインスタンスの個人用設定データが正常に読み込まれたかどうかを示す値を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> クラスです。</summary>
        <value>
          <see langword="true" /> このインスタンスで個人用設定が初期化される場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 個人設定機能が有効になっている場合 \(場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Enabled%2A> にプロパティが設定されている `true`\)、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> インスタンスでは、関連付けられた後すぐに初期化されると見なされます <xref:System.Web.UI.WebControls.WebParts.WebPartManager>の <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> メソッドが正常に完了しました \(を <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load%2A> メソッドが呼び出されます\)。 個人用設定データを読み込む前にこのプロパティは常を返します `false`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsModifiable">
      <MemberSignature Language="C#" Value="public bool IsModifiable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModifiable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsModifiable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態情報を変更する現在のユーザーが承認済みかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> 状態情報の変更をユーザーが承認されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティが呼び出されると、最初に、パーソナル化状態を変更するユーザーの権利を決定する結果をキャッシュします。 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.UserCapabilities%2A> 最初にこのプロパティが呼び出された後のディクショナリを変更すると、変更は反映されませんこのプロパティのそれ以降の呼び出しにします。  
  
   
  
## 例  
 次のコード例を使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsModifiable%2A> プロパティです。 このコードについては、大規模なコード サンプルの一部である、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> クラスの記述。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/persMode.ascx#6)]
 [!code-vb[WebParts\_WebPartPersonalization\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/persMode.ascx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.PersonalizationScope Load ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.WebControls.WebParts.PersonalizationScope Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PersonalizationScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>個人用設定を初期化します。</summary>
        <returns>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> 親インスタンス <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、親の代わりのパーソナル化情報を初期化するためのメイン エントリ ポイント <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。 このメソッドは、親の中に <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> メソッドです。 通常は、親の個人用設定が無効になって場合 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールでは、このメソッドは決して呼び出されません。  
  
 このメソッドの中には、次の初期化が行われます。  
  
-   示されている既定の個人用設定プロバイダーまたはカスタム プロバイダーのいずれかへの参照、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> ページ マークアップ、または <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ProviderName%2A> プロパティを取得します。  
  
-   ユーザー機能を決定する、プロバイダーが呼び出されます \(<xref:System.Web.UI.WebControls.WebParts.PersonalizationProvider.DetermineUserCapabilities%2A>\) の現在実行中のユーザーです。  
  
-   現在のページ\/ユーザー\/スコープの組み合わせのパーソナル化状態が、プロバイダーによって基になるデータ ストアから読み込まれる \(<xref:System.Web.UI.WebControls.WebParts.PersonalizationProvider.LoadPersonalizationState%2A>\) 内で格納されている、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> インスタンス。  
  
-   現在のページ\/ユーザー\/スコープのパーソナル化スコープは、プロバイダーによって決まります \(<xref:System.Web.UI.WebControls.WebParts.PersonalizationProvider.DetermineInitialScope%2A>\)。 この判断の結果は、の値と異なる可能性があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope%2A> プロパティです。  
  
 値としてこのメソッドから返されるスコープの値が使用される、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> プロパティです。  
  
> [!NOTE]
>  <xref:System.InvalidOperationException> 場合にのみ、有効化されていないパーソナル化のための例外が発生、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load%2A> メソッドが直接呼び出されます。 ASP.NET の実装内部のヘルパー メソッドが実際に呼び出されて、負荷の実行し、かどうか個人用設定が有効でないページのこのヘルパー メソッドが何も行わずに返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">個人用設定が有効でない場合、このメソッドが呼び出されます \(<see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Enabled" /> equals <see langword="false" />\)。  
  
 または  
  
 値、 <see cref="P:System.Web.UI.Control.Page" /> 関連付けられたプロパティ <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> は <see langword="null" />です。  
  
 または  
  
 値、 <see cref="P:System.Web.UI.Page.Request" /> プロパティを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに関連付けられている <see cref="T:System.Web.UI.Page" /> インスタンスが <see langword="null" />です。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">プロバイダーがで明示的に設定するか、ページのマークアップ、または <see cref="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ProviderName" /> プロパティとプロバイダーが見つかりません。  
  
 または  
  
 パーソナル化の状態データを格納しているオブジェクト <see langword="null" />します。</exception>
        <exception cref="T:System.ArgumentException">読み込みとデータを逆シリアル化中に問題が発生しました。  
  
 または  
  
 構成ファイル内の個人用設定プロバイダーの定義にエラーが発生します。</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">基になるのパーソナル化プロバイダーは、既定のプロバイダーが見つかりませんでしたまたは個人用設定プロバイダーを初期化しようとしているときにエラーが発生したために初期化できませんでした。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="ModifyStateUserCapability">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.WebPartUserCapability ModifyStateUserCapability;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.WebPartUserCapability ModifyStateUserCapability" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ModifyStateUserCapability" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartUserCapability</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表す、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> パーソナル化の状態を変更するユーザーの承認のインスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー権利が文字列"modifyState"によって表される、 <xref:System.Web.UI.WebControls.WebParts.WebPartUserCapability> インスタンス。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または個人用設定のプロバイダー名を設定します。</summary>
        <value>パーソナル化プロバイダーの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、ページの宣言では、このプロパティの設定値を返します。 このプロパティが設定されていないかどうかが返されます <xref:System.String.Empty>します。 ここで、ページは、構成ファイルで指定された既定の個人用設定プロバイダーを使用します。  
  
 このプロパティは、完了する前にのみ設定できる、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit%2A> メソッドです。 つまり、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ProviderName%2A> でページの宣言でプロパティを設定する必要があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 要素。  このプロパティを設定して、中に、別の方法として、 `PreInit` フェーズ。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">このプロパティの現在値以外の値を設定しようとしましたが、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールの <see cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)" /> メソッドが完了しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetPersonalizationState">
      <MemberSignature Language="C#" Value="public virtual void ResetPersonalizationState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetPersonalizationState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ResetPersonalizationState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のページ、スコープ、および基になるデータ ストア内のユーザーの個人用設定データをリセットします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、現在のページ、スコープ、および基になるデータ ストア内のユーザーの個人用設定データをリセットします。 リセットの副作用として、現在実行中のページが再び実行されますが、 <xref:System.Web.HttpServerUtility.Transfer%2A> 呼び出します。 この転送が現在のページとしてを再実行することに注意してください、 `GET` ページが最初に要求する方法に関係なく要求します。  
  
 このメソッドは、いつでも呼び出すことができます。 内部的には、このメソッドは、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ResetPersonalizationState%2A> プロバイダーのメソッドです。 データを正常にリセットした後、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ShouldResetPersonalizationState%2A> にプロパティが設定されている `true`します。 このプロパティを別の場所で使用、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> コントロールのプロパティから解凍形式の個人用設定データをバイパスするインスタンスし、データは既にリセットされている場合は、それを保存します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンスが有効なパーソナル化プロバイダーを参照できません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="protected virtual void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Save" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のページ、スコープ、およびユーザーの個人用設定データを基になるデータ ストアに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 中にこのメソッドは、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.Page.SaveStateComplete> イベントです。 メソッドの呼び出しでは内部的には、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationProvider.SavePersonalizationState%2A> プロバイダーのメソッドです。  
  
 現在実行中のユーザーと呼ばれる機能があるない場合に、個人用設定データを保存しようとしています。 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ModifyStateUserCapability> \(現在 <xref:System.Web.UI.WebControls.WebParts.WebPartUserCapability> インスタンス\) の結果、 <xref:System.InvalidOperationException> 例外です。 のみがある場合は true に注意してください。 場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールが、保護されていると呼ばれる <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Save%2A> メソッドを直接します。 実装では、ASP.NET、内部のヘルパー メソッドが実際に呼び出されて、保存を実行し、このヘルパー メソッドがサイレント モードで現在実行中のユーザーがデータを変更する権限を持たないかどうかを返します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在のユーザーと呼ばれる機能はありません。 <see cref="F:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ModifyStateUserCapability" />します。  
  
 または  
  
 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンスが有効なパーソナル化プロバイダーを参照できません。  
  
 または  
  
 パーソナル化プロバイダーが現在関連付けられていない、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンス。 これは、呼び出しの前にこのメソッドが呼び出された場合に発生することが <see cref="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load" /> \(呼び出し中に個人用設定プロバイダーの参照が取得した <see cref="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load" />します。  
  
 または  
  
 パーソナル化状態が読み込まれていません。  
  
 または  
  
 <see cref="T:System.Web.UI.Page" /> 関連付けられたインスタンス <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> は <see langword="null" />です。  
  
 または  
  
 値、 <see cref="P:System.Web.UI.Page.Request" /> プロパティを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに関連付けられている <see cref="T:System.Web.UI.Page" /> インスタンスが <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.PersonalizationScope Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PersonalizationScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PersonalizationScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>親の現在のパーソナル化スコープを取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> インスタンスのスコープを示す、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この値は、最初にに基づいて設定から返された値、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Load%2A> メソッドです。 この値は、呼び出すことによって変更できるように、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> メソッドです。  
  
 これを適用して、パーソナル化情報の抽出に使用するスコープを表すことに注意してください。 このプロパティの値が異なる場合があります、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.InitialScope%2A> プロパティまたは <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ChangeScope%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.SetDirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>親のマークを付けます<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />が変更されたパーソナル化データを持つものとしてコントロール \(は「ダーティ」\) です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled%2A>プロパティに設定されている`true`、このメソッドは、親を示します<xref:System.Web.UI.WebControls.WebParts.WebPartManager>「ダーティ」としてを制御します。 実装の詳細によって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>のコントロールのインスタンス<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>、このメソッドはセキュリティ チェックを呼び出し、コード アクセス セキュリティのアクセス許可チェック可能性があります。 内部的には、このメソッドは、<xref:System.Web.UI.WebControls.WebParts.PersonalizationState.SetWebPartManagerDirty%2A>メソッドです。  
  
 なお、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールが内部的には「ダーティ」の状態を追跡し、使用して、マネージャーの"dirtiness"を公開、<xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>プロパティではなく、このメソッドを使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パーソナル化データが読み込まれていません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected virtual void SetDirty (System.Web.UI.WebControls.WebParts.WebPart webPart);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty(class System.Web.UI.WebControls.WebParts.WebPart webPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.SetDirty(System.Web.UI.WebControls.WebParts.WebPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="webPart" Type="System.Web.UI.WebControls.WebParts.WebPart" />
      </Parameters>
      <Docs>
        <param name="webPart">「ダーティ」としてマークする Web パーツ コントロール。</param>
        <summary>変更されたパーソナル化データを持つものとして指定された Web パーツ コントロールのマークを付けます \(は「ダーティ」\) です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsEnabled%2A>プロパティに設定されている`true`、このメソッドは「ダーティ」として指定された Web パーツ コントロールを示します。 実装の詳細によって、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>のコントロールのインスタンス<xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>、このメソッドはセキュリティ チェックを呼び出し、コード アクセス セキュリティのアクセス許可チェック可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">親によって管理されていない Web パーツ コントロールの「ダーティ」としてマークする試行<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />です。</exception>
        <exception cref="T:System.InvalidOperationException">パーソナル化データが読み込まれていません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="ShouldResetPersonalizationState">
      <MemberSignature Language="C#" Value="protected bool ShouldResetPersonalizationState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldResetPersonalizationState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ShouldResetPersonalizationState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を現在のページの個人用設定データがリセットされたかどうかを示す値 \(たとえば、要求が行われたパーソナル化データを基になるデータ ストアから削除する\)。</summary>
        <value>
          <see langword="true" /> 現在のページのパーソナル化状態がリセットされた場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティ設定されている場合 `true`, 、現在のページのパーソナル化状態がリセットされ、コントロールからとそれ以降の個人用設定データの抽出は保存操作をスキップすることを示します。 現時点では、このプロパティに設定が自動的に `true` パーソナル化インフラストラクチャによって場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ResetPersonalizationState%2A> メソッドが呼び出されます。  
  
 このプロパティを設定するときに制限がありませんが、プロパティ設定する必要があります `true` より前のバージョン、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.Page.SaveStateComplete> イベントを有効します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleScope">
      <MemberSignature Language="C#" Value="public virtual void ToggleScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ToggleScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>スイッチから現在のページのパーソナル化スコープ <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> に <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> またはから <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> に <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" />します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、現在実行中のページのパーソナル化スコープを切り替えます。 スコープの切り替えの結果、 <xref:System.Web.HttpServerUtility.Transfer%2A> 現在実行中のページに戻ります。  
  
 エクスポート中に呼び出された、または Web パーツ コントロールのインポートが行われている場合、このメソッドによって操作は実行されません。  
  
 経由で送信されたページの表示\/非表示のスコープの要求が発生したかどうか、 `POST` 要求し、クエリ文字列の値は、転送中に保持されます。 ページを経由で送信された場合、クエリ文字列パラメーターが保持されない、 `GET` 要求します。  
  
   
  
## 例  
 次のコード例を使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> メソッドです。 このコードについては、大規模なコード サンプルの一部である、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> クラスの記述。  
  
 [!code-csharp[WebParts\_WebPartPersonalization\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_WebPartPersonalization/CS/persMode.ascx#7)]
 [!code-vb[WebParts\_WebPartPersonalization\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_WebPartPersonalization/VB/persMode.ascx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在のユーザーに機能がなく、ユーザー入力を <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> から切り替えるしようとしています。 スコープ <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.User" /> 検索対象に <see cref="F:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared" /> スコープ。  
  
 または  
  
 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンスが初期化を完了していません。  
  
 または  
  
 <see cref="T:System.Web.UI.Page" /> 関連付けられたインスタンス <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> は <see langword="null" />です。  
  
 または  
  
 値、 <see cref="P:System.Web.UI.Page.Request" /> プロパティを <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに関連付けられている <see cref="T:System.Web.UI.Page" /> インスタンスが <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">トグル範囲で定義されていないことをしようとしましたが、 <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationScope" /> 列挙します。 技術的には、このような状況は発生しません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" />
      </Docs>
    </Member>
    <Member MemberName="UserCapabilities">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IDictionary UserCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary UserCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.UserCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー権限のセットを取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartUserCapability" /> 、現在のユーザーに付与します。</summary>
        <value>
          <see cref="T:System.Collections.IDictionary" /> 、現在のユーザーまたは空に与えられるユーザー機能のセットを含む <see cref="T:System.Collections.Specialized.HybridDictionary" /> 、ユーザーが匿名の場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在、 <xref:System.Web.UI.WebControls.WebParts.WebPartUserCapability> クラスには、ユーザーの機能を示す 2 つの値が含まれています: `modifyState` と `enterSharedScope`です。 使いやすいように、ディクショナリ内に含まれる機能をチェックしてヘルパー プロパティを持つ <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.IsModifiable%2A> と <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CanEnterSharedScope%2A>です。 これらのプロパティのいずれかの問題がアクセスして、機能の変更に関する制限事項に注意してください。詳細については、各プロパティの \[説明\] セクションを参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <Member MemberName="WebPartManager">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartManager WebPartManager" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.WebPartPersonalization.WebPartManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の親のインスタンスを取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンス。</summary>
        <value>現在の親 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用して、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> のこのインスタンスに関連付けられたコントロール、 <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> クラスです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyPersonalizationState">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>いずれかの個人用設定データを適用、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> に関連付けられたコントロール、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartPersonalization" /> インスタンス、または特定の <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> インスタンス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ExtractPersonalizationState">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>親から個人用設定データを抽出 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="SetDirty">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>親のマークを付けます<see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />が変更されたパーソナル化データを持つものとしてコントロール \(は「ダーティ」\) です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>