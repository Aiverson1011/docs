<Type Name="ProxyWebPartManager" FullName="System.Web.UI.WebControls.WebParts.ProxyWebPartManager">
  <TypeSignature Language="C#" Value="public class ProxyWebPartManager : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProxyWebPartManager extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> コントロールがコンテンツ ページの関連マスター ページで宣言されている場合に、開発者がコンテンツ ページで静的接続を宣言する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 、特定のコントロールが存在する場合にページのコンテンツ内の静的な接続の宣言のシナリオ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> マスター ページに、コントロールは既に宣言されています。  
  
 いずれか \(および 1 つだけ\) 仕様では、Web パーツ コントロールを使用した Web ページがあります <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 、ページ上のすべての Web パーツ コントロールを管理するコントロール。 Web パーツ アプリケーションでは、マスター ページを使用する場合は配置する通常の <xref:System.Web.UI.WebControls.WebParts.WebPartManager> すべてのコンテンツ ページは、実行時に、単一のマスター ページとマージされますので、マスター ページに制御 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールがすべてのコンテンツ ページからすべての Web パーツ コントロールを管理します。 ただし、開発者は、このようなアプリケーションのコンテンツのページに静的な結合を宣言する場合、制限に直面しているはかもしれません。 静的な Web パーツ接続を追加するだけで宣言することができます、\<`asp:webpartconnection>` の子要素として、 `<staticconnections>` 要素自体の子である必要があります、 `<asp:webpartmanager>` 要素。<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールで、マスター ページに既に宣言されて、許可、1 つは <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロール、開発者は、追加で宣言できません <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 静的な接続を追加するコンテンツ ページ内のコントロールです。  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールに代わる、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> このシナリオで制御します。 開発者は、宣言、 `<asp:proxywebpartmanager>` 要素の代わりに、 `<asp:webpartmanager>` 内の要素のコンテンツ ページ、およびことができますし、静的な接続として宣言子要素です。 実行時では、接続、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールに追加されるだけで、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> のコレクション、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> を制御し、その他の接続と同様に扱われます。  
  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールがこの特定の開発のシナリオでのみ使用されるより多くの機能が制限されることにより、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> クラスです。 実際には、ですが、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールの静的な接続が含まれるへのプロキシとして動作、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロール コンテンツ ページでは継承されませんから、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。 直接継承、 <xref:System.Web.UI.Control> クラスし、基本メンバーの一部のみを上書きします。<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>, 、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>, 、および <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> プロパティがオーバーライドされていて、それらの使用を禁止値を代入します。 基本プロパティと同じ動作がそれ以外の場合、デザイン時動作を調整するその他の継承されたプロパティをオーバーライドでは。 以下の <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A> と <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A> プロパティです。 最後に、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> クラスには 1 つの非継承プロパティです。<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティは、静的な接続のコレクションを返します \(、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> オブジェクト\)。  
  
 メソッドの場合と、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> クラスが同様に、使用を制限するには、ほとんどの場合のいくつかメソッドをオーバーライドします。 継承された <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> メソッドが呼び出された場合、例外がスローされて使用不可に行ったします。<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> メソッドは、常にコントロールのコレクションを含めることができなくなるという影響のある、空のコントロール コレクションを返します。 最後に、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> メソッドが基本メソッドを呼び出して、によって参照される接続のコレクションを割り当てます、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName> のプロパティ、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。 これは、ロールアップするすべてのコンテンツ ページで宣言されているすべての静的な接続の効果にすることによって管理される接続のコレクションの一部と、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> マスター ページにコントロールできます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> マスター ページを使用するアプリケーションでのコンテンツのページで、静的な接続を宣言するクラス。 この例では、5 つの部分があります。  
  
-   Web パーツを変更することができますユーザー コントロールは、ページのモードを表示します。  
  
-   インターフェイスと 2 つのコードをソース <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。  
  
-   ユーザー コントロールがコンテンツ ページをホストするマスター Web ページ、および <xref:System.Web.UI.WebControls.WebParts.WebPartManager> アプリケーションのコントロールです。  
  
-   ホストするコンテンツの Web ページ、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロール、2 つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール、および接続は、2 つのコントロールには静的です。  
  
-   ページの例を実行する方法の説明です。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるユーザー コントロールです。 割り当てられているファイル名を付けます .ascx ファイルに次のソース コードを保存、 `Src` の属性、 `Register` ホスティングのマスター ページの上部にあるディレクティブは、このユーザー コントロールをします。 詳細については、このコントロールのモードとソース コードの説明を表示、参照してください [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0)します。  
  
 [!code-csharp[WebParts\_ProxyWebPartManager\_Overview\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-vb[WebParts\_ProxyWebPartManager\_Overview\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 コード例の 2 番目の部分では、インターフェイスとコントロールのソース コードを示します。 ソース ファイルには、という名前の単純なインターフェイスが含まれています。 `IZipCode`します。<xref:System.Web.UI.WebControls.WebParts.WebPart> という名前のクラス `ZipCodeWebPart` インターフェイスを実装であり、プロバイダー コントロールとして機能します。 その `ProvideIZipCode` メソッドは、インターフェイスの唯一のメンバーを実装するコールバック メソッド。 メソッドは、単に、インターフェイスのインスタンスを返します。 メソッドが表示されているメモ、 `ConnectionProvider` メタデータ内の属性です。 これは、プロバイダーの接続ポイントのコールバック メソッドとしてメソッドを識別するためのメカニズムです。 他の <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスの名前は `WeatherWebPart`, 、接続のコンシューマーとして機能するとします。 このクラスはという名前のメソッドを持つ `GetZipCode` のインスタンスを取得する、 `IZipCode` プロバイダー コントロールからのインターフェイスです。 このメソッドとコンシューマーのコネクション ポイントのメソッドとしてマークされることに注意してください、 `ConnectionConsumer` メタデータ内の属性です。  
  
 このコード例を実行するには、このソース コードをコンパイルする必要があります。 明示的にコンパイルし、Web サイトの Bin フォルダーまたはグローバル アセンブリ キャッシュに、生成されたアセンブリを配置できます。 また、ここで、動的にコンパイル実行時に、サイトの App\_Code フォルダーにソース コードを配置することができます。 このコード例では、動的なコンパイルを使用します。 コンパイルする方法について説明するチュートリアルは、次を参照してください。 [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)します。  
  
 [!code-csharp[WebParts\_ProxyWebPartManager\_Overview\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/ZipCodeComponent.cs#4)]
 [!code-vb[WebParts\_ProxyWebPartManager\_Overview\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/ZipCodeComponent.vb#4)]  
  
 コード例の 3 番目の部分は、マスター ページです。 次のソース コードを実行し、MasterPageCS.master または MasterPageVB.master \(言語によってを使用\)、名前を付け、ファイルに保存する必要があります。 マスター ページが含まれたメモ、 `Register` ユーザー コントロールとそれを登録するディレクティブは、ユーザー コントロール、ページの本文に自体を参照します。 マスター ページは、1 つも宣言 `<asp:webpartmanager>` 要素のこのページと関連するすべてのコンテンツ ページを使用します。 最後に、マスター ページは、 `<asp: contentplaceholder>` コンテンツ\] ページが挿入されるページのポイントを宣言する要素。  
  
 [!code-csharp[WebParts\_ProxyWebPartManager\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/MasterPageCS.master#1)]
 [!code-vb[WebParts\_ProxyWebPartManager\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/MasterPageVB.master#1)]  
  
 コード例の 4 番目の部分は、コンテンツのページです。 次のソース コードをコピーし、拡張子が .aspx ファイルに保存する必要があります。 注意してその `Page` ディレクティブを含む、 `MasterFile` 属性をマスター ページを参照してください。 また、このページには、 `Register` を動的にコンパイルされたカスタムを含む App\_Code フォルダーにファイルを登録するディレクティブ <xref:System.Web.UI.WebControls.WebParts.WebPart> 接続に参加しているコントロール。 内で、 `<asp:content>` タグ、ページは、\<`asp:proxywebpartmanager>` 要素に子な `<staticconnections>` は子要素 `<asp:webpartconnection>` 接続の詳細を宣言する要素。 内で、 `<script>` \] ページで、タグ、 `Button1_Click` メソッドは、主にアクセスするいくつかのコードを追加 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> マスター ページにコントロールと <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コンテンツ ページ内のコントロールのページにそれらの詳細情報の一部を書き込みます。  
  
 [!code-csharp[WebParts\_ProxyWebPartManager\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-vb[WebParts\_ProxyWebPartManager\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 ブラウザーでページを読み込んだ後、 **WebPartManager 情報** ボタンをクリックし、についての情報を確認、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> マスター ページにコントロールと <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コンテンツ ページ内のコントロールです。 静的な接続を追跡する対応するプロパティに同じ数がある、どちらもメモなど \(、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティ\)。 なおですが、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールが、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> の数を追跡するプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPart> 、管理対象のコントロール、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールにはそのようなプロパティがない唯一の目的は、静的な接続を含めるには、です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProxyWebPartManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ASP.NET によって生成される HTML マークアップのコントロール ID を取得します。</summary>
        <value>ASP.NET によって生成される HTML マークアップのコントロール ID。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>UI 階層内の指定されたサーバー コントロールの子コントロールを表す <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトを取得します。</summary>
        <value>指定されたサーバー コントロールの子コントロールのコレクション。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>防ぐための基本プロパティをオーバーライド、 <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> コントロールのコントロールを含んでいるからです。</summary>
        <returns>常に <see cref="T:System.Web.UI.EmptyControlCollection" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A> メソッドは、基本メソッドを防ぐために、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールが含まれていて、コントロールのコレクションを返すからです。 唯一の目的では、マスター ページを使用するアプリケーション内のコンテンツ ページで宣言する静的な接続を有効にします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーマが使用されていることを防ぐために、基本プロパティを上書きします。</summary>
        <value>常に返します <see langword="false" />, 、テーマの使用を禁止します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A> プロパティと共に使用するからテーマを防ぐために基本のプロパティのオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールです。 使用されている任意のテーマを使用して、競合に送信されることを回避するため、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> マスター ページにコントロール \(その <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=fullName> を常に返します `true`\)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元は、このプロパティに値を代入しようとします。</exception>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メソッドが呼び出されていることを防ぐために、基本メソッドをオーバーライドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A> メソッドは、基本メソッドをオーバーライドし、任意の呼び出し元はメソッドを呼び出そうとすると、例外をスローします。 これは、継承された <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> ユーザー インターフェイス \(UI\) を持つコントロールのメソッドが設計されていますが、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールは、UI がないと、そのため、フォーカスを設定する必要がないです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元は、このメソッドを呼び出すことを試みます。</exception>
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>発生させる、 <see cref="E:System.Web.UI.Control.Init" /> イベントと、コントロールを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A> メソッドが基本メソッドを呼び出して、初期化するためにタスクを実行し、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールです。 このメソッドの重要なタスクがによって参照される接続のコレクションを割り当てるには、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName> コレクションです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartManager" /> 関連付けられているマスター ページからコントロールが <see langword="null" />です。</exception>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>値が割り当てられていることを防ぐために、基本プロパティを上書きします。</summary>
        <value>常に空の文字列を返します \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A> プロパティのオーバーライドに使用されるを防止する効果を持つ基本プロパティを値が、それに割り当てられていることを防ぐためにスキン、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールです。 これは、コントロールがページ上のユーザー インターフェイス \(UI\) を公開しないためです。 によって、同じ動作が実装される、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> の制御、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=fullName> プロパティです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元は、このプロパティに値を代入しようとします。</exception>
        <altmember cref="P:System.Web.UI.Control.SkinID" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID" />
      </Docs>
    </Member>
    <Member MemberName="StaticConnections">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>内で宣言された静的な接続のコレクションを取得、 <see langword="&lt;asp:proxywebpartmanager&gt;" /> \[コンテンツ\] ページの要素。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection" /> を含むすべての静的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" /> 内で宣言されたオブジェクト、 <see langword="&lt;asp:proxywebpartmanager&gt;" /> 要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティのコレクションを参照する <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> で宣言されたオブジェクト、 `<asp:proxywebpartmanager>` 要素。 このコレクションに含まれている接続の静的な接続を追加、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロール \(により参照されているその <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName> コレクション\) に関連付けられているその他のすべての接続とまったく同じように扱われます、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールです。  
  
 宣言型の要素に対応する、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティは、 `<staticconnections>` 要素。 マスター ページを使用するアプリケーションで、 `<staticconnections>` の子として要素を追加、 `<asp:proxywebpartmanager>` コンテンツ ページの要素と `<asp:webpartconnection>` 要素が追加の子としてしてさらに、 `<staticconnections>` 要素。 複数 `<asp:webpartconnection>` 要素が 1 つに追加できる `<staticconnections>` 要素、および複数のコンテンツ ページは、マスター ページ アプリケーションの一部として静的な接続を宣言できます。  
  
   
  
## 例  
 次のコード例では、使用して、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> クラスです。 このコード例は、コードを宣言するコンテンツ\] ページからの関連部分のみ、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 制御と静的な接続です。 コード例と、その設定方法の説明を実行するために必要な他のページの使用例」を参照してください、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> クラスの概要です。  
  
 次のコードは、コンテンツ ページを宣言する、 `<staticconnections>` の子要素として、 `<asp:proxywebpartmanager>` 要素。 また、 `Button1_Click` メソッドの数をチェックする、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> を制御し、ページに書き込みます。  
  
 [!code-csharp[WebParts\_ProxyWebPartManager\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/CS/contentPage1CS.aspx#2)]
 [!code-vb[WebParts\_ProxyWebPartManager\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ProxyWebPartManager_Overview/VB/contentPage1VB.aspx#2)]  
  
 ブラウザーでページを読み込んだ後、 **WebPartManager 情報** ボタンをクリックし、についての情報を確認、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> マスター ページにコントロールと <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コンテンツ ページ内のコントロールです。 静的な接続を追跡する対応するプロパティに同じ数がある、どちらもメモなど \(、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> プロパティ\)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>値が割り当てられていることを防ぐために、基本プロパティを上書きします。</summary>
        <value>常に返します <see langword="false" />, コントロールを表示しないようにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A> プロパティのオーバーライドを防ぐために、基本プロパティ、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> コントロールをこれまで、認識されるからです。<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> 制御と同様に、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager> 、管理、ユーザー インターフェイス \(UI\) を持たないや、ユーザーに表示されることはありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">呼び出し元は、このプロパティに値を代入しようとします。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.Visible" />
        <altmember cref="P:System.Web.UI.Control.Visible" />
      </Docs>
    </Member>
  </Members>
</Type>