<Type Name="ConnectionsZone" FullName="System.Web.UI.WebControls.WebParts.ConnectionsZone">
  <TypeSignature Language="C#" Value="public class ConnectionsZone : System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConnectionsZone extends System.Web.UI.WebControls.WebParts.ToolZone" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> と、<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> ゾーンにある他のサーバー コントロールとの間の接続をユーザーが確立できるようにするユーザー インターフェイス \(UI\) を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Using the Web Parts control set, you can enable two server controls to form a connection and share data, with one control acting as the provider, and the other acting as the consumer of the data. The two controls can be <xref:System.Web.UI.WebControls.WebParts.WebPart> controls or any other type of server control, provided that they are designed to handle connections, and that they are residing in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone. To learn more about Web Parts connections, see the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> and <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overviews, as well as [Web Parts Connections Overview](http://msdn.microsoft.com/ja-jp/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 Provided that the requisite controls and conditions exist to form a Web Parts connection, it is still necessary to actually connect the controls. There are three ways to form a connection between server controls: declaring a connection in a Web page, creating a connection in code, or adding a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control to the page so that users can connect the controls on demand. The <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control generates a UI that enables users to connect or disconnect any server controls on a page that meet the conditions necessary to form a connection. It is an optional control that is not necessary to form connections, but is useful in the case where you want to give users control over which server controls are connected or disconnected.  
  
 The <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is one of the Web Parts tool zone controls that inherit from the <xref:System.Web.UI.WebControls.WebParts.ToolZone> base class. As a tool zone, the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is designed to be visible only when its Web page is in a certain display mode. In this case, the display mode is named connect mode \(a page is in this mode when the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the page has its <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property value set to <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>\). After users switch a page into connect mode, they must click a connect verb on the verbs menu of one of the server controls, and then the connection UI becomes visible.  
  
 As a Web Parts zone control, the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is a type of <xref:System.Web.UI.WebControls.WebParts.WebZone> zone \(which inherits from the <xref:System.Web.UI.WebControls.CompositeControl> class\) designed to contain other controls. In general, a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> zone has most of the same elements as other Web Parts tool zones: a header, a body or contents area, and a footer. For a complete discussion of what a Web Parts zone is, and the different parts of a zone, see the <xref:System.Web.UI.WebControls.WebParts.WebZone> class overview.  
  
> [!IMPORTANT]
>  Unlike most other Web Parts zones, it is important to note that a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> zone does not contain a unique type of server control associated with it. For a list of zones and the associated controls they contain, see the chart in the <xref:System.Web.UI.WebControls.WebParts.WebZone> class overview. But the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> zone does not contain <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> controls. Instead, it serves a very limited purpose of providing a UI for users to connect or disconnect server controls that exist in some <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone on the page. The only controls contained in a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control are the standard ASP.NET server controls that it generates as part of its UI for forming connections.  
  
 When the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is rendered, it generates a UI based on the server controls on the page that are capable of forming connections. The <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control determines which server controls in the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone on the page are providers, which are consumers, which connection points are available, and whether the server controls are currently connected or disconnected, and then it generates the UI accordingly.  
  
 For example, suppose there is one <xref:System.Web.UI.WebControls.WebParts.WebPart> control capable of being a provider, one <xref:System.Web.UI.WebControls.WebParts.WebPart> control capable of being a consumer, they are declared in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> on the page, and they are currently disconnected. When a user switches the page to connect mode and clicks the connect verb on one of the controls, the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control generates a UI with a link that, when clicked, displays a form in which users can choose options to create a connection. \(If the controls were previously connected, the initial view instead presents users with a button to disconnect the controls\). In the connection UI for creating new connections, users are shown which control is a provider, and which control is a consumer. A drop\-down list control appears below each server control, listing the available <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for the control. From the respective drop\-down lists, users must select one <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object for the provider \(to determine what interface and data will be shared with consumers\), and one <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object for each consumer \(to determine what interface and data the consumer will consume\) that will be connected to the provider.  
  
> [!NOTE]
>  In the Web Parts control set default implementation, one provider can connect to many consumers, but a consumer can have only one provider.  
  
 To use the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control, you can declare it within the **languageKeyword tag is not supported!!!!**  
 element on a Web page \(but not nested within another Web Parts zone element\), using the **languageKeyword tag is not supported!!!!**  
 element, or you can add it to the page programmatically. If you declare the element in a page, unlike the other Web Parts zones, you cannot declare any other type of server controls between the tags of the **languageKeyword tag is not supported!!!!**  
 element. You can declare elements within it that relate to its own properties and style details, but it is a standalone element and is not a template control within which other server controls can be declared.  
  
> [!NOTE]
>  To improve accessibility, the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is rendered within a **languageKeyword tag is not supported!!!!**  
>  element. The **languageKeyword tag is not supported!!!!**  
>  element groups the related set of controls used for establishing connections in the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control, and it facilitates tabbed navigation among those controls for both visual user agents \(such as ordinary Web browsers\) and speech\-oriented user agents \(such as screen\-reading software\).  
  
 The <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control has a number of properties it uses for rendering the connection UI. One set of properties includes several verbs\-\-used only in relation to connections\-\-that carry out actions in the UI: <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A>, and <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A>. A large set of properties, used especially for the connections zone UI, consists of text strings displayed at various places \(or in certain situations, such as when errors occur\) in the UI: <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A>, and <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A>. The <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> class also contains a number of common properties found in other Web Parts zones: <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Display%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A>, <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A>, and <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType%2A>. Finally, the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> property is unique to the class, referencing the control that initiates the connection \(this is the control on which the user clicks the connect verb in its verbs menu, which is also the control referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> property\).  
  
 The <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> class also has a number of methods, all of which are inherited and overridden from base classes, and most of them come from the base Web Parts zone classes. For details, see the individual methods.  
  
   
  
## 例  
 The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on a Web Parts page. The example has four parts:  
  
-   A user control that enables you to switch display modes on the Web page.  
  
-   A source file that contains the code for a ZIP Code interface, and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.  
  
-   A Web page that hosts all the controls, demonstrates how to declare an **languageKeyword tag is not supported!!!!**  
     element, and sets a number of properties on the connections zone declaratively and programmatically.  
  
-   An explanation of how the example works in a browser.  
  
 The first part of this code example is the user control that enables users to switch display modes on a Web page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](http://msdn.microsoft.com/ja-jp/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 The second part of the example is the source file with the interface and custom controls. Notice that the `ZipCodeWebPart` control implements the `IZipCode` interface, adding a **languageKeyword tag is not supported!!!!**  
 attribute so that the control can act as a provider for a connection. The `WeatherWebPart` control has a method marked with a **languageKeyword tag is not supported!!!!**  
 attribute, where it consumes the `IZipCode` interface, so it can act as a consumer in a connection.  
  
 For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App\_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Server Control](http://msdn.microsoft.com/ja-jp/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/ZipCodeComponent.vb#2)]  
  
 The third part of the example code is the Web page. Near the top are **languageKeyword tag is not supported!!!!**  
 directives for the user control and the custom controls used in the connection. An \<**languageKeyword tag is not supported!!!!**  
 element is declared in the page as an example of using the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control declaratively. Within the element, a number of properties are set declaratively. Other properties on the connections zone are set programmatically in the **languageKeyword tag is not supported!!!!**  
 section of the page.  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 Load the Web page in a browser. Use the **ui tag is not supported!!!!**  
 drop\-down list control to switch the page to connect mode. On the verbs menu of the **ui tag is not supported!!!!**  
 control \(the verbs menu is indicated by the downward arrow in the control's title bar\), click the connect verb. A <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control appears. Note that in the connection UI, an **ui tag is not supported!!!!**  
 button appears; the connection has already been declared in the markup of the page, so the controls are already connected. Click **ui tag is not supported!!!!**  
, and then use the **ui tag is not supported!!!!**  
 control again to return the page to browse mode. Next, return the page to connect mode again, click the connect verb on one of the controls, and note that the connection UI now displays a hyperlink that enables you to form a connection between the controls. Click the link, and use the connection UI to select connection points and establish the connection.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>The <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> class can be extended, if developers want to change its behavior or the default UI that it provides for working with connections.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebZone" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionsZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この既定のコンス トラクターは、宣言するときに呼び出されますが、 `<asp:connectionszone>` ASP.NET ページ内の要素。 暗黙的にこのコンス トラクター以外の場合に呼び出す、追加するコントロールのページにプログラムで必要はありません。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.%23ctor%2A> の新しいインスタンスを作成するコンス トラクター、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> プログラムを使用して Web ページに追加するコントロール。 例には、コンス トラクターの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページと、その `Page_Init` メソッドを使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.%23ctor%2A> の新しいインスタンスを作成するコンス トラクター、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> を制御し、ページに追加します。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページ上で、 `Page_Init` メソッドは、新しい <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールが \(コンス トラクターを使用して\) 作成され、ページに追加します。 ユーザーが接続モードに設定しのいずれかの connect 動詞をクリックする、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロール、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールが表示されます。  
  
 [!code-csharp[WebParts\_ConnectionZone\_ctor\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_ctor/CS/connectionZoneCtorCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_ctor\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_ctor/VB/connectionZoneCtorVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 接続 UI が表示され、コントロールは、接続が、ページのマークアップで宣言されているために既に接続しています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 接続を確立するプロセスをキャンセルするエンドユーザーを有効にするオブジェクト。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザーが 2 つのコントロールを接続するには、この処理を取り消します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Cancel 動詞で使用される、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロール、ゾーン レベル動詞が含まれている接続のユーザー インターフェイス \(UI\) ビューの一部としてユーザーには、コントロールの接続ポイントを選択します。 Cancel 動詞をクリックすると、接続ポイントを選択した場合のプロセスをキャンセル、接続のゾーンの表示をユーザーが新しい接続を確立するためにクリックして、ハイパーリンクに返します。  
  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A> 対応への参照を取得するプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 、UI 内のオブジェクト。 プロパティ自体は読み取り専用動詞への参照を作成したら、必要に応じて、プロパティの値を変更できます。  
  
 宣言することにより宣言によって、cancel 動詞のプロパティ値を設定することができます、 `<cancelverb>` のタグ内の要素、 `<asp:connectionszone>` 要素。 フォームで、動詞のプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> オブジェクト \(たとえば、 `CancelVerb-Text`\)。 プログラムでは、フォームにもプロパティを設定することができます `Property.Subproperty` \(たとえば、 `CancelVerb.Text`\)。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素宣言によって、プログラムを使用してプロパティを使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素を宣言、要素内で、 `<cancelverb>` 要素および属性を使用して一部のプロパティを設定します。 また、 `Page_PreRender` メソッド、コードは、の \[キャンセル\] 動詞にいくつかのプロパティを設定、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 クリックして、 **エンド接続** ページの宣言型の接続のために既に接続されているコントロールを切断する\] ボタンをクリックします。 クリックして、 **に接続するプロバイダーのコンシューマーを選択** ハイパーリンク、およびさまざまなプロパティの設定の影響に注意してください。 上にマウス ポインターを置く場合、 **Terminate** \] ボタン、カスタムの説明テキストがツールヒントに表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Close" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>によって作成された接続のユーザー インターフェイス \(UI\) を閉じ、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Close%2A> 接続 UI 内のゾーン レベル閉じる動詞をクリックすると、メソッドが呼び出されます。 メソッドの実行、UI を表示すると、接続後、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> プロパティの値が `null`, 、接続の表示モードでページを開いたままです。 この時点でユーザー コントロールの動詞メニューの connect 動詞をクリックして、コントロールを選択したりできますページを別の表示モードに切り替えます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> によって作成された接続のユーザー インターフェイス \(UI\) を終了するエンドユーザーを有効にするオブジェクト、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> エンドユーザー UI の接続を閉じることができます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用すると、close 動詞、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> ゾーン レベル動詞接続 UI の下部 \(フッター\) で表示されるは、制御します。 ユーザーは、閉じる動詞をクリックして、接続プロセスをキャンセルし、UI の接続を閉じますがリーフ ページは接続の表示モード。 この時点では、ユーザーはブラウズ モードか、UI の接続をもう一度別のサーバー コントロールの connect 動詞をクリックしてページを返すことができますか。  
  
 Close の動詞は、ヘッダーの close 動詞を区別する必要があります \(詳細については、「、 <xref:System.Web.UI.WebControls.WebParts.ToolZone.HeaderCloseVerb%2A> プロパティ\). 両方の動詞が接続 UI を閉じるという同じアクションを実行しますが、ヘッダー閉じる動詞は、UI の上部に表示し、close 動詞が、UI の下部に表示され、既定ではボタンによって表される、既定では、ハイパーリンクによって表されます。  
  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A> 対応への参照を取得するプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 、UI 内のオブジェクト。 プロパティ自体は読み取り専用動詞への参照を作成したら、必要に応じて、プロパティの値を変更できます。  
  
 宣言することにより宣言によって、close 動詞のプロパティ値を設定することができます、 `<closeverb>` のタグ内の要素、 `<asp:connectionszone>` 要素。 フォームで、動詞のプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> オブジェクト \(たとえば、 `CloseVerb-Text`\)。 プログラムでは、フォームにもプロパティを設定することができます `Property.Subproperty` \(たとえば、 `CloseVerb.Text`\)。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.CloseVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素宣言によって、プログラムを使用してプロパティを使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素を宣言、要素内で、 `<closeverb>` 要素と属性を使用してプロパティを設定します。 さらに、 `Page_PreRender` メソッド、コードでプロパティを設定、close の動詞、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 クリックして、 **エンド接続** ページの宣言型の接続のために既に接続されているコントロールを切断する\] ボタンをクリックします。 クリックして、 **に接続するプロバイダーのコンシューマーを選択** ハイパーリンク、およびさまざまなプロパティの設定の影響に注意してください。 上にマウス ポインターを置く場合、 **Close Zone** 接続 UI の下部にあるボタンをカスタムの説明テキストがツールヒントに表示されます。 接続のゾーンの上部にあるヘッダーの close 動詞は、ハイパーリンクによって表される close 動詞 \[のプロパティの割り当てには、ヘッダーの close 動詞に影響を与えるないことに注意してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureConnectionTitle">
      <MemberSignature Language="C#" Value="public virtual string ConfigureConnectionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConfigureConnectionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によって作成された接続のユーザー インターフェイス \(UI\) のサブセクションの見出しとして表示されるテキスト、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> コントロールです。</summary>
        <value>接続の構成セクションのタイトルを含む文字列。 既定のタイトルは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> 接続 UI のこのセクションのタイトルのカスタム値を使用するプロパティです。 ユーザーが既存の接続と接続 UI が表示されますが、構成動詞をクリックすると、UI の接続の構成セクションが表示されます \(既定では、これは、 **構成** 接続 UI のボタン\)。  
  
 文字列を割り当てることにより宣言によって、プロパティの値を設定することができます、 `configureconnectiontitle` 属性を `<asp:connectionszone>` Web ページ内のタグ。 または、プログラムを使用して文字列をプロパティに割り当てることができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素、し、\[、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 接続が既に存在しないので、表示されるように、 **エンド接続** ボタン、および **構成** configure 動詞を表すボタン。 接続されて構成可能な場合 \(そうでないこのコード例では\)、 **構成** ボタンが有効になります;\] をクリックして接続の構成セクションを開くことが、タイトルにコードが割り当てられた値になります、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConfigureVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConfigureVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> オブジェクトの接続のユーザー インターフェイス \(UI\) の構成の表示を開くために使用します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> UI の接続で接続の構成セクションを開くために使用します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Configure 動詞は、接続は既に存在し、ユーザーが UI の接続を開いたときに、UI、接続の接続の管理セクションに表示されます。 UI を持つユーザーを表示する、 **エンド接続** \] ボタンをクリックして、接続を終了して、 **構成** ボタン \(を構成する動詞を表す\)、接続の構成をします。 ユーザーがクリックした場合、 **構成** \] ボタン、UI の接続の構成セクションが表示されたら、接続を構成するユーザーを有効にするとします。 接続を構成するには、このオプション \(しないため、 **構成** \] ボタンをクリック\) 接続、トランスフォーマーを使用して、変換には、構成ウィザード コントロールが含まれています。 場合にのみ有効 \(<xref:System.Web.UI.WebControls.Wizard>\) ユーザーが構成することができるようにします。 詳細については、「、 <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> クラスです。  
  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A> 対応への参照を取得するプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 、UI 内のオブジェクト。 プロパティ自体は読み取り専用動詞への参照を作成したら、必要に応じて、プロパティの値を変更できます。  
  
 宣言することにより宣言によって、configure 動詞のプロパティ値を設定することができます、 `<configureverb>` のタグ内の要素、 `<asp:connectionszone>` 要素。 フォームで、動詞のプロパティを宣言によって設定できます `Property-Subproperty`, ここで、 `Subproperty` のプロパティ、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> オブジェクト \(たとえば、 `ConfigureVerb-Text`\)。 プログラムでは、フォームにもプロパティを設定することができます `Property.Subproperty` \(たとえば、 `ConfigureVerb.Text`\)。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素宣言によって、プログラムを使用してプロパティを使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素を宣言、要素内で、 `<configureverb>` 要素と属性を使用してプロパティを設定します。 また、 `Page_PreRender` メソッド、コードでプロパティを設定の構成の動詞、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 あることに注意してください、 **エンド接続** を既に接続されているコントロールを切断する\] ボタンをクリックし、無効な **構成** \] ボタンをクリックします。 コード例は、構成ウィザードが含まれているトランスフォーマーを使用する場合、 **構成** ボタンを有効になりますとの接続を構成するときにユーザーをクリックしています。 上にマウス ポインターを置く場合、 **構成** 接続 UI でボタンをカスタムの説明テキストがツールヒントに表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConfigureConnectionTitle" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが、プロバイダーに接続するコンシューマー接続ポイントを選択する、接続ユーザー インターフェイス \(UI\) のセクションに表示される説明テキストを設定します。</summary>
        <value>プロバイダーへの接続をコンシューマーを作成するための手順を含む文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、プロバイダー コントロールの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロール接続コンシューマーを選択できる UI の一部が表示されます。 ユーザーには、コンシューマーの connect 動詞がクリックすると、接続 UI は、逆の操作し、プロバイダーへの接続に関する情報を表示します。  
  
 内のテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> プロパティは、プロバイダーが接続できる利用可能なコンシューマー接続ポイントを格納しているドロップダウン リスト コントロールのすぐ上に表示されます。  
  
 使用して宣言によって、このプロパティを設定することができます、 `ConnectToConsumerInstructionText` の開始タグの属性、 `<asp:connectionszone>` するか、ページ内の要素では、このプロパティをプログラムで設定できます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 をクリックして、 **エンド接続** \] ボタンをクリックすると、接続を終了し、 **に接続するプロバイダーのコンシューマーを選択** ハイパーリンクです。 コンシューマー接続 UI が表示されに割り当てられているカスタムのテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText%2A> だけ領域の上に、プロバイダーへの接続用のコンシューマー接続ポイントを選択できるように、コントロールでプロパティが表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがクリックすると、接続のコンシューマー コントロールを選択できるビューを開くハイパーリンクのテキストを設定します。</summary>
        <value>ユーザーが消費者を選択するビューを開くハイパーリンクのテキストとして表示される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーは、プロバイダー コントロールの connect 動詞をクリックし、接続が存在しない場合、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールに表示されるテキストとハイパーリンク **を使用して接続するプロバイダーのコンシューマーを選択**します。 ユーザーは、ハイパーリンクをクリックして、プロバイダーとの接続に使用できるコンシューマーをユーザーが選択できるビューが開きます。  
  
 使用して宣言によって、このプロパティを設定することができます、 `ConnectToConsumerText` の開始タグの属性、 `<asp:connectionszone>` するか、ページ内の要素では、このプロパティをプログラムで設定できます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 クリックして、 **エンド接続** 、接続を終了するボタンをクリックし、\[に割り当てられているカスタム テキストとハイパーリンクが表示されることに注意してください、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToConsumerTitle">
      <MemberSignature Language="C#" Value="public virtual string ConnectToConsumerTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToConsumerTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセクションのタイトルのテキストをユーザーが接続する特定のコンシューマーを選択できる接続のユーザー インターフェイス \(UI\) に設定します。</summary>
        <value>ユーザーが消費者を選択するセクションのタイトルとして使用される文字列。 既定のタイトルは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーは、プロバイダー コントロールで connect 動詞をクリックすると、接続が存在しない、ときは、以前に選択したプロバイダーを使用して接続するコンシューマーを選択できますビューが最終的に表示します。 このビューのタイトルがによって提供される、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> プロパティです。  
  
 使用して宣言によって、このプロパティを設定することができます、 `ConnectToConsumerTitle` の開始タグの属性、 `<asp:connectionszone>` するか、ページ内の要素では、このプロパティをプログラムで設定できます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 クリックして、 **エンド接続** 、接続を終了するボタンをクリックし、\[コンシューマーを選択するリンクをクリックします。 コンシューマーを選択するためのビューで、セクションのタイトルのテキストが、コードがテキストであることを確認します、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerTitle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToConsumerText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーが、コンシューマーに接続するプロバイダー接続ポイントを選択する、接続ユーザー インターフェイス \(UI\) のセクションに表示される説明テキストを設定します。</summary>
        <value>コンシューマーにプロバイダーの接続の作成方法を含む文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、コンシューマー コントロールの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、接続プロバイダーを選択できる UI の一部が表示されます。 ユーザーには、プロバイダーの connect 動詞がクリックすると、接続 UI は、逆の操作し、コンシューマーへの接続に関する情報を表示します。  
  
 内のテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> プロパティは、コンシューマーが接続できる利用可能なプロバイダー接続ポイントを格納しているドロップダウン リスト コントロールのすぐ上に表示されます。  
  
 使用して宣言によって、このプロパティを設定することができます、 `ConnectToProviderInstructionText` の開始タグの属性、 `<asp:connectionszone>` するか、ページ内の要素では、このプロパティをプログラムで設定できます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 をクリックして、 **エンド接続** \] ボタンをクリックすると、接続を終了し、 **接続するコンシューマーにプロバイダーを選択して** ハイパーリンクです。 プロバイダー接続 UI が表示されに割り当てられているカスタムのテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText%2A> がコンシューマーと接続するため、プロバイダーの接続ポイントを選択できるようにコントロールを使用領域のすぐ上にプロパティが表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderText">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーがクリックすると、接続のプロバイダーのコントロールを選択できるビューを開くハイパーリンクのテキストを設定します。</summary>
        <value>ユーザーがプロバイダーを選択するビューを開くハイパーリンクのテキストとして表示される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、コンシューマー コントロールの connect 動詞をクリックし、接続が存在しない場合、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールがテキストにハイパーリンクを表示 **に接続するコンシューマーにプロバイダーを選択して**します。 ユーザーがハイパーリンクをクリックすると、コンシューマーとの接続に使用可能なプロバイダーを選択できますビューが開きます。  
  
 使用して宣言によって、このプロパティを設定することができます、 `ConnectToProviderText` の開始タグの属性、 `<asp:connectionszone>` するか、ページ内の要素では、このプロパティをプログラムで設定できます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 クリックして、 **エンド接続** 、接続を終了するボタンをクリックし、\[に割り当てられているカスタム テキストとハイパーリンクが表示されることに注意してください、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderText%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConnectToProviderTitle">
      <MemberSignature Language="C#" Value="public virtual string ConnectToProviderTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectToProviderTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはセクションのタイトルのテキストをユーザーが接続する特定のプロバイダーを選択できます接続ユーザー インターフェイス \(UI\) に設定します。</summary>
        <value>ユーザーがプロバイダーを選択するセクションのタイトルとして使用される文字列。 既定のタイトルは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザー コンシューマー コントロールに接続する動詞をクリックすると、接続が存在しない、ときは、選択済みのコンシューマーを使用して接続するプロバイダーをユーザーが選択できるビューが最終的に表示します。 このビューのタイトルがによって提供される、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> プロパティです。  
  
 使用して宣言によって、このプロパティを設定することができます、 `ConnectToProviderTitle` の開始タグの属性、 `<asp:connectionszone>` するか、ページ内の要素では、このプロパティをプログラムで設定できます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 クリックして、 **エンド接続** 、接続を終了するボタンをクリックし、\[プロバイダーを選択するリンクをクリックします。 プロバイダーを選択するためのビューで、セクションのタイトルのテキストが、コードがテキストであることを確認します、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectToProviderTitle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      </Docs>
    </Member>
    <Member MemberName="ConnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb ConnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 2 を有効にするオブジェクト <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの接続を確立します。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 2 つのコントロールの接続を確立できるようにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Connect 動詞で使用される、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> 、ゾーン レベル動詞が含まれている接続のユーザー インターフェイス \(UI\) ビューの一部としてユーザーに 2 つのコントロール間の接続の最終処理を制御します。 ユーザーが接続ポイントを選択する UI の一部で、UI の下部にある connect 動詞が有効になっている場合は 2 つのコントロールをユーザーが接続するためです。 接続ポイントを選択すると、ユーザーは、接続を作成する connect 動詞をクリックすることができます。  
  
> [!NOTE]
>  ゾーン レベルの接続このトピックで説明した動詞は実際に、コントロール間の接続を確立し、動詞の動詞メニューに表示されるとは異なる、 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 コントロールは、接続を形成する場合は、表示モードを接続する Web ページを切り替えるときに、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 接続動詞メニューの動詞が表示されます。 これは、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 接続動詞が単に UI によって作成された接続を開き、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 これに対し、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A> ゾーン レベルで動作する、このトピックで説明した動詞が実際には接続を作成します。  
  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A> 対応への参照を取得するプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 、UI 内のオブジェクト。 プロパティ自体は読み取り専用動詞への参照を作成したら、必要に応じて、プロパティの値を変更できます。  
  
 宣言することにより宣言によって、connect 動詞のプロパティ値を設定することができます、 `<connectverb>` 要素開始タグと終了タグの間、 `<asp:connectionszone>` 要素。 動詞のプロパティ設定することも宣言の開始タグ内で、 `<asp:connectionszone>` 要素の形式で属性を追加することで、 `Property-Subproperty`, ここで、 `Subproperty` のプロパティは、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> オブジェクト \(たとえば、 `ConnectVerb-Text`\)。 プログラムでは、フォームにもプロパティを設定することができます `Property.Subproperty` \(たとえば、 `ConnectVerb.Text`\)。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConnectVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素宣言によって、プログラムを使用してプロパティを使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言、 `<asp:connectionszone>` 要素と、要素タグ内で宣言、 `<connectverb>` 要素および属性を使用して一部のプロパティを設定します。 また、 `Page_PreRender` メソッド、コードは、いくつかのプロパティの設定の connect 動詞、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 クリックして、 **エンド接続** ページの宣言型の接続のために既に接続されているコントロールを切断する\] ボタンをクリックします。 クリックして、 **に接続するプロバイダーのコンシューマーを選択** ハイパーリンク、およびさまざまなプロパティの設定の影響に注意してください。 上にマウス ポインターを置く場合、 **接続コントロール** \] ボタン、カスタムの説明テキストがツールヒントに表示されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="ConsumersInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ConsumersInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumersInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または接続が既に存在する場合は、接続のユーザー インターフェイス \(UI\) のコンシューマー セクションに示すように説明のテキストを設定します。</summary>
        <value>接続に参加しているコンシューマーの説明のテキストとして使用される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーは、プロバイダー コントロールの connect 動詞をクリックし、接続が既に存在するときに、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、ユーザーは、接続を切断することができるビューが表示されます。 また、接続に参加しているすべてのコンシューマーが表示されます。 消費者の一覧のすぐ上、既定では、コンシューマー コントロールが接続で実行する内容の説明をコンシューマーの命令テキストです。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `ConsumersInstructionText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 割り当てられているカスタムのテキストのコンシューマーのセクションで確認して、既存の接続用に開かれたビューで、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ConsumersTitle">
      <MemberSignature Language="C#" Value="public virtual string ConsumersTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConsumersTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または接続が既に存在する場合は、接続のユーザー インターフェイス \(UI\) のコンシューマー セクションの上に表示されるタイトルを設定します。</summary>
        <value>接続に参加しているコンシューマーのタイトルのテキストとして使用される文字列。 既定のタイトルは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーは、プロバイダー コントロールの connect 動詞をクリックし、接続が既に存在するときに、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、ユーザーは、接続を切断することができるビューが表示されます。 また、接続に参加しているすべてのコンシューマーが表示されます。 消費者の一覧のすぐ上、指示テキストでありことコンシューマー セクションのタイトルを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> プロパティがテキストを提供します。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `ConsumersTitle` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 割り当てられているカスタムのテキストのコンシューマーのセクションで確認して、既存の接続用に開かれたビューで、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.CreateChildControls" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>含まれているすべての子コントロールを作成、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> サーバーへの投稿または表示のための準備で制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、ベース <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> メソッドです。 接続に必要なすべての接続に関連するオブジェクトを準備 \(たとえば、ポイントの接続オブジェクトから取得コンシューマーとプロバイダーの使用可能なコントロール\)、さまざまなユーザー インターフェイス \(UI\) コントロールを作成して、ユーザーが接続の接続を確立するための UI でやり取りします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb DisconnectVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb DisconnectVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>参照を取得、 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 2 つの接続を切断するユーザーを有効にするオブジェクトが接続されている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 接続されている 2 つの接続を解除する <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用される、切断動詞、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロール、ゾーン レベル動詞が含まれている接続のユーザー インターフェイス \(UI\) ビューの一部としてユーザーには、2 つのコントロール間の既存の接続を管理します。 ユーザーがクリックした後、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 、コントロールの動詞メニューの動詞を接続し、UI が表示されたら、次の 2 つのコントロール間の接続が既にある場合、接続切断動詞は、UI の下部にあるアクティブ化された表示されます。  
  
 使用して、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A> 対応への参照を取得するプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> 、UI 内のオブジェクト。 プロパティ自体は読み取り専用動詞への参照を作成したら、必要に応じて、プロパティの値を変更できます。  
  
 宣言することにより宣言によって、切断動詞のプロパティ値を設定することができます、 `<disconnectverb>` 要素開始タグと終了タグの間、 `<asp:connectionszone>` 要素。 動詞のプロパティ設定することも宣言の開始タグ内で、 `<asp:connectionszone>` 要素の形式で属性を追加することで、 `Property-Subproperty`, ここで、 `Subproperty` のプロパティは、 <xref:System.Web.UI.WebControls.WebParts.WebPartVerb> オブジェクト \(たとえば、 `DisconnectVerb-Text`\)。 プログラムでは、フォームにもプロパティを設定することができます `Property.Subproperty` \(たとえば、 `DisconnectVerb.Text`\)。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.DisconnectVerb%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素宣言によって、プログラムを使用してプロパティを使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言、 `<asp:connectionszone>` 要素と、要素タグ内で宣言、 `<disconnectverb>` 要素および属性を使用して一部のプロパティを設定します。 また、 `Page_PreRender` メソッド、コードは、いくつかのプロパティの設定の切断動詞、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **ZIP コード プロバイダー** 制御、および connect 動詞をクリックします。 切断動詞に設定されたプロパティ値の影響に注意してください。 上にマウス ポインターを置く場合、 **エンド接続** \] ボタン、カスタムの説明テキストがツールヒントに表示されます。 クリックして、 **エンド接続** ページの宣言型の接続のために既に接続されているコントロールを切断する\] ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.CancelVerb" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="protected override bool Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Display" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> コントロールが現在表示されているかどうかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.ToolZone" /> が現在表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.Display" />
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、空に表示されるテキスト メッセージ <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> が不足しているコントロールの接続を確立するために、Web ページ上にある場合を制御します。</summary>
        <value>A <see cref="T:System.String" /> 空の領域については、メッセージを格納しています。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="ExistingConnectionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string ExistingConnectionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExistingConnectionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ExistingConnectionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定エラーや警告は、既存の接続がある場合に、接続のユーザー インターフェイス \(UI\) に表示されるメッセージのテキスト。</summary>
        <value>A <see cref="T:System.String" /> メッセージのテキストを格納しています。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFromText">
      <MemberSignature Language="C#" Value="public virtual string GetFromText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GetFromText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはデータ コンシューマーの取得元となる名前付きのプロバイダーの前にある接続ユーザー インターフェイス \(UI\) のセクションに表示されるテキストを設定します。</summary>
        <value>名前付きのプロバイダー、コンシューマーからのデータを取得する前に表示される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、コンシューマー コントロールの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、プロバイダーへの接続を確立するためにユーザーができるビューが表示されます。 プロバイダー接続を選択するユーザーに指示する UI の一部ではポイントは、ユーザーが、コンシューマーがそのデータを取得する接続ポイントを選択ドロップダウン リスト コントロールの前にある任意のテキスト表示されます。 ドロップダウン リスト コントロールの前にこのテキストは内のテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> プロパティです。 テキスト値は、既定では、 **から**します。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `GetFromText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 既存の接続用に開かれたビュー、名前付きのプロバイダーを前に表示されるテキストのプロバイダーのセクションで確認します。 これに割り当てられたテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public virtual string GetText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GetText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または名前付きのコンシューマー、プロバイダーからデータを受け取る前に表示される接続のユーザー インターフェイス \(UI\) のセクションに表示されるテキストを設定します。</summary>
        <value>名前付きのコンシューマー接続の前に表示される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、コンシューマー コントロールの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、プロバイダーへの接続を確立するためにユーザーができるビューが表示されます。 プロバイダー接続を選択するユーザーに指示する UI の一部ではポイントは、名前付きのコンシューマーの接続に参加する前に表示される任意のテキスト表示されます。 コンシューマーの前にこのテキストは内のテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> プロパティです。 テキスト値は、既定では、 **取得**します。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `GetText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 既存の接続用に開かれたビュー、名前付きのコンシューマーの前にあるテキストのプロバイダーのセクションで確認します。 これに割り当てられたテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によって作成された接続のユーザー インターフェイス \(UI\) の上部に表示されるヘッダー文字列、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> コントロールです。</summary>
        <value>接続の UI のヘッダー テキストを含む文字列です。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> 接続 UI が表示されるたびに、プロパティが表示されています。 ユーザーがの動詞メニューの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> UI が表示されたら、接続を制御し、ヘッダーのテキストは、接続の UI の最上部にラベルとして機能します。 既定のテキストは **接続ゾーン**します。  
  
 このプロパティは、情報を上書き <xref:System.Web.UI.WebControls.WebParts.WebZone.HeaderText%2A> プロパティから、 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラス、プロパティの既定の接続のゾーンのヘッダー テキストを割り当てることができるようにします。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `HeaderText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 既存の接続用に開かれたビューで接続ゾーンの上部にあるヘッダー テキストに割り当てられた値に注意してください、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> コード例ではプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の接続のユーザー インターフェイス \(UI\) セクションで、選択したコントロールに関する一般的な手順の既存の接続を管理するために使用するテキスト。</summary>
        <value>接続 UI の命令のテキストを含む文字列です。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> プロパティは、UI が表示される接続との接続は既に存在するときに表示します。 ヘッダー テキストのすぐ下 \(に含まれている、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> プロパティ\) 命令のタイトルを接続 UI の一番上にあるが、そのすぐ下場合は指示テキスト。 命令のテキストは、実行できるアクションの種類をユーザーに通知で現在選択されている <xref:System.Web.UI.WebControls.WebParts.WebPart> \(は選択したコントロールは、ユーザーがコントロールの動詞メニューの connect 動詞をクリックすると 1 つが\)。 命令のテキストは、既定では、 **現在の Web パーツの接続を管理**します。  
  
 このプロパティは、情報を上書き <xref:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText%2A> プロパティから、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスの既定の接続のゾーンの命令のテキストは、このプロパティに割り当てることができるようにします。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `InstructionText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 既存の接続用に開かれたビューで接続ゾーンの先頭付近にある指示テキストに割り当てられている値であることを確認します、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText%2A> コード例ではプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      </Docs>
    </Member>
    <Member MemberName="InstructionTitle">
      <MemberSignature Language="C#" Value="public virtual string InstructionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または全般の詳細については、コンシューマーまたはプロバイダー コントロールの既存の接続を管理するための接続のユーザー インターフェイス \(UI\) 内で実行できるアクションに使用されるテキストを設定します。</summary>
        <value>接続の UI の命令のタイトルを表す文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> プロパティは、UI が表示される接続との接続は既に存在するときに表示します。 ヘッダー テキストのすぐ下の命令のタイトルのテキストは、\(に含まれている、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.HeaderText%2A> プロパティ\)、接続の UI の一番上にある、します。 命令のタイトルは、コンシューマーまたはプロバイダーに対して実行できるアクションの種類をユーザーに通知する一般的な説明を <xref:System.Web.UI.WebControls.WebParts.WebPart> は既存の接続に参加しているコントロール。 命令のタイトルが始まる既定では、 **接続の管理**, 、動詞メニューの connect 動詞をクリックして、ユーザーが選択されているコンシューマーまたはプロバイダーのコントロールの名前で終わります。  
  
> [!NOTE]
>  このプロパティにカスタム値を代入するときにわからないというデザイン時に、接続の管理に使用する、カスタムの命令タイトル必要がありますコンシューマーを参照するのに十分な一般的なプロバイダーまたはコンシューマー コントロールまたはコントロールでプロバイダーの選択ができるかどうかを注意してください。 これに対し、ユーザーが選択した任意のコンシューマーまたはプロバイダー コントロールの名前を動的に追加するようにプロパティの既定値はレンダリングします。 この動作を模倣したプロパティのカスタム値を指定する場合から継承する必要があります、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスし、このプロパティをオーバーライドまたは <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody%2A> メソッドです。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `InstructionTitle` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 既存の接続用に開かれたビューで接続ゾーンの最上部のヘッダー テキストのすぐ下の命令のタイトルに割り当てられた値に注意してください、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionTitle%2A> コード例ではプロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadControlState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表す <see cref="T:System.Object" />。</param>
        <summary>コントロールによって保存された前のページ要求からの状態情報を復元、 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されるかどうが決定コントロールの状態コントロールの以前に保存した場合は、コントロールの状態を保存した値に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">長さ <paramref name="savedState" /> によって作成された配列の長さと等しくない、 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" /> メソッドです。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.LoadViewState(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Object" /> 復元するビュー ステートを格納しています。</param>
        <summary>によって保存された前のページ要求からビューステート情報を復元する、 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、「[ASP.NET State Management Overview](http://msdn.microsoft.com/ja-jp/0218d965-5d30-445b-b6a6-8870e70e63ce)」を参照してください。  
  
 このメソッドが呼び出されたときにかどうが決定ビューステート コントロールの以前に保存した場合は、ビュー ステートを保存した値に設定します。 メソッドはオーバーライド、 <xref:System.Web.UI.WebControls.WebParts.ToolZone.LoadViewState%2A> から継承されたメソッド、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスの基本実装を追加で使用されるゾーン レベルのいくつかの動詞の状態を復元できるように、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">長さ <paramref name="savedState" /> によって作成された配列の長さと等しくない、 <see cref="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" /> メソッドです。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NewConnectionErrorMessage">
      <MemberSignature Language="C#" Value="public virtual string NewConnectionErrorMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewConnectionErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NewConnectionErrorMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはエラーまたは警告を作成しようとしているユーザーの新しい接続であるときに、接続のユーザー インターフェイス \(UI\) に表示されるメッセージのテキストを設定します。</summary>
        <value>A <see cref="T:System.String" /> メッセージのテキストを格納しています。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoExistingConnectionInstructionText">
      <MemberSignature Language="C#" Value="public virtual string NoExistingConnectionInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExistingConnectionInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web パーツ コントロールには、既存の接続があるない場合は、接続のユーザー インターフェイス \(UI\) の本文に表示される指示テキストを設定します。</summary>
        <value>大文字と小文字のテキスト メッセージを含む文字列の既存の接続が存在しません。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> プロパティは、UI が表示される接続と接続が存在するときに表示します。 ユーザーが接続の表示モードを切り替えますの動詞メニューの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> UI が表示されるメインの接続を制御します。 現在の接続からテキストがないかどうか、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> プロパティは、ゾーンのフッター領域に close 動詞のすぐ上の接続、UI の下部に表示されます。 テキストは、既存の接続がないことを説明したり、ユーザーの UI を使って接続を作成するための基本的な手順については、できます。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `NoExistingConnectionInstructionText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 既存の接続用に開かれたビューで、クリックして、 **エンド接続** \] ボタンをクリックします。 ゾーンのフッター領域に close 動詞のすぐ上の接続、UI の下部にあるない既存の接続を示すテキストが表示されることに注意してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      </Docs>
    </Member>
    <Member MemberName="NoExistingConnectionTitle">
      <MemberSignature Language="C#" Value="public virtual string NoExistingConnectionTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExistingConnectionTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または Web パーツ コントロールには、既存の接続があるない場合は、接続のユーザー インターフェイス \(UI\) の本文に表示されるタイトルのテキストを設定します。</summary>
        <value>大文字と小文字のタイトル テキストを表す文字列の既存の接続が存在しません。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 含まれるテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> プロパティは、UI が表示される接続と接続が存在するときに表示します。 ユーザーが接続の表示モードを切り替えますの動詞メニューの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.WebPart> UI が表示されるメインの接続を制御します。 現在の接続からテキストがないかどうか、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> 接続 UI で、新しい接続を作成するユーザーがクリックしてできるリンクのすぐ下の本文の先頭付近にあるプロパティが表示されます。 接続が存在しないと、既定のタイトルがいるという事実を簡潔に説明 **なしのアクティブな接続**します。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `NoExistingConnectionTitle` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionTitle%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 既存の接続用に開かれたビューで、クリックして、 **エンド接続** \] ボタンをクリックします。 ユーザーが新しい接続を作成できるリンクのすぐ下にない既存の接続の命令のタイトルが発生することに注意してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.NoExistingConnectionInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayModeChanged">
      <MemberSignature Language="C#" Value="protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDisplayModeChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントの送信元です。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを生成、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> イベントをカスタム ハンドラーを提供します。 Web ページを入力または接続の表示モードを終了すると、このメソッドに固有のいくつかの手順を実行、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 メソッドがこの時点で保留中を設定して、接続のユーザー インターフェイス \(UI\) の子コントロールが表示されないことを保証するアクティビティを接続のキャンセル、 <xref:System.Web.UI.Control.ChildControlsCreated%2A> プロパティを `false`, 、し、ユーザーが接続を作成するプロセスを続行する場合に、接続 UI を既存の接続に関する情報を表示できるモードに設定します。  
  
 提供される処理をする特殊な処理を追加する、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnDisplayModeChanged%2A> メソッドでは、開発者、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスし、このメソッドをオーバーライドします。 代わりに、開発者ものハンドラーを提供、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> でイベントを <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールを追加することで、 `OnDisplayModeChanged` 属性を `<asp:webpartmanager>` 内の要素、Web ページ、およびイベントを処理するカスタム メソッドの値を代入します。 このメソッドでは、開発者がの現在の値を確認できます、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> プロパティである場合、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>, に必要な変更が実行されることができます、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnInit(System.EventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、ベース <xref:System.Web.UI.WebControls.WebParts.ToolZone.OnInit%2A?displayProperty=fullName> メソッドを表示する Web ページを準備するカスタム処理を追加し、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnInit(System.EventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedWebPartChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedWebPartChanged(object sender, class System.Web.UI.WebControls.WebParts.WebPartEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Web.UI.WebControls.WebParts.WebPartEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">
          <see cref="T:System.Object" /> 、イベントの送信元を識別します。</param>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> 実装を子コントロールが再作成する必要があることを接続のユーザー インターフェイス \(UI\) をリセットします。 これは、する必要があるため、選択したコントロールの変更接続 UI でいくつかのオプションは変更し、選択したコントロールがコンシューマーまたはプロバイダーがあるかによって、コントロール ポイント \(接続ポイントは、ドロップダウン リスト コントロールで表示されます\)、およびその他の詳細。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PartChromeType">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType PartChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.PartChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に含まれるサーバー コントロールを囲む罫線の種類、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> コントロールです。</summary>
        <value>A <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 接続ゾーンに含まれるコントロールを囲む境界線の種類を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 テーマまたはスタイル シートのテーマでは、このプロパティを設定できません。 詳細については、<xref:System.Web.UI.ThemeableAttribute> および [ASP.NET Themes Overview](http://msdn.microsoft.com/ja-jp/5df3ebbd-d46c-4502-9406-02f9df4ef2c3) を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersInstructionText">
      <MemberSignature Language="C#" Value="public virtual string ProvidersInstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvidersInstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または接続が既に存在する場合は、接続のユーザー インターフェイス \(UI\) の \[providers\] セクションに示すように説明のテキストを設定します。</summary>
        <value>接続に参加しているプロバイダーの説明のテキストとして使用される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、コンシューマー コントロールの connect 動詞をクリックし、接続が既に存在するときに、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、ユーザーは、接続を切断することができるビューが表示されます。 また、接続に参加しているすべてのプロバイダーも表示されます。 プロバイダーの一覧のすぐ上、プロバイダーが命令、既定では、プロバイダー コントロールが接続で実行する内容の説明をします。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `ProvidersInstructionText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 割り当てられているカスタムのテキストのプロバイダーのセクションで確認して、既存の接続用に開かれたビューで、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersInstructionText%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersInstructionText" />
      </Docs>
    </Member>
    <Member MemberName="ProvidersTitle">
      <MemberSignature Language="C#" Value="public virtual string ProvidersTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProvidersTitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または接続が既に存在する場合は、接続のユーザー インターフェイス \(UI\) のプロバイダーのセクションの上に表示されるタイトルを設定します。</summary>
        <value>接続に参加しているプロバイダーのタイトルのテキストとして使用される文字列。 既定のタイトルは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、コンシューマー コントロールの connect 動詞をクリックし、接続が既に存在するときに、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、ユーザーは、接続を切断することができるビューが表示されます。 また、接続に参加しているすべてのプロバイダーも表示されます。 同じプロバイダーの一覧の上プロバイダー命令テキストでありこと providers\] セクションのタイトルを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> プロパティがテキストを提供します。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `ProvidersTitle` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> プロパティを <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 例には、プロパティの使用方法を示す Web ページのコードだけが含まれています。2 つのコード例を実行の例」のセクションを参照して必要なファイルをその他の <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。 このコード例には、4 つの部分があります。  
  
-   ユーザー コントロールをすると、Web ページの表示モードを切り替えることができます。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   郵便番号のインターフェイスと 2 つのコードを含むソース ファイル <xref:System.Web.UI.WebControls.WebParts.WebPart> プロバイダーと接続のコンシューマーとしての動作を制御します。 次のコードを取得、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> クラスの概要です。  
  
-   すべてのコントロールをホストする Web ページを宣言して、 `<asp:connectionszone>` 要素、プロパティをプログラムで使用する方法を示しています。  
  
-   ブラウザーでの例のしくみの説明です。  
  
 Web ページを宣言して、 `<asp:connectionszone>` 要素と、 `Page_PreRender` メソッドに値を代入するコード、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> プロパティです。  
  
 [!code-csharp[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/CS/connectionZoneCS.aspx#1)]
 [!code-vb[WebParts\_ConnectionZone\_Overview\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionZone_Overview/VB/connectionZoneVB.aspx#1)]  
  
 ブラウザーでページを読み込みます。 接続モードでは、スイッチを使用して、 **表示モード** コントロールです。 動詞メニュー矢印をクリックして、 **郵便コンシューマー** 制御、および connect 動詞をクリックします。 割り当てられているカスタムのテキストのプロバイダーのセクションで確認して、既存の接続用に開かれたビューで、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.ProvidersTitle%2A> プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.ConsumersTitle" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">A <see cref="T:System.String" /> イベントの引数のデータが含まれています。</param>
        <summary>イベントを発生させる、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> それを含んでいるフォームがサーバーにポストバックするときを制御します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent%2A> フォームを含んでいるときに発生するいくつかの可能な結果を処理するメソッド、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールは、サーバーにポストバックされます。 場合に、最初の値、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> プロパティは、 `null`, はこれ以上の接続に関連するアクションをするために保留中の接続が取り消されたため、およびメソッドを返します。 次に、接続のユーザー インターフェイス \(UI\) が実際に表示されて、ユーザーが接続を作成する場合は、メソッドを処理可能なシナリオ: ユーザーには、connect 動詞がクリックした、ユーザーが切断動詞をクリックした、UI が表示されているトランスフォーマー、ゾーンが閉じられるをプロバイダーへの接続を作成するかコンシューマーへの接続が作成されています。 いずれの場合、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RaisePostBackEvent%2A> メソッドには、 `eventArgument` 渡されるパラメーターと更新プログラム、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> それに応じてを制御します。 最後に、上記のケースの \[なし\] には、該当する場合、メソッドの呼び出し、基本メソッドで、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> Web パーツ コントロールの内容を受け取る。</param>
        <summary>内容を表示、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> を指定したコントロール <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.Render%2A> メソッドは、子コントロールが作成されてから発生した変更されたか、プリレンダ リング段階では、接続のユーザー インターフェイス \(UI\) が更新され、ベースを呼び出して <xref:System.Web.UI.WebControls.CompositeControl.Render%2A?displayProperty=fullName> Web ページに、ゾーンの内容を書き込みます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CompositeControl.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールの本文の内容を受け取る。</param>
        <summary>コンテンツを送信、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> を指定したコントロールの本体領域 <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトで、Web ページにコンテンツを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Web パーツ コントロールの本体は、そのヘッダーおよびフッター領域間の部分です。<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderBody%2A> メソッドは、ベースで行われる本体領域のレンダリング <xref:System.Web.UI.WebControls.WebParts.WebZone.RenderBody%2A?displayProperty=fullName> メソッドです。  
  
 このメソッドに適用される属性の一意のスタイルをレンダリング ベースに追加、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロール、およびそのレンダリング、適切なコンテンツ、子の UI で、ユーザーが行った前回の選択内容に基づいて接続のユーザー インターフェイス \(UI\) 内のコントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 接続ゾーンに表示する動詞の内容を受け取る。</param>
        <summary>ゾーン レベルの動詞を表示、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> コントロールです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドに含まれているいくつかのゾーン レベルの動詞を表示する、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。 このメソッドの一部として、 <xref:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb%2A?displayProperty=fullName> verb ごとの個別の詳細を表示するメソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPartVerb)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>任意の Web パーツ コントロール、ページがサーバーにポストされた最終時刻以降に発生した状態の変更を保存します。</summary>
        <returns>Web パーツ コントロールの現在の状態を返します。 状態がいないかどうか、コントロールに関連付け、このメソッドが戻る <see langword="null" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールは、既存の接続詳細が表示されるモード以外のモードのいずれかで表示し、それに関連付けられている接続の詳細はコントロールの状態データがある場合、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveControlState%2A> メソッドは、サーバーへのラウンド トリップの間で永続化できるように、データを保存します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> サーバーにポストバックされる最後のページのために発生したコントロールのビュー状態が変化します。</summary>
        <returns>返します。、 <see cref="T:System.Object" /> コントロールの現在のビュー ステートを格納しています。 このメソッドが戻るかどうかは、ビューステートのコントロールに関連付けがない、 <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ビュー ステートは、Web パーツ コントロールのプロパティの値を累積したものです。 これらの値が自動的に、コントロールの配置 <xref:System.Web.UI.Control.ViewState%2A> インスタンスであるプロパティの <xref:System.Web.UI.StateBag> クラスです。 このプロパティの値は、この保存状態のコントロールのライフ サイクルの段階後も、文字列オブジェクトを永続化します。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SaveViewState%2A> メソッドが基本の実装にでさまざまなコマンドのビューステートを保存する機能を追加、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SendText">
      <MemberSignature Language="C#" Value="public virtual string SendText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SendText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはコンシューマーにデータを送信している名前付きのプロバイダーの前にある接続ユーザー インターフェイス \(UI\) のセクションに表示されるテキストを設定します。</summary>
        <value>指定されたプロバイダー接続の前に表示される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、プロバイダー コントロールの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、コンシューマーへの接続を確立するためにユーザーができるビューが表示されます。 コンシューマー接続を選択するユーザーに指示する UI の一部ではポイントは、名前付きのプロバイダーの接続に参加する前に表示される任意のテキスト表示されます。 プロバイダーの前にこのテキストは内のテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText%2A> プロパティです。 テキスト値は、既定では、 **送信**します。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `SendText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      </Docs>
    </Member>
    <Member MemberName="SendToText">
      <MemberSignature Language="C#" Value="public virtual string SendToText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SendToText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または名前付きのコンシューマー、プロバイダーがデータを送信する前に表示される接続のユーザー インターフェイス \(UI\) のセクションに表示されるテキストを設定します。</summary>
        <value>名前付きのコンシューマー、プロバイダーがデータを送信する前に表示される文字列。 既定のテキストは、.NET Framework によって提供されるカルチャに固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A> プロパティ値が特定の接続シナリオに反映されます。 ユーザーが、プロバイダー コントロールの connect 動詞をクリックすると、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールには、コンシューマーへの接続を確立するためにユーザーができるビューが表示されます。 コンシューマー接続を選択するユーザーに指示する UI の一部ではポイントは、ユーザーが、プロバイダーは、そのデータを送信先となる接続ポイントを選択ドロップダウン リスト コントロールの前にある任意のテキスト表示されます。 ドロップダウン リスト コントロールの前にこのテキストは内のテキスト、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendToText%2A> プロパティです。 テキスト値は、既定では、 **に**します。  
  
 開始タグ内で宣言によってこのプロパティの値を設定することができます、 `<asp:connectionszone>` という名前の属性を追加することで、要素 `SendToText` 値を代入します。 また、プロパティ値をプログラムでに設定することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.SendText" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.GetFromText" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionsZone.TrackViewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートの変更を追跡、 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> 、コントロールの変更を保存できるように制御 <see cref="T:System.Web.UI.StateBag" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッド基本メソッドを呼び出して、 <xref:System.Web.UI.WebControls.WebParts.ToolZone> クラスとビュー ステートに関連付けられている動詞の追跡のトリガー、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="WebPartToConnect">
      <MemberSignature Language="C#" Value="protected System.Web.UI.WebControls.WebParts.WebPart WebPartToConnect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPart WebPartToConnect" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在選択されている取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> への接続を制御します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーが接続の表示モードの Web ページのスイッチし、の動詞メニューの connect 動詞をクリックする、 <xref:System.Web.UI.WebControls.WebParts.WebPart> 接続、接続のユーザー インターフェイス \(UI\) が開き、およびコントロールを有効になっているコントロールがによって参照されるようになりました、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> プロパティです。  
  
> [!NOTE]
>  によって参照される、コントロール、 <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone.WebPartToConnect%2A> プロパティから値を取得する、 <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> 、現在のプロパティ <xref:System.Web.UI.WebControls.WebParts.WebPartManager> オブジェクトです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart" />
      </Docs>
    </Member>
  </Members>
</Type>