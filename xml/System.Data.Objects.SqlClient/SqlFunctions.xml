<Type Name="SqlFunctions" FullName="System.Data.Objects.SqlClient.SqlFunctions">
  <TypeSignature Language="C#" Value="public static class SqlFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.SqlClient.SqlFunctions" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>共通言語ランタイム \(CLR\) メソッドで LINQ to Entities クエリのデータベース内の関数を呼び出すことを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Acos">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>数学関数には、角度、コサインが指定の数値をラジアンで返します。 この角度は、アーク コサインと呼ばれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ACOS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140034)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Acos (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Acos(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ACOS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">指定した角度のコサイン。</param>
        <summary>数学関数には、角度、コサインが指定の数値をラジアンで返します。 この角度は、アーク コサインと呼ばれます。</summary>
        <returns>ラジアンで表した角度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ACOS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140034)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Acos (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Acos(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Acos(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ACOS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">指定した角度のコサイン。</param>
        <summary>数学関数には、角度、コサインが指定の数値をラジアンで返します。 この角度は、アーク コサインと呼ばれます。</summary>
        <returns>角度をラジアンで入力されたコサインの値によって定義します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ACOS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140034)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ascii">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Ascii (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Ascii(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Ascii(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASCII")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">有効な文字列。</param>
        <summary>文字式の左端の文字の ASCII コード値を返します。</summary>
        <returns>入力文字列の最初の文字の ASCII コードです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ASCII \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140040)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Asin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ラジアンで指定した数値がサインの値の角度を返す数学関数です。 この角度は、アークサインと呼ばれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ASIN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140039)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Asin (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Asin(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">指定した角度のサイン。</param>
        <summary>ラジアンで指定した数値がサインの値の角度を返す数学関数です。 この角度は、アークサインと呼ばれます。</summary>
        <returns>ラジアンで表した角度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ASIN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140039)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Asin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Asin (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Asin(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Asin(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ASIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">指定した角度のサイン。</param>
        <summary>ラジアンで指定した数値がサインの値の角度を返す数学関数です。 この角度は、アークサインと呼ばれます。</summary>
        <returns>ラジアンで表した角度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ASIN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140039)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Atan">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>数学関数には、角度、タンジェントが指定の数値をラジアンで返します。 この角度は、アーク タンジェントと呼ばれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATAN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140038)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">指定した角度のタンジェント。</param>
        <summary>数学関数には、角度、タンジェントが指定の数値をラジアンで返します。 この角度は、アーク タンジェントと呼ばれます。</summary>
        <returns>ラジアンで表した角度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATAN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140038)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">指定した角度のタンジェント。</param>
        <summary>数学関数には、角度、タンジェントが指定の数値をラジアンで返します。 この角度は、アーク タンジェントと呼ばれます。</summary>
        <returns>ラジアンで表した角度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATAN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140038)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Atan2">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>正の角度をラジアンで返します正の x 軸と、点 \(x, y\) を元の間で、x と y は、2 つの数値。 関数に渡される最初のパラメーターは y 値で、2 番目のパラメーターは x 値です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATN2 \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140037)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan2 (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan2(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATN2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">点の y 座標。</param>
        <param name="arg2">点の x 座標。</param>
        <summary>正の角度をラジアンで返します正の x 軸と、点 \(x, y\) を元の間で、x と y は、2 つの数値。 関数に渡される最初のパラメーターは y 値で、2 番目のパラメーターは x 値です。</summary>
        <returns>ラジアンで表した角度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATN2 \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140037)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Atan2">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Atan2 (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Atan2(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ATN2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">点の y 座標。</param>
        <param name="arg2">点の x 座標。</param>
        <summary>正の角度をラジアンで返します正の x 軸と、点 \(x, y\) を元の間で、x と y は、2 つの数値。 関数に渡される最初のパラメーターは y 値で、2 番目のパラメーターは x 値です。</summary>
        <returns>ラジアンで表した角度。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ATN2 \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140037)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Char">
      <MemberSignature Language="C#" Value="public static string Char (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Char(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Char(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHAR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ASCII コードです。</param>
        <summary>指定した整数の ASCII 値に対応する文字を返します。</summary>
        <returns>指定された ASCII 値に対応する文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHAR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140119)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CharIndex">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>1 つの式がもう一方の式内の開始位置を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHARINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140118)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (byte[] toSearch, byte[] target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="toSearch">検索する文字列式です。</param>
        <param name="target">検索する文字列式です。</param>
        <summary>1 つの式がもう一方の式内の開始位置を返します。</summary>
        <returns>開始位置 <paramref name="target" /> が見つかった場合 <paramref name="toSearch" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHARINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140118)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (string toSearch, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(string toSearch, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toSearch">検索する文字列式です。</param>
        <param name="target">検索する文字列式です。</param>
        <summary>1 つの式がもう一方の式内の開始位置を返します。</summary>
        <returns>開始位置 <paramref name="target" /> が見つかった場合 <paramref name="toSearch" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHARINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140118)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (byte[] toSearch, byte[] target, Nullable&lt;int&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target, valuetype System.Nullable`1&lt;int32&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">検索する文字列式です。</param>
        <param name="target">検索する文字列式です。</param>
        <param name="startLocation">内の文字位置 <c>toSearch</c> 検索を開始します。</param>
        <summary>1 つの式がもう一方の式内の開始位置を返します。</summary>
        <returns>開始位置 <paramref name="target" /> が見つかった場合 <paramref name="toSearch" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHARINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140118)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; CharIndex (byte[] toSearch, byte[] target, Nullable&lt;long&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; CharIndex(unsigned int8[] toSearch, unsigned int8[] target, valuetype System.Nullable`1&lt;int64&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.Byte[]" />
        <Parameter Name="target" Type="System.Byte[]" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">検索する文字列式です。</param>
        <param name="target">検索する文字列式です。</param>
        <param name="startLocation">内の文字位置 <c>toSearch</c> どの検索を開始します。</param>
        <summary>1 つの式がもう一方の式内の開始位置を返します。</summary>
        <returns>開始位置 <paramref name="target" /> が見つかった場合 <paramref name="toSearch" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHARINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140118)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; CharIndex (string toSearch, string target, Nullable&lt;int&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; CharIndex(string toSearch, string target, valuetype System.Nullable`1&lt;int32&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">検索する文字列式です。</param>
        <param name="target">検索する文字列式です。</param>
        <param name="startLocation">内の文字位置 <c>toSearch</c> 検索を開始します。</param>
        <summary>1 つの式がもう一方の式内の開始位置を返します。</summary>
        <returns>開始位置 <paramref name="target" /> が見つかった場合 <paramref name="toSearch" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHARINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140118)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; CharIndex (string toSearch, string target, Nullable&lt;long&gt; startLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; CharIndex(string toSearch, string target, valuetype System.Nullable`1&lt;int64&gt; startLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHARINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toSearch" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="startLocation" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="toSearch">検索する文字列式です。</param>
        <param name="target">検索する文字列式です。</param>
        <param name="startLocation">内の文字位置 <c>toSearch</c> 検索を開始します。</param>
        <summary>1 つの式がもう一方の式内の開始位置を返します。</summary>
        <returns>A <see cref="T:System.Nullable`1" /> の <see cref="T:System.Int64" /> の位置は、開始値 <paramref name="target" /> が見つかった場合 <paramref name="toSearch" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHARINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140118)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Checksum">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する文字配列。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力値に対して計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1, byte[] arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1, unsigned int8[] arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
        <Parameter Name="arg2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する文字配列。</param>
        <param name="arg2">チェックサムを計算する文字配列。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1, Nullable&lt;bool&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1, valuetype System.Nullable`1&lt;bool&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1, Nullable&lt;DateTime&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1, Nullable&lt;DateTimeOffset&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1, Nullable&lt;Guid&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1, Nullable&lt;TimeSpan&gt; arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1, string arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1, string arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (byte[] arg1, byte[] arg2, byte[] arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(unsigned int8[] arg1, unsigned int8[] arg2, unsigned int8[] arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Byte[]" />
        <Parameter Name="arg2" Type="System.Byte[]" />
        <Parameter Name="arg3" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する文字配列。</param>
        <param name="arg2">チェックサムを計算する文字配列。</param>
        <param name="arg3">チェックサムを計算する文字配列。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;bool&gt; arg1, Nullable&lt;bool&gt; arg2, Nullable&lt;bool&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;bool&gt; arg1, valuetype System.Nullable`1&lt;bool&gt; arg2, valuetype System.Nullable`1&lt;bool&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTime&gt; arg1, Nullable&lt;DateTime&gt; arg2, Nullable&lt;DateTime&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;DateTimeOffset&gt; arg1, Nullable&lt;DateTimeOffset&gt; arg2, Nullable&lt;DateTimeOffset&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;decimal&gt; arg1, Nullable&lt;decimal&gt; arg2, Nullable&lt;decimal&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;double&gt; arg1, Nullable&lt;double&gt; arg2, Nullable&lt;double&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;float64&gt; arg1, valuetype System.Nullable`1&lt;float64&gt; arg2, valuetype System.Nullable`1&lt;float64&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;Guid&gt; arg1, Nullable&lt;Guid&gt; arg2, Nullable&lt;Guid&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.Guid&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (Nullable&lt;TimeSpan&gt; arg1, Nullable&lt;TimeSpan&gt; arg2, Nullable&lt;TimeSpan&gt; arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg1, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg2, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg2" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="arg3" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Checksum">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Checksum (string arg1, string arg2, string arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Checksum(string arg1, string arg2, string arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Checksum(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.String" />
        <Parameter Name="arg2" Type="System.String" />
        <Parameter Name="arg3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg1">チェックサムを計算する値。</param>
        <param name="arg2">チェックサムを計算する値。</param>
        <param name="arg3">チェックサムを計算する値。</param>
        <summary>入力引数について計算されたチェックサム値を返します。</summary>
        <returns>入力された値について計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChecksumAggregate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>コレクション内にある値のチェックサムを返します。 NULL 値は無視されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [CHECKSUM\_AGG \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChecksumAggregate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; ChecksumAggregate (System.Collections.Generic.IEnumerable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; ChecksumAggregate(class System.Collections.Generic.IEnumerable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM_AGG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">チェックサムを計算する値のコレクション。</param>
        <summary>コレクション内にある値のチェックサムを返します。 NULL 値は無視されます。</summary>
        <returns>入力コレクションから計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM\_AGG \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChecksumAggregate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; ChecksumAggregate (System.Collections.Generic.IEnumerable&lt;Nullable&lt;int&gt;&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; ChecksumAggregate(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Nullable`1&lt;int32&gt;&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CHECKSUM_AGG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Collections.Generic.IEnumerable&lt;System.Nullable&lt;System.Int32&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">チェックサムを計算する値のコレクション。</param>
        <summary>コレクション内にある値のチェックサムを返します。 NULL 値は無視されます。</summary>
        <returns>入力コレクションから計算されたチェックサム。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CHECKSUM\_AGG \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140120)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cos">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ラジアンで指定された角度のコサイン \(余弦\) を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140121)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cos (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cos(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>指定された式のラジアンで指定された角度のコサイン \(余弦\) を返します。</summary>
        <returns>指定された角度の三角関数コサイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140121)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cos">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cos (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cos(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cos(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>指定された式のラジアンで指定された角度のコサイン \(余弦\) を返します。</summary>
        <returns>指定された角度の三角関数コサイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140121)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Cot">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>数学関数には、指定された角度の三角関数コタンジェントをラジアンで返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COT \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140122)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cot (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cot(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>数学関数には、指定された角度の三角関数コタンジェントをラジアンで返します。</summary>
        <returns>指定された角度の三角関数コタンジェントです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COT \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140122)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Cot (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Cot(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Cot(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "COT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>数学関数には、指定された角度の三角関数コタンジェントをラジアンで返します。</summary>
        <returns>指定された角度の三角関数コタンジェントです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [COT \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140122)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentTimestamp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; CurrentTimestamp ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; CurrentTimestamp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CurrentTimestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CURRENT_TIMESTAMP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の日付と時刻を返します。</summary>
        <returns>現在の日付と時刻。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CURRENT\_TIMESTAMP \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140125)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public static string CurrentUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CurrentUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.CurrentUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "CURRENT_USER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のユーザーの名前を返します。</summary>
        <returns>現在のユーザーの名前。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [CURRENT\_USER \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140126)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DataLength">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (byte[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(unsigned int8[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="arg">長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;bool&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;bool&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;DateTime&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;DateTimeOffset&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;Guid&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.Guid})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (Nullable&lt;TimeSpan&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataLength">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DataLength (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DataLength(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DataLength(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATALENGTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">データの長さを調べる値。</param>
        <summary>式を表すために必要なバイト数を返します。</summary>
        <returns>入力された値のバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATALENGTH \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=140127)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateAdd">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しい返します <see langword="datetime" /> 値が指定した日付に追加する間隔に基づいています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">インクリメントする日付の部分。</param>
        <param name="number">値が、指定した日付のインクリメントに使用します。</param>
        <param name="date">インクリメントする日付。</param>
        <summary>新しい返します <see langword="datetime" /> 値が指定した日付に追加する間隔に基づいています。</summary>
        <returns>新しい日付。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTimeOffset&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;DateTimeOffset&gt; dateTimeOffsetArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; dateTimeOffsetArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTimeOffset&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="dateTimeOffsetArg" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">インクリメントする日付の部分。</param>
        <param name="number">値が、指定した日付のインクリメントに使用します。</param>
        <param name="dateTimeOffsetArg">インクリメントする日付。</param>
        <summary>指定した日付に追加する間隔に基づいて新しい日付値を返します。</summary>
        <returns>日付と時刻、世界協定時刻 \(UTC\) 基準としたで時間単位での新しいポイントです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;TimeSpan&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, Nullable&lt;TimeSpan&gt; time);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; time) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="time" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">インクリメントする日付の部分。</param>
        <param name="number">値が、指定した日付のインクリメントに使用します。</param>
        <param name="time">インクリメントする時間間隔です。</param>
        <summary>指定した期間に追加する間隔に基づいて、新しい時間範囲値を返します。</summary>
        <returns>新しい時間間隔。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateAdd">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; DateAdd (string datePartArg, Nullable&lt;double&gt; number, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; DateAdd(string datePartArg, valuetype System.Nullable`1&lt;float64&gt; number, string date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEADD")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">インクリメントする日付の部分。</param>
        <param name="number">値が、指定した日付のインクリメントに使用します。</param>
        <param name="date">インクリメントする日付。</param>
        <summary>新しい返します <see langword="datetime" /> 値が指定した日付に追加する間隔に基づいています。</summary>
        <returns>A <see cref="T:System.Nullable`1" /> の <see cref="T:System.DateTime" /> 新しい日付である値します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEADD \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=140128)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateDiff">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された 2 つの日付間の差を、日付および時刻の単位で返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTime&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;DateTimeOffset&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, Nullable&lt;TimeSpan&gt; startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;DateTime&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;DateTimeOffset&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, Nullable&lt;TimeSpan&gt; endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数を指定する値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateDiff">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DateDiff (string datePartArg, string startDate, string endDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DateDiff(string datePartArg, string startDate, string endDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateDiff(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEDIFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="startDate" Type="System.String" />
        <Parameter Name="endDate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="startDate">最初の日付。</param>
        <param name="endDate">2 番目の日付です。</param>
        <summary>指定した開始日と終了日の間で、指定した日付要素の数を返します。</summary>
        <returns>2 つの日付までの時間間隔の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEDIFF \(Transact\-SQL\).](http://go.microsoft.com/fwlink/?LinkId=141344)  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DateName">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された日付の指定した日付要素を表す文字列を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141345)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付の指定した日付要素を表す文字列を返します。</summary>
        <returns>指定された日付の指定したパーツです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141345)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;DateTimeOffset&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付の指定した日付要素を表す文字列を返します。</summary>
        <returns>指定された日付の指定したパーツです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141345)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, Nullable&lt;TimeSpan&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付の指定した日付要素を表す文字列を返します。</summary>
        <returns>指定された日付の指定したパーツです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141345)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateName">
      <MemberSignature Language="C#" Value="public static string DateName (string datePartArg, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DateName(string datePartArg, string date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DateName(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">時間間隔数の差を計算する日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付の指定した日付要素を表す文字列を返します。</summary>
        <returns>指定された日付の指定したパーツです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141345)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DatePart">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された日付について、特定の日付要素を整数で返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 You cannot call this function directly. This function can only appear within a LINQ to Entities query.  
  
 This function is translated to a corresponding function in the database. For information about the corresponding SQL Server function, see [DATEPART \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141346).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;DateTime&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">値を返す日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付について、特定の日付要素を整数で返します。</summary>
        <returns>指定された日付の指定された日付構成要素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141346)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;DateTimeOffset&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">値を返す日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付について、特定の日付要素を整数で返します。</summary>
        <returns>指定された日付の指定された日付構成要素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141346)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, Nullable&lt;TimeSpan&gt; date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="datePartArg">値を返す日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付について、特定の日付要素を整数で返します。</summary>
        <returns>指定された日付の指定された日付構成要素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141346)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DatePart">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; DatePart (string datePartArg, string date);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; DatePart(string datePartArg, string date) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.DatePart(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DATEPART")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datePartArg" Type="System.String" />
        <Parameter Name="date" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="datePartArg">値を返す日付の部分。</param>
        <param name="date">日付です。</param>
        <summary>指定された日付について、特定の日付要素を整数で返します。</summary>
        <returns>指定された日付の指定された日付構成要素。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DATEPART \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141346)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Degrees">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>対応する角度をラジアンで指定された角度を度数でを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DEGREES \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141348)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Degrees (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Degrees(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">ラジアンで表した角度。</param>
        <summary>対応する角度をラジアンで指定された角度を度数でを返します。</summary>
        <returns>指定された角度は、度に変換されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DEGREES \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141348)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Degrees (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Degrees(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">ラジアンで表した角度。</param>
        <summary>対応する角度をラジアンで指定された角度を度数でを返します。</summary>
        <returns>指定された角度は、度に変換されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DEGREES \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141348)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Degrees (Nullable&lt;int&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Degrees(valuetype System.Nullable`1&lt;int32&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">ラジアンで表した角度。</param>
        <summary>対応する角度をラジアンで指定された角度を度数でを返します。</summary>
        <returns>指定された角度は、度に変換されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DEGREES \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141348)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Degrees">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Degrees (Nullable&lt;long&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Degrees(valuetype System.Nullable`1&lt;int64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Degrees(System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DEGREES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">ラジアンで表した角度。</param>
        <summary>対応する角度をラジアンで指定された角度を度数でを返します。</summary>
        <returns>指定された角度は、度に変換されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DEGREES \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141348)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Difference">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Difference (string string1, string string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Difference(string string1, string string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Difference(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "DIFFERENCE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.String" />
        <Parameter Name="string2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string1">第 1 文字列。</param>
        <param name="string2">第 2 文字列。</param>
        <summary>2 つの文字式の SOUNDEX 値の差を示す整数値を返します。</summary>
        <returns>2 つの文字列の SOUNDEX の差。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [DIFFERENCE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141349)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exp">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された float 型の式の指数値を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [EXP \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141350)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Exp (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Exp(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "EXP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">入力値。</param>
        <summary>指定された float 型の式の指数値を返します。</summary>
        <returns>定数 e を累乗し、入力値のです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [EXP \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141350)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exp">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Exp (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Exp(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Exp(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "EXP")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">入力値。</param>
        <summary>指定された float 型の式の指数値を返します。</summary>
        <returns>定数 e を累乗し、入力値のです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [EXP \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141350)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; GetDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; GetDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.GetDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "GETDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データベースのタイム ゾーン オフセットを持たない datetime 値として現在のデータベース システムのタイムスタンプを返します。 この値は、SQL Server のインスタンスを実行しているコンピューターのオペレーティング システムから取得されます。</summary>
        <returns>データベースの現在のタイムスタンプ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [GETDATE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141352)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUtcDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;DateTime&gt; GetUtcDate ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; GetUtcDate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.GetUtcDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "GETUTCDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データベースの現在のシステム タイムスタンプを datetime 値として返します。 データベースのタイム ゾーン オフセットは含まれません。 この値は、現在の UTC 時刻 \(世界協定時刻\) を表します。 この値は、SQL Server のインスタンスを実行しているコンピューターのオペレーティング システムから取得されます。</summary>
        <returns>現在のデータベース \(utc\) タイムスタンプ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [GETUTCDATE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141353)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="C#" Value="public static string HostName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HostName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.HostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "HOST_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ワークステーション名を返します。</summary>
        <returns>ワークステーションの名前。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [HOSTNAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141354)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; IsDate (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; IsDate(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.IsDate(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ISDATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">テスト対象の値です。</param>
        <summary>入力値が有効な日付または時刻であるかどうかを示します。</summary>
        <returns>入力式が有効な日付または時刻の値を datetime または smalldatetime データ型の場合は 1それ以外の場合、0 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [HOSTNAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141354)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; IsNumeric (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; IsNumeric(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.IsNumeric(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "ISNUMERIC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">文字列式です。</param>
        <summary>入力値が有効な数値型であるかどうかを示します。</summary>
        <returns>入力式が有効な数値データである場合は 1 を入力します。それ以外の場合、0 を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [ISNUMERIC \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141355)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した入力値の自然対数を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141358)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した入力値の自然対数を返します。</summary>
        <returns>入力値の自然対数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141358)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した入力値の自然対数を返します。</summary>
        <returns>入力値の自然対数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141358)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Log10">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した入力値の底 10 の対数を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG10 \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141359)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log10 (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log10(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG10")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した入力値の底 10 の対数を返します。</summary>
        <returns>入力値の底 10 の対数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG10 \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141359)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Log10 (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Log10(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Log10(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "LOG10")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した入力値の底 10 の対数を返します。</summary>
        <returns>入力値の底 10 の対数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [LOG10 \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141359)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NChar">
      <MemberSignature Language="C#" Value="public static string NChar (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NChar(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.NChar(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "NCHAR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">文字コードです。</param>
        <summary>Unicode 規格によって定義されている、指定された整数コードの Unicode 文字を返します。</summary>
        <returns>入力された文字コードに対応する文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [NCHAR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141365)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PatIndex">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; PatIndex (string stringPattern, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; PatIndex(string stringPattern, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.PatIndex(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "PATINDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringPattern" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringPattern">検索対象の文字列のパターン。</param>
        <param name="target">検索対象の文字列。</param>
        <summary>パターンが見つからない場合、すべての有効なテキストと文字データ型には、パターンの最初に見つかった位置の開始位置で指定された式の場合、または 0 を返します。</summary>
        <returns>文字列パターンが見つかった位置の文字の開始位置。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [PATINDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141310)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pi">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Pi ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Pi() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Pi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "PI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Π の定数値を返します。</summary>
        <returns>Pi の数値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [PI \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141311)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteName">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>区切り記号の付いた Unicode 文字列を追加、入力文字列に有効な Microsoft SQL Server の区切られた識別子を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [QUOTENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141313)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteName">
      <MemberSignature Language="C#" Value="public static string QuoteName (string stringArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QuoteName(string stringArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "QUOTENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringArg">文字の内容を引用式に追加されます。</param>
        <summary>区切り記号の付いた Unicode 文字列を追加、入力文字列に有効な Microsoft SQL Server の区切られた識別子を返します。</summary>
        <returns>追加の角かっこで元の文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [QUOTENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141313)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteName">
      <MemberSignature Language="C#" Value="public static string QuoteName (string stringArg, string quoteCharacter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string QuoteName(string stringArg, string quoteCharacter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.QuoteName(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "QUOTENAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArg" Type="System.String" />
        <Parameter Name="quoteCharacter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringArg">文字の内容を引用式に追加されます。</param>
        <param name="quoteCharacter">区切り記号として使用する 1 つの文字の文字列。 単一引用符 \('\)、左または右角かっこ \(\) または二重引用符 \("\) を指定できます。 区切り記号が指定されていない場合は、角かっこが使用されます。</param>
        <summary>区切り記号の付いた Unicode 文字列を追加、入力文字列に有効な Microsoft SQL Server の区切られた識別子を返します。</summary>
        <returns>指定した元の文字列引用符 \('\) 文字を追加します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [QUOTENAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141313)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Radians">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した角度 \(度単位\) に対応するラジアンを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [RADIANS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141314)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Radians (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Radians(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">度単位で指定した角度。</param>
        <summary>指定した角度 \(度単位\) に対応するラジアンを返します。</summary>
        <returns>指定された角度のラジアンです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [RADIANS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141314)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Radians (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Radians(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">度単位で指定した角度。</param>
        <summary>指定した角度 \(度単位\) に対応するラジアンを返します。</summary>
        <returns>指定された角度のラジアン メジャーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [RADIANS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141314)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Radians (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Radians(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">角度を度数で測定されます。</param>
        <summary>指定した角度 \(度単位\) に対応するラジアンを返します。</summary>
        <returns>指定された角度のラジアン メジャーです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [RADIANS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141314)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radians">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Radians (Nullable&lt;long&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Radians(valuetype System.Nullable`1&lt;int64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Radians(System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RADIANS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">角度を度数で測定されます。</param>
        <summary>指定した角度 \(度単位\) に対応するラジアンを返します。</summary>
        <returns>指定された角度のラジアンです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [RADIANS \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141314)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rand">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>0 ~ 1 の排他擬似ランダム浮動小数点値を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [RAND \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141315)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rand">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Rand ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Rand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Rand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>0 ~ 1 の排他擬似ランダム浮動小数点値を返します。</summary>
        <returns>擬似乱数値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [RAND \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141315)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rand">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Rand (Nullable&lt;int&gt; seed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Rand(valuetype System.Nullable`1&lt;int32&gt; seed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Rand(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "RAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seed" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="seed">シード値。<c>seed</c> を指定しない場合は、SQL Server データベース エンジンによってシード値がランダムに割り当てられます。 指定したシード値について、返される結果は常に同じです。</param>
        <summary>0 ~ 1 の排他擬似ランダム浮動小数点値を返します。</summary>
        <returns>擬似乱数値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server の関数に関する情報を参照してください [RAND \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141315)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replicate">
      <MemberSignature Language="C#" Value="public static string Replicate (string target, Nullable&lt;int&gt; count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Replicate(string target, valuetype System.Nullable`1&lt;int32&gt; count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "REPLICATE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="count" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="target">有効な文字列。</param>
        <param name="count">繰り返す数時間を指定する値 <c>target</c>です。</param>
        <summary>文字列値を指定した回数だけ繰り返されます。</summary>
        <returns>対象の文字列で指定された回数の合計が繰り返されます <paramref name="count" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [REPLICATE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141318)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sign">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した式の符号として、正 \(\+1\)、負 \(\-1\)、ゼロ \(0\) のいずれかを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIGN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141323)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;decimal&gt; Sign (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; Sign(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Decimal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した式の符号として、正 \(\+1\)、負 \(\-1\)、ゼロ \(0\) のいずれかを返します。</summary>
        <returns>入力式の符号。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIGN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141323)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sign (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sign(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した式の符号として、正 \(\+1\)、負 \(\-1\)、ゼロ \(0\) のいずれかを返します。</summary>
        <returns>入力式の符号。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIGN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141323)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Sign (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Sign(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した式の符号として、正 \(\+1\)、負 \(\-1\)、ゼロ \(0\) のいずれかを返します。</summary>
        <returns>入力式の符号。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIGN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141323)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public static Nullable&lt;long&gt; Sign (Nullable&lt;long&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int64&gt; Sign(valuetype System.Nullable`1&lt;int64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sign(System.Nullable{System.Int64})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIGN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した式の符号として、正 \(\+1\)、負 \(\-1\)、ゼロ \(0\) のいずれかを返します。</summary>
        <returns>入力式の符号。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIGN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141323)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Sin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された角度の三角関数サインを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141324)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sin (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sin(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>指定された角度の三角関数サインを返します。</summary>
        <returns>入力式の三角関数サイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141324)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sin">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Sin (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Sin(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Sin(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>指定された角度の三角関数サインを返します。</summary>
        <returns>入力式の三角関数サイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SIN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141324)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoundCode">
      <MemberSignature Language="C#" Value="public static string SoundCode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string SoundCode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.SoundCode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SOUNDEX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">有効な文字列。</param>
        <summary>英数字の文字列を発音の似た単語や名前を検索する 4 文字 \(SOUNDEX\) コードに変換します。</summary>
        <returns>入力文字列の SOUNDEX コードです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SOUNDEX \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141325)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Space">
      <MemberSignature Language="C#" Value="public static string Space (Nullable&lt;int&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Space(valuetype System.Nullable`1&lt;int32&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Space(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SPACE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">空白文字の数。 負の場合は、null 文字列が返されます。</param>
        <summary>連続する空白文字の文字列を返します。</summary>
        <returns>指定した数のスペースで構成される文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SPACE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141326)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Square">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した数の 2 乗を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQUARE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141327)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Square">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Square (Nullable&lt;decimal&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Square(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQUARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">数値式。</param>
        <summary>指定した数の 2 乗を返します。</summary>
        <returns>入力値の 2 乗。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQUARE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141327)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Square">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Square (Nullable&lt;double&gt; arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Square(valuetype System.Nullable`1&lt;float64&gt; arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Square(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQUARE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg1" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg1">数値式。</param>
        <summary>指定した数の 2 乗を返します。</summary>
        <returns>入力値の 2 乗。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQUARE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141327)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SquareRoot">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した数値の平方根を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQRT \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141328)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SquareRoot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; SquareRoot (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; SquareRoot(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQRT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した数値の平方根を返します。</summary>
        <returns>入力値の平方根です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQRT \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141328)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SquareRoot">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; SquareRoot (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; SquareRoot(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.SquareRoot(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "SQRT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">数値式。</param>
        <summary>指定した数値の平方根を返します。</summary>
        <returns>入力値の平方根です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [SQRT \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141328)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StringConvert">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>数値データから変換されたデータの文字を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141331)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="number">数値式。</param>
        <summary>数値データから変換されたデータの文字を返します。</summary>
        <returns>入力式は、文字列に変換します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141331)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="number">数値式。</param>
        <summary>数値データから変換されたデータの文字を返します。</summary>
        <returns>入力された数値式は、文字列に変換します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141331)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number, Nullable&lt;int&gt; length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">数値式。</param>
        <param name="length">文字列の長さの合計です。 これには小数点、符号、数字、空白文字も含まれます。 既定値は 10 です。</param>
        <summary>数値データから変換されたデータの文字を返します。</summary>
        <returns>入力式は、文字列に変換します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141331)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number, Nullable&lt;int&gt; length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">数値式。</param>
        <param name="length">文字列の長さの合計です。 これには小数点、符号、数字、空白文字も含まれます。 既定値は 10 です。</param>
        <summary>数値データから変換されたデータの文字を返します。</summary>
        <returns>入力された数値式は、文字列に変換します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141331)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;decimal&gt; number, Nullable&lt;int&gt; length, Nullable&lt;int&gt; decimalArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; number, valuetype System.Nullable`1&lt;int32&gt; length, valuetype System.Nullable`1&lt;int32&gt; decimalArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Decimal&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="decimalArg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">数値式。</param>
        <param name="length">文字列の長さの合計です。 これには小数点、符号、数字、空白文字も含まれます。 既定値は 10 です。</param>
        <param name="decimalArg">小数点の右側に場所の数。<c>decimal</c> 16 以下である必要があります。 場合 <c>decimal</c> 16 を超える場合、結果は小数点以下 16 桁に切り捨てられます。</param>
        <summary>数値データから変換されたデータの文字を返します。</summary>
        <returns>入力式は、文字列に変換します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141331)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StringConvert">
      <MemberSignature Language="C#" Value="public static string StringConvert (Nullable&lt;double&gt; number, Nullable&lt;int&gt; length, Nullable&lt;int&gt; decimalArg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string StringConvert(valuetype System.Nullable`1&lt;float64&gt; number, valuetype System.Nullable`1&lt;int32&gt; length, valuetype System.Nullable`1&lt;int32&gt; decimalArg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="decimalArg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="number">数値式。</param>
        <param name="length">文字列の長さの合計です。 これには小数点、符号、数字、空白文字も含まれます。 既定値は 10 です。</param>
        <param name="decimalArg">小数点の右側に場所の数。<c>decimal</c> 16 以下である必要があります。 場合 <c>decimal</c> 16 を超える場合、結果は小数点以下 16 桁に切り捨てられます。</param>
        <summary>数値データから変換されたデータの文字を返します。</summary>
        <returns>入力された数値式は、文字列に変換します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STR \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141331)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stuff">
      <MemberSignature Language="C#" Value="public static string Stuff (string stringInput, Nullable&lt;int&gt; start, Nullable&lt;int&gt; length, string stringReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Stuff(string stringInput, valuetype System.Nullable`1&lt;int32&gt; start, valuetype System.Nullable`1&lt;int32&gt; length, string stringReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "STUFF")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringInput" Type="System.String" />
        <Parameter Name="start" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="stringReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stringInput">対象の文字列。</param>
        <param name="start">内の文字位置 <c>stringinput</c> 置換文字列の挿入します。</param>
        <param name="length">削除する文字数 <c>stringInput</c>します。 場合 <c>length</c> よりも長い <c>stringInput</c>, 、文字までが削除し、最後に <c>stringReplacement</c>します。</param>
        <param name="stringReplacement">部分文字列に挿入される <c>stringInput</c>します。</param>
        <summary>別の文字列には、文字列を挿入します。 指定された期間の開始位置からターゲット文字列の文字を削除し、開始位置から対象の文字列に 2 番目の文字列を挿入します。</summary>
        <returns>2 つの文字列で構成される文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [STUFF \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141708)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Tan">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>入力式の正接を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [TAN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141715)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Tan (Nullable&lt;decimal&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Tan(valuetype System.Nullable`1&lt;valuetype System.Decimal&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Decimal})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "TAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Decimal&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>入力式の正接を返します。</summary>
        <returns>入力の角度のタンジェント。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [TAN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141715)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tan">
      <MemberSignature Language="C#" Value="public static Nullable&lt;double&gt; Tan (Nullable&lt;double&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;float64&gt; Tan(valuetype System.Nullable`1&lt;float64&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Tan(System.Nullable{System.Double})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "TAN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Double&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ラジアンで表した角度。</param>
        <summary>入力式の正接を返します。</summary>
        <returns>入力の角度のタンジェント。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [TAN \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141715)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unicode">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; Unicode (string arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; Unicode(string arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.Unicode(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "UNICODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arg">有効な文字列。</param>
        <summary>Unicode 標準に定義された、入力式の先頭文字の整数値を返します。</summary>
        <returns>入力文字列の最初の文字の文字コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [UNICODE \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141716)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UserName">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した識別番号に対応するデータベース ユーザー名を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [USER\_NAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141718)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UserName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.UserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "USER_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定した識別番号に対応するデータベース ユーザー名を返します。</summary>
        <returns>ユーザー名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [USER\_NAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141718)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public static string UserName (Nullable&lt;int&gt; arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UserName(valuetype System.Nullable`1&lt;int32&gt; arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.SqlClient.SqlFunctions.UserName(System.Nullable{System.Int32})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Data.Objects.DataClasses.EdmFunction("SqlServer", "USER_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="arg">ユーザーの id です。</param>
        <summary>指定した識別番号に対応するデータベース ユーザー名を返します。</summary>
        <returns>ユーザー名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この関数を直接呼び出すことはできません。 この関数は、LINQ to Entities クエリ内でのみ表示できます。  
  
 この関数は、データベース内の対応する関数に変換されます。 対応する SQL Server 関数については、次を参照してください。 [USER\_NAME \(Transact\-SQL\)](http://go.microsoft.com/fwlink/?LinkId=141718)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>