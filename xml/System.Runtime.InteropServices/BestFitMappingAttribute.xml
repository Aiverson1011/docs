<Type Name="BestFitMappingAttribute" FullName="System.Runtime.InteropServices.BestFitMappingAttribute">
  <TypeSignature Language="C#" Value="public sealed class BestFitMappingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BestFitMappingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.BestFitMappingAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Interface, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Unicode 文字を、その文字に一番近い ANSI 文字に変換するかどうかを制御します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 You can apply this attribute to an assembly, interface, class, or structure.  
  
 By default, the common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me. Best\-fit mapping enables the interop marshaler to select a close\-matching character when no exact match exists. For example, the marshaler converts the Unicode copyright character to 'c' for unmanaged methods that accept ANSI characters.  
  
> [!CAUTION]
>  Some characters lack a best\-fit representation; these characters are called unmappable. Unmappable characters are usually converted to the default '?' ANSI character. Certain Unicode characters are converted to dangerous characters, such as the backslash '\\' character, which can inadvertently change a path.  
  
 <xref:System.Runtime.InteropServices.BestFitMappingAttribute> provides two parameters to control aspects of best\-fit mapping. You use the first parameter to toggle best\-fit mapping on and off. The default value is `true`, which enables best\-fit mapping on the assembly, interface, and class levels. An attribute applied to an interface or class overrides an assembly\-level attribute. You can likewise enable or disable best\-fit mapping for platform invoke calls by using the <xref:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping?displayProperty=fullName> field. A value set by the platform invoke field overrides all levels of <xref:System.Runtime.InteropServices.BestFitMappingAttribute>.  
  
 You can use the second parameter to control throwing an exception on unmappable characters. The default value for the <xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar> field is **languageKeyword tag is not supported!!!!**  
, which disables throwing an exception each time the runtime encounters a Unicode character that has to be converted to the '?' ANSI character. Even if best\-fit mapping is **languageKeyword tag is not supported!!!!**  
, unmappable characters generate an exception when the <xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar> field is **languageKeyword tag is not supported!!!!**  
. To tighten security, you can toggle the first parameter to **languageKeyword tag is not supported!!!!**  
 and the second parameter to **languageKeyword tag is not supported!!!!**  
. This combination of parameter settings turns best\-fit mapping off, but enables the exception\-throwing mechanism as a safety precaution.  
  
> [!CAUTION]
>  You cannot change the default values provided by <xref:System.Runtime.InteropServices.BestFitMappingAttribute> when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array. Best\-fit mapping is always enabled and no exception can be thrown. Be aware that this combination can compromise your security model.  
  
   
  
## 例  
 The following example shows how to disable best fit mapping and to throw an exception on the conversion of Unicode characters to the '?' ANSI character. Setting <xref:System.Runtime.InteropServices.BestFitMappingAttribute> parameters in this manner provides an added measure of security.  
  
 [!code-cpp[System.Runtime.InteropServices.BestFitMappingAttribute\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.interopservices.bestfitmappingattribute/cpp/source.cpp#1)]
 [!code-csharp[System.Runtime.InteropServices.BestFitMappingAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.bestfitmappingattribute/cs/source.cs#1)]
 [!code-vb[System.Runtime.InteropServices.BestFitMappingAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.bestfitmappingattribute/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Runtime.InteropServices.DllImportAttribute.BestFitMapping" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BestFitMappingAttribute (bool BestFitMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool BestFitMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.BestFitMappingAttribute.#ctor(System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="BestFitMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="BestFitMapping">
          <see langword="true" /> 最適マッピングが有効であるかを示すそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.InteropServices.BestFitMappingAttribute" /> クラスの値を設定、 <see cref="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping" /> プロパティです。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BestFitMapping">
      <MemberSignature Language="C#" Value="public bool BestFitMapping { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BestFitMapping" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.BestFitMappingAttribute.BestFitMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Unicode 文字を ANSI 文字に変換するときは、最適マッピングの動作を取得します。</summary>
        <value>
          <see langword="true" /> 最適マッピングが有効の場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 最適マッピングがある場合 `false` と <xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar> は `true`, 、ANSI 形式に変換が必要なすべての Unicode 文字には、アンマネージ コードに渡されるときに例外が発生します。 一部の文字はマッピング可能なも最適マッピングは `true`です。 一部の文字がない最適形式です。これらの文字といいます。 既定値にマップできない文字が変換通常 '?'ANSI 文字です。  
  
> [!CAUTION]
>  特定の Unicode 文字は、円記号など、危険な文字に変換されます ' \\' 文字で、パスを誤って変更することができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar" />
      </Docs>
    </Member>
    <Member MemberName="ThrowOnUnmappableChar">
      <MemberSignature Language="C#" Value="public bool ThrowOnUnmappableChar;" />
      <MemberSignature Language="ILAsm" Value=".field public bool ThrowOnUnmappableChar" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>有効または ANSI に変換されるマップできない Unicode 文字で例外のスローを無効に '?' 文字です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `false`, 、 <xref:System.Runtime.InteropServices.BestFitMappingAttribute.ThrowOnUnmappableChar> フィールドが無効になります。 それ以外の場合、例外がスローするたびに、相互運用マーシャラーは、マップできない文字を検出しました。 既定の `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>