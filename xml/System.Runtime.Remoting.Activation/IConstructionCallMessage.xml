<Type Name="IConstructionCallMessage" FullName="System.Runtime.Remoting.Activation.IConstructionCallMessage">
  <TypeSignature Language="C#" Value="public interface IConstructionCallMessage : System.Runtime.Remoting.Messaging.IMethodCallMessage" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConstructionCallMessage implements class System.Runtime.Remoting.Messaging.IMessage, class System.Runtime.Remoting.Messaging.IMethodCallMessage, class System.Runtime.Remoting.Messaging.IMethodMessage" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Activation.IConstructionCallMessage" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IMethodCallMessage</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オブジェクトの構築の呼び出しの要求を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザーが呼び出すことによって、新しいクライアント側でアクティブ オブジェクトのインスタンスを作成すると `new` または <xref:System.Activator.CreateInstance%2A?displayProperty=fullName> 、スレッドがユーザー コードに戻る前に、 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage> がリモート アプリケーションに送信します。 リモート処理アクティベーターによって処理される、リモート アプリケーションの構築メッセージが到着すると、\(1 個、または 1 つで指定されているか、既定、 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator%2A> プロパティ\)、新しいオブジェクトを作成します。 その後、リモート処理アプリケーションを返します、 <xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage> ローカル アプリケーションにします。<xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage> のインスタンスが含まれる <xref:System.Runtime.Remoting.ObjRef>, 、リモート オブジェクトに関する情報をパッケージ化します。 リモート処理インフラストラクチャに変換、 <xref:System.Runtime.Remoting.ObjRef> インスタンスは、ユーザー コードに返されるリモート オブジェクトへのプロキシにします。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ActivationType">
      <MemberSignature Language="C#" Value="public Type ActivationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ActivationType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクティブにするリモート オブジェクトの種類を取得します。</summary>
        <value>アクティブ化するリモート オブジェクトの型。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直前の呼び出し元には、インフラストラクチャ アクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For operating with infrastructure code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ActivationTypeName">
      <MemberSignature Language="C#" Value="public string ActivationTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ActivationTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.ActivationTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクティブにするリモート型の完全型名を取得します。</summary>
        <value>アクティブにするリモート型の完全型名。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">直前の呼び出し元には、インフラストラクチャ アクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For operating with infrastructure code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Activator">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Activation.IActivator Activator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Activation.IActivator Activator" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Activation.IActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはリモート オブジェクトをアクティブにするアクティベーターを設定します。</summary>
        <value>リモート オブジェクトをアクティブにするアクティベーターします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、階層構造で配置されたアクティベーターのチェーンは、ライセンス認証プロセスに関連するさまざまなタスクを完了します。 カスタムのアクティベーターを接続する場合は、必要があります、アクティベーター階層をスキャンし、適切な場所に、アクティベータを接続します。 使用して、 <xref:System.Runtime.Remoting.Activation.IActivator.NextActivator%2A?displayProperty=fullName> アクティベーター アクティベーターのチェーンをスキャンする現在のプロパティによって返されるプロパティ。  
  
 クライアント側でメッセージのアクティベーター チェーンに独自のアクティベーターを追加する場合、アクティベーターをシリアル化し、必要と判断した場合、サーバー側に転送される場合があります。 このため、カスタム アクティベーターをシリアル化要件の観点から非常に軽量なにする必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直前の呼び出し元には、インフラストラクチャ アクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For operating with infrastructure code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CallSiteActivationAttributes">
      <MemberSignature Language="C#" Value="public object[] CallSiteActivationAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] CallSiteActivationAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呼び出しサイトのアクティブ化の属性を取得します。</summary>
        <value>呼び出しサイトのアクティブ化の属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes%2A> インデクサーでは、オブジェクトのアクティブ化時に使用するその他の属性を指定することができます。 ユーザーが指定の <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes%2A> で、 `activationAttributes` パラメーターを <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直前の呼び出し元には、インフラストラクチャ アクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For operating with infrastructure code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="ContextProperties">
      <MemberSignature Language="C#" Value="public System.Collections.IList ContextProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ContextProperties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトが作成されるコンテキストを定義するコンテキスト プロパティの一覧を取得します。</summary>
        <value>オブジェクトを構築するためのコンテキストのプロパティの一覧です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しいオブジェクトのコンテキストは一般に、クラスのメタデータ属性に基づいてが選択されます。 コンテキスト選択メカニズムでは、クラスのメタデータにコンパイルすると、静的コンテキスト プロパティとも呼ばれるカスタム属性によって拡張できます。 オブジェクトをリモートでアクティブ化する際、 <xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A> 構築コール メッセージ内のさまざまな属性によって提供されたプロパティの一覧が含まれています。 これらのプロパティは、サーバー オブジェクトがアクティブであるコンテキストの作成に使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">直前の呼び出し元には、インフラストラクチャ アクセス許可がありません。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">For operating with infrastructure code. Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="T:System.Runtime.Remoting.Contexts.Context" />
      </Docs>
    </Member>
  </Members>
</Type>