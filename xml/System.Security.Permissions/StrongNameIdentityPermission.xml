<Type Name="StrongNameIdentityPermission" FullName="System.Security.Permissions.StrongNameIdentityPermission">
  <TypeSignature Language="C#" Value="public sealed class StrongNameIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StrongNameIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.StrongNameIdentityPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>厳密な名前の ID アクセス許可を定義します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!IMPORTANT]
>  以降で、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 、id アクセス許可は使用されません。  
>   
>  .NET Framework バージョン 1.0 および 1.1 では、id アクセス許可を持つことはできません、 <xref:System.Security.Permissions.PermissionState.Unrestricted> アクセス許可の状態の値。 .NET Framework version 2.0 以降では、id アクセス許可はアクセス許可の状態値を設定できます。  つまり、バージョン 2.0 以降での id アクセス許可があるアクセス許可を実装する場合と同様、 <xref:System.Security.Permissions.IUnrestrictedPermission> インターフェイスです。 つまり、id の要求は常に成功すると、アセンブリの id に関係なく、アセンブリに完全な信頼が付与されている場合。  
  
 使用 <xref:System.Security.Permissions.StrongNameIdentityPermission> 呼び出し元のコードが特定の厳密な名前のコード アセンブリであることを確認します。 完全な要求の <xref:System.Security.Permissions.StrongNameIdentityPermission> 、スタック内のすべてのアセンブリが、要求を満たす適切な証拠がある場合にのみ成功します。 リンク要求を使用して、 <xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> 属性は、直前の呼び出し元に適切な証拠がある場合にのみ成功します。  
  
 厳密な名前 id は、名前で特定のアセンブリのバージョンは、結合オプションでバイナリ ラージ オブジェクト \(BLOB\) と呼ばれる暗号化公開キーに基づきます。 キーは、一意の名前空間を定義し、名前の定義は、対応する秘密キーで署名されたアセンブリ内になければならないために、名前が正規品でを厳密に検証を提供します。  
  
 厳密な名前キーの有効性が信頼関係またはキーの発行先で必ずしもすべての証明書に依存しないことに注意してください。  
  
 .NET Framework バージョン 1.0 および 1.1 では、id アクセス許可の要求は、呼び出し元のアセンブリが完全に信頼できる場合でも有効です。 つまり、呼び出し元のアセンブリに完全な信頼がある場合でも id アクセス許可の確認要求によって、アセンブリが要求されている条件を満たしていない場合が失敗します。 .NET Framework のバージョンでは、id アクセス許可の要求を 2.0 以降は呼び出し元のアセンブリに完全な信頼がある場合に効果的ではありません。 これにより、すべてのアクセス許可の整合性が確保され、特殊なケースとして id アクセス許可の処理方法がなくなります。  
  
 厳密な名前の完全な説明については、 <xref:System.Security.Policy.StrongName> リファレンス ページです。 厳密な名前付きアセンブリの詳細については、次を参照してください。 [Strong\-Named Assemblies](http://msdn.microsoft.com/ja-jp/d4a80263-f3e0-4d81-9b61-f0cbeae3797b)します。  
  
 <xref:System.Security.Permissions.StrongNameIdentityPermission> 型のパブリック メンバーにアクセスするための厳密な名前の要件を定義するクラスを使用します。<xref:System.Security.Permissions.StrongNameIdentityPermissionAttribute> 属性をアセンブリ レベルでの厳密な名前の要件の定義を使用することができます。 .NET Framework version 2.0 以降にも使用できます、 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> 属性でそのアセンブリ内のすべての非パブリックな型を他のアセンブリを表示することを指定します。 詳細については、「[Friend Assemblies \(C\# and Visual Basic\)](http://msdn.microsoft.com/ja-jp/df0c70ea-2c2a-4bdc-9526-df951ad2d055)」を参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.StrongNameIdentityPermission" />
    <altmember cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />
    <altmember cref="T:System.Security.Policy.StrongName" />
    <altmember cref="T:System.Security.Policy.StrongNameMembershipCondition" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Security.Permissions.PermissionState" /> 値の 1 つ。</param>
        <summary>指定した <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> を使用して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 作成するか完全に制限 \(`None`\) または `Unrestricted` 権限です。  
  
> [!NOTE]
>  .NET Framework バージョン 1.0 および 1.1 では、id アクセス許可を持つことはできません、 <xref:System.Security.Permissions.PermissionState.Unrestricted> アクセス許可の状態の値。 .NET Framework version 2.0 以降では、id アクセス許可はアクセス許可の状態値を設定できます。  つまり、バージョン 2.0 以降での id アクセス許可があるアクセス許可を実装する場合と同様、 <xref:System.Security.Permissions.IUnrestrictedPermission> インターフェイスです。 つまり、id の要求は常に成功すると、アセンブリの id に関係なく、アセンブリに完全な信頼が付与されている場合。  
  
 .NET Framework バージョン 1.0 および 1.1 では、呼び出し元のアセンブリが完全に信頼できる場合でもは、id アクセス許可での要求を実行することは、効果的です。 呼び出し元のアセンブリには、完全な信頼が、id のアクセス許可の確認要求によって、アセンブリが要求されている条件を満たしていない場合が失敗します。 .NET Framework のバージョンでは、id アクセス許可の要求を 2.0 以降は呼び出し元のアセンブリに完全な信頼がある場合に効果的ではありません。 これには、すべての権限に特殊なケースとしては、id アクセス許可の扱いをなくして一貫性が保証されします。  
  
 アクセス許可の状態値がこのコンス トラクターを使用して <xref:System.Security.Permissions.PermissionState.None> 厳密な名前と一致しない id のアクセス許可を作成します。 設定した場合、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> と <xref:System.Security.Permissions.StrongNameIdentityPermission.Version%2A> のアクセス許可によって、特定の厳密な名前 id のプロパティを表すことができます。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> コンス トラクターです。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#7)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#7)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrongNameIdentityPermission (System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Permissions.StrongNamePublicKeyBlob blob, string name, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.#ctor(System.Security.Permissions.StrongNamePublicKeyBlob,System.String,System.Version)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="blob" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="blob">厳密な名前 ID の名前空間を定義する公開キー。</param>
        <param name="name">厳密な名前 ID の簡易名の部分。 これは、アセンブリの名前に対応します。</param>
        <param name="version">ID のバージョン番号。</param>
        <summary>指定した厳密な名前 ID の <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `name` と `version` パラメーター `null` アセンブリを識別するために、公開キーが使用される場合にのみです。 空の文字列 \(""\) の代わりに使用しないで `null`します。 場合 `name` 空の文字列には、 <xref:System.ArgumentException> がスローされます。  
  
 名前とアセンブリのバージョン番号の詳細については、次を参照してください。 [Strong\-Named Assemblies](http://msdn.microsoft.com/ja-jp/d4a80263-f3e0-4d81-9b61-f0cbeae3797b)します。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Security.Permissions.StrongNameIdentityPermission.%23ctor%2A> コンス トラクターです。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#8)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#8)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="blob" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> パラメーターが空の文字列 \(""\) になっています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
        <returns>現在のアクセス許可のコピー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセス許可のコピーは、元のアクセス許可とリソースに対して同じアクセス許可を表します。  
  
   
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Copy%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.StrongNameIdentityPermission> クラスです。 この例の最適な用途は、構築および全体の例を実行し、その出力を表示します。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#5)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#5)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e">アクセス許可の再構築に使用する XML エンコード。</param>
        <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アプリケーション コードでは使用されません。  
  
   
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.StrongNameIdentityPermission.FromXml%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.StrongNameIdentityPermission> クラスです。 この例の最適な用途は、構築および全体の例を実行し、その出力を表示します。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="e" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="e" /> パラメーターが有効なアクセス許可要素ではありません。  
  
 \-または\-  
  
 <paramref name="e" /> パラメーターのバージョン番号が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を作成して返します。</summary>
        <returns>現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。積集合が空の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つのアクセス許可の積集合は、両方に共通する操作のセットを表すアクセス許可です。 両方の元のアクセス許可に適合する要求だけでは、交差する位置を渡します。  
  
 2 つの同じ厳密な名前 id アクセス許可の積集合は、同じアクセス許可です。 積集合の 2 つの異なる \(ワイルドカード以外\) の式が空のアクセス許可。 ワイルドカードの式と一致する厳密な名前の交差部分は、厳密な名前です。 一致するワイルドカード表現が 2 つの交差部分がより長く、2 つの式の詳細。  
  
   
  
## 例  
 次のコード例は、使用する結果を示しています。、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Intersect%2A> メソッド、メソッドを使用する方法ではありません。 この例に示されている例の一部である、 <xref:System.Security.Permissions.StrongNameIdentityPermission> クラスです。 この例の最適な用途は、構築および全体の例を実行し、その出力を表示します。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#4)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#4)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
        <returns>現在のアクセス許可が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在のアクセス許可は、現在のアクセス許可を指定した権限によって完全に含まれる一連の操作を指定する場合、指定した権限のサブセットです。 \(、など\) が同じであって、その他のプロパティを持つ id、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> MyCompany.MyDepartment.\* ワイルドカードの式を含むプロパティを持つ id の一部として認識されますが、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> プロパティ MyCompany.MyDepartment.MyFile します。  
  
   
  
## 例  
 次のコード例は、使用する結果を示しています。、 <xref:System.Security.Permissions.StrongNameIdentityPermission.IsSubsetOf%2A> メソッド、メソッドを使用する方法ではありません。 この例に示されている例の一部である、 <xref:System.Security.Permissions.StrongNameIdentityPermission> クラスです。 この例の最適な用途は、構築および全体の例を実行し、その出力を表示します。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#2)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#2)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>厳密な名前 ID の簡易名の部分を取得または設定します。</summary>
        <value>ID の簡易名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> MyCompany.MyDepartment.MyFile と MyCompany.MyDepartment.\* の両方が有効な名前をたとえば、; プロパティの正確な名前を指定できますまたは最後の位置ではワイルドカード文字で変更できます。 設定しようとすると、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Name%2A> プロパティを空の文字列 \(""\)、 <xref:System.ArgumentException> がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">値は、空の文字列 \(""\) です。</exception>
        <exception cref="T:System.NotSupportedException">あいまいな ID が含まれているので、プロパティ値を取得できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.StrongNamePublicKeyBlob PublicKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.StrongNamePublicKeyBlob PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.StrongNamePublicKeyBlob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>厳密な名前 ID の名前空間を定義する公開キー blob を取得または設定します。</summary>
        <value>ID の公開キーを格納する <see cref="T:System.Security.Permissions.StrongNamePublicKeyBlob" />、またはキーが存在しない場合は <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">プロパティ値が <see langword="null" /> に設定されています。</exception>
        <exception cref="T:System.NotSupportedException">あいまいな ID が含まれているので、プロパティ値を取得できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
        <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、このメソッドはアプリケーション コードでは使用されません。  
  
   
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.StrongNameIdentityPermission.ToXml%2A> メソッドです。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#6)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#6)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.StrongNameIdentityPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のアクセス許可と結合するアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
        <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
        <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出しの結果 <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> は現在のアクセス許可と、指定した権限の両方で表されるすべての操作を表す権限。 いずれかのアクセス許可に適合する要求は、その共用体を渡します。  
  
 アクセス許可の和集合と `null` アクセス許可がない場合は、 `null`です。 アクセス許可の共用体、およびそのアクセス許可のサブセットは、もう一方を含むアクセス許可を示します。 その他の組み合わせの結果、 <xref:System.ArgumentException> 例外がスローされます。  
  
   
  
## 例  
 次のコード例は、使用する結果を示しています。、 <xref:System.Security.Permissions.StrongNameIdentityPermission.Union%2A> メソッド、メソッドを使用する方法ではありません。 この例に示されている例の一部である、 <xref:System.Security.Permissions.StrongNameIdentityPermission> クラスです。 この例の最適な用途は、構築および全体の例を実行し、その出力を表示します。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.StrongNameIdentityPermission\#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CPP/strongnameidentity.cpp#3)]
 [!code-csharp[System.Security.Permissions.StrongNameIdentityPermission\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/CS/strongnameidentity.cs#3)]
 [!code-vb[System.Security.Permissions.StrongNameIdentityPermission\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.StrongNameIdentityPermission/VB/strongnameidentity.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。  
  
 または  
  
 2 つのアクセス許可は等しくありません。その 1 つは、他方のサブセットです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.StrongNameIdentityPermission.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ID のバージョン番号を取得または設定します。</summary>
        <value>ID のバージョン。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">あいまいな ID が含まれているので、プロパティ値を取得できません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>