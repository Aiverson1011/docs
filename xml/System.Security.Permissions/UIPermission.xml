<Type Name="UIPermission" FullName="System.Security.Permissions.UIPermission">
  <TypeSignature Language="C#" Value="public sealed class UIPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UIPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.UIPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー インターフェイスとクリップボードに関連したアクセス許可を制御します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Windows での描画およびユーザーの入力イベントは、ユーザー インターフェイスです。  
  
 Windows を使用するアクセス許可は、次のいずれかを指定できます: 無制限、限定 <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows>, だけ <xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows>, 、またはウィンドウのイベント アクセスが許可される入力なし。<xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows><xref:System.Security.Permissions.UIPermissionWindow.SafeSubWindows> のタイトルと有害なコードで可能なスプーフィングを防止するサイズが制限されています。  
  
 クリップボードを使用するアクセス許可は、次のいずれかを指定できます: 無制限、書き込み専用、またはクリップボードへのアクセスが許可されません。 貼り付けを制限では、害を及ぼす可能性のアプリケーションから切り取り、コピー、およびキーボード コマンドを使用して、ユーザーによって開始されたときに、貼り付け操作を許可する一方のユーザーの同意なしにクリップボードからデータを取得できないようにします。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.UIPermissionAttribute" />
    <altmember cref="T:System.Security.Permissions.UIPermissionWindow" />
    <altmember cref="T:System.Security.Permissions.UIPermissionClipboard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">列挙値の 1 つ。</param>
        <summary>指定に従って完全に制限されているか、または無制限のアクセスを持つ、<see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターを作成するか、完全に制限された \(`None`\) または `Unrestricted` 形式のアクセスを許可します。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Security.Permissions.UIPermission.%23ctor%2A> コンス トラクターです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#7)]
 [!code-csharp[System.Security.Permissions.UIPermission\#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#7)]
 [!code-vb[System.Security.Permissions.UIPermission\#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> パラメーターが有効ではありません <see cref="T:System.Security.Permissions.PermissionState" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.UIPermissionClipboard clipboardFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.UIPermissionClipboard clipboardFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionClipboard)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clipboardFlag" Type="System.Security.Permissions.UIPermissionClipboard" />
      </Parameters>
      <Docs>
        <param name="clipboardFlag">列挙値の 1 つ。</param>
        <summary>クリップボードのためのアクセス許可があり、ウィンドウへのアクセス許可がない、<see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クリップボードとウィンドウの両方のアクセス許可を設定するには、両方のパラメーターを受け取るコンス トラクターを使用します。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionClipboard%29?displayProperty=fullName> コンス トラクターです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#9)]
 [!code-csharp[System.Security.Permissions.UIPermission\#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#9)]
 [!code-vb[System.Security.Permissions.UIPermission\#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clipboardFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> の値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.UIPermissionWindow windowFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="windowFlag" Type="System.Security.Permissions.UIPermissionWindow" />
      </Parameters>
      <Docs>
        <param name="windowFlag">列挙値の 1 つ。</param>
        <summary>ウィンドウのためのアクセス許可があり、クリップボードへのアクセス許可がない <see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クリップボードとウィンドウの両方のアクセス許可を設定するには、両方のパラメーターを受け取るコンス トラクターを使用します。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionWindow%29?displayProperty=fullName> コンス トラクターです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#8)]
 [!code-csharp[System.Security.Permissions.UIPermission\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#8)]
 [!code-vb[System.Security.Permissions.UIPermission\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="windowFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionWindow" /> の値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIPermission (System.Security.Permissions.UIPermissionWindow windowFlag, System.Security.Permissions.UIPermissionClipboard clipboardFlag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.UIPermissionWindow windowFlag, valuetype System.Security.Permissions.UIPermissionClipboard clipboardFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.#ctor(System.Security.Permissions.UIPermissionWindow,System.Security.Permissions.UIPermissionClipboard)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="windowFlag" Type="System.Security.Permissions.UIPermissionWindow" />
        <Parameter Name="clipboardFlag" Type="System.Security.Permissions.UIPermissionClipboard" />
      </Parameters>
      <Docs>
        <param name="windowFlag">列挙値の 1 つ。</param>
        <param name="clipboardFlag">列挙値の 1 つ。</param>
        <summary>ウィンドウとクリップボードのアクセス許可を指定して、<see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Security.Permissions.UIPermission.%23ctor%28System.Security.Permissions.UIPermissionWindow%2CSystem.Security.Permissions.UIPermissionClipboard%29?displayProperty=fullName> コンス トラクターです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#10)]
 [!code-csharp[System.Security.Permissions.UIPermission\#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#10)]
 [!code-vb[System.Security.Permissions.UIPermission\#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="windowFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionWindow" /> の値ではありません。  
  
 または  
  
 <paramref name="clipboardFlag" /> パラメーターが有効な <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> の値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clipboard">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.UIPermissionClipboard Clipboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.UIPermissionClipboard Clipboard" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UIPermission.Clipboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.UIPermissionClipboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクセス許可で指定されたクリップボードのアクセスを取得または設定します。</summary>
        <value>
          <see cref="T:System.Security.Permissions.UIPermissionClipboard" /> の値の 1 つ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
        <returns>現在のアクセス許可のコピー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アクセス許可のコピーは、元のアクセス許可とリソースに対して同じアクセス許可を表します。  
  
   
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.UIPermission.Copy%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#5)]
 [!code-csharp[System.Security.Permissions.UIPermission\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#5)]
 [!code-vb[System.Security.Permissions.UIPermission\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
        <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.UIPermission.FromXml%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#6)]
 [!code-csharp[System.Security.Permissions.UIPermission\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#6)]
 [!code-vb[System.Security.Permissions.UIPermission\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。  
  
 \-または\-  
  
 <paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
        <summary>現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を作成して返します。</summary>
        <returns>現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つのアクセス許可の積集合は、両方に共通する操作のセットを表すアクセス許可です。 具体的には、最も低い権限の値を表す <xref:System.Security.Permissions.UIPermissionWindow> と <xref:System.Security.Permissions.UIPermissionClipboard> から現在のアクセス許可と、指定した権限です。  
  
   
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.UIPermission.Intersect%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#4)]
 [!code-csharp[System.Security.Permissions.UIPermission\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#4)]
 [!code-vb[System.Security.Permissions.UIPermission\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
        <returns>現在のアクセス許可が、指定したアクセス許可のサブセットの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在のアクセス許可は、現在のアクセス許可が成功したすべての要求は、指定した権限も失敗した場合、指定した権限のサブセットです。 指定した権限、サブセットに含まれているアクセス許可を含む少なくともします。<xref:System.Security.Permissions.UIPermission.IsSubsetOf%2A> を返す `true`, 、両方の <xref:System.Security.Permissions.UIPermissionWindow> と <xref:System.Security.Permissions.UIPermissionClipboard> と等しいか、指定した権限の値より少ない制限の少ない権限を現在の値がある必要があります。  
  
   
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.UIPermission.IsSubsetOf%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.UIPermission\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#2)]
 [!code-vb[System.Security.Permissions.UIPermission\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.IsUnrestricted" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアクセス許可が無制限かどうかを示す値を返します。</summary>
        <returns>現在のアクセス許可が無制限の場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 無制限のアクセス許可は、アクセス許可によって保護されているすべてのリソースへのアクセスを表します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
        <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.UIPermission.ToXml%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#6)]
 [!code-csharp[System.Security.Permissions.UIPermission\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#6)]
 [!code-vb[System.Security.Permissions.UIPermission\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.UIPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のアクセス許可と結合するアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
        <summary>アクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
        <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出しの結果 <xref:System.Security.Permissions.UIPermission.Union%2A> アクセス許可が現在のアクセス許可によって表されるすべての操作だけでなく、指定した権限によって表されるすべての操作を表します。 具体的には、最も許容度が高い値を表す <xref:System.Security.Permissions.UIPermissionWindow> と <xref:System.Security.Permissions.UIPermissionClipboard> から現在のアクセス許可と、指定した権限です。  
  
   
  
## 例  
 次のコード例の動作を示しています、 <xref:System.Security.Permissions.UIPermission.Union%2A> メソッドです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
> [!NOTE]
>  このコード例は、その使用法を示しますが、メソッドの動作を示したものです。 セキュリティ インフラストラクチャでのアクセス許可クラスのメソッドを使用する一般に、これらはアプリケーションでは通常使用されません。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#3)]
 [!code-csharp[System.Security.Permissions.UIPermission\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#3)]
 [!code-vb[System.Security.Permissions.UIPermission\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.UIPermissionWindow Window { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Permissions.UIPermissionWindow Window" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.UIPermission.Window" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.UIPermissionWindow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アクセス許可で指定されたウィンドウへのアクセスを取得または設定します。</summary>
        <value>
          <see cref="T:System.Security.Permissions.UIPermissionWindow" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Security.Permissions.UIPermission.Window%2A> プロパティです。 この例に示されている例の一部である、 <xref:System.Security.Permissions.UIPermission> クラスです。  
  
 [!code-cpp[System.Security.Permissions.UIPermission\#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CPP/uipermission.cpp#2)]
 [!code-csharp[System.Security.Permissions.UIPermission\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/CS/uipermission.cs#2)]
 [!code-vb[System.Security.Permissions.UIPermission\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.UIPermission/VB/uipermission.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.Permissions.UIPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>