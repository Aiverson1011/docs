<Type Name="SiteIdentityPermission" FullName="System.Security.Permissions.SiteIdentityPermission">
  <TypeSignature Language="C#" Value="public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SiteIdentityPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.SiteIdentityPermission" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コードの生成元の Web サイトの ID アクセス許可を定義します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスを使用して、これは呼び出し元が、特定の Web サイトからです。 サイト id が Url からのコードの HTTP、HTTPS、および FTP プロトコルでのみ定義されます。 文字列では、サイトが、"\/\/"URL と、次のプロトコルの後にスラッシュ \(\/\)、たとえば、http:\/\/www.fourthcoffee.com\/process\/grind.htm www.fourthcoffee.com 存在する場合。 これには、ポート番号が含まれません。 場合は、所定の URL は http:\/\/www.fourthcoffee.com:8000、\/、サイトが www.fourthcoffee.com www.fourthcoffee.com:8000 ではありません。  
  
 まったく、またはワイルドカードは、サイトを照合することができます \("\*"\) ドット区切り文字のプレフィックス。 たとえば、サイトの名前文字列 \*. fourthcoffee.com だけでなく www.fourthcoffee.com fourthcoffee.com と一致します。 ワイルドカードをせず、サイト名に正確に一致することがあります。 サイト名の文字列 \* は、任意のサイトに一致が、サイトの証拠を持たないコードは一致しません。  
  
> [!IMPORTANT]
>  以降で、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], 、id アクセス許可は使用されません。  
>   
>  .NET Framework バージョン 1.0 および 1.1 では、呼び出し元のアセンブリが完全に信頼できる場合でもは、id アクセス許可での要求を実行することは、効果的です。 呼び出し元のアセンブリには、完全な信頼が、id のアクセス許可の確認要求によって、アセンブリが要求されている条件を満たしていない場合が失敗します。 以降、.NET Framework version 2.0 では、ユーザーのアクセス許可の要求反映されない呼び出し側のアセンブリに完全な信頼がある場合。 これには、すべての権限に特殊なケースとしては、id アクセス許可の扱いをなくして一貫性が保証されします。  
  
> [!NOTE]
>  前に .NET Framework のバージョンでは、 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], を使って、 <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> に信頼されたコードによってシステム リソースに不注意なアクセスを阻止する方法です。<xref:System.Security.CodeAccessPermission.Deny%2A> 使われていませんし、リソースへのアクセスが付与されたアクセス許可がアセンブリのセットだけで決定されるようになりました。 ファイルへのアクセスを制限するためには、サンド ボックスで部分的に信頼されたコードを実行し、コードのアクセスが許可されたリソースのみに対するアクセス許可を割り当てる必要があります。 サンド ボックスでアプリケーションを実行する方法の詳細については、次を参照してください。 [How To: Run Partially Trusted Code in a Sandbox](http://msdn.microsoft.com/ja-jp/d1ad722b-5b49-4040-bff3-431b94bb8095)します。  
  
> [!NOTE]
>  .NET Framework バージョン 1.0 および 1.1 では、id アクセス許可を持つことはできません、 <xref:System.Security.Permissions.PermissionState.Unrestricted> アクセス許可の状態の値。 以降、.NET Framework version 2.0 では、id アクセス許可は、アクセス許可の状態値を設定できます。 つまり、2.0 以降のバージョンの id アクセス許可があるアクセス許可を実装する場合と同様、 <xref:System.Security.Permissions.IUnrestrictedPermission> インターフェイスです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Permissions.SiteIdentityPermissionAttribute" />
    <altmember cref="T:System.Security.Policy.Site" />
    <altmember cref="T:System.Security.Policy.SiteMembershipCondition" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteIdentityPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Security.Permissions.PermissionState" /> 値の 1 つ。</param>
        <summary>指定した <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> を使用して、<see cref="T:System.Security.Permissions.PermissionState" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 完全に制限された状態の <xref:System.Security.Permissions.SiteIdentityPermission> サイトに一致しません。 このコンス トラクターはその他のアクセス許可の設計との整合性が含まれていますは実際には役に立ちません。  
  
> [!NOTE]
>  .NET Framework バージョン 1.0 および 1.1 では、id アクセス許可を持つことはできません、 <xref:System.Security.Permissions.PermissionState.Unrestricted> アクセス許可の状態の値。 以降、.NET Framework version 2.0 では、id アクセス許可は、アクセス許可の状態値を設定できます。 つまり、2.0 以降のバージョンの id アクセス許可があるアクセス許可を実装する場合と同様、 <xref:System.Security.Permissions.IUnrestrictedPermission> インターフェイスです。 つまり、id の要求は常に成功すると、アセンブリの id に関係なく、アセンブリに完全な信頼が付与されている場合。  
  
 .NET Framework バージョン 1.0 および 1.1 では、呼び出し元のアセンブリが完全に信頼できる場合でもは、id アクセス許可での要求を実行することは、効果的です。 呼び出し元のアセンブリには、完全な信頼が、id のアクセス許可の確認要求によって、アセンブリが要求されている条件を満たしていない場合が失敗します。 以降、.NET Framework version 2.0 では、ユーザーのアクセス許可の要求反映されない呼び出し側のアセンブリに完全な信頼がある場合。 これには、すべての権限に特殊なケースとしては、id アクセス許可の扱いをなくして一貫性が保証されします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> パラメーターが <see cref="T:System.Security.Permissions.PermissionState" /> の有効な値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SiteIdentityPermission (string site);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string site) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="site" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="site">サイトの名前またはワイルドカード式。</param>
        <summary>指定されたサイト ID を表す <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サイト id が Url からのコードの HTTP、HTTPS、および FTP プロトコルでのみ定義されます。 文字列では、サイトが、"\/\/"URL と、次のプロトコルの後にスラッシュ \(\/\)、たとえば、URL http:\/\/www.fourthcoffee.com\/process\/grind.htm\/ で www.fourthcoffee.com 存在する場合。 これには、ポート番号が含まれません。 場合は、所定の URL は http:\/\/www.fourthcoffee.com:8000、\/、サイトが www.fourthcoffee.com www.fourthcoffee.com:8000 ではありません。  
  
 まったく、またはワイルドカードは、サイトを照合することができます \("\*"\) ドット区切り文字のプレフィックス。 たとえば、サイトの名前文字列 \*. fourthcoffee.com だけでなく www.fourthcoffee.com fourthcoffee.com と一致します。 ワイルドカードをせず、サイト名に正確に一致することがあります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="site" /> パラメーターが有効な文字列ではないか、または有効なワイルドカード サイト名に一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.Copy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のアクセス許可の同一のコピーを作成して返します。</summary>
        <returns>現在のアクセス許可のコピー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A copy of the permission represents the same access to resources or the same site identity as the original permission.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement esd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement esd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="esd" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="esd">アクセス許可の再構築に使用する XML エンコード。</param>
        <summary>XML エンコードから指定された状態で、アクセス許可を再構築します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="esd" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="esd" /> パラメーターが有効なアクセス許可要素ではありません。  
  
 \-または\-  
  
 <paramref name="esd" /> パラメーターのバージョン番号が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のアクセス許可との共通部分のあるアクセス許可。 これは、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を作成して返します。</summary>
        <returns>現在のアクセス許可と指定したアクセス許可の共通部分を表す新しいアクセス許可。 積集合が空の場合、この新しいアクセス許可は <see langword="null" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つのアクセス許可の積集合は、サイトが、両方に共通するアクセス許可です。 両方の元のアクセス許可に適合する要求だけでは、交差する位置を渡します。 アクセスを表す www.fourthcoffee.com と 1 つにアクセスを表す権限の積集合などの \*. fourthcoffee.com は www.fourthcoffee.com へのアクセスを表す権限。  
  
 2 つのと同じサイト id のアクセス許可の積集合は、同じアクセス許可です。 積集合の 2 つの異なる \(ワイルドカード以外\) の式が空のアクセス許可。 ワイルドカードの式と一致するサイトの交差部分は、サイトです。 一致するワイルドカード表現が 2 つの交差部分がより長く、2 つの式の詳細。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">サブセットの関係にあるかどうかをテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型であることが必要です。</param>
        <summary>現在のアクセス許可が、指定したアクセス許可のサブセットであるかどうかを判断します。</summary>
        <returns>現在のアクセス許可が、指定したアクセス許可のサブセットである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 現在のアクセス許可は、現在のアクセス許可を指定した権限によって完全に含まれるサイトを指定する場合、指定した権限のサブセットです。  
  
 次の表の値が表示 <xref:System.Security.Permissions.SiteIdentityPermission.IsSubsetOf%2A> の現在のアクセス許可と、指定した権限の値の範囲。  
  
|現在のアクセス許可|指定したアクセス許可|IsSubsetOf|  
|---------------|----------------|----------------|  
|www.fourthcoffee.com|www.fourthcoffee.com|`true`|  
|www.fourthcoffee.com|www.tailspintoys.com|`false`|  
|www.fourthcoffee.com|\*. fourthcoffee.com|`true`|  
|www.fourthcoffee.com|\*.com|`true`|  
|\*. fourthcoffee.com|www.fourthcoffee.com|`false`|  
|\*. fourthcoffee.com|\*. fourthcoffee.com|`true`|  
|\*. fourthcoffee.com|\*.com|`true`|  
|以外のスコープ `None`|\*|`true`|  
|`None`|何か|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public string Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Site" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.SiteIdentityPermission.Site" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>作業中のサイトを取得または設定します。</summary>
        <value>作業中のサイト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 サイト id が Url からのコードの HTTP、HTTPS、および FTP プロトコルでのみ定義されます。 文字列では、サイトが、"\/\/"URL と、次のプロトコルの後にスラッシュ \(\/\)、たとえば、URL http:\/\/www.fourthcoffee.com\/process\/grind.htm\/ で www.fourthcoffee.com 存在する場合。 これには、ポート番号が含まれません。 場合は、所定の URL は http:\/\/www.fourthcoffee.com:8000、\/、サイトが www.fourthcoffee.com www.fourthcoffee.com:8000 ではありません。  
  
 まったく、またはワイルドカードは、サイトを照合することができます \("\*"\) ドット区切り文字のプレフィックス。 たとえば、サイトの名前文字列 \*. fourthcoffee.com だけでなく www.fourthcoffee.com fourthcoffee.com と一致します。 ワイルドカードをせず、サイト名に正確に一致することがあります。 サイト名の文字列 \* は、任意のサイトに一致が、サイトの証拠を持たないコードは一致しません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">あいまいな ID があるので、サイト ID を取得できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.ToXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクセス許可とその現在の状態の XML エンコードを作成します。</summary>
        <returns>状態情報を含む、アクセス許可の XML エンコード。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">現在のアクセス許可と結合するアクセス許可。 現在のアクセス許可と同じ型である必要があります。</param>
        <summary>現在のアクセス許可と指定されたアクセス許可の和集合であるアクセス許可を作成します。</summary>
        <returns>現在のアクセス許可と指定されたアクセス許可の和集合を表す新しいアクセス許可。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出しの結果 <xref:System.Security.Permissions.SiteIdentityPermission.Union%2A> は現在のアクセス許可と、指定した権限の両方で表されるすべてのサイトを表す権限。 いずれかのアクセス許可に適合する要求は、その共用体を渡します。 アクセスを表す www.fourthcoffee.com と 1 つにアクセスを表す権限の和集合などの \*. fourthcoffee.com へのアクセスを表すアクセス許可は、\*. fourthcoffee.com します。  
  
 アクセス許可の和集合と `null` アクセス許可がない場合は、 `null`です。 アクセス許可の共用体、およびそのアクセス許可のサブセットは、サブセットを含むアクセス許可を示します。 その他の組み合わせの結果、 <xref:System.ArgumentException> がスローされます。 たとえば、サイトの id www.fourthcoffee.com とサイトの id www.tailspintoys.com の和集合例外が発生はどちらもあるため、もう一方のサブセットです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> パラメーターが <see langword="null" /> でなく、また現在のアクセス許可と同じ型でもありません。  
  
 または  
  
 2 つのアクセス許可は等しくありません。また、その 1 つは他方のサブセットでもありません。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Security.Permissions.SiteIdentityPermission" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>