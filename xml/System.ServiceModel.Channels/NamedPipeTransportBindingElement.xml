<Type Name="NamedPipeTransportBindingElement" FullName="System.ServiceModel.Channels.NamedPipeTransportBindingElement">
  <TypeSignature Language="C#" Value="public class NamedPipeTransportBindingElement : System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NamedPipeTransportBindingElement extends System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>名前付きパイプ トランスポートのバインディング要素を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このトランスポートは、"`net.pipe`:\/\/`hostname`\/`path`" の形式の URI を使用します。 他の URI コンポーネントは省略可能です。  
  
 <xref:System.ServiceModel.Channels.NamedPipeTransportBindingElement> クラスを基にして、名前付きパイプ トランスポート プロトコルを実装するカスタム バインディングを作成します。 このトランスポートは、コンピューター上での [!INCLUDE[indigo1](~/includes/indigo1-md.md)] と [!INCLUDE[indigo2](~/includes/indigo2-md.md)] の間の通信に使用されます。  
  
 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービス モデルは、このクラスを使用して、<xref:System.ServiceModel.Channels.IChannelFactory> インターフェイスおよび <xref:System.ServiceModel.Channels.IChannelListener> インターフェイスを実装するファクトリ オブジェクトを作成します。 その後、これらのファクトリ オブジェクトは、名前付きパイプ プロトコルを使用して SOAP メッセージを送信するチャネルを作成したり、受け付けたりします。  
  
 このクラスが作成するファクトリを構成するには、<xref:System.ServiceModel.Channels.NamedPipeTransportBindingElement.ConnectionPoolSettings%2A> などのプロパティを設定します。  
  
 また、基本クラス <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement> では、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A> などのプロパティも設定できます。 プロパティの全一覧については、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement> を参照してください。  
  
 最後に、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement> の基本クラスである <xref:System.ServiceModel.Channels.TransportBindingElement> では、<xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A> などのプロパティを設定できます。 プロパティの全一覧については、<xref:System.ServiceModel.Channels.TransportBindingElement> を参照してください。  
  
   
  
## 例  
 この例では、このクラスを使用する方法を示します。  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#0)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 この例では、既定のコンス トラクターを使用する方法を示します。  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#1)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NamedPipeTransportBindingElement (System.ServiceModel.Channels.NamedPipeTransportBindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.NamedPipeTransportBindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.#ctor(System.ServiceModel.Channels.NamedPipeTransportBindingElement)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.NamedPipeTransportBindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned">
          <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> クラスのインスタンス。</param>
        <summary>
          <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、バインド要素の複製に使用されるコピー コンストラクターであり、派生クラスが <xref:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Clone%2A> を実装できるように公開されます。  
  
   
  
## 例  
 この例では、クラスの新しいインスタンスを初期化する方法を示します。  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#2)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">作成するチャネル ファクトリの種類。</typeparam>
        <param name="context">バインディング、動作、コントラクト、およびチャネル ファクトリの作成に必要なその他の情報を記述するメンバー。</param>
        <summary>チャネルの作成に使用できる、指定した種類のチャネル ファクトリを作成します。</summary>
        <returns>指定した種類のチャネル ファクトリを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、トランスポート バインド要素の構成に基づいてメッセージを送信するためのチャネル ファクトリを、種類を指定して作成できます。  
  
   
  
## 例  
 この例では、チャネルを作成するために使用される指定した種類のチャネル ファクトリを作成する方法を示します。  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#6)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentException">無効な引数が渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">作成するチャネル リスナーの種類。</typeparam>
        <param name="context">バインディング、動作、コントラクト、およびチャネル ファクトリの作成に必要なその他の情報を記述するメンバー。</param>
        <summary>指定した種類のチャネル リスナーを作成します。</summary>
        <returns>指定した種類のチャネル リスナーを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、名前付きパイプ バインド要素の構成に基づいてメッセージを受信するためのチャネル リスナーを、種類を指定して取得できます。  
  
   
  
## 例  
 この例では、指定した型のチャネル リスナーを作成する方法を示します。  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#7)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> として <see langword="null" /> を使用することはできません。</exception>
        <exception cref="T:System.ArgumentException">無効な引数が渡されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のバインド要素のコピーを作成します。</summary>
        <returns>現在のバインド要素のコピーを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 この例では、現在のバインド要素のコピーを作成する方法を示します。  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#5)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionPoolSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.NamedPipeConnectionPoolSettings ConnectionPoolSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.NamedPipeConnectionPoolSettings ConnectionPoolSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.ConnectionPoolSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.NamedPipeConnectionPoolSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>接続プール設定のコレクションを取得します。</summary>
        <value>接続プールに関連するさまざまなプロパティを格納する <see cref="T:System.ServiceModel.Channels.NamedPipeConnectionPoolSettings" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 This example shows how to get a collection of connection pool settings:  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#3)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.NamedPipeTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">取得するオブジェクト。</typeparam>
        <param name="context">
          <see cref="T:System.ServiceModel.Channels.BindingContext" />
        </param>
        <summary>
          <see cref="T:System.ServiceModel.Channels.BindingContext" /> から指定したオブジェクトを取得します。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.BindingContext" /> から取得した指定オブジェクト。オブジェクトが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、基本クラスまたはそのクラスの先祖から、指定したオブジェクトを取得します。 返されるオブジェクトは、通常、プロパティのコレクションです。たとえば、<xref:System.ServiceModel.Channels.ISecurityCapabilities> を実装するオブジェクトなどです。  
  
   
  
## 例  
 この例から指定したオブジェクトを取得する方法を示しています、 <xref:System.ServiceModel.Channels.BindingContext>:  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#8)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PipeSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.NamedPipeSettings PipeSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.NamedPipeSettings PipeSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.PipeSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.NamedPipeSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>名前付きパイプ トランスポート バインド要素のパイプの設定を取得します。</summary>
        <value>名前付きパイプ トランスポート バインド要素のパイプ設定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.NamedPipeTransportBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トランスポートの URI スキームを返します。</summary>
        <value>"net.pipe" であるトランスポートの URI スキームを返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、ベース アドレスに対するバインド検証を有効にするために提供されます。  
  
   
  
## 例  
 この例では、トランスポートの URI スキームを取得する方法を示します。  
  
 [!code-csharp[S\_UENamedPipeTransportBindingElement\#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/cs/program.cs#4)]
 [!code-vb[S\_UENamedPipeTransportBindingElement\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uenamedpipetransportbindingelement/vb/module1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Channels.NamedPipeTransportBindingElement" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>