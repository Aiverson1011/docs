<Type Name="FaultConverter" FullName="System.ServiceModel.Channels.FaultConverter">
  <TypeSignature Language="C#" Value="public abstract class FaultConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FaultConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.FaultConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>チャネルがスローした例外を、チャネルのプロトコルに準拠する SOAP エラー メッセージに変換します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FaultConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Channels.FaultConverter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultFaultConverter">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter (System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter(class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.FaultConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="version">メッセージのバージョン。</param>
        <summary>既定のエラー コンバーターを取得します。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.FaultConverter" /> のインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 トランスポート チャネルでは、このメソッドに既定の SOAP および WS\-Addressing エラー コンバーターの取得を委任する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTryCreateException">
      <MemberSignature Language="C#" Value="protected abstract bool OnTryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTryCreateException(class System.ServiceModel.Channels.Message message, class System.ServiceModel.Channels.MessageFault fault, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.MessageFault" />
        <Parameter Name="exception" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">エラー メッセージ。</param>
        <param name="fault">エラー。</param>
        <param name="exception">変換が成功した場合に <see langword="out" /> パラメーターとして返された SOAP 例外。</param>
        <summary>例外の作成を試みます。</summary>
        <returns>エラーが正常に変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チャネル レイヤーが、`GetProperty<FaultConverter>` を実装して、SOAP 例外へのエラー メッセージの変換をサポートできるようにするには、このメソッドをオーバーライドし、次の手順を実行して例外を作成します。  
  
-   エラー メッセージを調べます。  
  
-   認識された場合は、適切な変換を行います。  
  
-   認識されない場合は、内部チャネルで `GetProperty<FaultConverter>` を呼び出して変換します。  
  
 トランスポート チャネルは、<xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> に既定の SOAP\/WS\-Addressing エラー コンバーターの取得を委任する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTryCreateFaultMessage">
      <MemberSignature Language="C#" Value="protected abstract bool OnTryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTryCreateFaultMessage(class System.Exception exception, class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exception">SOAP 例外。</param>
        <param name="message">
          <see langword="out" /> パラメーターとして返されたエラー メッセージ。</param>
        <summary>エラーが SOAP 例外に変換されたら、エラー メッセージの作成を試みます。</summary>
        <returns>エラー メッセージが正常に作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 エラー変換をサポートするチャネルは、`GetProperty<FaultConverter>` を実装し、以下の処理を行うようにこのメソッドをオーバーライドします。 レイヤーが例外を変換できる場合は、それを実行します。それ以外の場合は、内部チャネルで `GetProperty<FaultConverter>` を呼び出します。 トランスポート チャネルは、<xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> に既定の SOAP\/WS\-Addressing エラー コンバーターの取得を委任する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateException">
      <MemberSignature Language="C#" Value="public bool TryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCreateException(class System.ServiceModel.Channels.Message message, class System.ServiceModel.Channels.MessageFault fault, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.MessageFault" />
        <Parameter Name="exception" Type="System.Exception&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">エラー メッセージ。</param>
        <param name="fault">エラー。</param>
        <param name="exception">変換が成功した場合に <see langword="out" /> パラメーターとして返された SOAP 例外。</param>
        <summary>
          <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> をエラー チェックでラップします。</summary>
        <returns>エラーが正常に変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> は、実装に必要な抽象クラスです。 現在のメソッドは、そのメソッドの呼び出しにいくつかのパラメーター エラー テストをラップします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> は <see langword="false" /> を返しましたが、<paramref name="exception" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFaultMessage">
      <MemberSignature Language="C#" Value="public bool TryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCreateFaultMessage(class System.Exception exception, class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exception">SOAP 例外。</param>
        <param name="message">
          <see langword="out" /> パラメーターとして返されたエラー メッセージ。</param>
        <summary>
          <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /> をエラー チェックでラップします。</summary>
        <returns>エラー メッセージが正常に作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> は、実装に必要な抽象クラスです。 現在のメソッドは、そのメソッドの呼び出しにいくつかのエラー テストをラップします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> は <see langword="false" /> を返しましたが、<paramref name="message" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>