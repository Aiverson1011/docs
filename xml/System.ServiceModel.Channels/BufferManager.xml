<Type Name="BufferManager" FullName="System.ServiceModel.Channels.BufferManager">
  <TypeSignature Language="C#" Value="public abstract class BufferManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BufferManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BufferManager" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Windows Communication Foundation (WCF) の多くの機能ではバッファーを使用する必要がありますが、バッファーの作成と破棄には手間がかかります。 バッファー プールの管理には、<see cref="T:System.ServiceModel.Channels.BufferManager" /> クラスを使用できます。 プールとそのバッファーは、このクラスをインスタンス化すると作成され、バッファー プールがガベージ コレクションによりクリアされると破棄されます。 バッファーを使用する必要があるときはいつでも、バッファーをプールから取得して使用し、終わったらプールに戻します。 バッファーを使用する必要があるたびにバッファーを作成して破棄するよりも、このプロセスの方がはるかに高速です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、一般に、カスタム エンコーダーまたはカスタム トランスポート チャネルの実装中に使用されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BufferManager ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BufferManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Channels.BufferManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Because this constructor is **languageKeyword tag is not supported!!!!**  
, you can only call it from a derived class.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BufferManager.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在マネージャーにキャッシュされているバッファーを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBufferManager">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.BufferManager CreateBufferManager (long maxBufferPoolSize, int maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.BufferManager CreateBufferManager(int64 maxBufferPoolSize, int32 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BufferManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferPoolSize" Type="System.Int64" />
        <Parameter Name="maxBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBufferPoolSize">プールの最大サイズ。</param>
        <param name="maxBufferSize">個別のバッファーの最大サイズ。</param>
        <summary>指定した最大バッファー プール サイズと、プール内の各個別バッファーの最大サイズを使用して、新しい BufferManager を作成します。</summary>
        <returns>指定したパラメーターを使用して <see cref="T:System.ServiceModel.Channels.BufferManager" /> オブジェクトを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method creates a new buffer pool with as many buffers as can be created.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InsufficientMemoryException">
          <block subset="none" type="note">  
<para>  
 [Windows ストア アプリ用 .NET](http://go.microsoft.com/fwlink/?LinkID=247912) または [ポータブル クラス ライブラリ](http://msdn.microsoft.com/ja-jp/c31e1663-c164-4e65-b66d-d3aa8750a154)では、基本クラスの例外である <see cref="T:System.OutOfMemoryException" /> を代わりにキャッチします。  
  
</para>  
</block>  
  
 十分なメモリがないため、要求されたバッファー プールを作成できませんでした。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxBufferPoolSize" /> または <paramref name="maxBufferSize" /> が 0 未満です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReturnBuffer">
      <MemberSignature Language="C#" Value="public abstract void ReturnBuffer (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReturnBuffer(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">返すバッファーへの参照。</param>
        <summary>バッファーをプールに返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 バッファーがプールに戻されて、再利用できるようになります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> の参照に <see langword="null" /> を指定することはできません。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" /> の長さが、プールのバッファー長プロパティと一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="TakeBuffer">
      <MemberSignature Language="C#" Value="public abstract byte[] TakeBuffer (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TakeBuffer(int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">要求するバッファーのサイズ \(バイト単位\)。</param>
        <summary>プールから指定したサイズを下限としたバッファーを取得します。</summary>
        <returns>要求したバッファー サイズのバイト配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 成功した場合は、少なくとも、要求したサイズのバイト配列バッファーが返されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="bufferSize" /> は 0 未満には設定できません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>