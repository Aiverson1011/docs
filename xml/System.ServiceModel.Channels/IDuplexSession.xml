<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>メッセージング エンドポイント間の双方向通信の両側に実装されるセッションのインターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Channels.IDuplexSession> インターフェイスは、<xref:System.ServiceModel.Channels.IInputSession> インターフェイスで定義されている受信セッションと、<xref:System.ServiceModel.Channels.IOutputSession> インターフェイスで定義されている送信セッションの結合です。 受信セッションと送信セッションは、どちらも、もう一方に関係なく終了できます。 送信セッションは、<xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> を呼び出して同期的に終了するか、または <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A> を呼び出して非同期的に終了することができます。  
  
 受信セッションは、リモート操作で終了できます。 受信セッションに関連付けられた <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> は、そのセッションがシャットダウンすると、`null` を返すようになります。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">この要求の状態情報を格納する <see langword="object" />。</param>
        <summary>送信セッションを終了する非同期操作を開始します。</summary>
        <returns>非同期送信セッションの終了を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 送信セッションを終了しても、受信セッションに影響はないため、入力チャネルに関連付けられているセッションでのメッセージ受信機能についてのステートメントはありません。 この操作は、既定の時間内に完了する必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">操作完了の制限時間を指定する <see cref="T:System.TimeSpan" />。</param>
        <param name="callback">
          <see cref="T:System.AsyncCallback" /> デリゲート。</param>
        <param name="state">この要求の状態情報を格納する <see langword="object" />。</param>
        <summary>操作がその時間内に完了する必要があるタイムアウトを指定して、送信セッションを終了する非同期操作を開始します。</summary>
        <returns>非同期送信セッションの終了を参照する <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 送信セッションを終了しても、受信セッションに影響はないため、入力チャネルに関連付けられているセッションでのメッセージ受信機能についてのステートメントはありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションを終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return **languageKeyword tag is not supported!!!!**  
 from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.  
  
 Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session. In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):  
  
-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.  
  
-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.  
  
-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.  
  
-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">操作完了の制限時間を指定する <see cref="T:System.TimeSpan" />。</param>
        <summary>指定した時間内に、セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションを終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return **languageKeyword tag is not supported!!!!**  
 from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.  
  
 Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session. In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):  
  
-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.  
  
-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.  
  
-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.  
  
-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">いずれかの <see cref="T:System.IAsyncResult" /> メソッドへの呼び出しで返された <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />。</param>
        <summary>セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションに対して、セッションを終了する非同期操作を完了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>送信セッションを終了する非同期操作を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>セッションに関連付けられたチャネルのエンドポイントから、これ以上メッセージが送信されないことを示している送信セッションを終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>