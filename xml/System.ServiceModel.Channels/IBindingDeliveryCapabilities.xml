<Type Name="IBindingDeliveryCapabilities" FullName="System.ServiceModel.Channels.IBindingDeliveryCapabilities">
  <TypeSignature Language="C#" Value="public interface IBindingDeliveryCapabilities" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingDeliveryCapabilities" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingDeliveryCapabilities" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>クライアントおよびサービスによって要求される可能性がある機能を記述およびアドバタイズするために、バインドで実装する必要があるインターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアントとサービスが、コントラクトの一部として、必要な機能の提供をバインドに要求できるようにする場合は、バインドが <xref:System.ServiceModel.Channels.IBindingDeliveryCapabilities> インターフェイスを実装する必要があります。  
  
   
  
## 例  
 次の例では、`CalculatorService` が、順序付けられたメッセージ配信で <xref:System.ServiceModel.WSHttpBinding> を使用する必要があることが要求されます。 信頼できるセッションおよびキューに置かれた配信は、既定ではこのバインドに使用されません。ただし、使用は可能です。  
  
```csharp  
<!-- Here is the configuration for a CalculatorService using a WSHttpBinding with ordered message delivery required. -->  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
   <system.serviceModel>  
      <services>  
         <service   
             type="Microsoft.ServiceModel.Samples.CalculatorService">  
            <!-- Use base address provided by host and a WSHttpBinding named "Binding1" -->  
            <endpoint address=""  
                      binding="wsHttpBinding"  
                      bindingConfiguration="Binding1"   
                      contract="Microsoft.ServiceModel.Samples.ICalculator" />  
         </service>  
      </services>  
  
      <bindings>  
         <wsHttpBinding>   
            <binding name="Binding1">           
               <!-- The next element enables a ReliableSession and required ordered delivery-->  
      <reliableSession enabled="true" ordered="true"/>  
      </binding>  
         </wsHttpBinding>  
      </bindings>  
  
   </system.serviceModel>  
</configuration>  
  
// The CalculatorService configuration has enabled a reliable session  
// with ordered delivery set to true. This means that the binding  
// requirement for ordered delivery specified by the  
// BindingRequirementsAttribute on the CalculatorService class  
// implemented below will be satisfied by this WSHttpBinding.  
  
using System;  
using System.ServiceModel;  
  
[ServiceContract]  
interface ICalculatorService  
{  
  [OperationBehavior()]  
  int Add(int a, int b);    
  
  [OperationContract]  
  int Subtract(int a, int b);  
}  
  
[BindingRequirements(  
  QueuedDeliveryRequirements=RequirementsMode.Disallow,  
  RequireOrderedDelivery=true  
)]  
class CalculatorService: ICalculatorService  
{  
  public int Add(int a, int b)  
  {  
    Console.WriteLine("Add called.");  
    return a + b;   
  }  
  
  public int Subtract(int a, int b)  
  {  
    Console.WriteLine("Subtract called.");  
    return a - b;  
  }  
  
  public int Multiply(int a, int b)  
  {  
    return a * b;  
  }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssuresOrderedDelivery">
      <MemberSignature Language="C#" Value="public bool AssuresOrderedDelivery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AssuresOrderedDelivery" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディングが送信時と同じ順序でのメッセージの配信の保証をサポートするかどうかを示す値を取得します。</summary>
        <value>メッセージを送信順に配信する必要がある場合は <see langword="true" />。メッセージを送信順以外の順で配信する可能性がある場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この <xref:System.ServiceModel.Channels.IBindingDeliveryCapabilities.AssuresOrderedDelivery%2A> プロパティの値は、実行時にサービスの説明が読み込まれるときに <xref:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery%2A> によって処理されます。 このチェックは、サービス用に選択または作成されたバインドによって、順序付けられたサービスの配信要件が満たされているかどうかを判断するために行われます。  
  
   
  
## 例  
 次の例では、`CalculatorService` が、順序付けられたメッセージ配信で <xref:System.ServiceModel.WSHttpBinding> を使用する必要があることが要求されます。 信頼できるセッションおよびキューに置かれた配信は、既定ではこのバインドに使用されません。ただし、使用は可能です。  
  
```csharp  
<!-- Here is the configuration for a CalculatorService using a WSHttpBinding with ordered message delivery required. -->  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
   <system.serviceModel>  
      <services>  
         <service   
             type="Microsoft.ServiceModel.Samples.CalculatorService">  
            <!-- Use base address provided by host and a WSHttpBinding named "Binding1" -->  
            <endpoint address=""  
                      binding="wsHttpBinding"  
                      bindingConfiguration="Binding1"   
                      contract="Microsoft.ServiceModel.Samples.ICalculator" />  
         </service>  
      </services>  
  
      <bindings>  
         <wsHttpBinding>   
            <binding name="Binding1">           
               <!-- The next element enables a ReliableSession and required ordered delivery-->  
      <reliableSession enabled="true" ordered="true"/>  
      </binding>  
         </wsHttpBinding>  
      </bindings>  
  
   </system.serviceModel>  
</configuration>  
  
// The CalculatorService configuration has enabled a reliable session  
// with ordered delivery set to true. This means that the binding  
// requirement for ordered delivery specified by the  
// BindingRequirementsAttribute on the CalculatorService class  
// implemented below will be satisfied by this WSHttpBinding.  
  
using System;  
using System.ServiceModel;  
  
[ServiceContract]  
interface ICalculatorService  
{  
  [OperationBehavior()]  
  int Add(int a, int b);    
  
  [OperationContract]  
  int Subtract(int a, int b);  
}  
  
[BindingRequirements(  
  QueuedDeliveryRequirements=RequirementsMode.Disallow,  
  RequireOrderedDelivery=true  
)]  
class CalculatorService: ICalculatorService  
{  
  public int Add(int a, int b)  
  {  
    Console.WriteLine("Add called.");  
    return a + b;   
  }  
  
  public int Subtract(int a, int b)  
  {  
    Console.WriteLine("Subtract called.");  
    return a - b;  
  }  
  
  public int Multiply(int a, int b)  
  {  
    return a * b;  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueuedDelivery">
      <MemberSignature Language="C#" Value="public bool QueuedDelivery { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool QueuedDelivery" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューを使ったメッセージの配信をバインディングがサポートするかどうかを示す値を取得します。</summary>
        <value>キューに置かれたメッセージの配信がサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この <xref:System.ServiceModel.Channels.IBindingDeliveryCapabilities.QueuedDelivery%2A> プロパティの値は、実行時にサービスの説明が読み込まれるときに処理されます。 このチェックは、サービス用に選択または作成されたバインドによって、サービスのキューに置かれた配信要件が満たされているかどうかを判断するために行われます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>