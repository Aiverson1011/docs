<Type Name="HttpRequestMessageProperty" FullName="System.ServiceModel.Channels.HttpRequestMessageProperty">
  <TypeSignature Language="C#" Value="public sealed class HttpRequestMessageProperty : System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequestMessageProperty extends System.Object implements class System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.HttpRequestMessageProperty" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IMessageProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>HTTP プロトコル経由の要求に利用できる追加情報にアクセスおよび応答するために、HTTP 要求へのアクセスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは開発者が HTTP 要求の情報に直接アクセスできるようにする汎用クラスであり、HTTP 固有の情報をカプセル化するために使用できます。 一例として、このクラスは、Representational State Transfer \(REST\) アーキテクチャに従って実装されたサービスをサポートするために使用できます。  
  
 このクラスを使用すると、以下のシナリオをサポートできます。  
  
-   要求ごとに使用する HTTP 動詞を変更する。  
  
-   要求によって HTTP ヘッダー \(キー、値\) ペアを設定および照会できるようにする。  
  
-   HTTP 要求に対してクエリ文字列を指定できるようにする。  
  
 このクラスを、<xref:System.ServiceModel.Channels.HttpTransportBindingElement> および関連クラスによって使用できます。  
  
 受信メッセージの場合、このプロパティはメッセージに追加されます。  
  
 送信メッセージの場合、このプロパティにより以下の処理が行われます。  
  
-   <xref:System.Net.HttpWebRequest.Method%2A> が <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.Method%2A> に設定されます。  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString%2A> が <xref:System.Net.HttpWebRequest.RequestUri%2A> の末尾に追加されます。  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers%2A> が、送信用に設定されている HTTP ヘッダーに追加されます。  
  
   
  
## 例  
 次のコードでは、このクラスのインスタンスでいくつかのプロパティを設定し、そのインスタンスをメッセージに組み込む方法を示します。  
  
 [!code-csharp[S\_Pox\#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#3)]
 [!code-vb[S\_Pox\#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestMessageProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpRequestMessageProperty.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンストラクターは、オブジェクトを次のように初期化します。  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.Method%2A> \= `POST`  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString%2A> には空の文字列が設定されます。  
  
-   <xref:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody%2A> \= `false`  
  
   
  
## 例  
 次のコードでは、コンストラクターを明示的に呼び出さずに、メッセージからこのクラスをインスタンス化する方法を示します。  
  
 [!code-csharp[S\_Pox\#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#0)]
 [!code-vb[S\_Pox\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.WebHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.WebHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 要求から HTTP ヘッダーを取得します。</summary>
        <value>HTTP 要求の HTTP ヘッダーを格納している <see cref="T:System.Net.WebHeaderCollection" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 状況によっては、このプロパティが使用できず、アクセスしようとすると例外が発生する場合があります。 このような状況は、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] が IIS でホストされている場合に、HTTP 要求の完了後に発生する可能性があります。特に、応答が送信されてからメッセージが使用できるようになる一方向のシナリオで発生する可能性があります。  
  
   
  
## 例  
 次のコードでは、このプロパティを使用してメッセージにカスタム ヘッダーを追加する方法を示します。  
  
 [!code-csharp[S\_Pox\#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#3)]
 [!code-vb[S\_Pox\#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 要求の HTTP 動詞を取得または設定します。</summary>
        <value>HTTP 要求の HTTP 動詞。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定では、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] は HTTP メッセージに対して POST 動詞を使用します。 GET 動詞は、[!INCLUDE[indigo2](~/includes/indigo2-md.md)] で ServiceHost のベース アドレスにアクセスするときにヘルプ情報を表示するために使用します。 これは、Web ブラウザーを使用しているときに [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスがアクティブかどうかを調べるのに便利です。 定義されているその他のメソッド、 [HTTP RFC](http://go.microsoft.com/fwlink/?LinkId=96616) は、PUT、DELETE、HEAD、オプション、トレース、および接続します。 他のサービスとの相互運用時に、これらのメソッドは特殊な動作を示します。  
  
   
  
## 例  
 次のコードでは、メッセージからこのクラスのインスタンスを取得した後、このプロパティに基づいて異なるメソッドにディスパッチしています。  
  
 [!code-csharp[PoxSample\#0](~/samples/snippets/csharp/VS_Snippets_CFX/poxsample/cs/server/messagebasedcustomerservice.cs#0)]
 [!code-vb[PoxSample\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/poxsample/vb/server/messagebasedcustomerservice.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public static string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Channels.HttpRequestMessageProperty" /> クラスに関連付けられているメッセージ プロパティの名前を取得します。</summary>
        <value>値 "httpRequest"。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public string QueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string QueryString" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>HTTP 要求に対するクエリ文字列を取得または設定します。</summary>
        <value>HTTP 要求からのクエリ文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 HTTP 要求のクエリ文字列を利用したセキュリティ攻撃が数多く存在することがよく知られています \(たとえば、SQL 挿入攻撃\)。 クエリ文字列に含まれるパラメーターは、常に厳しく検証してください。 値を検証しないで使用すると、よく知られたセキュリティ ホールが出現します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">値が <see langword="null" /> に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SuppressEntityBody">
      <MemberSignature Language="C#" Value="public bool SuppressEntityBody { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージの本文を無視してヘッダーのみを送信するかどうかを示す値を取得または設定します。</summary>
        <value>メッセージ本文を抑制する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、空のメッセージ要求に使用します。たとえば、メッセージ本文のない GET 要求を受け付けるサービスなどです。 このような場合は、応答メッセージに対する <xref:System.ServiceModel.Channels.HttpRequestMessageProperty> オブジェクトを作成するときに、<xref:System.ServiceModel.Channels.HttpRequestMessageProperty.SuppressEntityBody%2A> プロパティを `true` に設定します。  
  
 [!INCLUDE[indigo2](~/includes/indigo2-md.md)] 以外のサービスと相互運用している場合、一部の動詞は、HTTP 標準に従ってメッセージ本文を含むものと想定されていることに注意してください。たとえば、PUT や POST などです。 他の動詞は、メッセージ本文が抑制されるものと想定されています。たとえば、GET や HEAD などです。  
  
   
  
## 例  
 [!code-csharp[S\_Pox\#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_pox/cs/service.cs#2)]
 [!code-vb[S\_Pox\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_pox/vb/service.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IMessageProperty.CreateCopy">
      <MemberSignature Language="C#" Value="System.ServiceModel.Channels.IMessageProperty IMessageProperty.CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.ServiceModel.Channels.IMessageProperty System.ServiceModel.Channels.IMessageProperty.CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.HttpRequestMessageProperty.System#ServiceModel#Channels#IMessageProperty#CreateCopy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IMessageProperty</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>作成して、現在のオブジェクトのコピーを返します。</summary>
        <returns>A <see cref="T:System.ServiceModel.Channels.IMessageProperty" /> を現在のオブジェクトのコピーを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>