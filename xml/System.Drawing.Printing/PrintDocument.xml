<Type Name="PrintDocument" FullName="System.Drawing.Printing.PrintDocument">
  <TypeSignature Language="C#" Value="public class PrintDocument : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrintDocument extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrintDocument" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PrintPage")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Drawing.Printing")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows フォーム アプリケーションからの印刷時にプリンターに出力を送信する再利用可能なオブジェクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常のインスタンスを作成、 <xref:System.Drawing.Printing.PrintDocument> クラス、プロパティを設定、 <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A>と <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A>, を呼び出すと、 <xref:System.Drawing.Printing.PrintDocument.Print%2A> 印刷プロセスを開始する方法です。 処理、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントを使用して、印刷する出力を指定する、 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A><xref:System.Drawing.Graphics> のプロパティ、 <xref:System.Drawing.Printing.PrintPageEventArgs>です。  
  
 Windows フォーム アプリケーションから印刷の詳細については、次を参照してください。、 [Windows Forms Print Support](http://msdn.microsoft.com/ja-jp/a4a2960c-eb70-48e2-b641-cfb222704e46)です。 Windows Presentation Foundation アプリケーションから印刷する場合を参照してください、 <xref:System.Printing> 名前空間。  
  
   
  
## 例  
 次のコード例では、C:\\My Documents\\MyFile.txt を通常使うプリンターにという名前のファイルを印刷します。 例を実行するには、新しい Windows フォーム プロジェクトを作成し、ファイルの内容を置換のフォームにコード例を貼り付けます。 C\# では Form1.Designer.cs ファイルを削除する必要があります。 またを印刷するファイルにパスを変更します。  
  
> [!NOTE]
>  この例では、各行が、ページの幅内に収まることが必要です。  
  
 使用して、 <xref:System.ComponentModel>, 、<xref:System.Windows.Forms>, 、<xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Graphics" />
    <altmember cref="T:System.Drawing.Printing.PageSettings" />
    <altmember cref="T:System.Drawing.Printing.PrintController" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrintDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PrintDocument" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンス トラクターは、通常使うプリンターに基づくすべてのフィールドを初期化します。 作成後に、通常、 <xref:System.Drawing.Printing.PrintDocument>, からの出力に影響するプリンターとページの設定を設定する、 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> と <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> プロパティそれぞれします。  
  
   
  
## 例  
 次のコード例は、ドキュメントのページの向きを横を設定し、文書を印刷します。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler BeginPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler BeginPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> メソッドが呼び出されるとドキュメント印刷の最初のページの前にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常は、処理、 <xref:System.Drawing.Printing.PrintDocument.BeginPrint> イベント フォント、ファイル ストリーム、および印刷処理中に使用されているその他のリソースを初期化します。  
  
 インスタンスに関連付けるには、イベントをイベント ハンドラー、追加、 <xref:System.Drawing.Printing.PrintEventHandler> イベントにデリゲートします。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートとイベントを処理の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>印刷するすべてのページの既定値として使用されるページ設定を取得または設定します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PageSettings" /> ドキュメントの既定のページ設定を指定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のページ設定をいくつかを指定できます、 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> プロパティです。 など、 <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName> プロパティは、ページの色で印刷するかどうかを指定、 <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName> プロパティは、横または縦方向を指定し、 <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> プロパティは、ページの余白を指定します。  
  
 ページの単位で設定を指定するには、処理、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> または <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> イベントを変更し、 <xref:System.Drawing.Printing.PrintPageEventArgs.PageSettings%2A> に含まれている引数、 <xref:System.Drawing.Printing.PrintPageEventArgs> または <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>, 、それぞれします。  
  
> [!NOTE]
>  印刷が開始した後でページ設定の変更、 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A> プロパティではページを印刷するには影響されます。  
  
   
  
## 例  
 次のコード例は、ドキュメントのページの向きを横を設定し、文書を印刷します。 例では、次の 3 つの前提条件は、: 変数の名前を `filePath` ; を印刷するファイルのパスに設定されているという名前のメソッドを `pd_PrintPage`, 、処理する、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントが定義されて、および変数の名前付き `printer` プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrintDocument Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintDocument Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintDocument Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="DocumentName">
      <MemberSignature Language="C#" Value="public string DocumentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.DocumentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("document")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントの印刷中に、印刷ステータス ダイアログ ボックスやプリンター キューなどで表示するドキュメントの名前を取得または設定します。</summary>
        <value>ドキュメントの印刷中に表示するドキュメント名。 既定値は "document" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> property does not specify the file to print. Rather, you specify the output to print by handling the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event. For an example, see the <xref:System.Drawing.Printing.PrintDocument> class overview.  
  
   
  
## 例  
 The following code example prints a document with the first page in color, if the printer supports it, and sets the <xref:System.Drawing.Printing.PrintDocument.DocumentName%2A> to a user\-friendly name. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  
  
 Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="EndPrint">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintEventHandler EndPrint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintEventHandler EndPrint" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.EndPrint" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントの最後のページが印刷されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Typically, you handle the <xref:System.Drawing.Printing.PrintDocument.EndPrint> event to release fonts, file streams, and other resources used during the printing process, like fonts.  
  
 You indicate that there are no more pages to print by setting the <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> property to **languageKeyword tag is not supported!!!!**  
 in the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event. The <xref:System.Drawing.Printing.PrintDocument.EndPrint> event also occurs if the printing process is canceled or an exception occurs during the printing process.  
  
 To associate the event with your event handler, add an instance of the <xref:System.Drawing.Printing.PrintEventHandler> delegate to the event. The event handler is called whenever the event occurs. For more information about handling events with delegates, see [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OnBeginPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" /> イベントを発生させます。 後に呼び出されます、 <see cref="M:System.Drawing.Printing.PrintDocument.Print" /> メソッドが呼び出されると、ドキュメントの印刷がの最初のページの前にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> メソッドを使用して派生クラスでデリゲートを結び付けずに、イベントを処理します。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 派生クラスを呼び出すと、 <xref:System.Drawing.Printing.PrintDocument.OnBeginPrint%2A> を生成、メソッド、 <xref:System.Drawing.Printing.PrintDocument.BeginPrint> を呼び出して、イベント ハンドラーがデリゲートからのイベントです。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" /> method so that registered delegates receive the event. This method is a good place for initialization.</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEndPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnEndPrint (System.Drawing.Printing.PrintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndPrint(class System.Drawing.Printing.PrintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint" /> イベントを発生させます。 ドキュメントの最後のページが印刷されたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> メソッドを使用して派生クラスでデリゲートを結び付けずに、イベントを処理します。 派生クラスでイベントを処理する場合は、この手法をお勧めします。<xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> 印刷プロセスをキャンセルするか、印刷処理中に例外が発生した場合、メソッドが呼び出されます。  
  
 派生クラスを呼び出すと、 <xref:System.Drawing.Printing.PrintDocument.OnEndPrint%2A> を生成、メソッド、 <xref:System.Drawing.Printing.PrintDocument.EndPrint> を呼び出して、イベント ハンドラーがデリゲートからのイベントです。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)" /> method so that registered delegates receive the event. This method is a good place for uninitialization.</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="T:System.Drawing.Printing.PrintEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPrintPage">
      <MemberSignature Language="C#" Value="protected virtual void OnPrintPage (System.Drawing.Printing.PrintPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrintPage(class System.Drawing.Printing.PrintPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.PrintPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントを発生させます。 ページの印刷前に呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> メソッドを使用して派生クラスでデリゲートを結び付けずに、イベントを処理します。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 派生クラスを呼び出すと、 <xref:System.Drawing.Printing.PrintDocument.OnPrintPage%2A> を生成、メソッド、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> を呼び出して、イベント ハンドラーがデリゲートからのイベントです。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryPageSettings">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryPageSettings (System.Drawing.Printing.QueryPageSettingsEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryPageSettings(class System.Drawing.Printing.QueryPageSettingsEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Drawing.Printing.QueryPageSettingsEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />。</param>
        <summary>
          <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" /> イベントを発生させます。 それぞれの直前に呼び出された <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 派生クラスを呼び出すと、 <xref:System.Drawing.Printing.PrintDocument.OnQueryPageSettings%2A> を生成、メソッド、 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> を呼び出して、イベント ハンドラーがデリゲートからのイベントです。 詳細については、「[Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)」を参照してください。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>When overriding <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)" /> method so that registered delegates receive the event.</para>
        </block>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      </Docs>
    </Member>
    <Member MemberName="OriginAtMargins">
      <MemberSignature Language="C#" Value="public bool OriginAtMargins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OriginAtMargins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.OriginAtMargins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページに関連付けられているグラフィック オブジェクトの位置が、ユーザー指定の余白の内側にあるか、ページの印刷可能領域の左上隅にあるかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> グラフィックの原点がページの余白から開始する場合 <see langword="false" /> グラフィックの原点が印刷可能なページの左上隅にある場合。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 印刷可能な領域を計算するには、用紙、余白、ページの物理的なサイズとの位置を知る必要があります、 <xref:System.Drawing.Graphics> 配信元のオブジェクトします。<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> は `true`, 、 <xref:System.Drawing.Graphics> オブジェクトの場所を考慮、 <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> プロパティの値と、ページの印刷可能領域です。<xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> は `false`, の場所を特定のページの印刷可能領域のみが使用される、 <xref:System.Drawing.Graphics> オブジェクトの元のドメイン、 <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> 値は無視されます。  
  
 たとえば場合、 <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> は `true`, 、および <xref:System.Drawing.Printing.PageSettings.Margins%2A?displayProperty=fullName> それぞれの側では、1 インチに設定されて、 <xref:System.Drawing.Graphics> に含まれるオブジェクト、 <xref:System.Drawing.Printing.PrintPageEventArgs> 配置の 1 インチ、左右のページの上部からです。 ページの印刷可能領域の両側にインチ.25 場合および <xref:System.Drawing.Printing.PrintDocument.OriginAtMargins%2A> は `false`, 、 <xref:System.Drawing.Graphics> オブジェクトがある.25 左右のページの上部からインチです。  
  
> [!NOTE]
>  ページの印刷可能な領域を使用して、プリンターを異なります、対称であるとは限りません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public void Print ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Print() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.Print" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ドキュメントの印刷プロセスを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理することにより印刷する出力の指定、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントを使用して、 <xref:System.Drawing.Graphics> に含まれる、 <xref:System.Drawing.Printing.PrintPageEventArgs>です。  
  
 使用して、 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName> プロパティを指定するプリンターで文書を印刷する必要があります。  
  
 <xref:System.Drawing.Printing.PrintDocument.Print%2A> メソッドは、印刷ダイアログ ボックスを使用せず、ドキュメントを印刷します。 使用して、 <xref:System.Windows.Forms.PrintDialog> を印刷設定を選択することをユーザーに提供する場合。  
  
> [!NOTE]
>  場合によって処理されない例外、 <xref:System.Drawing.Printing.PrintDocument.Print%2A> メソッドは、印刷時にスローされると、ドキュメントの印刷を中止します。  
  
   
  
## 例  
 次のコード例では、既定のプリンターにコマンドラインを使用して指定されたファイルを印刷します。  
  
> [!NOTE]
>  この例では、各行が、ページの幅内に収まることが必要です。  
  
 使用して、 <xref:System.ComponentModel>, 、<xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、<xref:System.IO>, 、および <xref:System.Windows.Forms> この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrintPage Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintPage Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintPage Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintPage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for safe printing from a restricted dialog box. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PrintController">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintController PrintController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintController PrintController" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrintController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>印刷プロセスを制御するプリント コントローラーを取得または設定します。</summary>
        <value>
          <see cref="T:System.Drawing.Printing.PrintController" /> 印刷プロセスを制御します。 新しいインスタンスを既定では、 <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" /> クラスです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プリント コント ローラーは、いくつかの方法で印刷プロセスを制御します。 たとえば、ドキュメントを印刷する必要がありますに変換する <xref:System.Drawing.Graphics> オブジェクトです。 A <xref:System.Drawing.Printing.PrintController> または実際に文書を印刷するプリンターで印刷プレビューの画像のグラフィックスを描画する場所を指定します。 プリント コント ローラーは、すぐにドキュメントを印刷または指定した時間だけ待機するかどうかも指定できます。  
  
   
  
## 例  
 次のコード例では、インスタンスを作成することが必要です、 <xref:System.Drawing.Printing.PrintDocument> というクラス `myPrintDocument`します。 例では、新しいインスタンスを作成する、 <xref:System.Drawing.Printing.PrintController> クラスに割り当てて、 <xref:System.Drawing.Printing.PrintDocument.PrintController%2A> の `myPrintDocument`, 、文書を印刷するとします。  
  
 使用して、 <xref:System.Drawing.Printing> と <xref:System.Windows.Forms> この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrintController Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrintController Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrintController Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrintController Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for safe printing from a restricted dialog box. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="T:System.Drawing.Printing.PreviewPrintController" />
        <altmember cref="T:System.Drawing.Printing.PrintController" />
        <altmember cref="T:System.Windows.Forms.PrintControllerWithStatusDialog" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
        <altmember cref="T:System.Drawing.Printing.StandardPrintController" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドキュメントを印刷するプリンターを取得または設定します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings" /> ドキュメントを印刷する場所と方法を指定します。 既定値は、 <see cref="T:System.Drawing.Printing.PrinterSettings" /> のプロパティが既定値に設定します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 複数のプリンター設定を指定できます、 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A> プロパティです。 などを使用して、 <xref:System.Drawing.Printing.PrinterSettings.Copies%2A?displayProperty=fullName> プロパティを印刷する部数を指定する、 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A?displayProperty=fullName> プロパティを使用するプリンターを指定して、 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A?displayProperty=fullName> プロパティを印刷するページの範囲を指定します。  
  
   
  
## 例  
 次のコード例では、指定したプリンターにドキュメントを印刷します。 例は次の 3 つの前提条件: を変数名 `filePath` ; を印刷するファイルのパスに設定されているという名前のメソッドを `pd_PrintPage`, 、処理する、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントが定義されて、および変数の名前付き `printer` プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument.PrinterSettings Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument.PrinterSettings Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument.PrinterSettings Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument.PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.DocumentName" />
        <altmember cref="P:System.Drawing.Printing.PrintDocument.PrintController" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="PrintPage">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.PrintPageEventHandler PrintPage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.PrintPageEventHandler PrintPage" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のページに印刷する出力が必要なときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 印刷する出力を指定するには、使用、 <xref:System.Drawing.Printing.PrintPageEventArgs.Graphics%2A> のプロパティ、 <xref:System.Drawing.Printing.PrintPageEventArgs>です。 たとえば、印刷するテキストの行を指定する描画を使用して、テキスト、 <xref:System.Drawing.Graphics.DrawString%2A?displayProperty=fullName> メソッドです。  
  
 出力を指定するだけでなく他のページを設定して印刷するかを指定できます、 <xref:System.Drawing.Printing.PrintPageEventArgs.HasMorePages%2A?displayProperty=fullName> プロパティを `true`します。 既定値は `false`, 、印刷するページがあることを示します。 を通じて個別のページ設定を変更することも、 <xref:System.Drawing.Printing.PageSettings> を設定して、印刷ジョブを取り消すことができ、 <xref:System.Drawing.Printing.PrintPageEventArgs.Cancel%2A?displayProperty=fullName> プロパティを `true`します。 別のページ設定を使用して文書の各ページを印刷するには、処理、 <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> イベントです。  
  
 インスタンスに関連付けるには、イベントをイベント ハンドラー、追加、 <xref:System.Drawing.Printing.PrintPageEventHandler> イベントにデリゲートします。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートとイベントを処理の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例に示します処理、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントです。  
  
 別の例については、「[How to: Print a Multi\-Page Text File in Windows Forms](http://msdn.microsoft.com/ja-jp/362427f8-03d4-4826-b49f-60ab066ad322)」を参照してください。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrintDocument Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrintDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrintDocument Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrintDocument Example/CS/source.cs#1)]
 [!code-vb[Classic PrintDocument Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrintDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrintPageEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="QueryPageSettings">
      <MemberSignature Language="C#" Value="public event System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Drawing.Printing.QueryPageSettingsEventHandler QueryPageSettings" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Printing.PrintDocument.QueryPageSettings" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.QueryPageSettingsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>それぞれの直前に発生する <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 別のページ設定を使用して文書の各ページを印刷することができます。 個々 のプロパティを変更することでページ設定を設定する、 <xref:System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings%2A?displayProperty=fullName> プロパティまたはプロパティを設定して、 <xref:System.Drawing.Printing.PageSettings>です。 加えられた変更、 <xref:System.Drawing.Printing.PageSettings> のみ、現在のページ、ドキュメントの既定のページ設定ではなくに影響します。 印刷ジョブを設定して取り消すこともできます、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> プロパティを `true` の <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>です。  
  
 インスタンスに関連付けるには、イベントをイベント ハンドラー、追加、 <xref:System.Drawing.Printing.QueryPageSettingsEventHandler> イベントにデリゲートします。 イベントが発生するたびに、イベント ハンドラーが呼び出されます。 デリゲートとイベントを処理の詳細については、次を参照してください。 [Handling and Raising Events](http://msdn.microsoft.com/ja-jp/b6f65241-e0ad-4590-a99f-200ce741bb1f)します。  
  
   
  
## 例  
 次のコード例は、プリンターでサポートされている場合の色の最初のページを持つドキュメントを印刷します。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が作成されたら、および <xref:System.Drawing.Printing.PrintDocument.PrintPage> と <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> イベントが処理します。`currentPageNumber` ですべてのページを印刷した後、変数が増加、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントは表示されません。  
  
 使用して、 <xref:System.Drawing> と <xref:System.Drawing.Printing> この例の名前空間。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.QueryPageSettingsEventHandler" />
        <altmember cref="T:System.Drawing.Printing.PrintPageEventArgs" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.BeginPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.EndPrint" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrintDocument.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>印刷ドキュメントに関する情報を文字列形式で提供します。</summary>
        <returns>文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>