<Type Name="PageSettings" FullName="System.Drawing.Printing.PageSettings">
  <TypeSignature Language="C#" Value="public class PageSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PageSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PageSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>単一の印刷したページに適用される設定を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PageSettings> クラスを使用して、ページを印刷する方法を変更する設定を指定します。 通常、すべてのページを印刷する、既定の設定を設定する、 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=fullName> プロパティです。 ページの単位で設定を指定するには、処理、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> または <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings?displayProperty=fullName> イベントを変更し、 <xref:System.Drawing.Printing.PageSettings> に含まれている引数、 <xref:System.Drawing.Printing.PrintPageEventArgs> または <xref:System.Drawing.Printing.QueryPageSettingsEventArgs>, 、それぞれします。  
  
 処理の詳細については <xref:System.Drawing.Printing.PrintDocument> イベントを参照してください、 <xref:System.Drawing.Printing.PrintDocument> クラスの概要です。 印刷の詳細については、次を参照してください。、 <xref:System.Drawing.Printing> 名前空間の概要です。  
  
   
  
## 例  
 次の例では、処理、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントやチェック、 <xref:System.Drawing.Printing.PageSettings> の引数 <xref:System.Drawing.Printing.PrintPageEventArgs>します。 このコードを使用する追加、 <xref:System.Drawing.Printing.PrintDocument> という名前のコンポーネント `PrintDocument1` Windows フォームとの関連付けにその <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントと、 `printDocument1_PrintPage` 例のメソッドです。  
  
 [!code-csharp[System.Windows.Forms.MiscBugDriven\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.MiscBugDriven\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MiscBugDriven/VB/form1.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Printing.PrintDocument" />
    <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Printing.PageSettings" /> クラスの既定のプリンターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンス トラクターでは、すべてのフィールドを既定値を初期化します。  
  
 インスタンスで一般に、作成していない <xref:System.Drawing.Printing.PageSettings>, 、\] を使用して、 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=fullName> のすべてのページの設定を設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageSettings (System.Drawing.Printing.PrinterSettings printerSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Printing.PrinterSettings printerSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.#ctor(System.Drawing.Printing.PrinterSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="printerSettings" Type="System.Drawing.Printing.PrinterSettings" />
      </Parameters>
      <Docs>
        <param name="printerSettings">
          <see cref="T:System.Drawing.Printing.PrinterSettings" /> を使用するプリンターを説明します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Drawing.Printing.PageSettings" /> クラスの指定したプリンターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PageSettings.%23ctor%2A> コンス トラクターは、の新しいインスタンスを初期化するような <xref:System.Drawing.Printing.PageSettings> と設定、 <xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A> プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定されたページの向きを考慮に入れて、ページのサイズを取得、 <see cref="P:System.Drawing.Printing.PageSettings.Landscape" /> プロパティです。</summary>
        <value>A <see cref="T:System.Drawing.Rectangle" /> 長さと 1\/100 ページのインチの幅を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Drawing.Printing.PageSettings.Bounds%2A> プロパティと共に、 <xref:System.Drawing.Printing.PageSettings.Margins%2A> プロパティ ページの印刷領域を計算します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Margins" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコピーを作成 <see cref="T:System.Drawing.Printing.PageSettings" />します。</summary>
        <returns>このオブジェクトのコピー。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public bool Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Color" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページがカラーで印刷するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ページをカラーで印刷する場合それ以外の場合、 <see langword="false" />です。 既定値は、プリンターによって決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Drawing.Printing.PrinterSettings.SupportsColor%2A?displayProperty=fullName> プリンターがカラー印刷をサポートしているかを決定するプロパティです。 プリンターの色をサポートしていますが、カラーで印刷の設定、たくない場合、 <xref:System.Drawing.Printing.PageSettings.Color%2A> プロパティを `false`します。 既定値 `true`です。  
  
   
  
## 例  
 次のコード例は、プリンターでサポートされている場合の色の最初のページを持つドキュメントを印刷します。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が作成されたら、および <xref:System.Drawing.Printing.PrintDocument.PrintPage> と <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> イベントが処理します。  
  
 使用して、 <xref:System.Drawing> と <xref:System.Drawing.Printing> この例の名前空間。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="CopyToHdevmode">
      <MemberSignature Language="C#" Value="public void CopyToHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyToHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 ハンドル <see langword="DEVMODE" /> 構造体。</param>
        <summary>関連する情報をコピー、 <see cref="T:System.Drawing.Printing.PageSettings" /> を指定した <see langword="DEVMODE " />構造体。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出す、 <xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A> に関連する情報をコピーする方法、 `DEVMODE` から構造体、 <xref:System.Drawing.Printing.PageSettings>です。 このメソッドは必要なアンマネージ Win32 呼び出しを作成する場合に、 `DEVMODE`です。  
  
 情報のコピー、 `DEVMODE` 構造の <xref:System.Drawing.Printing.PageSettings>, 、呼び出す <xref:System.Drawing.Printing.PageSettings.SetHdevmode%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しないか、インストールされている既定のプリンターはありません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="HardMarginX">
      <MemberSignature Language="C#" Value="public float HardMarginX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの左にあるハード マージンの 1 インチの 1\/100 で、x 座標を取得します。</summary>
        <value>X 座標、インチ、左側のハード マージンの 1\/100 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ハード マージンは、プリンターによって設定される物理的な余白を表します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for access to unmanaged code. Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for full access to all printers. Related enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="HardMarginY">
      <MemberSignature Language="C#" Value="public float HardMarginY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HardMarginY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.HardMarginY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの上部にあるハード マージンの 1 インチの 1\/100 で、y 座標を取得します。</summary>
        <value>Y 座標、100 ページの上部にあるハード マージン、インチにします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ハード マージンは、プリンターによって設定される物理的な余白を表します。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for access to unmanaged code. Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</permission>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for full access to all printers. Related enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Landscape">
      <MemberSignature Language="C#" Value="public bool Landscape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Landscape" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Landscape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または横または縦方向のページを印刷するかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> ページを横向きで印刷する場合それ以外の場合、 <see langword="false" />です。 既定値は、プリンターによって決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Drawing.Printing.PrinterSettings.LandscapeAngle%2A?displayProperty=fullName> 角度 \(度数\)、縦向きが横方向の生成を循環したことを決定するプロパティです。  
  
   
  
## 例  
 次のコード例は、ドキュメントの既定ページの向きを横を設定、 <xref:System.Drawing.Printing.PrintDocument.DefaultPageSettings%2A?displayProperty=fullName> プロパティには、文書を印刷するとします。 この例では、3 つの前提条件があります。  
  
-   という名前の変数 `filePath` を印刷するファイルのパスに設定されています。  
  
-   という名前のメソッド `pd_PrintPage`, 、処理する、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントが定義されています。  
  
-   という名前の変数 `printer` プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PageSettings Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="E:System.Drawing.Printing.PrintDocument.PrintPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      </Docs>
    </Member>
    <Member MemberName="Margins">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Margins Margins { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.Margins Margins" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.Margins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Margins</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、このページの余白を設定します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.Margins" /> 1\/100 ページのインチの余白を表します。 既定値は、すべての側面に 1 インチの余白です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 処理するときに、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> イベントと共に、このプロパティを使用することができます、 <xref:System.Drawing.Printing.PageSettings.Bounds%2A> プロパティ ページの印刷領域を計算します。  
  
   
  
## 例  
 次のコード例、既定値を設定、ドキュメントのページ設定 1 インチの余白を両側にします。 この例では、3 つの前提条件があります。  
  
-   という名前の変数 `filePath` を印刷するファイルのパスに設定されています。  
  
-   という名前のメソッド `pd_PrintPage`, 、処理する、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントが定義されています。  
  
-   という名前の変数 `printer` プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PageSettings.Margins Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PageSettings.Margins Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PageSettings.Margins Example/CS/source.cs#1)]
 [!code-vb[Classic PageSettings.Margins Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PageSettings.Margins Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <altmember cref="T:System.Drawing.Printing.Margins" />
      </Docs>
    </Member>
    <Member MemberName="PaperSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSize PaperSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSize PaperSize" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSize</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページの用紙サイズを設定します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PaperSize" /> 、用紙のサイズを表します。 既定では、プリンターの既定の用紙サイズです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Drawing.Printing.PaperSize> に用紙のサイズを表す、 <xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName> プロパティの 1 つを含む、 <xref:System.Drawing.Printing.PaperKind> 値。  
  
 設定、 <xref:System.Drawing.Printing.PageSettings.PaperSize%2A> プロパティを有効なページを <xref:System.Drawing.Printing.PaperSize>, を通じて利用できる、 <xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A?displayProperty=fullName> コレクションです。  
  
 カスタム用紙サイズを指定する方法については、次を参照してください。、 <xref:System.Drawing.Printing.PaperSize.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次のコード例で指定されたサイズに基づく用紙サイズを含め、ドキュメントの既定のページの 3 つのプロパティの設定、 `comboPaperSize` コンボ ボックスしを使用してドキュメントを印刷、 <xref:System.Drawing.Printing.PrintDocument.Print%2A> メソッドです。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が存在する特定のコンボ ボックスが存在するとします。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しないか、インストールされている既定のプリンターはありません。</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Height" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Kind" />
        <altmember cref="P:System.Drawing.Printing.PaperSize.Width" />
      </Docs>
    </Member>
    <Member MemberName="PaperSource">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PaperSource PaperSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PaperSource PaperSource" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PaperSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PaperSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定\] ページの給紙方法です。たとえば、プリンターの上段のトレイです。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PaperSource" /> 、用紙のソースを指定します。 既定では、プリンターの既定の給紙方法です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Drawing.Printing.PaperSource> に用紙のソースを表す、 <xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName> の 1 つを含むプロパティ、 <xref:System.Drawing.Printing.PaperSourceKind> 値。  
  
 設定、 <xref:System.Drawing.Printing.PageSettings.PaperSource%2A> プロパティを有効なページを <xref:System.Drawing.Printing.PaperSource>, を通じて利用できる、 <xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A?displayProperty=fullName> コレクションです。  
  
   
  
## 例  
 次のコード例で選択したソースに基づく給紙方法を含め、ドキュメントの既定のページの 3 つのプロパティの設定、 `comboPaperSource` コンボ ボックスしを使用してドキュメントを印刷、 <xref:System.Drawing.Printing.PrintDocument.Print%2A> メソッドです。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が存在する特定のコンボ ボックスが存在するとします。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
[!code-vb[PaperSource and PaperSize Example with Resolution#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
[!code-vb[PaperSource and PaperSize Example with Resolution#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
[!code-cpp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
[!code-csharp[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
[!code-vb[PaperSource and PaperSize Example with Resolution#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しないか、インストールされている既定のプリンターはありません。</exception>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="P:System.Drawing.Printing.PaperSource.Kind" />
        <altmember cref="T:System.Drawing.Printing.PaperSourceKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintableArea">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF PrintableArea { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF PrintableArea" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrintableArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターのページの印刷可能領域の境界を取得します。</summary>
        <value>A <see cref="T:System.Drawing.RectangleF" /> 表す長さと幅を 100 分の領域のインチで、プリンターが印刷されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PageSettings.PrintableArea%2A> プロパティは、ページの向きが横または縦向きであるかどうかに正しい値を返します。  
  
 このプロパティを使用すると、印刷可能領域内では、ページの余白に印刷します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrinterResolution">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterResolution PrinterResolution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterResolution PrinterResolution" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterResolution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterResolution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページのプリンターの解像度を設定します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterResolution" /> ページのプリンターの解像度を指定します。 既定では、プリンターの既定の解決です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Drawing.Printing.PrinterResolution> からのプリンターの解像度を表す、 <xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName> プロパティの 1 つを含む、 <xref:System.Drawing.Printing.PrinterResolutionKind> 値。  
  
 設定、 <xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A> プロパティを有効なページを <xref:System.Drawing.Printing.PrinterResolution>, を通じて利用できる、 <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A?displayProperty=fullName> コレクションです。  
  
   
  
## 例  
 次のコード例は、プリンターの解像度で選択した解像度に基づくを含め、ドキュメントの既定のページの 3 つのプロパティを設定、 `comboPrintResolution` コンボ ボックスしを使用してドキュメントを印刷、 <xref:System.Drawing.Printing.PrintDocument.Print%2A> メソッドです。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が存在する特定のコンボ ボックスが存在するとします。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#4](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#4)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#4](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#4)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しないか、インストールされている既定のプリンターはありません。</exception>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="P:System.Drawing.Printing.PrinterResolution.Kind" />
        <altmember cref="T:System.Drawing.Printing.PrinterResolutionKind" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      </Docs>
    </Member>
    <Member MemberName="PrinterSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings PrinterSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings PrinterSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはページに関連付けられているプリンターの設定を設定します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings" /> ページに関連付けられているプリンターの設定を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プリンターの設定を使用すると、設定されていないページのプロパティの既定値を検索します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterSettings" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.SetHdevmode(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 ハンドル <see langword="DEVMODE" /> 構造体。</param>
        <summary>関連する情報をコピー、 <see cref="T:System.Drawing.Printing.PageSettings" /> 指定された対象から <see langword="DEVMODE" /> 構造体。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドに関連する情報を使用して、 `DEVMODE` 構造の <xref:System.Drawing.Printing.PageSettings>です。  
  
 情報のコピー、 <xref:System.Drawing.Printing.PageSettings> に、 `DEVMODE`, 、呼び出す <xref:System.Drawing.Printing.PageSettings.CopyToHdevmode%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プリンターのハンドルが正しくありません。</exception>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しないか、インストールされている既定のプリンターはありません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="M:System.Drawing.Printing.PageSettings.CopyToHdevmode(System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PageSettings.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>変換、 <see cref="T:System.Drawing.Printing.PageSettings" /> 文字列形式にします。</summary>
        <returns>さまざまなプロパティ設定を示す文字列、 <see cref="T:System.Drawing.Printing.PageSettings" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PageSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>