<Type Name="PrinterSettings" FullName="System.Drawing.Printing.PrinterSettings">
  <TypeSignature Language="C#" Value="public class PrinterSettings : ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PrinterSettings extends System.Object implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Printing.PrinterSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Windows フォーム アプリケーションから印刷する場合、印刷するプリンターなど、ドキュメントを印刷する方法に関する情報を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常は、アクセス、 <xref:System.Drawing.Printing.PrinterSettings> を通じて <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName> または <xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=fullName> プリンターの設定を変更するプロパティです。 最も一般的なプリンター設定は <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>, 、印刷するプリンターを指定します。  
  
 Windows フォームで印刷の詳細については、次を参照してください。、 <xref:System.Drawing.Printing> 名前空間の概要です。 Windows Presentation Foundation アプリケーションから印刷する場合を参照してください、 <xref:System.Printing> 名前空間。  
  
   
  
## 例  
 次のコード例では、指定したプリンターにドキュメントを印刷します。 この例では、3 つの前提条件があります。  
  
-   という名前の変数 `filePath` を印刷するファイルのパスに設定されています。  
  
-   という名前のメソッド `pd_PrintPage`, 、処理する、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントが定義されています。  
  
-   という名前の変数 `printer` プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrinterSettings Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
    <altmember cref="P:System.Drawing.Printing.PrintDocument.PrinterSettings" />
    <altmember cref="P:System.Drawing.Printing.PageSettings.PrinterSettings" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrinterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Drawing.Printing.PrinterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンス トラクターでは、すべてのフィールドを既定値を初期化します。  
  
 インスタンスで一般に、作成していない <xref:System.Drawing.Printing.PrinterSettings>, 、\] を使用して、 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName> プリンターの設定を設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDuplex">
      <MemberSignature Language="C#" Value="public bool CanDuplex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDuplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターが両面印刷をサポートするかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> プリンターが両面印刷をサポートしている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 双方向を使用して印刷し、プリンターがサポートする場合は設定 <xref:System.Drawing.Printing.PrinterSettings.Duplex%2A> のいずれかに、 <xref:System.Drawing.Printing.Duplex> 値。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコピーを作成 <see cref="T:System.Drawing.Printing.PrinterSettings" />します。</summary>
        <returns>このオブジェクトのコピー。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collate">
      <MemberSignature Language="C#" Value="public bool Collate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Collate" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Collate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または印刷されるドキュメントを部単位であるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 印刷ドキュメントを部単位で; 場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 コピーの数が 1 より大きい場合にのみ、照合が実行されます。 設定、 <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> プロパティを印刷する部数を指定します。  
  
 設定 <xref:System.Drawing.Printing.PrinterSettings.Collate%2A> に `true` 次回のコピーの最初のページが印刷される前に、ドキュメントの完全なコピーを印刷します。`false` 次のページを印刷する前に指定されたコピーの数、各ページが印刷されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Copies">
      <MemberSignature Language="C#" Value="public short Copies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Copies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Copies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または印刷するドキュメントのコピーの数を設定します。</summary>
        <value>印刷するコピーの数。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべてのプリンターでは、複数部数の印刷をサポートします。 使用することができます、 <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> の最大数を確認するには、プリンターがサポートするをコピーします。 コピーの数は、プリンターでサポートされているコピーの最大数より大きく設定されて、最大数のコピーのみの印刷し、例外は発生しません。  
  
> [!NOTE]
>  一部のプリンタが、一度に複数のコピーを印刷をサポートしていません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">値、 <see cref="P:System.Drawing.Printing.PrinterSettings.Copies" /> プロパティが 0 未満です。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Collate" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返します。、 <see cref="T:System.Drawing.Graphics" /> を作成するときに役立つプリンター情報を格納している、 <see cref="T:System.Drawing.Printing.PrintDocument" />です。</summary>
        <returns>A <see cref="T:System.Drawing.Graphics" /> プリンターから情報を格納します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> メソッドを取得できます、 <xref:System.Drawing.Graphics> 印刷ジョブを作成しなくてもプリンターのです。 使用することができます、 <xref:System.Drawing.Graphics> フォント、サイズ、および複雑な印刷ジョブの種類のスタイルのようなビジュアル要素をレイアウトする方法について決定を下すにです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <altmember cref="T:System.Drawing.Printing.PrintDocument" />
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="honorOriginAtMargins">
          <see langword="true" />余白の原点を示すためにそれ以外の場合、<see langword="false" />です。</param>
        <summary>返します、<see cref="T:System.Drawing.Graphics" />余白の原点をオプションで指定して、プリンターの情報を格納します。</summary>
        <returns>A<see cref="T:System.Drawing.Graphics" />からプリンター情報を含む、<see cref="T:System.Drawing.Printing.PageSettings" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>メソッドを取得できます、<xref:System.Drawing.Graphics>プリンター、印刷ジョブを作成せずにします。 使用して、<xref:System.Drawing.Graphics>基づく決定を行う方法のレイアウトにビジュアル要素のフォント、サイズ、および複雑な印刷ジョブの種類のスタイルと同様にします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
      </Parameters>
      <Docs>
        <param name="pageSettings">
          <see cref="T:System.Drawing.Printing.PageSettings" /> のグラフィック オブジェクトを取得します。</param>
        <summary>返します。、 <see cref="T:System.Drawing.Graphics" /> に指定された関連付けられているプリンター情報を含む <see cref="T:System.Drawing.Printing.PageSettings" />します。</summary>
        <returns>A <see cref="T:System.Drawing.Graphics" /> からプリンター情報を含む、 <see cref="T:System.Drawing.Printing.PageSettings" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> メソッドを取得できます、 <xref:System.Drawing.Graphics> 印刷ジョブを作成しなくてもプリンターのです。 使用して、 <xref:System.Drawing.Graphics> フォント、サイズ、および複雑な印刷ジョブの種類のスタイルのようなビジュアル要素をレイアウトする方法について決定を下すにです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMeasurementGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateMeasurementGraphics(class System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
        <Parameter Name="honorOriginAtMargins" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pageSettings">
          <see cref="T:System.Drawing.Printing.PageSettings" /> を取得する、 <see cref="T:System.Drawing.Graphics" /> のオブジェクトします。</param>
        <param name="honorOriginAtMargins">
          <see langword="true" /> 余白は原点を指定するにはそれ以外の場合、 <see langword="false" />です。</param>
        <summary>作成、 <see cref="T:System.Drawing.Graphics" /> 指定したページの設定に関連付けられているし、オプションで余白の原点を指定します。</summary>
        <returns>A <see cref="T:System.Drawing.Graphics" /> からプリンター情報を含む、 <see cref="T:System.Drawing.Printing.PageSettings" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A> メソッドでは、取得することができます、 <xref:System.Drawing.Graphics> 印刷ジョブを作成しなくてもプリンターのです。 使用して、 <xref:System.Drawing.Graphics> フォント、サイズ、および複雑な印刷ジョブの種類のスタイルのようなビジュアル要素をレイアウトする方法について決定を下すにです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPageSettings">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PageSettings DefaultPageSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PageSettings DefaultPageSettings" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PageSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプリンターのページ設定の既定値を取得します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PageSettings" /> このプリンタの既定のページ設定を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ページの設定には、ページの余白のサイズ、用紙を使用してカラーで印刷するかどうかのサイズが含まれます。 ページの設定の詳細については、次を参照してください。、 <xref:System.Drawing.Printing.PageSettings> クラスです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PageSettings" />
      </Docs>
    </Member>
    <Member MemberName="Duplex">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.Duplex Duplex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.Duplex Duplex" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.Duplex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.Duplex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または両面印刷のプリンターの設定を設定します。</summary>
        <value>
          <see cref="T:System.Drawing.Printing.Duplex" /> 値のいずれか。 既定値は、プリンターによって決定されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用することができます、 <xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A> プロパティをプリンターが両面印刷をサポートしているかを確認してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">値、 <see cref="P:System.Drawing.Printing.PrinterSettings.Duplex" /> プロパティは、のいずれかではない、 <see cref="T:System.Drawing.Printing.Duplex" /> 値。</exception>
        <altmember cref="T:System.Drawing.Printing.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.CanDuplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="FromPage">
      <MemberSignature Language="C#" Value="public int FromPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FromPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.FromPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または最初のページを印刷するページ番号を設定します。</summary>
        <value>最初のページを印刷するページ数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> プロパティを使用して、 <xref:System.Windows.Forms.PrintDialog> 、ユーザーが印刷範囲を選択するとします。<xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> にプロパティを設定する必要があります `true` 印刷範囲を指定するユーザーを有効にします。 さらに、 <xref:System.Windows.Forms.PrintDialog> 必要があります、 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> を指定して、 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> その範囲内にある値。  
  
 印刷処理中に、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> イベントは、ビュー、 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 内容を印刷するかを判断します。 場合 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> は <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=fullName>, を使用して、 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> プロパティを確認してどのページを印刷する必要があります。 場合 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> は <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=fullName>, 、選択したページにのみ出力を指定します。  
  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, 、<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 設定することも、プログラムでは、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 実装は、同じです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> プロパティの値が 0 未満です。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハンドルを作成、 <see langword="DEVMODE" /> プリンターの設定に対応する構造体。</summary>
        <returns>ハンドル、 <see langword="DEVMODE" /> 構造体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `DEVMODE` 構造は、デバイス固有です。 コピー、 `DEVMODE` から 1 つの構造 <xref:System.Drawing.Printing.PrinterSettings> に、 <xref:System.Drawing.Printing.PrinterSettings> 別のプリンターがサポートされていません。 このメソッドで作成しているハンドルを使用して完了したときにする必要がありますを解放する、ネイティブの win32 `GlobalFree` メソッドです。 戻り値をパラメーターとして渡すこのメソッドを呼び出すときに、 <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">プリンターの初期化情報を取得できませんでした。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevmode">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevmode (System.Drawing.Printing.PageSettings pageSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevmode(class System.Drawing.Printing.PageSettings pageSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageSettings" Type="System.Drawing.Printing.PageSettings" />
      </Parameters>
      <Docs>
        <param name="pageSettings">
          <see cref="T:System.Drawing.Printing.PageSettings" /> オブジェクトを <see langword="DEVMODE" /> 構造体のハンドルに対応します。</param>
        <summary>ハンドルを作成、 <see langword="DEVMODE" /> プリンターとを使用して指定するページの設定に対応する構造体、 <paramref name="pageSettings" /> パラメーター。</summary>
        <returns>ハンドル、 <see langword="DEVMODE" /> 構造体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `DEVMODE` 構造は、デバイス固有です。 コピー、 `DEVMODE` から 1 つの構造 <xref:System.Drawing.Printing.PrinterSettings> に、 <xref:System.Drawing.Printing.PrinterSettings> 別のプリンターがサポートされていません。  
  
 このメソッドで作成しているハンドルを使用して完了したときにする必要がありますを解放する、ネイティブの win32 `GlobalFree` メソッドです。 戻り値をパラメーターとして渡すこのメソッドを呼び出すときに、 <xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Drawing.Printing.InvalidPrinterException">プリンターの名前で、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティが存在しません。</exception>
        <exception cref="T:System.ComponentModel.Win32Exception">プリンターの初期化情報を取得できませんでした。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHdevnames">
      <MemberSignature Language="C#" Value="public IntPtr GetHdevnames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdevnames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.GetHdevnames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハンドルを作成、 <see langword="DEVNAMES" /> プリンターの設定に対応する構造体。</summary>
        <returns>ハンドル、 <see langword="DEVNAMES" /> 構造体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドで作成しているハンドルを使用して完了したときにする必要がありますを解放する、ネイティブの win32 `GlobalFree` メソッドです。 戻り値をパラメーターとして渡すこのメソッドを呼び出すときに、 <xref:System.Drawing.Printing.PrinterSettings.GetHdevnames%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="InstalledPrinters">
      <MemberSignature Language="C#" Value="public static System.Drawing.Printing.PrinterSettings.StringCollection InstalledPrinters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Printing.PrinterSettings/StringCollection InstalledPrinters" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンピューターにインストールされているすべてのプリンターの名前を取得します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.StringCollection" /> コンピューターにインストールされているすべてのプリンターの名前を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インストールされているプリンター名のコレクションを使用すると、プリンターの印刷するのにための選択肢をユーザーに提供します。  
  
   
  
## 例  
 次のコード サンプル、 `comboInstalledPrinters` コンボ ボックスにインストールされているプリンター、またを使用して印刷するプリンターを設定し、 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> プロパティを選択範囲を変更するとします。`PopulateInstalledPrintersCombo` ルーチンは、フォームが初期化されるときに呼び出されます。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が存在するおよび特定のコンボ ボックスが存在します。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#5](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#5)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#5](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#5)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">使用可能なプリンターを列挙できませんでした。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="IsDefaultPrinter">
      <MemberSignature Language="C#" Value="public bool IsDefaultPrinter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultPrinter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティは、ユーザーが明示的に設定した場合を除き、既定のプリンターを指定 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />します。</summary>
        <value>
          <see langword="true" /> 場合 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> 通常使うプリンターを指定しない場合は、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> 常に返します `false` 明示的に設定すると、 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> プロパティ以外の文字列値を `null`します。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Drawing.Printing.PrinterSettings.IsDefaultPrinter%2A> プロパティです。 この例を実行するには、フォームと呼び出しに次のコードを貼り付けます `PopulateInstalledPrintersCombo` フォームのコンス トラクターからまたは <xref:System.Windows.Forms.Form.Load> イベント処理メソッドです。  
  
 [!code-csharp[System.Drawing.Printing.PrinterSettingsEx\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Printing.PrinterSettingsEx\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Printing.PrinterSettingsEx/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image">印刷する画像。</param>
        <summary>プリンターが指定したイメージ ファイルの印刷をサポートしているかどうかを示す値を取得します。</summary>
        <returns>
          <see langword="true" /> プリンターは、指定したイメージの印刷をサポートしている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectPrintingSupported">
      <MemberSignature Language="C#" Value="public bool IsDirectPrintingSupported (System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDirectPrintingSupported(class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFormat">
          <see cref="T:System.Drawing.Imaging.ImageFormat" /> を印刷します。</param>
        <summary>プリンターが指定された形式の印刷をサポートしているかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> プリンターは、指定したイメージ形式の印刷をサポートしている場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlotter">
      <MemberSignature Language="C#" Value="public bool IsPlotter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlotter" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsPlotter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターがプロッターであるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> プリンターがプロッター; である場合 <see langword="false" /> プリンターがラスターである場合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プロッターは、ベクター ベースのラスター ベースではなくプリンターです。 ベクター ベースのほとんどのプリンターでは、一単位のペンを使用して、出力を生成します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示す値を取得するかどうか、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティは有効なプリンターを指定します。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" /> プロパティは有効なプリンターを指定しない場合は、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 取得したり、一部のプロパティを設定すると、有効なプリンターが必要か、例外が発生します。 例外を避けるためを使用して、 <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> プロパティを設定した後、 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> 安全にプリンターが有効なかどうかを判断します。  
  
   
  
## 例  
 次のコード例では、ターゲットのプリンタを指定するには、 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> プロパティには、場合に、 <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> は `true`, 、指定したプリンターでドキュメントを印刷します。 この例では、3 つの前提条件があります。  
  
-   という名前の変数 `filePath` を印刷するファイルのパスに設定されています。  
  
-   という名前のメソッド `pd_PrintPage`, 、処理する、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントが定義されています。  
  
-   という名前の変数 `printer` プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrinterSettings Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      </Docs>
    </Member>
    <Member MemberName="LandscapeAngle">
      <MemberSignature Language="C#" Value="public int LandscapeAngle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LandscapeAngle" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.LandscapeAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>縦向きが横の向きを生成する回転角度 \(度数\) を取得します。</summary>
        <value>度数で、縦向きが横の向きを生成する回転の角度。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 有効な値は、90 および 270 ° です。 ランドス ケープがサポートされていない場合のみ有効な値は 0 度です。 設定する、 <xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName> プロパティを `true` ランドス ケープの形式でページを印刷します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.DefaultPageSettings" />
        <altmember cref="P:System.Drawing.Printing.PageSettings.Landscape" />
      </Docs>
    </Member>
    <Member MemberName="MaximumCopies">
      <MemberSignature Language="C#" Value="public int MaximumCopies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumCopies" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターには、ユーザーが一度に印刷ができるようにコピーの最大数を取得します。</summary>
        <value>プリンターには、ユーザーが一度に印刷ができるようにコピーの最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定、 <xref:System.Drawing.Printing.PrinterSettings.Copies%2A> プロパティを印刷するコピー数にします。 使用して、 <xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A> プロパティを一部のプリンターがないために、プリンターが一度に複数のコピーを印刷をサポートしているかを判断します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Copies" />
      </Docs>
    </Member>
    <Member MemberName="MaximumPage">
      <MemberSignature Language="C#" Value="public int MaximumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>上限を設定または取得 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> または <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> で選択されている、 <see cref="T:System.Windows.Forms.PrintDialog" />です。</summary>
        <value>最大 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> または <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> で選択されている、 <see cref="T:System.Windows.Forms.PrintDialog" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> プロパティを使用して、 <xref:System.Windows.Forms.PrintDialog> 、ユーザーが印刷範囲を選択するとします。<xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> にプロパティを設定する必要があります `true` 印刷範囲を指定するユーザーを有効にします。 設定するときに、 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> または <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 値がで定義される範囲内であることをプログラムで、 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> を表示するときにプロパティ、または例外がスローされます、 <xref:System.Windows.Forms.PrintDialog>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">値、 <see cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" /> プロパティが 0 未満です。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="MinimumPage">
      <MemberSignature Language="C#" Value="public int MinimumPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最小値を取得または <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> または <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> で選択されている、 <see cref="T:System.Windows.Forms.PrintDialog" />です。</summary>
        <value>最小 <see cref="P:System.Drawing.Printing.PrinterSettings.FromPage" /> または <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> で選択されている、 <see cref="T:System.Windows.Forms.PrintDialog" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> プロパティを使用して、 <xref:System.Windows.Forms.PrintDialog> 、ユーザーが印刷範囲を選択するとします。<xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> にプロパティを設定する必要があります `true` 印刷範囲を指定するユーザーを有効にします。 設定するときに、 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> または <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> 値がで定義される範囲内であることをプログラムで、 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> を表示するときにプロパティ、または例外がスローされます、 <xref:System.Windows.Forms.PrintDialog>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">値、 <see cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" /> プロパティが 0 未満です。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PaperSizes">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSizeCollection PaperSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSizeCollection PaperSizes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSizeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターでサポートされている用紙サイズを取得します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" /> プリンターでサポートされている用紙サイズを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection> が含まれています <xref:System.Drawing.Printing.PaperSize> から用紙サイズを表すインスタンスは、 <xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName> プロパティの 1 つを含む、 <xref:System.Drawing.Printing.PaperKind> 値。  
  
 通常、ページの用紙サイズを設定する、 <xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=fullName> プロパティを有効な <xref:System.Drawing.Printing.PaperSize> を通じて使用可能な <xref:System.Drawing.Printing.PrinterSettings.PaperSizes%2A> コレクションです。  
  
 カスタム用紙サイズを指定するには、参照してください、 <xref:System.Drawing.Printing.PaperSize.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次のコード サンプル、 `comboPaperSize` コンボ ボックスに、プリンターの用紙サイズのサポート対象です。 さらに、カスタム用紙サイズが作成され、コンボ ボックスに追加します。<xref:System.Drawing.Printing.PaperSize.PaperName%2A> を通じて追加される項目の表示文字列を提供するプロパティとして認識されますが、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> コンボ ボックスのプロパティです。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が存在するおよび特定のコンボ ボックスが存在します。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#1)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#1)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSize" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSizeCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PaperSources">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PaperSourceCollection PaperSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PaperSourceCollection PaperSources" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PaperSourceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリンターで使用できる用紙トレイを取得します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" /> このプリンターで使用できる用紙トレイを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection> が含まれています <xref:System.Drawing.Printing.PaperSource> ソースを通じてトレイの用紙を表すインスタンスは、 <xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName> プロパティの 1 つを含む、 <xref:System.Drawing.Printing.PaperSourceKind> 値。  
  
 通常は、ページの設定、 <xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=fullName> プロパティを有効な <xref:System.Drawing.Printing.PaperSource> を通じて使用可能な <xref:System.Drawing.Printing.PrinterSettings.PaperSources%2A> コレクションです。  
  
   
  
## 例  
 次のコード サンプル、 `comboPaperSource` コンボ ボックス、プリンターに給紙方法はサポートされています。<xref:System.Drawing.Printing.PaperSource.SourceName%2A> を通じて追加される項目の表示文字列を提供するプロパティとして認識されますが、 <xref:System.Windows.Forms.ListControl.DisplayMember%2A> コンボ ボックスのプロパティです。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が存在するおよび特定のコンボ ボックスが存在します。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#2)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#2)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PaperSource" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PaperSourceCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
        <altmember cref="P:System.Windows.Forms.ListControl.DisplayMember" />
      </Docs>
    </Member>
    <Member MemberName="PrinterName">
      <MemberSignature Language="C#" Value="public string PrinterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrinterName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または使用するプリンターの名前を設定します。</summary>
        <value>使用するプリンターの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プリンター名を設定した後に呼び出す <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> をシステムに有効なプリンターとプリンターの名前が認識されているかを判断します。  
  
 使用することも、 <xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A> プロパティをシステムにインストールされているプリンターの一覧を取得します。  
  
   
  
## 例  
 次のコード例では、ターゲットのプリンタを指定するには、 <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> プロパティには、場合に、 <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> は `true`, 、指定したプリンターでドキュメントを印刷します。 この例では、3 つの前提条件があります。  
  
-   という名前の変数 `filePath` を印刷するファイルのパスに設定されています。  
  
-   という名前のメソッド `pd_PrintPage`, 、処理する、 <xref:System.Drawing.Printing.PrintDocument.PrintPage> イベントが定義されています。  
  
-   という名前の変数 `printer` プリンターの名前に設定されています。  
  
 使用して、 <xref:System.Drawing>, 、<xref:System.Drawing.Printing>, 、および <xref:System.IO> この例の名前空間。  
  
 [!code-cpp[Classic PrinterSettings Example\#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic PrinterSettings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PrinterSettings Example\#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic PrinterSettings Example/CS/source.cs#1)]
 [!code-vb[Classic PrinterSettings Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic PrinterSettings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.IsValid" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.Duplex" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumCopies" />
      </Docs>
    </Member>
    <Member MemberName="PrinterResolutions">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection PrinterResolutions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrinterSettings/PrinterResolutionCollection PrinterResolutions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrinterResolutions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプリンターでサポートされているすべての解像度を取得します。</summary>
        <value>A <see cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" /> プリンターでサポートされている解像度を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection> が含まれています <xref:System.Drawing.Printing.PrinterResolution> をサポートするプリンターの解像度を表すインスタンスは、 <xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName> プロパティの 1 つを含む、 <xref:System.Drawing.Printing.PrinterResolutionKind> 値。  
  
 通常は、ページの設定、 <xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=fullName> プロパティを有効な <xref:System.Drawing.Printing.PrinterResolution> を通じて使用可能な <xref:System.Drawing.Printing.PrinterSettings.PrinterResolutions%2A> コレクションです。  
  
 場合 <xref:System.Drawing.Printing.PrinterResolutionKind> は `Custom`, を使用して、 <xref:System.Drawing.Printing.PrinterResolution.X%2A> と <xref:System.Drawing.Printing.PrinterResolution.Y%2A> プロパティをそれぞれ水平および垂直方向にカスタムのプリンターの解像度を確認します。  
  
   
  
## 例  
 次のコード サンプル、 `comboPrintResolution` 対応の解像度を持つコンボ ボックス。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が存在するおよび特定のコンボ ボックスが存在します。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#3](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#3)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#3](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#3)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Printing.PrinterResolution" />
        <altmember cref="T:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.InstalledPrinters" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSizes" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PaperSources" />
      </Docs>
    </Member>
    <Member MemberName="PrintFileName">
      <MemberSignature Language="C#" Value="public string PrintFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PrintFileName" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはファイルに印刷するときに、ファイル名を設定します。</summary>
        <value>ファイルに印刷するときのファイル名。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission">for read access when getting the file name and write access when setting the file name. Related enumeration <see cref="T:System.Security.Permissions.FileIOPermissionAccess" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="PrintRange">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintRange PrintRange { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Printing.PrintRange PrintRange" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintRange</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはユーザーを指定して印刷するページ番号を設定します。</summary>
        <value>
          <see cref="T:System.Drawing.Printing.PrintRange" /> 値のいずれか 1 つ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> プロパティを使って、 <xref:System.Windows.Forms.PrintDialog>含めて、ユーザーが印刷範囲を選択します。 既定値 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> は `AllPages` です。 印刷するページの範囲を指定するユーザーを有効にする、 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> にプロパティを設定する必要があります `true`します。 ユーザーが、選択したページを印刷するには、指定できるようにする、 <xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=fullName> にプロパティを設定する必要があります `true`します。  
  
 印刷処理中に、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> イベントは、ビュー、 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 内容を印刷するかを判断します。 場合 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> は <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=fullName>, を使用して、 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> プロパティを確認してどのページを印刷する必要があります。 場合 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> は <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=fullName>, 、選択したページにのみ出力を指定します。  
  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, 、<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 設定することも、プログラムでは、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 実装は、同じです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">値、 <see cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" /> プロパティは、のいずれかではない、 <see cref="T:System.Drawing.Printing.PrintRange" /> 値。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="T:System.Drawing.Printing.PrintRange" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      </Docs>
    </Member>
    <Member MemberName="PrintToFile">
      <MemberSignature Language="C#" Value="public bool PrintToFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintToFile" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.PrintToFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または印刷の出力は、ポートではなくファイルに送信されているかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> 印刷出力がファイルに送信される場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> プロパティを使用、 <xref:System.Windows.Forms.PrintDialog> 、ユーザーが選択すると、 **ファイルへ出力** オプション。 このような場合は、出力ポートが FILE に設定"、"ファイルのユーザー入力を求める Windows 印刷サブシステムを引き起こしている場合の名前、 <xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=fullName> メソッドが呼び出されます。  
  
> [!NOTE]
>  <xref:System.Drawing.Printing.PrinterSettings.PrintToFile%2A> プロパティはでのみ使用、 <xref:System.Windows.Forms.PrintDialog> プログラムで設定することはできません。`Print to file` オプションのみが表示されます、 <xref:System.Windows.Forms.PrintDialog> ときに、 <xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=fullName> にプロパティが設定されている `true`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.PrintDialog.AllowPrintToFile" />
      </Docs>
    </Member>
    <Member MemberName="SetHdevmode">
      <MemberSignature Language="C#" Value="public void SetHdevmode (IntPtr hdevmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevmode(native int hdevmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevmode" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevmode">Win32 ハンドル <see langword="DEVMODE" /> 構造体。</param>
        <summary>指定されたハンドルから、関連する情報をコピー、 <see cref="T:System.Drawing.Printing.PrinterSettings" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `DEVMODE` 構造は、デバイス特有であり、コピー、 `DEVMODE` から 1 つの構造 <xref:System.Drawing.Printing.PrinterSettings> に、 <xref:System.Drawing.Printing.PrinterSettings> 別のプリンターがサポートされていません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プリンターのハンドルが正しくありません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SetHdevnames">
      <MemberSignature Language="C#" Value="public void SetHdevnames (IntPtr hdevnames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHdevnames(native int hdevnames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdevnames" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdevnames">Win32 ハンドル <see langword="DEVNAMES" /> 構造体。</param>
        <summary>指定されたハンドルから、関連する情報をコピー、 <see cref="T:System.Drawing.Printing.PrinterSettings" />です。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">プリンターのハンドルが正しくありません。</exception>
        <permission cref="T:System.Drawing.Printing.PrintingPermission">for printing and access to all printers on the network. Associated enumeration: <see cref="F:System.Drawing.Printing.PrintingPermissionLevel.AllPrinting" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SupportsColor">
      <MemberSignature Language="C#" Value="public bool SupportsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsColor" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.SupportsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このプリンターがカラー印刷をサポートしているかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> このプリンターがカラーをサポートしている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 色を使用して印刷し、プリンターがサポートする場合は設定 <xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName> に `true`します。  
  
   
  
## 例  
 次のコード例は、プリンターでサポートされている場合の色の最初のページを持つドキュメントを印刷します。 この例では、する必要があります、 <xref:System.Drawing.Printing.PrintDocument> という名前の変数 `printDoc` が作成されたら、および <xref:System.Drawing.Printing.PrintDocument.PrintPage> と <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> イベントが処理します。  
  
 使用して、 <xref:System.Drawing> と <xref:System.Drawing.Printing> この例の名前空間。  
  
 [!code-cpp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/cpp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CPP/source.cpp#6)]
 [!code-csharp[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/csharp/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/CS/source.cs#6)]
 [!code-vb[PaperSource and PaperSize Example with Resolution\#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PaperSource and PaperSize Example with Resolution/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Printing.PageSettings.Color" />
      </Docs>
    </Member>
    <Member MemberName="ToPage">
      <MemberSignature Language="C#" Value="public int ToPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ToPage" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Printing.PrinterSettings.ToPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または印刷する最後のページの数を設定します。</summary>
        <value>印刷する最後のページの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> プロパティを使用して、 <xref:System.Windows.Forms.PrintDialog> 、ユーザーが印刷範囲を選択するとします。<xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName> にプロパティを設定する必要があります `true` 印刷範囲を指定するユーザーを有効にします。 さらに、 <xref:System.Windows.Forms.PrintDialog> も必要です、 <xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A> を指定して、 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> その範囲内にある値。  
  
 印刷処理中に、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> イベントは、ビュー、 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 内容を印刷するかを判断します。 場合 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> は <xref:System.Drawing.Printing.PrintRange.SomePages?displayProperty=fullName>, を使用して、 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> プロパティを確認してどのページを印刷する必要があります。 場合 <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> は <xref:System.Drawing.Printing.PrintRange.Selection?displayProperty=fullName>, 、選択したページにのみ出力を指定します。  
  
 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>, 、<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A> と <xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A> 設定することも、プログラムでは、 <xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName> 実装は、同じです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">値、 <see cref="P:System.Drawing.Printing.PrinterSettings.ToPage" /> プロパティが 0 未満です。</exception>
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.FromPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MaximumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.MinimumPage" />
        <altmember cref="P:System.Drawing.Printing.PrinterSettings.PrintRange" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Printing.PrinterSettings.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>に関する情報を提供、 <see cref="T:System.Drawing.Printing.PrinterSettings" /> の文字列形式。</summary>
        <returns>文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMeasurementGraphics">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>返します。、 <see cref="T:System.Drawing.Graphics" /> プリンター情報を格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetHdevmode">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ハンドルを作成、 <see langword="DEVMODE" /> プリンターの設定に対応する構造体。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="IsDirectPrintingSupported">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>プリンターがイメージ ファイルの印刷をサポートしているかどうかを示す値を返します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>