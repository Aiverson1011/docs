<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>FSharp.Core</AssemblyName>
    <AssemblyVersion>2.3.98.1</AssemblyVersion>
    <AssemblyVersion>3.98.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>オブジェクトの構造が等価かどうかの比較をサポートするメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 Structural equality means that two objects are equal because they have equal values. It differs from reference equality, which indicates that two object references are equal because they reference the same physical object. The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects. That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface. The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.  
  
> [!NOTE]
>  The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality. The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.  
  
 The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=fullName> properties. For more information, see the example.  
  
 The generic tuple classes \(<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on\) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface. By casting \(in C\#\) or converting \(in Visual Basic\) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.  
  
   
  
## 例  
 The default equality comparer, **languageKeyword tag is not supported!!!!**  
, considers two **languageKeyword tag is not supported!!!!**  
 values to be equal. However, in some cases, you may want the comparison of **languageKeyword tag is not supported!!!!**  
 values for equality to return **languageKeyword tag is not supported!!!!**  
, which indicates that the values cannot be compared. The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface. It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator. It passes values of any other type to the default equality comparer.  
  
 [!code-csharp[System.Collections.IStructuralEquatable\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 The following example creates two identical 3\-tuple objects whose components consist of three <xref:System.Double> values. The value of the second component is <xref:System.Double.NaN?displayProperty=fullName>. The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=fullName> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=fullName> method three times. The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName> property. The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=fullName> property. The third time, it passes the custom `NanComparer` object. As the output from the example shows, the first three method calls return **languageKeyword tag is not supported!!!!**  
, whereas the fourth call returns **languageKeyword tag is not supported!!!!**  
.  
  
 [!code-csharp[System.Collections.IStructuralEquatable\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">現在のインスタンスと比較するオブジェクト。</param>
        <param name="comparer">現在のインスタンスと <c>other</c> が等しいかどうかを判断するオブジェクト。</param>
        <summary>オブジェクトが現在のインスタンスに構造的に等しいかどうかを決定します。</summary>
        <returns>2 つのオブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドは、配列と組のオブジェクトのカスタムの構造的な比較をサポートしています。 このメソッドを呼び出します、 `comparer` オブジェクトの <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> 配列の各要素または組のコンポーネントを最初の要素またはコンポーネントを開始するのとを比較するメソッドです。 個々 の呼び出しを <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> 終了と <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=fullName> メソッド値を返すか、メソッドの呼び出しが戻るとき `false` またはすべての配列の要素または組のコンポーネントが比較された後です。  
  
   
  
## 例  
 既定の等値比較子 `EqualityComparer<Object>.Default.Equals`, 、2 つと見なします `NaN` 値と等しくなります。 ただし、場合によっては、比較することがあります `NaN` 値が等しいかどうかを返す `false`, 、値を比較できないことを示します。 次の例では、`NanComparer` インターフェイスを実装する <xref:System.Collections.IStructuralEquatable> クラスを定義しています。 比較する 2 つ <xref:System.Double> または 2 つ <xref:System.Single> 、等値演算子を使用して値にします。 既定の等値比較子をその他の型の値を渡します。  
  
 [!code-csharp[System.Collections.IStructuralEquatable\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 次の例では、3 つの構成要素、2 つの同一の 3 組オブジェクト <xref:System.Double> 値。 2 番目のコンポーネントの値は <xref:System.Double.NaN?displayProperty=fullName>です。 次、 <xref:System.Tuple%603.Equals%2A?displayProperty=fullName> メソッド、およびそれを呼び出す、 <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=fullName> メソッドを 3 回です。 によって返される既定の等値比較子を渡す最初に、 <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName> プロパティです。 によって返される既定の等値比較子を渡す 2 番目の時間、 <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=fullName> プロパティです。 ユーザー設定を渡す 3 番目の時間 `NanComparer` オブジェクトです。 この例の出力に示すように、最初の 3 つのメソッド呼び出しを返す `true`, 4 番目の呼び出しが返されますが、 `false`です。  
  
 [!code-csharp[System.Collections.IStructuralEquatable\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>FSharp.Core</AssemblyName>
        <AssemblyVersion>2.3.98.1</AssemblyVersion>
        <AssemblyVersion>3.98.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">現在のオブジェクトのハッシュ コードを計算するオブジェクト。</param>
        <summary>現在のインスタンスのハッシュ コードを返します。</summary>
        <returns>現在のインスタンスのハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって提供される構造の等値のカスタムの比較に対応するコレクション オブジェクトのカスタマイズされたハッシュ コードを返すには、このメソッドを実装、 <xref:System.Collections.IStructuralEquatable.Equals%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>