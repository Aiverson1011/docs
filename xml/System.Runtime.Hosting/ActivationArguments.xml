<Type Name="ActivationArguments" FullName="System.Runtime.Hosting.ActivationArguments">
  <TypeSignature Language="C#" Value="public sealed class ActivationArguments : System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ActivationArguments extends System.Security.Policy.EvidenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Hosting.ActivationArguments" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.EvidenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>アプリケーションのマニフェストに基づくアクティベーションにデータを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Hosting.ActivationArguments> クラスを使って、 <xref:System.AppDomainSetup> クラスです。  
  
 マニフェストに基づくアクティベーション モデルでは、ライセンス認証用のアセンブリではなく、アプリケーション マニフェストを使用します。 マニフェストは、完全に、アプリケーション、その依存関係、セキュリティ要件およびなどについて説明します。 マニフェストのモデルでは、特に Web アプリケーションの場合、アセンブリ ベースのアクティブ化モデルに対するいくつかの利点があります。 たとえば、マニフェストには、ユーザーがアプリケーション コードをダウンロードする前に実行を許可するかどうかを決定できるようにすると、アプリケーションのセキュリティ要件が含まれています。 マニフェストには、アプリケーションの依存関係に関する情報も含まれています。  
  
   
  
## 例  
 次のコード例は、現在の入手方法を示しています。 <xref:System.Runtime.Hosting.ActivationArguments> オブジェクトから、 <xref:System.AppDomainSetup> の、 <xref:System.AppDomain> マニフェストに基づくアプリケーションのです。  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationData" Type="System.ActivationContext" />
      </Parameters>
      <Docs>
        <param name="activationData">マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 指定されたアクティブ化コンテキストを持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ActivationContext> によって表されるオブジェクト、 `activationData` パラメーターが含まれる、 <xref:System.ApplicationIdentity> とマニフェストに基づくアクティベーションのコンテキスト情報。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationData" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> 指定したアプリケーション id を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーション id は、新しいドメインでアクティブにするマニフェストに基づくアプリケーションを一意に識別します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentity" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ActivationContext activationContext, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ActivationContext activationContext, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="activationContext">マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。</param>
        <param name="activationData">ホストから提供されたライセンス認証データを含んでいる文字列の配列。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> クラスの指定されたアクティベーション コンテキストおよびライセンス認証データを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ActivationContext> によって表されるオブジェクト、 `activationContext` パラメーターが含まれる、 <xref:System.ApplicationIdentity> とマニフェストに基づくアクティベーションのコンテキスト情報。 ライセンス認証データは、URL のクエリ文字列部分などの情報で構成されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="activationContext" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ApplicationIdentity applicationIdentity, string[] activationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
        <Parameter Name="activationData" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="applicationIdentity">マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。</param>
        <param name="activationData">ホストから提供されたライセンス認証データを含んでいる文字列の配列。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> クラスに指定したアプリケーション id とライセンス認証データ。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーション id は、新しいドメインでアクティブにするマニフェストに基づくアプリケーションを一意に識別します。 ライセンス認証データは、URL のクエリ文字列部分などの情報で構成されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentity" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ActivationContext">
      <MemberSignature Language="C#" Value="public ActivationContext ActivationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ActivationContext ActivationContext" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ActivationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションのマニフェストに基づくアクティベーションのアクティベーション コンテキストを取得します。</summary>
        <value>マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ActivationContext> オブジェクトを含む、 <xref:System.ApplicationIdentity> し、アプリケーション マニフェストを内部専用のアクセスを提供します。 アクティブ化コンテキストは、ドメイン ポリシーを設定して、アプリケーション ベースのセキュリティ モデルを提供するマニフェストに基づくアクティベーション時に使用されます。  
  
   
  
## 例  
 次のコード例の値を取得する方法を示しています、 <xref:System.Runtime.Hosting.ActivationArguments.ActivationContext%2A> プロパティから、 <xref:System.Runtime.Hosting.ActivationArguments> マニフェスト ベースのアプリケーションにします。  
  
 このコード例が示されている例の一部は、 <xref:System.Runtime.Hosting.ActivationArguments> クラスです。  
  
 [!code-csharp[System.Runtime.Hosting.ApplicationActivator\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#4)]
 [!code-vb[System.Runtime.Hosting.ApplicationActivator\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivationData">
      <MemberSignature Language="C#" Value="public string[] ActivationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] ActivationData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ActivationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ホストからのアクティブ化データを取得します。</summary>
        <value>ホストから提供されたライセンス認証データを含んでいる文字列の配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ライセンス認証データは、URL のクエリ文字列部分などの情報で構成されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationIdentity">
      <MemberSignature Language="C#" Value="public ApplicationIdentity ApplicationIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ApplicationIdentity ApplicationIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Hosting.ActivationArguments.ApplicationIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ApplicationIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マニフェストでアクティブ化されるアプリケーションのアプリケーション id を取得します。</summary>
        <value>マニフェストに基づくアクティベーション用のアプリケーションを識別するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 アプリケーション id は、新しいドメインでアクティブにするマニフェストに基づくアプリケーションを一意に識別します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.EvidenceBase Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.EvidenceBase Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Hosting.ActivationArguments.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.EvidenceBase</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコピーを生成 <see cref="T:System.Runtime.Hosting.ActivationArguments" /> オブジェクトです。</summary>
        <returns>現在のオブジェクトのコピー。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが、新たに作成 <xref:System.Runtime.Hosting.ActivationArguments> オブジェクト、および現在のメンバーのコピーを格納し、 <xref:System.Runtime.Hosting.ActivationArguments> オブジェクト  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Runtime.Hosting.ActivationArguments" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>