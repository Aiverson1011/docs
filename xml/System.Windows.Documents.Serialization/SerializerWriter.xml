<Type Name="SerializerWriter" FullName="System.Windows.Documents.Serialization.SerializerWriter">
  <TypeSignature Language="C#" Value="public abstract class SerializerWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プラグイン ドキュメント出力シリアライザーの実装に必要な抽象メソッドおよびイベントを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、使用する <xref:System.Windows.Documents.Serialization.SerializerWriter>です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 [!code-csharp[DocumentSerialize\#DocSerializeFileFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializefilefilter)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンスを <xref:System.Windows.Documents.Serialization.SerializerWriter> を使用して作成する必要があります、 <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> のメソッド、 <xref:System.Windows.Documents.Serialization.SerializerProvider> オブジェクトは、 <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> のメソッド、 <xref:System.Windows.Documents.Serialization.ISerializerFactory> オブジェクトです。  
  
   
  
## 例  
 次の例では、作成する方法、 <xref:System.Windows.Documents.Serialization.SerializerWriter> を使用して、 <xref:System.Windows.Documents.Serialization.SerializerProvider>.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> メソッドです。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、非同期書き込み操作をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateVisualsCollator">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、照合された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> を返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.  
  
 [!code-csharp[XpsSave\#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave\#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素を書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> を返します。</summary>
        <returns>部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素をドキュメント出力のシリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> メソッドです。  
  
 [!code-csharp[XpsSave\#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave\#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" /> should return a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes to the same serialization <see cref="T:System.IO.Stream" /> as the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> that is used to create it.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator(class System.Printing.PrintTicket documentSequencePT, class System.Printing.PrintTicket documentPT) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentSequencePT" Type="System.Printing.PrintTicket" />
        <Parameter Name="documentPT" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentSequencePT">
          <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> コンテンツの既定の印刷設定。</param>
        <param name="documentPT">
          <see cref="T:System.Windows.Documents.FixedDocument" /> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素および指定の印刷チケットを書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> を返します。</summary>
        <returns>部単位で印刷する <see cref="T:System.Windows.Media.Visual" /> 要素をドキュメント出力のシリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `documentSequencePT` or `documentPT` can be `null` if there are no preferred print settings.  
  
 This method does not validate or modify the given print tickets for a particular <xref:System.Printing.PrintQueue>.  If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> method to create a <xref:System.Printing.PrintQueue>\-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.  
  
   
  
## 例  
 The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.  
  
 [!code-csharp[XpsSave\#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave\#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> should return a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes to the same serialization <see cref="T:System.IO.Stream" /> as the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> that creates it.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされるとき、シリアル化 <see cref="T:System.IO.Stream" /> にコンテンツを同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネーター。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
        <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
        <summary>派生クラスでオーバーライドされると、所定の <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むページ。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedPage" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネーター。</param>
        <param name="printTicket">
          <c>documentPaginator</c> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、改ページ調整されたコンテンツを関連付けられた <see cref="T:System.Printing.PrintTicket" /> と共にシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
        <param name="printTicket">
          <c>fixedDocument</c> の内容の既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> および関連する <see cref="T:System.Printing.PrintTicket" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
        <param name="printTicket">
          <c>fixedDocumentSequence</c> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> および関連する <see cref="T:System.Printing.PrintTicket" /> をシリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むためのページ。</param>
        <param name="printTicket">
          <c>fixedPage</c> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされるとき、所定の <see cref="T:System.Windows.Documents.FixedPage" /> を、関連付けられている <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
        <param name="printTicket">
          <c>visual</c> 要素の既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされるときに、<see cref="T:System.Windows.Media.Visual" /> 要素を、関連した所定の <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 次の例では、使用する、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> 出力ファイルにフロー ドキュメントをシリアル化する方法です。  
  
 [!code-csharp[DocumentSerialize\#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、コンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネーター。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
        <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むページ。</param>
        <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedPage" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
        <summary>派生クラスでオーバーライドされるとき、所定の <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネーター。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネーター。</param>
        <param name="printTicket">
          <c>documentPaginator</c> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.DocumentPaginator" /> のコンテンツをシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
        <param name="printTicket">
          <c>fixedDocument</c> の内容の既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> および関連する <see cref="T:System.Printing.PrintTicket" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
        <param name="printTicket">
          <c>fixedDocumentSequence</c> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むページ。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされたときに、指定された <see cref="T:System.Windows.Documents.FixedPage" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むページ。</param>
        <param name="printTicket">
          <c>fixedPage</c> コンテンツの既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedPage" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされるとき、所定の <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
        <param name="printTicket">
          <c>visual</c> 要素の既定の印刷設定。</param>
        <summary>派生クラスでオーバーライドされると、<see cref="T:System.Printing.PrintTicket" /> に関連付けられている指定された <see cref="T:System.Windows.Media.Visual" /> 要素をシリアル化 <see cref="T:System.IO.Stream" /> に非同期で書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント ページネータ。</param>
        <param name="printTicket">
          <c>documentPaginator</c> コンテンツの既定の印刷設定。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、改ページ位置が自動修正されたコンテンツおよび関連する <see cref="T:System.Printing.PrintTicket" /> を共にシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むドキュメント。</param>
        <param name="printTicket">
          <c>fixedDocument</c> コンテンツの既定の印刷設定。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Documents.FixedDocument" /> および関連する <see cref="T:System.Printing.PrintTicket" /> をシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むコンテンツを定義するドキュメント シーケンス。</param>
        <param name="printTicket">
          <c>fixedDocumentSequence</c> コンテンツの既定の印刷設定。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">シリアル化 <see cref="T:System.IO.Stream" /> に書き込むページ。</param>
        <param name="printTicket">
          <c>fixedPage</c> コンテンツの既定の印刷設定。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされるとき、指定された <see cref="T:System.Windows.Documents.FixedPage" /> を関連した <see cref="T:System.Printing.PrintTicket" /> と一緒に、シリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">シリアル化 <see cref="T:System.IO.Stream" /> に書き込む <see cref="T:System.Windows.Media.Visual" /> 要素。</param>
        <param name="printTicket">
          <c>visual</c> 要素の既定の印刷設定。</param>
        <param name="userState">非同期書き込み操作を識別する、呼び出し元指定のオブジェクト。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Windows.Media.Visual" /> 要素および関連する <see cref="T:System.Printing.PrintTicket" /> と識別子をシリアル化 <see cref="T:System.IO.Stream" /> に非同期的に書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `printTicket` できる `null` 印刷設定がない場合。  
  
 このメソッドが検証または変更していない、指定された `printTicket` 、特定の <xref:System.Printing.PrintQueue>です。  必要に応じて、使用、 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName> を作成する方法、 <xref:System.Printing.PrintQueue>\-特定 <xref:System.Printing.PrintTicket> 特定のプリンターに対して有効です。  
  
 `userState` 渡される、 <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> ときに、 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> イベントが発生します。  
  
 出力 <xref:System.IO.Stream> 、書き込み操作は通常を実装する派生クラスのコンス トラクターにパラメーターとして指定 <xref:System.Windows.Documents.Serialization.SerializerWriter>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCancelled">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCancelledEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合に発生したときに、 <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> 操作を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCompleted">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合は、書き込み操作が終了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingPrintTicketRequired">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると発生する直前に、 <see cref="T:System.Printing.PrintTicket" /> してストリームに追加、 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> または <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired> イベントにより、イベント ハンドラーに置き換える新しい <xref:System.Printing.PrintTicket> に指定されているのため、 <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> または <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A> メソッドの呼び出しです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingProgressChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされた場合に発生したときに、 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 、進行状況を更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 たとえば、 <xref:System.Windows.Documents.Serialization.SerializerWriter> すべてのページの後、または複数のドキュメントのすべてのドキュメントの書き込み操作の進行状況を更新する可能性があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>