<Type Name="ClientCredentialsSecurityTokenManager" FullName="System.ServiceModel.ClientCredentialsSecurityTokenManager">
  <TypeSignature Language="C#" Value="public class ClientCredentialsSecurityTokenManager : System.IdentityModel.Selectors.SecurityTokenManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientCredentialsSecurityTokenManager extends System.IdentityModel.Selectors.SecurityTokenManager" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>クライアント用のセキュリティ トークンを管理します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 This class handles security token serialization, security token provision and security token authentication for the client. There is one instance of this class for each client channel factory.  
  
   
  
## 例  
 The following code shows how you can override this class to create a custom Client Credentials Security Token Manager.  
  
 [!code-csharp[c\_CustomCredentials\#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#2)]
 [!code-vb[c\_CustomCredentials\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/client/client.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientCredentialsSecurityTokenManager (System.ServiceModel.Description.ClientCredentials clientCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ClientCredentials clientCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCredentials" Type="System.ServiceModel.Description.ClientCredentials" />
      </Parameters>
      <Docs>
        <param name="clientCredentials">
          <see cref="T:System.ServiceModel.Description.ClientCredentials" />。</param>
        <summary>
          <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このコンストラクターをオーバーライドする方法を次のコードに示します。  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager\#8](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#8)]
 [!code-vb[ClientCredentialsSecurityTokenManager\#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clientCredentials" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCredentials">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ClientCredentials ClientCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ClientCredentials ClientCredentials" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ClientCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント資格情報を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Description.ClientCredentials" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.ServiceModel.Description.ClientCredentials> object allows the user to configure client credentials to be used for authentication to the service.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenAuthenticator">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, out System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenAuthenticator CreateSecurityTokenAuthenticator(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement, class System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenAuthenticator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
        <Parameter Name="outOfBandTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />。</param>
        <param name="outOfBandTokenResolver">このメソッドから制御が戻るときに、<see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" /> を格納します。 このパラメーターは初期化せずに渡されます。</param>
        <summary>セキュリティ トークン認証システムを作成します。</summary>
        <returns>
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator> is responsible for validating security tokens and providing a <xref:System.IdentityModel.Policy.IAuthorizationPolicy> to obtain claims for security tokens that meet the requirements specified in <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement>.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenProvider">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider (System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenProvider CreateSecurityTokenProvider(class System.IdentityModel.Selectors.SecurityTokenRequirement tokenRequirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tokenRequirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="tokenRequirement">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />。</param>
        <summary>セキュリティ トークン プロバイダーを作成します。</summary>
        <returns>
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IdentityModel.Selectors.SecurityTokenProvider> クラスは、指定された<xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenRequirement> のトークンの取得を行います。 トークン プロバイダーは、オプションで、トークンの更新とキャンセルもサポートします。  
  
   
  
## 例  
 このメソッドをオーバーライドする方法を次のコードに示します。  
  
 [!code-csharp[ClientCredentialsSecurityTokenManager\#2](~/samples/snippets/csharp/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/cs/source.cs#2)]
 [!code-vb[ClientCredentialsSecurityTokenManager\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/clientcredentialssecuritytokenmanager/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tokenRequirement" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSecurityTokenSerializer">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>セキュリティ トークン シリアライザーを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つのオーバーロードは、入力パラメーターが異なり、一方のパラメーターでは <xref:System.IdentityModel.Selectors.SecurityTokenVersion> を取得し、他方のパラメーターでは <xref:System.ServiceModel.Security.SecurityVersion> を取得します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.IdentityModel.Selectors.SecurityTokenVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.IdentityModel.Selectors.SecurityTokenVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.IdentityModel.Selectors.SecurityTokenVersion" />
      </Parameters>
      <Docs>
        <param name="version">セキュリティ トークンの <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />。</param>
        <summary>セキュリティ トークン シリアライザーを作成します。</summary>
        <returns>
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers, and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations \(Kerberos ticket processing, X.509 decoding, SAML decoding and other operations\) but should defer application trust decisions to the security token authenticator.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenSerializer">
      <MemberSignature Language="C#" Value="protected System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer (System.ServiceModel.Security.SecurityVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IdentityModel.Selectors.SecurityTokenSerializer CreateSecurityTokenSerializer(class System.ServiceModel.Security.SecurityVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenSerializer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Security.SecurityVersion" />
      </Parameters>
      <Docs>
        <param name="version">セキュリティ トークンの <see cref="T:System.ServiceModel.Security.SecurityVersion" />。</param>
        <summary>セキュリティ トークン シリアライザーを作成します。</summary>
        <returns>
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.IdentityModel.Selectors.SecurityTokenSerializer> is used to write and read security tokens, security key identifiers and security key identifier clauses. When deserializing the token from XML, the returned token must be able to perform cryptographic operations. The token serializer therefore must ensure the deserialized token can perform cryptographic operations \(Kerberos ticket processing, X.509 decoding, SAML decoding and other operations\) but should defer application trust decisions to the security token authenticator.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIssuedSecurityTokenRequirement">
      <MemberSignature Language="C#" Value="protected bool IsIssuedSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance bool IsIssuedSecurityTokenRequirement(class System.IdentityModel.Selectors.SecurityTokenRequirement requirement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requirement" Type="System.IdentityModel.Selectors.SecurityTokenRequirement" />
      </Parameters>
      <Docs>
        <param name="requirement">
          <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />。</param>
        <summary>指定したトークン要件が発行済みのセキュリティ トークン要件であるかどうかを示す値を取得します。</summary>
        <returns>指定したトークン要件が発行済みのセキュリティ トークン要件の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requirement" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>