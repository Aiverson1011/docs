<Type Name="MessageHeaderAttribute" FullName="System.ServiceModel.MessageHeaderAttribute">
  <TypeSignature Language="C#" Value="public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MessageHeaderAttribute extends System.ServiceModel.MessageContractMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.MessageHeaderAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.MessageContractMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ メンバーが SOAP メッセージ ヘッダーであることを指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.ServiceModel.MessageHeaderAttribute> attribute allows you to map fields and properties of a type marked with the <xref:System.ServiceModel.MessageContractAttribute> attribute to SOAP message headers. The field or property can be of a simple type or a composite type that can be serialized.  
  
 For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](http://msdn.microsoft.com/ja-jp/7c5a26c8-89c9-4bcb-a4bc-7131e6d01f0c), and [Data Contracts Overview](http://msdn.microsoft.com/ja-jp/a3ae7b21-c15c-4c05-abd8-f483bcbf31af).  
  
 For more information about creating message contracts, see [Using Message Contracts](http://msdn.microsoft.com/ja-jp/1e19c64a-ae84-4c2f-9155-91c54a77c249).  
  
 The SOAP standard defines the following attributes that can exist on a header:  
  
-   `Actor` or `Role` \(`Actor` in SOAP 1.1, `Role` in SOAP 1.2\)  
  
-   `MustUnderstand`  
  
-   `Relay`  
  
 The **languageKeyword tag is not supported!!!!**  
 or **languageKeyword tag is not supported!!!!**  
 attribute specifies the URI of the node for which a given header is intended. The **languageKeyword tag is not supported!!!!**  
 attribute specifies whether the header understands the node processing. The **languageKeyword tag is not supported!!!!**  
 attribute specifies whether the header is to be relayed to downstream nodes. [!INCLUDE[indigo1](~/includes/indigo1-md.md)] does not perform any processing of these attributes on incoming messages, except for the **languageKeyword tag is not supported!!!!**  
 attribute.  
  
 You can, however, read and write these attributes, even though they are not sent by default. You can set the attribute values in two ways. First, you can change the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> properties on the <xref:System.ServiceModel.MessageHeaderAttribute>. \(There is no **languageKeyword tag is not supported!!!!**  
 property – set the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> property and **languageKeyword tag is not supported!!!!**  
 is passed if SOAP 1.2 is used\). For example:  
  
  
  
 The second way to control these attributes is by making the desired header type the type parameter of the <xref:System.ServiceModel.MessageHeader%601> class and using the resulting type together with the <xref:System.ServiceModel.MessageHeaderAttribute>. Then use the <xref:System.ServiceModel.MessageHeader%601> properties programmatically to set the SOAP attributes. For example:  
  
  
  
  
  
 If both the dynamic and the static control mechanisms are used, the static settings are the default but can be overridden using the dynamic mechanism. For example:  
  
  
  
  
  
 Creating repeated headers with dynamic attribute control is allowed. For example:  
  
```  
[MessageHeaderArray] public MessageHeader<Person> documentApprovers[];  
```  
  
 On the receiving side, reading these SOAP attributes can only be done if the generic <xref:System.ServiceModel.MessageHeader%601> class is used. Examine the <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> or <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> properties of a header of the <xref:System.ServiceModel.MessageHeader%601> type to discover the attribute settings on the received message.  
  
 When a message is received and then sent back, the SOAP attribute settings only roundtrip for headers of the <xref:System.ServiceModel.MessageHeader%601> type.  
  
   
  
## 例  
 The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  
  
 [!code-csharp[MessageHeaderAttribute\#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MessageHeaderAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.MessageHeaderAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.MessageHeaderAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public string Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Actor" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Actor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このヘッダーが対象とするノードを示す URI を取得または設定します。 SOAP 1.2 が使用される場合は role 属性に、SOAP 1.1 が使用される場合は actor ヘッダー属性にマッピングされます。</summary>
        <value>このヘッダーが対象とするノードを示す URI。 この URI は、SOAP 1.2 が使用されている場合は role 属性に、SOAP 1.1 が使用されている場合は actor ヘッダー属性にマッピングされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、<xref:System.ServiceModel.MessageHeaderAttribute> の「解説」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustUnderstand">
      <MemberSignature Language="C#" Value="public bool MustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> ロールで動作するノードが、このヘッダーを認識する必要があるかどうかを指定します。 これは、<see langword="mustUnderstand" /> SOAP ヘッダー属性にマッピングされます。</summary>
        <value>
          <see langword="true" /> ロールで動作するノードがこのヘッダーを認識する必要がある場合は <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.  
  
> [!IMPORTANT]
>  It is important to remember that if the <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> property is **languageKeyword tag is not supported!!!!**  
>  in a message being sent and the application on the receiving side does not understand the header a fault is generated. Conversely, if a header with the **languageKeyword tag is not supported!!!!**  
>  SOAP header attribute set to **languageKeyword tag is not supported!!!!**  
>  is received by [!INCLUDE[indigo1](~/includes/indigo1-md.md)], it must be a part of the message contract \(or must be processed by one of the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] channels\); otherwise, it is assumed that the header is not understood and an exception is thrown.  
  
   
  
## 例  
 The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  
  
 [!code-csharp[MessageHeaderAttribute\#4](~/samples/snippets/csharp/VS_Snippets_CFX/messageheaderattribute/cs/services.cs#4)]
 [!code-vb[MessageHeaderAttribute\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/messageheaderattribute/vb/services.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Relay">
      <MemberSignature Language="C#" Value="public bool Relay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Relay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.MessageHeaderAttribute.Relay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このヘッダーをダウンストリーム ノードに中継する必要があるかどうかを指定します。 これは、<see langword="relay" /> SOAP ヘッダー属性にマッピングされます。</summary>
        <value>このヘッダーをダウンストリーム ノードに中継する必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、SOAP 1.1 の使用時は無視されます。 詳細については、<xref:System.ServiceModel.MessageHeaderAttribute> の「解説」を参照してください。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>