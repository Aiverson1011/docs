<Type Name="RoleService" FullName="System.Web.ApplicationServices.RoleService">
  <TypeSignature Language="C#" Value="public class RoleService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.RoleService" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>WCF Web サービスとして ASP.NET ロール プロバイダーにアクセスできます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.ApplicationServices.RoleService> オブジェクトでは、Windows Communication Foundation \(WCF\) サービスを介してユーザーのロールを参照することができるようにします。 ロール サービスを使用するには Web サーバー上の役割サービスを有効にするし、Web サービスへの WCF と互換性のあるクライアント アプリケーションに接続します。 ロール サービスを構成する方法については、次を参照してください。 [How to: Configure the ASP.NET Role Service with Windows Communication Foundation](http://msdn.microsoft.com/ja-jp/d021aa39-4cbf-4450-a3c1-d5573ca7ce8c)します。  
  
 ユーザーは、ユーザーのロールの読み取りを認証する必要があります。 ASP.NET の認証の種類を問わず、役割サービスが動作します。 WCF サービスによるユーザーのログイン方法については、次を参照してください。 [Login Service Overview](http://msdn.microsoft.com/ja-jp/6e121a28-89e8-4974-88a8-70aaa6a7d52b)します。  
  
 <xref:System.Web.ApplicationServices.RoleService> クラスは WCF サービスからのみアクセスするか 2 つのメソッドを公開: <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> メソッドおよび <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> メソッドです。<xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> メソッドは、ログインしたユーザーのすべてのロールを返します。<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> メソッドは、ユーザーが指定されたロールがあるかどうかを判断します。  
  
 <xref:System.Web.ApplicationServices.RoleService> オブジェクト、 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> イベントです。 イベント ハンドラーを作成する、 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> イベントを実行時に使用するロール プロバイダーを選択します。  
  
 コンソール アプリケーションから WCF の役割サービスを使用する方法の例は、次を参照してください。 [Walkthrough: Using ASP.NET Application Services](http://msdn.microsoft.com/ja-jp/f3f394f0-20d6-4361-aa8f-4b21bf4933eb)します。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.ApplicationServices.RoleService" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForCurrentUser">
      <MemberSignature Language="C#" Value="public string[] GetRolesForCurrentUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRolesForCurrentUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ログイン ユーザーのすべてのロールを返します。</summary>
        <returns>ユーザーが属しているロールの名前の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> メソッドは、ユーザーのすべてのロールを返します。 使用する、 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> メソッドを確認またはユーザーが利用できるリソースを指定するすべてのユーザーのロールを保持する必要があります。 このメソッドを使用するには複数の呼び出しを避けるために、 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> メソッドです。  
  
 呼び出す、 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> メソッドを発生させる、 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> イベントです。  
  
> [!NOTE]
>  呼び出す必要はありません、 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Web サーバーが実行されているコードからメソッドです。 呼び出す、 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> メソッドを WCF サービスの一部としてのみです。 Web サーバー上で実行されるコードでユーザーのロールの読み取り方法の詳細については、次を参照してください。、 <xref:System.Web.Security.Roles.GetRolesForUser%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">ロール管理が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentUserInRole">
      <MemberSignature Language="C#" Value="public bool IsCurrentUserInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCurrentUserInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">確認するロールの名前。</param>
        <summary>ログイン ユーザーが指定されたロールに属しているかどうかを決定します。</summary>
        <returns>
          <see langword="true" /> ユーザーが指定されたロールの場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> メソッドでは、ログインしたユーザーが指定されたロールに属しているかどうかを確認します。<xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> メソッドは、<xref:System.Web.ApplicationServices.RoleService.SelectingProvider> イベントを発生させます。  
  
> [!NOTE]
>  呼び出す必要はありません、 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> Web サーバーが実行されているコードからメソッドです。 呼び出す、 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> メソッドを WCF サービスの一部としてのみです。 Web サーバーで実行されるコードと、そのユーザーが、指定されたグループに属しているかどうかを確認する方法の詳細については、次を参照してください。、 <xref:System.Web.Security.Roles.IsUserInRole%2A> メソッドです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="role" /> <see langword="null" /> か、ユーザーがログインしていません。</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">ロール管理が無効です。</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectingProvider">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt; SelectingProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.SelectingProviderEventArgs&gt; SelectingProvider" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.RoleService.SelectingProvider" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>発生したときに、 <see cref="T:System.Web.ApplicationServices.RoleService" /> インスタンスは、ユーザーのロールをチェックするために使用するロール プロバイダーを決定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.ApplicationServices.RoleService> クラスが生成、 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> イベント、ユーザーのロールを取得するために使用するロール プロバイダーを決定する場合。 イベント ハンドラーを作成する、 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> イベントを使用するロール プロバイダーを実行時に選択します。  
  
   
  
## 例  
 次の例では、イベント ハンドラーをバインドする方法、 <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> Global.asax ファイル内のイベントです。 イベント ハンドラーでは、ユーザー名に基づいて、使用するには、どのロール プロバイダーを実行時に決定します。  
  
 [!code-csharp[System.Web.Security.SelectingProviderEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SelectingProviderEventHandler/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.SelectingProviderEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SelectingProviderEventHandler/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.SelectingProviderEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>