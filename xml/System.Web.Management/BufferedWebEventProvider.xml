<Type Name="BufferedWebEventProvider" FullName="System.Web.Management.BufferedWebEventProvider">
  <TypeSignature Language="C#" Value="public abstract class BufferedWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BufferedWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.BufferedWebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>バッファリングを必要とするイベント プロバイダーを作成するための基本機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 運用環境と運用スタッフが配置された Web アプリケーションの管理を ASP.NET の状態監視できます。<xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データおよびこのデータ処理の種類のプロバイダーをパッケージ化する正常性イベントの種類が含まれています。 正常性イベントの管理時に支援するサポート型も含まれています。  
  
 正常性イベントの処理をカスタマイズする場合から派生することができます、 <xref:System.Web.Management.BufferedWebEventProvider> 、独自のカスタム バッファリングされているプロバイダーを作成するクラス。  
  
> [!NOTE]
>  ほとんどの場合は実装されると、ASP.NET 状態監視の種類を使用してで値を指定して、稼働状況の監視システムを制御するが、 `healthMonitoring` 構成セクション。 独自のカスタム イベントとプロバイダーを作成するの稼働状況の監視の種類から派生できます。 カスタム プロバイダーの作成方法の例は、次を参照してください。 [ASP.NET Health\-Monitoring Custom Provider Sample](http://msdn.microsoft.com/ja-jp/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c)します。  
  
   
  
## 例  
 次のコード例から派生させる方法を示しています、 <xref:System.Web.Management.BufferedWebEventProvider> を適切なアクセス権を付与する必要があります、ローカル ファイルに構成されたイベントを書き込むカスタム プロバイダーを作成するクラス。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#1)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#1)]  
  
 次の構成ファイルの抜粋、 `healthMonitoring` ASP.NET 状態監視のすべてのイベントを処理する上で定義したカスタム プロバイダーを使用できるようにする構成セクション。  
  
```  
<healthMonitoring    
  heartBeatInterval="0" enabled="true">  
  
  <bufferModes>  
    <add name ="Custom Notification"  
      maxBufferSize="10"  
      maxFlushSize="5"  
      urgentFlushThreshold="10"  
      regularFlushInterval="Infinite"  
      urgentFlushInterval="00:00:30"  
      maxBufferThreads="1"  
/>  
  </bufferModes>  
  
  <providers>  
    <clear/>  
    <add name="SampleBufferedWebEventProvider"   
      type="SamplesAspNet.SampleBufferedWebEventProvider, bufferedwebeventprovider, Version=1.0.1785.14700, Culture=neutral, PublicKeyToken=d31491bf33b55954, processorArchitecture=MSIL"   
      buffer="true"  
      bufferMode="Custom Notification"  
/>  
  </providers>  
  
  <profiles>  
    <add name="Custom"   
      minInstances="1"   
      maxLimit="Infinite"   
      minInterval="00:00:00" />  
  </profiles>  
  
  <rules>  
    <clear />  
      <add name="Custom Buffered Web Event Provider"   
        eventName="All Events"  
        provider="SampleBufferedWebEventProvider"   
        profile="Custom" />  
  </rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebEventBufferFlushInfo" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BufferedWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.BufferedWebEventProvider.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Management.BufferedWebEventProvider" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。 インスタンス化に使用しないが、 <xref:System.Web.Management.TraceWebEventProvider> が、オブジェクトは、このクラスから継承する、独自のプロバイダーの種類を実装するときに、このコンス トラクターに呼び出すことができます。  
  
   
  
## 例  
 次のコード例では、カスタム イベント プロバイダーでこのコンス トラクターを使用する方法を示します。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#8)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferMode">
      <MemberSignature Language="C#" Value="public string BufferMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BufferMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.BufferedWebEventProvider.BufferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロバイダーで使用されるバッファー モードを示す値を取得します。</summary>
        <value>バッファー モードの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Management.BufferedWebEventProvider.BufferMode%2A> プロパティにはによって定義された値が含まれています、 `bufferMode` 属性、 `providers` の要素、 `healthMonitoring` セクションです。  
  
 次の構成ファイルの抜粋で、バッファー モードの名前を定義する方法を示しています、 `healthMonitoring` セクションです。  
  
```  
<bufferModes>  
  <add name ="Custom Notification" />  
</bufferModes>  
```  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Management.BufferedWebEventProvider.BufferMode%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#4)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.BufferedWebEventProvider.Flush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プロバイダーのバッファーからイベントをイベント ログに移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されると、バッファー内の最後の書き込みまたはイベントの数からどれだけ時間に関係なく、ログをバッファー内のイベントがバッファーから移動すぐにすべての経過します。 最後の書き込みの時間は、フラッシュ操作の時間にリセットされます。  
  
   
  
## 例  
 <xref:System.Web.Management.BufferedWebEventProvider.Flush%2A> メソッドを使用するコード例を次に示します。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#9)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.BufferedWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">このプロバイダーを識別するために、構成ファイルで使用する名前。</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> このプロバイダーの構成ファイルに割り当てられている属性を指定します。</param>
        <summary>このオブジェクトの初期値を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET の呼び出し、 <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> メソッドを呼び出した後、 <xref:System.Web.Management.BufferedWebEventProvider.%23ctor%2A> コンス トラクターです。 初期化するためにこのメソッドは、 <xref:System.Web.Management.BufferedWebEventProvider> 構成設定と構成ファイルで指定された名前を使用します。  
  
   
  
## 例  
 <xref:System.Web.Management.BufferedWebEventProvider.Initialize%2A> メソッドを使用するコード例を次に示します。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#2)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.BufferedWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">
          <see cref="T:System.Web.Management.WebBaseEvent" /> オブジェクトを処理します。</param>
        <summary>プロバイダーに渡されたイベントを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、イベントの処理を開始するを呼び出す ASP.NET 状態監視メソッドです。 イベント情報がバッファリングされる場合は、バッファリングを有効にすると、それ以外の場合、現在のログ メカニズムにディスパッチされます。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Management.BufferedWebEventProvider.ProcessEvent%2A> メソッドを実装する方法を示しています。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#5)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEventFlush">
      <MemberSignature Language="C#" Value="public abstract void ProcessEventFlush (System.Web.Management.WebEventBufferFlushInfo flushInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEventFlush(class System.Web.Management.WebEventBufferFlushInfo flushInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flushInfo" Type="System.Web.Management.WebEventBufferFlushInfo" />
      </Parameters>
      <Docs>
        <param name="flushInfo">A <see cref="T:System.Web.Management.WebEventBufferFlushInfo" /> バッファリングの情報を格納します。</param>
        <summary>バッファー内のイベントを処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A> メソッドがバッファーに格納されているメッセージを処理します。 ASP.NET の状態監視では、バッファーのフラッシュが必要な場合に、メソッドを呼び出します。 間隔のパラメーター値によって決定はどのフラッシュが必要な `bufferMode` 属性、 `providers` 内の要素、 `healthMonitoring` 構成セクション。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Management.BufferedWebEventProvider.ProcessEventFlush%2A> メソッドを実装する方法を示しています。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#6)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.BufferedWebEventProvider.Shutdown" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プロバイダーのシャット ダウンに関連するタスクを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ASP.NET の呼び出し、 <xref:System.Web.Management.BufferedWebEventProvider.Shutdown%2A> メソッドは、Web アプリケーションをホストしているアプリケーション ドメインが終了するとします。 アプリケーション リソースを閉じるなど、正常に終了すると、タスクを実行するメソッドと呼びます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseBuffering">
      <MemberSignature Language="C#" Value="public bool UseBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.BufferedWebEventProvider.UseBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロバイダーがバッファー モードであるかどうかを示す値を取得します。</summary>
        <value>
          <see langword="true" /> プロバイダーがバッファーされているモードである場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Management.BufferedWebEventProvider.UseBuffering%2A> プロパティにはによって定義された値が含まれています、 `buffer` 属性、 `providers` の要素、 `healthMonitoring` セクションです。  
  
   
  
## 例  
 次のコード例は、<xref:System.Web.Management.BufferedWebEventProvider.UseBuffering%2A> プロパティの使用方法を示しています。  
  
 [!code-csharp[System.Web.Management.BufferedWebEventProvider\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/CS/bufferedwebeventprovider.cs#3)]
 [!code-vb[System.Web.Management.BufferedWebEventProvider\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.BufferedWebEventProvider/VB/bufferedwebeventprovider.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>