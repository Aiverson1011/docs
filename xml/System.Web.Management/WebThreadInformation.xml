<Type Name="WebThreadInformation" FullName="System.Web.Management.WebThreadInformation">
  <TypeSignature Language="C#" Value="public sealed class WebThreadInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WebThreadInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebThreadInformation" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ASP.NET プロセス内のスレッドの状態に関する情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 運用環境と運用スタッフが配置された Web アプリケーションの管理を ASP.NET の状態監視できます。<xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データおよびこのデータ処理の種類のプロバイダーをパッケージ化する正常性イベントの種類が含まれています。 正常性イベントの管理時に支援するサポート型も含まれています。  
  
 インスタンス、 <xref:System.Web.Management.WebThreadInformation> クラスには、いずれかを使用して取得される情報が含まれて、 <xref:System.Web.Management.WebErrorEvent> 型または <xref:System.Web.Management.WebRequestErrorEvent> 型です。  
  
 アプリケーションでは、この型によって提供される保護された情報にアクセスする適切なアクセス許可が必要です。  
  
> [!NOTE]
>  ほとんどの場合は実装されると、ASP.NET 状態監視の種類を使用してで値を指定して、稼働状況の監視システムを制御するが、 `healthMonitoring` 構成セクション。 独自のカスタム イベントとプロバイダーを作成するの稼働状況の監視の種類から派生できます。 カスタム イベント クラスの作成の例は、このトピックで例を参照してください。  
  
   
  
## 例  
 次のコード例は、2 つの部分です。 1 つは、ASP.NET を使用したカスタム イベントを使用できるようにする構成ファイルの抜粋、 <xref:System.Web.Management.WebThreadInformation> 型です。 もう 1 つを使用したカスタム イベントを実装する方法を示しています、 <xref:System.Web.Management.WebThreadInformation> 型です。  
  
 カスタム イベントが発生する適切な時にを置き換えるものと同じシステム正常性イベントが発生する場合を確認します。  
  
```  
<healthMonitoring  
    heartBeatInterval="0" enabled="true">  
  
  <profiles>  
    <add name="Custom"   
      minInstances="1"   
      maxLimit="Infinite"   
      minInterval="00:00:00" />  
  </profiles>  
  
  <eventMappings>  
  
    <add   
      name="SampleWebThreadInformation"   
type="SamplesAspNet.SampleWebThreadInformation,webthreadinformation, Version=1.0.1782.29648, Culture=neutral, PublicKeyToken=b3283a2de7dd3f27, processorArchitecture=MSIL" />  
  
  </eventMappings>  
  
  <rules>  
  
    <add name="Custom Web Thread Info Event"   
      eventName="SampleWebThreadInformation"   
      provider="EventLogProvider"  
      profile="Custom" />  
  
  </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebThreadInformation\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#1)]
 [!code-vb[System.Web.Management.WebThreadInformation\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebErrorEvent" />
    <altmember cref="T:System.Web.Management.WebRequestErrorEvent" />
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
  </Docs>
  <Members>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebThreadInformation.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">
          <see cref="T:System.Web.Management.WebEventFormatter" /> Web 正常性イベント情報を書式設定に使用する\] タブおよびインデントの設定値を格納します。</param>
        <summary>スレッドに関連する情報を書式設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Management.WebThreadInformation.FormatToString%2A> メソッドは、イベントの情報は、イベント データをログに記録され、ユーザーに後で表示する必要がありますが役に同一の形式を提供します。 プロバイダーの 1 つを呼び出すときに内部的に呼び出されます、 <xref:System.Web.Management.WebBaseEvent.ToString%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、カスタム情報を書式設定する方法を示します。  
  
 [!code-csharp[System.Web.Management.WebThreadInformation\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#8)]
 [!code-vb[System.Web.Management.WebThreadInformation\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImpersonating">
      <MemberSignature Language="C#" Value="public bool IsImpersonating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImpersonating" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.IsImpersonating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスレッドの権限借用モードを取得します。</summary>
        <value>
          <see langword="true" /> スレッドが偽装モードで実行されている場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、スレッドの権限借用モードを取得する方法を示します。  
  
 [!code-csharp[System.Web.Management.WebThreadInformation\#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#4)]
 [!code-vb[System.Web.Management.WebThreadInformation\#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StackTrace">
      <MemberSignature Language="C#" Value="public string StackTrace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StackTrace" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.StackTrace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスレッド管理スタック トレースを取得します。</summary>
        <value>スレッドで管理されたスタック トレース。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、スレッドのスタック トレースを取得する方法を示します。  
  
 [!code-csharp[System.Web.Management.WebThreadInformation\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#5)]
 [!code-vb[System.Web.Management.WebThreadInformation\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadAccountName">
      <MemberSignature Language="C#" Value="public string ThreadAccountName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadAccountName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.ThreadAccountName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スレッドのアカウント名を取得します。</summary>
        <value>スレッドのアカウント名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティによって返されるアカウントは、スレッドが権限借用モードで実行されている場合は、任意にあります。  
  
   
  
## 例  
 次のコード例では、スレッドのアカウント名を取得する方法を示します。  
  
 [!code-csharp[System.Web.Management.WebThreadInformation\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#6)]
 [!code-vb[System.Web.Management.WebThreadInformation\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadID">
      <MemberSignature Language="C#" Value="public int ThreadID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ThreadID" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebThreadInformation.ThreadID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のスレッドの識別子を取得します。</summary>
        <value>現在のスレッドの識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マネージ スレッドがデバッグ目的での OS スレッドへの直接のマッピングがあるない場合でも、問題がある特定のスレッドを切り離す場合に役立ちますが常にします。  
  
   
  
## 例  
 次のコード例では、スレッド識別子を取得する方法を示します。  
  
 [!code-csharp[System.Web.Management.WebThreadInformation\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/CS/webthreadinformation.cs#7)]
 [!code-vb[System.Web.Management.WebThreadInformation\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebThreadInformation/VB/webthreadinformation.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>