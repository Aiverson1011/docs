<Type Name="WebProcessStatistics" FullName="System.Web.Management.WebProcessStatistics">
  <TypeSignature Language="C#" Value="public class WebProcessStatistics" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi WebProcessStatistics extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebProcessStatistics" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>実行中のプロセスの正常性を評価するための情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 運用環境と運用スタッフが配置された Web アプリケーションの管理を ASP.NET の状態監視できます。<xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データおよびこのデータ処理の種類のプロバイダーをパッケージ化する正常性イベントの種類が含まれています。 正常性イベントの管理時に支援するサポート型も含まれています。  
  
 インスタンス、 <xref:System.Web.Management.WebProcessStatistics> クラスには使用して取得される情報が含まれて、 <xref:System.Web.Management.WebHeartbeatEvent> 型です。  
  
> [!NOTE]
>  ほとんどの場合は実装されると、ASP.NET 状態監視の種類を使用してで値を指定して、稼働状況の監視システムを制御するが、 `healthMonitoring` 構成セクション。 独自のカスタム イベントとプロバイダーを作成するの稼働状況の監視の種類から派生できます。 カスタム イベント クラスの作成の例は、このトピックで例を参照してください。  
  
 イベント ログに記録ハートビート プロセスの統計情報を含む ASP.NET を有効に使用できる構成ファイルの抜粋を次に示します。  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="100">  
  
    <rules>  
      <add   
        name="Process Statistics"  
        eventName="Heartbeats"   
        provider="EventLogProvider"    
        profile="Default"/>  
    </rules>  
  
</healthMonitoring>  
```  
  
   
  
## 例  
 次のコード例は、2 つの部分です。 1 つは、ASP.NET を使用したカスタム イベントを使用できるように、構成ファイルの抜粋、 <xref:System.Web.Management.WebProcessStatistics> 型です。 2 つ目は、このカスタム イベントを実装する方法を示します.  
  
 カスタム イベントが発生する適切な時にを置き換えるものと同じシステム正常性イベントが発生する場合を確認します。  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
    <eventMappings>  
      <add  name="SampleProcessStatistics" type="SamplesAspNet.SampleWebProcessStatistics, webprocessstatistics, Version=1.0.1585.27289, Culture=neutral, PublicKeyToken=3648e5c763a8239f, processorArchitecture=MSIL"/>  
    </eventMappings>  
  
    <rules>  
      <add   
        name="Custom Process Statistics"  
        eventName="SampleProcessStatistics"   
        provider="EventLogProvider"    
        profile="Default"/>  
    </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#1)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebHeartbeatEvent" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebProcessStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebProcessStatistics.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Management.WebProcessStatistics" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainCount">
      <MemberSignature Language="C#" Value="public int AppDomainCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AppDomainCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.AppDomainCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセスのアプリケーション ドメインの数を取得します。</summary>
        <value>アプリケーション ドメインの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、通常の処理で、既定のドメインを含む ASP.NET アプリケーションの数を示します。  
  
   
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.AppDomainCount%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#5)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatToString">
      <MemberSignature Language="C#" Value="public virtual void FormatToString (System.Web.Management.WebEventFormatter formatter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FormatToString(class System.Web.Management.WebEventFormatter formatter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebProcessStatistics.FormatToString(System.Web.Management.WebEventFormatter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="System.Web.Management.WebEventFormatter" />
      </Parameters>
      <Docs>
        <param name="formatter">
          <see cref="T:System.Web.Management.WebEventFormatter" /> Web 正常性イベント情報を書式設定に使用する\] タブおよびインデントの設定値を格納します。</param>
        <summary>プロセスの統計情報を書式設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Management.WebProcessStatistics.FormatToString%2A> メソッドは、イベントの情報は、イベント データをログに記録され、ユーザーに後で表示する必要がありますが役に同一の形式を提供します。 プロバイダーの 1 つを呼び出すときに内部的に呼び出されます、 <xref:System.Web.Management.WebBaseEvent.ToString%2A> メソッドです。  
  
   
  
## 例  
 次のコード例では、カスタム情報を書式設定する方法を示します。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#14](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#14)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedHeapSize">
      <MemberSignature Language="C#" Value="public long ManagedHeapSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ManagedHeapSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.ManagedHeapSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マネージ ヒープのサイズを取得します。</summary>
        <value>マネージ ヒープのサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.ManagedHeapSize%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#6)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeakWorkingSet">
      <MemberSignature Language="C#" Value="public long PeakWorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PeakWorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.PeakWorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ピーク時の日付にプロセスの有効期間のワーキング セットを取得します。</summary>
        <value>プロセスのピーク ワーキング セット。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.PeakWorkingSet%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#7)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessStartTime">
      <MemberSignature Language="C#" Value="public DateTime ProcessStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ProcessStartTime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.ProcessStartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセスが開始された時刻を取得します。</summary>
        <value>
          <see cref="T:System.DateTime" /> プロセスが起動されました。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.ProcessStartTime%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#8)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestsExecuting">
      <MemberSignature Language="C#" Value="public int RequestsExecuting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestsExecuting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.RequestsExecuting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在実行中の要求の数を取得します。</summary>
        <value>プロセスが現在実行中の要求の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Management.WebProcessStatistics.RequestsExecuting%2A> 値は、便利な負荷に示します。  
  
   
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.RequestsExecuting%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#9)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestsQueued">
      <MemberSignature Language="C#" Value="public int RequestsQueued { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestsQueued" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.RequestsQueued" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>処理待ちの要求の数を取得します。</summary>
        <value>処理待ちの要求の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.Management.WebProcessStatistics.RequestsQueued%2A> 値は、便利な負荷に示します。  
  
   
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.RequestsQueued%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#10)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestsRejected">
      <MemberSignature Language="C#" Value="public int RequestsRejected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequestsRejected" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.RequestsRejected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>拒否された要求の数を取得します。</summary>
        <value>拒否された要求の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 <xref:System.Web.Management.WebProcessStatistics.RequestsRejected%2A> 値が過負荷または誤動作しているシステムの便利なインジケーターです。  
  
   
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.RequestsRejected%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#11)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadCount">
      <MemberSignature Language="C#" Value="public int ThreadCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ThreadCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.ThreadCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセスのスレッドの合計数を取得します。</summary>
        <value>プロセスのスレッドの合計数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 カウントは、マネージ コードとアンマネージ スレッドを指します。  
  
   
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.ThreadCount%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#12)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingSet">
      <MemberSignature Language="C#" Value="public long WorkingSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 WorkingSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebProcessStatistics.WorkingSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロセスのワーキング セットを取得します。</summary>
        <value>プロセスのワーキング セットのです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、取得する方法を示しています、 <xref:System.Web.Management.WebProcessStatistics.WorkingSet%2A> 値。  
  
 [!code-csharp[System.Web.Management.WebProcessStatistics\#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/CS/webprocessstatisticsevent.cs#13)]
 [!code-vb[System.Web.Management.WebProcessStatistics\#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebProcessStatistics/VB/webprocessstatisticsevent.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>