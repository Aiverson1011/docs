<Type Name="WebFailureAuditEvent" FullName="System.Web.Management.WebFailureAuditEvent">
  <TypeSignature Language="C#" Value="public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebFailureAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebFailureAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>セキュリティ障害に関する情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 運用環境と運用スタッフが配置された Web アプリケーションの管理を ASP.NET の状態監視できます。<xref:System.Web.Management?displayProperty=fullName> 名前空間には、アプリケーションの正常性状態データおよびこのデータ処理の種類のプロバイダーをパッケージ化する正常性イベントの種類が含まれています。 正常性イベントの管理時に支援するサポート型も含まれています。  
  
 <xref:System.Web.Management.WebFailureAuditEvent> クラスは、セキュリティの操作が失敗したときに使用します。 この例では、Web 要求の失敗した URL 承認です。  
  
 発生させる既定では、ASP.NET が構成されている、 <xref:System.Web.Management.WebFailureAuditEvent> イベントを次の機能。  
  
-   ファイルの承認。 ASP.NET は、Windows Id が要求に関連付けられている場合にのみ、ファイルの承認を試行します。 関連するイベントの監査のコードは <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>です。  
  
-   URL 承認します。 これは、不正な試行に対する URL リソースへのアクセスを制御します。 匿名認証の失敗は、ほとんどの状況で許容されるため、匿名ユーザーによる試行の失敗は監査されません。 関連するイベントの監査のコードは <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>です。  
  
-   汎用未処理またはセキュリティ未処理状態です。 これらの条件に関連するイベント コードの一覧を次に示します。  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  
  
 ときに、 <xref:System.Web.Management.WebFailureAuditEvent> イベントは、ASP.NET の状態監視をインクリメント関連するパフォーマンス カウンターの監査の失敗のイベントが発生し、チェック、 `healthMonitoring` 構成セクションのすべてのプロバイダーがイベントをサブスクライブするかどうかを決定します。 プロバイダーは、イベントをサブスクライブして、ASP.NET は処理のためにイベントをディスパッチします。  
  
> [!NOTE]
>  システム モニター \(PerfMon\) での監査の失敗のイベントが発生したパフォーマンス カウンターを表示する、 **カウンターの追加** ウィンドウで、 **ASP.NET** から、 **パフォーマンス オブジェクト** ドロップダウン リストで、 **監査エラーのイベントが発生** パフォーマンス カウンターをおよびをクリックして、 **追加** \] ボタンをクリックします。 詳細については、次を参照してください。 [Using the System Monitor \(PerfMon\) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) MSDN の IIS のドキュメントです。  
  
> [!NOTE]
>  ほとんどの場合は実装されると、ASP.NET 状態監視の種類を使用してで値を指定して、稼働状況の監視システムを制御するが、 `healthMonitoring` 構成セクション。 独自のカスタム イベントとプロバイダーを作成するの稼働状況の監視の種類から派生できます。 派生する例については、 <xref:System.Web.Management.WebFailureAuditEvent> 例」のセクションを参照してください。  
  
   
  
## 例  
 派生する次のコード例には、 <xref:System.Web.Management.WebFailureAuditEvent> カスタム監査イベントを作成するクラス。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  
  
 次の構成の抜粋を使用する ASP.NET を有効にする方法を示しています、 <xref:System.Web.Management.WebFailureAuditEvent> イベントです。  
  
```  
<healthMonitoring   
enabled="true"  
heartBeatInterval="0">   
<providers>  
<add name="EventLogProvider"   
type="System.Web.Management.EventLogWebEventProvider,  
System.Web,Version=2.0.3600.0,Culture=neutral,  
PublicKeyToken=b03f5f7f11d50a3a"/>  
</providers>  
  
<eventMappings>  
<add  name="SampleWebFailureAuditEvent"   
type="SamplesAspNet.SampleWebFailureAuditEvent,  
webfailureauditevent,Version=1.0.1663.31140,   
Culture=neutral,   
PublicKeyToken=0d1fa0f69d94de96,   
processorArchitecture=MSIL"/>  
</eventMappings>  
  
<rules>  
<add name="Custom Failure Audit Default"  
eventName=" SampleWebFailureAuditEvent "  
provider="EventLogProvider"  
profile="Default"/>    
</rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>When formatting your custom event information for display, override the <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> method rather than the <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> method. This will avoid overwriting or tampering with sensitive system information.</para>
    </block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebFailureAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明。</param>
        <param name="eventSource">イベントのソースであるオブジェクト。</param>
        <param name="eventCode">イベントに関連付けられたコードです。 カスタム イベントを実装するときに、イベントのコードがより大きくなければなりません <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> クラスの指定のパラメーターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。 インスタンスの作成に使用しないは <xref:System.Web.Management.WebFailureAuditEvent>, がこのクラスから継承する、独自のイベントの種類を実装する場合は、このコンス トラクターを呼び出すことができます。  
  
   
  
## 例  
 次のコード例で、このコンス トラクターを呼び出す方法を示しています、 `SampleWebFailureAuditEvent` クラスです。 このコード例が示されている例の一部は、 <xref:System.Web.Management.WebFailureAuditEvent> クラスの概要です。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明。</param>
        <param name="eventSource">イベントのソースであるオブジェクト。</param>
        <param name="eventCode">イベントに関連付けられたコードです。 カスタム イベントを実装するときに、イベントのコードがより大きくなければなりません <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />します。</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> イベントの詳細な識別子を指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Management.WebFailureAuditEvent" /> クラスの指定のパラメーターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。 インスタンスの作成に使用しないは <xref:System.Web.Management.WebFailureAuditEvent>, がこのクラスから継承する、独自のイベントの種類を実装する場合は、このコンス トラクターを呼び出すことができます。  
  
   
  
## 例  
 次のコード例で、このコンス トラクターを呼び出す方法を示しています、 `SampleWebFailureAuditEvent` クラスです。 このコード例が示されている例の一部は、 <xref:System.Web.Management.WebFailureAuditEvent> クラスの概要です。  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>監査エラーのイベントが発生したパフォーマンス カウンターをインクリメントします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 監査エラーのイベントが発生パフォーマンス カウンターは、アプリケーションの開始後に発生した障害が発生した監査イベントの数を追跡します。 このメソッドは、親も呼び出します <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> メソッドで、イベントが発生したカウンターをインクリメントします。 このカウンターは、発生したイベントの合計数を追跡します。  
  
 システム モニター \(PerfMon\) でこれらのパフォーマンス カウンターを表示する、 **カウンターの追加** ウィンドウの選択 **ASP.NET** から、 **パフォーマンス オブジェクト** ドロップダウン リストで、表示、およびをクリックするパフォーマンス カウンターを選択、 **追加** \] ボタンをクリックします。 詳細については、次を参照してください。 [Using the System Monitor \(PerfMon\) with ASP.NET Applications](http://go.microsoft.com/fwlink/?linkid=36882) MSDN の IIS のドキュメントです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.Management.WebFailureAuditEvent" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>