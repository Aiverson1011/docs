<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>成功したセキュリティ イベントに関する情報を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 運用環境と運用スタッフが配置された Web アプリケーションの管理を ASP.NET の状態監視できます。<xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データおよびこのデータ処理の種類のプロバイダーをパッケージ化する正常性イベントの種類が含まれています。 正常性イベントの管理時に支援するサポート型も含まれています。  
  
 <xref:System.Web.Management.WebSuccessAuditEvent> クラスは、セキュリティ関連の操作を正常に終了が発生したときに使用します。 この例では、Web 要求の URL 承認の成功です。  
  
 次のとおりに、どの種類のイベントの機能 <xref:System.Web.Management.WebSuccessAuditEvent> ASP.NET によって発生します。  
  
-   ファイルの承認。 成功の条件が監査されます。 ASP.NET では、ファイルの承認が、Windows Id が要求に関連付けられている場合のみしようとしました。 関連するイベントの監査のコードは <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>です。  
  
-   URL 承認します。 承認が与えられている URL リソースへのアクセスを示します。 成功の条件が監査されます。 関連するイベントの監査のコードは <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>です。  
  
-   その他のセキュリティ条件。 関連するイベント コードの一覧を次に示します。  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 ときに、 <xref:System.Web.Management.WebSuccessAuditEvent> が発生すると、ASP.NET の状態監視は、インクリメント関連するパフォーマンス カウンターの監査の成功イベントが発生し、チェック、、 `healthMonitoring` のすべてのプロバイダーがイベントをサブスクライブするかどうかを判断する構成です。 プロバイダーは、イベントをサブスクライブして、ASP.NET は処理のためにイベントをディスパッチします。  
  
> [!NOTE]
>  システム モニター \(PerfMon\) での監査の成功イベントの発生したパフォーマンス カウンターを表示する、 **カウンターの追加** ウィンドウ\] を選択 **ASP.NET** から、 **パフォーマンス オブジェクト** ドロップダウン リストで、 **監査成功イベントの発生** パフォーマンス カウンターをおよびをクリックして、 **追加** \] ボタンをクリックします。 詳細については、「[Monitoring ASP.NET Application Performance](http://msdn.microsoft.com/ja-jp/c96da1d1-6077-48d3-88e2-d9127ed91cf5)」を参照してください。  
  
 成功の監査が必要な条件を表すためにサブスクライブすることがありますされません。 サイトの監査のアクセスを提供するためには、それらをサブスクライブできます。  
  
> [!NOTE]
>  ほとんどの場合は実装されると、ASP.NET 状態監視の種類を使用してで値を指定して、稼働状況の監視システムを制御するが、 `healthMonitoring` 構成セクション。 独自のカスタム イベントとプロバイダーを作成するの稼働状況の監視の種類から派生できます。 派生する例については、 <xref:System.Web.Management.WebSuccessAuditEvent> このトピックで例を参照してください。  
  
   
  
## 例  
 次のコード例から派生させる方法を示しています、 <xref:System.Web.Management.WebSuccessAuditEvent> カスタム監査イベントを作成するクラス。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent\#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent\#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 次の例は、ASP.NET の状態イベントを使用して監視できるようにする構成ファイルの抜粋です。  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明。</param>
        <param name="eventSource">イベントのソースであるオブジェクト。</param>
        <param name="eventCode">イベントに関連付けられたコードです。 カスタム イベントを実装するときに、イベントのコードがより大きくなければなりません <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> クラスの指定のパラメーターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。 インスタンス化に使用しないが、 <xref:System.Web.Management.WebSuccessAuditEvent> が、オブジェクトは、このクラスから継承する、独自のイベントの種類を実装するときに、このコンス トラクターに呼び出すことができます。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> コンス トラクターは、コードから直接使用するものではありません。 ASP.NET によって呼び出されます。 呼び出すことができます、 <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> コンス トラクターから派生する場合、 <xref:System.Web.Management.WebSuccessAuditEvent> クラスです。  
  
   
  
## 例  
 次のコード例で、このコンス トラクターを呼び出す方法を示しています、 `SampleWebSuccessAuditEvent` クラスです。 このコード例が示されている例の一部は、 <xref:System.Web.Management.WebSuccessAuditEvent> クラスです。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent\#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent\#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明。</param>
        <param name="eventSource">イベントのソースであるオブジェクト。</param>
        <param name="eventCode">イベントに関連付けられたコードです。 カスタム イベントを実装するときに、イベントのコードがより大きくなければなりません <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />します。</param>
        <param name="eventDetailCode">
          <see cref="T:System.Web.Management.WebEventCodes" /> イベントの詳細な識別子を指定する値。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> クラスの指定のパラメーターを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、ASP.NET 状態監視システムによって内部的に使用されます。 インスタンス化に使用しないが、 <xref:System.Web.Management.WebSuccessAuditEvent> が、オブジェクトは、このクラスから継承する、独自のイベントの種類を実装するときに、このコンス トラクターに呼び出すことができます。  
  
> [!NOTE]
>  <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> コンス トラクターは、コードから直接使用するものではありません。 ASP.NET によって呼び出されます。 呼び出すことができます、 <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> コンス トラクターから派生する場合、 <xref:System.Web.Management.WebSuccessAuditEvent> クラスです。  
  
   
  
## 例  
 次のコード例で、このコンス トラクターを呼び出す方法を示しています、 `SampleWebSuccessAuditEvent` クラスです。 このコード例が示されている例の一部は、 <xref:System.Web.Management.WebSuccessAuditEvent> クラスです。  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent\#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent\#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>監査の成功イベントの発生したパフォーマンス カウンターをインクリメントします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 監査の成功イベント発生のパフォーマンス カウンターは、アプリケーションの開始後に発生した成功の監査イベントの数を追跡します。 このメソッドは、親も呼び出します <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> メソッドで、イベントが発生したカウンターをインクリメントします。 このカウンターは、発生したイベントの合計数を追跡します。  
  
 システム モニター \(PerfMon\) でこれらのパフォーマンス カウンターを表示する、 **カウンターの追加** ウィンドウの選択 **ASP.NET** から、 **パフォーマンス オブジェクト** ドロップダウン リストで、表示、およびをクリックするパフォーマンス カウンターを選択、 **追加** \] ボタンをクリックします。 詳細については、「[Monitoring ASP.NET Application Performance](http://msdn.microsoft.com/ja-jp/c96da1d1-6077-48d3-88e2-d9127ed91cf5)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>