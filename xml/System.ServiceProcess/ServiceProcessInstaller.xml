<Type Name="ServiceProcessInstaller" FullName="System.ServiceProcess.ServiceProcessInstaller">
  <TypeSignature Language="C#" Value="public class ServiceProcessInstaller : System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProcessInstaller extends System.Configuration.Install.ComponentInstaller" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceProcessInstaller" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Install.ComponentInstaller</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>拡張するクラスを含む実行可能ファイルをインストール <see cref="T:System.ServiceProcess.ServiceBase" />します。 このクラスは、サービス アプリケーションをインストールするときに、InstallUtil.exe などのインストール ユーティリティによって呼び出されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceProcess.ServiceProcessInstaller> が、実行可能ファイルですべてのサービスに共通する機能です。 インストールするサービスに関連するレジストリ値を書き込むため、インストール ユーティリティによって使用されます。  
  
 継承されるプロジェクト インストーラー クラスを作成、サービスをインストールする <xref:System.Configuration.Install.Installer>, 、設定と、 <xref:System.ComponentModel.RunInstallerAttribute> クラスに対し、 `true`です。 プロジェクト内で 1 つのインスタンスを作成 <xref:System.ServiceProcess.ServiceProcessInstaller> サービス アプリケーションと 1 つあたりのインスタンス <xref:System.ServiceProcess.ServiceInstaller> アプリケーション内の各サービスのインスタンス。 最後に、追加、 <xref:System.ServiceProcess.ServiceProcessInstaller> インスタンスおよび <xref:System.ServiceProcess.ServiceInstaller> プロジェクト インストーラー クラスのインスタンス。  
  
 InstallUtil.exe を実行すると、ユーティリティは、サービス アセンブリにクラス、 <xref:System.ComponentModel.RunInstallerAttribute> 設定 `true`します。 追加することで、サービス アセンブリにクラスを追加、 <xref:System.Configuration.Install.Installer.Installers%2A> プロジェクト インストーラーに関連付けられているコレクション。 場合 <xref:System.ComponentModel.RunInstallerAttribute> は `false`, 、インストール ユーティリティには、プロジェクト インストーラーが無視されます。  
  
 インスタンスの <xref:System.ServiceProcess.ServiceProcessInstaller>, 、ログオン ユーザーとは別のアカウントでサービス アプリケーションを実行することを指定するプロパティ変更できますにはが含まれます。 特定を指定する <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> ペアをサービスが実行すると、または使用することができます <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> をコンピューターのシステム アカウント、ローカルまたはネットワーク サービス アカウントまたはユーザー アカウントでサービスを実行することを指定します。  
  
> [!NOTE]
>  コンピューターのシステム アカウントは、管理者アカウントと同じではありません。  
  
 通常、呼び出さないメソッドに <xref:System.ServiceProcess.ServiceInstaller> 、コード内で一般的にして呼び出されただけインストール ユーティリティです。 インストール ユーティリティは、 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> と <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> インストール プロセス中にメソッドです。 バックアップ実行の障害を必要に応じてを呼び出して <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> \(または <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>\) 以前にインストールされたすべてのコンポーネントにします。  
  
 アプリケーションのインストールにはプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントを自動的に情報が格納 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>します。 この状態が継続的に情報として、 <xref:System.ServiceProcess.ServiceProcessInstaller> インスタンスとその各 <xref:System.ServiceProcess.ServiceInstaller> ユーティリティによってインスタンスがインストールされています。 場合によっては、通常、この状態情報を明示的に変更するコードの必要はありません。  
  
 インスタンス化する、 <xref:System.ServiceProcess.ServiceProcessInstaller> 基本クラス コンス トラクターと、 <xref:System.Configuration.Install.ComponentInstaller.%23ctor%2A>, 、呼び出されます。  
  
   
  
## 例  
 次の例から継承される MyProjectInstaller と呼ばれるプロジェクト インストーラー <xref:System.Configuration.Install.Installer>します。 2 つのサービスでは、「Hello World サービス 1」を含むサービス実行可能ファイルがあることが前提とし、"Hello World サービス 2" です。 \(これは、インストール ユーティリティによって呼び出されます\) MyProjectInstaller のコンス トラクター内で <xref:System.ServiceProcess.ServiceInstaller> オブジェクトは、各サービスの作成と <xref:System.ServiceProcess.ServiceProcessInstaller> 実行可能ファイルが作成されます。 インストール ユーティリティが有効なインストーラーとして MyProjectInstaller を認識する、 <xref:System.ComponentModel.RunInstallerAttribute> に属性が設定されている `true`します。  
  
 インストーラーに追加される前に、プロセスのインストーラーおよびサービスのインストーラーで省略可能なプロパティが設定されて、 <xref:System.Configuration.Install.Installer.Installers%2A> コレクションです。 オブジェクトに追加インストール ユーティリティ、MyProjectInstaller にアクセスするときに、 <xref:System.Configuration.Install.Installer.Installers%2A> を呼び出すことによってコレクション <xref:System.Configuration.Install.InstallerCollection.Add%2A?displayProperty=fullName> 順番でインストールされています。 処理中は、インストーラーは、各オブジェクトのバックアップ順番でインストール エラーが発生した場合、どのオブジェクトがインストールされているを示す状態情報を保持します。  
  
 通常はインスタンス化するありませんプロジェクト インストーラー クラス明示的にします。 作成し、追加すると、 <xref:System.ComponentModel.RunInstallerAttribute>, がインストール ユーティリティが実際に呼び出すし、そのため、クラスを初期化します。  
  
 [!code-cpp[Classic ServiceInstaller Example\#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ServiceInstaller Example\#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/CS/source.cs#1)]
 [!code-vb[Classic ServiceInstaller Example\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ServiceInstaller Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceBase" />
    <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
    <altmember cref="P:System.Configuration.Install.Installer.Installers" />
    <altmember cref="T:System.ServiceProcess.ServiceAccount" />
    <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProcessInstaller ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> クラスの新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Account">
      <MemberSignature Language="C#" Value="public System.ServiceProcess.ServiceAccount Account { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceProcess.ServiceAccount Account" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("ServiceProcessInstallerAccount")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceProcess.ServiceAccount</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはこのサービス アプリケーションの実行に使用するアカウントの種類を設定します。</summary>
        <value>A <see cref="T:System.ServiceProcess.ServiceAccount" /> 、システムがこのサービスを実行するアカウントの種類を定義します。 既定値は、<see langword="User" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ときに、 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> プロパティは、 `User`, 、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> プロパティを使用して、サービス アプリケーションが実行されるアカウントを定義します。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> ペアにより、サービスをシステム アカウント以外のアカウントで実行します。 これにより、ログオンしているユーザーがいないときに、再起動時に自動的に開始するサービス、たとえば、できます。 いずれかのままにする場合、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> または <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 空にして <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> に `User`, 、有効なユーザー名とインストール時にパスワードを求められます。  
  
 指定できるローカルまたはローカル システム アカウントで実行するサービスやネットワーク サービスです。 参照してください、 <xref:System.ServiceProcess.ServiceAccount> 勘定科目の種類の詳細についての列挙体です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="T:System.ServiceProcess.ServiceAccount" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromComponent">
      <MemberSignature Language="C#" Value="public override void CopyFromComponent (System.ComponentModel.IComponent comp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CopyFromComponent(class System.ComponentModel.IComponent comp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.CopyFromComponent(System.ComponentModel.IComponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comp" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="comp">
          <see cref="T:System.ComponentModel.IComponent" /> サービス プロセスを表します。</param>
        <summary>基本クラスを実装する <see cref="M:System.Configuration.Install.ComponentInstaller.CopyFromComponent(System.ComponentModel.IComponent)" /> なしでメソッド <see cref="T:System.ServiceProcess.ServiceProcessInstaller" /> クラス固有の動作です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、コード内で呼び出されません必要があります。 基本クラス メソッドを <xref:System.Configuration.Install.ComponentInstaller> は `abstract`, 派生クラスで、ここで実装されているため、します。 ただし、いない <xref:System.ServiceProcess.ServiceProcessInstaller> クラスに固有のメソッドの実装で処理します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="HelpText">
      <MemberSignature Language="C#" Value="public override string HelpText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.HelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービスのインストール オプションに表示されるテキストのヘルプを取得します。</summary>
        <value>ヘルプ テキスト、特定のアカウントでサービスを実行するためにユーザー名とパスワードを設定するための手順の説明を提供します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このヘルプ テキストは、サービスが手動で起動したときに使用できます。 ユーザー名とパスワードの情報を入力する方法をユーザーとに示します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      </Docs>
    </Member>
    <Member MemberName="Install">
      <MemberSignature Language="C#" Value="public override void Install (System.Collections.IDictionary stateSaver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Install(class System.Collections.IDictionary stateSaver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateSaver" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="stateSaver">
          <see cref="T:System.Collections.IDictionary" /> インストールに関連付けられているコンテキスト情報を格納します。</param>
        <summary>サービス アプリケーションの情報をレジストリに書き込みます。 このメソッドは、自動的に適切なメソッドを呼び出したセットアップ ツールで使用することはできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、呼び出さないメソッドに <xref:System.ServiceProcess.ServiceProcessInstaller> 、コード内で一般的にして呼び出されただけインストール ユーティリティです。 インストール ユーティリティは、 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> インストール プロセス中にメソッドです。 バックアップ実行の障害を必要に応じてを呼び出して <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 以前にインストールされたすべてのコンポーネントにします。 このメソッドは、基本クラスへのインストールを渡します <xref:System.Configuration.Install.Installer.Install%2A?displayProperty=fullName> メソッドです。  
  
 通常はないのメソッドを呼び出す <xref:System.ServiceProcess.ServiceInstaller> 、コード内で一般的にして呼び出されただけインストール ユーティリティです。 インストール ユーティリティは、 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> と <xref:System.ServiceProcess.ServiceInstaller.Install%2A?displayProperty=fullName> インストール プロセス中にメソッドです。 バックアップ実行の障害を必要に応じてを呼び出して <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> \(または <xref:System.ServiceProcess.ServiceInstaller.Rollback%2A?displayProperty=fullName>\) 以前にインストールされたすべてのコンポーネントについて  
  
 アプリケーションのインストールにはプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントを自動的に情報が格納 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>します。 この状態情報が渡された <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> として、 `stateSaver` パラメーターは継続的に更新、 <xref:System.ServiceProcess.ServiceProcessInstaller> インスタンスとその各 <xref:System.ServiceProcess.ServiceInstaller> ユーティリティによってインスタンスがインストールされています。 場合によっては、通常、この状態情報を明示的に変更するコードの必要はありません。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A> 基本クラスのメソッドによってスローされた例外を呼び出し元のメソッドに渡すか、 <xref:System.Configuration.Install.Installer.BeforeInstall> \/ <xref:System.Configuration.Install.Installer.AfterInstall> イベント ハンドラーです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stateSaver" /> が <see langword="null" /> です。</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <altmember cref="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public string Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Password" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサービス アプリケーションを実行するユーザー アカウントに関連付けられているパスワードを設定します。</summary>
        <value>サービスを実行するアカウントに関連付けられたパスワードです。 既定値は、空の文字列 \(""\) です。 プロパティは、パブリックではなされ、シリアル化されることはありません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> ペアにより、サービスをシステム アカウント以外のアカウントで実行します。 これにより、ログオンしているユーザーがいないときに、再起動時に自動的に開始するサービス、たとえば、できます。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 、シリアル化またはインストールの状態を保存しないという点で、安全な方法で処理されます \(プロジェクト インストーラーの <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>\) またはパブリック アクセス権を持つ他の場所。  
  
 設定、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> インストール時に、サービスに自動的に関連するアカウントを使用します。 いずれかのままにする場合、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> または <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 空にして <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> に `User`, 、有効なユーザー名とインストール時にパスワードを求められます。  
  
 別のアカウントでサービスを実行するための別のオプションでは、コンピューターのシステム アカウントを使用します。 管理者アカウントとは異なりますが、このアカウントには、パスワードは必要ありません。 システム アカウントの特権は、現在ログインしているユーザーを超える可能性があります。 ユーザー アカウントがアクセス許可のないユーザーによって発生した問題を回避するのではなく、システム アカウントで実行されているサービスが必要です。  
  
 場合 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 以外の任意の値は、 `User`, 、指定されたアカウント \(ローカルまたはネットワーク サービス、またはローカル システム\) を使用すると、場合でも、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> プロパティが設定されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public override void Rollback (System.Collections.IDictionary savedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Rollback(class System.Collections.IDictionary savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceProcessInstaller.Rollback(System.Collections.IDictionary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="savedState">
          <see cref="T:System.Collections.IDictionary" /> インストールに関連付けられているコンテキスト情報を格納します。</param>
        <summary>インストール プロシージャによって、レジストリに書き込まれたサービス アプリケーションの情報をロールバックします。 このメソッドは、インストール ツールは、適切なメソッドを自動的に処理が使用することはできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、呼び出さないメソッドに <xref:System.ServiceProcess.ServiceProcessInstaller> 、コード内で一般的にして呼び出されただけインストール ユーティリティです。 インストール ユーティリティは、 <xref:System.ServiceProcess.ServiceProcessInstaller.Install%2A?displayProperty=fullName> インストール プロセス中にメソッドです。 バックアップ実行の障害を必要に応じてを呼び出して <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 例外を生成したオブジェクトにします。  
  
 アプリケーションのインストールにはプロジェクトのインストーラーを使用して、既にインストールされているコンポーネントを自動的に情報が格納 <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>します。 この状態情報が渡された <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> として、 `savedState` パラメーターは継続的に更新、 <xref:System.ServiceProcess.ServiceProcessInstaller> インスタンスとその各 <xref:System.ServiceProcess.ServiceInstaller> ユーティリティによってインスタンスがインストールされています。 場合によっては、通常、この状態情報を明示的に変更するコードの必要はありません。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Rollback%2A> 基本クラスのメソッドによってスローされた例外を呼び出し元のメソッドに渡すか、 <xref:System.Configuration.Install.Installer.BeforeInstall> \/ <xref:System.Configuration.Install.Installer.AfterInstall> イベント ハンドラーです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> が <see langword="null" /> です。  
  
 または  
  
 <paramref name="savedState" /> 破損しているか存在しません。</exception>
        <altmember cref="M:System.ServiceProcess.ServiceProcessInstaller.Install(System.Collections.IDictionary)" />
        <altmember cref="T:System.Configuration.Install.ComponentInstaller" />
      </Docs>
    </Member>
    <Member MemberName="Username">
      <MemberSignature Language="C#" Value="public string Username { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Username" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceProcessInstaller.Username" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサービス アプリケーションを実行するユーザー アカウントを設定します。</summary>
        <value>サービスを実行するアカウント。 既定値は、空の文字列 \(""\) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> ペアにより、サービスをシステム アカウント以外のアカウントで実行します。 これにより、ログオンしているユーザーがいないときに、再起動時に自動的に開始するサービス、たとえば、できます。  
  
 <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> 、シリアル化またはインストールの状態を保存しないという点で、安全な方法で処理されます \(プロジェクト インストーラーの <xref:System.Configuration.Install.Installer.Context%2A?displayProperty=fullName>\) またはパブリック アクセス権を持つ他の場所。  
  
 設定、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> インストール時に、サービスに自動的に関連するアカウントを使用します。 いずれかのままにする場合、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> または <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> 空にして <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> に `User`, 、有効なユーザー名とインストール時にパスワードを求められます。  
  
 別のアカウントでサービスを実行するための別のオプションでは、コンピューターのシステム アカウントを使用します。 管理者アカウントとは異なりますが、このアカウントには、パスワードは必要ありません。 システム アカウントの特権は、現在ログインしているユーザーを超える可能性があります。 ユーザー アカウントがアクセス許可のないユーザーによって発生した問題を回避するのではなく、システム アカウントで実行されているサービスが必要です。  
  
 場合 <xref:System.ServiceProcess.ServiceProcessInstaller.Account%2A> 以外の任意の値は、 `User`, 、指定されたアカウント \(ローカルまたはネットワーク サービス、またはローカル システム\) を使用すると、場合でも、 <xref:System.ServiceProcess.ServiceProcessInstaller.Username%2A> と <xref:System.ServiceProcess.ServiceProcessInstaller.Password%2A> プロパティが設定されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Password" />
        <altmember cref="P:System.ServiceProcess.ServiceProcessInstaller.Account" />
        <altmember cref="T:System.ServiceProcess.Design.ServiceInstallerDialog" />
      </Docs>
    </Member>
  </Members>
</Type>