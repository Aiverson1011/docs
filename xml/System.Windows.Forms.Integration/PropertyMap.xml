<Type Name="PropertyMap" FullName="System.Windows.Forms.Integration.PropertyMap">
  <TypeSignature Language="C#" Value="public class PropertyMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyMap extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Integration.PropertyMap" />
  <AssemblyInfo>
    <AssemblyName>WindowsFormsIntegration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Windows フォーム コントロールと Windows Presentation Foundation (WPF) 要素の間のプロパティ値を変換する方法を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Windows.Forms.Integration.PropertyMap> クラス間の変換を定義する [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] プロパティと [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] ハイブリッド アプリケーションでのプロパティです。<xref:System.Windows.Forms.Integration.ElementHost.PropertyMap%2A?displayProperty=fullName> と <xref:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap%2A?displayProperty=fullName> プロパティを <xref:System.Windows.Forms.Integration.ElementHost> と <xref:System.Windows.Forms.Integration.WindowsFormsHost> クラスは、1 つのテクノロジから、もう一方へのマッピングを定義します。  
  
 詳細については、次を参照してください。 [Walkthrough: Mapping Properties Using the ElementHost Control](https://msdn.microsoft.com/en-us/library/ms788740\(v=vs.100\).aspx) と [Walkthrough: Mapping Properties Using the WindowsFormsHost Element](https://msdn.microsoft.com/en-us/library/ms788729\(v=vs.100\).aspx)します。  
  
   
  
## 例  
 次のコード例へのマッピングを追加する方法を示しています、 <xref:System.Windows.Forms.Control.Margin%2A> プロパティを <xref:System.Windows.Forms.Integration.ElementHost> コントロールです。  
  
 [!code-csharp[PropertyMappingWithElementHost\#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#12)]
 [!code-vb[PropertyMappingWithElementHost\#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#12)]  
  
 次のコード例の既定のマッピングを交換する方法を示しています、 <xref:System.Windows.FrameworkElement.FlowDirection%2A> プロパティを <xref:System.Windows.Forms.Integration.WindowsFormsHost> コントロールです。  
  
 [!code-csharp[PropertyMappingWithWfh\#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfh/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#12)]
 [!code-vb[PropertyMappingWithWfh\#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfh/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#12)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">for full trust for the immediate caller. This member cannot be used by partially trusted code.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">for full trust for inheritors. This member cannot be inherited by partially trusted code.</permission>
    <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
    <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMap (object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.#ctor(System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">変換するプロパティを持つオブジェクト。</param>
        <summary>指定されたソース オブジェクトを使用して、<see cref="T:System.Windows.Forms.Integration.PropertyMap" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `source` 変換するプロパティのソースである、 <xref:System.Windows.Forms.Integration.PropertyMap>です。 プロパティにマップされて、 <xref:System.Windows.Forms.Integration.PropertyMap> 上に存在する必要があります <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>します。  
  
 <xref:System.Windows.Forms.Integration.PropertyTranslator> 現在のプロパティ値を使用してデリゲートが呼び出されます <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, System.Windows.Forms.Integration.PropertyTranslator translator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, class System.Windows.Forms.Integration.PropertyTranslator translator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="translator" Type="System.Windows.Forms.Integration.PropertyTranslator" />
      </Parameters>
      <Docs>
        <param name="propertyName">マップするプロパティの名前。</param>
        <param name="translator">
          <c>propertyName</c> の変更時に呼び出される <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲート。</param>
        <summary>特定のプロパティに関する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートを <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 When setting, if no <xref:System.Windows.Forms.Integration.PropertyTranslator> exists for **parameterReference tag is not supported!!!!**  
, the new delegate is added to the <xref:System.Windows.Forms.Integration.PropertyMap>. If a <xref:System.Windows.Forms.Integration.PropertyTranslator> already exists for **parameterReference tag is not supported!!!!**  
, an <xref:System.InvalidOperationException> is raised.  
  
   
  
## 例  
 The following code example shows how to add a mapping for the <xref:System.Windows.Forms.Control.Margin%2A> property to an <xref:System.Windows.Forms.Integration.ElementHost> control.  
  
 [!code-csharp[PropertyMappingWithElementHost\#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#12)]
 [!code-vb[PropertyMappingWithElementHost\#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#12)]  
  
 The following code example shows how to add a mapping for the <xref:System.Windows.UIElement.Clip%2A> property to a <xref:System.Windows.Forms.Integration.WindowsFormsHost> control.  
  
 [!code-csharp[PropertyMappingWithWfh\#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfh/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#14)]
 [!code-vb[PropertyMappingWithWfh\#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfh/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="propertyName" /> には既存のマッピングがあります。</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Apply(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">変換するプロパティの名前。</param>
        <summary>ソース オブジェクトの現在のプロパティ値に基づいて、指定されたプロパティのプロパティ トランスレーターを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyName" /> で指定されたプロパティが <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" /> 上に存在しません。</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="ApplyAll">
      <MemberSignature Language="C#" Value="public void ApplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.ApplyAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ソース オブジェクトの現在のプロパティ値に基づいて、マップされた各プロパティのプロパティ トランスレーターを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Clear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>プロパティ マッピングをすべて削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Contains(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">検索するプロパティの名前。</param>
        <summary>指定されたプロパティがマップされているかどうかを示す値を取得します。</summary>
        <returns>プロパティ マップの中に <paramref name="propertyName" /> が存在する場合、<see langword="true" />。そうでない場合、<see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTranslators">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Windows.Forms.Integration.PropertyTranslator&gt; DefaultTranslators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Windows.Forms.Integration.PropertyTranslator&gt; DefaultTranslators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.DefaultTranslators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Windows.Forms.Integration.PropertyTranslator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定で定義されているプロパティ マッピングのコレクションを取得します。</summary>
        <value>プロパティ名を、対応する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートにマップする <see cref="T:System.Collections.Generic.Dictionary`2" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 For a list of default property mappings, see [Windows Forms and WPF Property Mapping](http://msdn.microsoft.com/ja-jp/999d8298-9c04-467d-a453-86e41002057d).  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Integration.PropertyTranslator this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Integration.PropertyTranslator Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.Item(System.String)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Integration.PropertyTranslator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">マップするプロパティの名前。</param>
        <summary>特定のプロパティに関する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートを取得または設定します。</summary>
        <value>
          <paramref name="propertyName" /> によって指定されたプロパティに対応する <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲート。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ない場合に設定するときに <xref:System.Windows.Forms.Integration.PropertyTranslator> の存在 `propertyName`, に新しいデリゲートを追加、 <xref:System.Windows.Forms.Integration.PropertyMap>です。 場合、 <xref:System.Windows.Forms.Integration.PropertyTranslator> に既に `propertyName`, は置き換えられます。  
  
   
  
## 例  
 次のコード例を取得する方法を示しています、 <xref:System.Windows.Forms.Integration.PropertyTranslator> デリゲートは、 <xref:System.Windows.Forms.Control.BackColor%2A> のプロパティ、 <xref:System.Windows.Forms.Integration.ElementHost> コントロールです。  
  
 [!code-csharp[PropertyMappingWithElementHost\#15](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#15)]
 [!code-vb[PropertyMappingWithElementHost\#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#15)]  
  
 次のコード例を取得する方法を示しています、 <xref:System.Windows.Forms.Integration.PropertyTranslator> デリゲートは、 <xref:System.Windows.Controls.Control.Background%2A> のプロパティ、 <xref:System.Windows.Forms.Integration.WindowsFormsHost> コントロールです。  
  
 [!code-csharp[PropertyMappingWithWfh\#15](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfh/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#15)]
 [!code-vb[PropertyMappingWithWfh\#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfh/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyName" /> は <see langword="null" /> または空の文字列です。つまり、指定された <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> デリゲートは <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyName" /> で指定されたプロパティが <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" /> 上に存在しません。</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションのプロパティ名を格納している <see cref="T:System.Collections.ICollection" /> オブジェクトを取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションのプロパティ名を格納している <see cref="T:System.Collections.ICollection" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="PropertyMappingError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs&gt; PropertyMappingError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs&gt; PropertyMappingError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ トランスレーターによって例外が発生したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ハンドラー、 <xref:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError> イベントを設定して例外を発生できます必要に応じて、 <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> フラグを <xref:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs>です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Remove(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">削除するプロパティの名前。</param>
        <summary>マッピングから指定されたプロパティを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次のコード例は、マッピングを削除する方法を示しています、 <xref:System.Windows.Forms.Control.Cursor%2A> プロパティを <xref:System.Windows.Forms.Integration.ElementHost> コントロールです。  
  
 [!code-csharp[PropertyMappingWithElementHost\#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#13)]
 [!code-vb[PropertyMappingWithElementHost\#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#13)]  
  
 次のコード例へのマッピングを追加する方法を示しています、 <xref:System.Windows.FrameworkElement.Cursor%2A> プロパティを <xref:System.Windows.Forms.Integration.WindowsFormsHost> コントロールです。  
  
 [!code-csharp[PropertyMappingWithWfh\#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfh/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#13)]
 [!code-vb[PropertyMappingWithWfh\#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfh/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyName" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Reset(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">復元するプロパティの名前。</param>
        <summary>指定されたプロパティの既定のプロパティ マッピングを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.Integration.PropertyMap.Reset%2A> メソッド次の効果には、 <xref:System.Windows.Forms.Integration.PropertyMap>です。  
  
-   削除されている既定のプロパティ マッピングが復元されます。  
  
-   追加されたプロパティ マッピングが削除されます。  
  
-   既定値には、オーバーライドされた既定のプロパティ マッピングが復元されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyName" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="ResetAll">
      <MemberSignature Language="C#" Value="public void ResetAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.ResetAll" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>既定のプロパティ マッピングを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Forms.Integration.PropertyMap.ResetAll%2A> メソッド次の効果には、 <xref:System.Windows.Forms.Integration.PropertyMap>です。  
  
-   削除されている既定のプロパティ マッピングが復元されます。  
  
-   追加されたプロパティのマッピングが削除されます。  
  
-   オーバーライドされている既定のプロパティのマッピングは、既定値に復元されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="SourceObject">
      <MemberSignature Language="C#" Value="protected object SourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>変換するプロパティを持つオブジェクトを取得します。</summary>
        <value>変換するプロパティを持つオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プロパティにマップされて、 <xref:System.Windows.Forms.Integration.PropertyMap> 上に存在する必要があります <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションにプロパティ トランスレーターが含まれる <see cref="T:System.Collections.ICollection" /> を取得します。</summary>
        <value>
          <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> コレクションにプロパティ トランスレーターが含まれる <see cref="T:System.Collections.ICollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>