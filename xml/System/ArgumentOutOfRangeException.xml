<Type Name="ArgumentOutOfRangeException" FullName="System.ArgumentOutOfRangeException">
  <TypeSignature Language="C#" Value="public class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArgumentOutOfRangeException extends System.ArgumentException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ArgumentOutOfRangeException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>引数の値が、呼び出されたメソッドで定義されている許容範囲外である場合にスローされる例外。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 An              <xref:System.ArgumentOutOfRangeException> exception is thrown when a method is invoked and at least one of the arguments passed to the method is not **languageKeyword tag is not supported!!!!**  
 and contains an invalid value that is not a member of the set of values expected for the argument. The <xref:System.ArgumentException.ParamName%2A> property identifies the invalid argument, and the <xref:System.ArgumentOutOfRangeException.ActualValue%2A> property, if a value is present, identifies the invalid value.  
  
 Typically, an <xref:System.ArgumentOutOfRangeException> results from developer error. Instead of handling the exception in a **languageKeyword tag is not supported!!!!**  
\/**languageKeyword tag is not supported!!!!**  
 block, you should eliminate the cause of the exception or, if the argument is returned by a method call or input by the user before being passed to the method that throws the exception, you should validate arguments before passing them to the method.  
  
 <xref:System.ArgumentOutOfRangeException> is used extensively by:  
  
-   Classes in the <xref:System.Collections> and <xref:System.IO> namespaces.  
  
-   The <xref:System.Array> class.  
  
-   String manipulation methods in the <xref:System.String> class.  
  
 The conditions in which an <xref:System.ArgumentOutOfRangeException> exception             is thrown include the following:  
  
 You are retrieving the member of a collection by its index number, and the index number is invalid.  
 This is the most common cause of an <xref:System.ArgumentOutOfRangeException> exception.   Typically, the index number is invalid for one of three reasons:  
  
-   The collection has no members, and your code assumes that it does. The following example attempts to retrieve the first element of a collection that has no elements:  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#4)]
     [!code-vb[System.ArgumentOutOfRangeException\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#4)]  
  
     To prevent the exception, check whether the collection's **languageKeyword tag is not supported!!!!**  
     property is greater than zero before attempting to retrieve any members, as the following code fragment does.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#5)]
     [!code-vb[System.ArgumentOutOfRangeException\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#5)]  
  
     In some cases, this may occur because you are attempting to add a member to a collection by using an index that does not exist, rather than by calling the method, such as `Add`, that exists for this purpose.  The following example attempts to add an element to a collection by using a non\-existent index rather than calling the <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=fullName> method.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#13)]
     [!code-vb[System.ArgumentOutOfRangeException\#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#13)]  
  
     The following code fragment corrects this error:  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#14)]
     [!code-vb[System.ArgumentOutOfRangeException\#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#14)]  
  
-   You're attempting to retrieve an item whose index is negative. This usually occurs because you've searched a collection for the index of a particular element and have erroneously assumed that the search is successful. In the following example, the call to the <xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=fullName> method fails  to find a string equal to "Z" and so returns \-1. However, this is an invalid index value.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#6)]
     [!code-vb[System.ArgumentOutOfRangeException\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#6)]  
  
     To prevent the exception, check that the search is successful by making sure that the returned index is greater than or equal to zero before attempting to retrieve the item from the collection, as the following code fragment does.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#7)]
     [!code-vb[System.ArgumentOutOfRangeException\#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#7)]  
  
-   You're attempting to retrieve an element whose index is equal to the value of the collection's **languageKeyword tag is not supported!!!!**  
     property, as the following example illustrates.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#8)]
     [!code-vb[System.ArgumentOutOfRangeException\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#8)]  
  
     Because collections in the .NET Framework use zero\-based indexing, the first element of the collection is at index 0, and the last element is at index **languageKeyword tag is not supported!!!!**  
     \- 1. You can eliminate the error by ensuring that you access the last element at index  **languageKeyword tag is not supported!!!!**  
     \- 1, as the following code does.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#9)]
     [!code-vb[System.ArgumentOutOfRangeException\#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#9)]  
  
 You are attempting to perform a string operation by calling a string manipulation method, and the starting index does not exist in the string.  
 Overloads of methods such as such as <xref:System.String.Compare%2A?displayProperty=fullName>, <xref:System.String.CompareOrdinal%2A?displayProperty=fullName>, <xref:System.String.IndexOf%2A?displayProperty=fullName>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.Insert%2A?displayProperty=fullName>, <xref:System.String.LastIndexOf%2A?displayProperty=fullName>, <xref:System.String.LastIndexOfAny%2A?displayProperty=fullName>, <xref:System.String.Remove%2A>,  or <xref:System.String.Substring%2A?displayProperty=fullName> that allow you to specify the starting index of the operation require that the index be a valid position within the string. Valid indexes range from 0 to <xref:System.String.Length%2A?displayProperty=fullName> \- 1.  
  
 There are four common causes of this <xref:System.ArgumentOutOfRangeException> exception:  
  
-   You are working with an empty string., or <xref:System.String.Empty?displayProperty=fullName>. Because its <xref:System.String.Length%2A?displayProperty=fullName> property returns 0, any attempt to manipulate it by index throws an <xref:System.ArgumentOutOfRangeException> exception. The following example, defines a `GetFirstCharacter` method that returns the first character of a string. If the string is empty, as the final string passed to the method is, the method throws an <xref:System.ArgumentOutOfRangeException> exception.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#15)]
     [!code-vb[System.ArgumentOutOfRangeException\#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#15)]  
  
     You can eliminate the exception by testing whether the string's <xref:System.String.Length%2A?displayProperty=fullName> is greater than zero or by calling the <xref:System.String.IsNullOrEmpty%2A> method to ensure that the string is not **languageKeyword tag is not supported!!!!**  
     or empty. The following code fragment does the latter. In this case, if the string is **languageKeyword tag is not supported!!!!**  
     or empty, the `GetFirstCharacter` method returns U\+0000.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#16)]
     [!code-vb[System.ArgumentOutOfRangeException\#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#16)]  
  
-   You're manipulating a string based on the position of a substring within that string, and you've failed to determine whether the substring was actually found.  
  
     The following example extracts the second word of a two\-word phrase. It throws  an <xref:System.ArgumentOutOfRangeException> exception if the phrase consists of only one word, and therefore does not contain an embedded space character.  This occurs because the call to the <xref:System.String.IndexOf%28System.String%29?displayProperty=fullName> method returns \-1 to indicate that the search failed, and this invalid value is then passed to the  <xref:System.String.Substring%28System.Int32%29?displayProperty=fullName> method.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind1.cs#17)]
     [!code-vb[System.ArgumentOutOfRangeException\#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind1.vb#17)]  
  
     To eliminate the exception, validate the value returned by the string search method before calling the string manipulation method.  
  
     [!code-csharp[System.ArgumentOutOfRangeException\#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind2.cs#18)]
     [!code-vb[System.ArgumentOutOfRangeException\#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind2.vb#18)]  
  
-  
  
 You've attempted to extract a substring that is outside the range of the current string.  
 The methods that extract substrings all require that you specify the starting position of the substring and, for substrings that do not continue to the end of the string, the number of characters in the substring. Note that this is not the **legacyItalic tag is not supported!!!!**  
 of the last character in the substring.  
  
 An <xref:System.ArgumentOutOfRangeException> exception is typically thrown in this case because you've incorrectly calculated the number of characters in the substring.  If you are using a search method like <xref:System.String.IndexOf%2A?displayProperty=fullName> to identify the starting and ending positions of a substring:  
  
-   If the character in the ending position returned by <xref:System.String.IndexOf%2A?displayProperty=fullName> is to be included in the substring, the ending position of the substring is given by the formula  
  
    ```  
    endIndex - startIndex + 1  
    ```  
  
-   If the character in the ending position returned by <xref:System.String.IndexOf%2A?displayProperty=fullName> is to be excluded from the substring, the ending position of the substring is given by the formula  
  
    ```  
    endIndex - startIndex   
    ```  
  
 The following example defines a `FindWords` method that uses the <xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=fullName> method to identify space characters and punctuation marks in a string and returns an array that contains the words found in the string.  
  
 [!code-csharp[System.ArgumentOutOfRangeException\#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/FindWords1.cs#19)]
 [!code-vb[System.ArgumentOutOfRangeException\#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/FindWords1.vb#19)]  
  
 You have passed a negative number to a method with an argument that requires only positive numbers and zero, or you have passed either a negative number or zero to a method with an argument that requires only positive numbers.  
 For example, the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName> method requires that you specify the number of elements in each dimension of a two\-dimensional array; valid values for each dimension can range from 0 to <xref:System.Int32.MaxValue?displayProperty=fullName>. But because the dimension argument in the following example has a negative value, the method throws an <xref:System.ArgumentOutOfRangeException> exception.  
  
 [!code-csharp[System.ArgumentOutOfRangeException\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#1)]
 [!code-vb[System.ArgumentOutOfRangeException\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#1)]  
  
 To correct the error, ensure that the value of the invalid argument is non\-negative. You can do this by providing a valid value, as the following code fragment does.  
  
 [!code-csharp[System.ArgumentOutOfRangeException\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#2)]
 [!code-vb[System.ArgumentOutOfRangeException\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#2)]  
  
 You can also validate the input and, if it is invalid, take some action. The following code fragment displays an error message instead of calling the method.  
  
 [!code-csharp[System.ArgumentOutOfRangeException\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#3)]
 [!code-vb[System.ArgumentOutOfRangeException\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#3)]  
  
 A race condition exists in an app that is multithreaded or has tasks that  execute asynchronously and that updates an array or collection.  
 The following example uses a <xref:System.Collections.Generic.List%601> object to populate a collection of `Continent` objects. It throws an  <xref:System.ArgumentOutOfRangeException> exception if the example attempts to display the seven items in the collection before the collection is fully populated.  
  
 [!code-csharp[System.ArgumentOutOfRangeException\#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race1.cs#11)]
 [!code-vb[System.ArgumentOutOfRangeException\#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race1.vb#11)]  
  
 In this case, two resources are accessed from multiple threads:  
  
-   The `continents` collection. Its <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=fullName> method is called from multiple threads. In addition, the main or primary thread assumes the collection is fully populated with seven elements when it iterates its members.  
  
-   The `msg` string, which is concatenated from multiple threads.  
  
 To correct the error, ensure that shared state is accessed in a thread\-safe way, as follows.  
  
-   if your app uses an array or collection object, consider using a thread\-safe collection class, such as the types in the <xref:System.Collections.Concurrent> namespace or the [System.Collections.Immutable](http://msdn.microsoft.com/ja-jp/3637878b-2e1c-4df0-bfeb-619893488e56) out\-of\-band release.  
  
-   Ensure that shared state \(that is, resources that can be accessed by multiple threads\) is accessed in a thread\-safe way, so that only one thread at a time has exclusive access to the resources. A large number of classes, such as <xref:System.Threading.CountdownEvent>, <xref:System.Threading.Interlocked>, <xref:System.Threading.Monitor>, and <xref:System.Threading.Mutex>, are available to synchronize access to resources. For more information, see [Managed Threading](http://msdn.microsoft.com/ja-jp/7b46a7d9-c6f1-46d1-a947-ae97471bba87). In addition, language support is available through the [lock](http://msdn.microsoft.com/ja-jp/656da1a4-707e-4ef6-9c6e-6d13b646af42) statement in C\# and the [SyncLock](http://msdn.microsoft.com/ja-jp/14501703-298f-4d43-b139-c4b6366af176) construct in Visual Basic.  
  
 The following example addresses the <xref:System.ArgumentOutOfRangeException> exception and the other issues from the previous example. It replaces the <xref:System.Collections.Generic.List%601> object with a   <xref:System.Collections.Concurrent.ConcurrentBag%601> object to ensure that access to the collection is thread\-safe, uses a <xref:System.Threading.CountdownEvent> object to ensure that the application thread continues only after other threads have executed, and uses a lock to ensure that only one thread can  access the `msg` variable at a time.  
  
 [!code-csharp[System.ArgumentOutOfRangeException\#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race2.cs#12)]
 [!code-vb[System.ArgumentOutOfRangeException\#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race2.vb#12)]  
  
 <xref:System.ArgumentOutOfRangeException> uses the HRESULT COR\_E\_ARGUMENTOUTOFRANGE, which has the value 0x80131502.  
  
 For a list of initial property values for an instance of <xref:System.ArgumentOutOfRangeException>, see the <xref:System.ArgumentOutOfRangeException> constructors.  
  
   
  
## 例  
 The following example defines a class to contain information about an invited guest. If the guest is younger than 21, an <xref:System.ArgumentOutOfRangeException> exception is thrown.  
  
 [!code-csharp[ArgumentOutOfRangeException\#1](~/samples/snippets/csharp/VS_Snippets_CLR/ArgumentOutOfRangeException/CS/program.cs#1)]
 [!code-vb[ArgumentOutOfRangeException\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArgumentOutOfRangeException/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクター、 <xref:System.ArgumentException.Message%2A> 「負でないのために必要な数です」など、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ。 このメッセージには、現在のシステムのカルチャが考慮されます。  
  
 <xref:System.ArgumentOutOfRangeException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|null 参照 \(Visual Basic の場合は `Nothing`\)。|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|ローカライズされたエラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">この例外の原因となるパラメーターの名前。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ArgumentOutOfRangeException" />この例外の原因となるパラメーターの名前を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクター、 <xref:System.ArgumentException.Message%2A> 「負でないのために必要な数です」など、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ。 このメッセージには、現在のシステムのカルチャが考慮されます。  
  
 このコンストラクターは、新しいインスタンスの <xref:System.ArgumentException.ParamName%2A> プロパティを `paramName` パラメーターを使用して初期化します。 コンテンツ`paramName`ユーザーが理解するためのものです。  
  
 <xref:System.ArgumentOutOfRangeException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|null 参照 \(Visual Basic の場合は `Nothing`\)。|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|空の文字列 \(""\) です。|  
|<xref:System.ArgumentException.ParamName%2A>|パラメーター名の文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
        <param name="context">シリアル化されたデータの転送元または転送先を記述するオブジェクト。</param>
        <summary>シリアル化したデータを使用して、<see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。 詳細については、「[XML and SOAP Serialization](http://msdn.microsoft.com/ja-jp/832ac524-21bc-419a-a27b-ca8bfc45840f)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">この例外の原因を説明するエラー メッセージ。</param>
        <param name="innerException">現在の例外の原因である例外。内部例外が指定されていない場合は null 参照 \(Visual Basic では、<see langword="Nothing" />\)。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ArgumentOutOfRangeException" />指定したエラー メッセージ、およびこの例外の原因となった例外を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">例外の原因となったパラメーターの名前。</param>
        <param name="message">エラーを説明するメッセージ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ArgumentOutOfRangeException" />この例外と指定したエラー メッセージを原因となったパラメーターの名前を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクター、<xref:System.ArgumentOutOfRangeException.Message%2A>プロパティの値を使用して、新しいインスタンスの`message`パラメーター。`message` パラメーターの内容は、ユーザーが理解できる内容にします。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。  
  
 このコンストラクターは、新しいインスタンスの <xref:System.ArgumentException.ParamName%2A> プロパティを `paramName` パラメーターを使用して初期化します。 コンテンツ`paramName`ユーザーが理解するためのものです。  
  
 <xref:System.ArgumentOutOfRangeException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|`null`。|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|エラー メッセージ文字列。|  
|<xref:System.ArgumentException.ParamName%2A>|パラメーター名の文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, object actualValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, object actualValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="actualValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">例外の原因となったパラメーターの名前。</param>
        <param name="actualValue">この例外の原因である引数の値。</param>
        <param name="message">エラーを説明するメッセージ。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.ArgumentOutOfRangeException" />パラメーターと共にクラスの名前、引数、および指定したエラー メッセージの値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクター、<xref:System.ArgumentException.ParamName%2A>の新しいインスタンスを使用して、プロパティ、`paramName`パラメーター、<xref:System.ArgumentOutOfRangeException.ActualValue%2A>プロパティを使用して、`actualValue`パラメーター、および<xref:System.ArgumentException.Message%2A>プロパティを使用して、`message`パラメーター。 内容、`paramName`と`message`パラメーターをユーザーが理解できるものではします。 このコンス トラクターの呼び出し元は、これらの文字列が現在のシステムのカルチャにローカライズされていることを確認するために必要です。  
  
 `actualValue`パラメーターは、.NET Framework クラス ライブラリ内では使用されません。 ただし、<xref:System.ArgumentOutOfRangeException.ActualValue%2A>プロパティは、アプリケーションが使用可能な引数の値を使用できるように提供します。  
  
 `actualValue`パラメーターには、メソッドに渡され、スローされる例外の原因を無効な値が含まれています。 この値は、<xref:System.ArgumentOutOfRangeException.ActualValue%2A>プロパティとその文字列形式で保持されているメッセージ文字列に追加、<xref:System.ArgumentOutOfRangeException.Message%2A>プロパティです。  
  
 <xref:System.ArgumentOutOfRangeException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.ArgumentOutOfRangeException.ActualValue%2A>|引数の値。|  
|<xref:System.Exception.InnerException%2A>|Null 参照 \(`Nothing` Visual Basic で\)。|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|エラー メッセージ文字列。|  
|<xref:System.ArgumentException.ParamName%2A>|パラメーター名の文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualValue">
      <MemberSignature Language="C#" Value="public virtual object ActualValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActualValue" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.ActualValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この例外を引き起こした引数の値を取得します。</summary>
        <value>
          <see langword="Object" /> 、現在の原因となったパラメーターの値を格納している<see cref="T:System.Exception" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 無効な引数を取得するのにには、このプロパティを使用します。  
  
 `ActualValue`プロパティは、コンス トラクターに渡されたものと同じ値を返しますまたは`null`値が指定されていない場合。  
  
 <xref:System.ArgumentOutOfRangeException.ActualValue%2A>プロパティにはオブジェクトの構築時に、値が割り当てられます。 場合、<xref:System.ArgumentOutOfRangeException.ActualValue%2A>プロパティの値が`null`、値の文字列形式が保持しているメッセージ文字列に追加されます、<xref:System.ArgumentOutOfRangeException.Message%2A>プロパティです。  
  
 <xref:System.ArgumentOutOfRangeException.ActualValue%2A>プロパティは、.NET Framework クラス ライブラリ内では使用されません。 すべてのページで、null 値を実行、<xref:System.ArgumentOutOfRangeException>オブジェクト、.NET Framework クラス ライブラリによってスローされます。<xref:System.ArgumentOutOfRangeException.ActualValue%2A>プロパティは、アプリケーションが使用可能な引数の値を使用できるように提供します。  
  
 このプロパティは読み取り専用と、コンテンツまたは値の書式をカスタマイズするには、のみをオーバーライドする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">シリアル化されたオブジェクト データを保持するオブジェクト。</param>
        <param name="context">シリアル化されたデータの転送元または転送先を記述するオブジェクト。</param>
        <summary>セット、 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 無効な引数の値と追加の例外情報を持つオブジェクト。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ArgumentOutOfRangeException.GetObjectData%2A> 設定、 <xref:System.Runtime.Serialization.SerializationInfo> シリアル化の対象となるすべての例外オブジェクト データを含むオブジェクト。 逆シリアル化中に例外オブジェクトを再構成、 <xref:System.Runtime.Serialization.SerializationInfo> 、ストリームで送信します。  
  
 詳細については、「<xref:System.Runtime.Serialization.SerializationInfo>」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> オブジェクトが <see langword="null" /> です。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">for providing serialization services. Associated enumeration:   <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>引数の値が null の場合は、エラー メッセージと、無効な引数の値またはエラー メッセージのみの文字列形式を取得します。</summary>
        <value>この例外のテキスト メッセージ。 このプロパティの値は、2 つの形式のいずれかのとおりです。  
  
 <list type="table">  
<listheader>  
<term> 条件  
  
 </term>  
<description> 値  
  
 </description>  
</listheader>  
<item>  
<term> <paramref name="actualValue" /> が <see langword="null" /> です。  
  
 </term>  
<description> <paramref name="message" /> コンス トラクターに渡された文字列。  
  
 </description>  
</item>  
<item>  
<term> <paramref name="actualValue" /> が <see langword="null" /> ではありません。  
  
 </term>  
<description> <paramref name="message" /> 無効な引数値の文字列形式が末尾に追加します。  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは上書き <xref:System.ArgumentException.Message%2A>します。  
  
 エラー メッセージには、この例外の原因となったパラメーターの値を説明する必要があります。 エラー メッセージをローカライズする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ArgumentOutOfRangeException" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>