<Type Name="ApplicationIdentity" FullName="System.ApplicationIdentity">
  <TypeSignature Language="C#" Value="public sealed class ApplicationIdentity : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ApplicationIdentity extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ApplicationIdentity" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>マニフェストでアクティブ化されるアプリケーションを一意に識別する機能を提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ApplicationIdentity>クラスは、マニフェストに基づくアプリケーションのライセンス認証で使用します。  
  
   
  
## 例  
 使用を次のコード例に示します、<xref:System.ActivationContext>オブジェクトを取得する、<xref:System.ApplicationIdentity>マニフェスト ベースのアプリケーションにします。 このコード例に示されている例の一部である、<xref:System.ActivationContext>クラスです。  
  
 [!code-csharp[System.ActivationContext\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#2)]
 [!code-vb[System.ActivationContext\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationIdentity (string applicationIdentityFullName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string applicationIdentityFullName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationIdentity.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="applicationIdentityFullName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="applicationIdentityFullName">アプリケーションの完全名。</param>
        <summary>
          <see cref="T:System.ApplicationIdentity" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 形式、`applicationIdentityFullName`パラメーターはコンマ区切りの Unicode 文字列で始まる名前は、次のようにします。  
  
```  
  
applicationURL  
#  
deploymentIdentity  
\  
applicationIdentity  
  
```  
  
 ここで*deploymentIdentity* \=  
  
```  
  
deploymentManifest  
, Version =   
Major.Minor.Build.Revision  
, Culture =   
CultureInfo  
, PublicKeyToken=  
TokenNumber  
, processorArchitecture=  
processorArchitecture  
  
```  
  
 および*applicationIdentity* \=  
  
```  
  
applicationName  
, Version =   
Major.Minor.Build.Revision  
, Culture =   
CultureInfo  
, PublicKeyToken=  
TokenNumber  
, processorArchitecture=  
processorArchitecture  
, type=  
OsType  
  
```  
  
 ActivationContext をという名前のアプリケーションの完全な名前の例を次に示します。  
  
```  
http://testserver/ActivationContext/ActivationContext.application  
#ActivationContext.application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ae13aad84c1a3490, processorArchitecture=msil  
\ActivationContext.exe, Version=1.0.0.0, Culture=neutral, PublicKeyToken=ae13aad84c1a3490, processorArchitecture=msil, type=win32  
```  
  
 プロセッサ アーキテクチャの既定値は"msil"、および型の既定値は"win32"です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationIdentityFullName" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.ApplicationIdentity.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>URL と配置マニフェストの場所を取得します。</summary>
        <value>配置マニフェストの URL</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 2 つの例を次に<xref:System.ApplicationIdentity.CodeBase%2A>ActivationContext をという名前のアプリケーションのプロパティ値。  
  
-   http:\/\/testserver\/ActivationContext\/ActivationContext.application  
  
-   file:\/\/C:\/UserFiles\/UserName\/SolutionName\/ActivationContext\/publish\/ActivationContext.application です。  
  
   
  
## 例  
 使用を次のコード例に示します、<xref:System.ApplicationIdentity>の値を取得するオブジェクト、<xref:System.ApplicationIdentity.CodeBase%2A>マニフェスト ベースのアプリケーションのプロパティです。 このコード例に示されている例の一部である、<xref:System.ActivationContext>クラスです。  
  
 [!code-csharp[System.ActivationContext\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#3)]
 [!code-vb[System.ActivationContext\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.ApplicationIdentity.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの完全な名前を取得します。</summary>
        <value>表示名とも呼ばれる、アプリケーションの完全名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 形式の詳細については、 <xref:System.ApplicationIdentity.FullName%2A> プロパティを参照してください、 <xref:System.ApplicationIdentity.%23ctor%2A> コンス トラクターです。  
  
   
  
## 例  
 次のコード例では、使用、 <xref:System.ApplicationIdentity> の値を取得するオブジェクト、 <xref:System.ApplicationIdentity.FullName%2A> マニフェストに基づくアプリケーションのプロパティです。 このコード例が示されている例の一部は、 <xref:System.ActivationContext> クラスです。  
  
 [!code-csharp[System.ActivationContext\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ActivationContext/cs/program.cs#3)]
 [!code-vb[System.ActivationContext\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ActivationContext/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationIdentity.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />\) 構造体のシリアル化します。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、対象オブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ApplicationIdentity.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マニフェストでアクティブ化されるアプリケーションの完全な名前を返します。</summary>
        <returns>マニフェストでアクティブ化されるアプリケーションの完全名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 マニフェストのアクティブ化されたアプリケーションの完全名の形式については、次を参照してください。、 <xref:System.ApplicationIdentity.%23ctor%2A> コンス トラクターです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>