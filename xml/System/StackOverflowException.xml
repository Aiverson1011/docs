<Type Name="StackOverflowException" FullName="System.StackOverflowException">
  <TypeSignature Language="C#" Value="public sealed class StackOverflowException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit StackOverflowException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.StackOverflowException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>入れ子になったメソッド呼び出しが多くなりすぎ、実行スタックがオーバーフローした場合にスローされる例外。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.StackOverflowException> 通常深いか、無限再帰が発生した場合、実行スタックのオーバーフロー エラーがスローされます。  
  
 <xref:System.StackOverflowException> 値は 0x800703E9 HRESULT COR\_E\_STACKOVERFLOW を使用します。<xref:System.Reflection.Emit.OpCodes.Localloc> 中間言語 \(IL\) 命令をスロー <xref:System.StackOverflowException>します。 初期プロパティ値の一覧については、 <xref:System.StackOverflowException> オブジェクトを参照してください、 <xref:System.StackOverflowException.%23ctor%2A> コンス トラクターです。  
  
## バージョンの考慮事項  
 捕捉できる .NET Framework 1.0 および 1.1 での <xref:System.StackOverflowException> オブジェクト \(たとえば、無限再帰から回復する場合\)。 キャッチできません以降、.NET Framework 2.0 では、 <xref:System.StackOverflowException> オブジェクトを `try`\/`catch` ブロック、および対応するプロセスは既定で終了します。 そのため、検出し、スタック オーバーフローを防止するようにコードを記述する必要があります。 たとえば、アプリは、再帰に依存している場合を使用してカウンターまたは状態の条件を再帰的なループを終了します。 次の例は、再帰の数を呼び出していることを確認するカウンターを使用して、 `Execute` メソッドは MAX\_RECURSIVE\_CALLS 定数で定義される最大値を超えないこと。  
  
 [!code-csharp[System.StackOverflowException.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.stackoverflowexception.class/cs/example1a.cs#1)]
 [!code-vb[System.StackOverflowException.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.stackoverflowexception.class/vb/example1a.vb#1)]  
  
> [!NOTE]
>  適用する、 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute> 属性をスローするメソッドを <xref:System.StackOverflowException> も何も起こりません。 ユーザー コードから例外を処理することはできません。  
  
 アプリでは、共通言語ランタイム \(CLR\) をホストしている場合、CLR がスタック オーバーフロー例外が発生し、対応するプロセスを続行させるアプリケーション ドメインをアンロードすることを指定できます。 詳細については、「[ICLRPolicyManager Interface](http://msdn.microsoft.com/ja-jp/5c834aa1-f2db-408a-b230-c7bec093d364)」を参照してください。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.StackOverflowException" /> クラスの新しいインスタンスの <see cref="P:System.Exception.Message" /> プロパティに、"要求された操作によってスタック オーバーフローが発生しました。" などのエラーを説明するシステムから提供されるメッセージを設定して、その新しいインスタンスを初期化します。 このメッセージには、現在のシステムのカルチャが考慮されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.StackOverflowException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|`null`。|  
|<xref:System.Exception.Message%2A>|ローカライズされたエラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">エラーを説明する <see cref="T:System.String" />。 メッセージの内容は、ユーザーが理解できる内容にします。 このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</param>
        <summary>指定したエラー メッセージを使用して、<see cref="T:System.StackOverflowException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.StackOverflowException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|null 参照 \(Visual Basic の場合は `Nothing`\)。|  
|<xref:System.Exception.Message%2A>|エラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackOverflowException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.StackOverflowException.#ctor(System.String,System.Exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">例外の原因を説明するエラー メッセージ。</param>
        <param name="innerException">現在の例外の原因となった例外。<c>innerException</c> パラメーターが null 参照 \(Visual Basic の場合は <see langword="Nothing" />\) でない場合は、内部例外を処理する <see langword="catch" /> ブロックで現在の例外が発生します。</param>
        <summary>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<see cref="T:System.StackOverflowException" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 前の例外の直接の結果としてスローされる例外は、<xref:System.Exception.InnerException%2A> プロパティに前の例外への参照を含んでいる場合があります。<xref:System.Exception.InnerException%2A> プロパティは、コンストラクターに渡されたものと同じ値を返します。`Nothing` プロパティによって内部例外値がコンストラクターに渡されなかった場合は、null 参照 \(Visual Basic の場合は <xref:System.Exception.InnerException%2A>\) を返します。  
  
 <xref:System.StackOverflowException> のインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|値|  
|-----------|-------|  
|<xref:System.Exception.InnerException%2A>|内部例外の参照。|  
|<xref:System.Exception.Message%2A>|エラー メッセージ文字列。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.StackOverflowException" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>