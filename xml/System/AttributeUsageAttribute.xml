<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>別の属性クラスの使用方法を指定します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用されている配置することで方法を制御するには、独自の属性クラスを定義する際、 <xref:System.AttributeUsageAttribute> 属性クラスにします。 指定された属性クラスから派生しなければなりません <xref:System.Attribute>, 、直接または間接的にします。  
  
 属性クラスには、位置指定引数と名前付きパラメーターがあります。 属性クラスの各パブリック コンス トラクターでは、そのクラスの位置指定パラメーターの有効なシーケンスを定義します。 名前付きパラメーターは、非静的、パブリックで、読み取り\/書き込みのフィールドまたは属性クラスのプロパティで定義されます。  
  
 3 つのプロパティの <xref:System.AttributeUsageAttribute> 、次のパラメーターを定義することによって設定されます。  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 この位置指定パラメーターでは、指定された属性上に配置できるプログラム要素を指定します。 属性を配置できるすべての使用可能な要素のセットが表示されている、 <xref:System.AttributeTargets> 列挙します。 いくつかを組み合わせることができます <xref:System.AttributeTargets> 値のビットごとの OR 演算を使用して、有効なプログラム要素を任意に組み合わせてを取得します。  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 この名前付きパラメーターは、指定された属性が特定のプログラム要素に対して複数回指定するかどうかを指定します。  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 この名前付きパラメーターは、派生クラスまたはオーバーライドするメンバーが指定された属性を継承できるかどうかを指定します。  
  
 属性の使用方法の詳細については、次を参照してください。 <xref:System.Attribute> と [&#91;\<topic:\/\/cpconExtendingMetadataUsingAttributes\>&#93;](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn">値のセットは結合ビットごとの OR 演算を使用して、プログラム要素が有効なことを示します。</param>
        <summary>新しいインスタンスを初期化、<see cref="T:System.AttributeUsageAttribute" />の指定されたリストを持つクラス<see cref="T:System.AttributeTargets" />、<see cref="P:System.AttributeUsageAttribute.AllowMultiple" />値、および<see cref="P:System.AttributeUsageAttribute.Inherited" />値。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 複数を組み合わせることができます<xref:System.AttributeTargets>値のビットごとの OR 演算を使用して有効なプログラム要素の目的の組み合わせを取得します。  
  
 既定のプロパティ値を参照してください、 <xref:System.AttributeUsageAttribute.ValidOn%2A>、 <xref:System.AttributeUsageAttribute.AllowMultiple%2A>、および<xref:System.AttributeUsageAttribute.Inherited%2A>プロパティです。  
  
   
  
## 例  
 DispId 属性の定義がいくつかを結合するビットごとの OR 演算の使用方法を示します<xref:System.AttributeTargets>値。  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example\#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example\#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または 1 つのプログラム要素に対して示された属性の 1 つ以上のインスタンスを指定することができるかどうかを示すブール値を設定します。</summary>
        <value>
          <see langword="true" />指定できます。 複数のインスタンスが許可された場合それ以外の場合、<see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 プログラム要素に対して複数回指定できる属性を複数回使用する属性と呼びます。 1 回だけ指定可能な属性には、単一使用属性は呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示された属性が派生クラスによって継承され、メンバーをオーバーライドするかどうかを決定する <see cref="T:System.Boolean" /> 値を取得または設定します。</summary>
        <value>属性が派生クラスにより継承され、メンバーをオーバーライドする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.AttributeUsageAttribute.Inherited%2A>プロパティを決定します。  
  
-   属性を使用したタグ付けクラスが基底クラスから派生するかどうか、<xref:System.AttributeUsageAttribute>属性が適用される属性を継承します。  
  
-   属性を使用したタグ付けのメソッドが基底クラスのメソッドをオーバーライドするクラスを派生するかどうか、<xref:System.AttributeUsageAttribute>属性が適用される属性を継承します。  \(クラスは、基底クラスのメンバーを継承している場合にも継承そのメンバーに適用されるすべての属性です。\)  
  
   
  
## 例  
 次の例では、する属性間の違い、<xref:System.AttributeUsageAttribute>属性が、<xref:System.AttributeUsageAttribute.Inherited%2A>のプロパティの値`true`が適用されるとする 1 つ<xref:System.AttributeUsageAttribute>属性が、<xref:System.AttributeUsageAttribute.Inherited%2A>のプロパティの値`true`が適用されます。 例では、2 つの属性を定義する`InheritedAttribute`および`NotInheritedAttribute`です。 両方の属性は、クラスとメソッドに適用できます。<xref:System.AttributeUsageAttribute.Inherited%2A>のプロパティ、<xref:System.AttributeUsageAttribute>に適用される属性`InheritedAttribute`は`true`、派生クラスによって継承されているおよびのメンバーが基底クラスのメソッドをオーバーライドするクラスを派生します。  その一方で、ため、<xref:System.AttributeUsageAttribute.Inherited%2A>のプロパティ、<xref:System.AttributeUsageAttribute>に適用される属性`NotInheritedAttribute`は`false`、派生クラスによって継承されていないのメンバーは、基本クラスのメソッドをオーバーライドするクラスを派生できます。  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 The example then defines two  base classes. The first, `BaseA`, has a single method, `MethodA`.  The second, `BaseB`, has a single method, `MethodB`. `BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute. `DerivedA` inherits from `BaseA` and overrides its `MethodA` method. `DerivedB` inherits from `BaseB` and overrides its `MethodB` method.  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>示された属性を適用できるプログラム要素を識別する値のセットを取得します。</summary>
        <value>One or several <see cref="T:System.AttributeTargets" /> values. 既定値は、<see langword="All" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>