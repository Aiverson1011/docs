<Type Name="Attribute" FullName="System.Attribute">
  <TypeSignature Language="C#" Value="public abstract class Attribute : System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Attribute extends System.Object implements class System.Runtime.InteropServices._Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Attribute</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Attribute))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>カスタム属性の基本クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.Attribute> class associates predefined system information or user\-defined custom information with a target element. A target element can be an assembly, class, constructor, delegate, enum, event, field, interface, method, portable executable file module, parameter, property, return value, struct, or another attribute.  
  
 Information provided by an attribute is also known as metadata. Metadata can be examined at run time by your application to control how your program processes data, or before run time by external tools to control how your application itself is processed or maintained. For example, the .NET Framework predefines and uses attribute types to control run\-time behavior, and some programming languages use attribute types to represent language features not directly supported by the .NET Framework common type system.  
  
 All attribute types derive directly or indirectly from the <xref:System.Attribute> class. Attributes can be applied to any target element; multiple attributes can be applied to the same target element; and attributes can be inherited by an element derived from a target element. Use the <xref:System.AttributeTargets> class to specify the target element to which the attribute is applied.  
  
 The <xref:System.Attribute> class provides convenient methods to retrieve and test custom attributes. For more information about using attributes, see [Applying Attributes](http://msdn.microsoft.com/ja-jp/dd7604eb-9fa3-4b60-b2dd-b47739fa3148) and [Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87).  
  
   
  
## 例  
 The following code example demonstrates the usage of <xref:System.Attribute>.  
  
 [!code-cpp[AnimalAttributes\#1](~/samples/snippets/cpp/VS_Snippets_CLR/AnimalAttributes/CPP/customattribute.cpp#1)]
 [!code-csharp[AnimalAttributes\#1](~/samples/snippets/csharp/VS_Snippets_CLR/AnimalAttributes/CS/customattribute.cs#1)]
 [!code-vb[AnimalAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AnimalAttributes/VB/customattribute.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>This type is thread safe.</threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attribute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Attribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターはから派生したクラスによってのみ呼び出す<xref:System.Attribute>です。  
  
   
  
## 例  
 次のコード例は、カスタム パラメーターの定義を示しています。<xref:System.Attribute>コンス トラクターを持つクラス。  
  
 [!code-cpp[System.Attribute.GetCustomAttribute\#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#2)]
 [!code-csharp[System.Attribute.GetCustomAttribute\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#2)]
 [!code-vb[System.Attribute.GetCustomAttribute\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> このインスタンスと比較するか、 <see langword="null" />です。</param>
        <summary>このインスタンスが、指定されたオブジェクトと等価であるかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" /> がこのインスタンスの型および値に等しい場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例を次の 2 つのカスタム パラメーターを定義 <xref:System.Attribute> クラスで、各クラスの複数のオブジェクトを作成し、使い方を示しています、 <xref:System.Attribute.Equals%2A> メソッドをそれらを比較します。  
  
 [!code-cpp[System.Attribute.Equals\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.Equals/CPP/equals.cpp#1)]
 [!code-csharp[System.Attribute.Equals\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.Equals/CS/equals.cs#1)]
 [!code-vb[System.Attribute.Equals\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.Equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <summary>指定したアセンブリに適用されるカスタム属性を取得します。 パラメーターを検索するには、アセンブリとカスタム属性の種類を指定します。</summary>
        <returns>型の単一のカスタム属性への参照を<paramref name="attributeType" />に適用されている<paramref name="element" />、または<see langword="null" />そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、<xref:System.Attribute.GetCustomAttributes%2A>メソッドが返され、2 つ以上の値を期待する場合または<xref:System.Reflection.AmbiguousMatchException>がスローされます。  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性の属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.Assembly>をパラメーターとして。  
  
 [!code-cpp[IsDefined\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.MemberInfo" />クラスのコンス トラクター、イベント、フィールド、メソッド、またはプロパティのメンバーを記述するクラス。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <summary>型のメンバーに適用されるカスタム属性を取得します。 パラメーターは、検索するには、メンバー、およびカスタム属性の型を指定します。</summary>
        <returns>型の単一のカスタム属性への参照を<paramref name="attributeType" />に適用されている<paramref name="element" />、または<see langword="null" />そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値のセクションで説明したのと同じ方法で一致するものが決定されます<xref:System.Type.IsAssignableFrom%2A?displayProperty=fullName>です。  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性の種類、メソッド、およびコンス トラクターに属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.MemberInfo>パラメーターとして。  
  
 [!code-cpp[IsDefined\#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined\#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりませんでした。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.Module" /> をポータブル実行可能ファイルを表すクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <summary>モジュールに適用されるカスタム属性を取得します。 パラメーターは、モジュール、および検索するカスタム属性の種類を指定します。</summary>
        <returns>型の単一のカスタム属性への参照を <paramref name="attributeType" /> に適用されている <paramref name="element" />, 、または <see langword="null" /> そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、の使用法を示しています、 <xref:System.Attribute.GetCustomAttribute%2A> メソッド考慮しながら、 <xref:System.Reflection.Module> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined\#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.ParameterInfo" />クラスのメンバーのパラメーターを記述するクラス。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <summary>メソッド パラメーターに適用されたカスタム属性を取得します。 パラメーターは、メソッド パラメーター、および検索するカスタム属性の種類を指定します。</summary>
        <returns>型の単一のカスタム属性への参照を<paramref name="attributeType" />に適用されている<paramref name="element" />、または<see langword="null" />そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合`element`派生型のメソッド内のパラメーターを表します、戻り値にはオーバーライドされている基本メソッドで同じパラメーターに適用される継承可能なカスタム属性が含まれています。  
  
   
  
## 例  
 次のコード例は、カスタム パラメーターを定義<xref:System.Attribute>クラスし、派生クラスで、派生クラスの基本メソッドにカスタム属性を適用します。 使用、例を示します、<xref:System.Attribute.GetCustomAttribute%2A>属性を返します。  
  
 [!code-cpp[System.Attribute.GetCustomAttribute\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrparam.cpp#1)]
 [!code-csharp[System.Attribute.GetCustomAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrparam.cs#1)]
 [!code-vb[System.Attribute.GetCustomAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrparam.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりませんでした。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>アセンブリに適用されるカスタム属性を取得します。 パラメーターは、アセンブリを検索して、カスタム属性、無視する検索オプションの種類を指定します。</summary>
        <returns>型の単一のカスタム属性への参照を <paramref name="attributeType" /> に適用されている <paramref name="element" />, 、または <see langword="null" /> そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性、属性が新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、古い XML 形式を使用します。 参照してください [宣言セキュリティ属性を出力](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。  
  
   
  
## 例  
 次のコード例は、の使用法を示しています、 <xref:System.Attribute.GetCustomAttribute%2A> メソッド考慮しながら、 <xref:System.Reflection.Assembly> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりました。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.MemberInfo" />クラスのコンス トラクター、イベント、フィールド、メソッド、またはプロパティのメンバーを記述するクラス。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <param name="inherit">場合<see langword="true" />、の先祖も検索するように指定<c>element</c>のカスタム属性です。</param>
        <summary>型のメンバーに適用されるカスタム属性を取得します。 パラメーターは、メンバー、カスタム属性を検索、およびメンバーの先祖を検索するかどうかの種類を指定します。</summary>
        <returns>型の単一のカスタム属性への参照を<paramref name="attributeType" />に適用されている<paramref name="element" />、または<see langword="null" />そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性の種類、メソッド、およびコンス トラクターに属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.MemberInfo>パラメーターとして。  
  
 [!code-cpp[IsDefined\#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined\#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりませんでした。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.Module" />ポータブル実行可能ファイルを記述するクラス。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>モジュールに適用されるカスタム属性を取得します。 パラメーターは、モジュール、検索して、カスタム属性および無視する検索オプションの種類を指定します。</summary>
        <returns>型の単一のカスタム属性への参照を<paramref name="attributeType" />に適用されている<paramref name="element" />、または<see langword="null" />そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の使用を示しています、<xref:System.Attribute.GetCustomAttribute%2A>メソッドを<xref:System.Reflection.Module>パラメーターとして。  
  
 [!code-cpp[IsDefined\#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined\#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.ParameterInfo" />クラスのメンバーのパラメーターを記述するクラス。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <param name="inherit">場合<see langword="true" />、の先祖も検索するように指定<c>element</c>のカスタム属性です。</param>
        <summary>メソッド パラメーターに適用されたカスタム属性を取得します。 パラメーターは、カスタム属性を検索、およびメソッドのパラメーターの先祖を検索するかどうかの種類、メソッドのパラメーターを指定します。</summary>
        <returns>型の単一のカスタム属性への参照を<paramref name="attributeType" />に適用されている<paramref name="element" />、または<see langword="null" />そのような属性が存在しない場合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合`element`派生型のメソッド内のパラメーターを表します、戻り値にはオーバーライドされている基本メソッドで同じパラメーターに適用される継承可能なカスタム属性が含まれています。  
  
   
  
## 例  
 次のコード例は、カスタム パラメーターを定義<xref:System.Attribute>クラスし、派生クラスで、派生クラスの基本メソッドにカスタム属性を適用します。 使用、例を示します、<xref:System.Attribute.GetCustomAttribute%2A>属性を返します。  
  
 [!code-cpp[System.Attribute.GetCustomAttribute\#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CPP/getcustattrprminh.cpp#3)]
 [!code-csharp[System.Attribute.GetCustomAttribute\#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/CS/getcustattrprminh.cs#3)]
 [!code-vb[System.Attribute.GetCustomAttribute\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.GetCustomAttribute/VB/getcustattrprminh.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">要求された属性の 1 つ以上が見つかりませんでした。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <summary>アセンブリに適用されたカスタム属性の配列を取得します。 パラメーターは対象のアセンブリを指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますセキュリティ属性、属性が新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、古い XML 形式を使用します。 参照してください [宣言セキュリティ属性を出力](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。  
  
   
  
## 例  
 次の例では、現在のアセンブリ内にあるカスタム属性を取得します。  
  
 [!code-cpp[GetCustomAttributes\#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes\#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.MemberInfo" />クラスのコンス トラクター、イベント、フィールド、メソッド、またはプロパティのメンバーを記述するクラス。</param>
        <summary>型のメンバーに適用されるカスタム属性の配列を取得します。 パラメーターは、メンバーを指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の先祖のカスタム属性を含む`element`です。  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性メソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttribute%2A>、取得、<xref:System.Reflection.MemberInfo>をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes\#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.Module" /> をポータブル実行可能ファイルを表すクラス。</param>
        <summary>モジュールに適用されるカスタム属性の配列を取得します。 パラメーターでは、モジュールを指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、使用 <xref:System.Attribute.GetCustomAttributes%2A>, を受け入れて、 <xref:System.Reflection.Module> をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes\#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.ParameterInfo" />クラスのメンバーのパラメーターを記述するクラス。</param>
        <summary>メソッド パラメーターに適用されるカスタム属性の配列を取得します。 パラメーターは、メソッドのパラメーターを指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合`element`派生型のメソッド内のパラメーターを表します、戻り値には、オーバーライドされた基底メソッドで同じパラメーターに適用される継承可能なカスタム属性が含まれています。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttributes%2A>、取得、<xref:System.Reflection.ParameterInfo>をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes\#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>アセンブリに適用されたカスタム属性の配列を取得します。 パラメーターは、アセンブリ、および無視する検索オプションを指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性の属性が、新しいメタデータ形式で格納されている場合。 バージョン 2.0 以降でコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttributes%2A>、取得、<xref:System.Reflection.Assembly>をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes\#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <summary>アセンブリに適用されたカスタム属性の配列を取得します。 パラメーターは、検索するには、アセンブリ、およびカスタム属性の型を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" />型のカスタム属性を格納する配列<paramref name="attributeType" />に適用される<paramref name="element" />、またはそのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性の属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttributes%2A>、取得、<xref:System.Reflection.Assembly>をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes\#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.MemberInfo" />クラスのコンス トラクター、イベント、フィールド、メソッド、またはプロパティのメンバーを記述するクラス。</param>
        <param name="inherit">場合<see langword="true" />、の先祖も検索するように指定<c>element</c>のカスタム属性です。</param>
        <summary>型のメンバーに適用されるカスタム属性の配列を取得します。 パラメーターは、メンバー、カスタム属性を検索、およびメンバーの先祖を検索するかどうかの種類を指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の先祖のカスタム属性を含む`element`場合`inherit`は`true`します。  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性メソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttributes%2A>、取得、<xref:System.Reflection.MemberInfo>パラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes\#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.MemberInfo" />をクラスのコンス トラクター、イベント、フィールド、メソッド、またはプロパティ メンバーを表すクラス。</param>
        <param name="type">型、または検索するカスタム属性の基本型です。</param>
        <summary>型のメンバーに適用されるカスタム属性の配列を取得します。 パラメーターは、検索するには、メンバー、およびカスタム属性の型を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" />型のカスタム属性を格納する配列<paramref name="type" />に適用される<paramref name="element" />、またはそのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値では、カスタム属性を含むの先祖の`element`します。  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性メソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttribute%2A>、取得、<xref:System.Reflection.MemberInfo>パラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes\#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="type" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドはありません。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.Module" /> をポータブル実行可能ファイルを表すクラス。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>モジュールに適用されるカスタム属性の配列を取得します。 パラメーターは、モジュール、および無視する検索オプションを指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の先祖のカスタム属性を含む `element` 場合 `inherit` は `true`です。  
  
   
  
## 例  
 次のコード例では、使用 <xref:System.Attribute.GetCustomAttributes%2A>, を受け入れて、 <xref:System.Reflection.Module> をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes\#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.Module" /> をポータブル実行可能ファイルを表すクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <summary>モジュールに適用されるカスタム属性の配列を取得します。 パラメーターは、モジュール、および検索するカスタム属性の種類を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" /> 型のカスタム属性を格納している配列 <paramref name="attributeType" /> に適用される <paramref name="element" />, 、またはこのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、使用 <xref:System.Attribute.GetCustomAttributes%2A>, を受け入れて、 <xref:System.Reflection.Module> をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes\#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.ParameterInfo" /> クラスのメンバーのパラメーターを記述するクラス。</param>
        <param name="inherit">場合 <see langword="true" />, の先祖にも検索するように指定 <c>element</c> のカスタム属性です。</param>
        <summary>メソッド パラメーターに適用されるカスタム属性の配列を取得します。 パラメーターは、メソッド パラメーター、およびメソッドのパラメーターの先祖を検索するかどうかを指定します。</summary>
        <returns>
          <paramref name="element" /> に適用されたカスタム属性を格納する <see cref="T:System.Attribute" /> 配列。そのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `element` 派生型のメソッド内のパラメーターを表します、戻り値には、オーバーライドされた基底メソッド内の同じパラメーターに適用される継承可能なカスタム属性が含まれています。  
  
   
  
## 例  
 次のコード例では、使用 <xref:System.Attribute.GetCustomAttributes%2A>, を受け入れて、 <xref:System.Reflection.ParameterInfo> をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes\#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Reflection.ParameterInfo.Member" /> の <paramref name="element" /> は <see langword="null." /><see langword="" /></exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.ParameterInfo" /> クラスのメンバーのパラメーターを記述するクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <summary>メソッド パラメーターに適用されるカスタム属性の配列を取得します。 パラメーターは、メソッド パラメーター、および検索するカスタム属性の種類を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" /> 型のカスタム属性を格納している配列 <paramref name="attributeType" /> に適用される <paramref name="element" />, 、またはこのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `element` 派生型のメソッド内のパラメーターを表します、戻り値には、オーバーライドされた基底メソッド内の同じパラメーターに適用される継承可能なカスタム属性が含まれています。  
  
   
  
## 例  
 次のコード例では、使用 <xref:System.Attribute.GetCustomAttributes%2A>, を受け入れて、 <xref:System.Reflection.ParameterInfo> をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes\#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>アセンブリに適用されたカスタム属性の配列を取得します。 パラメーターは、アセンブリ、カスタム属性を検索、および無視する検索オプションの種類を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" />型のカスタム属性を格納する配列<paramref name="attributeType" />に適用される<paramref name="element" />、またはそのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性の属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttributes%2A>、取得、<xref:System.Reflection.Assembly>パラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/ca1.cpp#1)]
 [!code-csharp[GetCustomAttributes\#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca1.cs#1)]
 [!code-vb[GetCustomAttributes\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.MemberInfo element, Type type, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type type, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.MemberInfo" />クラスのコンス トラクター、イベント、フィールド、メソッド、またはプロパティのメンバーを記述するクラス。</param>
        <param name="type">型、または検索するカスタム属性の基本型です。</param>
        <param name="inherit">場合<see langword="true" />、の先祖も検索するように指定<c>element</c>のカスタム属性です。</param>
        <summary>型のメンバーに適用されるカスタム属性の配列を取得します。 パラメーターは、メンバー、カスタム属性を検索、およびメンバーの先祖を検索するかどうかの種類を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" />型のカスタム属性を格納する配列<paramref name="type" />に適用される<paramref name="element" />、またはそのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の先祖のカスタム属性を含む`element`場合`inherit`は`true`します。  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドを返しますのセキュリティ属性メソッド、コンス トラクター、および種類の属性が、新しいメタデータ形式で格納されている場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 使用を次のコード例に示します<xref:System.Attribute.GetCustomAttributes%2A>、取得、<xref:System.Reflection.MemberInfo>をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#4](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#4)]
 [!code-csharp[GetCustomAttributes\#4](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca4.cs#4)]
 [!code-vb[GetCustomAttributes\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="type" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="type" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.Module" /> をポータブル実行可能ファイルを表すクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>モジュールに適用されるカスタム属性の配列を取得します。 パラメーターは、モジュール、検索して、カスタム属性、無視する検索オプションの種類を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" /> 型のカスタム属性を格納している配列 <paramref name="attributeType" /> に適用される <paramref name="element" />, 、またはこのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 戻り値の先祖のカスタム属性を含む `element` 場合 `inherit` は `true`です。  
  
   
  
## 例  
 次のコード例では、使用 <xref:System.Attribute.GetCustomAttributes%2A>, を受け入れて、 <xref:System.Reflection.Module> をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#2](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#2)]
 [!code-csharp[GetCustomAttributes\#2](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca2.cs#2)]
 [!code-vb[GetCustomAttributes\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static Attribute[] GetCustomAttributes (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute[] GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.ParameterInfo" /> クラスのメンバーのパラメーターを記述するクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <param name="inherit">場合 <see langword="true" />, の先祖にも検索するように指定 <c>element</c> のカスタム属性です。</param>
        <summary>メソッド パラメーターに適用されるカスタム属性の配列を取得します。 パラメーターは、メソッド パラメーターには、カスタム属性を検索、およびメソッドのパラメーターの先祖を検索するかどうかの種類を指定します。</summary>
        <returns>
          <see cref="T:System.Attribute" /> 型のカスタム属性を格納している配列 <paramref name="attributeType" /> に適用される <paramref name="element" />, 、またはこのようなカスタム属性が存在しない場合は空の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 場合 `element` 派生型のメソッド内のパラメーターを表します、戻り値には、オーバーライドされた基底メソッド内の同じパラメーターに適用される継承可能なカスタム属性が含まれています。  
  
   
  
## 例  
 次のコード例では、使用 <xref:System.Attribute.GetCustomAttributes%2A>, を受け入れて、 <xref:System.Reflection.ParameterInfo> をパラメーターとして。  
  
 [!code-cpp[GetCustomAttributes\#5](~/samples/snippets/cpp/VS_Snippets_CLR/GetCustomAttributes/CPP/custattrs.cpp#5)]
 [!code-csharp[GetCustomAttributes\#5](~/samples/snippets/csharp/VS_Snippets_CLR/GetCustomAttributes/CS/ca5.cs#5)]
 [!code-vb[GetCustomAttributes\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetCustomAttributes/VB/ca5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
        <exception cref="T:System.TypeLoadException">カスタム属性の型を読み込むことはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例の使用を示しています<xref:System.Attribute.GetHashCode%2A>において<xref:System.Attribute>です。  
  
 [!code-csharp[GetHashCode\#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetHashCode/CS/hashcode.cs#1)]
 [!code-vb[GetHashCode\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetHashCode/VB/hashcode.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefaultAttribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされるとき、このインスタンスの値が派生クラスの既定値であるかどうかを示します。</summary>
        <returns>このインスタンスがクラスの既定の属性である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスの既定の実装を返します`false`、そのクラスに役に立つに派生クラスで実装する必要があります。  
  
 派生クラスの比較では、このメソッドの実装、標準の既定値は、このインスタンスの値をこのインスタンスの値が標準の値と等しいかどうかを示すブール値をし、返します。 標準の値は通常実装では、定数としてコード化されたまたは、プログラムで、実装で使用されるフィールドに格納します。  
  
   
  
## 例  
 <xref:System.Attribute.IsDefaultAttribute%2A> の使用方法を次のコード例に示します。  
  
 [!code-cpp[IsDefaultAttribute\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefaultAttribute/CPP/defattr.cpp#1)]
 [!code-csharp[IsDefaultAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefaultAttribute/CS/defattr.cs#1)]
 [!code-vb[IsDefaultAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefaultAttribute/VB/defattr.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <summary>任意のカスタム属性がアセンブリに適用するかどうかを判断します。 パラメーターを検索するには、アセンブリ、およびカスタム属性の型を指定します。</summary>
        <returns>
          <see langword="true" />場合、型のカスタム属性<paramref name="attributeType" />に適用される<paramref name="element" />、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドが戻る`true`アセンブリに、新しいメタデータ形式で格納されているセキュリティ属性がある場合。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 次のコード例は、の使用を示しています。 <xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.Assembly>パラメーターとして。  
  
 [!code-cpp[IsDefined\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.MemberInfo" /> クラスのコンス トラクター、イベント、フィールド、メソッド、型、またはプロパティのメンバーを記述するクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <summary>型のメンバーを任意のカスタム属性を適用するかどうかを決定します。 パラメーターを検索するには、メンバー、およびカスタム属性の型を指定します。</summary>
        <returns>
          <see langword="true" /> カスタム属性が型の場合 <paramref name="attributeType" /> に適用される <paramref name="element" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 先祖 `element` のカスタム属性が検索されます。  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドが戻る `true` 型、メソッド、またはコンス トラクターが新しいメタデータ形式で格納されているセキュリティ属性を持つかどうかです。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、古い XML 形式を使用します。 参照してください [宣言セキュリティ属性を出力](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。  
  
   
  
## 例  
 次のコード例は、の使用法を示しています <xref:System.Attribute.IsDefined%2A>, を受け入れて、 <xref:System.Reflection.MemberInfo> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined\#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" /> コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.Module" /> をポータブル実行可能ファイルを表すクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <summary>モジュールに指定した型のカスタム属性を適用するかどうかを決定します。 パラメーターは、モジュール、および検索するカスタム属性の種類を指定します。</summary>
        <returns>
          <see langword="true" /> カスタム属性が型の場合 <paramref name="attributeType" /> に適用される <paramref name="element" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 先祖 `element` のカスタム属性は検索されません。  
  
   
  
## 例  
 次のコード例は、の使用法を示しています <xref:System.Attribute.IsDefined%2A>, を受け入れて、 <xref:System.Reflection.Module> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined\#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.ParameterInfo" /> クラスのメンバーのパラメーターを記述するクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <summary>メソッド パラメーターに任意のカスタム属性を適用するかどうかを決定します。 パラメーターは、メソッド パラメーター、および検索するカスタム属性の種類を指定します。</summary>
        <returns>
          <see langword="true" /> カスタム属性が型の場合 <paramref name="attributeType" /> に適用される <paramref name="element" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 先祖 `element` のカスタム属性が検索されます。  
  
   
  
## 例  
 次のコード例は、の使用法を示しています <xref:System.Attribute.IsDefined%2A>, を受け入れて、 <xref:System.Reflection.ParameterInfo> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined\#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Assembly element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">モジュールの再利用可能なコレクションを記述する <see cref="T:System.Reflection.Assembly" /> クラスから派生したオブジェクト。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>任意のカスタム属性がアセンブリに適用するかどうかを決定します。 パラメーターは、アセンブリを検索して、カスタム属性、無視する検索オプションの種類を指定します。</summary>
        <returns>
          <see langword="true" /> カスタム属性が型の場合 <paramref name="attributeType" /> に適用される <paramref name="element" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドが戻る `true` アセンブリは、新しいメタデータ形式で格納されているセキュリティ属性を持つ場合です。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、古い XML 形式を使用します。 参照してください [宣言セキュリティ属性を出力](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)します。  
  
   
  
## 例  
 次のコード例は、の使用法を示しています <xref:System.Attribute.IsDefined%2A>, を受け入れて、 <xref:System.Reflection.Assembly> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#1](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#1)]
 [!code-csharp[IsDefined\#1](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id1.cs#1)]
 [!code-vb[IsDefined\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、<see cref="T:System.Reflection.MemberInfo" />クラスのコンス トラクター、イベント、フィールド、メソッド、型、またはプロパティのメンバーを記述するクラス。</param>
        <param name="attributeType">型、または検索するカスタム属性の基本型です。</param>
        <param name="inherit">場合<see langword="true" />、の先祖も検索するように指定<c>element</c>のカスタム属性です。</param>
        <summary>型のメンバーを任意のカスタム属性を適用するかどうかを判断します。 パラメーターは、メンバー、カスタム属性を検索、およびメンバーの先祖を検索するかどうかの種類を指定します。</summary>
        <returns>
          <see langword="true" />場合、型のカスタム属性<paramref name="attributeType" />に適用される<paramref name="element" />、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
  
> [!NOTE]
>  以降、.NET Framework version 2.0 では、このメソッドが戻る`true`かどうか、型、メソッド、またはコンス トラクターは、新しいメタデータ形式で格納されているセキュリティ属性。 2.0 またはそれ以降のバージョンでコンパイルされたアセンブリでは、新しい形式を使用します。 動的アセンブリと .NET Framework の以前のバージョンでコンパイルされたアセンブリは、以前の XML 形式を使用します。 参照してください[宣言セキュリティ属性の出力方法](http://msdn.microsoft.com/ja-jp/9eeddee8-ca89-4440-b84b-fd613f590cd5)です。  
  
   
  
## 例  
 次のコード例は、の使用を示しています。 <xref:System.Attribute.IsDefined%2A>、取得、<xref:System.Reflection.MemberInfo>パラメーターとして。  
  
 [!code-cpp[IsDefined\#4](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#4)]
 [!code-csharp[IsDefined\#4](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id4.cs#4)]
 [!code-vb[IsDefined\#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" />派生していない<see cref="T:System.Attribute" />です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="element" />コンス トラクター、メソッド、プロパティ、イベント、型、またはフィールドはありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.Module element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.Module" /> をポータブル実行可能ファイルを表すクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <param name="inherit">このパラメーターは無視され、このメソッドの操作には影響しません。</param>
        <summary>モジュールに独自の属性を適用するかどうかを決定します。 パラメーターは、モジュール、検索して、カスタム属性、無視する検索オプションの種類を指定します。</summary>
        <returns>
          <see langword="true" /> カスタム属性が型の場合 <paramref name="attributeType" /> に適用される <paramref name="element" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、無視、 `inherit` パラメーターの先祖を検索しませんし、 `element` カスタム属性のです。  
  
   
  
## 例  
 次のコード例は、の使用法を示しています <xref:System.Attribute.IsDefined%2A>, を受け入れて、 <xref:System.Reflection.Module> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#2](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#2)]
 [!code-csharp[IsDefined\#2](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id2.cs#2)]
 [!code-vb[IsDefined\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">派生したオブジェクト、 <see cref="T:System.Reflection.ParameterInfo" /> クラスのメンバーのパラメーターを記述するクラス。</param>
        <param name="attributeType">型または基本データ型のカスタム属性を検索します。</param>
        <param name="inherit">場合 <see langword="true" />, の先祖にも検索するように指定 <c>element</c> のカスタム属性です。</param>
        <summary>メソッド パラメーターに任意のカスタム属性を適用するかどうかを決定します。 パラメーターは、メソッド パラメーターには、カスタム属性を検索、およびメソッドのパラメーターの先祖を検索するかどうかの種類を指定します。</summary>
        <returns>
          <see langword="true" /> カスタム属性が型の場合 <paramref name="attributeType" /> に適用される <paramref name="element" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例は、の使用法を示しています <xref:System.Attribute.IsDefined%2A>, を受け入れて、 <xref:System.Reflection.ParameterInfo> をパラメーターとして。  
  
 [!code-cpp[IsDefined\#5](~/samples/snippets/cpp/VS_Snippets_CLR/IsDefined/CPP/isdefined.cpp#5)]
 [!code-csharp[IsDefined\#5](~/samples/snippets/csharp/VS_Snippets_CLR/IsDefined/CS/id5.cs#5)]
 [!code-vb[IsDefined\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/IsDefined/VB/id5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> または <paramref name="attributeType" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="attributeType" /> 派生していない <see cref="T:System.Attribute" />します。</exception>
        <exception cref="T:System.ExecutionEngineException">
          <paramref name="element" /> メソッド、コンス トラクター、または型はありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public virtual bool Match (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.Match(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" />のこのインスタンスと比較する<see cref="T:System.Attribute" />です。</param>
        <summary>派生クラスでオーバーライドされると、指定したオブジェクトをこのインスタンスが等しいかどうかを示す値を返します。</summary>
        <returns>
          <see langword="true" />このインスタンスが等しい場合<paramref name="obj" />、それ以外の<see langword="false" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、1 つの場合を判断<xref:System.Attribute>別に等しい。 既定の実装が同じ<xref:System.Attribute.Equals%2A>の値と参照比較を実行します。 フラグまたは自体に意味のあるコンポーネントで構成されるビット フィールドなどの属性値のサポートを実装するには、このメソッドをオーバーライドします。  
  
 たとえば、値のフラグのビット フィールドに分割されたバイナリ フィールドの属性があるとします。 この属性の 2 つのインスタンスでは、他のフラグが異なるすべて中に共通のセットに 1 つのフラグがあります。<xref:System.Attribute.Equals%2A>メソッドが、2 つのインスタンスが同じであるフラグ設定を決定することはできませんが、<xref:System.Attribute.Match%2A>メソッドことができます。  
  
   
  
## 例  
 次のコード例の使用を示しています<xref:System.Attribute.Match%2A>において<xref:System.Attribute>です。  
  
 [!code-csharp[Match\#1](~/samples/snippets/csharp/VS_Snippets_CLR/Match/CS/match.cs#1)]
 [!code-vb[Match\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Match/VB/match.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Attribute.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetIDsOfNames(valuetype System.Guid riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">将来使用するために予約されています。 IID\_NULL にする必要があります。</param>
        <param name="rgszNames">マッピング対象として渡される名前の配列。</param>
        <param name="cNames">マッピングされる名前のカウント。</param>
        <param name="lcid">名前を解釈するロケール コンテキスト。</param>
        <param name="rgDispId">名前に対応する ID を受け取る、呼び出し元割り当て済み配列。</param>
        <summary>一連の名前を対応する一連のディスパッチ識別子に割り当てます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">返される型情報。</param>
        <param name="lcid">型情報のロケール ID。</param>
        <param name="ppTInfo">要求された型情報オブジェクトへのポインターを取得します。</param>
        <summary>オブジェクトの型情報を取得します。この情報はインターフェイスの型情報の取得に使用できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Attribute.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.GetTypeInfoCount(unsigned int32 pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">オブジェクトにより提供される型タイプ情報インターフェイスの数を受け取る場所を指定します。</param>
        <summary>オブジェクトが提供する型情報インターフェイスの数 \(0 または 1\) を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Attribute.Invoke">
      <MemberSignature Language="C#" Value="void _Attribute.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Attribute.Invoke(unsigned int32 dispIdMember, valuetype System.Guid riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">メンバーを識別します。</param>
        <param name="riid">将来使用するために予約されています。 IID\_NULL にする必要があります。</param>
        <param name="lcid">引数を解釈する対象のロケール コンテキスト。</param>
        <param name="wFlags">呼び出しのコンテキストを記述するフラグ。</param>
        <param name="pDispParams">引数の配列、名前付き引数の DISPID の配列、配列内の要素数のカウントを格納している構造体へのポインター。</param>
        <param name="pVarResult">結果が格納される場所へのポインター。</param>
        <param name="pExcepInfo">例外情報を格納する構造体へのポインター。</param>
        <param name="puArgErr">エラーが存在する最初の引数のインデックス。</param>
        <summary>オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">COM <c>IDispatch</c> インターフェイスを使用した遅延バインディング アクセスはサポートされていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public virtual object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.Attribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスで実装されると、この <see cref="T:System.Attribute" /> の一意の識別子を取得します。</summary>
        <value>
          <see cref="T:System.Object" />属性の一意の識別子はします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この識別子が単には、実装された、<xref:System.Type>属性のです。 ただし、同じ型の 2 つの属性を識別する一意の識別子を使用することのものです。  
  
   
  
## 例  
 次のコード例を実装して、<xref:System.Attribute.TypeId%2A>パラメーターのカスタム プロパティ<xref:System.Attribute>クラスし、その使い方を示しています。  
  
 [!code-cpp[System.Attribute.TypeId\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Attribute.TypeId/CPP/typeid.cpp#1)]
 [!code-csharp[System.Attribute.TypeId\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Attribute.TypeId/CS/typeid.cs#1)]
 [!code-vb[System.Attribute.TypeId\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Attribute.TypeId/VB/typeid.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>アセンブリ、モジュール、型のメンバー、またはメソッド パラメーターに指定した型のカスタム属性を適用するかどうかを決定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>アセンブリ、モジュール、型のメンバー、またはメソッド パラメーターに適用される、指定した型のカスタム属性を取得します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>アセンブリ、モジュール、型のメンバー、またはメソッド パラメーターに適用されるカスタム属性の配列を取得します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>