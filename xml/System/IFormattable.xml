<Type Name="IFormattable" FullName="System.IFormattable">
  <TypeSignature Language="C#" Value="public interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オブジェクトの値を文字列形式で書式設定する機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IFormattable> インターフェイス オブジェクトを書式指定文字列と書式プロバイダーに基づいて、文字列形式に変換します。  
  
 書式指定文字列は、通常、オブジェクトの全般的な外観を定義します。 たとえば、.NET Framework は、次はサポートします。  
  
-   列挙値の書式を設定するための標準書式指定文字列 \(を参照してください [Enumeration Format Strings](http://msdn.microsoft.com/ja-jp/dd1ff672-1052-42cf-8666-4924fb6cd1a1)\)。  
  
-   数値の書式設定の標準とカスタム書式指定文字列 \(を参照してください [Standard Numeric Format Strings](http://msdn.microsoft.com/ja-jp/580e57eb-ac47-4ffd-bccd-3a1637c2f467) と [Custom Numeric Format Strings](http://msdn.microsoft.com/ja-jp/6f74fd32-6c6b-48ed-8241-3c2b86dea5f4)\)。  
  
-   日付と時刻の値の書式設定の標準とカスタム書式指定文字列 \(を参照してください [Standard Date and Time Format Strings](http://msdn.microsoft.com/ja-jp/bb79761a-ca08-44ee-b142-b06b3e2fc22b) と [Custom Date and Time Format Strings](http://msdn.microsoft.com/ja-jp/98b374e3-0cc2-4c78-ab44-efb671d71984)\)。  
  
-   時間間隔を書式設定の標準とカスタム書式指定文字列 \(を参照してください [Standard TimeSpan Format Strings](http://msdn.microsoft.com/ja-jp/9f6c95eb-63ae-4dcc-9c32-f81985c75794) と [Custom TimeSpan Format Strings](http://msdn.microsoft.com/ja-jp/a63ebf55-7269-416b-b4f5-286f6c03bf0e)\)。  
  
 アプリケーション定義の型の書式をサポートするために、独自の書式指定文字列を定義することもできます。  
  
 書式プロバイダーでは、通常の文字列形式にオブジェクトを変換する際に使用する記号を定義する書式指定オブジェクトを返します。 たとえば、数値を通貨値に変換すると、書式プロバイダーは結果文字列に表示する通貨記号を定義します。 .NET Framework では、次の 3 つの書式プロバイダーを定義します。  
  
-   <xref:System.Globalization.CultureInfo?displayProperty=fullName> クラスは、どちらかを返します、 <xref:System.Globalization.NumberFormatInfo> 、数値を書式設定するためのオブジェクトまたは <xref:System.Globalization.DateTimeFormatInfo> 日付と時刻の値を書式設定するためのオブジェクト。  
  
-   <xref:System.Globalization.NumberFormatInfo?displayProperty=fullName> クラスは、数値を書式設定するためには、それ自体のインスタンスを返します。  
  
-   <xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName> クラスは、日付と時刻の値を書式設定するためには、それ自体のインスタンスを返します。  
  
 さらに、カルチャ固有の職業に固有でを指定する独自のカスタム書式プロバイダーを定義するまたは業界固有の情報は、書式設定に使用します。 カスタム書式プロバイダーを使用してカスタムの書式設定の実装の詳細については、次を参照してください。 <xref:System.ICustomFormatter>します。  
  
 <xref:System.IFormattable> インターフェイスが 1 つのメソッドを定義 <xref:System.IFormattable.ToString%2A>, 、実装する型の書式指定サービスを提供します。<xref:System.IFormattable.ToString%2A> メソッドを直接呼び出すことができます。 さらに、呼び出されたによって自動的に、 <xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName> と <xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName> メソッド、および使用するメソッドによって、 [複合書式指定機能](http://msdn.microsoft.com/ja-jp/87b7d528-73f6-43c6-b71a-f23043039a49) .NET Framework でします。 このような方法には、 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=fullName>, 、<xref:System.String.Format%2A?displayProperty=fullName>, 、および <xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=fullName>, などです。<xref:System.IFormattable.ToString%2A> メソッドの書式指定文字列の各書式項目のメソッドが呼び出されます。  
  
 <xref:System.IFormattable> インターフェイスは、基本データ型によって実装されます。  
  
   
  
## 例  
 次の例では、`Temperature` インターフェイスを実装する <xref:System.IFormattable> クラスを定義しています。 クラスは、次の 4 つの書式指定子をサポートしています:"G"、"C"、温度を摂氏で表示されることを示します"F"は、温度を華氏; で表示されることを示します"K"は、温度がケルビンで表示されることを示します。 さらに、 <xref:System.IFormattable.ToString%2A?displayProperty=fullName> 実装も処理書式指定文字列を `null` または空です。 他の 2 つ `ToString` によって定義されたメソッド、 `Temperature` クラスへの呼び出しを単純にラップする、 <xref:System.IFormattable.ToString%2A?displayProperty=fullName> 実装します。  
  
 [!code-csharp[System.IFormattable\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 次の例では、 <xref:System.IFormattable.ToString%2A?displayProperty=fullName> 実装直接、または複合書式指定文字列を使用しています。  
  
 [!code-csharp[System.IFormattable\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#2)]
 [!code-vb[System.IFormattable\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Classes that require more control over the formatting of strings than <see cref="M:System.Object.ToString" /> provides should implement <see cref="T:System.IFormattable" />.  
  
 A class that implements <see cref="T:System.IFormattable" /> must support the "G" (general) format specifier. Besides the "G" specifier, the class can define the list of format specifiers that it supports. In addition, the class must be prepared to handle a format specifier that is <see langword="null" />. For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)</para>
    </block>
    <altmember cref="T:System.IFormatProvider" />
    <altmember cref="M:System.Object.ToString" />
    <altmember cref="P:System.Threading.Thread.CurrentCulture" />
  </Docs>
  <Members>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">使用する書式。  
  
 または  
  
 <see cref="T:System.IFormattable" /> 実装の型に対して定義されている既定の形式を使用するには null 参照 \(Visual Basic では<see langword="Nothing" />\)。</param>
        <param name="formatProvider">値を書式設定するために使用するプロバイダー。  
  
 または  
  
 オペレーティング システムの現在のロケール設定から数値形式の情報を取得するための null 参照 \(Visual Basic では <see langword="Nothing" />\)。</param>
        <summary>指定された書式を使用して現在のインスタンスの値を書式設定します。</summary>
        <returns>指定された書式の現在のインスタンスの値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IFormattable.ToString%2A>メソッドは値を複数の方法で表すことができる文字列形式に変換します。 その正確な書式は、特定の記号または特定のカルチャ、職業、内または業界によって定義された特定の順序に依存します。 メソッドを直接呼び出すことができます。 によって自動的に呼び出されます、<xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName>と<xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName>メソッド、および複合書式設定を使用しているメソッドによって機能の .NET Framework でなど<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>、 <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>、および<xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName>です。 \(詳細については、「[Composite Formatting](http://msdn.microsoft.com/ja-jp/87b7d528-73f6-43c6-b71a-f23043039a49)」を参照してください\)。  
  
 複合書式指定メソッドの呼び出し、<xref:System.IFormattable.ToString%2A>書式指定文字列内の各書式項目を 1 回のメソッドです。 メソッドに渡されるパラメーターは次のようと呼ばれる特定の書式設定メソッドおよび書式指定項目の内容に依存します。  
  
-   書式指定項目が、書式指定文字列を含まないかどうか \(書式指定項目は、単に場合など、 `{0}`\)、渡される`null`値として、<xref:System.String?displayProperty=fullName>パラメーター。  
  
-   書式指定項目には、書式指定文字列が含まれている場合 \(たとえば、 `{0:G}`\) の値として書式設定文字列が渡されること、<xref:System.String?displayProperty=fullName>パラメーター。  
  
-   元のメソッド呼び出しが含まれていない場合、<xref:System.IFormatProvider?displayProperty=fullName>パラメーター、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName>の値として渡される、<xref:System.IFormatProvider?displayProperty=fullName>パラメーター。  
  
-   元のメソッド呼び出しが含まれている場合、<xref:System.IFormatProvider?displayProperty=fullName>パラメーター、メソッドの呼び出しで指定されているプロバイダーは、の値として渡される、<xref:System.IFormatProvider?displayProperty=fullName>パラメーター。  
  
> [!NOTE]
>  オブジェクトの<xref:System.IFormattable.ToString%2A>渡されない場合にのみ、複合書式指定メソッドによって実装が呼び出されます、<xref:System.ICustomFormatter>書式プロバイダー、または、<xref:System.ICustomFormatter.Format%2A>カスタム書式プロバイダーのメソッドを返します`null`です。  
  
 .NET Framework には、実装の 3 つの書式設定プロバイダーが含まれています、<xref:System.IFormatProvider>インターフェイス。  
  
-   <xref:System.Globalization.NumberFormatInfo>数値書式設定は 10 進数と桁区切り記号の文字などの情報およびスペルと通貨値の通貨記号の配置を提供します。  
  
-   <xref:System.Globalization.DateTimeFormatInfo>月、日、年の日付のパターン内の位置など、日付に関連して、時間関連の書式情報を提供します。  
  
-   <xref:System.Globalization.CultureInfo>既定の書式の数値書式指定情報を含む特定のカルチャの情報および日付に関連して、時間関連の書式情報を格納します。  
  
 さらに、独自のカスタム書式プロバイダーを定義することができます。  
  
   
  
## 例  
 次の例で、`Temperature`を実装するクラス、<xref:System.IFormattable.ToString%2A>メソッドです。 このコード例に示されている例の一部である、<xref:System.IFormattable>クラスです。  
  
 [!code-csharp[System.IFormattable\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iformattable/cs/example1.cs#1)]
 [!code-vb[System.IFormattable\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iformattable/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>The <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" /> method must support the "G" (general) format specifier. Besides the "G" specifier, the class can define the list of format specifiers that it supports. In addition, the class must be prepared to handle a format specifier that is <see langword="null" />. For more information about formatting and formatting codes, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</para>
        </block>
        <altmember cref="T:System.String" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
  </Members>
</Type>