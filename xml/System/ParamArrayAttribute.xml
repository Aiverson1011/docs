<Type Name="ParamArrayAttribute" FullName="System.ParamArrayAttribute">
  <TypeSignature Language="C#" Value="public sealed class ParamArrayAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ParamArrayAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ParamArrayAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>可変個数の引数を指定して呼び出せるメソッドであることを示します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ParamArrayAttribute> メソッドのパラメーターがパラメーターの配列であることを示します。 パラメーター配列には、不明な数の引数の指定ができます。 パラメーター配列は、正式なパラメーター リストの最後のパラメーターである必要があり、1 次元配列である必要があります。 メソッドが呼び出されたときに、パラメーター配列は 2 つの方法のいずれかで指定するメソッドの引数を許可します。  
  
-   型の単一の式として、パラメーター配列の型に暗黙的に変換です。 パラメーター配列は、値を持つパラメーターとして機能します。  
  
-   ここで各引数にはパラメーター配列の要素の型に暗黙的に変換できる型の式の 0 個以上引数  
  
 次のセクションの例では、両方の呼び出し規約を示します。  
  
> [!NOTE]
>  通常、 <xref:System.ParamArrayAttribute> コード内で直接は使用されません。 代わりに、個別の言語キーワードなど `ParamArray` Visual basic と `params` 、C\# の場合は、用のラッパーとして使用される、 <xref:System.ParamArrayAttribute> クラスです。 言語によっては、C\# の場合などの言語のキーワードを使用する必要し、の使用を禁止することがありますも <xref:System.ParamArrayAttribute>です。  
  
 オーバー ロードの解決中にパラメーター配列をサポートするコンパイラをパラメーター配列を含むオーバー ロードよりも少ない 1 つのパラメーターが存在しないメソッド オーバー ロードを検出する場合は、これらは、メソッドと置き換えますをパラメーターの配列を含むオーバー ロード。 呼び出しなど、 `String.Split()` インスタンス メソッド \(に存在しません、 <xref:System.String> クラス\) への呼び出しとして解決、 <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=fullName> メソッドです。 コンパイラは渡すことも必要な型の空の配列をメソッドにします。 つまり、メソッドはパラメーター配列内の要素を処理するとき、長さが 0 の配列を処理する常におく必要があります。 具体的な例を次に示します。  
  
 属性の使用方法については、「[Extending Metadata Using Attributes](http://msdn.microsoft.com/ja-jp/30386922-1e00-4602-9ebf-526b271a8b87)」を参照してください。  
  
   
  
## 例  
 次の例、 `Temperature` を含むクラス、 `Display` メソッドで、目的は、1 つまたは複数の書式設定された温度の値を表示します。 メソッドが 1 つのパラメーターを持つ `formats`, 、パラメーターの配列として定義されています。  
  
 [!code-csharp[System.ParamArrayAttribute\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#1)]
 [!code-vb[System.ParamArrayAttribute\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#1)]  
  
 次の例を次の 3 つの異なる呼び出し、 `Temperature.Display` メソッドです。 最初の書式指定文字列の配列をメソッドに渡されます。 2 番目の場合、メソッドは 4 つの個別の書式指定文字列を引数として渡されます。 3 つ目の引数なしで、メソッドが呼び出されます。 出力例を示したように、Visual Basic および c\# コンパイラが生まれますこれへの呼び出し、 `Display` 空の文字列配列を持つメソッドです。  
  
 [!code-csharp[System.ParamArrayAttribute\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.ParamArrayAttribute/cs/Example.cs#2)]
 [!code-vb[System.ParamArrayAttribute\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.ParamArrayAttribute/vb/Example.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParamArrayAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ParamArrayAttribute.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ParamArrayAttribute" /> クラスの新しいインスタンスを、既定のプロパティを使用して初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>