<Type Name="IObservable&lt;T&gt;" FullName="System.IObservable&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IObservable&lt;out T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IObservable`1&lt;+ T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IObservable`1" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">通知情報を提供するオブジェクト。</typeparam>
    <summary>プッシュ ベースの通知用プロバイダーを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IObserver%601> と <xref:System.IObservable%601> インターフェイスは、プッシュ ベースの通知、オブザーバー デザイン パターンとも呼ばれますを汎用化されたメカニズムを提供します。<xref:System.IObservable%601> インターフェイスを表します \(プロバイダー\) の場合は通知を送信するクラス、 <xref:System.IObserver%601> インターフェイスは、受信する \(observer\) クラスを表します。`T` 通知情報を提供するクラスを表します。 いくつかのプッシュ ベースの通知で、 <xref:System.IObserver%601> 実装と `T` は同じ型を表すことができます。  
  
 プロバイダーは 1 つのメソッドを実装する必要があります <xref:System.IObservable%601.Subscribe%2A>, 、オブザーバーがプッシュ ベースの通知を受信することを示します。 メソッドの呼び出し元は、オブザーバーのインスタンスを渡します。 このメソッドを返します、 <xref:System.IDisposable> により、オブザーバーで通知をいつでも、プロバイダーが送信を停止する前にキャンセルを実装します。  
  
 どの時点において、指定されたプロバイダーは、0、1、または複数のオブザーバーがあります。 プロバイダーは、オブザーバーへの参照を格納して、確実に有効な通知を送信する前にします。<xref:System.IObservable%601> インターフェイスはオブザーバーや通知が送信される注文の数はどのような想定を行いません。  
  
 プロバイダーはオブザーバーを呼び出して次の 3 種類の通知を送信する <xref:System.IObserver%601> メソッド。  
  
-   現在のデータです。 プロバイダーが呼び出すことができます、 <xref:System.IObserver%601.OnNext%2A?displayProperty=fullName> をオブザーバーに渡す方法、 `T` を現在のデータ、変更されたデータ、または新しいデータを持つオブジェクト。  
  
-   エラーが発生します。 プロバイダーが呼び出すことができます、 <xref:System.IObserver%601.OnError%2A?displayProperty=fullName> 何らかのエラー状態が発生したこと、オブザーバーに通知します。  
  
-   さらにデータがありません。 プロバイダーが呼び出すことができます、 <xref:System.IObserver%601.OnCompleted%2A?displayProperty=fullName> 通知の送信が完了したことをオブザーバーに通知するメソッドです。  
  
   
  
## 例  
 次の例では、オブザーバー デザイン パターンを示します。 定義、 `Location` 緯度と経度の情報を含むクラスです。  
  
 [!code-csharp[System.IObserver.Class\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#5)]
 [!code-vb[System.IObserver.Class\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#5)]  
  
 `LocationTracker` クラスには、 <xref:System.IObservable%601> 実装します。 その `TrackLocation` メソッドが渡される null 値を許容 `Location` 緯度と経度のデータを含むオブジェクト。 場合、 `Location` の値が `null`, 、 `TrackLocation` メソッドの呼び出し、 <xref:System.IObserver%601.OnNext%2A> 各オブザーバーのメソッドです。  
  
 [!code-csharp[System.IObserver.Class\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#6)]
 [!code-vb[System.IObserver.Class\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#6)]  
  
 場合、 `Location` 値は `null`, 、 `TrackLocation` メソッドをインスタンス化、 `LocationUnknownException` 次の例に示されているオブジェクト。 各オブザーバーの順に呼び出して <xref:System.IObserver%601.OnError%2A> メソッドに渡すと、 `LocationUnknownException` オブジェクトです。`LocationUnknownException` から派生 <xref:System.Exception>, 、新しいメンバーを追加しません。  
  
 [!code-csharp[System.IObserver.Class\#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#7)]
 [!code-vb[System.IObserver.Class\#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#7)]  
  
 通知を受信するオブザーバーを登録、 `TrackLocation` オブジェクトを呼び出してその <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> オブザーバー オブジェクトへの参照をプライベート ジェネリックに割り当てる方法 <xref:System.Collections.Generic.List%601> オブジェクトです。 このメソッドを返します、 `Unsubscriber` オブジェクトを <xref:System.IDisposable> オブザーバーで通知の受信を停止することができる実装します。`LocationTracker` クラスも含まれます、 `EndTransmission` メソッドです。 場所のデータをさらに利用できない場合は、メソッドの各オブザーバーの <xref:System.IObserver%601.OnCompleted%2A> メソッドしオブザーバーの内部の一覧をクリアします。  
  
 この例では、 `LocationReporter` クラスには、 <xref:System.IObserver%601> 実装します。 コンソールには、現在の場所に関する情報が表示されます。 コンス トラクターが含まれています、 `name` パラメーターは、これにより、 `LocationReporter` の文字列の出力で自身を識別するインスタンス。 含まれています、 `Subscribe` をプロバイダーの呼び出しをラップするメソッドを <xref:System.IObservable%601.Subscribe%2A> メソッドです。 これにより、メソッドは、返された割り当てる <xref:System.IDisposable> プライベート変数への参照。`LocationReporter` クラスも含まれます、 `Unsubscribe` メソッドを呼び出す、 <xref:System.IDisposable.Dispose%2A?displayProperty=fullName> によって返されるオブジェクトのメソッド、 <xref:System.IObservable%601.Subscribe%2A?displayProperty=fullName> メソッドです。 次のコード定義、 `LocationReporter` クラスです。  
  
 [!code-csharp[System.IObserver.Class\#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/observer.cs#8)]
 [!code-vb[System.IObserver.Class\#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/observer.vb#8)]  
  
 次のコードは、プロバイダーとオブザーバーにし、インスタンス化します。  
  
 [!code-csharp[System.IObserver.Class\#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/program.cs#9)]
 [!code-vb[System.IObserver.Class\#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/module1.vb#9)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IObserver`1" />
  </Docs>
  <Members>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public IDisposable Subscribe (IObserver&lt;out T&gt; observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable Subscribe(class System.IObserver`1&lt;!T&gt; observer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IObservable`1.Subscribe(System.IObserver{`0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="System.IObserver&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="observer">通知を受け取るオブジェクト。</param>
        <summary>オブザーバーが通知を受け取ることをプロバイダーに通知します。</summary>
        <returns>プロバイダーが通知の送信を完了する前に、オブザーバーが通知の受信を停止できるインターフェイスへの参照。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.IObservable%601.Subscribe%2A>プッシュ ベースの通知のオブザーバーを登録するメソッドを呼び出す必要があります。 一般的な実装、<xref:System.IObservable%601.Subscribe%2A>メソッドは、次を実行します。  
  
-   格納、オブザーバーへの参照をコレクション オブジェクト内など、<xref:System.Collections.Generic.List%601>オブジェクト。  
  
-   参照を返します、<xref:System.IDisposable>インターフェイスです。 これにより、オブザーバーをアンサブスク ライブする \(つまり、通知の受信を停止する\) プロバイダーが送信を完了し、サブスクライバーのと呼ばれる前に<xref:System.IObserver%601.OnCompleted%2A>メソッドです。  
  
 ある一定期間の特定のインスタンス、<xref:System.IObservable%601>実装はすべてのサブスクリプションを処理して、すべてのサブスクライバーに通知します。 しない限り、特定のドキュメント<xref:System.IObservable%601>実装がそれ以外の場合を示しますオブザーバーを作成してはならない前提条件に関する、<xref:System.IObservable%601>など複数のオブザーバーを受信する通知の順番の実装です。  
  
   
  
## 例  
 次の例を示しています、<xref:System.IObservable%601.Subscribe%2A>緯度と経度の情報を報告するアプリケーションのメソッドです。 定義する、<xref:System.Collections.Generic.IList%601>すべてオブザーバーへの参照を格納するコレクション オブジェクト。 という名前のプライベート クラスも返します`Unsubscriber`を実装する、<xref:System.IDisposable>インターフェイスし、イベント通知を受け取らないようにするためのサブスクライバーを有効にします。  使用例を参照してください、<xref:System.IObservable%601>コード例全体についてのトピックです。  
  
 [!code-csharp[System.IObserver.Class\#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.iobserver.class/cs/provider.cs#13)]
 [!code-vb[System.IObserver.Class\#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.iobserver.class/vb/provider.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IObserver`1" />
      </Docs>
    </Member>
  </Members>
</Type>