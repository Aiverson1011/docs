<Type Name="Tuple&lt;T1,T2,T3&gt;" FullName="System.Tuple&lt;T1,T2,T3&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`3&lt;T1, T2, T3&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`3" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1">組の最初のコンポーネントの型。</typeparam>
    <typeparam name="T2">タプルの 2 番目のコンポーネントの型。</typeparam>
    <typeparam name="T3">タプルの 3 番目のコンポーネントの型。</typeparam>
    <summary>3 つ組、すなわちトリプルを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 組は、特定の数と一連の値を持つデータ構造です。<xref:System.Tuple%603>クラスを表します。 3 タプル、または 3 倍、は次の 3 つのコンポーネントが含まれる組です。  
  
 インスタンス化することができます、<xref:System.Tuple%603>を呼び出して、オブジェクト、<xref:System.Tuple%603.%23ctor%2A>コンス トラクターまたは静的な<xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=fullName>メソッドです。 タプルの要素の値を取得するには、読み取り専用を使用して<xref:System.Tuple%603.Item1%2A>、 <xref:System.Tuple%603.Item2%2A>、および<xref:System.Tuple%603.Item3%2A>インスタンス プロパティです。  
  
 組は、4 つの方法でよく使用されます。  
  
-   データの 1 つのセットを表すです。 たとえば、組は、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個別のフィールドを表すことができます。  
  
-   簡単にアクセスし、データ セットの操作を提供します。 次の例の配列を定義する<xref:System.Tuple%603>学生、その平均テスト スコア、およびテストの数の名前を格納するオブジェクト。 配列が渡される、`ComputeStatistics`メソッドで、平均と試験の点数の標準偏差を計算します。  
  
     [!code-csharp[System.Tuple\`3.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
     [!code-vb[System.Tuple\`3.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
-   使用せず、メソッドから複数の値を返す`out`パラメーター \(c\#\) または`ByRef`パラメーター \(Visual Basic の場合\)。 たとえば、前の例の概要テスト スコア統計情報を返しますで、<xref:System.Tuple%603>オブジェクト。  
  
-   メソッドに渡される複数の値、1 つのパラメーターを使用します。 たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=fullName>メソッドには、スレッドが起動時に実行するメソッドを 1 つの値を提供できる 1 つのパラメーターです。 指定した場合、<xref:System.Tuple%603>オブジェクト、メソッド引数として、データの 3 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
    <altmember cref="T:System.Tuple`8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.#ctor(`0,`1,`2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
      </Parameters>
      <Docs>
        <param name="item1">組の最初のコンポーネントの値。</param>
        <param name="item2">組の 2 番目のコンポーネントの値。</param>
        <param name="item3">組の 3 番目のコンポーネントの値。</param>
        <summary>
          <see cref="T:System.Tuple`3" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 静的なを使用することもできます。 <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=fullName> メソッドを明示的にそのコンポーネントの種類を指定せずに、3 組のオブジェクトをインスタンス化します。 次の例では、 <xref:System.Tuple.Create%60%603%28%60%600%2C%60%601%2C%60%602%29?displayProperty=fullName> 3 組の要素を型のインスタンスを作成するメソッド <xref:System.String>, 、<xref:System.Double>, 、および <xref:System.Double>です。  
  
 [!code-csharp[System.Tuple.Create\#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#5)]
 [!code-vb[System.Tuple.Create\#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#5)]  
  
 これは、次の呼び出しに、 <xref:System.Tuple%603.%23ctor%2A> クラスのコンス トラクターです。  
  
 [!code-csharp[System.Tuple.Create\#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/create1.cs#6)]
 [!code-vb[System.Tuple.Create\#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/create1.vb#6)]  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">このインスタンスと比較するオブジェクト。</param>
        <summary>示す値を返すかどうか、現在 <see cref="T:System.Tuple`3" /> オブジェクトが、指定されたオブジェクトと等しい。</summary>
        <returns>
          <see langword="true" /> 現在のインスタンスが指定したオブジェクトに等しい場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `obj` パラメーターは次の条件下で、現在のインスタンスと等しいと見なされます。  
  
-   <xref:System.Tuple%603> オブジェクトです。  
  
-   その 3 つのコンポーネントは、現在のインスタンスと同じ型であります。  
  
-   その次の 3 つのコンポーネントは、現在のインスタンスのと同じです。 等しいかどうかは、各コンポーネントの既定のオブジェクトの等値比較子によって判断されます。  
  
   
  
## 例  
 次の例では、 <xref:System.Tuple%603.Equals%28System.Object%29?displayProperty=fullName> かどうかのオブジェクトの配列のいずれかを決定する方法 <xref:System.Tuple%603> オブジェクトが互いに等しい。 出力するという事実を表している、 <xref:System.Tuple%603.Equals%28System.Object%29> メソッドを返します。 `true` 比較するときに <xref:System.Tuple%603> コンポーネントが同じ値を持つオブジェクト。  
  
 [!code-csharp[System.Tuple\`3.Equals\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`3.Equals\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Tuple`3" /> オブジェクトのハッシュ コードを返します。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の値を取得 <see cref="T:System.Tuple`3" /> オブジェクトの最初のコンポーネントです。</summary>
        <value>現在の値 <see cref="T:System.Tuple`3" /> オブジェクトの最初のコンポーネントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 型は、動的に決定する、 <xref:System.Tuple%603.Item1%2A> で 2 つの方法のいずれかのコンポーネント。  
  
-   呼び出して、 `GetType` メソッドによって返される値を <xref:System.Tuple%603.Item1%2A> プロパティです。  
  
-   取得することによって、 <xref:System.Type> を表すオブジェクト、 <xref:System.Tuple%603> オブジェクト、およびによって返される配列から最初の要素を取得するには、 <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 次の例の配列を定義する <xref:System.Tuple%603> 学生、そのテストの平均得点とテストの数の名前を格納するオブジェクト。 渡した配列、 `ComputeStatistics` 平均スコア、標準偏差、およびケースの数を計算するメソッド、統計が計算されるからです。 これらの値が格納されている、 <xref:System.Tuple%603> によって返されるオブジェクト、 `ComputeStatistics` メソッドです。<xref:System.Tuple%603.Item1%2A> プロパティには、ケースの数が含まれています。  
  
 [!code-csharp[System.Tuple\`3.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の値を取得 <see cref="T:System.Tuple`3" /> オブジェクトの 2 番目のコンポーネントです。</summary>
        <value>現在の値 <see cref="T:System.Tuple`3" /> オブジェクトの 2 番目のコンポーネントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 型は、動的に決定する、 <xref:System.Tuple%603.Item2%2A> で 2 つの方法のいずれかのコンポーネント。  
  
-   呼び出して、 `GetType` メソッドによって返される値を <xref:System.Tuple%603.Item2%2A> プロパティです。  
  
-   取得することによって、 <xref:System.Type> を表すオブジェクト、 <xref:System.Tuple%603> オブジェクト、およびによって返される配列から 2 番目の要素を取得するその <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 次の例の配列を定義する <xref:System.Tuple%603> 学生、そのテストの平均得点とテストの数の名前を格納するオブジェクト。 渡した配列、 `ComputeStatistics` 平均スコア、標準偏差、およびケースの数を計算するメソッド、統計が計算されるからです。 これらの値が格納されている、 <xref:System.Tuple%603> によって返されるオブジェクト、 `ComputeStatistics` メソッドです。<xref:System.Tuple%603.Item2%2A> プロパティには、テストの平均スコアが含まれています。  
  
 [!code-csharp[System.Tuple\`3.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.Item3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の値を取得 <see cref="T:System.Tuple`3" /> オブジェクトの 3 番目のコンポーネントです。</summary>
        <value>現在の値 <see cref="T:System.Tuple`3" /> オブジェクトの 3 番目のコンポーネントです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 型は、動的に決定する、 <xref:System.Tuple%603.Item3%2A> で 2 つの方法のいずれかのコンポーネント。  
  
-   呼び出して、 `GetType` メソッドによって返される値を <xref:System.Tuple%603.Item3%2A> プロパティです。  
  
-   取得することによって、 <xref:System.Type> を表すオブジェクト、 <xref:System.Tuple%603> オブジェクト、およびによって返される配列から 3 番目の要素を取得するその <xref:System.Type.GetGenericArguments%2A?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 次の例の配列を定義する <xref:System.Tuple%603> 学生、そのテストの平均得点とテストの数の名前を格納するオブジェクト。 渡した配列、 `ComputeStatistics` 平均スコア、標準偏差、およびケースの数を計算するメソッド、統計が計算されるからです。 これらの値が格納されている、 <xref:System.Tuple%603> によって返されるオブジェクト、 `ComputeStatistics` メソッドです。<xref:System.Tuple%603.Item3%2A> プロパティには、標準偏差が含まれています。  
  
 [!code-csharp[System.Tuple\`3.Class\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.class/cs/example1.cs#1)]
 [!code-vb[System.Tuple\`3.Class\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.class/vb/example1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">現在のインスタンスと比較するオブジェクト。</param>
        <param name="comparer">比較のためのカスタム ルールを提供するオブジェクト。</param>
        <summary>現在の比較 <see cref="T:System.Tuple`3" /> オブジェクトが指定された比較子を使用して、指定したオブジェクトと現在のオブジェクトが前に、後で、または並べ替え順序において、指定したオブジェクトと同じ位置にあるかどうかを示す整数を返します。</summary>
        <returns>このインスタンスの相対位置を示す符号付き整数と <paramref name="other" /> 並べ替え順、次の表に示すようにします。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> 負の整数  
  
 </term>  
<description> このインスタンスの位置が <paramref name="other" /> よりも前です。  
  
 </description>  
</item>  
<item>  
<term> 0  
  
 </term>  
<description> このインスタンスと <paramref name="other" /> 、並べ替え順序における位置が同じです。  
  
 </description>  
</item>  
<item>  
<term> 正の整数  
  
 </term>  
<description> このインスタンスの位置が <paramref name="other" /> よりも後ろです。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%603> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 コレクションを含むメソッドの並べ替えによって呼び出される最も一般的ですが、このメソッドは、直接呼び出すことができる、 <xref:System.Collections.IComparer> パラメーター コレクションのメンバーの順序付けをします。 たとえば、メソッドによって呼び出されます、 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> メソッドおよび <xref:System.Collections.SortedList.Add%2A> のメソッド、 <xref:System.Collections.SortedList> を使用してインスタンス化されたオブジェクト、 <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=fullName> コンス トラクターです。  
  
> [!CAUTION]
>  <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=fullName> 並べ替え操作で使用するためのメソッドです。 比較の主な目的は、2 つのオブジェクトが等しいかどうかを判断するときに、いない使用してください。 2 つのオブジェクトが等しいかどうかを確認するのには、呼び出し、 <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 次の例の配列を作成する <xref:System.Tuple%603> スチューデントの名、テストの平均スコア、およびテストの数で構成されるオブジェクト。 並べ替えられていない配列内の各組のコンポーネントの表示、配列を並べ替えますを呼び出して <xref:System.Tuple%603.ToString%2A> 並べ替えられた順序で各組の値を表示します。 ジェネリックを定義している例では、並べ替えるには、配列、 `ScoreComparer` を実装するクラス、 <xref:System.Collections.IComparer> インターフェイスと並べ替え、 <xref:System.Tuple%603> の最初のコンポーネントではなく、2 番目のコンポーネントの値で昇順に配置内のオブジェクト。 例では、直接呼び出しませんなお、 <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%2A?displayProperty=fullName> メソッドです。 このメソッドはによって暗黙的に、 <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=fullName> 配列の各要素に対してメソッドです。  
  
 [!code-csharp[System.Tuple\`3.CompareTo\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`3.CompareTo\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="other" /> は <see cref="T:System.Tuple`3" /> オブジェクトではありません。</exception>
        <altmember cref="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">このインスタンスと比較するオブジェクト。</param>
        <param name="comparer">2 つのオブジェクトが等しいかどうかを評価に使用するメソッドを定義するオブジェクト。</param>
        <summary>示す値を返すかどうか、現在 <see cref="T:System.Tuple`3" /> オブジェクトが指定した比較方法に基づいて、指定されたオブジェクトと等しい。</summary>
        <returns>
          <see langword="true" /> 現在のインスタンスが指定したオブジェクトに等しい場合それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%603> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> 場合にのみ実装が呼び出される `other` は `null`, 、正常に指定できるかどうかにキャスト \(c\#\) またはに \(Visual Basic\) で変換、 <xref:System.Tuple%603> コンポーネントが含まれるの現在のインスタンスと同じ型であるオブジェクト。<xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=fullName> メソッドの最初のパス、 <xref:System.Tuple%603.Item1%2A> の値、 <xref:System.Tuple%603> と比較するオブジェクト、 <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=fullName> 実装します。 このメソッドの呼び出しが返された場合 `true`, 、メソッドが再度呼び出され、渡された、 <xref:System.Tuple%603.Item2%2A> 、2 つの値 <xref:System.Tuple%603> オブジェクトです。 このメソッドの呼び出しが返された場合 `true` もう一度、メソッドは第 3 時間と渡された、 <xref:System.Tuple%603.Item3%2A> 、2 つの値 <xref:System.Tuple%603> オブジェクトです。  
  
   
  
## 例  
 次の例、 `Item2Comparer` を実装するクラス、 <xref:System.Collections.IEqualityComparer> インターフェイスを変更する方法 <xref:System.Tuple%603> オブジェクトが等しいかどうか評価します。 メソッドは常に返します `true` 渡されたときに、 <xref:System.Tuple%603.Item1%2A> 2 つのプロパティ値 <xref:System.Tuple%603> オブジェクト、およびそれを呼び出す、 <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%2A?displayProperty=fullName> を評価するメソッド、 <xref:System.Tuple%603.Item2%2A> プロパティの値。 このメソッドの呼び出しが返された場合 `true`, 、それら <xref:System.Tuple%603.Item3%2A> プロパティの値が常を返すメソッドに渡される `true`です。 メソッドの値のみに基づいて、等価性はテスト結果として、 <xref:System.Tuple%603.Item2%2A> プロパティです。 出力は、データが一連の結果を示しています。 <xref:System.Tuple%603> クラス名、テストの平均スコア、および学生のテストの数を記録するオブジェクト。  
  
 [!code-csharp[System.Tuple\`3.Equals\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.equals/cs/equals2.cs#2)]
 [!code-vb[System.Tuple\`3.Equals\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.equals/vb/equals2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">オブジェクトが <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> メソッドは、現在のハッシュ コードを計算 <see cref="T:System.Tuple`3" /> オブジェクトです。</param>
        <summary>現在のハッシュ コードを計算 <see cref="T:System.Tuple`3" /> オブジェクトの指定された計算方法を使用しています。</summary>
        <returns>32 ビット符号付き整数ハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%603> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 メソッドへの呼び出しが単純にラップして、 `comparer` オブジェクトの <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=fullName> 実装します。  
  
 ハッシュ コードの計算に使用されるアルゴリズムは、2 つの同じハッシュ コードを返す必要があります <xref:System.Tuple%603> 同等であると見なされるオブジェクト。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.System#IComparable#CompareTo(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">現在のインスタンスと比較するオブジェクト。</param>
        <summary>現在の比較 <see cref="T:System.Tuple`3" /> オブジェクトを指定したオブジェクトに現在のオブジェクトが前に、後で、または並べ替え順序において、指定したオブジェクトと同じ位置にあるかどうかを示す整数を返します。</summary>
        <returns>このインスタンスの相対位置を示す符号付き整数と <paramref name="obj" /> 並べ替え順、次の表に示すようにします。  
  
 <list type="table">  
<listheader>  
<term> 値  
  
 </term>  
<description> 説明  
  
 </description>  
</listheader>  
<item>  
<term> 負の整数  
  
 </term>  
<description> このインスタンスの位置が <paramref name="obj" /> よりも前です。  
  
 </description>  
</item>  
<item>  
<term> 0  
  
 </term>  
<description> このインスタンスと <paramref name="obj" /> 、並べ替え順序における位置が同じです。  
  
 </description>  
</item>  
<item>  
<term> 正の整数  
  
 </term>  
<description> このインスタンスの位置が <paramref name="obj" /> よりも後ろです。  
  
 </description>  
</item>  
</list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Tuple%603> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合にのみ、使用できます。  
  
 この方法では、 <xref:System.IComparable.CompareTo%2A?displayProperty=fullName> の実装、 <xref:System.Tuple%603> クラスです。 メソッドのなど、並べ替えのコレクションの既定のオーバー ロードによって呼び出される最も一般的ですが、メソッドを直接呼び出すことができる、 <xref:System.Array.Sort%28System.Array%29?displayProperty=fullName> と <xref:System.Collections.SortedList.Add%2A?displayProperty=fullName>, 、コレクションのメンバーの順序付けをします。  
  
> [!CAUTION]
>  <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=fullName> 並べ替え操作で使用するためのメソッドです。 比較の主な目的は、2 つのオブジェクトが等しいかどうかを判断するときに、いない使用してください。 2 つのオブジェクトが等しいかどうかを確認するのには、呼び出し、 <xref:System.Tuple%603.Equals%2A> メソッドです。  
  
 <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=fullName> メソッドでは、既定のオブジェクトの比較子を使用して、各コンポーネントを比較します。  
  
   
  
## 例  
 次の例の配列を作成する <xref:System.Tuple%603> 人の生徒の名前、テストの平均スコア、およびテストの数の構成要素オブジェクト。 並べ替えられていない配列の各タプルの要素を表示、配列を並べ替えますを呼び出して <xref:System.Tuple%603.ToString%2A> 並べ替えられた順序で各タプルを表示します。 その最初のコンポーネントによって、配列が並べ替えられている出力を示しています。 例では、直接呼び出しませんなお、 <xref:System.Tuple%603.System%23IComparable%23CompareTo%2A?displayProperty=fullName> メソッドです。 このメソッドはによって暗黙的に、 <xref:System.Array.Sort%28System.Array%29> 配列の各要素に対してメソッドです。  
  
 [!code-csharp[System.Tuple\`3.CompareTo\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`3.CompareTo\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="obj" /> は <see cref="T:System.Tuple`3" /> オブジェクトではありません。</exception>
        <altmember cref="M:System.Tuple`3.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`3.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`3.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>この値を表す文字列を返す <see cref="T:System.Tuple`3" /> インスタンス。</summary>
        <returns>この文字列表現 <see cref="T:System.Tuple`3" /> オブジェクトです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドによって返される文字列の形式は \(*Item1*, 、*Item2*, 、*Item3*\) ここで、 *Item1*, 、*Item2*, 、および *Item3* の値を表す、 <xref:System.Tuple%603.Item1%2A>, 、<xref:System.Tuple%603.Item2%2A>, 、および <xref:System.Tuple%603.Item3%2A> プロパティそれぞれします。 プロパティ値のいずれかが場合 `null`, 、として表される <xref:System.String.Empty?displayProperty=fullName>です。  
  
   
  
## 例  
 次の例を示しています、 <xref:System.Tuple%603.ToString%2A> メソッドです。  
  
 [!code-csharp[System.Tuple\`3.ToString\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`3.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`3.ToString\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`3.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>