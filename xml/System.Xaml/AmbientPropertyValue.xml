<Type Name="AmbientPropertyValue" FullName="System.Xaml.AmbientPropertyValue">
  <TypeSignature Language="C#" Value="public class AmbientPropertyValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AmbientPropertyValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.AmbientPropertyValue" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>レポートの一部として、アンビエント プロパティに関する情報、 <see cref="T:System.Xaml.IAmbientProvider" /> 実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Xaml.AmbientPropertyValue> 呼び出しによって返される情報項目を表す、 <xref:System.Xaml.IAmbientProvider> サービス メソッドです。`GetAll` メソッドは、列挙型または配列を返す <xref:System.Xaml.AmbientPropertyValue> 項目;、 `GetFirst` メソッドは、1 つを返します <xref:System.Xaml.AmbientPropertyValue>します。  
  
## アンビエント プロパティについて  
 アンビエント プロパティとは、プロパティのプロパティの値は、XAML ノードの構造の値コンバーターの使用法とその下にあるオブジェクト グラフで使用する必要があります。 アンビエントの概念は、保存、読み込みパスのオブジェクトの記述フェーズまたは、シリアル化中に、XAML プロセッサに関連するパス。  
  
 型も原因と考えられるアンビエントとして。 この場合は、属性付きの型を使用するすべてのプロパティは、アンビエントとして報告されます。  
  
 読み込みパスの場合、アンビエント プロパティの値に影響を与えるその下にある XAML ノードの構造内に存在する他のプロパティのオブジェクトのグラフが生成される値。 型コンバーターおよびマークアップ拡張機能を利用可能なアンビエント プロパティの値である必要があります、XAML ノード ストリームとして処理されるときにアンビエントの概念が意味 `StartObject` に `EndObject`します。 同様に、型コンバーターまたはマークアップ拡張機能として使用される保存先のパスは、アンビエント プロパティとその値を検索できます。 そのため、生成される XAML より優れたラウンドト リップ表現です。  
  
 その言語の定義が XAML ではオブジェクトのメンバーを処理する順序は指定しません。 ただしのアンビエント プロパティの値が処理しなければならない最初に、XAML リーダー、型コンバーターおよびマークアップ拡張機能を使用するその他のプロパティに含まれるには、使用してアクセスできるように、 <xref:System.Xaml.IAmbientProvider> サービスです。  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> XAML ノード処理順序にも影響を与えるような概念です。 ただし、 <xref:System.Xaml.XamlMember.DependsOn%2A> は、ピア メンバーとノード リレーションシップに対してのみ使用するすべての子孫の影響を与えることはできません。 また、 <xref:System.Xaml.XamlMember.DependsOn%2A> 直接影響オブジェクト グラフ プロパティを設定する対しアンビエント手法は、型コンバーターまたはマークアップ拡張機能に依存します。 アンビエント手法でがもある特定の型コンバーターまたはマークアップ拡張機能の定義。 各型コンバーターまたはアンビエント プロパティの値を解釈され、型コンバーターまたはマークアップ拡張機能が使用されているオブジェクト グラフの場所に適用する方法を決定するマークアップ拡張機能の責任です。  
  
## WPF の使用上の注意  
 説明しているアンビエント プロパティ シナリオ、 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 機能セットは <xref:System.Windows.Style.TargetType%2A?displayProperty=fullName>, 、以外の値を必要なプロパティ名の参照を修飾することができます。 ここで、 <xref:System.Windows.Style.TargetType%2A?displayProperty=fullName> 値は修飾、 <xref:System.Windows.Setter.Property%2A?displayProperty=fullName> その下にある XAML ノードの値。<xref:System.Windows.Setter.Property%2A?displayProperty=fullName> 型コンバーターの動作を使用して、 <xref:System.Windows.DependencyProperty>です。 この動作は、アンビエントにアクセスする <xref:System.Windows.Style.TargetType%2A?displayProperty=fullName> クエリを実行して値 <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> 型コンバーターおよびマークアップ拡張機能に利用できるサービス コンテキストからです。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientPropertyValue (System.Xaml.XamlMember property, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember property, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.AmbientPropertyValue.#ctor(System.Xaml.XamlMember,System.Object)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Xaml.XamlMember" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">アンビエント プロパティを表す識別子。</param>
        <param name="value">報告される値。</param>
        <summary>
          <see cref="T:System.Xaml.AmbientPropertyValue" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember RetrievedProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember RetrievedProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.RetrievedProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XAML 型システム識別子を取得 \(<see cref="T:System.Xaml.XamlMember" />\) アンビエント プロパティを表します。</summary>
        <value>アンビエント プロパティを表す識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.AmbientPropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アンビエント プロパティの値を取得します。</summary>
        <value>アンビエント プロパティの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>