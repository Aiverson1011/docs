<Type Name="XamlXmlReaderSettings" FullName="System.Xaml.XamlXmlReaderSettings">
  <TypeSignature Language="C#" Value="public class XamlXmlReaderSettings : System.Xaml.XamlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlXmlReaderSettings extends System.Xaml.XamlReaderSettings" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlXmlReaderSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlReaderSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>処理規則またはオプションの設定の指定、 <see cref="T:System.Xaml.XamlXmlReader" /> XAML リーダーの実装です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReaderSettings.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xaml.XamlXmlReaderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlXmlReaderSettings (System.Xaml.XamlXmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlXmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlXmlReaderSettings.#ctor(System.Xaml.XamlXmlReaderSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlXmlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="settings">既存の <see cref="T:System.Xaml.XamlXmlReaderSettings" /> コピー先のオブジェクト。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xaml.XamlXmlReaderSettings" /> クラスは、既存の設定をコピーして <see cref="T:System.Xaml.XamlXmlReaderSettings" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public bool CloseInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseInput" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReaderSettings.CloseInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定するかどうか基になるストリームまたはテキスト リーダーを閉じるタイミングを示す値、 <see cref="T:System.Xaml.XamlXmlReader" /> が閉じられます。</summary>
        <value>
          <see langword="true" /> かどうかは、基になるストリームまたはリーダーを閉じるときに、 <see cref="T:System.Xaml.XamlXmlReader" /> が閉じているそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipXmlCompatibilityProcessing">
      <MemberSignature Language="C#" Value="public bool SkipXmlCompatibilityProcessing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipXmlCompatibilityProcessing" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リーダーは既定値を異なるかどうかを決定する値を取得または <see cref="T:System.Xaml.XamlXmlReader" /> マークアップの互換性のコンテンツを処理する方法の動作です。</summary>
        <value>
          <see langword="true" /> 発信側のリーダーを直接使用する場合、互換性の XML マークアップはメイン ストリームの一部として処理され、互換性がないと見なされます。 つまりいます。<see langword="false" /> 既定の動作を使用する場合は、個別に XML 互換性を処理します。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定の XML マークアップの互換性の動作を処理 <xref:System.Xaml.XamlXmlReader> ことです、 <xref:System.Xaml.XamlXmlReader>, の初期化を提供されているため、作成された内部のヘルパー クラスでラップされます。 このヘルパー クラスは、マークアップの互換性のノードを個別に読み取りし、スキーマ コンテキストのマークアップの互換性に基づいてノードに入力します。  
  
 推奨される設定のシナリオ <xref:System.Xaml.XamlXmlReaderSettings.SkipXmlCompatibilityProcessing%2A> に `true` は。  
  
-   プライマリの XAML ストリームのマークアップの互換性のコンテンツを保持するには。  
  
-   マークアップの互換性の内容をインラインで処理できるリーダーを使用しているため、既に処理マークアップの互換性。  
  
-   パフォーマンス上の理由から、XAML リーダー実装で XML 互換性規則を無視できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public string XmlLang { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReaderSettings.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リーダーが昇格値を記述するライターを設定する言語の設定を取得または <see langword="xml:lang" /> ノード内の属性です。</summary>
        <value>可能性があるを使用する文字列 <see langword="xml:lang" /> リーダーに基づいている出力します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出し元が、指定した文字列が適切であることを保証 `xml:lang` 使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpacePreserve">
      <MemberSignature Language="C#" Value="public bool XmlSpacePreserve { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlSpacePreserve" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlXmlReaderSettings.XmlSpacePreserve" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XAML リーダーが記述するには、すべて XAML ライターに指示するかどうかを決定する値を取得または <see langword="xml:space" /> ノード内の属性です。 その動作が必要な場合、この情報は、共有の XAML スキーマ コンテキストを通じて渡されます。</summary>
        <value>
          <see langword="true" /> かどうか、XAML ノード ストリームを処理しているライターを作成できます <c>xml:space="preserve"</c> 出力で <see langword="false" /> 場合 <see langword="xml:space" /> ノード内の属性を書き込むことはできません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML の空白文字の概念は、XAML に適用するのに十分な堅牢なであり、通常は、XAML リーダーによって無視されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xaml.XamlXmlReaderSettings" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>