<Type Name="IAmbientProvider" FullName="System.Xaml.IAmbientProvider">
  <TypeSignature Language="C#" Value="public interface IAmbientProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbientProvider" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.IAmbientProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>アンビエント プロパティまたは型コンバーターおよびマークアップ拡張機能のアンビエント型についての情報項目を返すことができるサービスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このインターフェイスは、型コンバーターと XAML 型システムのアンビエント プロパティの識別子を取得するマークアップ拡張機能に役立つサービスを表します \(<xref:System.Xaml.XamlMember> オブジェクト\)。 サービスでは、クラスのアンビエント プロパティの値も取得できます。 型はアンビエントこともできます。値としてその型を使用するすべてのメンバーは、アンビエント考慮してください。  
  
 このサービスが呼び出しによって返される通常 <xref:System.IServiceProvider.GetService%2A>, 、コンテキスト固有のサービス プロバイダーに対して行われたはこれです。 サービス プロバイダーは、値コンバーターの実行コードなど、必要なコンテキストを一般的に使用します。 詳細については、[Type Converters or Markup Extensions for XAML](http://msdn.microsoft.com/ja-jp/db07a952-05ce-4aa4-b6f9-aac7397d0326) および [Service Contexts Available to Type Converters and Markup Extensions](http://msdn.microsoft.com/ja-jp/b4dad00f-03da-4579-a4e9-d8d72d2ccbce) を参照してください。  
  
## アンビエント プロパティについて  
 アンビエント プロパティは、プロパティの値は、XAML ノードの構造とから作成されたオブジェクト グラフ内に、コンバーターおよびマークアップ拡張機能に存在するを入力できるようにプロパティです。 これは、保存、読み込みパスのオブジェクトの記述フェーズまたは、シリアル化中に、XAML プロセッサに関連するパス。  
  
 読み込みパスの場合、アンビエント プロパティの値に影響を与えるオブジェクト グラフの下にある XAML ノードの構造内に存在するその他のプロパティの値。 XAML ノード ストリームとして処理されるときにアンビエントの概念は、アンビエント プロパティの値が必要型コンバーターおよびマークアップ拡張機能を利用可能な `StartObject` に `EndObject`します。 同様に、使用される型コンバーターの保存パスがアンビエント プロパティとその値に関する知識を使用できます。 そのため、生成される XAML より優れたラウンドト リップ表現です。  
  
 メンバーの一般に、XAML いない順序を指定してオブジェクトのメンバーを処理する必要があります。 ただしのアンビエント プロパティの値が処理しなければならない最初に、XAML リーダー、型コンバーターおよびマークアップ拡張機能の使用法に含まれるその他のプロパティには、を通じてアクセスできるように、 <xref:System.Xaml.IAmbientProvider> サービスです。  
  
 <xref:System.Xaml.XamlMember.DependsOn%2A> XAML ノード処理順序にも影響を与えるような概念です。 ただし、 <xref:System.Xaml.XamlMember.DependsOn%2A> は、ピア メンバーとノード リレーションシップに対してのみ使用するすべての子孫の影響を与えることはできません。 また、 <xref:System.Xaml.XamlMember.DependsOn%2A> 直接影響オブジェクト グラフ プロパティを設定します。 対しアンビエント手法は、型コンバーターまたはマークアップ拡張機能に依存します。 アンビエント手法でがもある特定の型コンバーターまたはアンビエント プロパティの値を解釈され、オブジェクトに適用する方法を指定するマークアップ拡張機能の定義。  
  
## WPF の使用上の注意  
 説明しているアンビエント プロパティ シナリオ、 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 機能セットは <xref:System.Windows.Style.TargetType%2A?displayProperty=fullName>, 、以外の値を必要なプロパティ名の参照を修飾することができます。 ここで、 <xref:System.Windows.Style.TargetType%2A?displayProperty=fullName> 値は修飾、 <xref:System.Windows.Setter.Property%2A?displayProperty=fullName> その下にある XAML ノードに格納されている値。<xref:System.Windows.Setter.Property%2A?displayProperty=fullName> 型コンバーターの動作を使用して、 <xref:System.Windows.DependencyProperty>です。 この動作は、アンビエントにアクセスする <xref:System.Windows.Style.TargetType%2A?displayProperty=fullName> クエリを実行して値 <xref:System.Xaml.IAmbientProvider.GetFirstAmbientValue%2A> 型コンバーターおよびマークアップ拡張機能に利用できるサービス コンテキストからです。  
  
 WPF の機能セットで説明しているアンビエント型シナリオでは <xref:System.Windows.ResourceDictionary>です。<xref:System.Windows.ResourceDictionary><xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> を含むその他のプロパティを <xref:System.Windows.ResourceDictionary> 差し込むには、オブジェクトと、目的のリソース解決順序マージ シナリオの衝突の型が読み込まれている順序で。<xref:System.Windows.ResourceDictionary> 適用対象 <xref:System.Windows.Markup.AmbientAttribute> XAML プロセッサが使用してマージされたディクショナリ内の参照を正しく処理できるように `StaticResource` 使用法です。 具体的には、 `StaticResource` マークアップ拡張機能は、呼び出しは、 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A>です。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.AmbientPropertyValue" />
  </Docs>
  <Members>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;object&gt; GetAllAmbientValues (System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetAllAmbientValues(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Xaml.XamlType[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">アンビエント型情報を取得する対象の型のセット。</param>
        <summary>要求された型で使用できるアンビエント型のオブジェクトのインスタンスの列挙可能なセットを返します。</summary>
        <returns>要求された一連の値を表すオブジェクトの列挙可能なセット <see cref="T:System.Xaml.XamlType" /> 識別子。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">オブジェクト グラフの上方向の走査で検出された場合に、評価を停止する 1 つまたは複数の種類を指定します。 この型は、目的のアンビエント プロパティを保持します。<see langword="null" /> でもかまいません。</param>
        <param name="properties">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティの識別子オブジェクトを指定します。</param>
        <summary>要求されたプロパティのセットの情報項目のアンビエント プロパティの列挙可能なセットを返します。</summary>
        <returns>要求されたプロパティのセットの情報項目のアンビエント プロパティの列挙可能なセットです。 それぞれのプロパティ情報 <see cref="T:System.Xaml.AmbientPropertyValue" /> 入力のいずれかに一致が返される <paramref name="properties" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各 <xref:System.Xaml.AmbientPropertyValue> を含む返される、 <xref:System.Xaml.XamlMember> 識別子とプロパティの値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAmbientValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; types, System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.AmbientPropertyValue&gt; GetAllAmbientValues(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, bool searchLiveStackOnly, class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; types, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetAllAmbientValues(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Boolean,System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.AmbientPropertyValue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="searchLiveStackOnly" Type="System.Boolean" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">オブジェクト グラフの上方向の走査で検出された場合に、評価を停止する 1 つまたは複数の種類を指定します。 この型は、目的のアンビエント プロパティを保持します。<see langword="null" /> でもかまいません。</param>
        <param name="searchLiveStackOnly">
          <see langword="true" /> 保存されているコンテキストを使用しないように <see langword="false" /> 保存されているコンテキストを使用します。 既定値は、<see langword="false" /> です。 「解説」を参照してください。</param>
        <param name="types">アンビエントと見なされる型を識別する 1 つまたは複数の型識別子オブジェクトを指定します。</param>
        <param name="properties">アンビエントと見なされるプロパティを識別する 1 つ以上のプロパティの識別子オブジェクトを指定します。</param>
        <summary>要求されたセットの型およびプロパティのアンビエント プロパティの情報を項目の列挙可能なセットを返します。</summary>
        <returns>要求されたセットの型およびプロパティのアンビエント プロパティの情報を項目の列挙可能なセットです。 それぞれのプロパティ情報 <see cref="T:System.Xaml.AmbientPropertyValue" /> 入力のいずれかに一致が返される <paramref name="types" /> または <paramref name="properties" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各 <xref:System.Xaml.AmbientPropertyValue> を含む返される、 <xref:System.Xaml.XamlMember> 識別子とプロパティの値。  
  
 この特定の <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%2A> アンビエント型のオーバー ロードの検索し、アンビエント プロパティと同じでは、ツリーを通過します。 異なる戻り値の項目の順序付け、このオーバー ロードを使用した高 <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> または <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29>です。  
  
 このオーバー ロードでは、保存されている任意のコンテキストを使用しないように検索も可能です。<xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Collections.Generic.IEnumerable%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlMember%5B%5D%29> または <xref:System.Xaml.IAmbientProvider.GetAllAmbientValues%28System.Xaml.XamlType%5B%5D%29> オーバー ロードは、表示されている場合に暗黙的に保存されているコンテキストを使用 \(これらの場合と同様、暗黙に常に動作 `searchLiveStackOnly` パラメーターは `false`\)。 保存されているコンテキストの概念は特定の XAML スキーマ コンテキスト、または XAML を組み込むためのフレームワークによってに可能性のある、異なる方法で処理されます。 WPF XAML 実装では、保存されているコンテキストをテンプレートの展開など、他の機能領域に対応するために使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public object GetFirstAmbientValue (System.Xaml.XamlType[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetFirstAmbientValue(class System.Xaml.XamlType[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Xaml.XamlType[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Xaml.XamlType[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="types">アンビエント型情報を取得する対象の型のセット。</param>
        <summary>要求された型の場合は、可能なアンビエント型は、最初の一致するオブジェクトを返します。</summary>
        <returns>要求されたセットの最初の結果オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFirstAmbientValue">
      <MemberSignature Language="C#" Value="public System.Xaml.AmbientPropertyValue GetFirstAmbientValue (System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt; ceilingTypes, System.Xaml.XamlMember[] properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xaml.AmbientPropertyValue GetFirstAmbientValue(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlType&gt; ceilingTypes, class System.Xaml.XamlMember[] properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.IAmbientProvider.GetFirstAmbientValue(System.Collections.Generic.IEnumerable{System.Xaml.XamlType},System.Xaml.XamlMember[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.AmbientPropertyValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ceilingTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="properties" Type="System.Xaml.XamlMember[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="ceilingTypes">オブジェクト グラフの上方向の走査で検出された場合に、評価を停止する 1 つまたは複数の種類を指定します。 この型は、目的のアンビエント プロパティを保持します。</param>
        <param name="properties">アンビエントと見なされるプロパティを識別する 1 つ以上のオブジェクトを指定します。</param>
        <summary>要求されたに最初に検出されたプロパティに基づいて、プロパティのセットから単一のアンビエント プロパティの情報項目を返します。</summary>
        <returns>最初のアンビエント プロパティの値からの単一のアンビエント プロパティの情報項目、 <paramref name="properties" /> あるリストです。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 各 <xref:System.Xaml.AmbientPropertyValue> を含む返される、 <xref:System.Xaml.XamlMember> 識別子とプロパティの値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFirstAmbientValue">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>最初に検出されたプロパティに基づいて、要求されたセットから単一アンビエント型またはプロパティの情報項目を返します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GetAllAmbientValues">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>要求のスコープのアンビエントの種類またはプロパティ情報の項目の列挙可能なセットを返します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>