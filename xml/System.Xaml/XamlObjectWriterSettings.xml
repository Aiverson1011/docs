<Type Name="XamlObjectWriterSettings" FullName="System.Xaml.XamlObjectWriterSettings">
  <TypeSignature Language="C#" Value="public class XamlObjectWriterSettings : System.Xaml.XamlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlObjectWriterSettings extends System.Xaml.XamlWriterSettings" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlObjectWriterSettings" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xaml.XamlWriterSettings</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>特定の XAML ライターの設定を提供 <see cref="T:System.Xaml.XamlObjectWriter" />します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Xaml.XamlObjectWriter> 機能内で指定されている <xref:System.Xaml.XamlObjectWriterSettings>します。 インスタンスでの設定が指定されていない <xref:System.Xaml.XamlObjectWriterSettings> が存在する、構成された既定値を持つ <xref:System.Xaml.XamlObjectWriter>, 、し、このインスタンスは、派生クラスの設定の結合で使用できます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
    <altmember cref="M:System.Xaml.IXamlObjectWriterFactory.GetXamlObjectWriter(System.Xaml.XamlObjectWriterSettings)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriterSettings.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Xaml.XamlObjectWriterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlObjectWriterSettings (System.Xaml.XamlObjectWriterSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlObjectWriterSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlObjectWriterSettings.#ctor(System.Xaml.XamlObjectWriterSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlObjectWriterSettings" />
      </Parameters>
      <Docs>
        <param name="settings">コピーする設定のインスタンス。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Xaml.XamlObjectWriterSettings" /> は既存のインスタンスのコピーに基づいてクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="settings" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="AccessLevel">
      <MemberSignature Language="C#" Value="public System.Xaml.Permissions.XamlAccessLevel AccessLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Permissions.XamlAccessLevel AccessLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AccessLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Permissions.XamlAccessLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XAML ライターが確認する <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> アクセス許可を取得または設定します。</summary>
        <value>
          <see cref="T:System.Xaml.Permissions.XamlAccessLevel" /> アクセス許可。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、部分的に信頼されたトレラント ランタイムを通じて部分的な信頼でアクセスされる非パブリック メンバーの場合、期待されるアクセス レベルを示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterBeginInitHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterBeginInitHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterBeginInitHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に XAML ライターによって呼び出されるコールバックへの参照、 <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> に作成されたオブジェクトごとにオブジェクトの有効期間のフェーズです。</summary>
        <value>XAML ライターによって呼び出されるコールバック、 <see cref="M:System.ComponentModel.ISupportInitialize.BeginInit" /> オブジェクトの有効期間のフェーズです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AfterEndInitHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterEndInitHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterEndInitHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定に XAML ライターによって呼び出されるコールバックへの参照、 <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> に作成されたオブジェクトごとにオブジェクトの有効期間のフェーズです。</summary>
        <value>XAML ライターによって呼び出されるコールバック、 <see cref="M:System.ComponentModel.ISupportInitialize.EndInit" /> オブジェクトの有効期間のフェーズです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="AfterPropertiesHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; AfterPropertiesHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; AfterPropertiesHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または作成した各オブジェクトのオブジェクトの有効期間の member 書き込み段階で、XAML ライターによって呼び出されるコールバックへの参照を設定します。</summary>
        <value>オブジェクトの有効期間の member 書き込み段階で、XAML ライターによって呼び出されるコールバック。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="BeforePropertiesHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt; BeforePropertiesHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Xaml.XamlObjectEventArgs&gt; BeforePropertiesHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Xaml.XamlObjectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または作成した各オブジェクトのオブジェクトの有効期間の member 書き込み前の段階で、XAML ライターによって呼び出されるコールバックへの参照を設定します。</summary>
        <value>オブジェクトの有効期間の member 書き込み前の段階で、XAML ライターによって呼び出されるコールバック。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)" />
        <altmember cref="T:System.Xaml.XamlObjectEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ExternalNameScope">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.INameScope ExternalNameScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.INameScope ExternalNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の場合は、XAML ライターから名前を登録するために使用する XAML 名前スコープ <see cref="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" /> は <see langword="true" />です。</summary>
        <value>名前の登録を使用する XAML 名前スコープ。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 特定のコンテキスト、 <xref:System.Xaml.XamlObjectWriter> 外部の XAML 名前スコープを使用する場合があります。  
  
## WPF の使用上の注意  
 WPF XAML 実装により開始された XAML ライター処理で <xref:System.Windows.FrameworkTemplate> 個別の XAML 名前スコープを指定します。 この WPF シナリオでテンプレートを共有しないように XAML 名前スコープでそれらを定義する XAML ページのルートです。 代わりに、処理、指定された別の XAML 名前スコープに変換する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCanConvert">
      <MemberSignature Language="C#" Value="public bool IgnoreCanConvert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreCanConvert" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.IgnoreCanConvert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XAML ライターが \(呼び出しではない\) を無視するかどうかを指定する値を取得または <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> の実装、 <see cref="T:System.ComponentModel.TypeConverter" /> 型コンバーターの場合。</summary>
        <value>
          <see langword="true" /> XAML ライターを無視する場合 <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" /> 実装しない場合は、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ComponentModel.TypeConverter> クラスとその <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> メソッドの CLR の型変換の全体的な設計の一部であります。 XAML のシステムでは、通常、型コンバーターの入力が入力のための XAML リーダーによって識別されることは、文字列は、常を想定することができます。 このプロパティを設定する場合 `true`, 、この想定は XAML オブジェクト ライターの動作に体系化されているモードを有効にします。  
  
 このモードでは、WPF XAML の以前のバージョンの互換性要件をサポートしています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferUnconvertedDictionaryKeys">
      <MemberSignature Language="C#" Value="public bool PreferUnconvertedDictionaryKeys { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferUnconvertedDictionaryKeys" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.PreferUnconvertedDictionaryKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定値を無効にするかどうかを示す値を取得または <see cref="T:System.Xaml.XamlObjectWriter" /> の実行での変換の入力機能、 <paramref name="K" /> コンポーネント、 <see cref="T:System.Collections.Generic.Dictionary`2" /> オブジェクト グラフ表現を記述する前にします。</summary>
        <value>
          <see langword="true" /> 場合 <paramref name="K" /> の変換の入力、 <see cref="T:System.Collections.Generic.Dictionary`2" /> オブジェクトが無効にする必要があります。<see langword="false" /> 実行している場合 <paramref name="K" /> の変換の入力、 <see cref="T:System.Collections.Generic.Dictionary`2" /> オブジェクトに適用されます。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 詳細については、 `K` 、変換機能を入力して、「解説」を参照してください <xref:System.Xaml.XamlObjectWriter>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterNamesOnExternalNamescope">
      <MemberSignature Language="C#" Value="public bool RegisterNamesOnExternalNamescope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RegisterNamesOnExternalNamescope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.RegisterNamesOnExternalNamescope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定された名前の登録を実行するかどうかを決定する値を取得または <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />です。</summary>
        <value>
          <see langword="true" /> 名の登録に対して発生した場合、 <see cref="P:System.Xaml.XamlObjectWriterSettings.ExternalNameScope" />; <see langword="false" /> 親 XAML 名前スコープ名の登録を実行する場合。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootObjectInstance">
      <MemberSignature Language="C#" Value="public object RootObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object RootObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.RootObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既存のルート オブジェクトの取得または設定 <see cref="T:System.Xaml.XamlObjectWriter" /> 操作します。</summary>
        <value>既存のルート オブジェクト <see cref="T:System.Xaml.XamlObjectWriter" /> 操作します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ルート オブジェクトのインスタンスが、暗黙の型として使用される場合、この値を設定すると、 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> \(オブジェクトの入力では、リーダーからではなく直接\) の呼び出しで最初のノード\/書き込みの明示的な呼び出しの前にする、 <xref:System.Xaml.XamlObjectWriter>です。 提供されているルート オブジェクトの XAML の種類の確認などの任意のエラー チェックはその暗黙の型になるまで遅延 <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> この設定のプロパティを設定すると確認するのではなく、呼び出しです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipDuplicatePropertyCheck">
      <MemberSignature Language="C#" Value="public bool SkipDuplicatePropertyCheck { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipDuplicatePropertyCheck" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SkipDuplicatePropertyCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または XAML ライターを省略すると、重複するプロパティをチェックするコード パスを確認するかどうかを決定する値を設定します。</summary>
        <value>
          <see langword="true" /> 重複したプロパティのチェックを省略するとする必要があります。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定したコード パスでは、現在割り当てられているプロパティをチェックして、名前付きのアンビエント プロパティの重複したプロパティ セットが試行されると例外をスローします。 詳細については、「<xref:System.Xaml.IAmbientProvider>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipProvideValueOnRoot">
      <MemberSignature Language="C#" Value="public bool SkipProvideValueOnRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipProvideValueOnRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SkipProvideValueOnRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定を示す値かどうか、 <see cref="T:System.Xaml.XamlObjectWriter" /> 呼び出しを省略する必要があります <see langword="ProvideValue" /> マークアップ拡張機能では、これは関連するマークアップ拡張機能は、オブジェクト グラフのルートを表す場合。</summary>
        <value>
          <see langword="true" /> 場合、 <see cref="T:System.Xaml.XamlObjectWriter" /> 呼び出しを省略する必要があります <see langword="ProvideValue" /> マークアップ拡張機能では、それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この設定が使用されるときに、 <xref:System.Xaml.XamlObjectWriter> ルート ノードを処理 \(<xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, 、またはルート ノード内のメンバー\)。 このプロパティは、テンプレートと遅延読み込みのシナリオに適しています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceBamlUri">
      <MemberSignature Language="C#" Value="public Uri SourceBamlUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri SourceBamlUri" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.SourceBamlUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実際の <see langword="BaseUri" /> の代わりに <see langword="BeginInitHandler" /> に使用されました。</summary>
        <value>実際の <see langword="BaseUri" /> の代わりに使用される <see cref="T:System.Uri" /> 。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実行時の動作の完全な互換性を維持しながら、ハンドラーの正しい情報を提供するには、内部的に使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XamlSetValueHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetValueEventArgs&gt; XamlSetValueHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetValueEventArgs&gt; XamlSetValueHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetValueEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、オブジェクト ライターが CLR 実装を呼び出すときに使用するハンドラー <see langword="SetValue" /> 依存関係プロパティ。</summary>
        <value>このケースを処理するハンドラーの実装です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント ハンドラーは、ジェネリックに基づいて <xref:System.EventHandler%601> を使用するデリゲート、 <xref:System.Windows.Markup.XamlSetValueEventArgs> イベント データ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Xaml.XamlObjectWriterSettings" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>