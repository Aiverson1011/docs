<Type Name="WebChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.Web.WebChannelFactory&lt;TChannel&gt;">
  <TypeSignature Language="C#" Value="public class WebChannelFactory&lt;TChannel&gt; : System.ServiceModel.ChannelFactory&lt;TChannel&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebChannelFactory`1&lt;TChannel&gt; extends System.ServiceModel.ChannelFactory`1&lt;!TChannel&gt;" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebChannelFactory`1" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.ChannelFactory&lt;TChannel&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TChannel</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TChannel">作成するチャネルの種類。</typeparam>
    <summary>クライアント上の Windows Communication Foundation (WCF) Web サービスにアクセスするためのクラス。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは、特別な <xref:System.ServiceModel.ChannelFactory> に自動的に追加する、 <xref:System.ServiceModel.Description.WebHttpBehavior> が存在しない場合、エンドポイントにします。 さらに、バインドが明示的に構成されていず、そのアドレスが HTTP または HTTPS アドレスの場合、エンドポイントに既定の <xref:System.ServiceModel.WebHttpBinding> を追加します。  
  
 コントラクトのすべての操作に戻り値がない場合、または <xref:System.IO.Stream> タイプの戻り値がある場合、<xref:System.ServiceModel.Web.WebChannelFactory%601> は適切なコンテンツ タイプのバインドを構成します。  
  
   
  
## 例  
 <xref:System.ServiceModel.Web.WebChannelFactory%601> クラスを使用して [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[BasicWebProgramming\#0](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#0)]
 [!code-vb[BasicWebProgramming\#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#0)]  
  
 詳しいコード例については、「[Basic WCF REST Programming Model Sample](http://msdn.microsoft.com/ja-jp/d3265542-febc-4018-84ea-32ddcfd2d874)」を参照してください。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding">チャネルを作成するときに使用するバインド。</param>
        <summary>
          <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このコンストラクターを使用して <xref:System.ServiceModel.Web.WebChannelFactory%601> を作成し、これを使用して [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[BasicWebProgramming\#1](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#1)]
 [!code-vb[BasicWebProgramming\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">チャネルを作成するときに使用するエンドポイント。</param>
        <summary>
          <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このコンストラクターを使用して <xref:System.ServiceModel.Web.WebChannelFactory%601> を作成し、これを使用して [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[BasicWebProgramming\#2](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#2)]
 [!code-vb[BasicWebProgramming\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (string configurationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configurationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointConfigurationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configurationName">To be added.</param>
        <summary>
          <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `endpointConfigurationName` パラメーターは、アプリケーション構成ファイルの`name` 要素の `<endpoint>` 属性と同じ値に設定する必要があります。  
  
   
  
## 例  
 このコンストラクターを使用して <xref:System.ServiceModel.Web.WebChannelFactory%601> インスタンスを作成し、このインスタンスを使用して [!INCLUDE[indigo2](~/includes/indigo2-md.md)] サービスを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[BasicWebProgramming\#3](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#3)]
 [!code-vb[BasicWebProgramming\#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channelType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added.</param>
        <summary>
          <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 型パラメーターについて渡される型はインターフェイスである必要があります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (Uri remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.Uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remoteAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="remoteAddress">呼び出される Web サービスの URI。</param>
        <summary>指定した <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> を使用して、<see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このコンストラクターを使用して <xref:System.ServiceModel.Web.WebChannelFactory%601> インスタンスを作成し、サービスを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[BasicWebProgramming\#4](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#4)]
 [!code-vb[BasicWebProgramming\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (System.ServiceModel.Channels.Binding binding, Uri remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.Binding binding, class System.Uri remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.Uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
        <Parameter Name="remoteAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="binding">使用するバインド。</param>
        <param name="remoteAddress">呼び出される Web サービスの URI。</param>
        <summary>指定したバインドと <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> を使用して <see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このコンストラクターを使用して <xref:System.ServiceModel.Web.WebChannelFactory%601> インスタンスを作成し、サービスを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[BasicWebProgramming\#5](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#5)]
 [!code-vb[BasicWebProgramming\#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebChannelFactory (string endpointConfigurationName, Uri remoteAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string endpointConfigurationName, class System.Uri remoteAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.#ctor(System.String,System.Uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpointConfigurationName" Type="System.String" />
        <Parameter Name="remoteAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="endpointConfigurationName">チャネルが構成されるアプリケーション構成ファイル内の名前。</param>
        <param name="remoteAddress">呼び出される Web サービスの URI。</param>
        <summary>指定したエンドポイント構成と <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> を使用して <see cref="T:System.Uri" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `endpointConfigurationName` パラメーターは、アプリケーション構成ファイルの`name` 要素の `<endpoint>` 属性と同じ値に設定する必要があります。  
  
   
  
## 例  
 このコンストラクターを使用して <xref:System.ServiceModel.Web.WebChannelFactory%601> インスタンスを作成し、サービスを呼び出す方法を次のコードに示します。  
  
 [!code-csharp[BasicWebProgramming\#6](~/samples/snippets/csharp/VS_Snippets_CFX/basicwebprogramming/cs/snippets.cs#6)]
 [!code-vb[BasicWebProgramming\#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/basicwebprogramming/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebChannelFactory`1.OnOpening" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメソッドは、<see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> が開かれたときに呼び出されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドが呼び出されるとき、<xref:System.ServiceModel.Web.WebChannelFactory%601> がバインドと関連付けられていない場合は、リモート アドレスの URI スキームを基に新しい <xref:System.ServiceModel.WebHttpBinding> が作成されます。 HTTPS リモート アドレスをバインドを適切に構成、 <xref:System.ServiceModel.WebHttpSecurity.Mode%2A> プロパティに設定 <xref:System.ServiceModel.WebHttpSecurityMode.Transport> と <xref:System.ServiceModel.WebHttpSecurity.Transport%2A> プロパティに設定 `None`します。<xref:System.ServiceModel.Web.WebChannelFactory%601> は、<xref:System.ServiceModel.Description.WebHttpBehavior> のインスタンスが存在しない場合は、それをエンドポイントに追加します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Web.WebChannelFactory`1" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>