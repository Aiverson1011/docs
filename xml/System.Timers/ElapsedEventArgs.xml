<Type Name="ElapsedEventArgs" FullName="System.Timers.ElapsedEventArgs">
  <TypeSignature Language="C#" Value="public class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElapsedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Timers.Timer.Elapsed" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 例  
 The following example instantiates a <xref:System.Timers.Timer> object that fires its <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> event every two seconds \(2000 milliseconds\), sets up an event handler for the  event, and starts the timer. The event handler displays the value of the <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=fullName> property each time it is raised.  
  
 [!code-cpp[System.Timers.Timer\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SignalTime">
      <MemberSignature Language="C#" Value="public DateTime SignalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SignalTime" />
      <MemberSignature Language="DocId" Value="P:System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="E:System.Timers.Timer.Elapsed" /> イベントが発生した日付\/時刻を取得します。</summary>
        <value>
          <see cref="E:System.Timers.Timer.Elapsed" /> イベントが発生した時刻。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> イベントの発生、 <xref:System.Threading.ThreadPool> スレッド、スレッドは同じ 1 つのイベント処理メソッドが実行されるようにへの呼び出し、 <xref:System.Timers.Timer.Stop%2A?displayProperty=fullName> メソッドが別のスレッドで実行します。 起こりえます、 <xref:System.Timers.Timer.Elapsed> イベントが発生した後、 <xref:System.Timers.Timer.Stop%2A> メソッドが呼び出されます。 この競合状態を比較するだけで防止できない、 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> した時刻のプロパティと、 <xref:System.Timers.Timer.Stop%2A> メソッドが呼び出されるイベント ハンドラー メソッドが既にする実行されているのでときに、 <xref:System.Timers.Timer.Stop%2A> メソッドが呼び出されると、または、その時点の間での実行を開始する可能性があるときに、 <xref:System.Timers.Timer.Stop%2A> メソッドが呼び出されると停止時刻を保存すると、その時点です。 呼び出すスレッドを防ぐために重要な場合、 <xref:System.Timers.Timer.Stop%2A> イベント処理メソッドがまだ実行中、中に行われてからメソッドより堅牢な同期メカニズムを使用して、 <xref:System.Threading.Monitor> クラスまたは <xref:System.Threading.Interlocked.CompareExchange%2A> メソッドです。 使用するコード、 <xref:System.Threading.Interlocked.CompareExchange%2A> メソッドを検索の例では、 <xref:System.Timers.Timer.Stop%2A?displayProperty=fullName> メソッドです。  
  
   
  
## 例  
 次の例のインスタンスを作成、 <xref:System.Timers.Timer> を発生させたオブジェクト、 <xref:System.Timers.Timer.Elapsed?displayProperty=fullName> 2 秒 \(2000年ミリ秒\) ごとのイベントがイベントのイベント ハンドラーを設定し、タイマーを起動します。 イベント ハンドラーの値を表示する、 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=fullName> プロパティごとにこのイベントは発生します。  
  
 [!code-cpp[System.Timers.Timer\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.Stop" />
      </Docs>
    </Member>
  </Members>
</Type>