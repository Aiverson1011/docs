<Type Name="CompletedEventHandler" FullName="System.Management.CompletedEventHandler">
  <TypeSignature Language="C#" Value="public delegate void CompletedEventHandler(object sender, CompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Management.CompletedEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Management</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Management.CompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">このメソッドを呼び出す対象のオブジェクトのインスタンス。</param>
    <param name="e">
      <see cref="T:System.Management.CompletedEventArgs" /> 理由、イベントが呼び出されたを指定します。</param>
    <summary>
      <see cref="E:System.Management.ManagementOperationObserver.Completed" /> イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、メソッドを非同期的に呼び出します。**Win32\_Process.Create** Calc.exe の新しいプロセスを作成するメソッドが呼び出されます。  
  
 [!code-csharp[wminet\_CompletedEventHandler\#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/wminet_CompletedEventHandler/cs/CompletedEventHandler.cs#1)]
 [!code-vb[wminet\_CompletedEventHandler\#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/wminet_CompletedEventHandler/vb/CompletedEventHandler.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>