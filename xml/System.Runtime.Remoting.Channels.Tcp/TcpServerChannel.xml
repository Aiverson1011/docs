<Type Name="TcpServerChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpServerChannel">
  <TypeSignature Language="C#" Value="public class TcpServerChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpServerChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>TCP プロトコルを使用してメッセージを送信するリモートの呼び出しのため、サーバー チャネルを実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 チャネルは、\(たとえば、コンピューターまたはアプリケーション ドメイン\) のリモート処理境界を越えてメッセージを転送します。<xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> クラスは、TCP プロトコルを使用してメッセージを転送します。  
  
 チャネルは、リモート呼び出しを転送する .NET Framework リモート処理インフラストラクチャによって使用されます。 リモート オブジェクトへの呼び出しは、クライアントが、呼び出しは、クライアント チャネルが送信され、サーバー チャネルで受信されるメッセージにシリアル化されます。 逆シリアル化し、処理されます。 戻り値はすべてがサーバー チャネルによって送信され、クライアント チャネルで受信します。  
  
 実行する追加のサーバー側でメッセージの処理を指定できますの実装、 <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> インターフェイスによって処理されるすべてのメッセージを介して、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> インスタンスが渡されます。  
  
 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> インスタンスは、バイナリ形式または SOAP 形式でシリアル化されたメッセージを受け取ります。  
  
 A <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> オブジェクトに設定できる構成プロパティが関連付けられている構成ファイルのいずれかの実行時間 \(静的を呼び出すことによって <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> メソッド\) またはプログラムによって \(を渡すことによって、 <xref:System.Collections.IDictionary> コレクション、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.%23ctor%2A> コンス トラクター\)。 これらの構成プロパティの一覧は、次を参照してください。 [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/ja-jp/226ecf74-ebbd-4ea0-a701-dcf4441deefe)します。  
  
> [!NOTE]
>  サーバー コンピューターが Windows 95\/98\/Me を実行している場合、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 安全では指定できません。  
  
   
  
## 例  
 次のコード例では、リモート処理可能な型の使用を示します。  
  
 [!code-cpp[Remoting\_TcpInfo\#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]
 [!code-csharp[Remoting\_TcpInfo\#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]  
  
 次のコード例の使用を示しています、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> リモート処理可能な型を公開するクラス。  
  
 [!code-cpp[Remoting\_TcpInfo\#30](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#30)]
 [!code-csharp[Remoting\_TcpInfo\#30](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#30)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">チャネルがリッスンするポート。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> は指定したポートでリッスンするクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用可能なポートが動的に割り当てられることを要求するには、設定、 `port` パラメーターを 0 \(ゼロ\)。  
  
   
  
## 例  
 次のコード例では、このコンス トラクターの使用を示します。  
  
 [!code-cpp[Remoting\_TcpInfo\#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#31)]
 [!code-csharp[Remoting\_TcpInfo\#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">A <see cref="T:System.Collections.IDictionary" /> コレクションは、チャネルが使用する構成プロパティの値を指定します。</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> チャネルで使用する実装。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> クラスを指定したチャネルのプロパティとシンクを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チャネル構成プロパティの詳細については、次を参照してください。 [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/ja-jp/226ecf74-ebbd-4ea0-a701-dcf4441deefe)します。  
  
> [!NOTE]
>  サーバー コンピューターが Windows 95\/98\/Me を実行している場合、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 安全では指定できません。  
  
 シンクの機能が必要でない場合は、設定、 `sinkProvider` パラメーターを `null`します。  
  
   
  
## 例  
 次のコード例を作成するこのコンス トラクターの使用を示しています、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 特定の構成プロパティを持つオブジェクト。  
  
 [!code-cpp[Remoting\_TcpAuth\#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/server.cpp#21)]
 [!code-csharp[Remoting\_TcpAuth\#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定したチャネル プロパティの形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">チャネルの名前。</param>
        <param name="port">チャネルがリッスンするポート。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> された指定した名前をクラスは、指定したポートでリッスンします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターの設定、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> プロパティを使用して、 `name` パラメーター。 1 つ以上のチャネルを登録する場合は、各チャネルに一意の名前は必要です。  
  
 使用可能なポートが動的に割り当てられることを要求するには、設定、 `port` パラメーターを 0 \(ゼロ\)。  
  
   
  
## 例  
 次のコード例を構築する方法を示しています、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>です。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2\#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2\#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.2/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider, class System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection authorizeCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider,System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
        <Parameter Name="authorizeCallback" Type="System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" />
      </Parameters>
      <Docs>
        <param name="properties">A <see cref="T:System.Collections.IDictionary" /> コレクション チャネルで使用する構成プロパティの値を指定します。</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> チャネルで使用する実装。</param>
        <param name="authorizeCallback">
          <see cref="T:System.Runtime.Remoting.Channels.IAuthorizeRemotingConnection" /> チャネルで使用する実装。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> クラスを指定したチャネルのプロパティ、シンク、および承認プロバイダーを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チャネル構成プロパティの詳細については、次を参照してください。 [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/ja-jp/226ecf74-ebbd-4ea0-a701-dcf4441deefe)します。  
  
> [!NOTE]
>  サーバー コンピューターが Windows 95\/98\/Me を実行している場合、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> 安全では指定できません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定したチャネル プロパティの形式が正しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 port, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name">チャネルの名前。</param>
        <param name="port">チャネルがリッスンするポート。</param>
        <param name="sinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> チャネルで使用する実装。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> は指定されたポートでリッスンし、指定したシンクを使用している指定された名前を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターの設定、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName%2A> プロパティを使用して、 `name` パラメーター。 1 つ以上のチャネルを登録する場合は、各チャネルに一意の名前は必要です。  
  
 使用可能なポートが動的に割り当てられることを要求するには、設定、 `port` パラメーターを 0 \(ゼロ\)。  
  
 シンクの機能が必要でない場合は、設定、 `sinkProvider` パラメーターを `null`します。  
  
   
  
## 例  
 次のコード例を構築する方法を示しています、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel>です。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>チャネル固有のデータを取得します。</summary>
        <value>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> チャネル固有のデータを格納します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンスとして返されますが <xref:System.Object?displayProperty=fullName>, のインスタンスにこのプロパティの値をキャストできる <xref:System.Runtime.Remoting.Channels.ChannelDataStore> するチャネルを記述する、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> オブジェクトの待機します。  
  
   
  
## 例  
 次のコード例では、このプロパティの使用を示します。  
  
 [!code-cpp[Remoting\_TcpInfo\#33](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#33)]
 [!code-csharp[Remoting\_TcpInfo\#33](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のチャネルの名前を取得します。</summary>
        <value>A <see cref="T:System.String" /> チャネルの名前を格納しているインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 登録されている各チャネルは、一意の名前を持ちます。 呼び出すときに、特定のチャネルを取得する名前が使用される <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>します。  
  
   
  
## 例  
 次のコード例では、このプロパティの使用を示します。  
  
 [!code-cpp[Remoting\_TcpInfo\#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting\_TcpInfo\#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のチャネルの優先順位を取得します。</summary>
        <value>チャネルに割り当てられる優先度を表す整数です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 優先度がどのチャネルに表示されるデータの順序を制御、 <xref:System.Runtime.Remoting.ObjRef> インスタンス。 低い優先順位のチャネルの前に高い優先順位のチャネル。 クライアントが記載されている順序でサーバーのチャネルに接続しようとした場合、 <xref:System.Runtime.Remoting.ObjRef> インスタンス。 既定の優先順位は 1 です。負の値の優先順位が許可されます。  
  
   
  
## 例  
 次のコード例では、このプロパティの使用を示します。  
  
 [!code-cpp[Remoting\_TcpInfo\#32](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/server.cpp#32)]
 [!code-csharp[Remoting\_TcpInfo\#32](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/server.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChannelUri">
      <MemberSignature Language="C#" Value="public string GetChannelUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetChannelUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetChannelUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のチャネルの URI を返します。</summary>
        <returns>現在のチャネルの URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、このメソッドの使用を示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public virtual string[] GetUrlsForUri (string objectUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectUri">Url が必要になるオブジェクトの URI。</param>
        <summary>現在のホストされている指定の URI を持つオブジェクトのすべての Url の配列を返します <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> インスタンス。</summary>
        <returns>現在のホストされている、指定した URI を持つオブジェクトの Url の配列 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>します。  
  
   
  
## 例  
 次のコード例の使用を示しています、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.GetUrlsForUri%2A> メソッドです。  
  
 [!code-cpp[TcpServerChannel.GetUrlsForUri\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpServerChannel.GetUrlsForUri\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpServerChannel.GetUrlsForUri\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpServerChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のチャネルがセキュリティで保護するかどうかを示すブール値を設定します。</summary>
        <value>現在のインスタンスがセキュリティで保護するかどうかを示すブール値。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.Parse(System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">リモートのよく知られているオブジェクトの URI を抽出するための URL。</param>
        <param name="objectURI">このメソッドが戻るとき、 <see cref="T:System.String" /> リモートのよく知られているオブジェクトの URI を保持しているインスタンス。 このパラメーターは初期化せずに渡されます。</param>
        <summary>チャネル URI とリモートのよく知られているオブジェクトの URI を指定された URL から抽出します。</summary>
        <returns>現在のチャネルの URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オブジェクトの URI は、特定のオブジェクト インスタンスを一意に識別する値です。  
  
   
  
## 例  
 次のコード例では、このメソッドの使用を示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CPP/server.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpServerChannel\#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpServerChannel/CS/server.cs#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">省略可能な初期化情報。</param>
        <summary>現在のチャネルの要求のリッスンを開始するように指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しく初期化されたチャネルでリッスンを開始するには、このメソッドを呼び出す必要はありません。  
  
 このメソッドを使用して、再起動後にチャネルでリッスンしている、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> メソッドが呼び出されてをチャネルでリッスンを停止します。  
  
 チャネルは、動的に割り当てられているポート番号を使用している場合、待機を再開したときに、ポート番号は変更できます。  
  
 特定の初期化状態をチャネルに渡すには、データ オブジェクトを使用できます。 特定の状態をチャネルに渡すしない場合は、設定 `data` に `null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">チャネルの省略可能な状態情報。</param>
        <summary>現在のチャネルの要求のリッスンを停止するように指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、チャネルでリッスンを停止します。 リッスンするには、再開するには、使用、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> メソッドです。  
  
 チャネルは、動的に割り当てられているポート番号を使用している場合、待機を再開したときに、ポート番号は変更できます。  
  
 特定の初期化状態をチャネルに渡すには、データ オブジェクトを使用できます。 特定の状態をチャネルに渡すしない場合は、設定 `data` に `null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel" /> は指定したポートでリッスンするクラス。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>