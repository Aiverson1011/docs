<Type Name="TcpChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpChannel">
  <TypeSignature Language="C#" Value="public class TcpChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>TCP プロトコルを使用してメッセージを送信するチャネルの実装を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 チャネルは、\(たとえば、コンピューター間でのアプリケーション ドメイン\) のリモート処理境界を越えてメッセージを転送します。<xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> クラスは、の機能を組み合わせるための便利なクラス、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> クラスおよび <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> クラスです。  
  
 チャネルは、リモート呼び出しを転送する .NET Framework リモート処理インフラストラクチャによって使用されます。 リモート オブジェクトへの呼び出しは、クライアントが、呼び出しは、クライアント チャネルが送信され、サーバー チャネルで受信されるメッセージにシリアル化されます。 逆シリアル化し、処理されます。 戻り値はすべてがサーバー チャネルによって送信され、クライアント チャネルで受信します。  
  
 実行する追加のメッセージの処理を指定できますの実装、 <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> と <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> によって処理されるすべてのメッセージを <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> が渡されます。  
  
 A <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> オブジェクトに設定できる構成プロパティが関連付けられている構成ファイルのいずれかの実行時間 \(静的を呼び出すことによって <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> メソッド\) またはプログラムによって \(を渡すことによって、 <xref:System.Collections.IDictionary> コレクション、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> コンス トラクター\)。 チャネル構成プロパティの詳細については、次を参照してください。 [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/ja-jp/226ecf74-ebbd-4ea0-a701-dcf4441deefe)します。  
  
> [!NOTE]
>  サーバー コンピューターが Windows 95\/98\/Me、サーバーを実行している場合 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 安全では指定できません。  
  
   
  
## 例  
 次のコード例を使用する方法を示しています、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> リモート処理サーバーとそのクライアントを設定します。 この例には、3 つの部分、サーバー、クライアント、および、サーバーとクライアントを使用するリモート オブジェクトが含まれています。  
  
 次のコード例では、サーバーを示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#1)]  
  
 次のコード例では、このサーバーのクライアントを示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#10)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#10)]  
  
 次のコード例では、サーバーとクライアントを使用するリモート オブジェクトを示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#20](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/common.cpp#20)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/common.cs#20)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> クラスをアクティブにするクライアント チャネルとサーバー チャネルではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定のコンス トラクターでは、すべてのフィールドを既定値を初期化します。 既定のコンス トラクターを使用する場合、チャネルは、クライアント チャネルとしてのみ機能し、任意のポートでリッスンしません。  
  
   
  
## 例  
 次のコード例では、このコンス トラクターを使用する方法を示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#11](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#11)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#11](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">サーバー チャネルがリッスンするポート。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> サーバー チャネルは、指定したポートでリッスンを持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 リモート処理システムが自動的に開かれたポートを選択することを要求するには、ポート 0 \(ゼロ\) を指定します。 これが作成されます、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> インスタンスを動的に割り当てられたポートで要求をリッスンします。 確認するクライアントでこれは、通常、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> がコールバック メソッドを待機します。  
  
 0 は、コンス トラクターに渡された場合、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 、空いているポートを使用するインスタンス化します。  
  
   
  
## 例  
 次のコード例では、このメソッドの使用方法を示します。 使用可能なポートが動的に割り当てられることを要求するには、設定、 `port` パラメーターを 0 にします。  
  
 [!code-cpp[RemotingConfiguration.ServerActivation\#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation\#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation\#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/VB/server.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="clientSinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
        <Parameter Name="serverSinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties">A <see cref="T:System.Collections.IDictionary" /> コレクション クライアントとサーバー チャネルを使用して構成のプロパティの値を指定します。</param>
        <param name="clientSinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> クライアント チャネルで使用する実装。</param>
        <param name="serverSinkProvider">
          <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> サーバー チャネルで使用する実装。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> クラスが指定された構成プロパティとシンクを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チャネル構成プロパティの詳細については、次を参照してください。 [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/ja-jp/226ecf74-ebbd-4ea0-a701-dcf4441deefe)します。  
  
> [!NOTE]
>  サーバー コンピューターが Windows 95\/98\/Me、サーバーを実行している場合 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> 安全では指定できません。  
  
 チャネル シンクは、リモート オブジェクトにメッセージを送信するトランスポート機構によって使用されるストリームと同様に、チャネルで転送される基になるメッセージへのアクセスをできるようにするプラグイン ポイントを提供します。 チャネル シンクも、クライアントとサーバー間でメッセージを転送します。 チャネル シンクはチェーンでは、一緒にリンクして、すべてのチャネルのメッセージはこのシンク チェーンをメッセージが最後にシリアル化および転送します。 シンクの機能が必要でない場合は、設定、 `clientSinkProvider` と `serverSinkProvider` パラメーター `null`します。  
  
   
  
## 例  
 次のコード例では、このコンス トラクターを使用する方法を示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定したチャネルのプロパティが正しく書式設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>チャネル固有のデータを取得します。</summary>
        <value>A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> チャネル固有のデータを格納しているインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 インスタンスとして返されますが <xref:System.Object?displayProperty=fullName>, のインスタンスにこのプロパティの値をキャストできる <xref:System.Runtime.Remoting.Channels.ChannelDataStore> するチャネルを記述する、 <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> オブジェクトの待機します。  
  
   
  
## 例  
 次のコード例では、このプロパティを使用する方法を示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#5)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のチャネルの名前を取得します。</summary>
        <value>A <see cref="T:System.String" /> チャネルの名前を格納しています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 登録されている各チャネルは、一意の名前を持ちます。 呼び出すときに、特定のチャネルを取得する名前が使用される <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>します。 設定する、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> プロパティ、インデックス付きに渡されるディクショナリにプロパティの値"name"を割り当て、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> コンス トラクターです。  
  
   
  
## 例  
 次のコード例では、このプロパティを使用する方法を示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#3)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のチャネルの優先順位を取得します。</summary>
        <value>チャネルに割り当てられる優先度を表す整数です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次のコード例では、このプロパティを使用する方法を示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#4)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">新しいシンクがメッセージを配信する先の URL です。<see langword="null" /> の可能性があります。</param>
        <param name="remoteChannelData">新しいシンクがメッセージを配信する先のリモート ホストのチャネル データ オブジェクト。<see langword="null" /> の可能性があります。</param>
        <param name="objectURI">このメソッドが戻るとき、指定した URL またはチャネル データ オブジェクトにメッセージを配信する新しいチャネル メッセージ シンクの URI を格納します。 このパラメーターは初期化せずに渡されます。</param>
        <summary>指定した URL またはチャネル データ オブジェクトにメッセージを配信するチャネル メッセージ シンクが返されます。</summary>
        <returns>指定した URL またはチャネル データ オブジェクトにメッセージを配信するチャネル メッセージ シンク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A> メソッドには、URL またはチャネルのデータ オブジェクトを指定するか、メッセージを配信するチャネル メッセージ シンクが返されます。 場合、 `uri` パラメーターは `null`, 、`remoteChannelData` 、シンクのターゲットとして使用します。 いずれか、 `url` または `remoteChannelData` パラメーターを指定できます `null`, 、両方ではないです。  
  
 チャネル シンクは、リモート オブジェクトにメッセージを送信するトランスポート機構によって使用されるストリームと同様に、チャネルで転送される基になるメッセージへのアクセスをできるようにするプラグイン ポイントを提供します。 チャネル シンクは互いにリンクされてのチェーン `ChannelSinkProviders` し、すべてのチャネルのメッセージはこのシンク チェーンをメッセージが最後にシリアル化および転送します。  
  
   
  
## 例  
 このメソッドを使用する方法を次のコード例に示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public string[] GetUrlsForUri (string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectURI">Url が必要になるオブジェクトの URI。</param>
        <summary>現在のホストされている指定の URI を持つオブジェクトのすべての Url の配列を返します <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />します。</summary>
        <returns>現在のホストされている、指定した URI を持つオブジェクトの Url の配列 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用して <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>します。  
  
   
  
## 例  
 このメソッドを使用する方法を次のコード例に示します。  
  
 [!code-cpp[TcpChannel.GetUrlsForUri\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpChannel.GetUrlsForUri\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpChannel.GetUrlsForUri\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または現在のチャネルがセキュリティで保護するかどうかを示すブール値を設定します。</summary>
        <value>現在のインスタンスがセキュリティで保護するかどうかを示すブール値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティ設定する必要を明示的に設定をするだけで十分であるため <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url">リモートのよく知られているオブジェクトの URI を抽出するための URL。</param>
        <param name="objectURI">このメソッドが戻るとき、 <see cref="T:System.String" /> リモートのよく知られているオブジェクトの URI を保持しています。 このパラメーターは初期化せずに渡されます。</param>
        <summary>チャネル URI とリモートのよく知られているオブジェクトの URI を指定された URL から抽出します。</summary>
        <returns>現在のチャネルの URI。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オブジェクトの URI は、特定のオブジェクト インスタンスを一意に識別する値です。  
  
   
  
## 例  
 このメソッドを使用する方法を次のコード例に示します。  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#6)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel\#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">省略可能な初期化情報。</param>
        <summary>現在のチャネルの要求のリッスンを開始するように指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 新しく初期化されたチャネルでリッスンを開始するには、このメソッドを呼び出す必要はありません。  
  
 このメソッドを使用して、再起動後にチャネルでリッスンしている、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> メソッドが呼び出されています。  
  
 チャネルは、動的に割り当てられているポート番号を使用している場合、待機を再開したときに、ポート番号は変更できます。  
  
 `data` パラメーターは、特定の初期化状態をチャネルに渡すを使用することができます。 特定の状態をチャネルに渡すしない場合は、設定 `data` に `null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">チャネルの省略可能な状態情報。</param>
        <summary>現在のチャネルの要求のリッスンを停止するように指示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドを使用すると、チャネルでリッスンを停止します。 リッスンするには、再開するには、使用、 <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> メソッドです。  
  
 チャネルは、動的に割り当てられているポート番号を使用している場合、待機を再開したときに、ポート番号は変更できます。  
  
 `data` パラメーターは、特定の初期化状態をチャネルに渡すを使用することができます。 特定の状態をチャネルに渡すしない場合は、設定 `data` に `null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>