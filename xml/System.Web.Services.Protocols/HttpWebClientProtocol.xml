<Type Name="HttpWebClientProtocol" FullName="System.Web.Services.Protocols.HttpWebClientProtocol">
  <TypeSignature Language="C#" Value="public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpWebClientProtocol extends System.Web.Services.Protocols.WebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.WebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>HTTP トランスポート プロトコルを使用するすべての XML Web サービス クライアント プロキシ用の基本クラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスのプロパティは、XML Web サービス要求と応答の送信に使用する HTTP 要求オブジェクトの動作を制御に使用されます。 プロパティをプロパティに割り当て<xref:System.Net.HttpWebRequest>です。  
  
 HTTP を使用して XML Web サービスと通信するためから直接または間接的に派生するプロキシ クラスを作成する必要があります<xref:System.Web.Services.Protocols.HttpWebClientProtocol>XML Web サービスです。 プロキシ クラスを手動で作成するには、代わりに、Wsdl.exe ツールを使用して指定された XML Web サービスのサービスの説明のプロキシ クラスを作成することができます。  
  
 HttpWebClientProtocol がすべてのプロキシ クラスの基底クラスであるために、そのプロパティは、プロキシ クラスではします。 これらのプロパティは、基になるトランスポートの要求の動作を制御するために役立ちます。 たとえば、使用して、<xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A>ファイアウォール経由の XML Web サービスを呼び出すためのプロパティです。 これらのプロパティの多くは、初期化に使用される、 <xref:System.Net.HttpWebRequest> Web 要求を行います。  
  
 <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>、 <xref:System.Web.Services.Protocols.HttpGetClientProtocol>、および<xref:System.Web.Services.Protocols.HttpPostClientProtocol>から直接または間接的に派生<xref:System.Web.Services.Protocols.HttpWebClientProtocol>soap のサポートを提供する HTTP GET 要求および HTTP POST それぞれします。  
  
   
  
## 例  
 次の例は、名前付き XML Web サービスを呼び出して、ASP.NET Web フォーム`Math`です。 内で、`EnterBtn_Click`関数、Web フォームにより、サーバーを自動的に他のサイトにクライアントをリダイレクトします。 また、クライアント認証の資格情報、プロキシの設定、要求のエンコーディングおよび要求のタイムアウトが、XML Web サービス メソッドを呼び出す前に設定します。  
  
 [!code-csharp[Classic HttpWebClientProtocol Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/CS/sourcecs.aspx#1)]
 [!code-vb[Classic HttpWebClientProtocol Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>このクラスのプロパティはの新しいインスタンスにコピー、 <see cref="T:System.Net.WebRequest" /> XML Web サービス メソッド呼び出しの各オブジェクトです。 同じ XML Web サービス メソッドを呼び出すことができます、<see cref="T:System.Web.Services.Protocols.WebClientProtocol" />インスタンス、同時に異なるスレッドからは同期されませんプロパティの一貫性のあるスナップショットを取得する転送されることを確認するための実行、<see cref="T:System.Net.WebRequest" />オブジェクト。 したがって、プロパティを変更し、別の同時実行メソッドを呼び出す必要がある場合、XML Web の別のインスタンスを使用する必要がありますスレッドはサービス プロキシや、独自に同期を提供します。</threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Net.WebRequest" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpWebClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクライアントがサーバーのリダイレクトを自動的に従うかどうかを設定します。</summary>
        <value>
          <see langword="true" /> サーバーのリダイレクトに従うクライアントを自動的にリダイレクトするにはそれ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 クライアントは、ユーザー名とパスワードなどの認証情報を送信した場合、セキュリティが低下することができますので、リダイレクトするサーバーを有効にするたくないです。  
  
 A <xref:System.Net.WebException> 場合にスローされますが、 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect%2A> プロパティは、 `false` Web サーバーが要求のリダイレクトしようとします。<xref:System.Net.WebException.Response%2A> プロパティが含まれています、 <xref:System.Net.HttpWebResponse> オブジェクトで両方、 <xref:System.Net.HttpWebResponse.StatusCode%2A> と <xref:System.Net.HttpWebResponse.Headers%2A> プロパティは、実行しようとしたリダイレクトに関する詳細情報を反映します。<xref:System.Net.HttpWebResponse.StatusCode%2A> プロパティが含まれています、 <xref:System.Net.HttpStatusCode> \(301、302、および 307\) HTTP リダイレクト状態コードのいずれかに相当し、 `Location` 内のヘッダー、 <xref:System.Net.HttpWebResponse.Headers%2A> コレクションが要求で試みたにリダイレクトされる URI を指します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">
          <see cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect" /> プロパティは、 <see langword="false" /> Web サーバーが要求のリダイレクトしようとします。</exception>
        <altmember cref="P:System.Net.HttpWebRequest.AllowAutoRedirect" />
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="protected void CancelAsync (object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CancelAsync(object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userState">非同期呼び出しの最後のパラメーターとして提供されたオブジェクト、 <see langword="Begin" /> メソッドです。</param>
        <summary>呼び出しが既に完了しない限り、XML Web サービス メソッドへの非同期呼び出しをキャンセルします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント証明書のコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> クライアント証明書を表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、XML Web サービス メソッドを呼び出すときに、1 つまたは複数はクライアント証明書とも呼ばれる Authenticode X.509 v.3 証明書を渡すためのクライアントを使用します。 クライアント証明書を使用する XML Web サービス メソッドが構成される場合、クライアント証明書がクライアントの認証のための 1 つのメカニズムとして使用できます。 クライアント証明書の設定の詳細については、インターネット インフォメーション サービス \(IIS\) のマニュアルを参照してください。  
  
   
  
## 例  
 次のコード例をファイルからクライアント証明書の読み込みに追加する方法を示しています、 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates%2A> 認証にクライアント証明書を使用する XML Web サービス メソッドを呼び出すためのプロパティです。  
  
 [!code-csharp[HttpWebClientProtocol.ClientCertificates\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/CS/certcs.aspx#1)]
 [!code-vb[HttpWebClientProtocol.ClientCertificates\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.ClientCertificates/VB/certvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはクッキーのコレクションを設定します。</summary>
        <value>A <see cref="T:System.Net.CookieContainer" /> Web サービス クライアントのクッキーを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML Web サービス メソッドは、セッション状態を使用している場合、cookie に渡されます応答ヘッダーに戻り、その XML Web サービス クライアントのセッションを一意に識別する XML Web サービス クライアント。 XML Web サービス クライアントのセッション状態を維持するためには、クライアントが cookie を格納する必要があります。 クライアントの新しいインスタンスを作成することで、HTTP クッキーを受信する <xref:System.Net.CookieContainer> に割り当てると、 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> XML Web サービス メソッドを呼び出す前に、プロキシ クラスのプロパティです。 プロキシ クラスのインスタンスがスコープ外に出るときに、セッション状態を維持する必要がある場合、クライアントは、XML Web サービス呼び出しの間で HTTP クッキーを格納する必要があります。 保存し、Web フォームのクライアントが HTTP クッキーを格納するなど、 <xref:System.Net.CookieContainer> 独自のセッション状態にします。 すべての XML Web サービスは、セッション状態を使用し、したがってクライアントは常に使用する必要ありませんので、 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer%2A> クライアント プロキシのプロパティは、XML Web サービスのマニュアルの必要があります状態にセッション状態が使用されているかどうか。  
  
   
  
## 例  
 次のコード例は、セッション状態を使用する XML Web サービスの Web フォーム クライアントです。 クライアントは、クライアントのセッション状態に格納することによって、セッションを一意に識別する HTTP クッキーを格納します。  
  
 [!code-csharp[HttpWebClientProtocol.CookieContainer\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/CS/serverusageclientcs.aspx#1)]
 [!code-vb[HttpWebClientProtocol.CookieContainer\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol.CookieContainer/VB/serverusageclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CookieContainer" />
        <altmember cref="P:System.Web.Services.WebMethodAttribute.EnableSession" />
      </Docs>
    </Member>
    <Member MemberName="EnableDecompression">
      <MemberSignature Language="C#" Value="public bool EnableDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この展開が有効にするかどうかを示す値を取得または <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />です。</summary>
        <value>
          <see langword="true" /> 圧縮解除を有効にする場合は、 <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />。 そうしないと、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateXmlMappings">
      <MemberSignature Language="C#" Value="public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GenerateXmlMappings(class System.Type type, class System.Collections.ArrayList mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="mappings" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> XML Web サービス メソッドを公開します。</param>
        <param name="mapping">To be added.</param>
        <summary>取得、 <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 各 XML Web サービス メソッドの指定した型によって公開され、指定したマッピングを格納 <see cref="T:System.Collections.ArrayList" />します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="type" /> に割り当てることが、 <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateXmlMappings">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mapping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable GenerateXmlMappings(class System.Type[] types, class System.Collections.ArrayList mapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="mappings" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="types">型の配列 <see cref="T:System.Type" /> XML Web サービス メソッドを公開する型を格納しています。</param>
        <param name="mapping">To be added.</param>
        <summary>取得、 <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 各 XML Web サービス メソッドが、指定した型によって公開され、指定したマッピングを格納 <see cref="T:System.Collections.ArrayList" />, などでも、 <see cref="T:System.Collections.Hashtable" /> このメソッドから返される。</summary>
        <returns>A <see cref="T:System.Collections.Hashtable" /> を含む、 <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 指定した型によって公開されている各 XML Web サービス メソッドにします。 含まれる型 <paramref name="types" /> キーとして使用されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <see cref="T:System.Uri" /> を作成するため、 <see cref="T:System.Net.WebRequest" />です。</param>
        <summary>作成、 <see cref="T:System.Net.WebRequest" /> uri に指定します。</summary>
        <returns>作成された <see cref="T:System.Net.WebRequest" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="uri" /> パラメーターが <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <see cref="T:System.Net.WebRequest" /> 元となると、応答を取得します。</param>
        <summary>XML Web サービス メソッドに、同期要求から応答を返します。</summary>
        <returns>XML Web サービス メソッドに対する同期要求からの応答です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebResponse">
      <MemberSignature Language="C#" Value="protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebResponse GetWebResponse(class System.Net.WebRequest request, class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="request">
          <see cref="T:System.Net.WebRequest" /> 元となると、応答を取得します。</param>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> に渡す <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> 応答が完了するとします。</param>
        <summary>XML Web サービス メソッドに非同期の要求から応答を返します。</summary>
        <returns>XML Web サービス メソッドに対する非同期要求からの応答です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはファイアウォール経由の XML Web サービス要求を行うためのプロキシ情報を設定します。</summary>
        <value>
          <see cref="T:System.Net.IWebProxy" /> ファイアウォール経由の要求を行うためのプロキシ情報を格納します。 既定値は、オペレーティング システムのプロキシ設定です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> プロパティの場合は、クライアントは、システムの設定の場合よりも、別のプロキシ設定を使用する必要があります。 使用して、 <xref:System.Net.WebProxy> クラスを実装しているために、プロキシ設定を設定する <xref:System.Net.IWebProxy>です。  
  
 既定のプロキシ設定は、構成ファイルで設定できます。 詳細については、「[&#91;\<topic:\/\/cpconconfiguringinternetapplications\>&#93;](http://msdn.microsoft.com/ja-jp/bb707c72-eed2-4a82-8800-c9e68df2fd4f)」を参照してください。  
  
   
  
## 例  
 次の例では、次のプロキシ設定を呼び出す前に、 `Math` XML Web サービス: http:\/\/proxyserver、80 にプロキシ ポートとローカル アドレスに対してプロキシ サーバーをバイパスするプロキシ サーバー。  
  
 [!code-cpp[Classic HttpWebClientProtocol.Proxy Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpWebClientProtocol.Proxy Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/CS/source.cs#1)]
 [!code-vb[Classic HttpWebClientProtocol.Proxy Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpWebClientProtocol.Proxy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.IWebProxy" />
        <altmember cref="T:System.Net.WebProxy" />
      </Docs>
    </Member>
    <Member MemberName="UnsafeAuthenticatedConnectionSharing">
      <MemberSignature Language="C#" Value="public bool UnsafeAuthenticatedConnectionSharing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeAuthenticatedConnectionSharing" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定する場合、クライアントは NTLM 認証をホストする Web サーバーに接続する、XML Web サービス、接続の共有が有効になっているかどうかを示す値。</summary>
        <value>
          <see langword="true" /> 接続の共有が有効な場合それ以外の場合、 <see langword="false" />です。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの値を設定、 <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> のプロパティ、 <xref:System.Net.HttpWebRequest> Web サーバーと通信するために使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing" />
        <altmember cref="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または、各要求と一緒に送信されるユーザー エージェント ヘッダーの値を設定します。</summary>
        <value>HTTP プロトコルのユーザー エージェント ヘッダーの値。 既定値は"MS Web サービス クライアント プロトコル <paramref name="number" /> "ここで、 <paramref name="number" /> 共通言語ランタイム \(たとえば、1.0.3705.0\) のバージョンです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ユーザー エージェント文字列は、クライアントを識別するために Web サーバーを使用します。  
  
   
  
## 例  
 [!code-cpp[HttpWebClientProtocol\_UserAgent\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CPP/httpwebclientprotocol_useragent.cpp#1)]
 [!code-csharp[HttpWebClientProtocol\_UserAgent\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/CS/httpwebclientprotocol_useragent.cs#1)]
 [!code-vb[HttpWebClientProtocol\_UserAgent\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpWebClientProtocol_UserAgent/VB/httpwebclientprotocol_useragent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpWebRequest.UserAgent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWebResponse">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>XML Web サービス メソッドへの要求から応答を返します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GenerateXmlMappings">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得、 <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> 指定した型によって公開されている各 XML Web サービス メソッドにします。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>