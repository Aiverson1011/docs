<Type Name="HttpGetClientProtocol" FullName="System.Web.Services.Protocols.HttpGetClientProtocol">
  <TypeSignature Language="C#" Value="public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpGetClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP\-GET プロトコルを使用する XML Web サービス クライアント プロキシの基本クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 XML Web サービス クライアントは、HTTP GET プロトコルを使用する場合は、パラメーターは、URL 内でエンコードされ、プレーンな XML で応答が返されます。  
  
 XML Web サービス クライアントは、ASP.NET を使用して、直接派生するプロキシ クラスを作成する場合、またはから直接 <xref:System.Web.Services.Protocols.WebClientProtocol> 呼び出そうとする XML Web サービス用に作成する必要があります。 XML Web サービス クライアントが HTTP を使用して XML Web サービスを呼び出す場合からプロキシ クラスを派生させる <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, 、さらにから派生した <xref:System.Web.Services.Protocols.WebClientProtocol>します。  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> <xref:System.Web.Services.Protocols.HttpPostClientProtocol> から派生 <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, 、それぞれ、HTTP\-GET および HTTP\-POST プロトコルを使用して XML Web サービス メソッドを呼び出すためのサポートを提供します。 SOAP を使用して XML Web サービスを呼び出すクライアントから派生しなければならない <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>します。  
  
 プロキシ クラスを構築する方法の詳細については、「 [&#91;\<topic:\/\/cpconcreatingwebserviceproxy\>&#93;](http://msdn.microsoft.com/ja-jp/142d91f5-3249-4cfc-a431-1f3acb76d756)します。  
  
   
  
## 例  
 次の例の Wsdl.exe によって生成されたプロキシ クラスは、 `Math` 次の XML Web サービスです。 プロキシ クラスの派生元 <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, 、抽象から派生した <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> クラスです。  
  
 [!code-cpp[Classic HttpGetClientProtocol Example\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 次の例は、 `Math` 上記のプロキシ クラスが作成された XML Web サービスです。  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpGetClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 [!code-cpp[HttpGetClientProtocol\_Constructor\#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CPP/httpgetclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpGetClientProtocol\_Constructor\#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CS/httpgetclientprotocol_constructor.cs#1)]
 [!code-vb[HttpGetClientProtocol\_Constructor\#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/VB/httpgetclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <see cref="T:System.Uri" /> を作成するときに使用する、 <see cref="T:System.Net.WebRequest" />です。</param>
        <summary>作成、 <see cref="T:System.Net.WebRequest" /> 指定した URI 用のインスタンス。</summary>
        <returns>
          <see cref="T:System.Net.WebRequest" /> インスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、基本バージョンの <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> に HTTP GET を使用して、XML Web サービスに対する HTTP 要求を作成するように指定します。 このメソッドをオーバーライドすることでさらにカスタマイズできるよう、 <xref:System.Net.WebRequest> オブジェクトの XML Web サービス要求が行われる前にします。 たとえば、要求にカスタム ヘッダーを追加できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="uri" /> パラメーターが null または長さが 0 です。</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>