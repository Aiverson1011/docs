<Type Name="IBidirectionalContainer&lt;TValue&gt;" FullName="Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer&lt;TValue&gt;">
  <TypeSignature Language="C#" Value="public interface IBidirectionalContainer&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IBidirectionalContainer`1&lt;TValue&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualC.STLCLR</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="TValue">被制御シーケンス内の要素の型。</typeparam>
    <summary>前方と後方の両の繰り返し処理をサポートするコンテナーのインターフェイスです。 双方向反復処理を実装するコンテナーは、次の操作をサポートします。 順方向の位置を 1 つを呼び出すことによって移動 <c>operator++</c>, 、および旧バージョンとの位置を 1 つを呼び出すことによって移動 <c>operator--</c>します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>