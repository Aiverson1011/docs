<Type Name="EventLogSession" FullName="System.Diagnostics.Eventing.Reader.EventLogSession">
  <TypeSignature Language="C#" Value="public class EventLogSession : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogSession extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogSession" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>管理し、コンピューター上のイベント ログとイベント プロバイダーに関する情報を収集できるよう、ローカル コンピューターまたはリモート コンピューター上のイベント ログ サービスにアクセスするために使用します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このクラスを使用して、コードの例「 [How To: Query for Events](http://msdn.microsoft.com/ja-jp/5231a436-4cf2-4539-90d2-a04813aba069), 、[How to: Retrieve Information About an Event Publisher](http://msdn.microsoft.com/ja-jp/2a3e897f-25a9-4dad-8541-171ac49970a3) または [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/ja-jp/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac)です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>新しい初期化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクト、ローカル イベント ログ サービスとの接続を確立します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogSession (string server);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string server) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="server">イベント ログ サービスに接続するコンピューターの名前。</param>
        <summary>新しい初期化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクト、および指定したコンピューター上のイベント ログ サービスとの接続を確立します。 メソッドを呼び出して、ユーザーの資格情報 \(ユーザー名とパスワード\) は、リモート コンピューターへのアクセス資格情報は使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogSession (string server, string domain, string user, System.Security.SecureString password, System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string server, string domain, string user, class System.Security.SecureString password, valuetype System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="server" Type="System.String" />
        <Parameter Name="domain" Type="System.String" />
        <Parameter Name="user" Type="System.String" />
        <Parameter Name="password" Type="System.Security.SecureString" />
        <Parameter Name="logOnType" Type="System.Diagnostics.Eventing.Reader.SessionAuthentication" />
      </Parameters>
      <Docs>
        <param name="server">イベント ログ サービスに接続するコンピューターの名前。</param>
        <param name="domain">指定したユーザーのドメイン。</param>
        <param name="user">リモート コンピューターに接続するために使用するユーザー名。</param>
        <param name="password">リモート コンピューターへの接続に使用するパスワード。</param>
        <param name="logOnType">リモート コンピューターへの接続に使用する接続の種類。</param>
        <summary>新しい初期化 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクト、および指定したコンピューター上のイベント ログ サービスとの接続を確立します。 指定された資格情報 \(ユーザー名とパスワード\) は、リモート コンピューターへのアクセスに資格情報に使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelCurrentOperations">
      <MemberSignature Language="C#" Value="public void CancelCurrentOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelCurrentOperations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このセッション オブジェクトが接続されているイベント ログ サービスの現在アクティブな操作が \(イベント ログの読み取り、イベント ログへのサブスクライブなど\) をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearLog">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたイベント ログからイベントを消去します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このクラスを使用して、コードの例「 [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/ja-jp/7753ff87-f402-41ac-ac64-767e04dd1773)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="public void ClearLog (string logName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearLog(string logName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">すべてのイベントを消去するイベント ログの名前。</param>
        <summary>指定されたイベント ログからイベントを消去します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このクラスを使用して、コードの例「 [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/ja-jp/7753ff87-f402-41ac-ac64-767e04dd1773)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearLog">
      <MemberSignature Language="C#" Value="public void ClearLog (string logName, string backupPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearLog(string logName, string backupPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="backupPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logName">すべてのイベントを消去するイベント ログの名前。</param>
        <param name="backupPath">消去したイベントを保存するファイルのパス。 ファイルは、.evtx で終わる必要があります。</param>
        <summary>指定されたイベント ログからイベントを消去し、消去したイベントを指定したファイルに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このクラスを使用して、コードの例「 [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/ja-jp/7753ff87-f402-41ac-ac64-767e04dd1773)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このオブジェクトによって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージ リソースとアンマネージ リソースの両方を解放する場合は <see langword="true" />。アンマネージ リソースだけを解放する場合は <see langword="false" />。</param>
        <summary>このオブジェクトによって使用されているアンマネージ リソースを解放し、必要に応じてマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportLog">
      <MemberSignature Language="C#" Value="public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLog(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">イベントをエクスポートするイベント ログまたはイベントのエクスポート対象のイベント ログ ファイルへのパスの名前。</param>
        <param name="pathType">Path パラメーターで使用される文字列が、イベント ログまたはイベント ログ ファイルへのパスの名前を指定するかどうかを指定します。</param>
        <param name="query">エクスポートするイベントの選択に使用されるクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
        <param name="targetFilePath">このメソッドが実行された後のエクスポートされたイベントが保存されるログ ファイル \(最後が .evtx\) へのパス。</param>
        <summary>イベントを外部のログ ファイルにエクスポートします。 イベント メッセージがないイベントが格納されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportLog">
      <MemberSignature Language="C#" Value="public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLog(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
        <Parameter Name="tolerateQueryErrors" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">イベントをエクスポートするイベント ログまたはイベントのエクスポート対象のイベント ログ ファイルへのパスの名前。</param>
        <param name="pathType">Path パラメーターで使用される文字列が、イベント ログまたはイベント ログ ファイルへのパスの名前を指定するかどうかを指定します。</param>
        <param name="query">エクスポートするイベントの選択に使用されるクエリ。 クエリから返されるイベントのみがエクスポートされます。</param>
        <param name="targetFilePath">このメソッドが実行された後のエクスポートされたイベントが保存されるログ ファイル \(最後が .evtx\) へのパス。</param>
        <param name="tolerateQueryErrors">
          <see langword="true" /> 一部のログで指定されたクエリが失敗した場合でも、イベントをエクスポートするメソッドを続けることを示すと <see langword="false" /> こと、このメソッドは、指定したクエリが失敗したときにイベントをエクスポートするのには続行されないことを示します。</param>
        <summary>イベントを外部のログ ファイルにエクスポートします。 いくつかのログに、指定されたクエリが失敗した場合でも、イベントをエクスポートするメソッドを続けることを示すために、フラグを設定できます。 イベント メッセージがないイベントが格納されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportLogAndMessages">
      <MemberSignature Language="C#" Value="public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLogAndMessages(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">イベントをエクスポートするイベント ログまたはイベントのエクスポート対象のイベント ログ ファイルへのパスの名前。</param>
        <param name="pathType">Path パラメーターで使用される文字列が、イベント ログまたはイベント ログ ファイルへのパスの名前を指定するかどうかを指定します。</param>
        <param name="query">エクスポートするイベントの選択に使用されるクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
        <param name="targetFilePath">このメソッドが実行された後のエクスポートされたイベントが保存されるログ ファイル \(最後が .evtx\) へのパス。</param>
        <summary>イベントとそのメッセージを外部のログ ファイルにエクスポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 イベント メッセージは、既定の言語でエクスポートします。  
  
   
  
## 例  
 このクラスを使用して、コードの例「 [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/ja-jp/7753ff87-f402-41ac-ac64-767e04dd1773)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportLogAndMessages">
      <MemberSignature Language="C#" Value="public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, System.Globalization.CultureInfo targetCultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExportLogAndMessages(string path, valuetype System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, class System.Globalization.CultureInfo targetCultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="targetFilePath" Type="System.String" />
        <Parameter Name="tolerateQueryErrors" Type="System.Boolean" />
        <Parameter Name="targetCultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="path">イベントをエクスポートするイベント ログまたはイベントのエクスポート対象のイベント ログ ファイルへのパスの名前。</param>
        <param name="pathType">Path パラメーターで使用される文字列が、イベント ログまたはイベント ログ ファイルへのパスの名前を指定するかどうかを指定します。</param>
        <param name="query">エクスポートするイベントの選択に使用されるクエリ。  クエリから返されるイベントのみがエクスポートされます。</param>
        <param name="targetFilePath">このメソッドが実行された後のエクスポートされたイベントが保存されるログ ファイル \(最後が .evtx\) へのパス。</param>
        <param name="tolerateQueryErrors">
          <see langword="true" /> 一部のログで指定されたクエリが失敗した場合でも、イベントをエクスポートするメソッドを続けることを示すと <see langword="false" /> こと、このメソッドは、指定したクエリが失敗したときにイベントをエクスポートするのには続行されないことを示します。</param>
        <param name="targetCultureInfo">エクスポートするイベント メッセージに含まれる言語を指定するカルチャ。</param>
        <summary>イベントとそのメッセージを外部のログ ファイルにエクスポートします。 いくつかのログに、指定されたクエリが失敗した場合でも、イベントをエクスポートするメソッドを続けることを示すために、フラグを設定できます。 イベント メッセージは、指定した言語でエクスポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このクラスを使用して、コードの例「 [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/ja-jp/7753ff87-f402-41ac-ac64-767e04dd1773)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogInformation">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation (string logName, System.Diagnostics.Eventing.Reader.PathType pathType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation(string logName, valuetype System.Diagnostics.Eventing.Reader.PathType pathType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logName" Type="System.String" />
        <Parameter Name="pathType" Type="System.Diagnostics.Eventing.Reader.PathType" />
      </Parameters>
      <Docs>
        <param name="logName">情報を取得するイベント ログまたは情報を取得するイベントのログ ファイルへのパスの名前。</param>
        <param name="pathType">Path パラメーターで使用される文字列が、イベント ログまたはイベント ログ ファイルへのパスの名前を指定するかどうかを指定します。</param>
        <summary>指定されたイベント ログのランタイム情報を格納しているオブジェクトを取得します。</summary>
        <returns>返します。、 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogInformation" /> 指定されたログに関する情報を含むオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetLogNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetLogNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>イベント ログ サービスに登録されているすべてのイベント ログ名の列挙可能なコレクションを取得します。</summary>
        <returns>イベント ログ名を格納する文字列の列挙可能なコレクションを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProviderNames">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; GetProviderNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetProviderNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>イベント ログ サービスに登録されているすべてのイベント プロバイダー名の列挙可能なコレクションを取得します。 イベント プロバイダーは、イベントをイベント ログに発行するアプリケーションです。</summary>
        <returns>イベント プロバイダーの名前を格納する文字列の列挙可能なコレクションを返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalSession">
      <MemberSignature Language="C#" Value="public static System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Eventing.Reader.EventLogSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ローカル コンピューターのイベント ログ サービスに接続されている静的な定義済みのセッション オブジェクトを取得します。</summary>
        <value>返します。、 <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> は、ローカル コンピューターのイベント ログ サービスに接続されている定義済みのセッション オブジェクトであるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>このオブジェクトに使用されているリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ExportLog">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>イベントを外部のログ ファイルにエクスポートします。 イベント メッセージがないイベントが格納されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ExportLogAndMessages">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>イベントとそのメッセージを外部のログ ファイルにエクスポートします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>新しい <see cref="T:System.Diagnostics.Eventing.Reader.EventLogSession" /> オブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>