<Type Name="DataManipulator" FullName="System.Web.UI.DataVisualization.Charting.DataManipulator">
  <TypeSignature Language="C#" Value="public class DataManipulator : System.Web.UI.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataManipulator extends System.Web.UI.DataVisualization.Charting.DataFormula" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.DataManipulator" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.DataFormula</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>実行時にデータの操作を実行します。 このクラスがによって公開されている、 <see cref="P:System.Web.UI.DataVisualization.Charting.Chart.DataManipulator" /> ルートのプロパティ <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" /> オブジェクトです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataManipulator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.DataManipulator" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.ExportSeriesValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>格納されたすべての系列のデータをエクスポート、 <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> に、 <see cref="T:System.Data.DataSet" /> オブジェクトです。</summary>
        <returns>A <see cref="T:System.Data.DataSet" /> 時系列データを格納しているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (string seriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(string seriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="seriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をエクスポートします。</param>
        <summary>1 つまたは複数の系列からデータをエクスポート、 <see cref="T:System.Data.DataSet" /> オブジェクトです。</summary>
        <returns>A <see cref="T:System.Data.DataSet" /> 時系列データを格納しているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSeriesValues">
      <MemberSignature Language="C#" Value="public System.Data.DataSet ExportSeriesValues (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataSet ExportSeriesValues(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.ExportSeriesValues(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">エクスポートする系列です。</param>
        <summary>指定した系列からデータをエクスポート、 <see cref="T:System.Data.DataSet" /> オブジェクトです。</summary>
        <returns>A <see cref="T:System.Data.DataSet" /> 時系列データを格納しているオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Web.UI.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> インターフェイスを実装するオブジェクト。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <summary>1 つまたは複数のデータ ポイントに対してカスタムのフィルター処理を実行 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />, 最初の系列のポイントに基づきます。 フィルター選択された <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクトも、変更されたデータを格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Web.UI.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> インターフェイスを実装するオブジェクト。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルターは、そのオブジェクト。</param>
        <summary>系列内データ ポイントに対してカスタム フィルター処理を実行します。<see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルターは、そのオブジェクトも、変更されたデータを格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Web.UI.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> フィルタ リング規則の比較方法を決定する列挙値。 できる <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, 、<see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, などとします。</param>
        <param name="compareValue">データ ポイントの最初の Y 値に適用されるフィルタ リング規則の値部分。 たとえば、フィルタ リング規則で"&lt; 6"、値が 6 です。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <summary>最初の系列のデータ ポイントの最初の Y 値にフィルタ リング規則を適用することで、1 つまたは複数の系列をフィルター処理します。 フィルター選択された <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクトは、変更されたデータの格納に使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Web.UI.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> フィルタ リング規則の比較方法を決定する列挙値。 できる <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, 、<see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, などとします。</param>
        <param name="compareValue">データ ポイントの最初の Y 値に適用されるフィルタ リング規則の値部分。 たとえば、フィルタ リング規則で"&lt; 6"、値が 6 です。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルターは、そのオブジェクト。</param>
        <summary>各データ ポイントの最初の Y 値にフィルタ リング規則を適用することで、系列内データ ポイントをフィルター処理します。<see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルターは、そのオブジェクトも、変更されたデータを格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Web.UI.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> などの曜日、月などの日の日付\/時刻の間隔を表す列挙値。 指定した要素のフィルター処理する範囲を決定します。</param>
        <param name="rangeElements">指定された日付\/時刻の範囲内の要素を指定する、 <c>dateRange</c> はフィルター選択パラメーター。 たとえば、「7」とは、単一の値を指定できます。コンマ区切り値、たとえば、「5,6」です。「9 ~ 11」; などの値の範囲または、「5,6,9 11」など、いずれかのバリエーションです。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <summary>指定したポイントを削除するか特定の日付\/時刻の範囲の空としてマークして 1 つまたは複数の系列のデータ ポイントをフィルター処理します。 フィルター選択された <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクトは、変更されたデータの格納に使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Web.UI.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> などの曜日、月などの日の日付\/時刻の間隔を表す列挙値。 指定した要素のフィルター処理する範囲を決定します。</param>
        <param name="rangeElements">指定された日付\/時刻の範囲内の要素を指定する、 <c>dateRange</c> はフィルター選択パラメーター。 たとえば、「7」とは、単一の値を指定できます。コンマ区切り値、たとえば、「5,6」です。「9 ~ 11」; などの値の範囲または、「5,6,9 11」など、いずれかのバリエーションです。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <summary>指定したポイントを削除するか指定した日付\/時刻の範囲の空としてマークして系列内のデータ ポイントをフィルター処理します。<see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルターは、そのオブジェクトが変更されたデータの格納に使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Web.UI.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> インターフェイスを実装するオブジェクト。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <param name="outputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納します。 出力系列の数が入力系列の数と一致するそれ以外の場合、例外がスローされることを確認してください。</param>
        <summary>最初の系列のポイントに基づいて、1 つまたは複数の系列のデータ ポイントに対してカスタム フィルター処理を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(class System.Web.UI.DataVisualization.Charting.IDataPointFilter filterInterface, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.IDataPointFilter,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterInterface" Type="System.Web.UI.DataVisualization.Charting.IDataPointFilter" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="filterInterface">
          <see cref="T:System.Web.UI.DataVisualization.Charting.IDataPointFilter" /> インターフェイスを実装するオブジェクト。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納するオブジェクト。 データ系列が存在しない場合、例外がスローされます。</param>
        <summary>系列内データ ポイントに対してカスタム フィルター処理を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Web.UI.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> フィルタ リング規則の比較方法を決定する列挙値。 できる <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, 、<see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, などとします。</param>
        <param name="compareValue">データ ポイントの最初の Y 値に適用されるフィルタ リング規則の値部分。 たとえば、フィルタ リング規則で"&lt; 6"、値が 6 です。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <param name="outputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納します。 出力系列の数が入力系列の数に一致する必要があります、それ以外の場合、例外がスローされます。</param>
        <summary>最初の系列のデータ ポイントのそれぞれの最初の Y 値にフィルタ リング規則を適用することで、1 つまたは複数の系列をフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Web.UI.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> フィルタ リング規則の比較方法を決定する列挙値。 できる <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, 、<see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, などとします。</param>
        <param name="compareValue">データ ポイントの最初の Y 値に適用されるフィルタ リング規則の値部分。 たとえば、フィルタ リング規則で"&lt; 6"、値が 6 です。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納するオブジェクト。 データ系列が存在しない場合、例外がスローされます。</param>
        <summary>各データ ポイントの最初の Y 値にフィルタ リング規則を適用することで、系列内データ ポイントをフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Web.UI.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> などの曜日、月などの日の日付\/時刻の間隔を表す列挙値。 指定した要素のフィルター処理する範囲を決定します。</param>
        <param name="rangeElements">指定された日付\/時刻の範囲内の要素を指定する、 <c>dateRange</c> はフィルター選択パラメーター。 たとえば、「7」とは、単一の値を指定できます。コンマ区切り値、たとえば、「5,6」です。「9 ~ 11」; などの値の範囲または、「5,6,9 11」など、いずれかのバリエーションです。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <param name="outputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納します。 出力系列の数が入力系列の数と一致するそれ以外の場合、例外がスローされることを確認してください。</param>
        <summary>指定された日付\/時刻の範囲内の空の指定されたポイントを削除するか、またはとしてマークして、1 つまたは複数の系列のデータ ポイントをフィルターします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.DateRangeType dateRange, string rangeElements, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.DateRangeType,System.String,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateRange" Type="System.Web.UI.DataVisualization.Charting.DateRangeType" />
        <Parameter Name="rangeElements" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="dateRange">A <see cref="T:System.Web.UI.DataVisualization.Charting.DateRangeType" /> などの曜日、月などの日の日付\/時刻の間隔を表す列挙値。 指定した要素のフィルター処理する範囲を決定します。</param>
        <param name="rangeElements">指定された日付\/時刻の範囲内の要素を指定する、 <c>dateRange</c> はフィルター選択パラメーター。 たとえば、「7」とは、単一の値を指定できます。コンマ区切り値、たとえば、「5,6」です。「9 ~ 11」; などの値の範囲または、「5,6,9 11」など、いずれかのバリエーションです。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納するオブジェクト。 データ系列が存在しない場合、例外がスローされます。</param>
        <summary>指定したポイントを削除するか特定の日付\/時刻の範囲の空としてマークして系列内のデータ ポイントをフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Web.UI.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> フィルタ リング規則の比較方法を決定する列挙値。 できる <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, 、<see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, などとします。</param>
        <param name="compareValue">データ ポイントの最初の Y 値に適用されるフィルタ リング規則の値部分。 たとえば、フィルタ リング規則で"&lt; 6"、値が 6 です。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <param name="outputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納します。 出力系列の数が入力系列の数に一致する必要があります、それ以外の場合、例外がスローされます。</param>
        <param name="usingValue">データは、フィルタ リング規則が適用される値をポイントします。 X、Y、Y2、Y3 などです。</param>
        <summary>最初の系列の指定されたデータ ポイント値にフィルタ リング規則を適用することで、1 つまたは複数の系列をフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public void Filter (System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, double compareValue, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Filter(valuetype System.Web.UI.DataVisualization.Charting.CompareMethod compareMethod, float64 compareValue, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Filter(System.Web.UI.DataVisualization.Charting.CompareMethod,System.Double,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compareMethod" Type="System.Web.UI.DataVisualization.Charting.CompareMethod" />
        <Parameter Name="compareValue" Type="System.Double" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compareMethod">A <see cref="T:System.Web.UI.DataVisualization.Charting.CompareMethod" /> フィルタ リング規則の比較方法を決定する列挙値。 できる <see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.LessThan" />, 、<see cref="F:System.Web.UI.DataVisualization.Charting.CompareMethod.EqualTo" />, などとします。</param>
        <param name="compareValue">データ ポイントの最初の Y 値に適用されるフィルタ リング規則の値部分。 たとえば、フィルタ リング規則で"&lt; 6"、値が 6 です。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納するオブジェクト。 データ系列が存在しない場合、例外がスローされます。</param>
        <param name="usingValue">データは、フィルタ リング規則が適用される値をポイントします。 X、Y、Y2、Y3 などです。</param>
        <summary>指定されたデータをフィルタ リング規則を適用することで、系列内データ ポイントをフィルターでは、比較の値をポイントします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterMatchedPoints">
      <MemberSignature Language="C#" Value="public bool FilterMatchedPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterMatchedPoints" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterMatchedPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または引数に指定された条件に一致する場合に、ポイントをフィルター処理するかどうかを決定する値を設定、 <c>Filter</c> このクラスのメソッドです。</summary>
        <value>
          <see langword="true" /> ポイントに一致する場合は、指定した条件がフィルター処理します。 <see langword="false" /> 場合は、条件に一致しないポイントがフィルター処理します。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterSetEmptyPoints">
      <MemberSignature Language="C#" Value="public bool FilterSetEmptyPoints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterSetEmptyPoints" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterSetEmptyPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定によってポイントがフィルター処理するかどうかを示すフラグ、 <c>Filter</c> または <c>FilterTopN</c> メソッドを削除または空としてマークされます。</summary>
        <value>
          <see langword="true" /> フィルター選択されたポイントが空として; なとをマークする場合 <see langword="false" /> 場合に削除されます。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <summary>指定した数のポイントを除き、1 つまたは複数の系列内のすべてのデータ ポイントをフィルター処理します。 フィルター選択されていないポイントは、最大 1 番目の Y 値を持つ最初の系列のポイントに対応します。<see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理されているオブジェクトは、変更されたデータの格納に使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <summary>指定した最大最初の Y 値を持つポイント数を除き、系列内のすべてのデータ ポイントが除外されます。<see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルターは、そのオブジェクトが変更されたデータの格納に使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <param name="outputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納します。 出力系列の数が入力系列の数と一致するそれ以外の場合、例外がスローされることを確認してください。</param>
        <summary>指定した数のポイントを除き、1 つまたは複数の系列のデータ ポイントが除外されます。 フィルター処理されないポイントは、最大 1 番目の Y 値を持つ最初の系列のポイントに対応します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納するオブジェクト。 データ系列が存在しない場合、例外がスローされます。</param>
        <summary>指定した最大最初の Y 値を持つポイント数を除き、系列内のすべてのデータ ポイントをフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <param name="outputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納します。 出力系列の数が入力系列の数と一致するそれ以外の場合、例外がスローされることを確認してください。</param>
        <param name="usingValue">データは、フィルタ リング規則が適用される値をポイントします。 X、Y、Y2、Y3 などです。</param>
        <summary>指定した数のデータ ポイントを除き、1 つまたは複数の系列内のすべてのデータ ポイントをフィルター処理します。 フィルター選択されていないポイントは、最大値を持つ最初の系列のポイントに対応しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries, string usingValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries, string usingValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納するオブジェクト。 データ系列が存在しない場合、例外がスローされます。</param>
        <param name="usingValue">データは、フィルタ リング規則が適用される値をポイントします。 X、Y、Y2、Y3 などです。</param>
        <summary>指定した数の最大値を持つデータ ポイントを除き、系列内のすべてのデータ ポイントをフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, string inputSeriesNames, string outputSeriesNames, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeriesNames" Type="System.String" />
        <Parameter Name="outputSeriesNames" Type="System.String" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター処理します。</param>
        <param name="outputSeriesNames">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納します。 出力系列の数が入力系列の数と一致するそれ以外の場合、例外がスローされることを確認してください。</param>
        <param name="usingValue">データは、フィルタ リング規則が適用される値をポイントします。 X、Y、Y2、Y3 などです。</param>
        <param name="getTopValues">
          <see langword="true" /> 最大の値が配置される場合は <see langword="false" /> の最小値が保持される場合。</param>
        <summary>指定した数のポイントを除き、1 つまたは複数の系列内のすべてのデータ ポイントをフィルター処理します。 フィルター選択されていないポイントは、最大値または最小値を持つ最初の入力系列のポイントに対応しています。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTopN">
      <MemberSignature Language="C#" Value="public void FilterTopN (int pointCount, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FilterTopN(int32 pointCount, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries, string usingValue, bool getTopValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.FilterTopN(System.Int32,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointCount" Type="System.Int32" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="usingValue" Type="System.String" />
        <Parameter Name="getTopValues" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pointCount">フィルター処理によって削除しないデータ ポイントの数。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択するオブジェクト。</param>
        <param name="outputSeries">A <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> フィルター選択されたデータを格納するオブジェクト。 データ系列が存在しない場合、例外がスローされます。</param>
        <param name="usingValue">データは、フィルタ リング規則が適用される値をポイントします。 X、Y、Y2、Y3 などです。</param>
        <param name="getTopValues">
          <see langword="true" /> 最大の値が配置される場合は <see langword="false" /> の最小値が保持される場合。</param>
        <summary>指定された数の最小値または最大値を持つポイントを除き、系列内のすべてのデータ ポイントをフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="inputSeriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化します。</param>
        <summary>1 つまたは複数の系列の 1 つまたは複数の数式を使用してデータをグループ化します。 系列は、元のデータをクリアし、新しいデータ ポイントを格納するために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化するオブジェクト。</param>
        <summary>1 つまたは複数の数式を使用してデータをグループ化します。 グループ化されている系列がの元のデータをクリアし、新しいデータ ポイントを格納するために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="inputSeriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化します。</param>
        <param name="outputSeriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化されたデータ ポイントを格納します。 系列が存在しない場合は作成されます。存在する場合は最初にオフにするすべてのデータのグループ化されたデータ ポイントを保存する前にします。 出力系列の数が入力系列の数に一致する必要がありますか、例外がスローされます。</param>
        <summary>1 つまたは複数の式を使用して、1 つまたは複数の系列のデータをグループ化します。 出力系列は、グループ化されたデータ ポイントの格納に使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化するオブジェクト。</param>
        <param name="outputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化操作によって作成された新しいデータ ポイントを格納します。 存在しない場合、例外がスローされます。</param>
        <summary>1 つまたは複数の数式を使用してデータをグループ化します。 出力系列を使用して、グループ化されたデータ ポイントを格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="inputSeriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化します。</param>
        <summary>1 つまたは複数の式を使用して、1 つまたは複数の系列のデータをグループ化します。 系列は、元のデータをクリアし、新しいデータ ポイントを格納するために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化するオブジェクト。</param>
        <summary>1 つまたは複数の数式を使用してデータをグループ化します。 グループ化されている系列がの元のデータをクリアし、新しいデータ ポイントを格納するために使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="inputSeriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化します。</param>
        <param name="outputSeriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化されたデータ ポイントを格納します。 系列が存在しない場合は作成されます。存在する場合は最初にオフにするすべてのデータのグループ化されたデータ ポイントを保存する前にします。 出力系列の数が入力系列の数に一致する必要がありますか、例外がスローされます。</param>
        <summary>1 つまたは複数の式を使用して、1 つまたは複数の系列をグループ化します。 出力系列がグループ化されたデータ ポイントの格納に使用して、間隔のオフセットを使用できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public void Group (string formula, double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Group(string formula, float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Group(System.String,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="inputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化するオブジェクト。</param>
        <param name="outputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化操作によって作成された新しいデータ ポイントを格納します。 存在しない場合、例外がスローされます。</param>
        <summary>1 つまたは複数の式を使用して、系列をグループ化します。 グループ化されたデータ ポイントを格納する出力系列が使用され、間隔のオフセットを使用できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="inputSeriesName">入力の名前をコンマで区切って <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />します。</param>
        <summary>データをグループ化は、1 つまたは複数の数式を使用して、軸ラベルごとの 1 つまたは複数の系列のポイントします。 元のデータ ポイント値がクリアされ、その新しいグループ化されたデータ ポイントが各系列に格納されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Web.UI.DataVisualization.Charting.Series inputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Web.UI.DataVisualization.Charting.Series inputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="inputSeries">入力 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />します。</param>
        <summary>1 つまたは複数の数式を使用して、軸ラベルごとの系列のデータ ポイントをグループ化します。 元のデータ ポイント値がクリアされ、系列、新しいグループ化されたデータ ポイントに格納されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, string inputSeriesName, string outputSeriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, string inputSeriesName, string outputSeriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeriesName" Type="System.String" />
        <Parameter Name="outputSeriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="inputSeriesName">入力の名前をコンマで区切って <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />します。</param>
        <param name="outputSeriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化されたデータ ポイントを格納します。 系列が存在しない場合は作成されます。存在する場合は最初にオフにするすべてのデータのグループ化されたデータ ポイントを保存する前にします。 出力系列の数が入力系列の数に一致する必要がありますか、例外がスローされます。</param>
        <summary>1 つまたは複数の数式を使用して、軸ラベルごと、1 つまたは複数の系列のデータ ポイントをグループです。 出力系列は、グループ化されたデータ ポイントの格納に使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByAxisLabel">
      <MemberSignature Language="C#" Value="public void GroupByAxisLabel (string formula, System.Web.UI.DataVisualization.Charting.Series inputSeries, System.Web.UI.DataVisualization.Charting.Series outputSeries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GroupByAxisLabel(string formula, class System.Web.UI.DataVisualization.Charting.Series inputSeries, class System.Web.UI.DataVisualization.Charting.Series outputSeries) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.GroupByAxisLabel(System.String,System.Web.UI.DataVisualization.Charting.Series,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formula" Type="System.String" />
        <Parameter Name="inputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
        <Parameter Name="outputSeries" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="formula">グループ化されたデータを計算するために使用する 1 つまたは複数の式のコンマ区切りの一覧は、値をポイントします。</param>
        <param name="inputSeries">入力 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化します。</param>
        <param name="outputSeries">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> をグループ化操作によって作成された新しいデータ ポイントを格納します。 存在しない場合、例外がスローされます。</param>
        <summary>1 つまたは複数の数式を使用して、軸ラベルごとの系列のデータ ポイントをグループ化します。 出力系列を使用して、グループ化されたデータ ポイントを格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="seriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> チェックします。</param>
        <summary>1 つまたは複数のシリーズの欠落しているデータ ポイントを空のポイントに置き換えます。 一定期間によって決定される各系列がオンになって、 <paramref name="interval" /> と <paramref name="intervalType" /> 引数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクトをチェックします。</param>
        <summary>系列内データ消失点を空のポイントに置き換えます。 一定期間によって決定されるデータ系列がオンになって、 <paramref name="interval" /> と <paramref name="intervalType" /> 引数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="seriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> チェックします。</param>
        <summary>1 つまたは複数のシリーズの欠落しているデータ ポイントを空のポイントに置き換えます。 一定期間によって決定される各系列がオンになって、 <paramref name="interval" />, 、<paramref name="intervalOffset" />, 、<paramref name="intervalOffsetType" /> と <paramref name="intervalType" /> 引数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> を空のポイントを挿入するオブジェクト。</param>
        <summary>系列内データ消失点を空のポイントに置き換えます。 一定期間によって決定されるデータ系列がオンになって、 <paramref name="interval" />, 、<paramref name="intervalOffset" />, 、<paramref name="intervalOffsetType" /> と <paramref name="intervalType" /> 引数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="fromXValue">チェックする一連の範囲の開始点。 データ ポイントの X 値を使用します。</param>
        <param name="toXValue">チェックする一連の範囲の終点です。 データ ポイントの X 値を使用します。</param>
        <param name="seriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> チェックします。</param>
        <summary>1 つまたは複数のシリーズの欠落しているデータ ポイントを空のポイントに置き換えます。 一定期間によって決定される各系列がオンになって、 <paramref name="interval" />, 、<paramref name="intervalOffset" />, 、<paramref name="intervalOffsetType" /> と <paramref name="intervalType" /> 引数。 チェックされている一連の範囲はによって決まります、 <paramref name="toXValue" /> と <paramref name="fromXValue" /> 引数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertEmptyPoints">
      <MemberSignature Language="C#" Value="public void InsertEmptyPoints (double interval, System.Web.UI.DataVisualization.Charting.IntervalType intervalType, double intervalOffset, System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, double fromXValue, double toXValue, System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEmptyPoints(float64 interval, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalType, float64 intervalOffset, valuetype System.Web.UI.DataVisualization.Charting.IntervalType intervalOffsetType, float64 fromXValue, float64 toXValue, class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.InsertEmptyPoints(System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Web.UI.DataVisualization.Charting.IntervalType,System.Double,System.Double,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Double" />
        <Parameter Name="intervalType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="intervalOffset" Type="System.Double" />
        <Parameter Name="intervalOffsetType" Type="System.Web.UI.DataVisualization.Charting.IntervalType" />
        <Parameter Name="fromXValue" Type="System.Double" />
        <Parameter Name="toXValue" Type="System.Double" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="interval">欠落したデータ ポイントのチェック間隔のサイズ。</param>
        <param name="intervalType">測定単位、 <c>interval</c> パラメーター。</param>
        <param name="intervalOffset">サイズ、間隔のオフセット。</param>
        <param name="intervalOffsetType">間隔のオフセットの測定単位。</param>
        <param name="fromXValue">チェックする一連の範囲の開始点。 データ ポイントの X 値を使用します。</param>
        <param name="toXValue">チェックする一連の範囲の終点です。 データ ポイントの X 値を使用します。</param>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> を空のポイントを挿入します。</param>
        <summary>系列内データ消失点を空のポイントに置き換えます。 一定期間によって決定されるデータ系列がオンになって、 <paramref name="interval" />, 、<paramref name="intervalOffset" />, 、<paramref name="intervalOffsetType " />と <paramref name="intervalType" /> 引数。 チェックされている一連の範囲はによって決まります、 <paramref name="toXValue" /> と <paramref name="fromXValue" /> 引数。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint},System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="comparer">実装するオブジェクト、 <see cref="T:System.Collections.IComparer" /> インターフェイスし、カスタムの並べ替えロジックを提供します。</param>
        <param name="seriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 並べ替えられます。</param>
        <summary>1 つまたは複数のシリーズでは、カスタムの並べ替えを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、1 つまたは複数の系列のデータ ポイントに対してカスタムの並べ替えを実行します。並べ替えのロジックは、 `comparer` パラメーター。 オーバーライドおよび実装、 <xref:System.Collections.IComparer.Compare%2A> のメソッド、 <xref:System.Collections.IComparer> インターフェイス、comparison\(s\) を実行して返す `true` または `false`です。 並べ替え順序は、戻り値によって決まります。  
  
 複数の系列が並べ替えられている場合は、系列は整列する必要があります、それ以外の場合、例外がスローされますに注意してください。  
  
 2 つのオブジェクトのパラメーター、 <xref:System.Collections.IComparer.Compare%2A> 型のメソッドが必ず <xref:System.Web.UI.DataVisualization.Charting.DataPoint>します。  
  
> [!IMPORTANT]
>  所属する、系列に関係なく、すべてのデータ ポイントは最初の系列をに基づいて並べ替えられます最初の系列内のデータ ポイントの位置が変更された場合も、他の系列に対応するすべてのポイントが変わります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer, System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(class System.Collections.Generic.IComparer`1&lt;class System.Web.UI.DataVisualization.Charting.DataPoint&gt; comparer, class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Collections.Generic.IComparer{System.Web.UI.DataVisualization.Charting.DataPoint},System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;System.Web.UI.DataVisualization.Charting.DataPoint&gt;" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="comparer">実装するオブジェクト、 <see cref="T:System.Collections.IComparer" /> インターフェイスし、カスタムの並べ替えロジックを提供します。</param>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクトを並べ替えます。</param>
        <summary>系列内のデータ ポイントにカスタムの並べ替えを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、系列内のデータ ポイントにカスタムの並べ替えを実行します。並べ替えのロジックは、 `comparer` パラメーター。 オーバーライドおよび実装、 <xref:System.Collections.IComparer.Compare%2A> のメソッド、 <xref:System.Collections.IComparer> インターフェイス、comparison\(s\) を実行して返す `true` または `false`です。 並べ替え順序は、戻り値によって決まります。  
  
 2 つのオブジェクトのパラメーター、 <xref:System.Collections.IComparer.Compare%2A> 型のメソッドが必ず <xref:System.Web.UI.DataVisualization.Charting.DataPoint>します。  
  
 関数呼び出しにつき 1 つ以上の系列のカスタムの並べ替えを実行するには、 <xref:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort%2A> メソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> 並べ替えが昇順または降順のかどうかを決定する列挙値。</param>
        <param name="seriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 並べ替えられます。</param>
        <summary>指定した順序を使用して、1 つまたは複数の系列のデータ ポイントに対して、並べ替えを実行します。 並べ替えは、各データ ポイントの最初の Y 値に基づきます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> 並べ替えが昇順または降順のかどうかを決定する列挙値。</param>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクトを並べ替えます。</param>
        <summary>指定した順序を使用して、系列内のデータ ポイントでの並べ替えを実行します。 並べ替えは、各データ ポイントの最初の Y 値に基づきます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, string seriesName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="seriesName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> 並べ替えが昇順または降順のかどうかを決定する列挙値。</param>
        <param name="sortBy">A <see langword="string" /> を並べ替えるデータ ポイントの値を表す値。 指定できる値は。"X"、"Y"、"Y2"、"Y3"、"AxisLabel"などです。</param>
        <param name="seriesName">名前をコンマで区切って、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> 並べ替えられます。</param>
        <summary>指定した順序で 1 つまたは複数の系列のデータ要素を並べ替えます。 並べ替えは、任意の利用可能なデータ ポイント値に基づくことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、昇順を実行またはデータを降順に並べ替え、系列のポイントしはで設定されている値に基づいて、 `sortBy` などのパラメーター"X"、"AxisLabel"、"Y"、"Y1"などです。  
  
 複数の系列が並べ替えられている場合は、系列は整列する必要があります、それ以外の場合、例外がスローされますに注意してください。  
  
> [!IMPORTANT]
>  すべての系列は並べ替えの指定を使用して、最初の Y 値には、系列が表示されています。つまり、所属する、系列に関係なく、すべてのデータ ポイントは、最初の系列基準として並べ替えられます。  
  
 カスタムの並べ替えルーチンを使用してポイントを並べ替えるには、このオーバー ロードされたメソッドの別の定義を使用します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public void Sort (System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Sort(valuetype System.Web.UI.DataVisualization.Charting.PointSortOrder pointSortOrder, string sortBy, class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.DataManipulator.Sort(System.Web.UI.DataVisualization.Charting.PointSortOrder,System.String,System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pointSortOrder" Type="System.Web.UI.DataVisualization.Charting.PointSortOrder" />
        <Parameter Name="sortBy" Type="System.String" />
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="pointSortOrder">A <see cref="T:System.Web.UI.DataVisualization.Charting.PointSortOrder" /> 並べ替えが昇順または降順のかどうかを決定する列挙値</param>
        <param name="sortBy">A <see langword="string" /> を並べ替えるデータ ポイントの値を表す値。 指定できる値は。"X"、"Y"、"Y2"、"Y3"、"AxisLabel"などです。</param>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> オブジェクトを並べ替えます。</param>
        <summary>指定した順序を使用して、系列内のデータ ポイントでの並べ替えを実行します。 並べ替えは、任意の利用可能なデータ ポイント値に基づくことができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEmptyPoints">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>1 つまたは複数のシリーズの欠落しているデータ ポイントを空のポイントに置き換えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Group">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>1 つまたは複数の式を使用して、1 つまたは複数の系列のデータをグループ化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="GroupByAxisLabel">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>データをグループ化は、軸ラベルごとの 1 つまたは複数の系列のポイントします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>1 つまたは複数のシリーズでは、カスタムの並べ替えを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="FilterTopN">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した数のデータ ポイントを除き、1 つまたは複数の系列内のすべてのデータ ポイントをフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Filter">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>1 つまたは複数の系列のデータ ポイントをフィルター処理します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ExportSeriesValues">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>格納されたすべての系列のデータをエクスポート、 <see cref="T:System.Web.UI.DataVisualization.Charting.SeriesCollection" /> に、 <see cref="T:System.Data.DataSet" /> オブジェクトです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>