<Type Name="ChartArea" FullName="System.Web.UI.DataVisualization.Charting.ChartArea">
  <TypeSignature Language="C#" Value="public class ChartArea : System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChartArea extends System.Web.UI.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataVisualization.Charting.ChartArea" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Axes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>グラフ イメージをグラフ領域を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 特定の任意のグラフ内で、 *内部プロット位置* x 内の四角形領域、およびあり、データ ポイントの y 軸の線が描画されます。*プロット位置* 内部プロット位置、目盛り、および軸ラベルを囲む四角形の領域です。*グラフ エリア* プロット位置、目盛りは、軸ラベル、およびグラフの軸のタイトルを含む四角形の領域です。  
  
 グラフ領域がによって表される、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> クラス <xref:System.Web.UI.DataVisualization.Charting.ChartArea> にオブジェクトが格納されている、 <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> クラスです。  
  
 グラフ領域に描画できるグラフの系列の数に制限はありません。  
  
 A <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクト。  
  
-   1 つの異なる内部プロット エリアを使用します。  
  
-   1 つまたは複数のグラフの系列のプロットに使用します。  
  
-   プライマリとセカンダリの x と y 軸の場合は、円グラフとドーナツ グラフの種類を除きがあります。  
  
 レーダー グラフ、円グラフ、ドーナツ グラフ、じょうごグラフ、ピラミッド、極、図形グラフの種類のみを使用するときに、内部プロット位置は、図形グラフのサイズを定義します。 たとえばの値を増やすと、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A> プロパティ円グラフには、扇形の形状の半径を大ききます。  
  
 その他のすべての種類のグラフでは、各グラフ領域は、X 軸および y 軸、プライマリとセカンダリの 2 つのセットを持っています。 これらの軸に関連するプロパティにアクセスするには、使用、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A>, 、<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A>, 、<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY%2A> と <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2%2A> プロパティです。 グラフ上のすべての軸に影響するプロパティを設定する必要がある場合、使用して、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.Axes%2A> プロパティです。  
  
 1 つまたは複数の系列はグラフ領域に関連付けられます。 データ系列が、 <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> に属している各系列、グラフ領域を決定するプロパティです。 既定では、データ系列は、既定のグラフ領域に接続されます。 一連の表示を無効にする設定、 <xref:System.Web.UI.DataVisualization.Charting.Series.ChartArea%2A> 長さ 0 の文字列には、その系列のプロパティです。  
  
 グラフには、別のグラフ領域を追加する場合は、新しいグラフ領域を持つ任意の系列を関連付けることができます。 すべての図形グラフの種類だけでなくバーおよび種類の積み上げ横棒グラフでは、個別のグラフ領域に各系列を描画する必要があります。 その他のすべての種類のグラフでは、複数の系列を同じグラフ領域内で結合できます。  
  
 グラフ領域のグラフで領域ごとに、3 D グラフが表示されます。 使用することができます、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.Area3DStyle%2A> プロパティを有効にし、3 d グラフをカスタマイズします。  
  
 グラフで軸のサイズが自動的に変更されていないために、新しいデータを追加する場合にない最小値と最大のグラフ領域は自動的に再計算します。  使用してこれらの値を再計算するグラフ領域を要求すること、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale%2A> メソッドです。  
  
 複数のグラフ領域を垂直方向に配置するには設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> プロパティです。 複数のグラフ領域を水平方向に合うように使用するグラフ領域を最初に置く必要があります、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.Position%2A> プロパティ、および設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> 水平にプロパティです。  
  
 一連の表示を抑制するのには、設定、 <xref:System.Windows.Forms.DataVisualization.Charting.Series> 長さ 0 の文字列には、その系列のプロパティです。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.DataVisualization.Charting.ChartArea> class.  
  
> [!NOTE]
>  It is highly recommended that you use one of the **unmanagedCodeEntityReference tag is not supported!!!!**  
>  or **unmanagedCodeEntityReference tag is not supported!!!!**  
>  methods of the <xref:System.Web.UI.DataVisualization.Charting.Chart.ChartAreas%2A> collection property to add a chart area at run time.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChartArea (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">新しい名前 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 指定したグラフ領域の名前を持つクラス。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentOrientation">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations AlignmentOrientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations AlignmentOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグラフ領域の配置の方向を設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentOrientations" /> 列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用すると、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>, 、<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> と <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> プロパティが整列または水平、垂直方向に 2 つまたは複数のグラフ領域を同期することもできます。  
  
 最初に、設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A> プロパティの名前を <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクトです。 このグラフ領域は、アライン、に基づいて、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> 設定で、使用する配置を定義するには、および <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> 設定で、配置を設定するために使用する必要がありますグラフ領域の要素を定義します。  
  
 場合、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A> プロパティが設定されていない、グラフ領域に関係なく、固定されたされません、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> と <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> 設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignmentStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles AlignmentStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles AlignmentStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.FlagsEnumUITypeEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の配置のスタイル、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" />です。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.AreaAlignmentStyles" /> 列挙値を 1 つの値または、ビットごとの OR を使用する配置を定義する複数の値のいずれかを表すことができます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> 水平、垂直方向に 2 つまたは複数のグラフ領域を配置するプロパティまたはその両方です。 配置の型が、次の値のいずれかまたは次の値のビット演算 OR の組み合わせです。  
  
|メンバー名|説明|  
|-----------|--------|  
|すべて|すべての値を使用して、グラフ領域を配置します。|  
|AxesView|グラフ領域は、指定されたビューを使用して配置する <xref:System.Web.UI.DataVisualization.Charting.ChartArea>です。|  
|なし|グラフ領域が自動的に無効です。|  
|位置|グラフ領域の配置すると、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.Position%2A> 指定されたグラフ領域のです。|  
|InnerPlotPosition|グラフ領域の配置すると、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A> 指定されたグラフ領域のです。|  
  
 場合、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A> 値が設定されていない、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> プロパティには効果はありません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlignWithChartArea">
      <MemberSignature Language="C#" Value="public string AlignWithChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AlignWithChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の名前、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトをこのグラフ領域を配置する必要があります。</summary>
        <value>A <see langword="string" /> の名前を表す値、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトをこのグラフ領域を配置する必要があります。 既定値は、空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用すると、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A>, 、<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> と <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> プロパティが整列または水平、垂直方向に 2 つまたは複数のグラフ領域を同期することもできます。  
  
 最初に、設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A> プロパティの名前を <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクトです。 このグラフ領域は、アライン、に基づいて、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> 設定で、使用する配置を定義するには、および <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> 設定で、配置を設定するために使用する必要がありますグラフ領域の要素を定義します。  
  
 場合、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignWithChartArea%2A> プロパティが設定されていない、グラフ領域に関係なく、固定されたされません、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentStyle%2A> と <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AlignmentOrientation%2A> 設定します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Area3DStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartArea3DStyle Area3DStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ChartArea3DStyle Area3DStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Area3DStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartArea3DStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> オブジェクトで、3 D のグラフ領域内のすべての系列の実装に使用します。</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle" /> グラフ領域に 3D をすべての系列を実装するオブジェクトを描画します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 有効にするまたはグラフ領域で 3D を無効にするには、設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea3DStyle.Enable3D%2A> プロパティです。  
  
 3d グラフが描画されると、スケールの区切り線は軸ではサポートされていません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Axes">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis[] Axes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis[] Axes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Axes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.AxesArrayEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.AxesArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定をグラフ領域のすべての軸を表す配列。</summary>
        <value>配列 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> をグラフ領域で使用されるすべての軸を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの主な目的は、X, Y, X2 とデザイン時に Y2 軸のプロパティへのアクセスを提供します。  
  
 実行時にグラフ領域の軸アクセスするなどの個々 の軸のプロパティを使用して <xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX%2A>, 、<xref:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2%2A>, などとします。  
  
 実行時にこのプロパティを使用する場合: イベントなどで — を指定してこの配列内の項目にアクセスすることができます、 <xref:System.Web.UI.DataVisualization.Charting.AxisName> 列挙体メンバーの識別子として。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisX">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisX" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 主軸の x 軸を表すオブジェクト。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 主軸の x 軸を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、グラフ領域の主軸の x 軸を操作できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisX2">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisX2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisX2" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisX2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> をセカンダリの x 軸を表すオブジェクト。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> をセカンダリの x 軸を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、グラフ領域内でセカンダリ x 軸を操作できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisY">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisY" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 主軸の y 軸を表すオブジェクト。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> 主軸の y 軸を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、グラフ領域の主軸の y 軸を操作できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisY2">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.Axis AxisY2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.Axis AxisY2" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.AxisY2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.NoNameExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.Axis</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> を第 2 y 軸を表すオブジェクト。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.Axis" /> を第 2 y 軸を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、グラフ領域の第 2 y 軸を操作できます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景色、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 値。 既定の色は <see cref="T:System.Drawing.Color.White" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 有効な ARGB \(アルファ、赤、緑、青\) 値には、このプロパティを設定することができます。  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A> 値は背景のグラデーションの色を指定した場合に使用される最初の色になります。  
  
 アルファ値は、色の不透明度を制御します。 この色を"transparent"に設定した場合などは、アルファ値は 0 を使用する場合\-グラフ領域の背景に色が割り当てられません。 その結果、バック グラウンドは透明になります。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.GradientEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得し、グラフ領域の背景のグラデーションの向きを設定またはグラデーションを使用するかどうかも決定します。</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.GradientStyle" /> 列挙します。 既定値は <see cref="F:System.Web.UI.DataVisualization.Charting.GradientStyle.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle%2A> グラデーションをグラフ領域が表示されを 1 つの場合、グラデーションの方向を特定するが使用するかどうかを確認するプロパティです。  
  
 使用可能なパターンの一覧についてを参照してください、 <xref:System.Web.UI.DataVisualization.Charting.GradientStyle> 列挙します。  
  
 グラデーションの色を使用します。  
  
-   グラフ領域のバック グラウンドでの主要な色の設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A> プロパティです。  
  
-   グラフ領域のバック グラウンドでの 2 番目の色を設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A> プロパティです。  
  
-   この設定 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle%2A> プロパティを目的のグラデーションのスタイル。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.HatchStyleEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の陰影のスタイル、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartHatchStyle" /> 列挙します。 既定値は <see cref="F:System.Web.UI.DataVisualization.Charting.ChartHatchStyle.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> 列挙型のブラシで使用される陰影パターンを指定する <xref:System.Drawing.Drawing2D.HatchBrush>です。 ハッチ パターンは、単色の背景色と線が描かれて、バック グラウンドで構成されます。  
  
 使用可能な陰影のスタイルの一覧についてを参照してください、 <xref:System.Web.UI.DataVisualization.Charting.ChartHatchStyle> 列挙します。  
  
> [!NOTE]
>  線の陰影の色によって決まります、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A> プロパティです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ImageValueEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景イメージ、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>A <see langword="string" /> イメージ ファイルの URL を表す値。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、背景イメージのパスを定義、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea>, 、絶対または相対 URL を指定できます。  
  
 イメージを配置するには、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment%2A> と <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode%2A> プロパティです。  
  
 設定して、「透過」としての画像が表示される色のいずれかを指定することも、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageTransparentColor%2A> プロパティです。  
  
 イメージには、アイコンを含む、.NET Framework でサポートされている任意の有効な画像ファイルがあります。  
  
 背景画像は、グラデーションの色などの他のバック グラウンド プロパティよりも優先されます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の配置、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 背景イメージ。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle" /> 列挙値。 既定値は <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、グラフ領域の背景イメージの配置を決定し、適用されている場合のみ、 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> にプロパティが設定されている <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>します。  
  
 使用可能な配置の設定の詳細については、次を参照してください。、 <xref:System.Web.UI.DataVisualization.Charting.ChartImageAlignmentStyle> トピックを列挙します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の色、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> 透明として描画するオブジェクトの背景イメージ。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 値。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景イメージの描画モード、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode" /> 列挙値。 既定値は <see cref="F:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Tile" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode%2A> プロパティは、イメージを表示する方法を決定は、拡大または縮小など、イメージを並べてことができます。  
  
 イメージをスケーリングすると、グラフ領域の境界内に収まる伸縮されます。 イメージを並べて表示したりが繰り返し描画、グラフ領域の左上隅から開始します。  
  
 使用可能な折り返しモードの詳細については、次を参照してください。、 <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode> トピックを列挙します。  
  
 場合、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageWrapMode%2A> にプロパティが設定されている <xref:System.Web.UI.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, 、イメージを描画する場所によって決定されます、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackImageAlignment%2A> プロパティの設定です。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の背景の 2 番目の色、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 値。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A> プロパティは、の第 2 背景色を決定するいくつかの関連するプロパティのいずれかの <xref:System.Web.UI.DataVisualization.Charting.Chart> オブジェクト、および色のグラデーションを適用するときに使用します。  
  
 設定する <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A> ARGB \(アルファ、赤、緑、青\) の有効な値にします。  
  
 陰影を使用する場合、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A> プロパティは、グラフ領域の陰影の線の色を決定します。  
  
 グラフ領域の背景のグラデーションの色を使用します。  
  
-   主要な色の設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackColor%2A> プロパティです。  
  
-   2 番目の色を設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackSecondaryColor%2A> プロパティです。  
  
-   設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BackGradientStyle%2A> プロパティを目的のグラデーションのスタイル。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の境界線の色、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 値。 既定の色は <see cref="F:System.Drawing.Color.Empty" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定することができます、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BorderColor%2A> プロパティを任意の有効な ARGB \(アルファ、赤、緑、青\) 値にします。  
  
> [!NOTE]
>  円グラフとドーナツ グラフでは、このプロパティを決定放射状および水平の線の色データのラベルが円グラフまたはドーナツ グラフの外側に描画される場合は場合、 `LabelStyle` カスタム プロパティが「外部」に設定します。  
  
 このプロパティは 3D グラフのマーカー ラインも決定場合、 `ShowMarkerLines` にカスタム プロパティが設定されている `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の罫線のスタイル、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>A <see cref="T:System.Web.UI.DataVisualization.Charting.ChartDashStyle" /> グラフ領域の境界線スタイルを決定する列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BorderDashStyle%2A> プロパティが境界線に使用する線のスタイルを決定します。 行には、ソリッド、ピリオドで区切られたなどができます。  
  
 その他の境界線スタイルを参照してください、 <xref:System.Web.UI.DataVisualization.Charting.ChartDashStyle> 列挙体のトピックです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の境界線の幅、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>
          <see langword="integer" /> \(ピクセル単位\)、グラフ領域の罫線の幅を決定する値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 なお、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.BorderWidth%2A> プロパティは、折れ線グラフ、線のスタイル、およびなどで表示されるカスタムの凡例項目の線の幅を設定もできます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.Dispose(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> アンマネージ コードとマネージの両方のリソースを解放するには <see langword="false" /> をアンマネージ リソースだけを解放します。</param>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> クラスによって使用されているアンマネージ リソースを解放し、オプションでマネージ リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeriesDepth">
      <MemberSignature Language="C#" Value="public float GetSeriesDepth (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSeriesDepth(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesDepth(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> の深さを取得します。</param>
        <summary>深さを返す、 <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> グラフ領域にします。</summary>
        <returns>A <see langword="float" /> 値の指定した深さを表す <see cref="T:System.Web.UI.DataVisualization.Charting.Series" />, 、これは、グラフ領域の奥行きに占める割合として測定されます。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 指定した系列の深さを取得するには、このメソッドを呼び出します。 使用される同じ測定単位は、グラフ領域の奥行きに占める割合は、返された値が測定されます。、 <xref:System.Web.UI.DataVisualization.Charting.Point3D.Z%2A> プロパティです。  
  
 すべての系列には、グラフの種類に関係なく、深度があります。 たとえばもポイントし、バブル シリーズの深度である場合でも、全体の深さは、ポイントまたはバブルを描画するのには使用されません。  
  
 カスタムの描画ルーチンで使用されている点の Z 値を決定する一連の深さを使用できます。  
  
> [!NOTE]
>  カスタムの 3D の描画で使用する任意のポイントが相対の 3D 座標を使用して、相対的な 2D 座標を変換する必要があります、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> メソッドです。  
  
 軸から相対的な X および Y の値を取得する、 <xref:System.Web.UI.DataVisualization.Charting.Axis.ValueToPosition%2A> X と Y の両方の軸のメソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSeriesZPosition">
      <MemberSignature Language="C#" Value="public float GetSeriesZPosition (System.Web.UI.DataVisualization.Charting.Series series);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetSeriesZPosition(class System.Web.UI.DataVisualization.Charting.Series series) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.GetSeriesZPosition(System.Web.UI.DataVisualization.Charting.Series)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="series" Type="System.Web.UI.DataVisualization.Charting.Series" />
      </Parameters>
      <Docs>
        <param name="series">
          <see cref="T:System.Web.UI.DataVisualization.Charting.Series" /> の Z 位置を取得します。</param>
        <summary>カスタム描画に役立つ一連の Z 位置を返します。</summary>
        <returns>A <see langword="float" /> をグラフ領域の奥行きに占める割合として測定される、指定した系列の Z 位置を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一連の Z 位置を取得するには、このメソッドを呼び出します。 Z 位置は、データ系列の中央にグラフ領域の背壁は測定され、グラフ領域の奥行きに占める割合として表されます。 たとえば、z 軸に沿った途中に描画される系列は、50 の Z 位置を持っています。  
  
 カスタムの描画ルーチンは、一連の Z 位置が通常使用されます。  
  
> [!NOTE]
>  カスタムの 3D の描画で使用する任意のポイントが相対の 3D 座標を使用して、相対的な 2D 座標を変換する必要があります、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints%2A> メソッドです。  
  
 軸から相対的な X および Y の値を取得する、 <xref:System.Web.UI.DataVisualization.Charting.Axis.ValueToPosition%2A> X と Y の両方の軸のメソッドです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerPlotPosition">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ElementPosition InnerPlotPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ElementPosition InnerPlotPosition" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> オブジェクトで、グラフ領域オブジェクトの内部プロット位置を定義します。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> の内部プロット位置を定義するオブジェクト、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A> プロパティには、データをプロットするために使用するグラフ領域要素内の四角形を定義します。 目盛りは、軸ラベルなどは含まれません。  
  
 関連するこのプロパティ \(0, 0 100, 100\) を使用する座標、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクト全体、なく <xref:System.Web.UI.DataVisualization.Charting.Chart>です。  
  
 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.InnerPlotPosition%2A> プロパティは、複数のグラフ領域に合わせて使用できます。 ただし、1 つのグラフ領域に目盛りと軸ラベルとない場合は、軸の線を整列することはできません。  
  
> [!IMPORTANT]
>  このプロパティは、生成されたグラフ イメージのサイズを変更することがなく円グラフまたはドーナツ グラフなどのグラフのサイズを変更することもできます。  
  
 全体の位置を変更する <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクトの使用、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.Position%2A> プロパティ代わりにします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSameFontSizeForAllAxes">
      <MemberSignature Language="C#" Value="public bool IsSameFontSizeForAllAxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSameFontSizeForAllAxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.IsSameFontSizeForAllAxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または関連するグラフ領域の軸のラベルが同じサイズのかを決定するフラグを設定します。</summary>
        <value>
          <see langword="true" /> かどうかはすべての軸がある、 <see cref="P:System.Web.UI.DataVisualization.Charting.Axis.IsLabelAutoFit" /> プロパティに設定 <see langword="true" /> 同じフォントを使用して、ラベルを表示サイズ以外の場合、 <see langword="false." /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 によって、フォント サイズを自動的に計算、 <xref:System.Web.UI.DataVisualization.Charting.Chart> コントロールの場合と使用されているに最適な最大サイズ。  
  
 このプロパティを持つすべてのグラフ領域の軸に適用されますが <xref:System.Web.UI.DataVisualization.Charting.Axis.IsLabelAutoFit%2A> プロパティに設定 `true`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の一意の名前、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>A <see langword="string" /> の名前を表す値、 <see langword="ChartArea" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 名前、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクトを一意にする必要があります、それ以外の場合、例外がスローされます。  
  
 このプロパティは、取得するときに、インデクサーとして使用できます、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクトから、 <xref:System.Web.UI.DataVisualization.Charting.ChartAreaCollection> オブジェクトです。  
  
 このプロパティは、長さ 0 の文字列を設定します。 場合、 例外がスローされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataVisualization.Charting.ElementPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataVisualization.Charting.ElementPosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> の位置を定義するオブジェクト、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクト内の <see cref="T:System.Web.UI.DataVisualization.Charting.Chart" />です。</summary>
        <value>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ElementPosition" /> グラフ画像内のグラフ領域オブジェクトの位置を定義するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティの位置を定義する、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea> オブジェクト内の <xref:System.Web.UI.DataVisualization.Charting.Chart>, 、目盛りは、軸ラベルなどが含まれています。  
  
 このプロパティ \(0, 0 100, 100\) を使用する座標は、グラフ全体のイメージに関連付けられます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecalculateAxesScale">
      <MemberSignature Language="C#" Value="public void RecalculateAxesScale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RecalculateAxesScale() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.RecalculateAxesScale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>内のグラフに変更が加えられた後は、グラフ領域のプロパティを再計算、 <see cref="E:System.Web.UI.DataVisualization.Charting.Chart.Customize" /> イベントです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用する場合、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Customize> 変更を行うイベント、グラフが正しくレンダリングできるように、グラフ領域のプロパティを更新する必要があります。 たとえば、軸の範囲が変更された場合その軸のラベルは再計算する必要があります。  
  
 使用した後、このメソッドを呼び出して、 <xref:System.Web.UI.DataVisualization.Charting.Chart.Customize> いずれかを行うイベントがグラフ領域に変更します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128,0,0,0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.DataVisualization.Charting.ChartColorEditor, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の影の色、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>
          <see cref="T:System.Drawing.Color" /> 値。 既定の色は <see cref="P:System.Drawing.Color.Black" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティは、任意の有効な ARGB \(アルファ、赤、緑、青\) 値に設定できます。  
  
 アルファ値は、「現実的な」シャドウ効果を実現するために使用できます。「128,0,0,0」の影の色の値を実行してください。  
  
 影を実装するのには、設定、 <xref:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowOffset%2A> プロパティを 0 \(ゼロ\) 以外の値にします。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.Attribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定 \(ピクセル単位\) の影のオフセット、 <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> オブジェクトです。</summary>
        <value>
          <see langword="integer" /> グラフ領域のピクセル単位の影のオフセットを表します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 影を実装するには、ゼロ \(0\) 以外の値を使用します。 正の値とすると、移動し、右下に影になります。 負の値は、上と左にシフトするシャドウがされます。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Web.UI.DataVisualization.Charting.Point3D[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(class System.Web.UI.DataVisualization.Charting.Point3D[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataVisualization.Charting.ChartArea.TransformPoints(System.Web.UI.DataVisualization.Charting.Point3D[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Web.UI.DataVisualization.Charting.Point3D[]" />
      </Parameters>
      <Docs>
        <param name="points">3D の点の配列。</param>
        <summary>GDI \+ の描画メソッドを呼び出すことができる前に行う必要がありますが、3 D の点の配列を 3D 変換を適用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public virtual bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataVisualization.Charting.ChartArea.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはグラフ領域が表示されるかどうかを示す値を設定します。</summary>
        <value>
          <see langword="true" /> グラフ領域を表示する場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このフラグに設定すると `false`, 、グラフ領域に関連付けられているすべての系列、凡例、タイトル、および注釈のオブジェクトも表示されません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataVisualization.Charting.ChartArea" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>