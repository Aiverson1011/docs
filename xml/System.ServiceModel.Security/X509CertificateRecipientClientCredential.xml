<Type Name="X509CertificateRecipientClientCredential" FullName="System.ServiceModel.Security.X509CertificateRecipientClientCredential">
  <TypeSignature Language="C#" Value="public sealed class X509CertificateRecipientClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit X509CertificateRecipientClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.X509CertificateRecipientClientCredential" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>SSL 認証を使用してサービスから提示された証明書を検証するためにクライアントが使用する設定を表します。 また、このクラスには、メッセージ セキュリティを使用してサービスへのメッセージを暗号化するためにクライアントで明示的に構成される、サービスの証明書も含まれます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 This class is used by the <xref:System.ServiceModel.Description.ClientCredentials.ServiceCertificate%2A> property in the <xref:System.ServiceModel.Description.ClientCredentials> class.  
  
   
  
## 例  
 This code shows one way to create an instance of this class.  
  
 [!code-csharp[c\_CreateSTS\#18](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#18)]
 [!code-vb[c\_CreateSTS\#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#18)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.ServiceModel.Description.ClientCredentials.ServiceCertificate" />
  </Docs>
  <Members>
    <Member MemberName="Authentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication Authentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.Authentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SSL 認証を使用して取得されたサービス証明書の検証に使用される設定を取得します。</summary>
        <value>SSL 認証を使用して取得するサービス証明書の検証に使用される設定です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Security.X509ClientCertificateAuthentication> クラスは、SSL\/TLS ネゴシエーションを使用して取得されたサービス証明書を認証するためにクライアント プロキシが使用する設定を表します。  
  
   
  
## 例  
 次のコードは、このプロパティにアクセスする方法を示しています。  
  
 [!code-csharp[c\_CreateSTS\#21](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 DefaultCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービスに使用する既定の証明書を取得または設定します。</summary>
        <value>サービスで使用する既定の証明書。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 証明書に基づくメッセージ セキュリティを使用したバインディングでは、この証明書を使用してサービスへのメッセージを暗号化します。サービスは、クライアントへの応答に署名する際に、この証明書を使用することが要求されます。  
  
   
  
## 例  
 次のコードは、このプロパティにアクセスする方法を示しています。  
  
 [!code-csharp[c\_CreateSTS\#24](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">資格情報が読み取り専用のときに設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ScopedCertificates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Uri, class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; ScopedCertificates" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用して、クライアントが通信しているサービスに相当するスコープを持つ証明書を取得します。</summary>
        <value>使用して、クライアントが通信しているサービスに相当するスコープを持つ証明書。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティを使用すると、クライアントは、通信するサービスの URL に基づいて、使用するサービス証明書を構成できます。 これは、クライアントが複数のサービス \(エンド サービスと中間セキュリティ トークン サービス\) と通信している可能性がある発行済みトークンのシナリオで特に便利です。 証明書に基づくメッセージ セキュリティを使用したバインドにおいて、この証明書を使用してサービスへのメッセージを暗号化します。サービスがクライアントへの応答に署名する際には、この証明書を使用することが要求されます。  
  
 バインディングにサービスの証明書が必要で、サービスの URL に対する特定の証明書が `ScopedCertificates` 内に存在しない場合は、既定の証明書が使用されます。  
  
   
  
## 例  
 次のコードは、このプロパティを設定する方法を示しています。  
  
 [!code-csharp[c\_CreateSTS\#33](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">資格情報が読み取り専用のときに設定しようとしました。</exception>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetDefaultCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>サービスに使用する既定の証明書を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 これらのメソッドは、指定されたパラメーターに一致する指定された場所にあるストアから証明書を取得します。  
  
 証明書に基づくメッセージ セキュリティを使用したバインディングでは、この証明書を使用してサービスへのメッセージを暗号化します。サービスは、クライアントへの応答に署名する際に、この証明書を使用することが要求されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.DefaultCertificate" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
      </Parameters>
      <Docs>
        <param name="subjectName">サブジェクト識別名。</param>
        <param name="storeLocation">サービスがサービス証明書を取得するときに使用する証明書ストアの場所。</param>
        <param name="storeName">開く X.509 証明書ストアの名前。</param>
        <summary>サービスに使用する既定の証明書を指定します。 証明書に基づくメッセージ セキュリティを使用したバインディングでは、この証明書を使用してサービスへのメッセージを暗号化します。サービスは、クライアントへの応答に署名する際に、この証明書を使用することが要求されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、`subjectName` パラメーターに一致する指定された場所にあるストアから証明書を取得します。  
  
 `storeLocation` の値は、<xref:System.Security.Cryptography.X509Certificates.StoreLocation> 列挙体に格納されます。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: ローカル コンピューターに割り当てられた証明書ストア。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: 現在のユーザーが使用する証明書ストア \(既定値\)。  
  
 アプリケーションがシステム アカウントで実行されている場合、証明書は通常、<xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> にあります。 アプリケーションがユーザー アカウントで実行されている場合、証明書は通常、<xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> にあります。  
  
 `storeName` の値は、<xref:System.Security.Cryptography.X509Certificates.StoreName> 列挙体に格納されます。  
  
   
  
## 例  
 このメソッドを使用して、使用する X.509 証明書を指定するコードを次に示します。  
  
 [!code-csharp[c\_CreateSTS\#23](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subjectName" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">資格情報が読み取り専用のときに設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultCertificate">
      <MemberSignature Language="C#" Value="public void SetDefaultCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDefaultCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetDefaultCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="storeLocation">サービスがサービス証明書を取得するときに使用する証明書ストアの場所。</param>
        <param name="storeName">開く X.509 証明書ストアの名前。</param>
        <param name="findType">実行する X.509 検索の種類。</param>
        <param name="findValue">X.509 証明書ストアで検索する値。</param>
        <summary>サービスに使用する既定の証明書を指定します。 証明書に基づくメッセージ セキュリティを使用したバインディングでは、この証明書を使用してサービスへのメッセージを暗号化します。サービスは、クライアントへの応答に署名する際に、この証明書を使用することが要求されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method gets a certificate from the store in the specified location that matches the **parameterReference tag is not supported!!!!**  
 and **parameterReference tag is not supported!!!!**  
 parameters.  
  
 Values for **parameterReference tag is not supported!!!!**  
 are included in the <xref:System.Security.Cryptography.X509Certificates.StoreLocation> enumeration:  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: the certificate store assigned to the local machine.  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: the certificate store used by the current user \(default\).  
  
 If the application is running under a system account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>. If the application is running under a user account, then the certificate is typically in <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>.  
  
 Values for **parameterReference tag is not supported!!!!**  
 are included in the <xref:System.Security.Cryptography.X509Certificates.StoreName> enumeration.  
  
 Values for **parameterReference tag is not supported!!!!**  
 are included in the <xref:System.Security.Cryptography.X509Certificates.X509FindType> enumeration.  
  
 The most commonly used enumeration is <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName>, which does a case\-insensitive search on the subject name of certificates in the specified store. This can be an imprecise search. If no certificates or multiple certificates that match the criteria are found, an <xref:System.InvalidOperationException> is thrown.  
  
   
  
## 例  
 The following code uses this method to specify an X.509 certificate to use.  
  
 [!code-csharp[c\_CreateSTS\#22](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="findValue" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">資格情報が読み取り専用のときに設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(string subjectName, valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subjectName" Type="System.String" />
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="subjectName">完全修飾サブジェクト名。</param>
        <param name="storeLocation">サービスがサービス証明書を取得するときに使用する証明書ストアの場所。</param>
        <param name="storeName">開く X.509 証明書ストアの名前。</param>
        <param name="targetService">スコープを設定する URL。</param>
        <summary>サブジェクト名、証明書ストアの場所、および証明書ストア名を使用して証明書を設定し、スコープを設定する URL に使用するコレクションに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `storeLocation` の値は、<xref:System.Security.Cryptography.X509Certificates.StoreLocation> 列挙体に格納されます。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: ローカル コンピューターに割り当てられた証明書ストア。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: 現在のユーザーが使用する証明書ストア \(既定値\)。  
  
 アプリケーションがシステム アカウントで実行されている場合、証明書は通常、<xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> にあります。 アプリケーションがユーザー アカウントで実行されている場合、証明書は通常、<xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> にあります。  
  
 `storeName` の値は、<xref:System.Security.Cryptography.X509Certificates.StoreName> 列挙体に格納されます。  
  
   
  
## 例  
 次のコードは、このメソッドを呼び出す方法を示しています。  
  
 [!code-csharp[c\_CreateSTS\#25](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetService" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">資格情報が読み取り専用のときに設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetScopedCertificate">
      <MemberSignature Language="C#" Value="public void SetScopedCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, Uri targetService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScopedCertificate(valuetype System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, valuetype System.Security.Cryptography.X509Certificates.StoreName storeName, valuetype System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue, class System.Uri targetService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SetScopedCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storeLocation" Type="System.Security.Cryptography.X509Certificates.StoreLocation" />
        <Parameter Name="storeName" Type="System.Security.Cryptography.X509Certificates.StoreName" />
        <Parameter Name="findType" Type="System.Security.Cryptography.X509Certificates.X509FindType" />
        <Parameter Name="findValue" Type="System.Object" />
        <Parameter Name="targetService" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="storeLocation">サービスがサービス証明書を取得するときに使用する証明書ストアの場所。</param>
        <param name="storeName">開く X.509 証明書ストアの名前。</param>
        <param name="findType">実行する X.509 検索の種類。</param>
        <param name="findValue">X.509 証明書ストアで検索する値。</param>
        <param name="targetService">スコープを設定する URL。</param>
        <summary>証明書による証明書ストアの場所、証明書ストア名、X.509 検索し、検索する値の型を設定し、スコープを設定する URL に使用するコレクションに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `storeLocation` の値は、<xref:System.Security.Cryptography.X509Certificates.StoreLocation> 列挙体に格納されます。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine>: ローカル コンピューターに割り当てられた証明書ストア。  
  
-   <xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser>: 現在のユーザーが使用する証明書ストア \(既定値\)。  
  
 アプリケーションがシステム アカウントで実行されている場合、証明書は通常、<xref:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine> にあります。 アプリケーションがユーザー アカウントで実行されている場合、証明書は通常、<xref:System.Security.Cryptography.X509Certificates.StoreLocation.CurrentUser> にあります。  
  
 `storeName` の値は、<xref:System.Security.Cryptography.X509Certificates.StoreName> 列挙体に格納されます。  
  
 `findType` の値は、<xref:System.Security.Cryptography.X509Certificates.X509FindType> 列挙体に格納されます。  
  
 最もよく使用される列挙体は <xref:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName> です。これは、指定されたストア内の証明書のサブジェクト名を検索 \(大文字小文字の違いは無視\) します。 この検索結果は厳密ではない可能性があります。 条件に一致する証明書が見つからないか、複数見つかった場合は、<xref:System.InvalidOperationException> がスローされます。  
  
   
  
## 例  
 次のコードは、このメソッドを呼び出す方法を示しています。  
  
 [!code-csharp[c\_CreateSTS\#20](~/samples/snippets/csharp/VS_Snippets_CFX/c_creatests/cs/source.cs#20)]
 [!code-vb[c\_CreateSTS\#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_creatests/vb/source.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetService" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">資格情報が読み取り専用のときに設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="SslCertificateAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509ServiceCertificateAuthentication SslCertificateAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.SslCertificateAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509ServiceCertificateAuthentication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または使用する SSL 証明書の検証コントロールを設定します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.X509ServiceCertificateAuthentication" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティでは、WCF x509certificate 検証を使用して、WCF クライアント サーバー証明書を検証することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetScopedCertificate">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ストアから証明書を設定し、スコープを設定する URL によってインデックス付けされたコレクションに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.Security.X509CertificateRecipientClientCredential.ScopedCertificates" />
      </Docs>
    </MemberGroup>
  </Members>
</Type>