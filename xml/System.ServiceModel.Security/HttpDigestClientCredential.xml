<Type Name="HttpDigestClientCredential" FullName="System.ServiceModel.Security.HttpDigestClientCredential">
  <TypeSignature Language="C#" Value="public sealed class HttpDigestClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpDigestClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.HttpDigestClientCredential" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>HTTP クライアントのダイジェスト認証に使用されます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 ダイジェスト認証では、通信を行う双方が共有シークレット \(パスワード\) を知っていることを検証します。 認証を行う際には、暗号化されていないパスワードは送信されません。 ダイジェスト認証は、チャレンジ レスポンス パラダイムに基づいています。 ダイジェスト スキームは nonce \("number used once"\) 値を使用したチャレンジを送信します。 応答には、ユーザー名のチェックサム、パスワード、nonce 値、HTTP メソッド、および要求された URI が含まれている必要があります。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>提供されたクライアント資格情報を使用してクライアントが許可する偽装レベルを取得または設定します。</summary>
        <value>クライアントが HTTP ダイジェスト認証の一部としてサーバーに付与する <see cref="T:System.Security.Principal.TokenImpersonationLevel" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 次の値を使用できます。  
  
 <xref:System.Security.Principal.TokenImpersonationLevel.Delegation>、  
  
 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>、および  
  
 <xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>。  
  
 ダイジェスト認証の制限により、クライアントが既定以外の資格情報を使用している場合は、`Impersonation` レベルと `Delegation` レベルのみを使用できます。  
  
   
  
## 例  
 このプロパティを設定する方法を次の例に示します。  
  
 [!code-csharp[S\_UE\_HttpDigestClientCredential\#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#1)]
 [!code-vb[S\_UE\_HttpDigestClientCredential\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_httpdigestclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ダイジェスト ベースの認証に使用するネットワーク資格情報を取得または設定します。</summary>
        <value>ダイジェスト ベースの認証に使用する <see cref="T:System.Net.NetworkCredential" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 If not specified, the default thread credential will be used.  
  
   
  
## 例  
 The following code examples show how to authenticate the client as a different principal.  
  
 This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.  
  
 [!code-csharp[S\_UE\_HttpDigestClientCredential\#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#2)]  
  
 And here is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.  
  
 [!code-csharp[S\_UE\_HttpDigestClientCredential\#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>