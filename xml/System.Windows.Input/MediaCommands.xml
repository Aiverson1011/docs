<Type Name="MediaCommands" FullName="System.Windows.Input.MediaCommands">
  <TypeSignature Language="C#" Value="public static class MediaCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MediaCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MediaCommands" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>一連の標準的なメディア関連コマンドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コマンドで、 <xref:System.Windows.Input.MediaCommands> クラスと、他のコマンドなど、ライブラリ クラスをコマンド <xref:System.Windows.Input.ComponentCommands> と <xref:System.Windows.Input.ApplicationCommands>, 、アプリケーション プログラマが頻繁に発生する一般的なコマンドのセットを表現するものでは。  コマンドでは、インスタンスのみを表す、 <xref:System.Windows.Input.RoutedCommand> とコマンドの実装ロジックではありません。 実装ロジックが使用してコマンドにバインドされている、 <xref:System.Windows.UIElement.CommandBindings%2A>です。  たとえば場合、 <xref:System.Windows.Input.MediaCommands.Play%2A> コントロール \(コマンドのターゲット\) を実行するロジックでコマンドの実行、 <xref:System.Windows.Input.MediaCommands.Play%2A> コマンドできない可能性があります指定されたコマンドの対象でそのため、アプリケーションの作成者はことコマンド ターゲットがコマンドを処理する方法を決定するロジックの作成を担当します。  
  
 多くのコントロールでは、コマンド ライブラリのコマンドの多くの実装ロジックを表示します。  など、 <xref:System.Windows.Controls.TextBox> クラス ロジックの提供、 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> コマンド、 <xref:System.Windows.Input.ApplicationCommands.Cut%2A> コマンド、 <xref:System.Windows.Input.ApplicationCommands.Copy%2A> コマンド、 <xref:System.Windows.Input.ApplicationCommands.Undo%2A> コマンド、および <xref:System.Windows.Input.ApplicationCommands.Redo%2A> コマンドです。  
  
 詳細については、コマンドとコマンド処理を参照してください、 [コマンドの実行の概要](http://msdn.microsoft.com/ja-jp/bc208dfe-367d-426a-99de-52b7e7511e81)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <Member MemberName="BoostBass">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BoostBass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BoostBass" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.BoostBass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[低音を強調\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 低音をブーストします。  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、低音の強調をオンまたはオフに切り替えるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_BoostBass"></a>   
## XAML 属性の使用方法  
  
```  
<object property="BoostBass"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ChannelDown">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ChannelDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ChannelDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.ChannelDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>チャンネル ダウン コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> チャンネル ダウン  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、チャネルの値をデクリメントするという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_ChannelDown"></a>   
## XAML 属性の使用方法  
  
```  
<object property="ChannelDown"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ChannelUp">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ChannelUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ChannelUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.ChannelUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>チャンネル アップ コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> チャンネル アップ  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、チャネルの値をインクリメントするという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_ChannelUp"></a>   
## XAML 属性の使用方法  
  
```  
<object property="ChannelUp"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseBass">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseBass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseBass" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.DecreaseBass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>低音を下げるコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 低音を下げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、低音を下げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_DecreaseBass"></a>   
## XAML 属性の使用方法  
  
```  
<object property="DecreaseBass"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseMicrophoneVolume">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseMicrophoneVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseMicrophoneVolume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.DecreaseMicrophoneVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マイクの音量を下げるコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> マイクの音量を下げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、マイクの音量を下げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_DecreaseMicrophoneVolume"></a>   
## XAML 属性の使用方法  
  
```  
<object property="DecreaseMicrophoneVolume"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseTreble">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseTreble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseTreble" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.DecreaseTreble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[高音を下げる\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 高音を下げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、高音を下げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_DecreaseTreble"></a>   
## XAML 属性の使用方法  
  
```  
<object property="DecreaseTreble"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseVolume">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseVolume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.DecreaseVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボリュームを下げるコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 音量を下げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、音量を下げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_DecreaseVolume"></a>   
## XAML 属性の使用方法  
  
```  
<object property="DecreaseVolume"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="FastForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand FastForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand FastForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.FastForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>早送りコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 高速順方向  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、再生速度を上げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_FastForward"></a>   
## XAML 属性の使用方法  
  
```  
<object property="FastForward"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseBass">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseBass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseBass" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.IncreaseBass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[低音を上げる\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 低音を上げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、低音を上げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_IncreaseBass"></a>   
## XAML 属性の使用方法  
  
```  
<object property="IncreaseBass"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseMicrophoneVolume">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseMicrophoneVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseMicrophoneVolume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.IncreaseMicrophoneVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[マイクの音量を上げる\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> マイクの音量を上げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、マイクの音量を上げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_IncreaseMicrophoneVolume"></a>   
## XAML 属性の使用方法  
  
```  
<object property="IncreaseMicrophoneVolume"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseTreble">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseTreble { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseTreble" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.IncreaseTreble" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>高音を上げるコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 高音を上げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、高音を上げるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_IncreaseTreble"></a>   
## XAML 属性の使用方法  
  
```  
<object property="IncreaseTreble"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseVolume">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseVolume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.IncreaseVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ボリュームを上げるコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 音量を上げる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、音量を上げる目的を示します。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_IncreaseVolume"></a>   
## XAML 属性の使用方法  
  
```  
<object property="IncreaseVolume"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MuteMicrophoneVolume">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MuteMicrophoneVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MuteMicrophoneVolume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.MuteMicrophoneVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[マイクの音量をミュート\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> マイクの音量をミュートします。  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、マイクをミュートするという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_MuteMicrophoneVolume"></a>   
## XAML 属性の使用方法  
  
```  
<object property="MuteMicrophoneVolume"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="MuteVolume">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MuteVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MuteVolume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.MuteVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[音量をミュート\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 音量をミュートします。  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、音量をミュートにするという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_MuteVolume"></a>   
## XAML 属性の使用方法  
  
```  
<object property="MuteVolume"/>  
```  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="NextTrack">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NextTrack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NextTrack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.NextTrack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>次のトラック コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 次のトラック  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、次のトラックを選択するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_NextTrack"></a>   
## XAML 属性の使用方法  
  
```  
<object property="NextTrack"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Pause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Pause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.Pause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>一時停止コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 一時停止  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、再生を一時停止するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_Pause"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Pause"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Play { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Play" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.Play" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>再生コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 再生  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、現在の位置での再生を開始するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_Play"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Play"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviousTrack">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PreviousTrack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PreviousTrack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.PreviousTrack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>「前のトラック」コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 前のトラック  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、前のトラックを選択するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_PreviousTrack"></a>   
## XAML 属性の使用方法  
  
```  
<object property="PreviousTrack"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Record">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Record { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Record" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.Record" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>録音コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> レコード  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、記録を開始するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_Record"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Record"/>  
```  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Rewind">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Rewind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Rewind" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.Rewind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[巻き戻し\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 巻き戻し  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、逆方向に再生するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_Rewind"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Rewind"/>  
```  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Select { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Select" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 選択  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、選択モードにメディアを挿入するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_Select"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Select"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Stop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Stop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.Stop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>停止コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 停止  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、再生を停止するという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_Stop"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Stop"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="ToggleMicrophoneOnOff">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleMicrophoneOnOff { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleMicrophoneOnOff" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.ToggleMicrophoneOnOff" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マイクのオン\/オフの切り替えコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 表示\/非表示のマイク OnOff  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、マイクをオンまたはオフに切り替えるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_ToggleMicrophoneOnOff"></a>   
## XAML 属性の使用方法  
  
```  
<object property="ToggleMicrophoneOnOff"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="TogglePlayPause">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TogglePlayPause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TogglePlayPause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MediaCommands.TogglePlayPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[再生\/一時停止の切り替え\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 表示\/非表示の再生の一時停止  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、再生と一時停止を切り替えるという意図を示しています。  
  
 限りません。 任意のオブジェクトのコマンドに対応する実際の実装はありません。多くの場合は、そのコマンドに対する応答として実装は、アプリケーションの作成者の責任です。  
  
<a name="xamlAttributeUsage_TogglePlayPause"></a>   
## XAML 属性の使用方法  
  
```  
<object property="TogglePlayPause"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>