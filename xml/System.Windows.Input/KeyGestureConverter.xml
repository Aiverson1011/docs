<Type Name="KeyGestureConverter" FullName="System.Windows.Input.KeyGestureConverter">
  <TypeSignature Language="C#" Value="public class KeyGestureConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGestureConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGestureConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>変換、 <see cref="T:System.Windows.Input.KeyGesture" /> オブジェクトとその他の種類の間です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Input.KeyGestureConverter> クラス インスタンスの変換しか <xref:System.Windows.Input.KeyGesture> との間、 <xref:System.String>です。  
  
 <xref:System.Windows.Input.KeyGestureConverter> との間の変換、 <xref:System.String> 修飾子キーとキー間の区切り記号として「\+」文字を使用します。  たとえば、文字列 `Control+A` に変換されます、 <xref:System.Windows.Input.KeyGesture> で、 <xref:System.Windows.Input.KeyGesture.Modifiers%2A> プロパティを等しく <xref:System.Windows.Input.ModifierKeys.Control> と <xref:System.Windows.Input.KeyGesture.Key%2A> プロパティを等しく <xref:System.Windows.Input.Key.A>します。  
  
<a name="xamlTextUsage_KeyGestureConverter"></a>   
## XAML テキストの使用方法  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGestureConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Input.KeyGesture" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">このコンバーターの呼び出される環境に関する情報を提供する書式指定コンテキスト。</param>
        <param name="sourceType">変換の評価対象の型。</param>
        <summary>インスタンスに指定した型のオブジェクトを変換できるかどうかを判断 <see cref="T:System.Windows.Input.KeyGesture" />, 、指定したコンテキストを使用します。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="sourceType" /> 型は、 <see cref="T:System.String" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">このコンバーターの呼び出される環境に関する情報を提供する書式指定コンテキスト。</param>
        <param name="destinationType">変換の評価対象の型。</param>
        <summary>インスタンスかどうかを決定 <see cref="T:System.Windows.Input.KeyGesture" /> 指定したコンテキストを使用して、指定された型に変換できます。</summary>
        <returns>
          <see langword="true" /> 場合 <paramref name="destinationType" /> 型は、 <see cref="T:System.String" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">このコンバーターの呼び出される環境に関する情報を提供する書式指定コンテキスト。</param>
        <param name="culture">カルチャ固有の情報です。</param>
        <param name="source">変換対象のオブジェクト。</param>
        <summary>指定したオブジェクトを変換しようと、 <see cref="T:System.Windows.Input.KeyGesture" />, 、指定したコンテキストを使用しています。</summary>
        <returns>変換後のオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Input.KeyGestureConverter> との間の変換、 <xref:System.String> 修飾子キーとキー間の区切り文字として「\+」キーを使用します。  たとえば、文字列 `Control+A` に変換されます、 <xref:System.Windows.Input.KeyGesture> で、 <xref:System.Windows.Input.KeyGesture.Modifiers%2A> プロパティを等しく <xref:System.Windows.Input.ModifierKeys.Control> と <xref:System.Windows.Input.KeyGesture.Key%2A> プロパティを等しく <xref:System.Windows.Input.Key.A>します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="source" /> を変換できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">このコンバーターの呼び出される環境に関する情報を提供する書式指定コンテキスト。</param>
        <param name="culture">カルチャ固有の情報です。</param>
        <param name="value">変換対象のオブジェクト。</param>
        <param name="destinationType">オブジェクトの変換後の型。</param>
        <summary>変換しようと、 <see cref="T:System.Windows.Input.KeyGesture" /> 指定した型に指定したコンテキストを使用します。</summary>
        <returns>変換後のオブジェクトまたは空の文字列場合 <paramref name="value" /> は <see langword="null" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `destinationType` 必要があります <xref:System.String>します。  
  
 <xref:System.Windows.Input.KeyGestureConverter> との間の変換、 <xref:System.String> 修飾子キーとキー間の区切り文字として「\+」キーを使用します。 たとえば、 <xref:System.Windows.Input.KeyGesture> で、 <xref:System.Windows.Input.KeyGesture.Modifiers%2A> プロパティを等しく <xref:System.Windows.Input.ModifierKeys.Control> と <xref:System.Windows.Input.KeyGesture.Key%2A> プロパティを等しく <xref:System.Windows.Input.Key.A> 文字列に変換されます `Control+A`します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="destinationType" /> は <see langword="null" /> です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="value" /> を変換できません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>