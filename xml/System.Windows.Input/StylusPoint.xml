<Type Name="StylusPoint" FullName="System.Windows.Input.StylusPoint">
  <TypeSignature Language="C#" Value="public struct StylusPoint : IEquatable&lt;System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StylusPoint extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.StylusPoint" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Input.StylusPoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>デジタイザーとスタイラスから収集された 1 つのデータ ポイントを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Windows.Input.StylusPoint> ユーザー デジタイザーを使用してインクを入力するときにデータを収集します。 含まれるプロパティの製造元によって異なりますデジタイザーで報告される情報が異なるため、 <xref:System.Windows.Input.StylusPoint> 異なることができます。 プロパティがあるかどうかを判断する、 <xref:System.Windows.Input.StylusPoint>, を呼び出す、 <xref:System.Windows.Input.StylusPoint.HasProperty%2A> メソッドです。<xref:System.Windows.Input.StylusPoint.Description%2A> プロパティを含む、 <xref:System.Windows.Input.StylusPointDescription> にどのプロパティが指定する、 <xref:System.Windows.Input.StylusPoint>です。 すべて <xref:System.Windows.Input.StylusPoint> オブジェクトに指定するプロパティを含める \(x, y\) 座標、だけでなく、不足します。  
  
   
  
## 例  
 次の例の各プロパティの名前と値を取得する <xref:System.Windows.Input.StylusPoint> で、 <xref:System.Windows.Input.StylusPointCollection>です。 この例では、 <xref:System.Windows.Controls.TextBlock> と呼ばれる `packetOutput`です。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。</param>
        <param name="y">
          <see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。</param>
        <summary>指定した \(x, y\) 座標を使用して、<see cref="T:System.Windows.Input.StylusPoint" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following example demonstrates how to create a <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy\#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">X 座標、 <see cref="T:System.Windows.Input.StylusPoint" />です。</param>
        <param name="y">Y 座標、 <see cref="T:System.Windows.Input.StylusPoint" />です。</param>
        <param name="pressureFactor">適用される圧力の量、 <see cref="T:System.Windows.Input.StylusPoint" />です。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Input.StylusPoint" /> クラスの指定 \(x, y\) 座標と圧力を使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `pressureFactor` 0 ~ 1 の値が必要です。 値 0 は、負荷を適用しないこと、値が 1 の最大負荷量が適用されていることを示しを示します。 値 0.5 は、最大の圧力の 50% が適用されると、具合ことを示します。  
  
   
  
## 例  
 次の例では、作成、 <xref:System.Windows.Input.StylusPoint>です。  
  
 [!code-csharp[PacketSpy\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy\#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pressureFactor" /> 0 より小さいか、1 より大きいです。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor, System.Windows.Input.StylusPointDescription stylusPointDescription, int[] additionalValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor, class System.Windows.Input.StylusPointDescription stylusPointDescription, int32[] additionalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single,System.Windows.Input.StylusPointDescription,System.Int32[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
        <Parameter Name="stylusPointDescription" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="additionalValues" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="x">
          <see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。</param>
        <param name="y">
          <see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。</param>
        <param name="pressureFactor">
          <see cref="T:System.Windows.Input.StylusPoint" /> に適用される圧力の量。</param>
        <param name="stylusPointDescription">
          <see cref="T:System.Windows.Input.StylusPoint" /> に格納されている追加のプロパティを指定する <see cref="T:System.Windows.Input.StylusPointDescription" />。</param>
        <param name="additionalValues">
          <c>stylusPointDescription</c> で定義されたプロパティの値を含む、32 ビット符号付き整数の配列。</param>
        <summary>指定された \(x, y\) 座標、<paramref name="pressureFactor" />、および <see cref="T:System.Windows.Input.StylusPointDescription" /> で指定された追加のパラメーターを使用して、<see cref="T:System.Windows.Input.StylusPoint" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 The following example demonstrates how to create a <xref:System.Windows.Input.StylusPoint>.  
  
 [!code-csharp[PacketSpy\#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy\#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pressureFactor" /> が 0 より小さいか、または 1 を超えています。  
  
 または  
  
 ボタン プロパティに対応する <paramref name="additionalValues" /> の値が、0 でも 1 でもありません。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="additionalValues" /> の値の数が、<paramref name="stylusPointDescription" /> のプロパティの数から 3 を引いた値と一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定、 <see cref="T:System.Windows.Input.StylusPointDescription" /> に格納されたプロパティを指定する、 <see cref="T:System.Windows.Input.StylusPoint" />です。</summary>
        <value>
          <see cref="T:System.Windows.Input.StylusPointDescription" /> に格納されたプロパティの指定、 <see cref="T:System.Windows.Input.StylusPoint" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、 <xref:System.Windows.Input.StylusPoint.Description%2A> プロパティを取得するプロパティの値から <xref:System.Windows.Input.StylusPoint> で、 <xref:System.Windows.Input.StylusPointCollection>です。 この例では、 <xref:System.Windows.Controls.TextBlock> と呼ばれる `packetOutput`です。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <see cref="T:System.Windows.Input.StylusPoint" /> 現在と比較する <see cref="T:System.Windows.Input.StylusPoint" />です。</param>
        <summary>指定したオブジェクトが等しいかどうかを示す値を返す、 <see cref="T:System.Windows.Input.StylusPoint" />です。</summary>
        <returns>オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、2 つ確認 <xref:System.Windows.Input.StylusPoint> オブジェクトの等価性。<xref:System.Windows.Input.StylusPoint.X%2A>, 、<xref:System.Windows.Input.StylusPoint.Y%2A>, 、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティを `point1` と `point2` と同じに設定値に設定する、「2 つの styluspoint の各オブジェクトが等しい」。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Input.StylusPoint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Input.StylusPoint value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Input.StylusPoint" /> 現在と比較する <see cref="T:System.Windows.Input.StylusPoint" />です。</param>
        <summary>示すブール値を返すかどうか、指定した <see cref="T:System.Windows.Input.StylusPoint" /> 値を現在は <see cref="T:System.Windows.Input.StylusPoint" />です。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトは同一です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、2 つ確認 <xref:System.Windows.Input.StylusPoint> オブジェクトの等価性。<xref:System.Windows.Input.StylusPoint.X%2A>, 、<xref:System.Windows.Input.StylusPoint.Y%2A>, 、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティを `point1` と `point2` と同じに設定値に設定する、「2 つの styluspoint の各オブジェクトが等しい」。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">比較対象となる最初の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">比較対象となる 2 番目の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>2 つ指定されているかどうかを示すブール値を返す <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトが等しい。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトは同一です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では、2 つ確認 <xref:System.Windows.Input.StylusPoint> オブジェクトの等価性。<xref:System.Windows.Input.StylusPoint.X%2A>, 、<xref:System.Windows.Input.StylusPoint.Y%2A>, 、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティを `point1` と `point2` と同じに設定値に設定する、「2 つの styluspoint の各オブジェクトが等しい」。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#8](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#8)]
[!code-vb[PacketSpy#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>このインスタンスのハッシュ コードである 32 ビット符号付き整数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public int GetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetPropertyValue(System.Windows.Input.StylusPointProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">
          <see cref="T:System.Windows.Input.StylusPointProperty" /> 取得するには、どのプロパティ値を指定します。</param>
        <summary>指定したプロパティの値を返します。</summary>
        <returns>指定した値 <see cref="T:System.Windows.Input.StylusPointProperty" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チェックするかどうか、 <xref:System.Windows.Input.StylusPoint> 呼び出し、指定されたプロパティが含まれています、 <xref:System.Windows.Input.StylusPoint.HasProperty%2A> いずれかを呼び出す前に、 <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> メソッドまたは <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> メソッドです。  
  
   
  
## 例  
 次の例では、プロパティの値を取得する前に、スタイラス ポイントの存在を確認します。 この例では、 <xref:System.Windows.Input.StylusPoint> と呼ばれる `point`です。  
  
 [!code-csharp[PacketSpy\#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy\#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stylusPointProperty" /> 内のプロパティではない <see cref="P:System.Windows.Input.StylusPoint.Description" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.HasProperty(System.Windows.Input.StylusPointProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">
          <see cref="T:System.Windows.Input.StylusPointProperty" /> で確認する、 <see cref="T:System.Windows.Input.StylusPoint" />です。</param>
        <summary>返します。 かどうか、現在 <see cref="T:System.Windows.Input.StylusPoint" /> 指定したプロパティが含まれています。</summary>
        <returns>
          <see langword="true" /> 場合、指定した <see cref="T:System.Windows.Input.StylusPointProperty" /> 現在 <see cref="T:System.Windows.Input.StylusPoint" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チェックするかどうか、 <xref:System.Windows.Input.StylusPoint> 呼び出し、指定されたプロパティが含まれています、 <xref:System.Windows.Input.StylusPoint.HasProperty%2A> いずれかを呼び出す前に、 <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> メソッドまたは <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> メソッドです。  
  
   
  
## 例  
 次の例では、プロパティの値を取得する前に、スタイラス ポイントの存在を確認します。 この例では、 <xref:System.Windows.Input.StylusPoint> と呼ばれる `point`です。  
  
 [!code-csharp[PacketSpy\#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy\#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxXY">
      <MemberSignature Language="C#" Value="public static readonly double MaxXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MaxXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\(X, y\) のペアの有効な最大値を指定する座標。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例は、確実、 <xref:System.Windows.Input.StylusPoint.X%2A> のプロパティ、 <xref:System.Windows.Input.StylusPoint> が有効な値に設定します。  
  
 [!code-csharp[PacketSpy\#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy\#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinXY">
      <MemberSignature Language="C#" Value="public static readonly double MinXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MinXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\(X, y\) のペアの有効な最小の値を指定する座標。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例は、確実、 <xref:System.Windows.Input.StylusPoint.X%2A> のプロパティ、 <xref:System.Windows.Input.StylusPoint> が有効な値に設定します。  
  
 [!code-csharp[PacketSpy\#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy\#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool op_Equality (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Equality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">比較対象となる最初の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">比較対象となる 2 番目の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>指定した 2 つを比較して <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトし、等しいかどうかを判断します。</summary>
        <returns>
          <see langword="true" /> 場合、 <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトは同一です。 それ以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The equivalent method for this operator is <xref:System.Windows.Input.StylusPoint.Equals%28System.Windows.Input.StylusPoint%2CSystem.Windows.Input.StylusPoint%29?displayProperty=fullName>  
  
## 例  
 次の例の確認 2 <xref:System.Windows.Input.StylusPoint> オブジェクトの等価性。<xref:System.Windows.Input.StylusPoint.X%2A>, 、<xref:System.Windows.Input.StylusPoint.Y%2A>, 、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティを `point1` と `point2` と同じに設定値に設定する、「2 つの styluspoint の各オブジェクトが等しい」。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#9](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#9)]
[!code-vb[PacketSpy#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static System.Windows.Point op_Explicit (System.Windows.Input.StylusPoint stylusPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Explicit(valuetype System.Windows.Input.StylusPoint stylusPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Explicit(System.Windows.Input.StylusPoint)~System.Windows.Point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint">
          <see cref="T:System.Windows.Input.StylusPoint" /> へのキャストを <see cref="T:System.Windows.Point" />です。</param>
        <summary>指定したキャスト <see cref="T:System.Windows.Input.StylusPoint" /> に、 <see cref="T:System.Windows.Point" />です。</summary>
        <returns>A <see cref="T:System.Windows.Point" /> として同じ \(x, y\) 座標を格納している <paramref name="stylusPoint" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The equivalent method for this operator is ?qualifyHint=True&autoUpgrade=False  
  
## 例  
 次の例では、キャスト、 <xref:System.Windows.Input.StylusPoint> に、 <xref:System.Windows.Point> すべての境界線の先頭に円を描画します。 この例では、 <xref:System.Windows.Controls.InkCanvas> と呼ばれる `inkcanvas1` と、 <xref:System.Windows.UIElement.StylusDown> イベントは、例では、イベント ハンドラーに関連付けられています。  
  
 [!code-csharp[PacketSpy\#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#13)]
 [!code-vb[PacketSpy\#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool op_Inequality (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Inequality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">比較対象となる最初の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">比較対象となる 2 番目の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>示すブール値を返すかどうか、指定した <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトが等しくないです。</summary>
        <returns>
          <see langword="true" /> 場合は、指定した <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトが等しくない以外の場合、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The equivalent method for this operator is <xref:System.Windows.Input.StylusPoint.Compare%28System.Windows.Input.StylusPoint%2CSystem.Windows.Input.StylusPoint%29?displayProperty=fullName>  
  
## 例  
 次の例では、2 つをチェック <xref:System.Windows.Input.StylusPoint> の非等値オブジェクトです。<xref:System.Windows.Input.StylusPoint.X%2A>, 、<xref:System.Windows.Input.StylusPoint.Y%2A>, 、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティを `point1` と `point2` と同じに設定値に設定する、「2 つの styluspoint の各オブジェクトが等しい」。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#10](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#10)]
[!code-vb[PacketSpy#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PressureFactor">
      <MemberSignature Language="C#" Value="public float PressureFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PressureFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デジタイザーの対象 0 ~ スタイラスの負荷の量を反映した 1 の値を取得または設定が表面化ときに、 <see cref="T:System.Windows.Input.StylusPoint" /> が作成されます。</summary>
        <value>0 ~ 1 のスタイラスをデジタイザーの画面としてに適用する負荷の量を示す値、 <see cref="T:System.Windows.Input.StylusPoint" /> が作成されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 値、 <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティ値は 0 ~ 1 の値として指定します。 値 0 は、負荷を適用しないこと、値が 1 の最大負荷量が適用されていることを示しを示します。 値 0.5 は、最大の圧力の 50% が適用されると、具合ことを示します。  
  
   
  
## 例  
 次の例では、 <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティを取得し、それぞれの不足値が表示 <xref:System.Windows.Input.StylusPoint> で、 <xref:System.Windows.Input.StylusPointCollection> と呼ばれる `points`です。 この例では、 <xref:System.Windows.Controls.TextBlock> と呼ばれる `packetOutput`です。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Windows.Input.StylusPoint.PressureFactor" /> 0 より小さいか、1 より大きい値にプロパティが設定されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">
          <see cref="T:System.Windows.Input.StylusPointProperty" /> を設定するには、どのプロパティ値を指定します。</param>
        <param name="value">プロパティの値。</param>
        <summary>指定したプロパティを指定した値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チェックするかどうか、 <xref:System.Windows.Input.StylusPoint> 呼び出し、指定されたプロパティが含まれています、 <xref:System.Windows.Input.StylusPoint.HasProperty%2A> いずれかを呼び出す前に、 <xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> メソッドまたは <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> メソッドです。  
  
   
  
## 例  
 次の例では、プロパティの値を設定する前に、スタイラス ポイントの存在を確認します。 この例では、 <xref:System.Windows.Input.StylusPoint> と呼ばれる `point`です。  
  
 [!code-csharp[PacketSpy\#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#12)]
 [!code-vb[PacketSpy\#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stylusPointProperty" /> 内のプロパティではない <see cref="P:System.Windows.Input.StylusPoint.Description" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point ToPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point ToPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.ToPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Input.StylusPoint" /> を <see cref="T:System.Windows.Point" /> に変換します。</summary>
        <returns>A <see cref="T:System.Windows.Point" /> 構造体。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の x 座標の値、 <see cref="T:System.Windows.Input.StylusPoint" />です。</summary>
        <value>X 座標、 <see cref="T:System.Windows.Input.StylusPoint" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では取得、 <xref:System.Windows.Input.StylusPoint.X%2A> プロパティごとに <xref:System.Windows.Input.StylusPoint> で、 <xref:System.Windows.Input.StylusPointCollection>です。 この例では、 <xref:System.Windows.Controls.TextBlock> と呼ばれる `packetOutput`です。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または設定の y 座標、 <see cref="T:System.Windows.Input.StylusPoint" />です。</summary>
        <value>Y 座標、 <see cref="T:System.Windows.Input.StylusPoint" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 次の例では取得、 <xref:System.Windows.Input.StylusPoint.Y%2A> プロパティごとに <xref:System.Windows.Input.StylusPoint> で、 <xref:System.Windows.Input.StylusPointCollection>です。 この例では、 <xref:System.Windows.Controls.TextBlock> と呼ばれる `packetOutput`です。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Input.StylusPoint" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>2 つを比較して <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトの等価性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>