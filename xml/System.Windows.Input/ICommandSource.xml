<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コマンドの呼び出し方法を認識しているオブジェクトを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コマンド ソースは、特定のオブジェクトで、コマンドを呼び出す方法を定義します。  などの場合、 <xref:System.Windows.Controls.Button> 、コマンドに関連付けられたときに呼び出される、 <xref:System.Windows.Controls.Button> がクリックされました。  
  
 関連付けられたコマンドは、現在のコマンドのターゲットで実行できない場合に、コマンド ソースにより自体は通常無効にします。  たとえば、 <xref:System.Windows.Controls.MenuItem> に関連付けられている、 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> コマンドをいつは淡色表示自体は、 <xref:System.Windows.Input.ApplicationCommands.Paste%2A> コマンドは、現在のコマンドのターゲットで実行できません。  
  
 通常、コマンドのソースに耳を傾け、 <xref:System.Windows.Input.ICommand.CanExecuteChanged> のコマンドは、上のイベントです。  キーボード フォーカスの損失などのコマンドのターゲットで条件が変わると、コマンド ソースに通知します。  コマンド ソース クエリを実行できますコマンドを使用して、 <xref:System.Windows.Input.ICommand.CanExecute%2A> メソッドです。  
  
 クラスの [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] を実装する <xref:System.Windows.Input.ICommandSource> されます: <xref:System.Windows.Controls.Primitives.ButtonBase>, 、<xref:System.Windows.Controls.MenuItem>, 、および <xref:System.Windows.Documents.Hyperlink>です。  
  
 [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] システム コマンドの実行、 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> プロパティを <xref:System.Windows.Input.ICommandSource> のみ該当する場合は、 <xref:System.Windows.Input.ICommand> は、 <xref:System.Windows.Input.RoutedCommand>です。  場合、 <xref:System.Windows.Input.InputBinding.CommandTarget%2A> に設定されている、 <xref:System.Windows.Input.ICommandSource> 、対応するコマンドが、 <xref:System.Windows.Input.RoutedCommand>, 、コマンドの対象は無視されます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンド ソースが呼び出されたときに実行されるコマンドを取得します。</summary>
        <value>コマンド ソースが呼び出されたときに実行されるコマンド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行時にコマンドに渡すことができるユーザー定義のデータ値を表します。</summary>
        <value>コマンド固有のデータです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.  The type of the data is defined by the command.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドが実行されているオブジェクト。</summary>
        <value>コマンドが実行されているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 In the [!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)] commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.  If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.  
  
 When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised. If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>