<Type Name="ApplicationCommands" FullName="System.Windows.Input.ApplicationCommands">
  <TypeSignature Language="C#" Value="public static class ApplicationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApplicationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ApplicationCommands" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>一連の標準的なアプリケーション関連コマンドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コマンドで、 <xref:System.Windows.Input.ApplicationCommands> クラスと、他のコマンドなど、ライブラリ クラスをコマンド <xref:System.Windows.Input.ComponentCommands> と <xref:System.Windows.Input.NavigationCommands>, 、アプリケーション プログラマが頻繁に発生する一般的なコマンドのセットを表現するものでは。  コマンドでは、インスタンスのみを表す、 <xref:System.Windows.Input.RoutedCommand> とコマンドの実装ロジックではありません。 実装ロジックを指定してコマンドを <xref:System.Windows.Input.CommandBinding>です。 たとえば場合、 <xref:System.Windows.Input.ApplicationCommands.Close%2A> コマンドは、コントロールを実行するロジックで実行される、 <xref:System.Windows.Input.ApplicationCommands.Close%2A> 指定コントロールでので、アプリケーションの作成者を担当するコントロールが、コマンドを処理する方法を決定するロジックを記述できないコマンドです。  
  
 多くのコントロールでは、コマンド ライブラリのコマンドの多くの実装ロジックを表示します。  たとえば、 <xref:System.Windows.Controls.TextBox> クラス ロジックの提供、 <xref:System.Windows.Input.ApplicationCommands.Paste%2A>, 、<xref:System.Windows.Input.ApplicationCommands.Cut%2A>, 、<xref:System.Windows.Input.ApplicationCommands.Copy%2A>, 、<xref:System.Windows.Input.ApplicationCommands.Undo%2A>, 、および <xref:System.Windows.Input.ApplicationCommands.Redo%2A> コマンドです。  
  
 詳細については、コマンドとコマンド処理を参照してください、 [コマンドの実行の概要](http://msdn.microsoft.com/ja-jp/bc208dfe-367d-426a-99de-52b7e7511e81)します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <Member MemberName="CancelPrint">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CancelPrint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CancelPrint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CancelPrint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>印刷中止コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 印刷をキャンセルします。  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、印刷ジョブをキャンセルするという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_CancelPrint"></a>   
## XAML 属性の使用方法  
  
```  
<object property="CancelPrint"/>>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Close { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Close" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Close" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>終了コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 閉じる  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、項目 \(通常はファイル\) を終了するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Close"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Close"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ContextMenu { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンテキスト メニュー コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Shift \+ F10  
  
 アプリ  
  
 </description>  
</item>  
<item>  
<term> マウス ジェスチャ  
  
 </term>  
<description> マウス ジェスチャは、このコマンドにアタッチされていないが、ほとんどのアプリケーションを右クリック ジェスチャを使用して、コンテキスト メニューを起動する規則に従ってください。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> コンテキスト メニュー  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、ショートカット メニューを表示するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_ContextMenu"></a>   
## XAML 属性の使用方法  
  
```  
<object property="ContextMenu"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Copy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Copy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Copy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Copy コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl\+C  
  
 Ctrl キーを押しながら Insert  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> コピー  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、選択範囲をクリップボードにコピーするという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Copy"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Copy"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="CorrectionList">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectionList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.CorrectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>修正候補の一覧コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 修正候補の一覧  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、修正候補の一覧を開くという意図を示しています。  
  
 修正候補の一覧は、コンテキストによって異なります。 たとえば、 [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] 識別する旨の選択肢の修正候補の一覧を入力します。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_CorrectionList"></a>   
## XAML 属性の使用方法  
  
```  
<object property="CorrectionList"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Cut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Cut" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Cut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>切り取りコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ X  
  
 Shift \+ Delete  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 切り取り  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、選択範囲をクリップボードに切り取るという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Cut"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Cut"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Del  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 削除  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、選択項目を削除するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Delete"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Delete"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Find { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Find" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Find" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検索コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ F  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> \[検索\]  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、専用の検索\] ダイアログ ボックスを開くという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Find"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Find"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Help">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Help { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Help" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Help" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ヘルプ コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> F1  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> ヘルプ  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、\[ヘルプ\] ダイアログ \(ウィンドウ\) を開くという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Help"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Help"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand New { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand New" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.New" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>新規作成コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl\+N  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 新規作成  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、新しい項目を作成するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_New"></a>   
## XAML 属性の使用方法  
  
```  
<object property="New"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="NotACommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NotACommand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NotACommand" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.NotACommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>これは常に無視コマンドを表します。</summary>
        <value>コマンド。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、常に無視され、その原因となった入力イベントを処理しません。  これにより、既存のコントロールに組み込まれている入力のバインディングをオフにします。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_NotACommand"></a>   
## XAML 属性の使用方法  
  
```  
<object property="NotACommand"/>  
```  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Open { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Open" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Open" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>開くコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ O  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 開く  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、アイテム \(通常はファイル\) を開くという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Open"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Open"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Paste { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Paste" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Paste" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>貼り付けコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ V  
  
 Shift キーを押しながら Insert  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 貼り付け  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、クリップボードにコピーするという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Paste"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Paste"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Print">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Print { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Print" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Print" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>印刷コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ P  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 印刷  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、現在の項目を印刷するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Print"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Print"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="PrintPreview">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PrintPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PrintPreview" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.PrintPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>印刷プレビュー コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ F2  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 印刷プレビュー  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、印刷プレビュー\] ダイアログを開くという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_PrintPreview"></a>   
## XAML 属性の使用方法  
  
```  
<object property="PrintPreview"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Properties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロパティ コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> F4  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> プロパティ  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、プロパティ\] ダイアログ ボックスを開くという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Properties"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Properties"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Redo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Redo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Redo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>やり直しコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ Y  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> やり直し  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、最後の操作を再実行するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Redo"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Redo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Replace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Replace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Replace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Replace コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ H  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 置換  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、置換\] ダイアログを開くという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Replace"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Replace"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Save { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Save" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Save" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保存コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ S  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 保存  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、現在の項目を保存するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Save"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Save"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SaveAs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SaveAs" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SaveAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>名前を付けて保存コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> ジェスチャが定義されていません。  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 名前を付けて保存  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、名前を付けて保存\] ダイアログを開くという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_SaveAs"></a>   
## XAML 属性の使用方法  
  
```  
<object property="SaveAs"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectAll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectAll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.SelectAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>\[すべて選択\] コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ A  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> すべて選択  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、すべての項目を選択するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_SelectAll"></a>   
## XAML 属性の使用方法  
  
```  
<object property="SelectAll"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Stop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Stop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Stop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>停止コマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Esc  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 停止  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、処理を停止するという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Stop"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Stop"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Undo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Undo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ApplicationCommands.Undo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>元に戻すコマンドを表す値を取得します。</summary>
        <value>コマンド。  
  
 <list type="table">  
<listheader>  
<term> 既定値  
  
 </term>  
<description></description>  
</listheader>  
<item>  
<term> キーのジェスチャ  
  
 </term>  
<description> Ctrl \+ z  
  
 </description>  
</item>  
<item>  
<term> UI テキスト  
  
 </term>  
<description> 元に戻す  
  
 </description>  
</item>  
</list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコマンドは、最後のアクションを元に戻すという意図を示しています。  
  
 必ずしもすべての指定したオブジェクトで、コマンドの実装多くの場合は、コマンドの実装は、アプリケーションの作成者の役割です。  
  
<a name="xamlAttributeUsage_Undo"></a>   
## XAML 属性の使用方法  
  
```  
<object property="Undo"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.NavigationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>