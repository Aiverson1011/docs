<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>マウス デバイスのマウス ホイールの差分値の変化を通知するさまざまなイベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Input.MouseWheelEventArgs> 次のイベントと共に使用されます。  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=fullName> \(添付イベント\)  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=fullName> \(添付イベント\)  
  
 <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> プロパティは、マウス ホイールを上へ移動した場合は、正または前方 \(奥ユーザー\)、またはマウス ホイールを下方向に移動した場合は、負または \(ユーザー\) に向かって旧バージョンとします。  
  
 このイベントは、小さなマウス ホイールの動きにも発生します。 シナリオによっては、デルタが特定のしきい値を超えたかどうかをチェックして小さなマウス ホイールのデルタを調整するハンドラーを実装する適切な勧めします。 それ以外の場合、マウス ホイールの差分が非常に小さいため、マウス ホイールの動きに関連付けられているすべての UI を更新されない場合がある場合、ハンドラーを起動することもできます。 正確に方法ハンドラーで、しきい値の動作を実装して完全な実装の詳細は、そのしきい値にする必要があります。  
  
   
  
## 例  
 次の例では移動、 <xref:System.Windows.Controls.TextBox> 場合、マウス ホイール <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> に成功し、移動、 <xref:System.Windows.Controls.TextBox> if ダウン マウス ホイール <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> が負の値。<xref:System.Windows.Controls.TextBox> に表示されて、 <xref:System.Windows.Controls.Canvas>です。  
  
 [!code-csharp[mousesnippetsample\#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample\#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse">このイベントに関連付けられているマウス デバイス。</param>
        <param name="timestamp">入力の発生した時刻。</param>
        <param name="delta">ホイールの回転の量が変更されました。</param>
        <summary>
          <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ホイールが変化量を示す値を取得します。</summary>
        <value>ホイールの回転の量が変更されました。 この値は、\(ユーザー\) から上方向にマウス ホイールを回転した場合は正または負の場合は \(ユーザー\) に向かって下方向にマウス ホイールを回すです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この値の効果的な上限と下限の範囲は、デバイスの実装または他のイベントが発生し、定義されていないため呼び出し元から取得される可能性ができます。  
  
   
  
## 例  
 次の例では移動、 <xref:System.Windows.Controls.TextBox> 場合、マウス ホイール <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> に成功し、移動、 <xref:System.Windows.Controls.TextBox> if ダウン マウス ホイール <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> が負の値。<xref:System.Windows.Controls.TextBox> に表示されて、 <xref:System.Windows.Controls.Canvas>です。  
  
 [!code-csharp[mousesnippetsample\#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample\#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">型固有の方法で呼び出すジェネリック ハンドラー。</param>
        <param name="genericTarget">ハンドラーを呼び出すターゲット。</param>
        <summary>イベント システムの効率を向上する可能性が種類に固有の方法では、イベント ハンドラーを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 この実装は、ジェネリック ハンドラー、 <xref:System.Windows.Input.MouseWheelEventHandler> してそれを呼び出します。 詳細については、この実装パターンとその理由は、次を参照してください。 <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> と [ルーティング イベントの概要](http://msdn.microsoft.com/ja-jp/1a2189ae-13b4-45b0-b12c-8de2e49c29d2)します。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>