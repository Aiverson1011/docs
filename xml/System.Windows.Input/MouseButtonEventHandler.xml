<Type Name="MouseButtonEventHandler" FullName="System.Windows.Input.MouseButtonEventHandler">
  <TypeSignature Language="C#" Value="public delegate void MouseButtonEventHandler(object sender, MouseButtonEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MouseButtonEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseButtonEventHandler" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">イベント ハンドラーが添付されるオブジェクト。</param>
    <param name="e">イベントのデータ。</param>
    <summary>
      <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> など、マウス ボタン関連のルーティング イベントを処理するメソッドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このデリゲートは、次の接続されているイベントと共に使用します。  
  
-   <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement?displayProperty=fullName>  
  
-   <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement?displayProperty=fullName>  
  
 このデリゲートは、次のルーティング イベントで使用されます。 これらのルーティングされたイベントがより一般的な要素のモデルにアクセスできるようにする上記のアタッチされるイベントを転送 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]します。  
  
-   <xref:System.Windows.UIElement.MouseDown?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.MouseUp?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.MouseLeftButtonDown?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.MouseLeftButtonUp?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.MouseRightButtonDown?displayProperty=fullName>  
  
-   <xref:System.Windows.UIElement.MouseRightButtonUp?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseDown?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseUp?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseLeftButtonDown?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseLeftButtonUp?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseRightButtonDown?displayProperty=fullName>  
  
-   <xref:System.Windows.ContentElement.MouseRightButtonUp?displayProperty=fullName>  
  
 アタッチされるイベントと基本要素のルーティング イベントは、それぞれのイベント データを共有し、バブルとトンネル ルーティング イベントのバージョンは、イベント データを共有もします。 イベントのルーティングをやり取りする際は、イベントの処理の特性に影響することができます。 詳細については、「 [入力概要](http://msdn.microsoft.com/ja-jp/ee5258b7-6567-415a-9b1c-c0cbe46e79ef)します。  
  
   
  
## 例  
 次の例を作成し、 <xref:System.Windows.UIElement.MouseDown> イベントのソースの背景色を変更するイベント ハンドラーです。  背景色は、どのボタンが押された決定されます。  
  
 [!code-csharp[mousesnippetsample\#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample\#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseButtonState" />
    <altmember cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
  </Docs>
</Type>