<Type Name="ManipulationPivot" FullName="System.Windows.Input.ManipulationPivot">
  <TypeSignature Language="C#" Value="public class ManipulationPivot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationPivot extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationPivot" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザー入力の 1 つのポイントと回転を実行する方法を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> プロパティは、 <xref:System.Windows.Input.ManipulationPivot>です。  設定すると<xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> のイベント ハンドラーで、 <xref:System.Windows.UIElement.ManipulationStarting> イベント、操作が含まれます回転データ、ユーザーが操作中に 1 本の指を使用する場合。  これは、テーブルの紙になどのオブジェクトを回転させる 1 本の指を使用して、現実世界の状況をシミュレートします。  場合、 <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A> は `null`, 、ユーザーは回転が発生する 2 本の指を使用する必要があります。  
  
   
  
## 例  
 次の例では、イベント ハンドラーを <xref:System.Windows.UIElement.ManipulationStarting> イベントとセット、 <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=fullName> プロパティです。 この例をテストする」の手順に従います [チュートリアル: 初めてのタッチ アプリケーションの作成](http://msdn.microsoft.com/ja-jp/d69e602e-9a25-4e24-950b-e89eaa2a906b) し、手順 4. でコードを次のコードに置き換えます。  
  
 [!code-csharp[BasicManipulation\#ManipulationPivot](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#manipulationpivot)]
 [!code-vb[BasicManipulation\#ManipulationPivot](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#manipulationpivot)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationPivot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationPivot.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Windows.Input.ManipulationPivot" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationPivot (System.Windows.Point center, double radius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point center, float64 radius) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationPivot.#ctor(System.Windows.Point,System.Double)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="center" Type="System.Windows.Point" />
        <Parameter Name="radius" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="center">一元的な操作の中心です。</param>
        <param name="radius">回転と変換の量を決定するために使用されるピボットの周辺の領域は、連絡先の 1 つのポイントは、操作を開始したときに発生します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Windows.Input.ManipulationPivot" /> 一元的な操作の指定されたポイントとのクラスです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Center">
      <MemberSignature Language="C#" Value="public System.Windows.Point Center { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Center" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationPivot.Center" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または一元的な操作の中心を設定します。</summary>
        <value>一元的な操作の中心です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Radius">
      <MemberSignature Language="C#" Value="public double Radius { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Radius" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationPivot.Radius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または回転と変換の問い合わせ窓口が操作を開始したときの発生量の確認に使用されるピボットの周辺の領域を設定します。</summary>
        <value>回転と変換の量を決定するために使用されるピボットの周辺の領域は、連絡先の 1 つのポイントは、操作を開始したときに発生します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Windows.Input.ManipulationPivot" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>