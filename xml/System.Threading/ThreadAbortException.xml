<Type Name="ThreadAbortException" FullName="System.Threading.ThreadAbortException">
  <TypeSignature Language="C#" Value="public sealed class ThreadAbortException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ThreadAbortException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadAbortException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <see cref="M:System.Threading.Thread.Abort(System.Object)" /> メソッドが呼び出されるときにスローされる例外。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 呼び出しが実行されると、 <xref:System.Threading.Thread.Abort%2A> 、共通言語ランタイムのスレッドを破棄するメソッドをスロー、 <xref:System.Threading.ThreadAbortException>です。<xref:System.Threading.ThreadAbortException> 特殊な例外がキャッチできるは自動的に発生させることがもう一度の最後に、 `catch` ブロックします。 ランタイムは、実行のすべてでこの例外が発生したときに、 `finally` スレッドを終了するまでブロックします。 スレッドがバインド解除済みの計算を実行できるため、 `finally` ブロックや呼び出し <xref:System.Threading.Thread.ResetAbort%2A?displayProperty=fullName> abort を取り消す場合に、スレッドがこれまで終了される保証はありません。 中止されたスレッドが終了するまで待機する場合は、呼び出すことが、 <xref:System.Threading.Thread.Join%2A?displayProperty=fullName> メソッドです。<xref:System.Threading.Thread.Join%2A> スレッドが実際に実行を停止するまで戻りませんブロッキング呼び出しです。  
  
> [!NOTE]
>  共通言語ランタイム \(CLR\) を停止すると、マネージ実行可能ファイル内のすべてのフォア グラウンド スレッドが終了したバック グラウンド threadsafter が使用されていない <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>します。 したがって、使用することはできません <xref:System.Threading.ThreadAbortException> CLR によってバック グラウンド スレッドが終了するタイミングを検出します。  
  
 <xref:System.Threading.ThreadAbortException> 値は 0x80131530 HRESULT COR\_E\_THREADABORTED を使用します。  
  
> [!NOTE]
>  継承された値 <xref:System.Exception.Data%2A> プロパティは常に `null`します。  
  
   
  
## 例  
 スレッドを中止するは、次の例です。 スレッドを受信する、 `ThreadAbortException` を使用して、 <xref:System.Threading.Thread.ResetAbort%2A> 中止要求をキャンセルし、実行を継続します。  
  
 [!code-cpp[ThreadAbEx\#1](~/samples/snippets/cpp/VS_Snippets_CLR/ThreadAbEx/CPP/threadabex.cpp#1)]
 [!code-csharp[ThreadAbEx\#1](~/samples/snippets/csharp/VS_Snippets_CLR/ThreadAbEx/CS/threadabex.cs#1)]
 [!code-vb[ThreadAbEx\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ThreadAbEx/VB/threadabex.vb#1)]  
  
 このコードを実行すると、次の出力が生成されます。  
  
```  
Thread - working.  
Main - aborting my thread.  
Thread - caught ThreadAbortException - resetting.  
Exception message: Thread was being aborted.  
Thread - still alive and working.  
Thread - finished working.  
Main ending.  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="M:System.Threading.Thread.Abort(System.Object)" />
  </Docs>
  <Members>
    <Member MemberName="ExceptionState">
      <MemberSignature Language="C#" Value="public object ExceptionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExceptionState" />
      <MemberSignature Language="DocId" Value="P:System.Threading.ThreadAbortException.ExceptionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スレッドの中止に関連するアプリケーションに固有の情報を格納しているオブジェクトを取得します。</summary>
        <value>アプリケーションに固有の情報を格納するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティによって返されるオブジェクトが指定された、 `stateInfo` のパラメーター、 <xref:System.Threading.Thread.Abort%2A> メソッドです。 このオブジェクトの使用方法と正確な内容が定義されているアプリケーションです。これは通常、中止するスレッドに適したわかりやすい情報を伝えるために使用されます。  
  
   
  
## 例  
 次のコード例では、中止中のスレッドに情報を渡す方法を示します。  
  
 [!code-cpp[System.Threading.Thread.Abort2\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Thread.Abort2\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/CS/source.cs#1)]
 [!code-vb[System.Threading.Thread.Abort2\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Thread.Abort2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentThread" />
        <altmember cref="M:System.Threading.Thread.Abort(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>