<Type Name="ThreadStart" FullName="System.Threading.ThreadStart">
  <TypeSignature Language="C#" Value="public delegate void ThreadStart();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ThreadStart extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.ThreadStart" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>実行するメソッドを表す、 <see cref="T:System.Threading.Thread" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 スレッドで実行されるメソッドがによって表されるマネージ スレッドの作成時に、 <xref:System.Threading.ThreadStart> 委任または <xref:System.Threading.ParameterizedThreadStart> デリゲートに渡される、 <xref:System.Threading.Thread.%23ctor%2A> コンス トラクターです。 スレッドがまで実行を開始していない、 <xref:System.Threading.Thread.Start%2A?displayProperty=fullName> メソッドが呼び出されます。 によって表されるメソッドの最初の行から実行が開始、 <xref:System.Threading.ThreadStart> または <xref:System.Threading.ParameterizedThreadStart> を委任します。  
  
> [!NOTE]
>  Visual Basic および c\# のユーザーを省略できます、 <xref:System.Threading.ThreadStart> または <xref:System.Threading.ParameterizedThreadStart> スレッドを作成するときに、デリゲート コンス トラクターです。 Visual Basic を使用して、 `AddressOf` 演算子メソッドを渡すときに、 <xref:System.Threading.Thread.%23ctor%2A> コンス トラクター。 たとえば、 `Dim t As New Thread(AddressOf ThreadProc)`です。 C\# の場合、スレッド プロシージャの名前を指定するだけです。 コンパイラでは、適切なデリゲート コンス トラクターを選択します。  
  
 \[C\+\+\]  
  
> [!NOTE]
>  .NET Framework のバージョン 2.0 での作成、 <xref:System.Threading.ThreadStart> 委任の C\+\+ では静的メソッドには、1 つだけのパラメーターが必要です: コールバック メソッド、クラス名で修飾のアドレス。 以前のバージョンで 2 つのパラメーターが必要な静的メソッドのデリゲートを作成する場合: 0 \(null\) とメソッドのアドレス。 インスタンス メソッドのすべてのバージョンは 2 つのパラメーターを必要とします。 インスタンス変数、およびメソッドのアドレス。  
  
   
  
## 例  
 次のコード例の作成と使用のための構文を示しています、 <xref:System.Threading.ThreadStart> インスタンス メソッドと静的メソッドにデリゲートします。  
  
 作成する方法を示す別の単純な例については、 <xref:System.Threading.ThreadStart> デリゲートを参照してください、 <xref:System.Threading.Thread.Start?displayProperty=fullName> メソッドのオーバー ロードします。 スレッドの作成の詳細については、次を参照してください。 [&#91;\<topic:\/\/cpconcreatingthreads\>&#93;](http://msdn.microsoft.com/ja-jp/52b32222-e185-4f42-91a7-eaca65c0ab6d)します。  
  
 [!code-cpp[System.Threading.ThreadStart2\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadStart2\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadStart2/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadStart2\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadStart2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ParameterizedThreadStart" />
    <altmember cref="T:System.Threading.Thread" />
    <altmember cref="Overload:System.Threading.Thread.Start" />
    <altmember cref="T:System.AppDomain" />
  </Docs>
</Type>