<Type Name="TimerCallback" FullName="System.Threading.TimerCallback">
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.TimerCallback" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">このデリゲートによって呼び出されるメソッドに関連するアプリケーション固有の情報を格納するオブジェクトまたは <see langword="null" />です。</param>
    <summary>呼び出しを処理するメソッドを表す、 <see cref="T:System.Threading.Timer" />です。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用して、 `TimerCallback` によって呼び出されるメソッドを指定するデリゲート、 <xref:System.Threading.Timer>です。 このメソッドは、タイマーを作成したスレッドで実行しません。システムによって提供される個別のスレッド プールのスレッドを実行します。`TimerCallback` デリゲートは開始時間が経過した後のメソッドを 1 回の呼び出しをまでタイマー間隔あたり 1 回呼び出すことは引き続き、 <xref:System.Threading.Timer.Dispose%2A> メソッドが呼び出されるまで、または、 <xref:System.Threading.Timer.Change%2A?displayProperty=fullName> メソッドには、間隔の値が呼び出された <xref:System.Threading.Timeout.Infinite>です。  
  
> [!NOTE]
>  コールバックが後に発生することが、 <xref:System.Threading.Timer.Dispose> メソッドのオーバー ロードが呼び出されたため、タイマー キューにスレッド プールのスレッドでコールバックを実行します。 使用することができます、 <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> メソッドのオーバー ロードは、すべてのコールバックが完了するまで待機します。  
  
 タイマーのデリゲートは、タイマーが作成され、変更できないときに指定します。 開始時刻、 `Timer` で渡される、 `dueTime` のパラメーター、 `Timer` コンス トラクター、および期間がで渡される、 `period` パラメーター。 作成と使用を示す例については、 `TimerCallback` 委任は、「 <xref:System.Threading.Timer?displayProperty=fullName>します。  
  
   
  
## 例  
 次のコード例で使用するデリゲートを作成する方法を示しています、 `Timer` クラスです。  
  
 [!code-cpp[System.Threading.Timer\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Timer" />
    <altmember cref="T:System.Threading.ThreadPool" />
  </Docs>
</Type>