<Type Name="CompressedStack" FullName="System.Threading.CompressedStack">
  <TypeSignature Language="C#" Value="public sealed class CompressedStack : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CompressedStack extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CompressedStack" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Threading.Thread</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>設定し、現在のスレッドで圧縮スタックをキャプチャするためのメソッドを提供します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 圧縮は、スタックはすべて、コード アクセス セキュリティ情報の呼び出し履歴上の簡潔な表現など <xref:System.Security.CodeAccessPermission.Deny%2A> と <xref:System.Security.CodeAccessPermission.Assert%2A> アクション。 たとえば場合、 <xref:System.Security.CodeAccessPermission.Deny%2A> 2 つのスタック フレーム現在のフレームからあり、注釈がないその他のコード アクセス セキュリティそこ間操作は呼び出し履歴全体をシリアル化することがなく現在のフレームでは、圧縮のスタックを記録した情報だけとします。  
  
 <xref:System.Threading.CompressedStack>クラスがによって内部的に使用される、 <xref:System.Security.SecurityContext> クラスです。 たとえば、 <xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName> メソッドは、権限借用とカルチャ情報と共に、現在の呼び出し履歴の圧縮のスタックをキャプチャします。<xref:System.Security.SecurityContext> クラスは、さらに、使用、 <xref:System.Threading.ExecutionContext> クラスはスレッド プールのタスクのスケジュール設定の例については、スレッド間でコンテキストをフローします。  
  
 このクラスは、通常のアプリケーションのプログラミングでは使用されません。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Threading.CompressedStack Capture ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.CompressedStack Capture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CompressedStack.Capture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CompressedStack</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のスレッドからの圧縮のスタックをキャプチャします。</summary>
        <returns>
          <see cref="T:System.Threading.CompressedStack" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 すべての情報をキャプチャ コード アクセス セキュリティ呼び出し履歴上など <xref:System.Security.CodeAccessPermission.Deny%2A> と <xref:System.Security.CodeAccessPermission.Assert%2A> 圧縮形式でのアクション。 たとえば場合、 <xref:System.Security.CodeAccessPermission.Deny%2A> 2 つのスタック フレーム現在のフレームからあり、注釈がないその他のコード アクセス セキュリティそこ間操作は呼び出し履歴全体をシリアル化することがなく現在のフレームでは、圧縮のスタックを記録した情報だけとします。  
  
 キャプチャした圧縮スタックは、別のスレッドに適用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.Threading.CompressedStack CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.CompressedStack CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CompressedStack.CreateCopy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.CompressedStack</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の圧縮のスタックのコピーを作成します。</summary>
        <returns>A <see cref="T:System.Threading.CompressedStack" /> を現在の圧縮のスタックを表すオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、別のスレッドに適用する圧縮された現在のスタックのコピーを作成するのに便利です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompressedStack">
      <MemberSignature Language="C#" Value="public static System.Threading.CompressedStack GetCompressedStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.CompressedStack GetCompressedStack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CompressedStack.GetCompressedStack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.CompressedStack</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のスレッドの圧縮のスタックを取得します。</summary>
        <returns>A <see cref="T:System.Threading.CompressedStack" /> 、現在のスレッド。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 セキュリティが有効になっている場合は、現在の圧縮のスタックが返されます。 セキュリティが無効になっている場合は、 <xref:System.Threading.CompressedStack.GetCompressedStack%2A> は空白を返します <xref:System.Threading.CompressedStack> オブジェクトです。  
  
> [!NOTE]
>  このメソッドを使用して <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=fullName> されないようにすることに信頼できないコードから呼び出すことは直前の呼び出し元だけする必要がある <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> 権限です。 使用に関する重要な制限事項について、 `LinkDemand` 、メンバーを参照してください [と要求LinkDemand](http://msdn.microsoft.com/ja-jp/1ab877f2-70f4-4e0d-8116-943999dfe8f5)します。  
  
> [!NOTE]
>  このメンバーは、リンク確認要求ではなく、有効な暗号化キー、擬似キー ECMA 公開キーにもなります。 .NET Framework 内では、Microsoft 公開キーのリンク要求に ECMA 擬似キーのリンク確認要求が自動的に変換されます。 セキュリティの例外は、ECMA 擬似キーではない Microsoft 公開キーに基づきます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出しチェーン内の呼び出し元には、アンマネージ コードにアクセスする権限がありません。  
  
 または  
  
 要求の <see cref="T:System.Security.Permissions.StrongNameIdentityPermission" /> に失敗しました。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> シリアル化情報が設定されるオブジェクト。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" /> シリアル化の対象コンテキストを表す構造体。</param>
        <summary>
          <see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、この実行コンテキストのインスタンスを再作成するのに必要な論理コンテキスト情報を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Threading.CompressedStack.GetObjectData%2A> 設定、 <xref:System.Runtime.Serialization.SerializationInfo> 論理呼び出しコンテキスト情報。 逆シリアル化中に、実行コンテキスト オブジェクトはから再構成、 <xref:System.Runtime.Serialization.SerializationInfo> 、ストリームで送信します。  
  
 詳細については、「<xref:System.Runtime.Serialization.SerializationInfo>」を参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> は <see langword="null" /> です。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.Threading.CompressedStack compressedStack, System.Threading.ContextCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.Threading.CompressedStack compressedStack, class System.Threading.ContextCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Thread</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compressedStack" Type="System.Threading.CompressedStack" />
        <Parameter Name="callback" Type="System.Threading.ContextCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compressedStack">設定する <see cref="T:System.Threading.CompressedStack" />。</param>
        <param name="callback">A <see cref="T:System.Threading.ContextCallback" /> を表す、指定されたセキュリティ コンテキストで実行するメソッドです。</param>
        <param name="state">コールバック メソッドに渡されるオブジェクト。</param>
        <summary>現在のスレッドで、指定した圧縮スタックでメソッドを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 メソッドが終了したときに、前の状態に圧縮されたスタックが返されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="compressedStack" /> は <see langword="null" /> です。</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Requires full trust for the immediate caller. This member cannot be used by partially trusted or transparent code.</permission>
      </Docs>
    </Member>
  </Members>
</Type>