<Type Name="EntityReference&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityReference&lt;TEntity&gt;">
  <TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityReference`1" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.EntityReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity">参照のエンティティ型。</typeparam>
    <summary>複数要素の接続性が 0 または 1 であるアソシエーションの関連 End を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 An <xref:System.Data.Objects.DataClasses.EntityReference%601> object is returned by a navigation property when the related end has a multiplicity of zero or one. For more information, see [NavigationProperty Element \(CSDL\)](http://msdn.microsoft.com/ja-jp/5829a238-a50e-4c81-901d-7b54fc00f27e).  
  
 An <xref:System.Data.Objects.DataClasses.EntityReference%601> object might have a corresponding <xref:System.Data.Objects.DataClasses.EntityCollection%601> \(one\-to\-many relationship\) or <xref:System.Data.Objects.DataClasses.EntityReference%601> \(one\-to\-one relationship\) at the other end of the relationship. When an <xref:System.Data.Objects.DataClasses.EntityReference%601> and an <xref:System.Data.Objects.DataClasses.EntityCollection%601> model opposing ends of the same relationship, the integrity of the relationship is maintained at the object level.  
  
 This class cannot be inherited.  
  
   
  
## 例  
 This example shows how to use the <xref:System.Data.Objects.DataClasses.EntityReference%601> object to change a relationship between a **languageKeyword tag is not supported!!!!**  
 object and a related **languageKeyword tag is not supported!!!!**  
 object that represents the shipping address for the order.  
  
 [!code-csharp[DP ObjectServices Concepts\#ChangeObjectRelationship](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#changeobjectrelationship)]
 [!code-vb[DP ObjectServices Concepts\#ChangeObjectRelationship](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#changeobjectrelationship)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> の新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">アタッチされるオブジェクト。</param>
        <summary>オブジェクト コンテキストで 2 つのオブジェクト間の多対一または一対一のリレーションシップを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A> メソッドは、オブジェクトと関連オブジェクトの両方が既にオブジェクト コンテキストにアタッチされている場合にそれらのオブジェクト間のリレーションシップを定義するために使用されます。 関連オブジェクトがまだオブジェクト コンテキストにアタッチされていない場合は、<xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> プロパティに関連オブジェクトを設定します。 また、両方のオブジェクトがデタッチされている場合は、<xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> プロパティに関連オブジェクトを設定した後に、オブジェクト グラフのルート オブジェクトをアタッチしてリレーションシップを定義することもできます。 詳細については、次を参照してください。 [のアタッチとデタッチ オブジェクト](http://msdn.microsoft.com/ja-jp/41d5c1ef-1b78-4502-aa10-7e1438d62d23)します。  
  
 この <xref:System.Data.Objects.DataClasses.EntityReference%601> に関連付けられたオブジェクトおよびそれにアタッチされているすべてのオブジェクトは、状態が <xref:System.Data.EntityState.Unchanged> または <xref:System.Data.EntityState.Modified> である必要があります。  
  
 <xref:System.Data.EntityState.Deleted> 状態のオブジェクトは、<xref:System.Data.Objects.ObjectStateManager> で既にリレーションシップ インスタンスが追跡されている場合にのみアタッチできます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">ときに、 <paramref name="entity" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">ときに、 <paramref name="entity" /> 現在関連 end に関連することはできません。 これは、概念スキーマのアソシエーションで 2 つの型の間のリレーションシップがサポートされていない場合に発生する可能性があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>関連オブジェクトを返す同等のオブジェクト クエリを作成します。</summary>
        <returns>関連オブジェクトを返す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 This method is used to obtain a new instance of <xref:System.Data.Objects.ObjectQuery%601> that, when it is executed, returns the related object. This is useful as the starting point for a more complex join, union, or filtered query, or to return the referenced object in a detached state using the <xref:System.Data.Objects.MergeOption.NoTracking> option.  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">オブジェクトの状態が <see cref="F:System.Data.EntityState.Added" /> の場合。  
  
 または  
  
 オブジェクトの状態が <see cref="F:System.Data.EntityState.Detached" /> で、<see cref="P:System.Data.Objects.ObjectQuery.MergeOption" /> が <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> 以外の場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">オブジェクトが既に <see cref="T:System.Data.Objects.ObjectContext" /> に存在する場合にオブジェクトを返す方法を指定します。</param>
        <summary>指定されたマージ オプションを使用してこの <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> の関連オブジェクトを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、関連オブジェクトを読み込むために使用されます。  
  
 読み込まれた関連オブジェクトには、<xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A> プロパティからアクセスします。  
  
 関連オブジェクトを明示的に読み込むには、ナビゲーション プロパティによって返される関連 End に対して `Load` メソッドを呼び出す必要があります。 一対多のリレーションシップの場合は、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> に対して <xref:System.Data.Objects.DataClasses.EntityCollection%601> メソッドを呼び出します。一対一のリレーションシップの場合は、<xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> に対して <xref:System.Data.Objects.DataClasses.EntityReference%601> を呼び出します。 これにより、関連オブジェクト データがオブジェクト コンテキストに読み込まれます。 使用してオブジェクトのコレクションを列挙する、クエリ結果を返すときに、 `foreach` ループ \(`For Each...Next` Visual Basic で\) 条件付きで呼び出すと、 `Load` メソッドを <xref:System.Data.Objects.DataClasses.EntityReference%601> と <xref:System.Data.Objects.DataClasses.EntityCollection%601> 結果の各エンティティのプロパティです。  
  
 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> メソッドの関連するオブジェクトからデータ ソースからのかどうか読み込みます <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> は `true`です。  
  
> [!NOTE]
>  <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> \(C\#\) または `foreach` \(Visual Basic\) 列挙で、`For Each` メソッドを呼び出すと、Object Services は新たにデータ リーダーを開こうとします。 この操作は、接続文字列で `multipleactiveresultsets=true` を指定して複数のアクティブな結果セットを有効にしていない限り失敗します。 クエリの結果は、<xref:System.Collections.Generic.List%601> コレクションに読み込むこともできます。 この場合、データ リーダーが閉じ、コレクションを列挙して参照オブジェクトを読み込むことができます。  
  
 このメソッドは、関連オブジェクトを読み込む前に <xref:System.Data.Objects.DataClasses.RelatedEnd.ValidateLoad%2A> メソッドを呼び出します。 その他の例外の一覧については、このメソッドを参照してください。  
  
 関連オブジェクトが既に読み込まれるときに、 <xref:System.Data.Objects.ObjectContext>, 、 <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> メソッドの適用、 <xref:System.Data.Objects.MergeOption> によって指定された、 `mergeOption` パラメーター。 詳細については、次を参照してください。 [Id 解決、状態管理、および変更の追跡](http://msdn.microsoft.com/ja-jp/3bd49311-0e72-4ea4-8355-38fe57036ba0)します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ソース、 <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> は <see langword="null" />です。  
  
 または  
  
 クエリから複数の関連 End が返されました。  
  
 または  
  
 クエリから関連 End が返されませんでした。1 つの関連 End が必要です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnRefDeserialized">
      <MemberSignature Language="C#" Value="public void OnRefDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRefDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">シリアル化されたストリーム。</param>
        <summary>このメソッドは、関連エンティティ オブジェクトをシリアル化に、内部的に使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">シリアル化されたストリーム。</param>
        <summary>このメソッドは、関連エンティティ オブジェクトをシリアル化に、内部的に使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TEntity Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> によって返される関連オブジェクトを取得または設定します。</summary>
        <value>この <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> によって返されるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 設定されている値が現在の値と同じである場合は、値は割り当てられません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>