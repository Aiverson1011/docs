<Type Name="DbBinaryExpression" FullName="System.Data.Common.CommandTrees.DbBinaryExpression">
  <TypeSignature Language="C#" Value="public abstract class DbBinaryExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbBinaryExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>2 つの式オペランドを受け取る式で求められる基本的な機能を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Left" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>左辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を取得または設定します。</summary>
        <value>左辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> プロパティが設定されている場合、派生した式の型で行われる型チェックがより厳密になることがあります。 たとえば、<xref:System.Data.Common.CommandTrees.DbUnionAllExpression> の左辺の式の結果型はコレクション型である必要がありますが、<xref:System.Data.Common.CommandTrees.DbAndExpression> の結果型は Boolean である必要があります。 通常、派生した式の型では、現在の値の結果型に等しくないかこの型に昇格できないような結果型を持つ式を、<xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> に設定することはできません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">式が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">式が <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" /> のコマンド ツリーに関連付けられていません。  
  
 または、式の結果型が、左辺の引数として必要な型に等しくないかこの型に昇格できません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Right" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>右辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を取得または設定します。</summary>
        <value>右辺の引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> プロパティが設定されている場合、派生した式の型で行われる型チェックがより厳密になることがあります。 たとえば、<xref:System.Data.Common.CommandTrees.DbUnionAllExpression> の右辺の式の結果型はコレクション型である必要がありますが、<xref:System.Data.Common.CommandTrees.DbAndExpression> の結果型は Boolean である必要があります。 通常、派生した式の型では、現在の値の結果型に等しくないかこの型に昇格できないような結果型を持つ式を、<xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> に設定することはできません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">式が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">式が <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" /> のコマンド ツリーに関連付けられていません。  
  
 または、式の結果型が、右辺の引数として必要な型に等しくないかこの型に昇格できません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>