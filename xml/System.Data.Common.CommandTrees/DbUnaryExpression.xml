<Type Name="DbUnaryExpression" FullName="System.Data.Common.CommandTrees.DbUnaryExpression">
  <TypeSignature Language="C#" Value="public abstract class DbUnaryExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbUnaryExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbUnaryExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>単一の式引数を受け取る式で求められる基本的な機能を実装します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 This class is a helper base class on which many of the subsequent classes are built.  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Argument">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Argument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Argument" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbUnaryExpression.Argument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> を取得または設定します。</summary>
        <value>引数を定義する <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Data.Common.CommandTrees.DbUnaryExpression.Argument%2A> プロパティが設定されている場合、派生した式の型で行われる型チェックがより厳密になることがあります。 たとえば、<xref:System.Data.Common.CommandTrees.DbDistinctExpression> は、結果型がコレクション型である引数式を必要とします。 通常、派生した式の型では、現在の値の結果型に等しくないかこの型に昇格できないような結果型を持つ式を、<xref:System.Data.Common.CommandTrees.DbUnaryExpression.Argument%2A> に設定することはできません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">式が <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">式が <see cref="T:System.Data.Common.CommandTrees.DbUnaryExpression" /> のコマンド ツリーに関連付けられていません。または、式の結果型が、引数として必要な型に等しくないかこの型に昇格できません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>