<Type Name="DbGroupByExpression" FullName="System.Data.Common.CommandTrees.DbGroupByExpression">
  <TypeSignature Language="C#" Value="public sealed class DbGroupByExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbGroupByExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbGroupByExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>group by 操作を表します。 group by 操作は、指定された集計のアプリケーションが従う指定されたキー式に基づいて、入力セットの要素をグループ化する処理です。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> のインスタンス。</param>
        <summary>結果値を生成しない式のビジター パターンを実装します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <c>visitor</c> によって生成される結果の型。</typeparam>
        <param name="visitor">特定の型の結果値を生成する、型指定された <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> のインスタンス。</param>
        <summary>特定の型の結果値を生成する式のビジター パターンを実装します。</summary>
        <returns>
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> によって生成された、特定の型の結果値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Aggregates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbAggregate&gt; Aggregates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbAggregate&gt; Aggregates" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>適用する集計を提供する <see cref="T:System.Data.Common.CommandTrees.DbAggregate" /> リストを取得します。</summary>
        <value>適用する集計を提供する <see cref="T:System.Data.Common.CommandTrees.DbAggregate" /> リスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbGroupExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbGroupExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbGroupByExpression.Input" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>入力セットを指定して set 要素変数および group 要素変数へのアクセスを提供する <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> を取得します。</summary>
        <value>入力セットを指定して set 要素および group 要素の変数へのアクセスを提供する <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbGroupByExpression.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>グループ化キーを提供する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> リストを取得します。</summary>
        <value>グループ化キーを提供する <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> リスト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>