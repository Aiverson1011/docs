<Type Name="ServiceCredentials" FullName="System.ServiceModel.Description.ServiceCredentials">
  <TypeSignature Language="C#" Value="public class ServiceCredentials : System.ServiceModel.Security.SecurityCredentialsManager, System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceCredentials extends System.ServiceModel.Security.SecurityCredentialsManager implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceCredentials" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Security.SecurityCredentialsManager</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>サービス資格情報を構成します。 このクラスを使用して、サービスに対する X.509 証明書などの資格情報を指定します。 また、ユーザー名とパスワードの検証など、さまざまなクライアント資格情報の認証モデルも指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスは <xref:System.ServiceModel.Channels.SecurityBindingElement.BuildChannelListenerCore%2A> のメソッドで <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> メソッドのパラメーターとして使用され、<xref:System.ServiceModel.ServiceHostBase.Credentials%2A?displayProperty=fullName> プロパティによって返されます。  
  
   
  
## 例  
 このクラスをオーバーライドしてカスタム サービス資格情報を実装する方法を次のコードに示します。  
  
 [!code-csharp[c\_CustomCredentials\#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcredentials/cs/source.cs#4)]
 [!code-vb[c\_CustomCredentials\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcredentials/vb/service/service.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceCredentials ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceCredentials (System.ServiceModel.Description.ServiceCredentials other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceCredentials other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.#ctor(System.ServiceModel.Description.ServiceCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.ServiceModel.Description.ServiceCredentials" />
      </Parameters>
      <Docs>
        <param name="other">新しいインスタンスを初期化するために使用する <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> インスタンス。</param>
        <summary>指定した <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> から <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> の新しいインスタンスを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateInitiatorServiceCredential ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateInitiatorServiceCredential ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateInitiatorServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このサービスの現在のクライアント証明書の認証と準備の設定を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.X509CertificateInitiatorServiceCredential" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 You can specify a client certificate authentication model using the <xref:System.IdentityModel.Claims.ClaimTypes.Authentication%2A> property. In the mutual certificate duplex scenario, you can specify an X.509 certificate to use in a response or callback using the <xref:System.ServiceModel.Security.X509CertificateInitiatorClientCredential.Certificate%2A> property.  
  
   
  
## 例  
 The following code shows how to access this property and use it to set additional properties.  
  
 [!code-csharp[c\_CustomCertificateValidator\#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_customcertificatevalidator/cs/source.cs#1)]
 [!code-vb[c\_CustomCertificateValidator\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_customcertificatevalidator/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceCredentials Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceCredentials Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.Clone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のインスタンスのコピーを作成します。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> のインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 The following code shows how to call this method.  
  
 [!code-csharp[S\_UEWindowsServiceCredential\#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#3)]
 [!code-vb[S\_UEWindowsServiceCredential\#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Description.ServiceCredentials CloneCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Description.ServiceCredentials CloneCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.CloneCore" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceCredentials</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のインスタンスの重要なメンバーをコピーします。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> のインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 The <xref:System.ServiceModel.Description.ServiceCredentials.CloneCore%2A> method calls the <xref:System.ServiceModel.Description.ServiceCredentials.%23ctor%2A> constructor.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSecurityTokenManager">
      <MemberSignature Language="C#" Value="public override System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IdentityModel.Selectors.SecurityTokenManager CreateSecurityTokenManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.CreateSecurityTokenManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.SecurityTokenManager</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このサービスのトークン マネージャーを作成します。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager" /> のインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionMapper">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ExceptionMapper ExceptionMapper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ExceptionMapper ExceptionMapper" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ExceptionMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ExceptionMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサービスの資格情報に関連付けられている例外マッパーを設定します。</summary>
        <value>サービスの資格情報に関連付けられている例外マッパー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityConfiguration">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Configuration.IdentityConfiguration IdentityConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.IdentityConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Configuration.IdentityConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサービスの id の構成を設定します。</summary>
        <value>サービスの id の構成。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IssuedTokenAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.IssuedTokenServiceCredential IssuedTokenAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.IssuedTokenServiceCredential IssuedTokenAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.IssuedTokenAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.IssuedTokenServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このサービス用に現在発行されているトークン \(SAML など\) の認証設定を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.IssuedTokenServiceCredential" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 このプロパティにアクセスし、それを使用して追加プロパティを設定する方法を次のコードに示します。  
  
 [!code-csharp[c\_FederatedService\#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_federatedservice/cs/source.cs#2)]
 [!code-vb[c\_FederatedService\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_federatedservice/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Peer">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.PeerCredential Peer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.PeerCredential Peer" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.Peer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.PeerCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サービス上に構成されたピア トランスポート エンドポイントによって使用される、現在の資格情報の認証および準備の設定を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.PeerCredential" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecureConversationAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.SecureConversationServiceCredential SecureConversationAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.SecureConversationServiceCredential SecureConversationAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.SecureConversationAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.SecureConversationServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティで保護されたメッセージ交換で使用される現在の設定を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.SecureConversationServiceCredential" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスを使用して、セキュリティ コンテキスト トークン \(SCT\) のクッキー シリアル化のための既知のクレームの種類のリストと、クッキーの情報をエンコードしてセキュリティ保護するためのエンコーダーを指定します。  
  
   
  
## 例  
 このプロパティを使用して、サービスが使用する資格情報のインスタンスを取得する方法を次のコードに示します。  
  
 [!code-csharp[S\_UEWindowsServiceCredential\#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#2)]
 [!code-vb[S\_UEWindowsServiceCredential\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceCertificate">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.X509CertificateRecipientServiceCredential ServiceCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.X509CertificateRecipientServiceCredential ServiceCertificate" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.X509CertificateRecipientServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このサービスに関連付けられている現在の証明書を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.X509CertificateRecipientServiceCredential" /> インスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このプロパティによって返される <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> オブジェクトのメンバーを呼び出すことにより、使用する証明書を指定できます。  
  
 クライアント アプリケーション構成ファイルの [\<certificate\> for \<identity\>](http://msdn.microsoft.com/ja-jp/4aeccaf7-8f23-495c-aa5f-5bd8b5d4a10c) 要素を使用して、この値を設定することもできます。  
  
   
  
## 例  
 次のコードでは、サービスが使用する証明書を指定する方法を示します。  
  
 <xref:System.ServiceModel.ServiceHost> クラスを作成した後で、1 つの複雑なコード ステートメントによって次のことが行われます。  
  
-   <xref:System.ServiceModel.ServiceHostBase.Credentials%2A> プロパティを使用して、<xref:System.ServiceModel.Description.ServiceCredentials> のインスタンスにアクセスします。  
  
-   <xref:System.ServiceModel.Description.ServiceCredentials> インスタンスが <xref:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate%2A> を呼び出します。  
  
-   <xref:System.ServiceModel.Description.ServiceCredentials.ServiceCertificate%2A> プロパティが <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential> オブジェクトを返し、このオブジェクトで <xref:System.ServiceModel.Security.X509CertificateRecipientServiceCredential.SetCertificate%2A> メソッドが呼び出されます。  
  
 [!code-csharp[S\_UEServiceCredentials\#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueservicecredentials/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">サービスの説明。</param>
        <param name="serviceHostBase">サービス ホスト ベース。</param>
        <param name="endpoints">サービス エンドポイントのコレクション。</param>
        <param name="parameters">パラメーターのコレクション。</param>
        <summary>このインスタンスをバインディング パラメーターのコレクションに追加します。 これはインフラストラクチャ メソッドであり、直接呼び出すためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 一部のバインド要素は、ファクトリを作成するときに追加の情報にアクセスすることがあります。 このクラスは、この追加情報を含むオブジェクトのコレクションです。  
  
   
  
## 例  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">サービスの説明。</param>
        <param name="serviceHostBase">サービス ホスト ベース。</param>
        <summary>ディスパッチ動作を適用します。 これはインフラストラクチャ メソッドであり、直接呼び出すためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装されていません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceCredentials.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">サービスの説明。</param>
        <param name="serviceHostBase">サービス ホスト ベース。</param>
        <summary>サービスの説明を検証します。 これはインフラストラクチャ メソッドであり、直接呼び出すためのものではありません。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 実装されていません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseIdentityConfiguration">
      <MemberSignature Language="C#" Value="public bool UseIdentityConfiguration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseIdentityConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.UseIdentityConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得またはサービス資格情報は、id の構成を使用しているかどうかを設定します。</summary>
        <value>
          <see langword="True" /> サービス資格情報は、id の構成を使用している場合それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserNameAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordServiceCredential UserNameAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.UserNamePasswordServiceCredential UserNameAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.UserNameAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このサービスの現在のユーザー名\/パスワード認証設定を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このインスタンスで <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> や <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> などの <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> クラスのメンバーを呼び出すことにより、ユーザー名\/パスワード認証の設定を指定できます。  
  
   
  
## 例  
 このプロパティを使用して、サービスが使用する資格情報のインスタンスを取得する方法を次のコードに示します。  
  
 [!code-csharp[UserNamePasswordServiceCredential\#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsAuthentication">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.WindowsServiceCredential WindowsAuthentication { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.WindowsServiceCredential WindowsAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceCredentials.WindowsAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.WindowsServiceCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このサービスの現在の Windows 認証設定を取得します。</summary>
        <value>
          <see cref="T:System.ServiceModel.Security.WindowsServiceCredential" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスを使用して、<xref:System.ServiceModel.Security.WindowsServiceCredential.AllowAnonymousLogons%2A> プロパティの設定によって匿名の Windows ユーザーのアクセスを許可するかどうかを指定します。 また、ユーザーが属するグループの情報を <xref:System.IdentityModel.Policy.AuthorizationContext> プロパティの設定によって <xref:System.ServiceModel.Security.WindowsServiceCredential.IncludeWindowsGroups%2A> に含めるかどうかも指定できます。  
  
   
  
## 例  
 このプロパティを使用して、サービスが使用する資格情報のインスタンスを取得する方法を次のコードに示します。  
  
 [!code-csharp[S\_UEWindowsServiceCredential\#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uewindowsservicecredential/cs/source.cs#1)]
 [!code-vb[S\_UEWindowsServiceCredential\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uewindowsservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>