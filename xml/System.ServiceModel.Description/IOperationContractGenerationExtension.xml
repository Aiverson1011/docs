<Type Name="IOperationContractGenerationExtension" FullName="System.ServiceModel.Description.IOperationContractGenerationExtension">
  <TypeSignature Language="C#" Value="public interface IOperationContractGenerationExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationContractGenerationExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationContractGenerationExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>コントラクトの生成時に呼び出され、操作用に生成されるコードを変更するために使用できるメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 コントラクトまたはエンドポイントがコードにコンパイルされるときに生成されるコードを変更できるようにするには、操作の動作 \(<xref:System.ServiceModel.Description.IOperationContractGenerationExtension> 型\) に <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=fullName> インターフェイスを実装します。 通常、カスタム <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> は、<xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> または <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName> 呼び出し中に、カスタム操作の動作を <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=fullName> コレクションに挿入します。  
  
   
  
## 例  
 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> 名前空間を使用して文字列を操作のコメント セクションに追加する <xref:System.CodeDom?displayProperty=fullName> メソッドの実装を次のコード例に示します。  
  
  
  
 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> の呼び出し中に、<xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> を実装する操作の動作が <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName> コレクションにどのように挿入されるかを次のコード例に示します。  
  
 [!code-csharp[C\_CustomWSDLExtensions\#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 最後に、Visual Basic および C\# の両方で生成される操作を次のコード例に示します。  
  
 [!code-csharp[C\_CustomWSDLExtensions\#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C\_CustomWSDLExtensions\#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateOperation">
      <MemberSignature Language="C#" Value="public void GenerateOperation (System.ServiceModel.Description.OperationContractGenerationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateOperation(class System.ServiceModel.Description.OperationContractGenerationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Description.OperationContractGenerationContext" />
      </Parameters>
      <Docs>
        <param name="context">生成される操作を変更するために必要な <see cref="N:System.CodeDom" /> 型を含む作業コンテキスト。</param>
        <summary>コントラクトの生成プロセスの前に Code Document Object Model を変更するために実装します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 通常、カスタム <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> は、<xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> または <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName> 呼び出し中に、カスタム操作の動作を <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=fullName> コレクションに挿入します。  
  
 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> メソッドは、コントラクトごとに 1 回呼び出されます。  
  
   
  
## 例  
 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> 名前空間を使用して文字列を操作のコメント セクションに追加する <xref:System.CodeDom?displayProperty=fullName> メソッドの実装を次のコード例に示します。  
  
  
  
 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> の呼び出し中に、<xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=fullName> を実装する操作の動作が <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=fullName> コレクションにどのように挿入されるかを次のコード例に示します。  
  
 [!code-csharp[C\_CustomWSDLExtensions\#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 最後に、Visual Basic および C\# の両方で生成される操作を次のコード例に示します。  
  
 [!code-csharp[C\_CustomWSDLExtensions\#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C\_CustomWSDLExtensions\#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>