<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> を使用してメソッドへのアクセスを制御するときの承認チェックのモードを設定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 メソッドに <xref:System.Security.Permissions.PrincipalPermissionAttribute> を適用する場合、このモードによって、アクセスの承認時に使用するロールのセットが指定されます。 既定では、この属性は Windows グループ \(`Administrator` または `Users` など\) を使用して、ユーザーが属している必要があるロールを指定します。  
  
 プログラムでモードを設定するには、`ServiceHost` クラスのインスタンスを作成し、その動作のコレクションから <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> を検索し、<xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> を適切な列挙値に設定します。 このプロパティを <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles> に設定する例を次に示します。  
  
 [!code-csharp[PrincipalPermissionMode\#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode\#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 次のコードに示すように、構成ファイルの [\<serviceAuthorization\> element](http://msdn.microsoft.com/ja-jp/18cddad5-ddcb-4839-a0ac-1d6f6ab783ca)に [serviceBehaviors section](http://msdn.microsoft.com/ja-jp/5aed9062-cc36-4b72-b9dd-a3018b8ffafc)を追加することにより、構成内で動作を設定することもできます。  
  
 [!code-csharp[PrincipalPermissionMode\#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode\#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 この列挙値は、<xref:System.Security.Permissions.PrincipalPermissionAttribute> 属性がメソッドに適用されたときのユーザーの承認方法に影響します。 次の例では、この属性をメソッドに適用し、ユーザーがコンピューターの Users グループに属することを要求します。 このコードは、<xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> が `UseWindowsGroup` \(既定の設定\) に設定されている場合にのみ機能します。  
  
 [!code-csharp[PrincipalPermissionMode\#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode\#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## UseAspNetRoles  
 <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles> 値は、すべての種類の資格情報に使用されます。 このモードを使用すると、[!INCLUDE[indigo1](~/includes/indigo1-md.md)] では ASP.NET ロール プロバイダーを使用した承認決定を行うことができます。  
  
 サービスの資格情報が X.509 証明書の場合は、次の例に示すように、`Name` の <xref:System.Security.Permissions.PrincipalPermissionAttribute> プロパティを、"サブジェクト" フィールドと "サムプリント" フィールドを連結した値で構成される文字列に設定できます。  
  
 [!code-csharp[PrincipalPermissionMode\#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode\#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 連結された文字列は、セミコロンと空白で区切られたサブジェクト値とサムプリント値で構成されます。  
  
 証明書の "サブジェクト" フィールドを null 文字列に設定することもできます。 この場合、次の例に示すように、`Name` プロパティをセミコロンの後に空白とサムプリントが続く値に設定できます。  
  
 [!code-csharp[PrincipalPermissionMode\#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode\#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 ASP.NET ロール プロバイダーが存在する場合は、<xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> プロパティをデータベースのロールに設定することもできます。 既定では、データベースは <xref:System.Web.Security.SqlRoleProvider> で表されます。 また、<xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> クラスの <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> プロパティを使用してカスタム ロール プロバイダーを設定することもできます。 ロールを `Administrators` に設定するコードを次に示します  ロール プロバイダーによって、ユーザー アカウントが該当のロールにマップされる必要があります。  
  
 [!code-csharp[PrincipalPermissionMode\#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode\#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)] ASP.NET ロール プロバイダーを参照してください [How To: Use Role Manager in ASP.NET 2.0](http://go.microsoft.com/fwlink/?LinkId=96692)します。  
  
 [!INCLUDE[crabout](~/includes/crabout-md.md)] および役割プロバイダーの使用方法[!INCLUDE[indigo2](~/includes/indigo2-md.md)]、「[How To: Use the ASP.NET Role Provider](http://msdn.microsoft.com/ja-jp/88d33a81-8ac7-48de-978c-5c5b1257951e)」を参照してください。  
  
## カスタム  
 このプロパティが <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom> に設定されている場合は、<xref:System.IdentityModel.Policy.IAuthorizationPolicy> クラスを実装するカスタム クラスも指定する必要があります。 このクラスは、`IPrincipal` コレクション内部の呼び出し元の <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> 表現を提供します。 次の例に示すように、このクラスでは、"Principal" 文字列キーを使用して `IPrincipal` インスタンスをプロパティのコレクションに格納する必要があります。  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## 背景  
 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] のロール ベース セキュリティにより、アプリケーションではコードを使用して承認を指定できます。<xref:System.Security.Permissions.PrincipalPermission> 要求を指定することにより、<xref:System.Threading.Thread.CurrentPrincipal%2A> は `PrincipalPermission` の要件を満たす必要があります。 たとえば、ユーザーが特定のロールまたはグループに属する必要があります。 それ以外の場合は、スレッドがコードの実行を承認されないため、例外が発生します。[!INCLUDE[indigo2](~/includes/indigo2-md.md)] には、<xref:System.ServiceModel.Description.PrincipalPermissionMode> に基づいて <xref:System.Threading.Thread.CurrentPrincipal%2A> を指定するための <xref:System.Security.SecurityContext> の一連の選択肢が用意されています。  
  
   
  
## 例  
 <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles> の指定方法の例を次に示します。  
  
 [!code-csharp[PrincipalPermissionMode\#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode\#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom> の指定方法の例を次に示します。  
  
 [!code-csharp[PrincipalPermissionMode\#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode\#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>常にユーザーが指定できるように、 <see cref="T:System.Security.Principal.IPrincipal" /> クラス <see cref="P:System.Threading.Thread.CurrentPrincipal" />します。</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Security.Principal.IPrincipal" /> のカスタム <see cref="P:System.Threading.Thread.CurrentPrincipal" /> クラスを指定できるようにします。</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> が設定されていません。</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> は、ASP.NET ロール プロバイダー \(<see cref="T:System.Web.Security.RoleProvider" />\) に基づいて設定されます。</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> は、Windows \(<see cref="T:System.Security.Principal.WindowsPrincipal" />\) に基づいて設定されます。 ユーザー ID が Windows アカウントに関連付けられていない場合、匿名の Windows が使用されます。</summary>
      </Docs>
    </Member>
  </Members>
</Type>