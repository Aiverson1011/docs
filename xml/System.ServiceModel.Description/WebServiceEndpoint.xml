<Type Name="WebServiceEndpoint" FullName="System.ServiceModel.Description.WebServiceEndpoint">
  <TypeSignature Language="C#" Value="public abstract class WebServiceEndpoint : System.ServiceModel.Description.ServiceEndpoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebServiceEndpoint extends System.ServiceModel.Description.ServiceEndpoint" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WebServiceEndpoint" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.ServiceEndpoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>固定の <see cref="T:System.ServiceModel.WebHttpBinding" /> バインディングを持つ標準エンドポイント。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 これは、public コンストラクターも protected コンストラクターもない抽象基本クラスであり、開発者によって拡張されることは想定されていません。<xref:System.ServiceModel.Description.WebHttpEndpoint> クラスおよび <xref:System.ServiceModel.Description.WebScriptEndpoint> クラス用の基本クラスです。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ContentTypeMapper">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.WebContentTypeMapper ContentTypeMapper { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.WebContentTypeMapper ContentTypeMapper" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.ContentTypeMapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.WebContentTypeMapper</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> に関連付けられている <see cref="T:System.ServiceModel.Description.WebServiceEndpoint" /> を取得または設定します。</summary>
        <value>Web コンテンツ タイプ マッパー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CrossDomainScriptAccessEnabled">
      <MemberSignature Language="C#" Value="public bool CrossDomainScriptAccessEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CrossDomainScriptAccessEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.CrossDomainScriptAccessEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.ServiceModel.Description.WebServiceEndpoint" /> に対してドメイン間スクリプト アクセスを有効にするかどうかを示す値を取得または設定します。</summary>
        <value>
          <see langword="true" /> かどうかはドメイン間スクリプト アクセスが有効になって、それ以外の場合 <see langword="false" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.HostNameComparisonMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>URI が一致した場合にサービスに到達するためにホスト名を使用するかどうかを示す値を取得または設定します。</summary>
        <value>URI で一致する場合にサービスに到達するためにホスト名を使用するかどうかを示す値。 既定値は <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" /> で、一致しているホスト名を無視します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定値が有効な <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> 値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.MaxBufferPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバイディングを使用するエンドポイントが必要とするバッファーを管理するバッファー マネージャーに割り当てるメモリの最大量を取得または設定します。</summary>
        <value>このバインディングで構成されるエンドポイントによって使用されるバッファーのプールの最大サイズ \(バイト単位\)。 既定値は 65,536 バイトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Channels.BufferManager> は、バッファー プールを使用することで、バッファーの使用コストを最小化しようとします。 バッファーは、チャネルから出てくるメッセージをサービスが処理するときに必要です。 メッセージの読み込み処理に十分なメモリがバッファー プールにない場合、<xref:System.ServiceModel.Channels.BufferManager> は、CLR ヒープから追加のメモリを割り当てる必要があります。これにより、ガベージ コレクションのオーバーヘッドが増加します。 CLR ガベージ ヒープから多大な割り当てが行われることは、バッファー プール サイズが小さすぎること、および <xref:System.ServiceModel.WebHttpBinding.MaxBufferPoolSize%2A> の制限を緩めて割り当てを増やすとパフォーマンスが向上する可能性があることを示します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.MaxBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>チャネルからメッセージを受け取るメッセージ バッファー マネージャーが使用するために割り当てられる最大メモリ量を取得または設定します。</summary>
        <value>メッセージ バッファー マネージャーが使用できるメモリの最大容量 \(バイト単位\)。 既定値は 524,288 \(0x80000\) バイトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.Channels.BufferManager> は、バッファー プールを使用することで、バッファーの使用コストを最小化します。 バッファーは、チャネルから出てくるメッセージをサービスが処理するときに必要です。 メッセージの読み込み処理に十分なメモリがバッファー プールにない場合、<xref:System.ServiceModel.Channels.BufferManager> は、CLR ヒープから追加のメモリを割り当てる必要があります。これにより、ガベージ コレクションのオーバーヘッドが増加します。 CLR ガベージ ヒープから多大な割り当てが行われることは、バッファー プール サイズが小さすぎること、および <xref:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize%2A> の制限を緩めて割り当てを増やすとパフォーマンスが向上する可能性があることを示します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値が 0 以下の値に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.MaxReceivedMessageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バインディングで処理可能なメッセージの最大サイズを取得または設定します。</summary>
        <value>バインドで処理されるメッセージの最大サイズ \(バイト単位\)。 既定値は 65,536 バイトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.ServiceModel.WebHttpBinding> を使用するサービスがワイヤ上で受信できるメッセージのサイズは、各メッセージに割り当てられたメモリの大きさに制限されます。 このメッセージ サイズの制限は、サービス拒否 \(DoS\) を受けないようにするためのものです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値が 0 未満です。</exception>
        <exception cref="T:System.ServiceModel.QuotaExceededException">メッセージが割り当てられた最大サイズを超えました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.ReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングを使用して設定されるエンドポイントにより処理可能な、SOAP メッセージの複雑さに対する制約を取得または設定します。</summary>
        <value>複雑さの制約。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 複雑さの制約は、メッセージの複雑さを使用してエンドポイント処理リソースを停滞させるサービス拒否 \(DOS\) 型の攻撃から保護します。 これらの制約とその既定値 \(バイト単位\) を公開するプロパティを次に示します。  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxDepth%2A> \= 32  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxStringContentLength%2A> \= 8192  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxArrayLength%2A> \= 16384  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxBytesPerRead%2A> \= 4096  
  
-   <xref:System.Xml.XmlDictionaryReaderQuotas.MaxNameTableCharCount%2A> \= 16384  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定値が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> のクォータ値は読み取り専用です。</exception>
        <exception cref="T:System.ArgumentException">必ず正のクォータ値を設定します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WebHttpSecurity Security { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WebHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.Security" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WebHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングで使用されるセキュリティ設定を取得します。</summary>
        <value>このバインディングで使用される <see cref="T:System.ServiceModel.WebHttpSecurity" />。 既定値は <see cref="F:System.ServiceModel.WebHttpSecurityMode.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 既定以外の種類のセキュリティを使用するには、<xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29> コンストラクターを使用します。  
  
> [!NOTE]
>  このプロパティを <xref:System.ServiceModel.WebHttpSecurityMode.TransportCredentialOnly> に設定し、HTTP を使用している場合は、プレーンテキストによる資格情報がネットワーク経由で送信されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.TransferMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このバインディングを使用して構成されたサービスが、メッセージ転送のストリーミング モードまたはバッファー モード \(あるいは両方のモード\) を使用するかどうかを示す値を取得または設定します。</summary>
        <value>バインディングで構成されたサービスがメッセージ転送のストリーム モードまたはバッファー モード \(あるいは両方のモード\) を使用するかどうかを示す <see cref="T:System.ServiceModel.TransferMode" /> 値。 既定値は <see cref="F:System.ServiceModel.TransferMode.Buffered" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 チャネルがメッセージの転送にストリーム配信モードとバッファー モードのどちらを使用するかを示す <xref:System.ServiceModel.TransferMode> の値。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">設定値が有効な <see cref="T:System.ServiceModel.TransferMode" /> 値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="WebEndpointType">
      <MemberSignature Language="C#" Value="protected abstract Type WebEndpointType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type WebEndpointType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.WebEndpointType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サービスのエンドポイントの種類を取得します。</summary>
        <value>Web サービスのエンドポイントの種類。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding WriteEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding WriteEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WebServiceEndpoint.WriteEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メッセージ テキストに使用される文字エンコーディングを取得または設定します。</summary>
        <value>使用される文字エンコーディング。 既定値は、<see cref="T:System.Text.UTF8Encoding" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">設定値が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>