<Type Name="BitVector32" FullName="System.Collections.Specialized.BitVector32">
  <TypeSignature Language="C#" Value="public struct BitVector32" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BitVector32 extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.BitVector32" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ブール値と小さい整数をメモリに 32 ビットで格納する単純な構造体を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Collections.Specialized.BitVector32> も効率的です <xref:System.Collections.BitArray> ブール値と小さい整数内部的に使用されるためです。 A <xref:System.Collections.BitArray> 必要に応じて、無制限に拡張できますが、クラスのインスタンスを必要とする、メモリやパフォーマンスのオーバーヘッドがあります。 これに対し、 <xref:System.Collections.Specialized.BitVector32> 32 ビットのみを使用します。  
  
 A <xref:System.Collections.Specialized.BitVector32> 両方がいずれかのセクションでは小さい整数のまたはブール値、ビット フラグを含む最新構造体を設定することができます。 A <xref:System.Collections.Specialized.BitVector32.Section> の中のウィンドウには、 <xref:System.Collections.Specialized.BitVector32> と最小値で指定された最大値を含めることができる連続するいくつかのビット数で構成され <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>します。 たとえば、1 ビットだけは、5 の最大値のセクションは、次の 3 つのビットで構成されますが、最大値が 1 のセクションをで構成されます。 作成することができます、 <xref:System.Collections.Specialized.BitVector32.Section> 、最大の値を Boolean として処理するために 1 はできるため、同じ整数とブール値を格納する <xref:System.Collections.Specialized.BitVector32>です。  
  
 一部のメンバーでもかまいません、 <xref:System.Collections.Specialized.BitVector32> として設定されたセクションでは、ビット フラグとして設定されているいずれかの他のメンバーを使用することができます。 など、 <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> プロパティのインデクサーは、 <xref:System.Collections.Specialized.BitVector32> セクションでは、として設定されていると <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> プロパティには、 <xref:System.Collections.Specialized.BitVector32> ビット フラグとして設定しました。<xref:System.Collections.Specialized.BitVector32.CreateMask%2A> 一連の個別のビットのアクセスに使用できるマスクを作成、 <xref:System.Collections.Specialized.BitVector32> は、ビット フラグとして設定します。  
  
 マスクを使用して、 <xref:System.Collections.Specialized.BitVector32> 設定のセクションでは予期しない結果を引き起こす可能性があります。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Collections.Specialized.BitVector32> ビット フラグのコレクションとして。  
  
 [!code-cpp[System.Collections.Specialized.BitVector32\_BitFlags\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CPP/bitvector32_bitflags.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32\_BitFlags\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/CS/bitvector32_bitflags.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32\_BitFlags\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_BitFlags/VB/bitvector32_bitflags.vb#1)]  
  
 次のコード例では、 <xref:System.Collections.Specialized.BitVector32> セクションのコレクションとして。  
  
 [!code-cpp[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.BitArray" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value">A <see cref="T:System.Collections.Specialized.BitVector32" /> コピーするデータを格納する構造体。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Collections.Specialized.BitVector32" /> 既存で表されるデータを含む構造体 <see cref="T:System.Collections.Specialized.BitVector32" /> 構造体。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、o \(1\) 操作です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BitVector32 (int data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.#ctor(System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="data" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">新しいデータを表す整数を <see cref="T:System.Collections.Specialized.BitVector32" />します。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.Collections.Specialized.BitVector32" /> 整数で表されるデータを含む構造体。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このコンス トラクターは、o \(1\) 操作です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>一連の個々 のビットを取得するために使用するマスク内の最初のマスクを作成、 <see cref="T:System.Collections.Specialized.BitVector32" /> は、ビット フラグとして設定します。</summary>
        <returns>最初のビット フラグを分離するマスク、 <see cref="T:System.Collections.Specialized.BitVector32" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用 `CreateMask()` 系列の最初のマスクを作成して `CreateMask(int)` 、後続のすべてのマスク。  
  
 複数のマスクは、同じビット フラグを参照してくださいを作成することができます。  
  
 結果として得られるマスク内の唯一の 1 つのビット フラグを分離し、 <xref:System.Collections.Specialized.BitVector32>です。 ビットごとの OR 演算を使用してで複数のビット フラグを分離するマスクを作成するマスクを組み合わせることができます、 <xref:System.Collections.Specialized.BitVector32>です。  
  
 マスクを使用して、 <xref:System.Collections.Specialized.BitVector32> 設定のセクションでは予期しない結果を引き起こす可能性があります。  
  
 このメソッドは、o \(1\) 操作です。  
  
   
  
## 例  
 次のコード例では、作成し、マスクを使用する方法を示します。  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMask">
      <MemberSignature Language="C#" Value="public static int CreateMask (int previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CreateMask(int32 previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateMask(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="previous" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="previous">前のビット フラグを示すマスク。</param>
        <summary>次の一連の個々 のビットを取得するために使用されるマスクで指定されたマスク追加マスクを作成、 <see cref="T:System.Collections.Specialized.BitVector32" /> は、ビット フラグとして設定します。</summary>
        <returns>ビットを分離するマスクを次のいずれかのフラグ <paramref name="previous" /> の指す <see cref="T:System.Collections.Specialized.BitVector32" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 使用 `CreateMask()` 系列の最初のマスクを作成して `CreateMask(int)` 、後続のすべてのマスク。  
  
 複数のマスクは、同じビット フラグを参照してくださいを作成することができます。  
  
 結果として得られるマスク内の唯一の 1 つのビット フラグを分離し、 <xref:System.Collections.Specialized.BitVector32>です。 ビットごとの OR 演算を使用してで複数のビット フラグを分離するマスクを作成するマスクを組み合わせることができます、 <xref:System.Collections.Specialized.BitVector32>です。  
  
 マスクを使用して、 <xref:System.Collections.Specialized.BitVector32> 設定のセクションでは予期しない結果を引き起こす可能性があります。  
  
 このメソッドは、o \(1\) 操作です。  
  
   
  
## 例  
 次のコード例では、作成し、マスクを使用する方法を示します。  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CPP/bitvector32_createmasks.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.CreateMasks\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/CS/bitvector32_createmasks.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.CreateMasks/VB/bitvector32_createmasks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="previous" /> 最後のビット フラグを示す、 <see cref="T:System.Collections.Specialized.BitVector32" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="maxValue">新しい最大値を指定する 16 ビット符号付き整数 <see cref="T:System.Collections.Specialized.BitVector32.Section" />します。</param>
        <summary>最初の作成 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 一連の小さい整数を格納しているセクションのです。</summary>
        <returns>A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 0 ~ 数を保持する <paramref name="maxValue" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Collections.Specialized.BitVector32.Section> の中のウィンドウには、 <xref:System.Collections.Specialized.BitVector32> と最小値で指定された最大値を含めることができる連続するいくつかのビット数で構成され <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>します。 たとえば、1 ビットだけは、5 の最大値のセクションは、次の 3 つのビットで構成されますが、最大値が 1 のセクションをで構成されます。 作成することができます、 <xref:System.Collections.Specialized.BitVector32.Section> 、最大の値を Boolean として処理するために 1 はできるため、同じ整数とブール値を格納する <xref:System.Collections.Specialized.BitVector32>です。  
  
 内のセクションに存在しない場合、 <xref:System.Collections.Specialized.BitVector32>, 、これらのセクションにもアクセスできます。 しかし、重複する部分が原因で予期しない結果。  
  
 このメソッドは、o \(1\) 操作です。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Collections.Specialized.BitVector32> セクションのコレクションとして。  
  
 [!code-cpp[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="maxValue" /> 1 より小さいです。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSection">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Specialized.BitVector32/Section CreateSection(int16 maxValue, valuetype System.Collections.Specialized.BitVector32/Section previous) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.BitVector32+Section</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxValue" Type="System.Int16" />
        <Parameter Name="previous" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="maxValue">新しい最大値を指定する 16 ビット符号付き整数 <see cref="T:System.Collections.Specialized.BitVector32.Section" />します。</param>
        <param name="previous">前の <see cref="T:System.Collections.Specialized.BitVector32.Section" /> で、 <see cref="T:System.Collections.Specialized.BitVector32" />です。</param>
        <summary>新たに作成 <see cref="T:System.Collections.Specialized.BitVector32.Section" /> に従って、指定した <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 一連の小さい整数を格納しているセクションのです。</summary>
        <returns>A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 0 ~ 数を保持する <paramref name="maxValue" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 A <xref:System.Collections.Specialized.BitVector32.Section> の中のウィンドウには、 <xref:System.Collections.Specialized.BitVector32> と最小値で指定された最大値を含めることができる連続するいくつかのビット数で構成され <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>します。 たとえば、1 ビットだけは、5 の最大値のセクションは、次の 3 つのビットで構成されますが、最大値が 1 のセクションをで構成されます。 作成することができます、 <xref:System.Collections.Specialized.BitVector32.Section> 、最大の値を Boolean として処理するために 1 はできるため、同じ整数とブール値を格納する <xref:System.Collections.Specialized.BitVector32>です。  
  
 後のセクションが存在しない場合 `previous` で、 <xref:System.Collections.Specialized.BitVector32>, 、これらのセクションにもアクセスできます。 しかし、重複する部分が原因で予期しない結果。  
  
 このメソッドは、o \(1\) 操作です。  
  
   
  
## 例  
 次のコード例では、 <xref:System.Collections.Specialized.BitVector32> セクションのコレクションとして。  
  
 [!code-cpp[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CPP/bitvector32_sections.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/CS/bitvector32_sections.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32\_Sections\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32_Sections/VB/bitvector32_sections.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="maxValue" /> 1 より小さいです。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="previous" /> 最終的なビットを含む、 <see cref="T:System.Collections.Specialized.BitVector32" />です。  
  
 または  
  
 <paramref name="maxValue" /> 後のビット数で表すことができる最大値よりも大きい <paramref name="previous" />します。</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public int Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Data" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>値を取得、 <see cref="T:System.Collections.Specialized.BitVector32" /> を表す整数。</summary>
        <value>値、 <see cref="T:System.Collections.Specialized.BitVector32" /> を表す整数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 個々 のセクションでは、の値にアクセスまたはビット フラグを使用する、 <xref:System.Collections.Specialized.BitVector32.Item%2A> プロパティです。  
  
 このプロパティ値を取得することは、O\(1\) 操作になります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">現在の <see cref="T:System.Collections.Specialized.BitVector32" /> と比較するオブジェクト。</param>
        <summary>指定したオブジェクトが等しいかどうかを判断、 <see cref="T:System.Collections.Specialized.BitVector32" />です。</summary>
        <returns>
          <see langword="true" /> 指定したオブジェクトが等しい場合、 <see cref="T:System.Collections.Specialized.BitVector32" />。 そうしないと、 <see langword="false" />です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 オブジェクト `o` に等しいと見なされます、 <xref:System.Collections.Specialized.BitVector32> 場合の種類 `o` と互換性のある、 <xref:System.Collections.Specialized.BitVector32> 型場合の値 `o` の値と等しい <xref:System.Collections.Specialized.BitVector32.Data%2A>します。  
  
 このメソッドは、o \(1\) 操作です。  
  
   
  
## 例  
 次のコード例に比較して、 <xref:System.Collections.Specialized.BitVector32> と他の <xref:System.Collections.Specialized.BitVector32> を使用して、 <xref:System.Int32>です。  
  
 [!code-cpp[System.Collections.Specialized.BitVector32.Equals\#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CPP/bitvector32_equals.cpp#1)]
 [!code-csharp[System.Collections.Specialized.BitVector32.Equals\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/CS/bitvector32_equals.cs#1)]
 [!code-vb[System.Collections.Specialized.BitVector32.Equals\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.BitVector32.Equals/VB/bitvector32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ハッシュ関数として機能し、 <see cref="T:System.Collections.Specialized.BitVector32" />です。</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.BitVector32" /> のハッシュ コード。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ハッシュ コード、 <xref:System.Collections.Specialized.BitVector32> の値に基づく <xref:System.Collections.Specialized.BitVector32.Data%2A>します。 2 つのインスタンスの <xref:System.Collections.Specialized.BitVector32> の同じ値を持つ <xref:System.Collections.Specialized.BitVector32.Data%2A> も同じハッシュ コードが生成されます。  
  
 このメソッドは、o \(1\) 操作です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(valuetype System.Collections.Specialized.BitVector32/Section)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="section" Type="System.Collections.Specialized.BitVector32+Section" />
      </Parameters>
      <Docs>
        <param name="section">A <see cref="T:System.Collections.Specialized.BitVector32.Section" /> 取得または設定する値を格納します。</param>
        <summary>指定した格納されている値の設定を取得または <see cref="T:System.Collections.Specialized.BitVector32.Section" />です。</summary>
        <value>指定した格納されている値 <see cref="T:System.Collections.Specialized.BitVector32.Section" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Collections.Specialized.BitVector32.Item%2A> \[セクション\] プロパティには、 <xref:System.Collections.Specialized.BitVector32> セクションでは、として設定されていると <xref:System.Collections.Specialized.BitVector32.Item%2A> \[int\] プロパティには、 <xref:System.Collections.Specialized.BitVector32> ビット フラグとして設定しました。  
  
 A <xref:System.Collections.Specialized.BitVector32.Section> の中のウィンドウには、 <xref:System.Collections.Specialized.BitVector32> と最小値で指定された最大値を含めることができる連続するいくつかのビット数で構成され <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>します。 たとえば、1 ビットだけは、5 の最大値のセクションは、次の 3 つのビットで構成されますが、最大値が 1 のセクションをで構成されます。 作成することができます、 <xref:System.Collections.Specialized.BitVector32.Section> 、最大の値を Boolean として処理するために 1 はできるため、同じ整数とブール値を格納する <xref:System.Collections.Specialized.BitVector32>です。  
  
 C\# 言語キーワードを使用して実装する代わりに、インデクサーの定義、 <xref:System.Collections.Specialized.BitVector32.Item%2A> プロパティです。 Visual Basic は、<xref:System.Collections.Specialized.BitVector32.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。  
  
 このプロパティの値を取得する場合は、o \(1\) 操作です。プロパティの設定も、o \(1\) 操作です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateSection(System.Int16)" />
        <altmember cref="T:System.Collections.Specialized.BitVector32.Section" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public bool this[int bit] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.BitVector32.Item(System.Int32)" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit">取得または設定するビットを示すマスク。</param>
        <summary>指定したマスクが指すビット フラグの状態を取得または設定します。</summary>
        <value>
          <see langword="true" /> 場合は、指定したビット フラグがオン \(1\) です。それ以外の場合、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Collections.Specialized.BitVector32.Item%2A> \[セクション\] プロパティには、 <xref:System.Collections.Specialized.BitVector32> セクションでは、として設定されていると <xref:System.Collections.Specialized.BitVector32.Item%2A> \[int\] プロパティには、 <xref:System.Collections.Specialized.BitVector32> ビット フラグとして設定しました。  
  
 このプロパティを使用して、 <xref:System.Collections.Specialized.BitVector32> 設定のセクションでは予期しない結果を引き起こす可能性があります。  
  
 C\# 言語キーワードを使用して実装する代わりに、インデクサーの定義、 <xref:System.Collections.Specialized.BitVector32.Item%2A> プロパティです。 Visual Basic は、<xref:System.Collections.Specialized.BitVector32.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。  
  
 このプロパティの値を取得する場合は、o \(1\) 操作です。プロパティの設定も、o \(1\) 操作です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Specialized.BitVector32.CreateMask" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Collections.Specialized.BitVector32" /> を表す文字列を返します。</summary>
        <returns>現在の <see cref="T:System.Collections.Specialized.BitVector32" /> を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは <xref:System.Object.ToString%2A?displayProperty=fullName>です。  
  
 このメソッドは、o \(1\) 操作です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.ToString" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (System.Collections.Specialized.BitVector32 value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Collections.Specialized.BitVector32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Specialized.BitVector32" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Collections.Specialized.BitVector32" /> を表します。</param>
        <summary>表す、指定した文字列を返す <see cref="T:System.Collections.Specialized.BitVector32" />します。</summary>
        <returns>表す、指定した文字列 <see cref="T:System.Collections.Specialized.BitVector32" />します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 このメソッドは、o \(1\) 操作です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMask">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>一連の個々 のビットを取得するために使用するマスクを作成、 <see cref="T:System.Collections.Specialized.BitVector32" /> は、ビット フラグとして設定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="CreateSection">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>小さい整数が格納された一連のセクションを作成します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Collections.Specialized.BitVector32" /> 構造体の新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したセクションまたはビット フラグの値を取得または設定します。</summary>
      </Docs>
    </MemberGroup>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>表す文字列を返す、 <see cref="T:System.Collections.Specialized.BitVector32" />です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
  </Members>
</Type>