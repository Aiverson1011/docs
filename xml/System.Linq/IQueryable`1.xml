<Type Name="IQueryable&lt;T&gt;" FullName="System.Linq.IQueryable&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IQueryable&lt;out T&gt; : System.Collections.Generic.IEnumerable&lt;out T&gt;, System.Linq.IQueryable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryable`1&lt;+ T&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.Linq.IQueryable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IQueryable`1" />
  <AssemblyInfo>
    <AssemblyName>System.Linq.Expressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">データ ソース内のデータの型。</typeparam>
    <summary>データの型がわかっている特定のデータ ソースに対するクエリを評価する機能を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Linq.IQueryable%601> インターフェイスは、クエリ プロバイダーで実装するためです。  
  
 このインターフェイスの継承、 <xref:System.Collections.Generic.IEnumerable%601> インターフェイスのクエリを表している場合は、そのクエリの結果を列挙できるようにします。 列挙体に関連付けられている式ツリーを強制する、 <xref:System.Linq.IQueryable%601> 実行されるオブジェクト。 列挙可能な結果を返さないクエリの実行時に、 <xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29> メソッドが呼び出されます。  
  
 「式ツリーの実行」の定義は、クエリ プロバイダーに固有です。 などを基になるデータ ソースの適切なクエリ言語の式ツリーの変換が発生する可能性があります。  
  
 <xref:System.Linq.IQueryable%601> インターフェイスをポリモーフィックなクエリは有効にします。 つまり、ために対するクエリ、 `IQueryable` データ ソースは、式ツリーとして表されますが、異なる種類のデータ ソースに対して実行されることができます。  
  
 `static` \(`Shared` Visual basic\) クラスで定義されたメソッド <xref:System.Linq.Queryable> \(以外の <xref:System.Linq.Queryable.AsQueryable%2A>, 、<xref:System.Linq.Queryable.ThenBy%2A>, 、および <xref:System.Linq.Queryable.ThenByDescending%2A>\) を実装する型のオブジェクトを拡張、 <xref:System.Linq.IQueryable%601> インターフェイスです。  
  
 LINQ プロバイダーを作成する方法の詳細については、次を参照してください。 [LINQ: Building an IQueryable Provider](http://go.microsoft.com/fwlink/?LinkID=112370) MSDN ブログにします。  
  
   
  
## 例  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Linq.Queryable" />
  </Docs>
  <Members />
</Type>