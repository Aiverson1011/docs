<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey">キーの種類、 <see cref="T:System.Linq.IGrouping`2" />です。</typeparam>
    <typeparam name="TElement">値の型、 <see cref="T:System.Linq.IGrouping`2" />です。</typeparam>
    <summary>共通のキーを持つオブジェクトのコレクションを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.Linq.IGrouping%602> は、 <xref:System.Collections.Generic.IEnumerable%601> をさらに、キーを持ちます。 キー内の各値に共通する属性が表して、 <xref:System.Linq.IGrouping%602>です。  
  
 値、 <xref:System.Linq.IGrouping%602> は、かなりの要素として、 <xref:System.Collections.Generic.IEnumerable%601> にアクセスします。 などを使用して値にアクセスすることができます、 `foreach` で [!INCLUDE[csprcs](~/includes/csprcs-md.md)] または `For Each` で [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] を反復処理するループ、 <xref:System.Linq.IGrouping%602> オブジェクトです。 例」のセクションには、キーと値の両方にアクセスする方法を示すコード例が含まれています、 <xref:System.Linq.IGrouping%602> オブジェクトです。  
  
 <xref:System.Linq.IGrouping%602> 型を使って、 <xref:System.Linq.Enumerable.GroupBy%2A> 標準クエリ演算子メソッドは、型の要素のシーケンスを返す <xref:System.Linq.IGrouping%602>します。  
  
   
  
## 例  
 次の例では、使用する方法、 <xref:System.Linq.IGrouping%602> オブジェクトです。  
  
 この例では <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> の配列で呼び出される <xref:System.Reflection.MemberInfo> によって返されるオブジェクト <xref:System.Type.GetMembers%2A>します。<xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> 値に基づいて、オブジェクトをグループ化、 <xref:System.Reflection.MemberInfo.MemberType%2A> プロパティです。 一意の各値 <xref:System.Reflection.MemberInfo.MemberType%2A> の配列に <xref:System.Reflection.MemberInfo> オブジェクトが新しいキーとなります <xref:System.Linq.IGrouping%602> オブジェクト、および <xref:System.Reflection.MemberInfo> をそのキーのフォームを持つオブジェクト、 <xref:System.Linq.IGrouping%602> 値のオブジェクトのシーケンス。  
  
 最後に、 <xref:System.Linq.Enumerable.First%2A> メソッドのシーケンスで呼び出されます <xref:System.Linq.IGrouping%602> 1 つ目を取得するオブジェクト <xref:System.Linq.IGrouping%602> オブジェクトです。  
  
 例では、出力のキー、 <xref:System.Linq.IGrouping%602> オブジェクトおよび <xref:System.Reflection.MemberInfo.Name%2A> 内の各値のプロパティ、 <xref:System.Linq.IGrouping%602> 値のオブジェクトのシーケンス。 アクセスすることに注意して、 <xref:System.Linq.IGrouping%602> オブジェクトの一連の値は、単に使用する、 <xref:System.Linq.IGrouping%602> 変数自体です。  
  
 [!code-csharp[System.Linq.IGrouping\#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping\#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キーを取得、 <see cref="T:System.Linq.IGrouping`2" />です。</summary>
        <value>キー、 <see cref="T:System.Linq.IGrouping`2" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 キー、 <xref:System.Linq.IGrouping%602> 内の各値に共通する属性を表す、 <xref:System.Linq.IGrouping%602>です。  
  
   
  
## 例  
 次の例では、使用して、 <xref:System.Linq.IGrouping%602.Key%2A> プロパティごとにラベルを付ける <xref:System.Linq.IGrouping%602> オブジェクトのシーケンスの <xref:System.Linq.IGrouping%602> オブジェクトです。<xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> メソッドを使用してのシーケンスを取得する <xref:System.Linq.IGrouping%602> オブジェクトです。`foreach` で [!INCLUDE[csprcs](~/includes/csprcs-md.md)] または `For Each` で [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] ループ反復処理して、各 <xref:System.Linq.IGrouping%602> オブジェクト、そのキーとが含まれている値の数を出力します。  
  
 [!code-csharp[System.Linq.IGrouping\#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping\#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>