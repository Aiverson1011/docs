<Type Name="CodeSnippetTypeMember" FullName="System.CodeDom.CodeSnippetTypeMember">
  <TypeSignature Language="C#" Value="public class CodeSnippetTypeMember : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeSnippetTypeMember extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeSnippetTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>リテラルのコードを使用して型のメンバーを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.CodeDom.CodeSnippetTypeMember> 変更しなくても、ソースに直接含まれているリテラルのコードを使用して型のメンバーを表すことができます。 型の宣言では、このコードを含めることができます。  
  
 A <xref:System.CodeDom.CodeSnippetTypeMember> を文字列としての元の形式で正確に、コードのセクションを格納します。 CodeDOM は、リテラルのコード フラグメントを変換できません。 リテラルのコードが格納され、元の形式で出力します。 リテラルのコードが含まれる codeDOM オブジェクトは、開発者が既に対象言語でコードをカプセル化できるように提供されます。  
  
 <xref:System.CodeDom.CodeSnippetTypeMember.Text%2A> プロパティには、型メンバーのリテラルのコードが含まれています。  
  
   
  
## 例  
 次の例では、使用、 <xref:System.CodeDom.CodeSnippetTypeMember> 文字列の形式でリテラルのコードを格納するクラス。 このコード例が示されている例の一部は、 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> メソッドです。  
  
 [!code-csharp[CodeDom\_GenerateCodeFromMember\#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom\_GenerateCodeFromMember\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetTypeMember ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetTypeMember.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeSnippetTypeMember (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeSnippetTypeMember.#ctor(System.String)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">型のメンバーのリテラルのコード フラグメントです。</param>
        <summary>新しいインスタンスを初期化、 <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> クラスの指定したテキストを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 例  
 次の例では、使用、 <xref:System.CodeDom.CodeSnippetTypeMember.%23ctor%2A> のインスタンスを作成するコンス トラクター、 <xref:System.CodeDom.CodeSnippetTypeMember> クラスです。 このコード例が示されている例の一部は、 <xref:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember%2A> メソッドです。  
  
 [!code-csharp[CodeDom\_GenerateCodeFromMember\#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/cs/program.cs#3)]
 [!code-vb[CodeDom\_GenerateCodeFromMember\#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_GenerateCodeFromMember/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeSnippetTypeMember.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得または型のメンバーのリテラルのコードを設定します。</summary>
        <value>型のメンバーのリテラルのコード フラグメントです。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.CodeDom.CodeSnippetTypeMember" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
  </Members>
</Type>