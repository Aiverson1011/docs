<Type Name="CodeBinaryOperatorType" FullName="System.CodeDom.CodeBinaryOperatorType">
  <TypeSignature Language="C#" Value="public enum CodeBinaryOperatorType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed CodeBinaryOperatorType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeBinaryOperatorType" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サポートされているバイナリ演算子の識別子を定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 <xref:System.CodeDom.CodeBinaryOperatorType> 二項演算子の最も一般的な種類の識別子を定義します。 これらの演算子の識別子が使用される <xref:System.CodeDom.CodeBinaryOperatorExpression> 各式の演算子の種類を指定します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeBinaryOperatorExpression" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="Add" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Add = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Add" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>加算演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="Assign" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Assign = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Assign" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>代入演算子。</summary>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="BitwiseAnd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseAnd = int32(10)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BitwiseAnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビット処理 and 演算子。</summary>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="BitwiseOr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BitwiseOr = int32(9)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BitwiseOr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ビット演算子 or 演算子。</summary>
      </Docs>
    </Member>
    <Member MemberName="BooleanAnd">
      <MemberSignature Language="C#" Value="BooleanAnd" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanAnd = int32(12)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BooleanAnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ブール型 and 演算子。 これは、ショート サーキット演算子を表します。 ショート サーキット演算子がのみ評価が正しい値を返す前に必要に応じて多くの式。</summary>
      </Docs>
    </Member>
    <Member MemberName="BooleanOr">
      <MemberSignature Language="C#" Value="BooleanOr" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType BooleanOr = int32(11)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.BooleanOr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ブール型 or 演算子。 これは、ショート サーキット演算子を表します。 ショート サーキット演算子がのみ評価が正しい値を返す前に必要に応じて多くの式。</summary>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="Divide" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Divide = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Divide" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>除算演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="GreaterThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThan = int32(15)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.GreaterThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>大なり演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="GreaterThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType GreaterThanOrEqual = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.GreaterThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>以上演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="IdentityEquality">
      <MemberSignature Language="C#" Value="IdentityEquality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityEquality = int32(7)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.IdentityEquality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>恒等演算子と同じです。</summary>
      </Docs>
    </Member>
    <Member MemberName="IdentityInequality">
      <MemberSignature Language="C#" Value="IdentityInequality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType IdentityInequality = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.IdentityInequality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>等しくない演算子の id。</summary>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="LessThan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType LessThan = int32(13)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.LessThan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>小なり演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="LessThanOrEqual" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType LessThanOrEqual = int32(14)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.LessThanOrEqual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>小さいまたは等しい演算子。</summary>
      </Docs>
    </Member>
    <Member MemberName="Modulus">
      <MemberSignature Language="C#" Value="Modulus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Modulus = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Modulus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>剰余演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="Multiply" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Multiply = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Multiply" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>乗算演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="Subtract" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType Subtract = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.Subtract" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>減算演算子です。</summary>
      </Docs>
    </Member>
    <Member MemberName="ValueEquality">
      <MemberSignature Language="C#" Value="ValueEquality" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.CodeDom.CodeBinaryOperatorType ValueEquality = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.CodeDom.CodeBinaryOperatorType.ValueEquality" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeBinaryOperatorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>等値演算子。</summary>
      </Docs>
    </Member>
  </Members>
</Type>