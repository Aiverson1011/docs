<Type Name="IFragmentCapableXmlDictionaryWriter" FullName="System.Xml.IFragmentCapableXmlDictionaryWriter">
  <TypeSignature Language="C#" Value="public interface IFragmentCapableXmlDictionaryWriter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFragmentCapableXmlDictionaryWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.IFragmentCapableXmlDictionaryWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Xml.XmlDictionaryWriter" /> で実装されると XML フラグメントの処理を可能にする、プロパティとメソッドを含みます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## 解説  
 このクラスでは、出力の一部 \(フラグメント\) をそれが作成されたストリームとは異なるストリームにリダイレクトし、リダイレクトによってキャプチャされたそのようなフラグメントを後で同じライターのメイン ストリームに直接挿入して戻すという、<xref:System.Xml.XmlDictionaryWriter> の機能に関連するプロパティとメソッドが定義されています。  
  
   
  
## 例  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanFragment">
      <MemberSignature Language="C#" Value="public bool CanFragment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFragment" />
      <MemberSignature Language="DocId" Value="P:System.Xml.IFragmentCapableXmlDictionaryWriter.CanFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この <see cref="T:System.Xml.XmlDictionaryWriter" /> が XML フラグメントを処理できるかどうか示す値を取得します。</summary>
        <value>この <see langword="true" /> が XML フラグメントを処理できる場合は <see cref="T:System.Xml.XmlDictionaryWriter" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Returns t**languageKeyword tag is not supported!!!!**  
ue if the writer that implements this interface can generate and accept XML fragments.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndFragment">
      <MemberSignature Language="C#" Value="public void EndFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IFragmentCapableXmlDictionaryWriter.EndFragment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>XML フラグメントの処理を終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 Stops redirecting output to the stream supplied by the matching **languageKeyword tag is not supported!!!!**  
 call. After this call, the XML writing output goes to the stream originally used by the writer before the **languageKeyword tag is not supported!!!!**  
 call.  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFragment">
      <MemberSignature Language="C#" Value="public void StartFragment (System.IO.Stream stream, bool generateSelfContainedTextFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartFragment(class System.IO.Stream stream, bool generateSelfContainedTextFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IFragmentCapableXmlDictionaryWriter.StartFragment(System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="generateSelfContainedTextFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">書き込まれるストリーム。</param>
        <param name="generateSelfContainedTextFragment">フラグメントの外部で宣言している名前空間をフラグメントの内部で使用しているときに、その名前空間を再宣言する場合は <see langword="true" />。名前空間を再宣言しない場合は <see langword="false" />。</param>
        <summary>XML フラグメントの処理を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `EndFragment` が呼び出されるまで、指定されたストリームへの XML 出力の書き込みのリダイレクトを一時的に開始します。`generateSelfContainedTextFragment` が `true` の場合は、リダイレクトされる XML 出力は常にテキスト XML であり、名前空間のコンテキストに関して自己完結しています。`StartFragment`\(\) の呼び出しは入れ子にできません。  
  
   
  
## 例  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteFragment">
      <MemberSignature Language="C#" Value="public void WriteFragment (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFragment(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.IFragmentCapableXmlDictionaryWriter.WriteFragment(System.Byte[],System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">書き込むバッファー。</param>
        <param name="offset">
          <c>buffer</c> の書き込み開始位置。</param>
        <param name="count">
          <c>buffer</c> に書き込むバイト数。</param>
        <summary>基になるライターのストリームに、XML フラグメントを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## 解説  
 `StartFragment` と `EndFragment` の間でキャプチャされたフラグメントを書き込み、XmlDictionaryWriter のメイン ストリームにコールバックします。 書き込まれるフラグメントは、提供された `count` のインデックス `offset` からの `buffer` バイトです。 提供されるフラグメントがこのライター インスタンスを使用してキャプチャされたものでない場合の動作は定義されていません。  
  
   
  
## 例  
  
```  
MemoryStream stream = new MemoryStream();  
MemoryStream fragmentStream = new MemoryStream();  
XmlDictionaryWriter writer = XmlDictionaryWriter.CreateTextWriter(stream);  
IXmlFragmentCapableXmlDictionaryWriter fragmentWriter = writer as IXmlFragmentCapableXmlDictionaryWriter;  
if (fragmentWriter == null || !fragmentWriter.CanFragment)  
{  
Console.WriteLine("This writer doesn't support fragments");  
return;  
}  
writer.WriteStartElement("Root");  
fragmentWriter.StartFragment(fragmentStream, false);  
writer.WriteStartElement("Body");  
writer.WriteString("This is my body");  
writer.WriteEndElement();  
fragmentWriter.EndFragment();  
writer.WriteStartElement("CharsInTheBody");  
writer.WriteValue(fragmentStream.Length);  
writer.WriteEndElement();  
fragmentWriter.WriteFragment(fragmentStream.GetBuffer(), 0, (int)fragmentStream.Length);  
writer.WriteEndElement(); // Root  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>